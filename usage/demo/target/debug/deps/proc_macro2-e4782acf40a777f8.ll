; ModuleID = 'proc_macro2.c933bdbf-cgu.0'
source_filename = "proc_macro2.c933bdbf-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"alloc::string::String" = type { %"alloc::vec::Vec<u8>" }
%"alloc::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>" = type { %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>", i64 }
%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>" = type { { i32*, i32* }, i64 }
%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>" = type { %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>", i64 }
%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>" = type { { i64*, i64* }, i64 }
%"alloc::vec::Vec<TokenTree>" = type { { i64*, i64 }, i64 }
%TokenTree = type { i32, [11 x i32] }
%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>" = type { {}, %"alloc::vec::drain::Drain<proc_macro::TokenTree>" }
%"alloc::vec::drain::Drain<proc_macro::TokenTree>" = type { i64, i64, { i32*, i32* }, i64* }
%"core::option::Option<TokenTree>" = type { i32, [11 x i32] }
%"alloc::vec::into_iter::IntoIter<TokenTree>" = type { %"core::marker::PhantomData<TokenTree>", %"alloc::alloc::Global", i64*, i64, %TokenTree*, %TokenTree* }
%"core::marker::PhantomData<TokenTree>" = type {}
%"alloc::alloc::Global" = type {}
%"core::mem::manually_drop::ManuallyDrop<TokenTree>" = type { %TokenTree }
%"core::mem::maybe_uninit::MaybeUninit<TokenTree>" = type { [6 x i64] }
%"core::option::Option<TokenTree>::Some" = type { %TokenTree }
%"core::option::Option<usize>::Some" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<()>::Break" = type { [1 x i8], {} }
%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>" = type { %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>" }
%"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>" = type { [2 x i64], {}*, [2 x i64] }
%"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>" = type { i32, [1 x i32] }
%"core::iter::sources::once::Once<proc_macro::TokenStream>" = type { %"core::option::IntoIter<proc_macro::TokenStream>" }
%"core::option::IntoIter<proc_macro::TokenStream>" = type { %"core::option::Item<proc_macro::TokenStream>" }
%"core::option::Item<proc_macro::TokenStream>" = type { %"core::option::Option<proc_macro::TokenStream>" }
%"core::option::Option<proc_macro::TokenStream>" = type { i32 }
%"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some" = type { [1 x i32], %"core::iter::sources::once::Once<proc_macro::TokenStream>" }
%"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>::Some" = type { %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>" }
%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>" = type { %"core::str::iter::CharIndices", { i64, i32 } }
%"core::str::iter::CharIndices" = type { i64, { i8*, i8* } }
%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>" = type { { i8*, i8* }, i32, [1 x i32] }
%"proc_macro::TokenStream" = type { %"proc_macro::bridge::client::TokenStream" }
%"proc_macro::bridge::client::TokenStream" = type { i32 }
%"core::option::Option<(usize, u8)>" = type { i64, [2 x i64] }
%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>" = type { { i8*, i8* }, i64 }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u8>::Continue" = type { [1 x i8], i8 }
%"core::option::Option<(usize, u8)>::Some" = type { [1 x i64], { i64, i8 } }
%"proc_macro::TokenTree" = type { i32, [1 x i32] }
%"proc_macro::bridge::client::TokenStreamBuilder" = type { i32 }
%"alloc::vec::Vec<proc_macro::TokenTree>" = type { { i32*, i64 }, i64 }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<(), alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>" = type { [32 x i8], i8, [7 x i8] }
%"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Err" = type { %"parse::Reject" }
%"parse::Reject" = type {}
%"core::result::Result<TokenStream, LexError>" = type { i8, [47 x i8] }
%"core::result::Result<TokenStream, LexError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<(), core::fmt::Error>::Err" = type { [1 x i8], %"core::fmt::Error" }
%"core::fmt::Error" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::alloc::AllocError" = type {}
%"core::result::Result<imp::Literal, imp::LexError>" = type { i8, [39 x i8] }
%"core::result::Result<imp::Literal, imp::LexError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<parse::Cursor, parse::Reject>::Err" = type { %"parse::Reject" }
%"core::result::Result<imp::TokenStream, imp::LexError>" = type { i8, [47 x i8] }
%"core::result::Result<imp::TokenStream, imp::LexError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<(parse::Cursor, Punct), parse::Reject>" = type { [4 x i32], i32, [3 x i32] }
%"core::result::Result<(parse::Cursor, Punct), parse::Reject>::Err" = type { %"parse::Reject" }
%"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>" = type { {}*, [4 x i64] }
%"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>::Err" = type { %"parse::Reject" }
%"core::result::Result<(parse::Cursor, Ident), parse::Reject>" = type { [4 x i32], i32, [9 x i32] }
%"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Err" = type { %"parse::Reject" }
%"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>" = type { {}*, [4 x i64] }
%"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Err" = type { %"parse::Reject" }
%"[closure@std::panicking::begin_panic<&str>::{closure#0}]" = type { { [0 x i8]*, i64 }, %"core::panic::location::Location"* }
%"std::sync::once::Once" = type { %"core::marker::PhantomData<*const std::sync::once::Waiter>", %"core::sync::atomic::AtomicUsize" }
%"core::marker::PhantomData<*const std::sync::once::Waiter>" = type {}
%"core::sync::atomic::AtomicUsize" = type { i64 }
%"core::option::Option<fn() {detection::initialize}>::Some" = type { [1 x i8], {} }
%"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>" = type { i32, [5 x i32] }
%"core::result::Result<proc_macro::TokenStream, imp::LexError>" = type { i8, [7 x i8] }
%"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>" = type { %"core::result::Result<proc_macro::TokenStream, imp::LexError>" }
%"std::panicking::r#try::Data<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:80], core::result::Result<proc_macro::TokenStream, imp::LexError>>" = type { [2 x i64] }
%"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Err" = type { [1 x i64], { {}*, [3 x i64]* } }
%"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok" = type { [1 x i32], %"core::result::Result<proc_macro::TokenStream, imp::LexError>" }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"fallback::Span" = type {}
%Ident = type { %"core::marker::PhantomData<marker::ProcMacroAutoTraits>", %"imp::Ident" }
%"core::marker::PhantomData<marker::ProcMacroAutoTraits>" = type {}
%"imp::Ident" = type { i32, [9 x i32] }
%"fallback::Ident" = type { %"fallback::Span", %"alloc::string::String", i8, [7 x i8] }
%"fallback::TokenStream" = type { %"alloc::vec::Vec<TokenTree>" }
%"core::str::pattern::MultiCharEqPattern<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]" = type {}
%"core::fmt::Opaque" = type {}
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"core::fmt::builders::DebugList" = type { %"core::fmt::builders::DebugInner" }
%"core::fmt::builders::DebugInner" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"core::fmt::rt::v1::Argument" = type { i64, %"core::fmt::rt::v1::FormatSpec" }
%"core::fmt::rt::v1::FormatSpec" = type { { i64, i64 }, { i64, i64 }, i32, i32, i8, [7 x i8] }
%Literal = type { %"core::marker::PhantomData<marker::ProcMacroAutoTraits>", %"imp::Literal" }
%"imp::Literal" = type { i32, [7 x i32] }
%"proc_macro::LexError" = type {}
%"proc_macro::Literal" = type { %"proc_macro::bridge::client::Literal" }
%"proc_macro::bridge::client::Literal" = type { i32 }
%Span = type { %"core::marker::PhantomData<marker::ProcMacroAutoTraits>", %"imp::Span" }
%"imp::Span" = type { i32 }
%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>" = type { { i64*, i64 }, i64 }
%"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>::Ok" = type { { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" } }
%"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>" = type { [2 x i32] }
%"proc_macro::Span" = type { %"proc_macro::bridge::client::Span" }
%"proc_macro::bridge::client::Span" = type { i32 }
%"proc_macro::Group" = type { %"proc_macro::bridge::client::Group" }
%"proc_macro::bridge::client::Group" = type { i32 }
%Group = type { %"imp::Group" }
%"imp::Group" = type { i32, [9 x i32] }
%"std::path::PathBuf" = type { %"std::ffi::os_str::OsString" }
%"std::ffi::os_str::OsString" = type { %"std::sys::unix::os_str::Buf" }
%"std::sys::unix::os_str::Buf" = type { %"alloc::vec::Vec<u8>" }
%"proc_macro::TokenTree::Literal" = type { [1 x i32], %"proc_macro::Literal" }
%"proc_macro::TokenTree::Group" = type { [1 x i32], %"proc_macro::Group" }
%"TokenTree::Literal" = type { [1 x i64], %Literal }
%"TokenTree::Group" = type { [1 x i64], %Group }
%"TokenTree::Ident" = type { [1 x i64], %Ident }
%"imp::Group::Compiler" = type { [1 x i32], %"proc_macro::Group" }
%"imp::Group::Fallback" = type { [1 x i64], %"fallback::Group" }
%"fallback::Group" = type { %"fallback::Span", %"fallback::TokenStream", i8, [7 x i8] }
%"imp::Ident::Fallback" = type { [1 x i64], %"fallback::Ident" }
%"imp::Literal::Compiler" = type { [1 x i32], %"proc_macro::Literal" }
%"imp::Literal::Fallback" = type { [1 x i64], %"fallback::Literal" }
%"fallback::Literal" = type { %"fallback::Span", %"alloc::string::String" }
%"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<TokenTree>>" = type { %"alloc::vec::Vec<TokenTree>" }
%"core::mem::maybe_uninit::MaybeUninit<alloc::vec::Vec<TokenTree>>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenStream>" = type { %"proc_macro::TokenStream" }
%"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>" = type { [1 x i32] }
%"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>" = type { %"proc_macro::TokenTree" }
%"core::mem::manually_drop::ManuallyDrop<(Delimiter, alloc::vec::Vec<TokenTree>)>" = type { { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" } }
%"core::mem::maybe_uninit::MaybeUninit<(Delimiter, alloc::vec::Vec<TokenTree>)>" = type { [4 x i64] }
%"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::TokenStream>>" = type { %"core::option::Option<proc_macro::TokenStream>" }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>" = type { [1 x i32] }
%"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>" = type { [0 x i8] }
%"imp::TokenStream" = type { i64, [4 x i64] }
%"imp::TokenStream::Compiler" = type { [1 x i64], %"imp::DeferredTokenStream" }
%"imp::DeferredTokenStream" = type { %"alloc::vec::Vec<proc_macro::TokenTree>", %"proc_macro::TokenStream", [1 x i32] }
%"imp::TokenStream::Fallback" = type { [1 x i64], %"fallback::TokenStream" }
%"fallback::LexError" = type { %"fallback::Span" }
%"proc_macro::token_stream::IntoIter" = type { %"proc_macro::bridge::client::TokenStreamIter" }
%"proc_macro::bridge::client::TokenStreamIter" = type { i32 }
%"core::option::Option<proc_macro::TokenTree>" = type { i32, [1 x i32] }
%"core::option::Option<proc_macro::TokenTree>::Some" = type { %"proc_macro::TokenTree" }
%"core::option::Option<proc_macro::TokenStream>::Some" = type { %"proc_macro::TokenStream" }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[(Delimiter, alloc::vec::Vec<TokenTree>)]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[proc_macro::TokenTree]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[TokenTree]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<TokenTree>]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>]>" = type { [2 x i64] }
%"core::option::Option<u32>::Some" = type { [1 x i32], i32 }
%"core::str::pattern::CharSearcher" = type { { [0 x i8]*, i64 }, i64, i64, i64, i32, [4 x i8] }
%"core::option::Option<(usize, usize)>" = type { i64, [2 x i64] }
%"core::result::Result<fallback::TokenStream, fallback::LexError>" = type { {}*, [2 x i64] }
%"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>" = type { i32 }
%"core::str::pattern::TwoWaySearcher" = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%"core::str::pattern::SearchStep" = type { i64, [2 x i64] }
%"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]", { [0 x i8]*, i64 }, %"core::str::iter::CharIndices" }
%"core::str::pattern::SearchStep::Match" = type { [1 x i64], i64, i64 }
%"core::str::pattern::StrSearcher" = type { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, %"core::str::pattern::StrSearcherImpl" }
%"core::str::pattern::StrSearcherImpl" = type { i64, [8 x i64] }
%"core::char::EscapeDebug" = type { %"core::char::EscapeDefault" }
%"core::char::EscapeDefault" = type { %"core::char::EscapeDefaultState" }
%"core::char::EscapeDefaultState" = type { i32, [5 x i32] }
%"core::char::methods::EscapeDebugExtArgs" = type { i8, i8, i8 }
%"core::char::EscapeUnicode" = type { i64, i32, i8, [3 x i8] }
%"core::char::EscapeDefaultState::Backslash" = type { [1 x i32], i32 }
%"core::char::EscapeDefaultState::Unicode" = type { [1 x i64], %"core::char::EscapeUnicode" }
%"core::char::EscapeDefaultState::Char" = type { [1 x i32], i32 }
%"core::option::Option<core::fmt::Arguments>" = type { {}*, [5 x i64] }
%"[closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]" = type {}
%"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]>::{closure#0}]" = type { %"[closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::range::RangeFull" = type {}
%"core::ops::range::Bound<&usize>::Included" = type { [1 x i64], i64* }
%"core::ops::range::Bound<&usize>::Excluded" = type { [1 x i64], i64* }
%"core::option::Option<(usize, usize)>::Some" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<u8>::Some" = type { [1 x i8], i8 }
%"core::option::Option<Span>" = type { i32, [1 x i32] }
%"core::option::Option<imp::Span>" = type { i32, [1 x i32] }
%"core::option::Option<imp::Span>::Some" = type { [1 x i32], %"imp::Span" }
%"core::option::Option<Span>::Some" = type { [1 x i32], %Span }
%"core::result::Result<(usize, char), parse::Reject>::Err" = type { %"parse::Reject" }
%"core::result::Result<(usize, u8), parse::Reject>" = type { i64, [2 x i64] }
%"core::result::Result<(usize, u8), parse::Reject>::Err" = type { [8 x i8], %"parse::Reject" }
%"core::result::Result<(usize, u8), parse::Reject>::Ok" = type { [1 x i64], { i64, i8 } }
%"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::result::Result<usize, core::alloc::layout::LayoutError>::Err" = type { [8 x i8], %"core::alloc::layout::LayoutError" }
%"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<Literal, imp::LexError>" = type { i8, [39 x i8] }
%"core::result::Result<imp::Literal, imp::LexError>::Ok" = type { [1 x i64], %"imp::Literal" }
%"core::result::Result<Literal, imp::LexError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<Literal, imp::LexError>::Ok" = type { [1 x i64], %Literal }
%"core::result::Result<proc_macro::Literal, imp::LexError>" = type { i8, [7 x i8] }
%"core::result::Result<proc_macro::Literal, imp::LexError>::Ok" = type { [1 x i32], %"proc_macro::Literal" }
%"core::result::Result<proc_macro::Literal, imp::LexError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>::Ok" = type { %"proc_macro::TokenStream" }
%"core::result::Result<fallback::TokenStream, fallback::LexError>::Ok" = type { %"fallback::TokenStream" }
%"core::result::Result<Literal, LexError>" = type { i8, [39 x i8] }
%"core::result::Result<Literal, LexError>::Ok" = type { [1 x i64], %Literal }
%"core::result::Result<Literal, LexError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok" = type { [8 x i8], {} }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<imp::TokenStream, LexError>" = type { i8, [47 x i8] }
%"core::result::Result<imp::TokenStream, imp::LexError>::Ok" = type { [1 x i64], %"imp::TokenStream" }
%"core::result::Result<imp::TokenStream, LexError>::Ok" = type { [1 x i64], %"imp::TokenStream" }
%"core::result::Result<imp::TokenStream, LexError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<proc_macro::Literal, proc_macro::LexError>" = type { i32 }
%"core::result::Result<proc_macro::Literal, proc_macro::LexError>::Ok" = type { %"proc_macro::Literal" }
%"core::result::Result<proc_macro::TokenStream, imp::LexError>::Ok" = type { [1 x i32], %"proc_macro::TokenStream" }
%"core::result::Result<proc_macro::TokenStream, imp::LexError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"proc_macro::Punct" = type { %"proc_macro::bridge::client::Punct" }
%"proc_macro::bridge::client::Punct" = type { i32 }
%Punct = type { i32, %Span, i8, [3 x i8] }
%"proc_macro::Ident" = type { %"proc_macro::bridge::client::Ident" }
%"proc_macro::bridge::client::Ident" = type { i32 }
%"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>" = type { i8, [31 x i8] }
%"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>::Some" = type { { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { {}*, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"proc_macro::TokenTree::Ident" = type { [1 x i32], %"proc_macro::Ident" }
%"proc_macro::TokenTree::Punct" = type { [1 x i32], %"proc_macro::Punct" }
%"core::fmt::builders::DebugTuple" = type { %"core::fmt::Formatter"*, i64, i8, i8, [6 x i8] }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, fallback::Span>::Continue" = type { [1 x i8], %"fallback::Span" }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>" = type { i32 }
%"core::option::Option<proc_macro::Span>" = type { i32 }
%"core::option::Option<proc_macro::Span>::Some" = type { %"proc_macro::Span" }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>::Continue" = type { %"proc_macro::Span" }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>" = type { i32, [1 x i32] }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>::Continue" = type { %"proc_macro::TokenTree" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>" = type { [4 x i32], i32, [9 x i32] }
%"core::result::Result<core::convert::Infallible, parse::Reject>::Err" = type { %"parse::Reject" }
%"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Ok" = type { { { i8*, i64 }, %Ident } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>::Continue" = type { { { i8*, i64 }, %Ident } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>::Break" = type { %"core::result::Result<core::convert::Infallible, parse::Reject>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>" = type { i8, [7 x i8] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Continue" = type { [1 x i32], %"proc_macro::TokenStream" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Break" = type { [1 x i8], i8 }
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break" = type { [8 x i8], %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" }
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break" = type { %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" }
%"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err" = type { %"core::fmt::Error" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Continue" = type { [1 x i8], {} }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Break" = type { [1 x i8], %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue" = type { [8 x i8], {} }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, char)>::Break" = type { %"core::result::Result<core::convert::Infallible, parse::Reject>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>" = type { [32 x i8], i8, [7 x i8] }
%"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Ok" = type { { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>::Continue" = type { { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>::Break" = type { %"core::result::Result<core::convert::Infallible, parse::Reject>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>" = type { i8, [47 x i8] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Continue" = type { [1 x i64], %"imp::TokenStream" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Break" = type { [1 x i8], i8 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>::Continue" = type { [1 x i64], { i64, i8 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>::Break" = type { [8 x i8], %"core::result::Result<core::convert::Infallible, parse::Reject>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>" = type { {}*, [3 x i64] }
%"core::result::Result<(parse::Cursor, &str), parse::Reject>" = type { {}*, [3 x i64] }
%"core::result::Result<(parse::Cursor, &str), parse::Reject>::Ok" = type { { { i8*, i64 }, { [0 x i8]*, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Continue" = type { { { i8*, i64 }, { [0 x i8]*, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Break" = type { %"core::result::Result<core::convert::Infallible, parse::Reject>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, parse::Cursor>::Break" = type { %"core::result::Result<core::convert::Infallible, parse::Reject>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>" = type { {}*, [2 x i64] }
%"core::result::Result<core::convert::Infallible, fallback::LexError>::Err" = type { %"fallback::LexError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>::Continue" = type { %"fallback::TokenStream" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>::Break" = type { %"core::result::Result<core::convert::Infallible, fallback::LexError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>" = type { {}*, [2 x i64] }
%"core::result::Result<fallback::Literal, fallback::LexError>" = type { {}*, [2 x i64] }
%"core::result::Result<fallback::Literal, fallback::LexError>::Ok" = type { %"fallback::Literal" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>::Continue" = type { %"fallback::Literal" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>::Break" = type { %"core::result::Result<core::convert::Infallible, fallback::LexError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>" = type { [4 x i32], i32, [1 x i32] }
%"core::result::Result<(parse::Cursor, char), parse::Reject>" = type { [4 x i32], i32, [1 x i32] }
%"core::result::Result<(parse::Cursor, char), parse::Reject>::Ok" = type { { { i8*, i64 }, i32, [1 x i32] } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>::Continue" = type { { { i8*, i64 }, i32, [1 x i32] } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>::Break" = type { %"core::result::Result<core::convert::Infallible, parse::Reject>::Err" }
%"core::str::pattern::StrSearcherImpl::TwoWay" = type { [1 x i64], %"core::str::pattern::TwoWaySearcher" }
%"core::str::pattern::StrSearcherImpl::Empty" = type { [1 x i64], %"core::str::pattern::EmptyNeedle" }
%"core::str::pattern::EmptyNeedle" = type { i64, i64, i8, i8, i8, [5 x i8] }
%"core::str::pattern::SearchStep::Reject" = type { [1 x i64], i64, i64 }
%"core::ops::control_flow::ControlFlow<()>::Continue" = type { [1 x i8], {} }
%"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break" = type { {} }
%"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Continue" = type { [1 x i8], {} }
%"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Break" = type { [1 x i8], %"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break" }
%"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>" = type { [4 x i32], i32, [11 x i32] }
%"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>::Ok" = type { { { i8*, i64 }, %TokenTree } }
%"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok" = type { { { i8*, i64 }, %"fallback::Literal" } }
%"core::result::Result<(parse::Cursor, Punct), parse::Reject>::Ok" = type { { { i8*, i64 }, %Punct, [1 x i32] } }
%"TokenTree::Punct" = type { [1 x i32], %Punct }
%"fallback::SourceFile" = type { %"std::path::PathBuf" }
%"core::fmt::builders::DebugStruct" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"imp::LexError::Compiler" = type { [1 x i8], %"proc_macro::LexError" }
%"imp::LexError::Fallback" = type { [1 x i8], %"fallback::LexError" }
%"imp::TokenTreeIter" = type { i32, [9 x i32] }
%"imp::TokenTreeIter::Fallback" = type { [1 x i64], %"alloc::vec::into_iter::IntoIter<TokenTree>" }
%"imp::TokenTreeIter::Compiler" = type { [1 x i32], %"proc_macro::token_stream::IntoIter" }
%"imp::Ident::Compiler" = type { [1 x i32], %"proc_macro::Ident" }
%"imp::Span::Compiler" = type { %"proc_macro::Span" }
%"imp::Span::Fallback" = type { %"fallback::Span" }
%TokenStream = type { %"core::marker::PhantomData<marker::ProcMacroAutoTraits>", %"imp::TokenStream" }
%"core::result::Result<TokenStream, LexError>::Ok" = type { [1 x i64], %TokenStream }
%"token_stream::IntoIter" = type { %"core::marker::PhantomData<marker::ProcMacroAutoTraits>", %"imp::TokenTreeIter" }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@alloc1302 = private unnamed_addr constant <{ [82 x i8] }> <{ [82 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/alloc/src/vec/into_iter.rs" }>, align 1
@alloc1303 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc1302, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\91\00\00\00\1B\00\00\00" }>, align 8
@alloc1304 = private unnamed_addr constant <{ [91 x i8] }> <{ [91 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/iter/adapters/enumerate.rs" }>, align 1
@alloc1305 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1304, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\000\00\00\00\09\00\00\00" }>, align 8
@str.0 = internal constant [28 x i8] c"attempt to add with overflow"
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, [0 x i8] }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr124drop_in_place$LT$std..sync..once..Once..call_once$LT$proc_macro2..detection..initialize$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5478942f25b80afeE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (void (i8**, { i64, i8 }*)* @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h86cff1f02ad58db4E" to i8*), i8* bitcast (void (i8**, { i64, i8 }*)* @"_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h8a5def87039816d6E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1310 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/std/src/sync/once.rs" }>, align 1
@alloc1311 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1310, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\06\01\00\002\00\00\00" }>, align 8
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, [0 x i8] }> <{ i8* bitcast (void ({ i8*, i64 }*)* @"_ZN4core3ptr77drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$$RF$str$GT$$GT$17h1455d367f15106c0E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast ({ {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17hc0187bfefdc2f72aE" to i8*), i8* bitcast ({ {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17hc8e3b38eb97eed2bE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }> <{ i8* bitcast (void (%"alloc::string::String"*)* @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E" to i8*), [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"alloc::string::String"*, [0 x i8]*, i64)* @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h2821c2fca6a3609bE" to i8*), i8* bitcast (i1 (%"alloc::string::String"*, i32)* @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h1e6bb7c6ae9f1e43E" to i8*), i8* bitcast (i1 (%"alloc::string::String"*, %"core::fmt::Arguments"*)* @_ZN4core3fmt5Write9write_fmt17h3aaba967388a2b5bE to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1336 = private unnamed_addr constant <{ [55 x i8] }> <{ [55 x i8] c"a Display implementation returned an error unexpectedly" }>, align 1
@alloc1448 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/alloc/src/string.rs" }>, align 1
@alloc1323 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1448, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00_\09\00\00\0E\00\00\00" }>, align 8
@vtable.4 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }> <{ i8* bitcast (void (%"alloc::string::String"**)* @"_ZN4core3ptr54drop_in_place$LT$$RF$mut$u20$alloc..string..String$GT$17h1c125322e7b3e87fE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"alloc::string::String"**, [0 x i8]*, i64)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h9c20d219f2b657ecE" to i8*), i8* bitcast (i1 (%"alloc::string::String"**, i32)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hcf34cec1ed7dacc5E" to i8*), i8* bitcast (i1 (%"alloc::string::String"**, %"core::fmt::Arguments"*)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h4dcca56e3e83f0f7E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.5 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%TokenTree*)* @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E" to i8*), [16 x i8] c"0\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%TokenTree*, %"core::fmt::Formatter"*)* @"_ZN59_$LT$proc_macro2..TokenTree$u20$as$u20$core..fmt..Debug$GT$3fmt17h36ba499e07833fcfE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1345 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc1346 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/fmt/mod.rs" }>, align 1
@alloc1347 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1346, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00k\01\00\00\0D\00\00\00" }>, align 8
@alloc1348 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/ptr/mod.rs" }>, align 1
@alloc1349 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1348, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\BE\02\00\00\0D\00\00\00" }>, align 8
@alloc1353 = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize" }>, align 1
@alloc1351 = private unnamed_addr constant <{ [81 x i8] }> <{ [81 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc1352 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1351, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\B7\01\00\00\09\00\00\00" }>, align 8
@alloc1358 = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/str/validations.rs" }>, align 1
@alloc1355 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1358, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\001\00\00\00$\00\00\00" }>, align 8
@alloc1357 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1358, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\008\00\00\00(\00\00\00" }>, align 8
@alloc1359 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1358, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00@\00\00\00,\00\00\00" }>, align 8
@alloc1360 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/str/mod.rs" }>, align 1
@alloc1361 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1360, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00H\02\00\00\0D\00\00\00" }>, align 8
@alloc1457 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/str/pattern.rs" }>, align 1
@alloc1363 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1457, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8C\05\00\00\14\00\00\00" }>, align 8
@alloc1365 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1457, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8C\05\00\00!\00\00\00" }>, align 8
@alloc1367 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1457, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\98\05\00\00\14\00\00\00" }>, align 8
@alloc1369 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1457, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\98\05\00\00!\00\00\00" }>, align 8
@alloc1374 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/char/methods.rs" }>, align 1
@alloc1371 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc1374, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00{\06\00\00\16\00\00\00" }>, align 8
@alloc1373 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc1374, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\95\06\00\00\0A\00\00\00" }>, align 8
@alloc170 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc172 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc173 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc171 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc170, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc172, i32 0, i32 0, i32 0), [8 x i8] c"\13\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc173, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc1375 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc1374, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\8E\06\00\00\0E\00\00\00" }>, align 8
@0 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"\01\01\01" }>, align 1
@alloc1376 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/iter/traits/exact_size.rs" }>, align 1
@alloc1377 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc1376, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00l\00\00\00\09\00\00\00" }>, align 8
@alloc366 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc1378 = private unnamed_addr constant <{ [49 x i8] }> <{ [49 x i8] c"there is no such thing as an acquire/release load" }>, align 1
@alloc1388 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/sync/atomic.rs" }>, align 1
@alloc1380 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1388, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00?\09\00\00\17\00\00\00" }>, align 8
@alloc1381 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"there is no such thing as a release load" }>, align 1
@alloc1383 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1388, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00>\09\00\00\18\00\00\00" }>, align 8
@alloc1384 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"there is no such thing as an acquire/release store" }>, align 1
@alloc1386 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1388, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\001\09\00\00\17\00\00\00" }>, align 8
@alloc1387 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"there is no such thing as an acquire store" }>, align 1
@alloc1389 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1388, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\000\09\00\00\18\00\00\00" }>, align 8
@alloc1390 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/alloc/layout.rs" }>, align 1
@alloc1391 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc1390, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\98\01\00\00\1A\00\00\00" }>, align 8
@alloc1392 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/slice/mod.rs" }>, align 1
@alloc1393 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc1392, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00a\08\00\00'\00\00\00" }>, align 8
@alloc1396 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/slice/index.rs" }>, align 1
@alloc1395 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1396, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\15\02\00\004\00\00\00" }>, align 8
@alloc1397 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1396, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\1D\02\00\002\00\00\00" }>, align 8
@alloc1398 = private unnamed_addr constant <{ [74 x i8] }> <{ [74 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/option.rs" }>, align 1
@alloc1399 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc1398, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\96\05\00\00 \00\00\00" }>, align 8
@alloc1401 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@vtable.6 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"core::fmt::Error"*)* @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17h2e88339520814d73E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::fmt::Error"*, %"core::fmt::Formatter"*)* @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17ha6e04a2ac8dde238E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.7 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"proc_macro::LexError"*)* @"_ZN4core3ptr41drop_in_place$LT$proc_macro..LexError$GT$17h398257a7d509d3d5E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"proc_macro::LexError"*, %"core::fmt::Formatter"*)* @"_ZN57_$LT$proc_macro..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17h1c1fe93c83b7c8a2E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.8 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"fallback::LexError"*)* @"_ZN4core3ptr52drop_in_place$LT$proc_macro2..fallback..LexError$GT$17hf86f001f3e360b8fE" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"fallback::LexError"*, %"core::fmt::Formatter"*)* @"_ZN68_$LT$proc_macro2..fallback..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17he9b7cf47a7ee122bE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.9 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8*)* @"_ZN4core3ptr47drop_in_place$LT$proc_macro2..imp..LexError$GT$17hc7b5ef404820aed3E" to i8*), [16 x i8] c"\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (i8*, %"core::fmt::Formatter"*)* @"_ZN63_$LT$proc_macro2..imp..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17hc4421a6fad2f0cbcE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1414 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.a = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64, i64 }**)* @"_ZN4core3ptr58drop_in_place$LT$$RF$core..option..Option$LT$usize$GT$$GT$17hcd2c9dc1c925a0bdE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64, i64 }**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbd59a023b0efb1d8E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1418 = private unnamed_addr constant <{ [74 x i8] }> <{ [74 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/alloc/src/slice.rs" }>, align 1
@alloc1419 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc1418, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\D3\00\00\00\11\00\00\00" }>, align 8
@1 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@2 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@3 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc1420 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/alloc/src/vec/mod.rs" }>, align 1
@alloc1421 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1420, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00+\07\00\00$\00\00\00" }>, align 8
@alloc954 = private unnamed_addr constant <{ [0 x i8] }> zeroinitializer, align 8
@alloc1426 = private unnamed_addr constant <{ [74 x i8] }> <{ [74 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/alloc/src/alloc.rs" }>, align 1
@alloc1423 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc1426, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\AA\00\00\00\1B\00\00\00" }>, align 8
@alloc1425 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc1426, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\CA\00\00\00\1B\00\00\00" }>, align 8
@alloc1427 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc1426, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\D7\00\00\00\1F\00\00\00" }>, align 8
@alloc1428 = private unnamed_addr constant <{ [44 x i8] }> <{ [44 x i8] c"assertion failed: self.is_char_boundary(idx)" }>, align 1
@alloc1430 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1448, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\A6\05\00\00\09\00\00\00" }>, align 8
@alloc1432 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1448, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\EB\04\00\00\18\00\00\00" }>, align 8
@alloc1433 = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"cannot remove a char from the end of a string" }>, align 1
@alloc1435 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1448, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\ED\04\00\00\15\00\00\00" }>, align 8
@alloc1444 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/alloc/src/raw_vec.rs" }>, align 1
@alloc1437 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1444, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\C8\01\00\00\16\00\00\00" }>, align 8
@alloc1439 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1444, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\CA\01\00\00\05\00\00\00" }>, align 8
@alloc1441 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1444, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\87\01\00\00\1C\00\00\00" }>, align 8
@alloc1443 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1444, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\91\01\00\00\13\00\00\00" }>, align 8
@alloc1445 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1444, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00m\01\00\00\09\00\00\00" }>, align 8
@str.b = internal constant [25 x i8] c"attempt to divide by zero"
@alloc1447 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1448, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\1C\08\00\00\18\00\00\00" }>, align 8
@alloc1449 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1448, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\1C\08\00\00#\00\00\00" }>, align 8
@alloc1450 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"Some" }>, align 1
@vtable.c = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h62fd7da71f236745E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbb7832b8182a928cE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1791 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"None" }>, align 1
@alloc1456 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1457, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\1C\04\00\00\17\00\00\00" }>, align 8
@alloc1458 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1457, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\B7\01\00\00&\00\00\00" }>, align 8
@alloc1459 = private unnamed_addr constant <{ [78 x i8] }> <{ [78 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/slice/iter.rs" }>, align 1
@alloc1460 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc1459, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00\86\00\00\00\01\00\00\00" }>, align 8
@vtable.d = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ [0 x i8]*, i64 }*)* @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17hb6ee8af02a01ff5cE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i64 ({ [0 x i8]*, i64 }*)* @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h55600e1cfd680d3fE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1646 = private unnamed_addr constant <{ [88 x i8] }> <{ [88 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/parse.rs" }>, align 1
@alloc1465 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00E\00\00\00\14\00\00\00" }>, align 8
@alloc1609 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"//" }>, align 1
@alloc1627 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"///" }>, align 1
@alloc1468 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"////" }>, align 1
@alloc1619 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"//!" }>, align 1
@alloc1470 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"/**/" }>, align 1
@alloc1610 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"/*" }>, align 1
@alloc1629 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"/**" }>, align 1
@alloc1473 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"/***" }>, align 1
@alloc1620 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"/*!" }>, align 1
@alloc1476 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00e\00\00\00+\00\00\00" }>, align 8
@alloc1479 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00y\00\00\00\11\00\00\00" }>, align 8
@str.e = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc1481 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00|\00\00\00\0C\00\00\00" }>, align 8
@alloc1483 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00|\00\00\00&\00\00\00" }>, align 8
@alloc1485 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00|\00\00\00 \00\00\00" }>, align 8
@alloc1487 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00}\00\00\00\0D\00\00\00" }>, align 8
@alloc1489 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00~\00\00\00\0D\00\00\00" }>, align 8
@alloc1491 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\7F\00\00\00\13\00\00\00" }>, align 8
@alloc1493 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\7F\00\00\00-\00\00\00" }>, align 8
@alloc1495 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\7F\00\00\00'\00\00\00" }>, align 8
@alloc1497 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\80\00\00\00\0D\00\00\00" }>, align 8
@alloc1499 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\84\00\00\00\0D\00\00\00" }>, align 8
@alloc1501 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\82\00\00\00*\00\00\00" }>, align 8
@alloc1503 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\82\00\00\00@\00\00\00" }>, align 8
@alloc1505 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\82\00\00\003\00\00\00" }>, align 8
@alloc1507 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\86\00\00\00\09\00\00\00" }>, align 8
@alloc570 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"r\22" }>, align 1
@alloc564 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"r#\22" }>, align 1
@alloc565 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"r##" }>, align 1
@alloc1720 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"b\22" }>, align 1
@alloc1537 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"b'" }>, align 1
@alloc568 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"br\22" }>, align 1
@alloc569 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"br#" }>, align 1
@alloc571 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc570, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc564, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc565, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc1720, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc1537, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc568, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc569, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc1709 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"r#" }>, align 1
@alloc1510 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\17\01\00\00\17\00\00\00" }>, align 8
@alloc545 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"_" }>, align 1
@alloc546 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc545, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc1512 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\006\01\00\00\1E\00\00\00" }>, align 8
@alloc1514 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00:\01\00\00\10\00\00\00" }>, align 8
@alloc1516 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00;\01\00\00\0F\00\00\00" }>, align 8
@alloc1518 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00<\01\00\00\1D\00\00\00" }>, align 8
@alloc1519 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\22" }>, align 1
@alloc1520 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"r" }>, align 1
@alloc1522 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00h\01\00\00+\00\00\00" }>, align 8
@alloc1524 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"br" }>, align 1
@alloc1526 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B3\01\00\00.\00\00\00" }>, align 8
@alloc1528 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A2\01\00\00+\00\00\00" }>, align 8
@alloc1530 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\DC\01\00\00\1F\00\00\00" }>, align 8
@alloc1532 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\DC\01\00\00\14\00\00\00" }>, align 8
@alloc1534 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\DC\01\00\005\00\00\00" }>, align 8
@alloc1536 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\DD\01\00\00*\00\00\00" }>, align 8
@alloc1539 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\EB\01\00\00\11\00\00\00" }>, align 8
@alloc1541 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\F9\01\00\00\17\00\00\00" }>, align 8
@alloc1608 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"'" }>, align 1
@alloc1544 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\FD\01\00\00\11\00\00\00" }>, align 8
@alloc1547 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\02\02\00\00\11\00\00\00" }>, align 8
@alloc1549 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\12\02\00\00\14\00\00\00" }>, align 8
@alloc1552 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\13\02\00\00\11\00\00\00" }>, align 8
@alloc1554 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00>\02\00\00\1A\00\00\00" }>, align 8
@alloc1556 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00?\02\00\00\1A\00\00\00" }>, align 8
@alloc1558 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00@\02\00\00\1A\00\00\00" }>, align 8
@alloc1560 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00H\02\00\00\09\00\00\00" }>, align 8
@str.f = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc1562 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00I\02\00\00\09\00\00\00" }>, align 8
@alloc1564 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00J\02\00\00\09\00\00\00" }>, align 8
@alloc1566 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00P\02\00\00\14\00\00\00" }>, align 8
@alloc1568 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00S\02\00\00\14\00\00\00" }>, align 8
@alloc1570 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00y\02\00\00\11\00\00\00" }>, align 8
@alloc1572 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\87\02\00\00\1E\00\00\00" }>, align 8
@alloc1574 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\9C\02\00\00\15\00\00\00" }>, align 8
@alloc1576 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A1\02\00\00\15\00\00\00" }>, align 8
@alloc1578 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\97\02\00\00\15\00\00\00" }>, align 8
@alloc1580 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00t\02\00\00\11\00\00\00" }>, align 8
@alloc1582 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00g\02\00\00\11\00\00\00" }>, align 8
@alloc1584 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\AF\02\00\00\14\00\00\00" }>, align 8
@alloc1586 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B2\02\00\00\14\00\00\00" }>, align 8
@alloc1587 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"0x" }>, align 1
@alloc1588 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"0o" }>, align 1
@alloc1589 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"0b" }>, align 1
@alloc1591 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\CB\02\00\00\1D\00\00\00" }>, align 8
@alloc1593 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D1\02\00\00\22\00\00\00" }>, align 8
@alloc1595 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D1\02\00\00\1D\00\00\00" }>, align 8
@alloc1597 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D7\02\00\00\22\00\00\00" }>, align 8
@alloc1599 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D7\02\00\00\1D\00\00\00" }>, align 8
@alloc1601 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E5\02\00\00\09\00\00\00" }>, align 8
@alloc1603 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E0\02\00\00\11\00\00\00" }>, align 8
@alloc1605 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\F0\02\00\00\16\00\00\00" }>, align 8
@alloc1607 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\F2\02\00\00\0C\00\00\00" }>, align 8
@alloc1611 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"~!@#$%^&*-=+|;:,<.>/?'" }>, align 1
@alloc1613 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\18\03\00\00$\00\00\00" }>, align 8
@alloc1614 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"doc" }>, align 1
@alloc1616 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\22\03\00\00&\00\00\00" }>, align 8
@alloc1618 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\22\03\00\00\15\00\00\00" }>, align 8
@alloc1622 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00D\03\00\00\1A\00\00\00" }>, align 8
@alloc1624 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00E\03\00\00\1B\00\00\00" }>, align 8
@alloc1626 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00E\03\00\00\16\00\00\00" }>, align 8
@alloc1628 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"/" }>, align 1
@alloc1631 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00M\03\00\00,\00\00\00" }>, align 8
@alloc1633 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00N\03\00\00\1A\00\00\00" }>, align 8
@alloc1635 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00O\03\00\00\1B\00\00\00" }>, align 8
@alloc1637 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00O\03\00\00\16\00\00\00" }>, align 8
@alloc1639 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00[\03\00\00,\00\00\00" }>, align 8
@alloc1641 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00[\03\00\00!\00\00\00" }>, align 8
@alloc1643 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\\\03\00\00#\00\00\00" }>, align 8
@alloc1645 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\\\03\00\00,\00\00\00" }>, align 8
@alloc1647 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1646, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00Z\03\00\00(\00\00\00" }>, align 8
@_ZN11proc_macro29detection5WORKS17ha0418fd906fc1de1E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@_ZN11proc_macro29detection4INIT17hdc317313d22e3022E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@alloc1648 = private unnamed_addr constant <{ [92 x i8] }> <{ [92 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/detection.rs" }>, align 1
@alloc1649 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc1648, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\1D\00\00\00\11\00\00\00" }>, align 8
@alloc1650 = private unnamed_addr constant <{ [37 x i8] }> <{ [37 x i8] c"cannot parse string into token stream" }>, align 1
@alloc1685 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c" " }>, align 1
@alloc581 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc1685, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc1727 = private unnamed_addr constant <{ [91 x i8] }> <{ [91 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs" }>, align 1
@alloc1652 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\B1\00\00\00\11\00\00\00" }>, align 8
@alloc613 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1
@alloc1654 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\B4\00\00\00\0D\00\00\00" }>, align 8
@alloc1655 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"TokenStream " }>, align 1
@alloc1657 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\C5\00\00\00\09\00\00\00" }>, align 8
@alloc1658 = private unnamed_addr constant <{ [34 x i8] }> <{ [34 x i8] c"compiler token stream parse failed" }>, align 1
@alloc1660 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\D0\00\00\00\0E\00\00\00" }>, align 8
@alloc1661 = private unnamed_addr constant <{ [34 x i8] }> <{ [34 x i8] c"failed to parse to compiler tokens" }>, align 1
@alloc1663 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\DA\00\00\00\0E\00\00\00" }>, align 8
@alloc1664 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"SourceFile" }>, align 1
@alloc1665 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"path" }>, align 1
@vtable.g = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::path::PathBuf"*)* @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hae66e9d6f0635f16E" to i8*), [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::path::PathBuf"*, %"core::fmt::Formatter"*)* @"_ZN55_$LT$std..path..PathBuf$u20$as$u20$core..fmt..Debug$GT$3fmt17hcfa0fbe26a64b5d6E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1669 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"is_real" }>, align 1
@vtable.h = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8*)* @"_ZN4core3ptr25drop_in_place$LT$bool$GT$17hbfdfd384d31b0755E" to i8*), [16 x i8] c"\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (i8*, %"core::fmt::Formatter"*)* @"_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h39094b79d8ddc8d2E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc700 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"Span" }>, align 1
@alloc701 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc700, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc1675 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"[" }>, align 1
@alloc1676 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"]" }>, align 1
@alloc1677 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"{ " }>, align 1
@alloc1678 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"}" }>, align 1
@alloc1679 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"(" }>, align 1
@alloc1680 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c")" }>, align 1
@alloc1682 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00d\02\00\00\09\00\00\00" }>, align 8
@alloc1684 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00e\02\00\00\09\00\00\00" }>, align 8
@alloc1687 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00g\02\00\00\0D\00\00\00" }>, align 8
@alloc1689 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00i\02\00\00\09\00\00\00" }>, align 8
@alloc1690 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Group" }>, align 1
@alloc1691 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"delimiter" }>, align 1
@vtable.i = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8*)* @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..Delimiter$GT$17h9c9bbf2a1760d77aE" to i8*), [16 x i8] c"\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (i8*, %"core::fmt::Formatter"*)* @"_ZN59_$LT$proc_macro2..Delimiter$u20$as$u20$core..fmt..Debug$GT$3fmt17h18ef1df274a76aa5E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1695 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"stream" }>, align 1
@vtable.j = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"fallback::TokenStream"*)* @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h8ea3f1fe2253e242E" to i8*), [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"fallback::TokenStream"*, %"core::fmt::Formatter"*)* @"_ZN71_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17h2e9cf8adb599825aE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1699 = private unnamed_addr constant <{ [51 x i8] }> <{ [51 x i8] c"Ident is not allowed to be empty; use Option<Ident>" }>, align 1
@alloc1701 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\AE\02\00\00\09\00\00\00" }>, align 8
@alloc1702 = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"Ident cannot be a number; use Literal instead" }>, align 1
@alloc1704 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\B2\02\00\00\09\00\00\00" }>, align 8
@alloc360 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c" is not a valid Ident" }>, align 1
@alloc359 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc360, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc1706 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\C4\02\00\00\09\00\00\00" }>, align 8
@alloc1708 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\B7\02\00\00\22\00\00\00" }>, align 8
@alloc1711 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\DF\02\00\00\0D\00\00\00" }>, align 8
@alloc1760 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Ident" }>, align 1
@alloc635 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer }>, align 8
@vtable.k = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"core::fmt::Arguments"*)* @"_ZN4core3ptr41drop_in_place$LT$core..fmt..Arguments$GT$17hab43e5c263302fb1E" to i8*), [16 x i8] c"0\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)* @"_ZN57_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Debug$GT$3fmt17h10772d8fa0341540E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1717 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c".0" }>, align 1
@alloc1719 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00O\03\00\00.\00\00\00" }>, align 8
@alloc1001 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\x" }>, align 1
@alloc1002 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc1001, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc1023 = private unnamed_addr constant <{ [56 x i8] }> <{ [56 x i8] c"\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00 \00\00\00\08\00\00\00\03\00\00\00\00\00\00\00" }>, align 8
@alloc1721 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\\\" }>, align 1
@alloc1722 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\\22" }>, align 1
@alloc1723 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\r" }>, align 1
@alloc1724 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\n" }>, align 1
@alloc1725 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\t" }>, align 1
@alloc1726 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\\0" }>, align 1
@alloc1728 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc1727, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\90\03\00\00\15\00\00\00" }>, align 8
@alloc1729 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Literal" }>, align 1
@alloc1730 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"lit" }>, align 1
@alloc1731 = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c"stable/nightly mismatch" }>, align 1
@alloc1756 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/wrapper.rs" }>, align 1
@alloc1733 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc1756, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00)\00\00\00\05\00\00\00" }>, align 8
@alloc1735 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc1756, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00l\00\00\00\11\00\00\00" }>, align 8
@alloc1737 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc1756, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00o\00\00\00&\00\00\00" }>, align 8
@alloc1739 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc1756, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\8D\00\00\00G\00\00\00" }>, align 8
@alloc1740 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"TokenTreeIter" }>, align 1
@alloc1741 = private unnamed_addr constant <{ [55 x i8] }> <{ [55 x i8] c"proc_macro::Span is only available in procedural macros" }>, align 1
@alloc1743 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc1756, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\D4\01\00\00\22\00\00\00" }>, align 8
@alloc1784 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"span" }>, align 1
@vtable.l = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"proc_macro::Span"*)* @"_ZN4core3ptr37drop_in_place$LT$proc_macro..Span$GT$17h242c2613f3041202E" to i8*), [16 x i8] c"\04\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", i8* bitcast (i1 (%"proc_macro::Span"*, %"core::fmt::Formatter"*)* @"_ZN53_$LT$proc_macro..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h4a2bef59b8a813bcE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1749 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc1756, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\BA\02\00\00A\00\00\00" }>, align 8
@alloc1750 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"explicit panic" }>, align 1
@alloc1752 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc1756, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\C0\02\00\00\1A\00\00\00" }>, align 8
@alloc1753 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"invalid literal" }>, align 1
@alloc1755 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc1756, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00)\03\00\00?\00\00\00" }>, align 8
@alloc1757 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc1756, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\A6\03\00\00\1B\00\00\00" }>, align 8
@alloc1781 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/lib.rs" }>, align 1
@alloc1759 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1781, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\D6\00\00\00\11\00\00\00" }>, align 8
@alloc1761 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"sym" }>, align 1
@alloc1762 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Punct" }>, align 1
@alloc1763 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"char" }>, align 1
@vtable.m = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i32*)* @"_ZN4core3ptr25drop_in_place$LT$char$GT$17h6f85a03e0a533aebE" to i8*), [16 x i8] c"\04\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", i8* bitcast (i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h791749a8d25a7b93E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1767 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"spacing" }>, align 1
@vtable.n = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8*)* @"_ZN4core3ptr41drop_in_place$LT$proc_macro2..Spacing$GT$17h95f340fe17449509E" to i8*), [16 x i8] c"\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (i8*, %"core::fmt::Formatter"*)* @"_ZN57_$LT$proc_macro2..Spacing$u20$as$u20$core..fmt..Debug$GT$3fmt17h2295d0d8d8975e10E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1780 = private unnamed_addr constant <{ [31 x i8] }> <{ [31 x i8] c"assertion failed: f.is_finite()" }>, align 1
@alloc1773 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1781, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00t\04\00\00\09\00\00\00" }>, align 8
@alloc1776 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1781, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\86\04\00\00\09\00\00\00" }>, align 8
@alloc1779 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1781, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\98\04\00\00\09\00\00\00" }>, align 8
@alloc1782 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1781, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\AA\04\00\00\09\00\00\00" }>, align 8
@alloc1783 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"LexError" }>, align 1
@vtable.o = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"fallback::Span"**)* @"_ZN4core3ptr52drop_in_place$LT$$RF$proc_macro2..fallback..Span$GT$17h6775c8026575606bE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"fallback::Span"**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb29883a703fee44cE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1788 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"LineColumn" }>, align 1
@alloc1789 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"line" }>, align 1
@alloc1790 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"column" }>, align 1
@alloc1055 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"u8" }>, align 1
@alloc1054 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc1055, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc1068 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"u16" }>, align 1
@alloc1067 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc1068, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc1081 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"u32" }>, align 1
@alloc1080 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc1081, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc1094 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"u64" }>, align 1
@alloc1093 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc1094, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc1107 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"u128" }>, align 1
@alloc1106 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc1107, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc1120 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"usize" }>, align 1
@alloc1119 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc1120, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00" }>, align 8
@alloc1133 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"i8" }>, align 1
@alloc1132 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc1133, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc1146 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"i16" }>, align 1
@alloc1145 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc1146, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc1159 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"i32" }>, align 1
@alloc1158 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc1159, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc1172 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"i64" }>, align 1
@alloc1171 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc1172, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc1185 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"i128" }>, align 1
@alloc1184 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc1185, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc1198 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"isize" }>, align 1
@alloc1197 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc1198, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00" }>, align 8
@alloc981 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"f32" }>, align 1
@alloc980 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc981, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc956 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"f64" }>, align 1
@alloc955 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc956, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc1792 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Bracket" }>, align 1
@alloc1793 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Brace" }>, align 1
@alloc1794 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"Parenthesis" }>, align 1
@alloc1795 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Joint" }>, align 1
@alloc1796 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Alone" }>, align 1

; <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFull>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h5ba9688412c0923fE"(%"alloc::string::String"* align 8 dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_6 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hadec8598de4b5ca6E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_6)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked
  %2 = call { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h0871ecd4ebcfb3adE([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  %3 = extractvalue { [0 x i8]*, i64 } %2, 0
  %4 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %3, 0
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1
  ret { [0 x i8]*, i64 } %6
}

; <core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32* } @"_ZN100_$LT$core..iter..adapters..take..Take$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h05a212bbb880ae21E"(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i32* }, align 8
  %1 = getelementptr inbounds %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>", %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* %self, i32 0, i32 1
  %_2 = load i64, i64* %1, align 8
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %0, i32 0, i32 1
  %4 = bitcast i32** %3 to {}**
  store {}* null, {}** %4, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>", %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* %self, i32 0, i32 1
  %6 = getelementptr inbounds %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>", %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* %self, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, 1
  store i64 %8, i64* %5, align 8
  %_3 = bitcast %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* %self to %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"*
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  %9 = call { i64, i32* } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha97199958f34120bE"(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* align 8 dereferenceable(24) %_3)
  store { i64, i32* } %9, { i64, i32* }* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %10 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %0, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = insertvalue { i64, i32* } undef, i64 %11, 0
  %15 = insertvalue { i64, i32* } %14, i32* %13, 1
  ret { i64, i32* } %15
}

; <core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64* } @"_ZN100_$LT$core..iter..adapters..take..Take$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h085ff6caf75062f6E"(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>", %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* %self, i32 0, i32 1
  %_2 = load i64, i64* %1, align 8
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  %4 = bitcast i64** %3 to {}**
  store {}* null, {}** %4, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>", %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* %self, i32 0, i32 1
  %6 = getelementptr inbounds %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>", %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* %self, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, 1
  store i64 %8, i64* %5, align 8
  %_3 = bitcast %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* %self to %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"*
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  %9 = call { i64, i64* } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he5ea92e7434567e0E"(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* align 8 dereferenceable(24) %_3)
  store { i64, i64* } %9, { i64, i64* }* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = insertvalue { i64, i64* } undef, i64 %11, 0
  %15 = insertvalue { i64, i64* } %14, i64* %13, 1
  ret { i64, i64* } %15
}

; <&mut alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define { i64*, i64* } @"_ZN102_$LT$$RF$mut$u20$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb29abf531ac562edE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
  %0 = call { [0 x %TokenTree]*, i64 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h796d981de04d1274E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self)
  %_3.0 = extractvalue { [0 x %TokenTree]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x %TokenTree]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter_mut
  %1 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h278b78f21dbc8294E"([0 x %TokenTree]* nonnull align 8 %_3.0, i64 %_3.1)
  %2 = extractvalue { i64*, i64* } %1, 0
  %3 = extractvalue { i64*, i64* } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64*, i64* } undef, i64* %2, 0
  %5 = insertvalue { i64*, i64* } %4, i64* %3, 1
  ret { i64*, i64* } %5
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hfa6668799720623eE"(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture dereferenceable(40) %self, i32* align 4 dereferenceable(4) %g) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_4 = alloca %"alloc::vec::drain::Drain<proc_macro::TokenTree>", align 8
  store i8 0, i8* %_10, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_10, align 1
  %1 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %self to %"alloc::vec::drain::Drain<proc_macro::TokenTree>"*
  %2 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %_4 to i8*
  %3 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 40, i1 false)
  store i8 1, i8* %_9, align 1
; invoke core::iter::adapters::map::map_fold
  %_6 = invoke align 4 dereferenceable(4) i32* @_ZN4core4iter8adapters3map8map_fold17h5162c7c767d5359fE(i32* align 4 dereferenceable(4) %g)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  store i8 0, i8* %_9, align 1
; invoke core::iter::traits::iterator::Iterator::fold
  invoke void @_ZN4core4iter6traits8iterator8Iterator4fold17h9e03b8287c7c327fE(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture dereferenceable(40) %_4, i32* align 4 dereferenceable(4) %_6)
          to label %bb2 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  %4 = load i8, i8* %_9, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_9, align 1
  store i8 0, i8* %_10, align 1
  ret void

bb3:                                              ; preds = %bb5, %bb6
  %11 = load i8, i8* %_10, align 1, !range !2
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb7, label %bb4

bb5:                                              ; preds = %bb6
  br label %bb3

bb4:                                              ; preds = %bb7, %bb3
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb7:                                              ; preds = %bb3
; call core::ptr::drop_in_place<alloc::vec::drain::Drain<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr74drop_in_place$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$GT$17h20282709377aa8a6E"(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %_4) #18
  br label %bb4
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h70a5125afbb54fe8E"(%"core::option::Option<TokenTree>"* noalias nocapture sret(%"core::option::Option<TokenTree>") dereferenceable(48) %0, %"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %1 = alloca %TokenTree*, align 8
  %_3.i.i = alloca %"core::mem::manually_drop::ManuallyDrop<TokenTree>", align 8
  %_2.i = alloca %"core::mem::maybe_uninit::MaybeUninit<TokenTree>", align 8
  %2 = alloca i8*, align 8
  %_16 = alloca %TokenTree, align 8
  %_12 = alloca %TokenTree, align 8
  %3 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %self, i32 0, i32 4
  %_4 = load %TokenTree*, %TokenTree** %3, align 8
  %4 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %self, i32 0, i32 5
  %_5 = load %TokenTree*, %TokenTree** %4, align 8
  %_2 = icmp eq %TokenTree* %_4, %_5
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  br label %bb3

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<TokenTree>"* %0 to i32*
  store i32 4, i32* %5, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb1
  ret void

bb3:                                              ; preds = %bb2
  %6 = icmp eq i64 48, 0
  br i1 %6, label %bb4, label %bb7

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %self, i32 0, i32 4
  %_11 = load %TokenTree*, %TokenTree** %7, align 8
  %_10 = bitcast %TokenTree* %_11 to i8*
  %8 = getelementptr i8, i8* %_10, i64 1
  store i8* %8, i8** %2, align 8
  %_9 = load i8*, i8** %2, align 8
  br label %bb5

bb7:                                              ; preds = %bb3
  %9 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %self, i32 0, i32 4
  %old = load %TokenTree*, %TokenTree** %9, align 8
  %10 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %self, i32 0, i32 4
  %_15 = load %TokenTree*, %TokenTree** %10, align 8
  %11 = getelementptr inbounds %TokenTree, %TokenTree* %_15, i64 1
  store %TokenTree* %11, %TokenTree** %1, align 8
  %12 = load %TokenTree*, %TokenTree** %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %13 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %self, i32 0, i32 4
  store %TokenTree* %12, %TokenTree** %13, align 8
; call core::ptr::read
  call void @_ZN4core3ptr4read17h4c36405c669cc0a7E(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %_16, %TokenTree* %old)
  br label %bb9

bb9:                                              ; preds = %bb8
  %14 = bitcast %"core::option::Option<TokenTree>"* %0 to %"core::option::Option<TokenTree>::Some"*
  %15 = bitcast %"core::option::Option<TokenTree>::Some"* %14 to %TokenTree*
  %16 = bitcast %TokenTree* %15 to i8*
  %17 = bitcast %TokenTree* %_16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 48, i1 false)
  br label %bb10

bb10:                                             ; preds = %bb6, %bb9
  br label %bb11

bb5:                                              ; preds = %bb4
  %_8 = bitcast i8* %_9 to %TokenTree*
  %18 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %self, i32 0, i32 4
  store %TokenTree* %_8, %TokenTree** %18, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !3)
; call core::mem::maybe_uninit::MaybeUninit<T>::zeroed
  call void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6zeroed17h9bdeca31e8fee1deE"(%"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* noalias nocapture sret(%"core::mem::maybe_uninit::MaybeUninit<TokenTree>") dereferenceable(48) %_2.i), !noalias !3
  call void @llvm.experimental.noalias.scope.decl(metadata !6)
  call void @llvm.experimental.noalias.scope.decl(metadata !9)
  %19 = bitcast %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %_2.i to %"core::mem::manually_drop::ManuallyDrop<TokenTree>"*
  %20 = bitcast %"core::mem::manually_drop::ManuallyDrop<TokenTree>"* %_3.i.i to i8*
  %21 = bitcast %"core::mem::manually_drop::ManuallyDrop<TokenTree>"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 48, i1 false), !noalias !11
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  call void @llvm.experimental.noalias.scope.decl(metadata !15)
  %22 = bitcast %"core::mem::manually_drop::ManuallyDrop<TokenTree>"* %_3.i.i to %TokenTree*
  %23 = bitcast %TokenTree* %_12 to i8*
  %24 = bitcast %TokenTree* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 48, i1 false), !alias.scope !17, !noalias !9
  br label %bb6

bb6:                                              ; preds = %bb5
  %25 = bitcast %"core::option::Option<TokenTree>"* %0 to %"core::option::Option<TokenTree>::Some"*
  %26 = bitcast %"core::option::Option<TokenTree>::Some"* %25 to %TokenTree*
  %27 = bitcast %TokenTree* %26 to i8*
  %28 = bitcast %TokenTree* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 48, i1 false)
  br label %bb10
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hb88b0ce347d580e0E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_12 = alloca { i64, i64 }, align 8
  %exact = alloca i64, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 48, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %self, i32 0, i32 5
  %_5 = load %TokenTree*, %TokenTree** %2, align 8
  %_4 = ptrtoint %TokenTree* %_5 to i64
  %3 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %self, i32 0, i32 4
  %_7 = load %TokenTree*, %TokenTree** %3, align 8
  %_6 = ptrtoint %TokenTree* %_7 to i64
  %4 = sub i64 %_4, %_6
  store i64 %4, i64* %exact, align 8
  br label %bb3

bb4:                                              ; preds = %bb1
  %5 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %self, i32 0, i32 5
  %_9 = load %TokenTree*, %TokenTree** %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %self, i32 0, i32 4
  %_10 = load %TokenTree*, %TokenTree** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::offset_from
  %_8 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$11offset_from17h0e4c7e106f142d01E"(%TokenTree* %_9, %TokenTree* %_10)
  br label %bb5

bb5:                                              ; preds = %bb4
  store i64 %_8, i64* %exact, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb5
  %_11 = load i64, i64* %exact, align 8
  %_13 = load i64, i64* %exact, align 8
  %7 = bitcast { i64, i64 }* %_12 to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  store i64 %_13, i64* %8, align 8
  %9 = bitcast { i64, i64 }* %_12 to i64*
  store i64 1, i64* %9, align 8
  %10 = bitcast { i64, { i64, i64 } }* %0 to i64*
  store i64 %_11, i64* %10, align 8
  %11 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 0
  %13 = load i64, i64* %12, align 8, !range !18
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %15, i64* %17, align 8
  ret void

bb3:                                              ; preds = %bb2
  br label %bb6
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define { i8, i8 } @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7791cbd92c195851E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6c4bacd36189c2a1E"({ i8*, i8* }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<&T>::copied
  %0 = call { i8, i8 } @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17hff2fbf231359b5bdE"(i8* align 1 dereferenceable_or_null(1) %_2)
  %1 = extractvalue { i8, i8 } %0, 0
  %2 = trunc i8 %1 to i1
  %3 = extractvalue { i8, i8 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = zext i1 %2 to i8
  %5 = insertvalue { i8, i8 } undef, i8 %4, 0
  %6 = insertvalue { i8, i8 } %5, i8 %3, 1
  ret { i8, i8 } %6
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::try_fold
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17hbc68546bfb4c941aE"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_8, align 1
; invoke core::iter::adapters::copied::copy_try_fold
  invoke void @_ZN4core4iter8adapters6copied13copy_try_fold17hdcbcdf6b3d298c54E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
; invoke core::iter::traits::iterator::Iterator::try_fold
  %1 = invoke zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hda46dcf243e1bc6cE({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_8, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_8, align 1
  ret i1 %1

bb3:                                              ; preds = %bb4, %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb5
  br label %bb3
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h1f0e0022b36d066fE"() unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast i8* %0 to %"core::ops::control_flow::ControlFlow<()>::Break"*
  %2 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<()>::Break", %"core::ops::control_flow::ControlFlow<()>::Break"* %1, i32 0, i32 1
  store i8 1, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nonlazybind uwtable
define void @"_ZN106_$LT$core..iter..adapters..chain..Chain$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h0921f328f25395c7E"(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture dereferenceable(48) %self, i32* align 4 dereferenceable(4) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_17 = alloca i8, align 1
  %_16 = alloca i8, align 1
  %_13 = alloca %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>", align 8
  %b = alloca %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>", align 8
  %_7 = alloca %"core::iter::sources::once::Once<proc_macro::TokenStream>", align 4
  %a = alloca %"core::iter::sources::once::Once<proc_macro::TokenStream>", align 4
  %f = alloca i32*, align 8
  store i32* %0, i32** %f, align 8
  store i8 0, i8* %_17, align 1
  store i8 0, i8* %_18, align 1
  store i8 0, i8* %_16, align 1
  store i8 1, i8* %_17, align 1
  store i8 1, i8* %_18, align 1
  store i8 1, i8* %_16, align 1
  %2 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self, i32 0, i32 1
  %3 = bitcast %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %2 to i32*
  %4 = load i32, i32* %3, align 8, !range !19
  %_4 = zext i32 %4 to i64
  %5 = icmp eq i64 %_4, 1
  br i1 %5, label %bb1, label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %_18, align 1
  %6 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self, i32 0, i32 1
  %7 = bitcast %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %6 to %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some", %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some"* %7, i32 0, i32 1
  %9 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %a to i8*
  %10 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  %11 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %_7 to i8*
  %12 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %a to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  %13 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %_7 to i32*
  %14 = load i32, i32* %13, align 4
; invoke core::iter::traits::iterator::Iterator::fold
  invoke void @_ZN4core4iter6traits8iterator8Iterator4fold17h77b2faeb55543b06E(i32 %14, i32** align 8 dereferenceable(8) %f)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %bb2, %start
  %15 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"*
  %16 = getelementptr inbounds %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %15, i32 0, i32 1
  %17 = load {}*, {}** %16, align 8
  %18 = icmp eq {}* %17, null
  %_10 = select i1 %18, i64 0, i64 1
  %19 = icmp eq i64 %_10, 1
  br i1 %19, label %bb4, label %bb6

bb2:                                              ; preds = %bb1
  br label %bb3

bb21:                                             ; preds = %cleanup
  %20 = load i8, i8* %_16, align 1, !range !2
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb20, label %bb8

cleanup:                                          ; preds = %bb4, %bb1
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb21

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_17, align 1
  %27 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"*
  %28 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %27 to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>::Some"*
  %29 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>::Some"* %28 to %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"*
  %30 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %b to i8*
  %31 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 40, i1 false)
  %32 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %_13 to i8*
  %33 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %b to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 40, i1 false)
  store i8 0, i8* %_16, align 1
  %_15 = load i32*, i32** %f, align 8, !nonnull !20
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hfa6668799720623eE"(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture dereferenceable(40) %_13, i32* align 4 dereferenceable(4) %_15)
          to label %bb5 unwind label %cleanup

bb6:                                              ; preds = %bb5, %bb3
  %34 = load i8, i8* %_16, align 1, !range !2
  %35 = trunc i8 %34 to i1
  br i1 %35, label %bb10, label %bb7

bb5:                                              ; preds = %bb4
  br label %bb6

bb8:                                              ; preds = %bb20, %bb21
  %36 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self, i32 0, i32 1
  %37 = bitcast %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %36 to i32*
  %38 = load i32, i32* %37, align 8, !range !19
  %_23 = zext i32 %38 to i64
  %39 = icmp eq i64 %_23, 1
  br i1 %39, label %bb25, label %bb22

bb20:                                             ; preds = %bb21
  br label %bb8

bb7:                                              ; preds = %bb10, %bb6
  %40 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self, i32 0, i32 1
  %41 = bitcast %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %40 to i32*
  %42 = load i32, i32* %41, align 8, !range !19
  %_21 = zext i32 %42 to i64
  %43 = icmp eq i64 %_21, 1
  br i1 %43, label %bb18, label %bb17

bb10:                                             ; preds = %bb6
  br label %bb7

bb25:                                             ; preds = %bb8
  %44 = load i8, i8* %_18, align 1, !range !2
  %45 = trunc i8 %44 to i1
  br i1 %45, label %bb26, label %bb22

bb22:                                             ; preds = %bb26, %bb25, %bb8
  %46 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"*
  %47 = getelementptr inbounds %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %46, i32 0, i32 1
  %48 = load {}*, {}** %47, align 8
  %49 = icmp eq {}* %48, null
  %_22 = select i1 %49, i64 0, i64 1
  %50 = icmp eq i64 %_22, 1
  br i1 %50, label %bb23, label %bb9

bb26:                                             ; preds = %bb25
  %51 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self, i32 0, i32 1
  %52 = bitcast %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %51 to %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some"*
  %53 = getelementptr inbounds %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some", %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some"* %52, i32 0, i32 1
; call core::ptr::drop_in_place<core::iter::sources::once::Once<proc_macro::TokenStream>>
  call void @"_ZN4core3ptr83drop_in_place$LT$core..iter..sources..once..Once$LT$proc_macro..TokenStream$GT$$GT$17h570fc2ba36075531E"(%"core::iter::sources::once::Once<proc_macro::TokenStream>"* %53) #18
  br label %bb22

bb23:                                             ; preds = %bb22
  %54 = load i8, i8* %_17, align 1, !range !2
  %55 = trunc i8 %54 to i1
  br i1 %55, label %bb24, label %bb9

bb9:                                              ; preds = %bb13, %bb12, %bb11, %bb24, %bb23, %bb22
  %56 = bitcast { i8*, i32 }* %1 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = insertvalue { i8*, i32 } undef, i8* %57, 0
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1
  resume { i8*, i32 } %61

bb24:                                             ; preds = %bb23
  %62 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"*
  %63 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %62 to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>::Some"*
  %64 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>::Some"* %63 to %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"*
; call core::ptr::drop_in_place<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>,<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from>>
  call void @"_ZN4core3ptr212drop_in_place$LT$core..iter..adapters..map..Map$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$C$$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$..from$GT$$GT$17h258ecf846b955c31E"(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %64) #18
  br label %bb9

bb18:                                             ; preds = %bb7
  %65 = load i8, i8* %_18, align 1, !range !2
  %66 = trunc i8 %65 to i1
  br i1 %66, label %bb19, label %bb17

bb17:                                             ; preds = %bb19, %bb18, %bb7
  %67 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"*
  %68 = getelementptr inbounds %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %67, i32 0, i32 1
  %69 = load {}*, {}** %68, align 8
  %70 = icmp eq {}* %69, null
  %_20 = select i1 %70, i64 0, i64 1
  %71 = icmp eq i64 %_20, 1
  br i1 %71, label %bb15, label %bb14

bb19:                                             ; preds = %bb18
  %72 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self, i32 0, i32 1
  %73 = bitcast %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %72 to %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some"*
  %74 = getelementptr inbounds %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some", %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some"* %73, i32 0, i32 1
; invoke core::ptr::drop_in_place<core::iter::sources::once::Once<proc_macro::TokenStream>>
  invoke void @"_ZN4core3ptr83drop_in_place$LT$core..iter..sources..once..Once$LT$proc_macro..TokenStream$GT$$GT$17h570fc2ba36075531E"(%"core::iter::sources::once::Once<proc_macro::TokenStream>"* %74)
          to label %bb17 unwind label %cleanup1

bb11:                                             ; preds = %cleanup1
  %75 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"*
  %76 = getelementptr inbounds %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %75, i32 0, i32 1
  %77 = load {}*, {}** %76, align 8
  %78 = icmp eq {}* %77, null
  %_19 = select i1 %78, i64 0, i64 1
  %79 = icmp eq i64 %_19, 1
  br i1 %79, label %bb12, label %bb9

cleanup1:                                         ; preds = %bb19
  %80 = landingpad { i8*, i32 }
          cleanup
  %81 = extractvalue { i8*, i32 } %80, 0
  %82 = extractvalue { i8*, i32 } %80, 1
  %83 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %81, i8** %83, align 8
  %84 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %82, i32* %84, align 8
  br label %bb11

bb12:                                             ; preds = %bb11
  %85 = load i8, i8* %_17, align 1, !range !2
  %86 = trunc i8 %85 to i1
  br i1 %86, label %bb13, label %bb9

bb13:                                             ; preds = %bb12
  %87 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"*
  %88 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %87 to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>::Some"*
  %89 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>::Some"* %88 to %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"*
; call core::ptr::drop_in_place<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>,<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from>>
  call void @"_ZN4core3ptr212drop_in_place$LT$core..iter..adapters..map..Map$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$C$$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$..from$GT$$GT$17h258ecf846b955c31E"(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %89) #18
  br label %bb9

bb15:                                             ; preds = %bb17
  %90 = load i8, i8* %_17, align 1, !range !2
  %91 = trunc i8 %90 to i1
  br i1 %91, label %bb16, label %bb14

bb14:                                             ; preds = %bb16, %bb15, %bb17
  ret void

bb16:                                             ; preds = %bb15
  %92 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"*
  %93 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %92 to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>::Some"*
  %94 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>::Some"* %93 to %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"*
; call core::ptr::drop_in_place<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>,<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from>>
  call void @"_ZN4core3ptr212drop_in_place$LT$core..iter..adapters..map..Map$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$C$$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$..from$GT$$GT$17h258ecf846b955c31E"(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %94)
  br label %bb14
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hf3c6d42f44a76ff6E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hbd65a9caba176d19E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_4, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hffb7268dfbdf28e2E(i8* %2, i64 %_7)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h569c585b171f3123E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = bitcast [0 x i8]* %slice.0 to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, i8* %1, i64 %self.0
  store i8* %2, i8** %0, align 8
  %_3.i = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h7b4f6aee009f378dE(i8* %_3.i, i64 %_7)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h876ef9f2cd6f754bE"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_3 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %_4 = icmp ugt i64 %self.0, %self.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = icmp ugt i64 %self.1, %slice.1
  %1 = zext i1 %_7 to i8
  store i8 %1, i8* %_3, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i8, i8* %_3, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %4 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hf3c6d42f44a76ff6E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb6

bb4:                                              ; preds = %bb3
  %5 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %5, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i64 } %10, i64 %9, 1
  ret { i8*, i64 } %11

bb6:                                              ; preds = %bb5
  %12 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  store [0 x i8]* %_13.0, [0 x i8]** %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  store i64 %_13.1, i64* %14, align 8
  br label %bb7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h94d64e8a11b4416bE"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_3 = icmp ugt i64 %self.0, %self.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_8 = icmp ugt i64 %self.1, %slice.1
  br i1 %_8, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #19
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hf3c6d42f44a76ff6E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_15.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_15.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #19
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_15.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_15.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h08ddf8ef9cc89ea6E"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_4 = icmp ugt i64 %self.0, %self.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1
  br i1 %_9, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #19
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h569c585b171f3123E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_18.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_18.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #19
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_18.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_18.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h326ec6dedebd3983E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_2 = alloca { i64, i32 }, align 8
  %0 = alloca { i64, i32 }, align 8
  %_3 = getelementptr inbounds %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>", %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* %self, i32 0, i32 1
; call core::option::Option<T>::take
  %1 = call { i64, i32 } @"_ZN4core6option15Option$LT$T$GT$4take17hd5472e4633667577E"({ i64, i32 }* align 8 dereferenceable(16) %_3)
  store { i64, i32 } %1, { i64, i32 }* %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_2, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !range !21
  %4 = sub i32 %3, 1114113
  %5 = icmp eq i32 %4, 0
  %_4 = select i1 %5, i64 0, i64 1
  switch i64 %_4, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %_6 = bitcast %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* %self to %"core::str::iter::CharIndices"*
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %6 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %_6)
  store { i64, i32 } %6, { i64, i32 }* %0, align 8
  br label %bb5

bb4:                                              ; preds = %bb1
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_2, i32 0, i32 0
  %v.0 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_2, i32 0, i32 1
  %v.1 = load i32, i32* %8, align 8, !range !22
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  store i64 %v.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %v.1, i32* %10, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8, !range !22
  %15 = insertvalue { i64, i32 } undef, i64 %12, 0
  %16 = insertvalue { i64, i32 } %15, i32 %14, 1
  ret { i64, i32 } %16

bb5:                                              ; preds = %bb2
  br label %bb6
}

; <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e866656704d5661E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = alloca i32, align 4
  %0 = alloca i32, align 4
  %_3 = getelementptr inbounds %"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>", %"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* %self, i32 0, i32 1
; call core::option::Option<T>::take
  %1 = call i32 @"_ZN4core6option15Option$LT$T$GT$4take17hdcbde9e655ad839dE"(i32* align 4 dereferenceable(4) %_3), !range !21
  store i32 %1, i32* %_2, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i32, i32* %_2, align 4, !range !21
  %3 = sub i32 %2, 1114113
  %4 = icmp eq i32 %3, 0
  %_4 = select i1 %4, i64 0, i64 1
  switch i64 %_4, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %_6 = bitcast %"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* %self to { i8*, i8* }*
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %_6), !range !22
  store i32 %5, i32* %0, align 4
  br label %bb5

bb4:                                              ; preds = %bb1
  %v = load i32, i32* %_2, align 4, !range !22
  store i32 %v, i32* %0, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %6 = load i32, i32* %0, align 4, !range !22
  ret i32 %6

bb5:                                              ; preds = %bb2
  br label %bb6
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hdff2297ec1f31a47E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_3 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %self, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %7 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h94d64e8a11b4416bE"(i64 %4, i64 %6, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %8 = extractvalue { [0 x i8]*, i64 } %7, 0
  %9 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1
  ret { [0 x i8]*, i64 } %11
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hcf93cc01da105208E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_5 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %self, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %7 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h08ddf8ef9cc89ea6E"(i64 %4, i64 %6, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %9
}

; <proc_macro::TokenStream as core::iter::traits::collect::Extend<proc_macro::TokenTree>>::extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN108_$LT$proc_macro..TokenStream$u20$as$u20$core..iter..traits..collect..Extend$LT$proc_macro..TokenTree$GT$$GT$6extend17h4204688729e44108E"(%"proc_macro::TokenStream"* align 4 dereferenceable(4) %self, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture dereferenceable(40) %trees) unnamed_addr #1 {
start:
  %_7 = alloca %"alloc::vec::drain::Drain<proc_macro::TokenTree>", align 8
  %_6 = alloca %"alloc::vec::drain::Drain<proc_macro::TokenTree>", align 8
  %_5 = alloca %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>", align 8
  %0 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %_7 to i8*
  %1 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %trees to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 40, i1 false)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h56849493de6680dfE"(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::drain::Drain<proc_macro::TokenTree>") dereferenceable(40) %_6, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture dereferenceable(40) %_7)
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17h2bb23c731e613fbdE(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture sret(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>") dereferenceable(40) %_5, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture dereferenceable(40) %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <proc_macro::TokenStream as core::iter::traits::collect::Extend<proc_macro::TokenStream>>::extend
  call void @"_ZN110_$LT$proc_macro..TokenStream$u20$as$u20$core..iter..traits..collect..Extend$LT$proc_macro..TokenStream$GT$$GT$6extend17h1d82487434fd6c45E"(%"proc_macro::TokenStream"* align 4 dereferenceable(4) %self, %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture dereferenceable(40) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h519dcc453b00ca96E"(%"core::option::Option<(usize, u8)>"* noalias nocapture sret(%"core::option::Option<(usize, u8)>") dereferenceable(24) %0, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* align 8 dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_12 = alloca { i64, i8 }, align 8
  %_3 = alloca { i8, i8 }, align 1
  %_5 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* %self to { i8*, i8* }*
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
  %2 = call { i8, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h962fc68cde015298E"({ i8*, i8* }* align 8 dereferenceable(16) %_5)
  %3 = extractvalue { i8, i8 } %2, 0
  %_4.0 = trunc i8 %3 to i1
  %_4.1 = extractvalue { i8, i8 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %4 = call { i8, i8 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcf82740328f54b5eE"(i1 zeroext %_4.0, i8 %_4.1)
  store { i8, i8 } %4, { i8, i8 }* %_3, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8, i8 }* %_3 to i8*
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = trunc i8 %6 to i1
  %_6 = zext i1 %7 to i64
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %8 = bitcast { i8, i8 }* %_3 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u8>::Continue"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u8>::Continue", %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u8>::Continue"* %8, i32 0, i32 1
  %val = load i8, i8* %9, align 1
  %10 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>", %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* %self, i32 0, i32 1
  %i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>", %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* %self, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %12, i64 1)
  %_11.0 = extractvalue { i64, i1 } %13, 0
  %_11.1 = extractvalue { i64, i1 } %13, 1
  %14 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false)
  br i1 %14, label %panic, label %bb7

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  call void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hd0e9f55410d0a8caE"(%"core::option::Option<(usize, u8)>"* noalias nocapture sret(%"core::option::Option<(usize, u8)>") dereferenceable(24) %0)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  ret void

bb7:                                              ; preds = %bb3
  %15 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>", %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* %self, i32 0, i32 1
  store i64 %_11.0, i64* %15, align 8
  %16 = bitcast { i64, i8 }* %_12 to i64*
  store i64 %i, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_12, i32 0, i32 1
  store i8 %val, i8* %17, align 8
  %18 = bitcast %"core::option::Option<(usize, u8)>"* %0 to %"core::option::Option<(usize, u8)>::Some"*
  %19 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_12, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_12, i32 0, i32 1
  %23 = load i8, i8* %22, align 8
  %24 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %19, i32 0, i32 0
  store i64 %21, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %19, i32 0, i32 1
  store i8 %23, i8* %25, align 8
  %26 = bitcast %"core::option::Option<(usize, u8)>"* %0 to i64*
  store i64 1, i64* %26, align 8
  br label %bb8

panic:                                            ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1305 to %"core::panic::location::Location"*)) #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb9:                                              ; preds = %cleanup
  br label %bb10

cleanup:                                          ; preds = %panic
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %32 = bitcast { i8*, i32 }* %1 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37
}

; <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32* } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha97199958f34120bE"(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_12 = alloca { i64, i32* }, align 8
  %_3 = alloca i32*, align 8
  %1 = alloca { i64, i32* }, align 8
  %_5 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* %self to { i32*, i32* }*
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_4 = call align 4 dereferenceable_or_null(8) i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf92aeb8cb5b0df9dE"({ i32*, i32* }* align 8 dereferenceable(16) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %2 = call align 4 dereferenceable_or_null(8) i32* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h23a12c9a62356ca3E"(i32* align 4 dereferenceable_or_null(8) %_4)
  store i32* %2, i32** %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i32** %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_6 = select i1 %5, i64 1, i64 0
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %6 = bitcast i32** %_3 to %"proc_macro::TokenTree"**
  %val = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %6, align 8, !nonnull !20
  %7 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>", %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* %self, i32 0, i32 1
  %i = load i64, i64* %7, align 8
  %8 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>", %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* %self, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %9, i64 1)
  %_11.0 = extractvalue { i64, i1 } %10, 0
  %_11.1 = extractvalue { i64, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false)
  br i1 %11, label %panic, label %bb7

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %12 = call { i64, i32* } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h04b5d4340821ba2aE"()
  store { i64, i32* } %12, { i64, i32* }* %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %13 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %1, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  %17 = insertvalue { i64, i32* } undef, i64 %14, 0
  %18 = insertvalue { i64, i32* } %17, i32* %16, 1
  ret { i64, i32* } %18

bb7:                                              ; preds = %bb3
  %19 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>", %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* %self, i32 0, i32 1
  store i64 %_11.0, i64* %19, align 8
  %20 = bitcast { i64, i32* }* %_12 to i64*
  store i64 %i, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %_12, i32 0, i32 1
  %22 = bitcast i32** %21 to %"proc_macro::TokenTree"**
  store %"proc_macro::TokenTree"* %val, %"proc_macro::TokenTree"** %22, align 8
  %23 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %_12, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %_12, i32 0, i32 1
  %26 = load i32*, i32** %25, align 8, !nonnull !20
  %27 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %1, i32 0, i32 0
  store i64 %24, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %1, i32 0, i32 1
  store i32* %26, i32** %28, align 8
  br label %bb8

panic:                                            ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1305 to %"core::panic::location::Location"*)) #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb9:                                              ; preds = %cleanup
  br label %bb10

cleanup:                                          ; preds = %panic
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = extractvalue { i8*, i32 } %29, 1
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %31, i32* %33, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %34 = bitcast { i8*, i32 }* %0 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39
}

; <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64* } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he5ea92e7434567e0E"(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_12 = alloca { i64, i64* }, align 8
  %_3 = alloca i64*, align 8
  %1 = alloca { i64, i64* }, align 8
  %_5 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %self to { i64*, i64* }*
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_4 = call align 8 dereferenceable_or_null(48) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5eabe0f99f89e17E"({ i64*, i64* }* align 8 dereferenceable(16) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %2 = call align 8 dereferenceable_or_null(48) i64* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb67b4a95301191cbE"(i64* align 8 dereferenceable_or_null(48) %_4)
  store i64* %2, i64** %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64** %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_6 = select i1 %5, i64 1, i64 0
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %6 = bitcast i64** %_3 to %TokenTree**
  %val = load %TokenTree*, %TokenTree** %6, align 8, !nonnull !20
  %7 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>", %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %self, i32 0, i32 1
  %i = load i64, i64* %7, align 8
  %8 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>", %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %self, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %9, i64 1)
  %_11.0 = extractvalue { i64, i1 } %10, 0
  %_11.1 = extractvalue { i64, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false)
  br i1 %11, label %panic, label %bb7

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %12 = call { i64, i64* } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h4dfb458ba9ead32cE"()
  store { i64, i64* } %12, { i64, i64* }* %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = insertvalue { i64, i64* } undef, i64 %14, 0
  %18 = insertvalue { i64, i64* } %17, i64* %16, 1
  ret { i64, i64* } %18

bb7:                                              ; preds = %bb3
  %19 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>", %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %self, i32 0, i32 1
  store i64 %_11.0, i64* %19, align 8
  %20 = bitcast { i64, i64* }* %_12 to i64*
  store i64 %i, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_12, i32 0, i32 1
  %22 = bitcast i64** %21 to %TokenTree**
  store %TokenTree* %val, %TokenTree** %22, align 8
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_12, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_12, i32 0, i32 1
  %26 = load i64*, i64** %25, align 8, !nonnull !20
  %27 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  store i64 %24, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  store i64* %26, i64** %28, align 8
  br label %bb8

panic:                                            ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1305 to %"core::panic::location::Location"*)) #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb9:                                              ; preds = %cleanup
  br label %bb10

cleanup:                                          ; preds = %panic
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = extractvalue { i8*, i32 } %29, 1
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %31, i32* %33, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %34 = bitcast { i8*, i32 }* %0 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39
}

; <proc_macro::TokenStream as core::iter::traits::collect::Extend<proc_macro::TokenStream>>::extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN110_$LT$proc_macro..TokenStream$u20$as$u20$core..iter..traits..collect..Extend$LT$proc_macro..TokenStream$GT$$GT$6extend17h1d82487434fd6c45E"(%"proc_macro::TokenStream"* align 4 dereferenceable(4) %self, %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture dereferenceable(40) %streams) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>", align 8
  %_8 = alloca %"proc_macro::TokenStream", align 4
  %_6 = alloca %"proc_macro::TokenStream", align 4
  %_5 = alloca %"core::iter::sources::once::Once<proc_macro::TokenStream>", align 4
  %_4 = alloca %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", align 8
  %_3 = alloca %"proc_macro::TokenStream", align 4
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
; invoke proc_macro::TokenStream::new
  %5 = invoke i32 @_ZN10proc_macro11TokenStream3new17hb86dfb25bf941996E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i32 %5, i32* %3, align 4
  %6 = bitcast %"proc_macro::TokenStream"* %_8 to i8*
  %7 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::TokenStream"* %_8 to i32*
  %9 = load i32, i32* %8, align 4
; invoke core::mem::replace
  %10 = invoke i32 @_ZN4core3mem7replace17h7c413ed7fcb24aa5E(%"proc_macro::TokenStream"* align 4 dereferenceable(4) %self, i32 %9)
          to label %bb2 unwind label %cleanup

bb10:                                             ; preds = %bb7, %cleanup
  %11 = load i8, i8* %_10, align 1, !range !2
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb9, label %bb6

cleanup:                                          ; preds = %bb4, %bb3, %bb2, %bb1, %start
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i32 %10, i32* %2, align 4
  %18 = bitcast %"proc_macro::TokenStream"* %_6 to i8*
  %19 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 4, i1 false)
  %20 = bitcast %"proc_macro::TokenStream"* %_6 to i32*
  %21 = load i32, i32* %20, align 4
; invoke core::iter::sources::once::once
  %22 = invoke i32 @_ZN4core4iter7sources4once4once17heba0bc3abb166515E(i32 %21)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i32 %22, i32* %1, align 4
  %23 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %_5 to i8*
  %24 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 4, i1 false)
  store i8 0, i8* %_10, align 1
  %25 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %_9 to i8*
  %26 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %streams to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 40, i1 false)
  %27 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %_5 to i32*
  %28 = load i32, i32* %27, align 4
; invoke core::iter::traits::iterator::Iterator::chain
  invoke void @_ZN4core4iter6traits8iterator8Iterator5chain17hca449e62a3322f46E(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>") dereferenceable(48) %_4, i32 %28, %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture dereferenceable(40) %_9)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke core::iter::traits::iterator::Iterator::collect
  %29 = invoke i32 @_ZN4core4iter6traits8iterator8Iterator7collect17hbfd2d01ca989b7e5E(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture dereferenceable(48) %_4)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store i32 %29, i32* %0, align 4
  %30 = bitcast %"proc_macro::TokenStream"* %_3 to i8*
  %31 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 %31, i64 4, i1 false)
; invoke core::ptr::drop_in_place<proc_macro::TokenStream>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %self)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb5
  %32 = bitcast %"proc_macro::TokenStream"* %self to i8*
  %33 = bitcast %"proc_macro::TokenStream"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 4, i1 false)
  ret void

bb7:                                              ; preds = %cleanup1
  %34 = bitcast %"proc_macro::TokenStream"* %self to i8*
  %35 = bitcast %"proc_macro::TokenStream"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 4, i1 false)
  br label %bb10

cleanup1:                                         ; preds = %bb5
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  %38 = extractvalue { i8*, i32 } %36, 1
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %38, i32* %40, align 8
  br label %bb7

bb6:                                              ; preds = %bb9, %bb10
  %41 = bitcast { i8*, i32 }* %4 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = insertvalue { i8*, i32 } undef, i8* %42, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  resume { i8*, i32 } %46

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>,<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from>>
  call void @"_ZN4core3ptr212drop_in_place$LT$core..iter..adapters..map..Map$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$C$$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$..from$GT$$GT$17h258ecf846b955c31E"(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %streams) #18
  br label %bb6
}

; <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFrom<usize>>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN113_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFrom$LT$usize$GT$$GT$$GT$5index17h23c4d689e854a079E"(%"alloc::string::String"* align 8 dereferenceable(24) %self, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFull>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h5ba9688412c0923fE"(%"alloc::string::String"* align 8 dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17ha5dfc76fbe8f171dE"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %4
}

; <proc_macro::TokenStream as core::iter::traits::collect::FromIterator<proc_macro::TokenStream>>::from_iter
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN116_$LT$proc_macro..TokenStream$u20$as$u20$core..iter..traits..collect..FromIterator$LT$proc_macro..TokenStream$GT$$GT$9from_iter17hc0cc5efa9700f3f3E"(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture dereferenceable(48) %streams) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %2 = alloca { i8*, i32 }, align 8
  %_11 = alloca i8, align 1
  %_10 = alloca i8, align 1
  %_9 = alloca %"proc_macro::bridge::client::TokenStreamBuilder", align 4
  %_8 = alloca %"proc_macro::bridge::client::TokenStream", align 4
  %_6 = alloca i32*, align 8
  %_5 = alloca %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", align 8
  %_4 = alloca %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", align 8
  %builder = alloca %"proc_macro::bridge::client::TokenStreamBuilder", align 4
  %3 = alloca %"proc_macro::TokenStream", align 4
  store i8 0, i8* %_11, align 1
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_11, align 1
; invoke proc_macro::bridge::client::TokenStreamBuilder::new
  %4 = invoke i32 @_ZN10proc_macro6bridge6client18TokenStreamBuilder3new17h304fc462cd436c20E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i32 %4, i32* %1, align 4
  %5 = bitcast %"proc_macro::bridge::client::TokenStreamBuilder"* %builder to i8*
  %6 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  store i8 1, i8* %_10, align 1
  store i8 0, i8* %_11, align 1
  %7 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %_5 to i8*
  %8 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %streams to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 48, i1 false)
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17heba3cdde11bb1980E"(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>") dereferenceable(48) %_4, %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture dereferenceable(48) %_5)
          to label %bb2 unwind label %cleanup1

bb9:                                              ; preds = %bb6, %bb7, %cleanup
  %9 = load i8, i8* %_11, align 1, !range !2
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb8, label %bb5

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  %16 = bitcast i32** %_6 to %"proc_macro::bridge::client::TokenStreamBuilder"**
  store %"proc_macro::bridge::client::TokenStreamBuilder"* %builder, %"proc_macro::bridge::client::TokenStreamBuilder"** %16, align 8
  %17 = load i32*, i32** %_6, align 8, !nonnull !20
; invoke core::iter::traits::iterator::Iterator::for_each
  invoke void @_ZN4core4iter6traits8iterator8Iterator8for_each17ha33190d401dfceffE(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture dereferenceable(48) %_4, i32* align 4 dereferenceable(4) %17)
          to label %bb3 unwind label %cleanup1

bb7:                                              ; preds = %cleanup1
  %18 = load i8, i8* %_10, align 1, !range !2
  %19 = trunc i8 %18 to i1
  br i1 %19, label %bb6, label %bb9

cleanup1:                                         ; preds = %bb3, %bb2, %bb1
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  store i8 0, i8* %_10, align 1
  %25 = bitcast %"proc_macro::bridge::client::TokenStreamBuilder"* %_9 to i8*
  %26 = bitcast %"proc_macro::bridge::client::TokenStreamBuilder"* %builder to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 4, i1 false)
  %27 = bitcast %"proc_macro::bridge::client::TokenStreamBuilder"* %_9 to i32*
  %28 = load i32, i32* %27, align 4
; invoke proc_macro::bridge::client::TokenStreamBuilder::build
  %29 = invoke i32 @_ZN10proc_macro6bridge6client18TokenStreamBuilder5build17ha4d9293c16140d01E(i32 %28)
          to label %bb4 unwind label %cleanup1

bb4:                                              ; preds = %bb3
  store i32 %29, i32* %0, align 4
  %30 = bitcast %"proc_macro::bridge::client::TokenStream"* %_8 to i8*
  %31 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 %31, i64 4, i1 false)
  %32 = bitcast %"proc_macro::TokenStream"* %3 to %"proc_macro::bridge::client::TokenStream"*
  %33 = bitcast %"proc_macro::bridge::client::TokenStream"* %32 to i8*
  %34 = bitcast %"proc_macro::bridge::client::TokenStream"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %34, i64 4, i1 false)
  store i8 0, i8* %_10, align 1
  %35 = bitcast %"proc_macro::TokenStream"* %3 to i32*
  %36 = load i32, i32* %35, align 4
  ret i32 %36

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<proc_macro::bridge::client::TokenStreamBuilder>
  call void @"_ZN4core3ptr67drop_in_place$LT$proc_macro..bridge..client..TokenStreamBuilder$GT$17h00fd1e515f3b3c53E"(%"proc_macro::bridge::client::TokenStreamBuilder"* %builder) #18
  br label %bb9

bb5:                                              ; preds = %bb8, %bb9
  %37 = bitcast { i8*, i32 }* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1
  resume { i8*, i32 } %42

bb8:                                              ; preds = %bb9
; call core::ptr::drop_in_place<core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>,core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>,<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from>>>
  call void @"_ZN4core3ptr319drop_in_place$LT$core..iter..adapters..chain..Chain$LT$core..iter..sources..once..Once$LT$proc_macro..TokenStream$GT$$C$core..iter..adapters..map..Map$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$C$$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$..from$GT$$GT$$GT$17h27188bb8f9556545E"(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %streams) #18
  br label %bb5
}

; <proc_macro::TokenStream as core::iter::traits::collect::FromIterator<proc_macro::TokenStream>>::from_iter::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN116_$LT$proc_macro..TokenStream$u20$as$u20$core..iter..traits..collect..FromIterator$LT$proc_macro..TokenStream$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17h81933a2671fc7b40E"(i32** align 8 dereferenceable(8) %_1, i32 %0) unnamed_addr #0 {
start:
  %_4 = alloca %"proc_macro::bridge::client::TokenStream", align 4
  %1 = alloca i32, align 4
  %stream = alloca %"proc_macro::TokenStream", align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %"proc_macro::TokenStream"* %stream to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %4 = bitcast i32** %_1 to %"proc_macro::bridge::client::TokenStreamBuilder"**
  %_3 = load %"proc_macro::bridge::client::TokenStreamBuilder"*, %"proc_macro::bridge::client::TokenStreamBuilder"** %4, align 8, !nonnull !20
  %5 = bitcast %"proc_macro::TokenStream"* %stream to %"proc_macro::bridge::client::TokenStream"*
  %6 = bitcast %"proc_macro::bridge::client::TokenStream"* %_4 to i8*
  %7 = bitcast %"proc_macro::bridge::client::TokenStream"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::bridge::client::TokenStream"* %_4 to i32*
  %9 = load i32, i32* %8, align 4
; call proc_macro::bridge::client::TokenStreamBuilder::push
  call void @_ZN10proc_macro6bridge6client18TokenStreamBuilder4push17h78632d61250d2ab6E(%"proc_macro::bridge::client::TokenStreamBuilder"* align 4 dereferenceable(4) %_3, i32 %9)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h69d2c24778900438E"(i8* nonnull %unique) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf9b8b9f669db1ff5E"(i8* nonnull %unique)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h533c702b08329719E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hc9c52d7acb3a3410E"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; <<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN125_$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1c2820cbd069ea05E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i64 }* %self to %"alloc::vec::Vec<proc_macro::TokenTree>"**
  %_3 = load %"alloc::vec::Vec<proc_macro::TokenTree>"*, %"alloc::vec::Vec<proc_macro::TokenTree>"** %0, align 8, !nonnull !20
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_4 = load i64, i64* %1, align 8
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h70cf08fcd00ff5dbE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %_3, i64 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN125_$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf26897844fc86a74E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i64 }* %self to %"alloc::vec::Vec<TokenTree>"**
  %_3 = load %"alloc::vec::Vec<TokenTree>"*, %"alloc::vec::Vec<TokenTree>"** %0, align 8, !nonnull !20
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_4 = load i64, i64* %1, align 8
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17he8b407ec15d33071E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %_3, i64 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h27a433780a504339E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i8* nonnull %0, i8* %1) unnamed_addr #1 {
start:
  %iterator = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 1
  store i8* %1, i8** %3, align 8
; call core::slice::iter::Iter<T>::as_slice
  %4 = call { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h2fc8dd389f922073E"({ i8*, i8* }* align 8 dereferenceable(16) %iterator)
  %slice.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %slice.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::append_elements
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h035caf5151e7a454E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, [0 x i8]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,alloc::vec::into_iter::IntoIter<T>>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN136_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$alloc..vec..into_iter..IntoIter$LT$T$GT$$GT$$GT$11spec_extend17hedbb1958a72d260aE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self, %"alloc::vec::into_iter::IntoIter<TokenTree>"* noalias nocapture dereferenceable(32) %iterator) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke alloc::vec::into_iter::IntoIter<T,A>::as_slice
  %1 = invoke { [0 x %TokenTree]*, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$8as_slice17h71e2d4c80be3ce4bE"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %iterator)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_7.0 = extractvalue { [0 x %TokenTree]*, i64 } %1, 0
  %_7.1 = extractvalue { [0 x %TokenTree]*, i64 } %1, 1
; invoke alloc::vec::Vec<T,A>::append_elements
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h2d9131bc61f1c99aE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self, [0 x %TokenTree]* %_7.0, i64 %_7.1)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr82drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$proc_macro2..TokenTree$GT$$GT$17h68c19ac5709d6d72E"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* %iterator) #18
  br label %bb5

cleanup:                                          ; preds = %bb1, %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  %7 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %iterator, i32 0, i32 5
  %_9 = load %TokenTree*, %TokenTree** %7, align 8
  %8 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %iterator, i32 0, i32 4
  store %TokenTree* %_9, %TokenTree** %8, align 8
; call core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr82drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$proc_macro2..TokenTree$GT$$GT$17h68c19ac5709d6d72E"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* %iterator)
  br label %bb3

bb5:                                              ; preds = %bb4
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb3:                                              ; preds = %bb2
  ret void
}

; <<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN150_$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8858366ee19599daE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = alloca %"proc_macro::TokenTree"*, align 8
  %1 = alloca %"proc_macro::TokenTree"*, align 8
  %2 = bitcast i64** %self to %"alloc::vec::drain::Drain<proc_macro::TokenTree>"**
  %3 = load %"alloc::vec::drain::Drain<proc_macro::TokenTree>"*, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"** %2, align 8, !nonnull !20
  %4 = getelementptr inbounds %"alloc::vec::drain::Drain<proc_macro::TokenTree>", %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %3, i32 0, i32 1
  %_3 = load i64, i64* %4, align 8
  %_2 = icmp ugt i64 %_3, 0
  br i1 %_2, label %bb1, label %bb12

bb12:                                             ; preds = %bb11, %start
  ret void

bb1:                                              ; preds = %start
  %5 = bitcast i64** %self to %"alloc::vec::drain::Drain<proc_macro::TokenTree>"**
  %6 = load %"alloc::vec::drain::Drain<proc_macro::TokenTree>"*, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"** %5, align 8, !nonnull !20
  %_5 = getelementptr inbounds %"alloc::vec::drain::Drain<proc_macro::TokenTree>", %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %6, i32 0, i32 3
; call core::ptr::non_null::NonNull<T>::as_mut
  %source_vec = call align 8 dereferenceable(24) %"alloc::vec::Vec<proc_macro::TokenTree>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h3a37e3a1cc999094E"(i64** align 8 dereferenceable(8) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::len
  %start1 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h5043d7be96cfe829E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %source_vec)
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = bitcast i64** %self to %"alloc::vec::drain::Drain<proc_macro::TokenTree>"**
  %8 = load %"alloc::vec::drain::Drain<proc_macro::TokenTree>"*, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"** %7, align 8, !nonnull !20
  %9 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %8 to i64*
  %tail = load i64, i64* %9, align 8
  %_9 = icmp ne i64 %tail, %start1
  br i1 %_9, label %bb4, label %bb10

bb10:                                             ; preds = %bb9, %bb3
  %10 = bitcast i64** %self to %"alloc::vec::drain::Drain<proc_macro::TokenTree>"**
  %11 = load %"alloc::vec::drain::Drain<proc_macro::TokenTree>"*, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"** %10, align 8, !nonnull !20
  %12 = getelementptr inbounds %"alloc::vec::drain::Drain<proc_macro::TokenTree>", %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %11, i32 0, i32 1
  %_28 = load i64, i64* %12, align 8
  %_26 = add i64 %start1, %_28
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h70cf08fcd00ff5dbE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %source_vec, i64 %_26)
  br label %bb11

bb4:                                              ; preds = %bb3
; call alloc::vec::Vec<T,A>::as_ptr
  %_13 = call %"proc_macro::TokenTree"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h4c3e04a6b3f0f0c4E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %source_vec)
  br label %bb5

bb5:                                              ; preds = %bb4
  %13 = getelementptr inbounds %"proc_macro::TokenTree", %"proc_macro::TokenTree"* %_13, i64 %tail
  store %"proc_macro::TokenTree"* %13, %"proc_macro::TokenTree"** %0, align 8
  %14 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %0, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_17 = call %"proc_macro::TokenTree"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h6f4663d8bec95cf4E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %source_vec)
  br label %bb7

bb7:                                              ; preds = %bb6
  %15 = getelementptr inbounds %"proc_macro::TokenTree", %"proc_macro::TokenTree"* %_17, i64 %start1
  store %"proc_macro::TokenTree"* %15, %"proc_macro::TokenTree"** %1, align 8
  %_3.i = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %16 = bitcast i64** %self to %"alloc::vec::drain::Drain<proc_macro::TokenTree>"**
  %17 = load %"alloc::vec::drain::Drain<proc_macro::TokenTree>"*, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"** %16, align 8, !nonnull !20
  %18 = getelementptr inbounds %"alloc::vec::drain::Drain<proc_macro::TokenTree>", %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %17, i32 0, i32 1
  %_23 = load i64, i64* %18, align 8
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17hed681f37ab6bf5ebE(%"proc_macro::TokenTree"* %14, %"proc_macro::TokenTree"* %_3.i, i64 %_23)
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb10

bb11:                                             ; preds = %bb10
  br label %bb12
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h290d2156755b852dE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2, %"core::panic::location::Location"* align 8 dereferenceable(24) %3) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %7, align 8
; call <T as core::convert::From<T>>::from
  %8 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hbed30968fe0c395eE"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %8, 0
  %_3.1 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 %_3.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 %_3.1, i64* %12, align 8
  %13 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %13, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h31dc57a528e3b351E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2, %"core::panic::location::Location"* align 8 dereferenceable(24) %3) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %7, align 8
; call <T as core::convert::From<T>>::from
  %8 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hbed30968fe0c395eE"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %8, 0
  %_3.1 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 %_3.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 %_3.1, i64* %12, align 8
  %13 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %13, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3336dc0804503aa4E"(%"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd7066e7dd5e77a2eE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Err"*
  %3 = bitcast %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Err"* %2 to %"parse::Reject"*
  %4 = getelementptr inbounds %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>", %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* %0, i32 0, i32 1
  store i8 2, i8* %4, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3495ee785fded742E"(%"core::result::Result<TokenStream, LexError>"* noalias nocapture sret(%"core::result::Result<TokenStream, LexError>") dereferenceable(48) %0, i1 zeroext %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 {
start:
  %residual = alloca i8, align 1
  %3 = zext i1 %1 to i8
  store i8 %3, i8* %residual, align 1
  %4 = load i8, i8* %residual, align 1, !range !2
  %e = trunc i8 %4 to i1
; call <T as core::convert::From<T>>::from
  %_3 = call zeroext i1 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h4789199f6831155eE"(i1 zeroext %e)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<TokenStream, LexError>"* %0 to %"core::result::Result<TokenStream, LexError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<TokenStream, LexError>::Err", %"core::result::Result<TokenStream, LexError>::Err"* %5, i32 0, i32 1
  %7 = zext i1 %_3 to i8
  store i8 %7, i8* %6, align 1
  %8 = bitcast %"core::result::Result<TokenStream, LexError>"* %0 to i8*
  store i8 1, i8* %8, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3a4a0e51c2cc4f45E"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = alloca i8, align 1
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc9768cb5f877874bE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast i8* %1 to %"core::result::Result<(), core::fmt::Error>::Err"*
  %3 = getelementptr inbounds %"core::result::Result<(), core::fmt::Error>::Err", %"core::result::Result<(), core::fmt::Error>::Err"* %2, i32 0, i32 1
  store i8 1, i8* %1, align 1
  %4 = load i8, i8* %1, align 1, !range !2
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h47721b912c6d4e5aE"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = alloca { i8*, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h4469f8e31adfd146E"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i8*, i64 }* %1 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err"*
  %3 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err"* %2 to %"core::alloc::AllocError"*
  %4 = bitcast { i8*, i64 }* %1 to {}**
  store {}* null, {}** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4c7f3ff78e8c9c16E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2, %"core::panic::location::Location"* align 8 dereferenceable(24) %3) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %7, align 8
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %8 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hc9c52d7acb3a3410E"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %8, 0
  %_3.1 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 %_3.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 %_3.1, i64* %12, align 8
  %13 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %13, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h598450d9038a5217E"(%"core::result::Result<imp::Literal, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::Literal, imp::LexError>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
; call <proc_macro2::imp::LexError as core::convert::From<proc_macro2::fallback::LexError>>::from
  %_3 = call zeroext i1 @"_ZN105_$LT$proc_macro2..imp..LexError$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..LexError$GT$$GT$4from17h656cb523871d4b0eE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<imp::Literal, imp::LexError>"* %0 to %"core::result::Result<imp::Literal, imp::LexError>::Err"*
  %3 = getelementptr inbounds %"core::result::Result<imp::Literal, imp::LexError>::Err", %"core::result::Result<imp::Literal, imp::LexError>::Err"* %2, i32 0, i32 1
  %4 = zext i1 %_3 to i8
  store i8 %4, i8* %3, align 1
  %5 = bitcast %"core::result::Result<imp::Literal, imp::LexError>"* %0 to i8*
  store i8 1, i8* %5, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h72dfb3c4b3c1bfd9E"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = alloca { i8*, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd7066e7dd5e77a2eE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i8*, i64 }* %1 to %"core::result::Result<parse::Cursor, parse::Reject>::Err"*
  %3 = bitcast %"core::result::Result<parse::Cursor, parse::Reject>::Err"* %2 to %"parse::Reject"*
  %4 = bitcast { i8*, i64 }* %1 to {}**
  store {}* null, {}** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h83926ac799697eaaE"(%"core::result::Result<imp::TokenStream, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::TokenStream, imp::LexError>") dereferenceable(48) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
; call <proc_macro2::imp::LexError as core::convert::From<proc_macro2::fallback::LexError>>::from
  %_3 = call zeroext i1 @"_ZN105_$LT$proc_macro2..imp..LexError$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..LexError$GT$$GT$4from17h656cb523871d4b0eE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<imp::TokenStream, imp::LexError>"* %0 to %"core::result::Result<imp::TokenStream, imp::LexError>::Err"*
  %3 = getelementptr inbounds %"core::result::Result<imp::TokenStream, imp::LexError>::Err", %"core::result::Result<imp::TokenStream, imp::LexError>::Err"* %2, i32 0, i32 1
  %4 = zext i1 %_3 to i8
  store i8 %4, i8* %3, align 1
  %5 = bitcast %"core::result::Result<imp::TokenStream, imp::LexError>"* %0 to i8*
  store i8 1, i8* %5, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a7a491fd5874a92E"(%"core::result::Result<(parse::Cursor, Punct), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, Punct), parse::Reject>") dereferenceable(32) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd7066e7dd5e77a2eE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(parse::Cursor, Punct), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, Punct), parse::Reject>::Err"*
  %3 = bitcast %"core::result::Result<(parse::Cursor, Punct), parse::Reject>::Err"* %2 to %"parse::Reject"*
  %4 = getelementptr inbounds %"core::result::Result<(parse::Cursor, Punct), parse::Reject>", %"core::result::Result<(parse::Cursor, Punct), parse::Reject>"* %0, i32 0, i32 1
  store i32 1114112, i32* %4, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ce4cbe066a48548E"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = alloca { i64, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h65cb161b8e2bee4dE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %1 to %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err"*
  %3 = bitcast %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err"* %2 to %"core::alloc::layout::LayoutError"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h9ce96231fac9cb64E"(%"core::result::Result<imp::TokenStream, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::TokenStream, imp::LexError>") dereferenceable(48) %0, i1 zeroext %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 {
start:
  %residual = alloca i8, align 1
  %3 = zext i1 %1 to i8
  store i8 %3, i8* %residual, align 1
  %4 = load i8, i8* %residual, align 1, !range !2
  %e = trunc i8 %4 to i1
; call <T as core::convert::From<T>>::from
  %_3 = call zeroext i1 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h69fec645575d3ee5E"(i1 zeroext %e)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<imp::TokenStream, imp::LexError>"* %0 to %"core::result::Result<imp::TokenStream, imp::LexError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<imp::TokenStream, imp::LexError>::Err", %"core::result::Result<imp::TokenStream, imp::LexError>::Err"* %5, i32 0, i32 1
  %7 = zext i1 %_3 to i8
  store i8 %7, i8* %6, align 1
  %8 = bitcast %"core::result::Result<imp::TokenStream, imp::LexError>"* %0 to i8*
  store i8 1, i8* %8, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17haf45217a71240142E"(%"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd7066e7dd5e77a2eE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>::Err"*
  %3 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>::Err"* %2 to %"parse::Reject"*
  %4 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* %0 to {}**
  store {}* null, {}** %4, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbb6ca65419a1100fE"(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>") dereferenceable(56) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd7066e7dd5e77a2eE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Err"*
  %3 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Err"* %2 to %"parse::Reject"*
  %4 = getelementptr inbounds %"core::result::Result<(parse::Cursor, Ident), parse::Reject>", %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* %0, i32 0, i32 1
  store i32 2, i32* %4, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc78c54a1f193f2b1E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2, %"core::panic::location::Location"* align 8 dereferenceable(24) %3) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %7, align 8
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %8 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hc9c52d7acb3a3410E"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %8, 0
  %_3.1 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 %_3.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 %_3.1, i64* %12, align 8
  %13 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %13, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd450955ea2cdca9aE"(%"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd7066e7dd5e77a2eE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Err"*
  %3 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Err"* %2 to %"parse::Reject"*
  %4 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %0 to {}**
  store {}* null, {}** %4, align 8
  ret void
}

; <<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN157_$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h73bdd535d15ae295E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_5 = alloca { i64*, i64 }, align 8
  store i8 0, i8* %_10, align 1
  %1 = bitcast i64** %self to %"alloc::vec::into_iter::IntoIter<TokenTree>"**
  %2 = load %"alloc::vec::into_iter::IntoIter<TokenTree>"*, %"alloc::vec::into_iter::IntoIter<TokenTree>"** %1, align 8, !nonnull !20
  %_4 = bitcast %"alloc::vec::into_iter::IntoIter<TokenTree>"* %2 to %"alloc::alloc::Global"*
  store i8 1, i8* %_10, align 1
; call core::ptr::read
  call void @_ZN4core3ptr4read17hb8940c633bb47f85E(%"alloc::alloc::Global"* %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %self to %"alloc::vec::into_iter::IntoIter<TokenTree>"**
  %4 = load %"alloc::vec::into_iter::IntoIter<TokenTree>"*, %"alloc::vec::into_iter::IntoIter<TokenTree>"** %3, align 8, !nonnull !20
  %5 = bitcast %"alloc::vec::into_iter::IntoIter<TokenTree>"* %4 to i64**
  %_7 = load i64*, i64** %5, align 8, !nonnull !20
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = invoke %TokenTree* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he4fe09edffbb8032E"(i64* nonnull %_7)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %6 = bitcast i64** %self to %"alloc::vec::into_iter::IntoIter<TokenTree>"**
  %7 = load %"alloc::vec::into_iter::IntoIter<TokenTree>"*, %"alloc::vec::into_iter::IntoIter<TokenTree>"** %6, align 8, !nonnull !20
  %8 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %7, i32 0, i32 3
  %_8 = load i64, i64* %8, align 8
  store i8 0, i8* %_10, align 1
; invoke alloc::raw_vec::RawVec<T,A>::from_raw_parts_in
  %9 = invoke { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17h39c8e79352bd938dE"(%TokenTree* %_6, i64 %_8)
          to label %bb3 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %10 = load i8, i8* %_10, align 1, !range !2
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  store { i64*, i64 } %9, { i64*, i64 }* %_5, align 8
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro2::TokenTree>>
  invoke void @"_ZN4core3ptr73drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro2..TokenTree$GT$$GT$17h2a7bb5db53d57cc8E"({ i64*, i64 }* %_5)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_10, align 1
  ret void

bb5:                                              ; preds = %bb6, %bb7
  %17 = bitcast { i8*, i32 }* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

bb6:                                              ; preds = %bb7
  br label %bb5
}

; <T as core::any::Any>::type_id
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h55600e1cfd680d3fE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::any::TypeId::of
  %0 = call i64 @_ZN4core3any6TypeId2of17h5f53d1458b757991E()
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; std::sys_common::backtrace::__rust_end_short_backtrace
; Function Attrs: noinline noreturn nonlazybind uwtable
define void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17h8dfeec5e3692ccfaE(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", align 8
  %1 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_2 to i8*
  %2 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call std::panicking::begin_panic::{{closure}}
  call void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17h196b4a83bda079e4E"(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_2) #19
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::hint::black_box
  invoke void @_ZN4core4hint9black_box17hd6bd0c80ec9af505E()
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.trap()
  unreachable

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13
}

; std::sync::once::Once::is_completed
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std4sync4once4Once12is_completed17hccb8b8dfe00049fdE(%"std::sync::once::Once"* align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  %_3 = bitcast %"std::sync::once::Once"* %self to %"core::sync::atomic::AtomicUsize"*
  store i8 2, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !23
; call core::sync::atomic::AtomicUsize::load
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize4load17h96fd510a8ef09f55E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i8 %0)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 %_2, 3
  ret i1 %1
}

; std::sync::once::Once::call_once
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync4once4Once9call_once17h6d0da003c4ba75aaE(%"std::sync::once::Once"* align 8 dereferenceable(8) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_12 = alloca i8*, align 8
  %f = alloca i8, align 1
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; invoke std::sync::once::Once::is_completed
  %_3 = invoke zeroext i1 @_ZN3std4sync4once4Once12is_completed17hccb8b8dfe00049fdE(%"std::sync::once::Once"* align 8 dereferenceable(8) %self)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb3

bb10:                                             ; preds = %bb7, %cleanup
  %1 = load i8, i8* %_14, align 1, !range !2
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb9, label %bb8

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb10

bb3:                                              ; preds = %bb1
  store i8 0, i8* %_14, align 1
  %8 = bitcast i8* %f to %"core::option::Option<fn() {detection::initialize}>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<fn() {detection::initialize}>::Some", %"core::option::Option<fn() {detection::initialize}>::Some"* %8, i32 0, i32 1
  store i8 1, i8* %f, align 1
  store i8* %f, i8** %_12, align 8
  %_9.0 = bitcast i8** %_12 to {}*
; invoke std::sync::once::Once::call_inner
  invoke void @_ZN3std4sync4once4Once10call_inner17h9cbe709b601a3566E(%"std::sync::once::Once"* align 8 dereferenceable(8) %self, i1 zeroext false, {}* nonnull align 1 %_9.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*))
          to label %bb4 unwind label %cleanup1

bb2:                                              ; preds = %bb1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  ret void

bb4:                                              ; preds = %bb3
  br label %bb5

bb7:                                              ; preds = %cleanup1
  br label %bb10

cleanup1:                                         ; preds = %bb3
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
  br label %bb6

bb8:                                              ; preds = %bb9, %bb10
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb9:                                              ; preds = %bb10
  br label %bb8
}

; std::sync::once::Once::call_once::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h8a5def87039816d6E"(i8** align 8 dereferenceable(8) %_1, { i64, i8 }* align 8 dereferenceable(16) %_2) unnamed_addr #0 {
start:
  %_5 = load i8*, i8** %_1, align 8, !nonnull !20
; call core::option::Option<T>::take
  %_4 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$4take17h10fce18ac9eb6dd9E"(i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::unwrap
  call void @"_ZN4core6option15Option$LT$T$GT$6unwrap17hc8fabe580be02c58E"(i1 zeroext %_4, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1311 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h824a0c88f3f31544E()
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; std::panic::catch_unwind
; Function Attrs: nonlazybind uwtable
define void @_ZN3std5panic12catch_unwind17hc4328dbb745a1d0eE(%"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* noalias nocapture sret(%"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>") dereferenceable(24) %0, i64* align 8 dereferenceable(16) %f) unnamed_addr #1 {
start:
; call std::panicking::try
  call void @_ZN3std9panicking3try17he0a4e287a38f7ab1E(%"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* noalias nocapture sret(%"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>") dereferenceable(24) %0, i64* align 8 dereferenceable(16) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::panicking::begin_panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
define void @_ZN3std9panicking11begin_panic17he0a282308de06f91E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #3 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca i8, align 1
  %_3 = alloca %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", align 8
  store i8 0, i8* %_4, align 1
  store i8 1, i8* %_4, align 1
; invoke core::panic::location::Location::caller
  %loc = invoke align 8 dereferenceable(24) %"core::panic::location::Location"* @_ZN4core5panic8location8Location6caller17h66ab9d009774583dE(%"core::panic::location::Location"* align 8 dereferenceable(24) %0)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_4, align 1
  %2 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_3 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %msg.1, i64* %4, align 8
  %5 = getelementptr inbounds %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_3, i32 0, i32 1
  store %"core::panic::location::Location"* %loc, %"core::panic::location::Location"** %5, align 8
; invoke std::sys_common::backtrace::__rust_end_short_backtrace
  invoke void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17h8dfeec5e3692ccfaE(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_3) #19
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %6 = load i8, i8* %_4, align 1, !range !2
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb3, label %bb2

cleanup:                                          ; preds = %bb1, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb3, %bb4
  %13 = bitcast { i8*, i32 }* %1 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb3:                                              ; preds = %bb4
  br label %bb2
}

; std::panicking::begin_panic::PanicPayload<A>::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17ha0cd1300a9fb2e4cE"([0 x i8]* nonnull align 1 %inner.0, i64 %inner.1) unnamed_addr #1 {
start:
  %_2 = alloca { i8*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %inner.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %inner.1, i64* %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %5, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { i8*, i64 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64 } %14, i64 %13, 1
  ret { i8*, i64 } %15
}

; std::panicking::begin_panic::{{closure}}
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17h196b4a83bda079e4E"(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_1) unnamed_addr #4 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i64*, align 8
  %_5 = alloca { i8*, i64 }, align 8
  %1 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !20
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_6.1 = load i64, i64* %3, align 8
; call std::panicking::begin_panic::PanicPayload<A>::new
  %4 = call { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17ha0cd1300a9fb2e4cE"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
  store { i8*, i64 } %4, { i8*, i64 }* %_5, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_2.0 = bitcast { i8*, i64 }* %_5 to {}*
  %5 = bitcast i64** %_7 to {}**
  store {}* null, {}** %5, align 8
  %6 = getelementptr inbounds %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1, i32 0, i32 1
  %_8 = load %"core::panic::location::Location"*, %"core::panic::location::Location"** %6, align 8, !nonnull !20
  %7 = load i64*, i64** %_7, align 8
; invoke std::panicking::rust_panic_with_hook
  invoke void @_ZN3std9panicking20rust_panic_with_hook17h7a6b21c56a75680aE({}* nonnull align 1 %_2.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, [0 x i8] }>* @vtable.2 to [3 x i64]*), i64* align 8 dereferenceable_or_null(48) %7, %"core::panic::location::Location"* align 8 dereferenceable(24) %_8) #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18
}

; std::panicking::try
; Function Attrs: nonlazybind uwtable
define void @_ZN3std9panicking3try17he0a4e287a38f7ab1E(%"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* noalias nocapture sret(%"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>") dereferenceable(24) %0, i64* align 8 dereferenceable(16) %f) unnamed_addr #1 {
start:
  %1 = alloca i64*, align 8
  %2 = alloca %"core::result::Result<proc_macro::TokenStream, imp::LexError>", align 4
  %3 = alloca i64, align 8
  %slot.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>", align 4
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %_14 = alloca %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>", align 4
  %_13 = alloca %"core::result::Result<proc_macro::TokenStream, imp::LexError>", align 4
  %data = alloca %"std::panicking::r#try::Data<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:80], core::result::Result<proc_macro::TokenStream, imp::LexError>>", align 8
  store i64* %f, i64** %1, align 8
  %6 = load i64*, i64** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"std::panicking::r#try::Data<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:80], core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %data to i64**
  store i64* %6, i64** %7, align 8
  %data_ptr = bitcast %"std::panicking::r#try::Data<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:80], core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %data to i8*
  %8 = call i32 @__rust_try(void (i8*)* @_ZN3std9panicking3try7do_call17h425aac691c4a10b8E, i8* %data_ptr, void (i8*, i8*)* @_ZN3std9panicking3try8do_catch17h61270a3e0aa94697E)
  store i32 %8, i32* %5, align 4
  %_9 = load i32, i32* %5, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = icmp eq i32 %_9, 0
  br i1 %9, label %bb3, label %bb5

bb3:                                              ; preds = %bb2
  %10 = bitcast %"std::panicking::r#try::Data<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:80], core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %data to %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>"*
  %11 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %_14 to i8*
  %12 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 8 %12, i64 8, i1 false)
  %13 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %_14 to i64*
  %14 = load i64, i64* %13, align 4
  store i64 %14, i64* %3, align 8
  %15 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %slot.i to i8*
  %16 = bitcast i64* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 8 %16, i64 8, i1 false)
  %17 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %slot.i to %"core::result::Result<proc_macro::TokenStream, imp::LexError>"*
  %18 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %2 to i8*
  %19 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 8, i1 false)
  %20 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %2 to i64*
  %21 = load i64, i64* %20, align 4
  store i64 %21, i64* %4, align 8
  %22 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %_13 to i8*
  %23 = bitcast i64* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 8 %23, i64 8, i1 false)
  br label %bb4

bb5:                                              ; preds = %bb2
  %24 = bitcast %"std::panicking::r#try::Data<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:80], core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %data to { i8*, i64* }*
  %25 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %24, i32 0, i32 0
  %_17.0 = load i8*, i8** %25, align 8, !nonnull !20
  %26 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %24, i32 0, i32 1
  %_17.1 = load i64*, i64** %26, align 8, !nonnull !20
  call void @llvm.experimental.noalias.scope.decl(metadata !24)
  %27 = bitcast i8* %_17.0 to {}*
  %28 = bitcast i64* %_17.1 to [3 x i64]*
  %29 = insertvalue { {}*, [3 x i64]* } undef, {}* %27, 0
  %30 = insertvalue { {}*, [3 x i64]* } %29, [3 x i64]* %28, 1
  %_16.0 = extractvalue { {}*, [3 x i64]* } %30, 0
  %_16.1 = extractvalue { {}*, [3 x i64]* } %30, 1
  br label %bb6

bb6:                                              ; preds = %bb5
  %31 = bitcast %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* %0 to %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Err"*
  %32 = getelementptr inbounds %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Err", %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Err"* %31, i32 0, i32 1
  %33 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %32, i32 0, i32 0
  store {}* %_16.0, {}** %33, align 8
  %34 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %32, i32 0, i32 1
  store [3 x i64]* %_16.1, [3 x i64]** %34, align 8
  %35 = bitcast %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* %0 to i32*
  store i32 1, i32* %35, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  ret void

bb4:                                              ; preds = %bb3
  %36 = bitcast %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* %0 to %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok"*
  %37 = getelementptr inbounds %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok", %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok"* %36, i32 0, i32 1
  %38 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %37 to i8*
  %39 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %39, i64 8, i1 false)
  %40 = bitcast %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* %0 to i32*
  store i32 0, i32* %40, align 8
  br label %bb7
}

; std::panicking::try::do_call
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN3std9panicking3try7do_call17h425aac691c4a10b8E(i8* %data) unnamed_addr #0 {
start:
  %_2.i = alloca %"core::result::Result<proc_macro::TokenStream, imp::LexError>", align 4
  %0 = alloca %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>", align 4
  %1 = alloca i64, align 8
  %value.i = alloca %"core::result::Result<proc_macro::TokenStream, imp::LexError>", align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %_9 = alloca %"core::result::Result<proc_macro::TokenStream, imp::LexError>", align 4
  %_8 = alloca %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>", align 4
  %data1 = bitcast i8* %data to %"std::panicking::r#try::Data<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:80], core::result::Result<proc_macro::TokenStream, imp::LexError>>"*
  %_7 = bitcast %"std::panicking::r#try::Data<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:80], core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %data1 to i64**
; call core::mem::manually_drop::ManuallyDrop<T>::take
  %f = call align 8 dereferenceable(16) i64* @"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$4take17h2a810a18a4c6c712E"(i64** align 8 dereferenceable(8) %_7)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::imp::proc_macro_parse::{{closure}}
  %4 = call i64 @"_ZN11proc_macro23imp16proc_macro_parse28_$u7b$$u7b$closure$u7d$$u7d$17hd069dffc287c9e0aE"(i64* align 8 dereferenceable(16) %f)
  store i64 %4, i64* %3, align 8
  %5 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %_9 to i8*
  %6 = bitcast i64* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 8, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %7 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %_9 to i64*
  %8 = load i64, i64* %7, align 4
  store i64 %8, i64* %1, align 8
  %9 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %value.i to i8*
  %10 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 8 %10, i64 8, i1 false)
  %11 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %_2.i to i8*
  %12 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %value.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 8, i1 false)
  %13 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %0 to %"core::result::Result<proc_macro::TokenStream, imp::LexError>"*
  %14 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %13 to i8*
  %15 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 8, i1 false)
  %16 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %0 to i64*
  %17 = load i64, i64* %16, align 4
  store i64 %17, i64* %2, align 8
  %18 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %_8 to i8*
  %19 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 8 %19, i64 8, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %20 = bitcast %"std::panicking::r#try::Data<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:80], core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %data1 to %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>"*
  %21 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %20 to i8*
  %22 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 8, i1 false)
  ret void
}

; std::panicking::try::do_catch
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN3std9panicking3try8do_catch17h61270a3e0aa94697E(i8* %data, i8* %payload) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64* }, align 8
  %data1 = bitcast i8* %data to %"std::panicking::r#try::Data<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:80], core::result::Result<proc_macro::TokenStream, imp::LexError>>"*
; call std::panicking::try::cleanup
  %1 = call { {}*, [3 x i64]* } @_ZN3std9panicking3try7cleanup17h40bd3b401a1044daE(i8* %payload)
  %obj.0 = extractvalue { {}*, [3 x i64]* } %1, 0
  %obj.1 = extractvalue { {}*, [3 x i64]* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  call void @llvm.experimental.noalias.scope.decl(metadata !27)
  %2 = bitcast { i8*, i64* }* %0 to { {}*, [3 x i64]* }*
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0
  store {}* %obj.0, {}** %3, align 8, !noalias !27
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1
  store [3 x i64]* %obj.1, [3 x i64]** %4, align 8, !noalias !27
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8, !noalias !27, !nonnull !20
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 1
  %8 = load i64*, i64** %7, align 8, !noalias !27, !nonnull !20
  %9 = insertvalue { i8*, i64* } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64* } %9, i64* %8, 1
  %_8.0 = extractvalue { i8*, i64* } %10, 0
  %_8.1 = extractvalue { i8*, i64* } %10, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast %"std::panicking::r#try::Data<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:80], core::result::Result<proc_macro::TokenStream, imp::LexError>>"* %data1 to { i8*, i64* }*
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 0
  store i8* %_8.0, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 1
  store i64* %_8.1, i64** %13, align 8
  ret void
}

; <bool as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h39094b79d8ddc8d2E"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
; call <bool as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17he384601f74d7151bE"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6affa780ef239c9eE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !20
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_4.1 = load i64, i64* %1, align 8
; call <str as core::fmt::Debug>::fmt
  %2 = call zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17hec7dec34a2bb4d4fE"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb29883a703fee44cE"(%"fallback::Span"** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %"fallback::Span"*, %"fallback::Span"** %self, align 8, !nonnull !20
; call <proc_macro2::fallback::Span as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN64_$LT$proc_macro2..fallback..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h6a5a61c96466b4eaE"(%"fallback::Span"* nonnull align 1 %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbb7832b8182a928cE"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load i64*, i64** %self, align 8, !nonnull !20
; call core::fmt::num::<impl core::fmt::Debug for usize>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h15cd1bc9b60d9c03E"(i64* align 8 dereferenceable(8) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbd59a023b0efb1d8E"({ i64, i64 }** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load { i64, i64 }*, { i64, i64 }** %self, align 8, !nonnull !20
; call <core::option::Option<T> as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hee6ac4d65e240d92E"({ i64, i64 }* align 8 dereferenceable(16) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h62f1d62ca1ca43d7E"(%Ident** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %Ident*, %Ident** %self, align 8, !nonnull !20
; call <proc_macro2::Ident as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5ff20e04791d3aaaE"(%Ident* align 8 dereferenceable(40) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hcf01ed8bccab3e19E"(%"fallback::Ident"** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %"fallback::Ident"*, %"fallback::Ident"** %self, align 8, !nonnull !20
; call <proc_macro2::fallback::Ident as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h26ed2cfa0936d048E"(%"fallback::Ident"* align 8 dereferenceable(32) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::UpperHex>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN45_$LT$$RF$T$u20$as$u20$core..fmt..UpperHex$GT$3fmt17h80414fb368787636E"(i8** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load i8*, i8** %self, align 8, !nonnull !20
; call core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17hae1e0652414f7084E"(i8* align 1 dereferenceable(1) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h07bfc4e3cf0b8fd1E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i64* align 8 dereferenceable(8) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$isize$GT$3fmt17h21a09cd501ba5453E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h1b0f56fe27d86521E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, %"fallback::TokenStream"* align 8 dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <proc_macro2::fallback::TokenStream as core::fmt::Display>::fmt
  %_7 = invoke zeroext i1 @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17hb9480eefce8a5abeE"(%"fallback::TokenStream"* align 8 dereferenceable(24) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h27ff7da8335f0d1bE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i16* align 2 dereferenceable(2) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u16$GT$3fmt17hb1ab876e21a62ebbE"(i16* align 2 dereferenceable(2) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h2ff02d88f514a953E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, double* align 8 dereferenceable(8) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::fmt::float::<impl core::fmt::Display for f64>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f64$GT$3fmt17hf952995d1c1d8ef9E"(double* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h354f13bd570768bcE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i32* align 4 dereferenceable(4) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h143e132e8c82669cE"(i32* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h3be4f34a0fc9cf89E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i32* align 4 dereferenceable(4) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE"(i32* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h5ec82e89413bd9a8E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i128* align 8 dereferenceable(16) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::fmt::num::<impl core::fmt::Display for i128>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..Display$u20$for$u20$i128$GT$3fmt17h8cbb3606ac433127E"(i128* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h8821984e9d6fbcb0E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i64* align 8 dereferenceable(8) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::fmt::num::imp::<impl core::fmt::Display for i64>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h5c41694b747c6f84E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h93260b07fd8aaa8eE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i128* align 8 dereferenceable(16) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::fmt::num::<impl core::fmt::Display for u128>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..Display$u20$for$u20$u128$GT$3fmt17h60917929869bc44cE"(i128* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hab2f83e73ee933d1E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i64* align 8 dereferenceable(8) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hb773b8474d27ceb8E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, float* align 4 dereferenceable(4) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::fmt::float::<impl core::fmt::Display for f32>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f32$GT$3fmt17hc227dd5d11708e7cE"(float* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hc14660f755d6c2f3E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i16* align 2 dereferenceable(2) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::fmt::num::imp::<impl core::fmt::Display for i16>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i16$GT$3fmt17ha06c35c1e7aaace7E"(i16* align 2 dereferenceable(2) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hd59a54fcb3b241b5E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i64* align 8 dereferenceable(8) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hc0f7594e99de2828E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hece733d43658e347E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, %Ident* align 8 dereferenceable(40) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <proc_macro2::Ident as core::fmt::Display>::fmt
  %_7 = invoke zeroext i1 @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5ff20e04791d3aaaE"(%Ident* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1336 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1323 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <i8 as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN46_$LT$i8$u20$as$u20$alloc..string..ToString$GT$9to_string17h71f6f4dc6e368fe4E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i8* align 1 dereferenceable(1) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %n = alloca i8, align 1
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17hddc02b7ab7666e98E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i64 4)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = load i8, i8* %self, align 1
  %1 = icmp slt i8 %_3, 0
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %1, label %bb3, label %bb5

bb14:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb15

cleanup:                                          ; preds = %bb12, %bb10, %bb8, %bb5, %bb3
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb14

bb5:                                              ; preds = %bb4, %bb2
  %_7 = load i8, i8* %self, align 1
; invoke core::num::<impl i8>::unsigned_abs
  %7 = invoke i8 @"_ZN4core3num20_$LT$impl$u20$i8$GT$12unsigned_abs17hf643b95baf117443E"(i8 %_7)
          to label %bb6 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %buf, i32 45)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br label %bb5

bb6:                                              ; preds = %bb5
  store i8 %7, i8* %n, align 1
  %_9 = load i8, i8* %n, align 1
  %_8 = icmp uge i8 %_9, 10
  br i1 %_8, label %bb7, label %bb12

bb12:                                             ; preds = %bb11, %bb6
  %_24 = load i8, i8* %n, align 1
  %_23 = add i8 48, %_24
  %_22 = zext i8 %_23 to i32
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %buf, i32 %_22)
          to label %bb13 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %_11 = load i8, i8* %n, align 1
  %_10 = icmp uge i8 %_11, 100
  br i1 %_10, label %bb8, label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %_19 = load i8, i8* %n, align 1
  %_18 = udiv i8 %_19, 10
  %_17 = add i8 48, %_18
  %_16 = zext i8 %_17 to i32
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %buf, i32 %_16)
          to label %bb11 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %buf, i32 49)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %8 = load i8, i8* %n, align 1
  %9 = sub i8 %8, 100
  store i8 %9, i8* %n, align 1
  br label %bb10

bb11:                                             ; preds = %bb10
  %10 = load i8, i8* %n, align 1
  %11 = urem i8 %10, 10
  store i8 %11, i8* %n, align 1
  br label %bb12

bb13:                                             ; preds = %bb12
  ret void

bb15:                                             ; preds = %bb14
  %12 = bitcast { i8*, i32 }* %0 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

; <u8 as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN46_$LT$u8$u20$as$u20$alloc..string..ToString$GT$9to_string17hc8109cd93321e1ebE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i8* align 1 dereferenceable(1) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %n = alloca i8, align 1
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17hddc02b7ab7666e98E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, i64 3)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load i8, i8* %self, align 1
  store i8 %1, i8* %n, align 1
  %_4 = load i8, i8* %n, align 1
  %_3 = icmp uge i8 %_4, 10
  br i1 %_3, label %bb2, label %bb7

bb7:                                              ; preds = %bb6, %bb1
  %_23 = load i8, i8* %n, align 1
  %_22 = add i8 48, %_23
  %_21 = zext i8 %_22 to i32
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %buf, i32 %_21)
          to label %bb8 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_6 = load i8, i8* %n, align 1
  %_5 = icmp uge i8 %_6, 100
  br i1 %_5, label %bb3, label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %_18 = load i8, i8* %n, align 1
  %_17 = udiv i8 %_18, 10
  %_16 = add i8 48, %_17
  %_15 = zext i8 %_16 to i32
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %buf, i32 %_15)
          to label %bb6 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_12 = load i8, i8* %n, align 1
  %_11 = udiv i8 %_12, 100
  %_10 = add i8 48, %_11
  %_9 = zext i8 %_10 to i32
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %buf, i32 %_9)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %2 = load i8, i8* %n, align 1
  %3 = urem i8 %2, 100
  store i8 %3, i8* %n, align 1
  br label %bb5

bb9:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %buf) #18
  br label %bb10

cleanup:                                          ; preds = %bb7, %bb5, %bb3
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb9

bb6:                                              ; preds = %bb5
  %9 = load i8, i8* %n, align 1
  %10 = urem i8 %9, 10
  store i8 %10, i8* %n, align 1
  br label %bb7

bb8:                                              ; preds = %bb7
  ret void

bb10:                                             ; preds = %bb9
  %11 = bitcast { i8*, i32 }* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; <str as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17h08a0e0ca46444f4dE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call <alloc::string::String as core::convert::From<&str>>::from
  call void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h283cc81c8b69a486E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <char as unicode_xid::UnicodeXID>::is_xid_start
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN48_$LT$char$u20$as$u20$unicode_xid..UnicodeXID$GT$12is_xid_start17h63cfbc89b0a85bccE"(i32 %self) unnamed_addr #0 {
start:
  %_13 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_4 = icmp ule i32 97, %self
  br i1 %_4, label %bb8, label %bb7

bb7:                                              ; preds = %start
  store i8 0, i8* %_3, align 1
  br label %bb9

bb8:                                              ; preds = %start
  %_6 = icmp ule i32 %self, 122
  %1 = zext i1 %_6 to i8
  store i8 %1, i8* %_3, align 1
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %2 = load i8, i8* %_3, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb5

bb5:                                              ; preds = %bb9
  %_9 = icmp ule i32 65, %self
  br i1 %_9, label %bb11, label %bb10

bb4:                                              ; preds = %bb9
  store i8 1, i8* %_2, align 1
  br label %bb6

bb6:                                              ; preds = %bb12, %bb4
  %4 = load i8, i8* %_2, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb1, label %bb2

bb10:                                             ; preds = %bb5
  store i8 0, i8* %_8, align 1
  br label %bb12

bb11:                                             ; preds = %bb5
  %_11 = icmp ule i32 %self, 90
  %6 = zext i1 %_11 to i8
  store i8 %6, i8* %_8, align 1
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %7 = load i8, i8* %_8, align 1, !range !2
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %_2, align 1
  br label %bb6

bb2:                                              ; preds = %bb6
  %_14 = icmp ugt i32 %self, 127
  br i1 %_14, label %bb14, label %bb13

bb1:                                              ; preds = %bb6
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb15, %bb1
  %10 = load i8, i8* %0, align 1, !range !2
  %11 = trunc i8 %10 to i1
  ret i1 %11

bb13:                                             ; preds = %bb2
  store i8 0, i8* %_13, align 1
  br label %bb15

bb14:                                             ; preds = %bb2
; call unicode_xid::tables::derived_property::XID_Start
  %_16 = call zeroext i1 @_ZN11unicode_xid6tables16derived_property9XID_Start17h3d292a03d341d242E(i32 %self)
  br label %bb16

bb16:                                             ; preds = %bb14
  %12 = zext i1 %_16 to i8
  store i8 %12, i8* %_13, align 1
  br label %bb15

bb15:                                             ; preds = %bb13, %bb16
  %13 = load i8, i8* %_13, align 1, !range !2
  %14 = trunc i8 %13 to i1
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %0, align 1
  br label %bb3
}

; <char as unicode_xid::UnicodeXID>::is_xid_continue
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN48_$LT$char$u20$as$u20$unicode_xid..UnicodeXID$GT$15is_xid_continue17he9972a10f0f934dfE"(i32 %self) unnamed_addr #0 {
start:
  %_22 = alloca i8, align 1
  %_15 = alloca i8, align 1
  %_10 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %_4 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_6 = icmp ule i32 97, %self
  br i1 %_6, label %bb14, label %bb13

bb13:                                             ; preds = %start
  store i8 0, i8* %_5, align 1
  br label %bb15

bb14:                                             ; preds = %start
  %_8 = icmp ule i32 %self, 122
  %1 = zext i1 %_8 to i8
  store i8 %1, i8* %_5, align 1
  br label %bb15

bb15:                                             ; preds = %bb13, %bb14
  %2 = load i8, i8* %_5, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb10, label %bb11

bb11:                                             ; preds = %bb15
  %_11 = icmp ule i32 65, %self
  br i1 %_11, label %bb17, label %bb16

bb10:                                             ; preds = %bb15
  store i8 1, i8* %_4, align 1
  br label %bb12

bb12:                                             ; preds = %bb18, %bb10
  %4 = load i8, i8* %_4, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb7, label %bb8

bb16:                                             ; preds = %bb11
  store i8 0, i8* %_10, align 1
  br label %bb18

bb17:                                             ; preds = %bb11
  %_13 = icmp ule i32 %self, 90
  %6 = zext i1 %_13 to i8
  store i8 %6, i8* %_10, align 1
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  %7 = load i8, i8* %_10, align 1, !range !2
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %_4, align 1
  br label %bb12

bb8:                                              ; preds = %bb12
  %_16 = icmp ule i32 48, %self
  br i1 %_16, label %bb20, label %bb19

bb7:                                              ; preds = %bb12
  store i8 1, i8* %_3, align 1
  br label %bb9

bb9:                                              ; preds = %bb21, %bb7
  %10 = load i8, i8* %_3, align 1, !range !2
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb4, label %bb5

bb19:                                             ; preds = %bb8
  store i8 0, i8* %_15, align 1
  br label %bb21

bb20:                                             ; preds = %bb8
  %_18 = icmp ule i32 %self, 57
  %12 = zext i1 %_18 to i8
  store i8 %12, i8* %_15, align 1
  br label %bb21

bb21:                                             ; preds = %bb19, %bb20
  %13 = load i8, i8* %_15, align 1, !range !2
  %14 = trunc i8 %13 to i1
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %_3, align 1
  br label %bb9

bb5:                                              ; preds = %bb9
  %_20 = icmp eq i32 %self, 95
  %16 = zext i1 %_20 to i8
  store i8 %16, i8* %_2, align 1
  br label %bb6

bb4:                                              ; preds = %bb9
  store i8 1, i8* %_2, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %17 = load i8, i8* %_2, align 1, !range !2
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb1, label %bb2

bb2:                                              ; preds = %bb6
  %_23 = icmp ugt i32 %self, 127
  br i1 %_23, label %bb23, label %bb22

bb1:                                              ; preds = %bb6
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb24, %bb1
  %19 = load i8, i8* %0, align 1, !range !2
  %20 = trunc i8 %19 to i1
  ret i1 %20

bb22:                                             ; preds = %bb2
  store i8 0, i8* %_22, align 1
  br label %bb24

bb23:                                             ; preds = %bb2
; call unicode_xid::tables::derived_property::XID_Continue
  %_25 = call zeroext i1 @_ZN11unicode_xid6tables16derived_property12XID_Continue17h1ec9d9e64434c87aE(i32 %self)
  br label %bb25

bb25:                                             ; preds = %bb23
  %21 = zext i1 %_25 to i8
  store i8 %21, i8* %_22, align 1
  br label %bb24

bb24:                                             ; preds = %bb22, %bb25
  %22 = load i8, i8* %_22, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %0, align 1
  br label %bb3
}

; <F as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hc21ddd92e82a3ef8E"([0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_3 = alloca %"core::str::pattern::MultiCharEqPattern<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>", align 1
  %0 = bitcast %"core::str::pattern::MultiCharEqPattern<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>"* %_3 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]"*
; call core::str::pattern::Pattern::is_prefix_of
  %1 = call zeroext i1 @_ZN4core3str7pattern7Pattern12is_prefix_of17h7f1af78f1b112618E([0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; <u8 as core::slice::cmp::SliceOrd>::compare
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN49_$LT$u8$u20$as$u20$core..slice..cmp..SliceOrd$GT$7compare17h4509ef385d8608ffE"([0 x i8]* nonnull align 1 %left.0, i64 %left.1, [0 x i8]* nonnull align 1 %right.0, i64 %right.1) unnamed_addr #0 {
start:
  %_19 = alloca i64, align 8
  %_15 = alloca i64, align 8
  %0 = alloca i8, align 1
; call core::slice::<impl [T]>::as_ptr
  %_4 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf84c2d601562b202E"([0 x i8]* nonnull align 1 %left.0, i64 %left.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::as_ptr
  %_6 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf84c2d601562b202E"([0 x i8]* nonnull align 1 %right.0, i64 %right.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::cmp::min
  %_8 = call i64 @_ZN4core3cmp3min17h956c98ef35d8dc7eE(i64 %left.1, i64 %right.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %order = call i32 @memcmp(i8* %_4, i8* %_6, i64 %_8)
  br label %bb4

bb4:                                              ; preds = %bb3
  %1 = icmp eq i32 %order, 0
  br i1 %1, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  store i64 %left.1, i64* %_15, align 8
  store i64 %right.1, i64* %_19, align 8
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %2 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h4b983b01175bf2ffE"(i64* align 8 dereferenceable(8) %_15, i64* align 8 dereferenceable(8) %_19), !range !30
  store i8 %2, i8* %0, align 1
  br label %bb6

bb7:                                              ; preds = %bb4
  %_21 = icmp slt i32 %order, 0
  br i1 %_21, label %bb8, label %bb9

bb9:                                              ; preds = %bb7
  store i8 1, i8* %0, align 1
  br label %bb10

bb8:                                              ; preds = %bb7
  store i8 -1, i8* %0, align 1
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  br label %bb11

bb11:                                             ; preds = %bb6, %bb10
  %3 = load i8, i8* %0, align 1, !range !30
  ret i8 %3

bb6:                                              ; preds = %bb5
  br label %bb11
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hcd6bddef854eedd1E"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = add nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; <usize as core::iter::range::Step>::backward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17h7e260d15da15d0d7E"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = sub nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::intrinsics::write_bytes
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics11write_bytes17h6ef66e163007deecE(%TokenTree* %dst, i8 %val, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 48, %count
  %1 = bitcast %TokenTree* %dst to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 %val, i64 %0, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::write_bytes
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics11write_bytes17h929804c1c8d7dbf7E(i8* %dst, i8 %val, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 1, %count
  call void @llvm.memset.p0i8.i64(i8* align 1 %dst, i8 %val, i64 %0, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics19copy_nonoverlapping17h5e4499aff0018dfdE(i8* %src, i8* %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 %count, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %0, i1 false)
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics19copy_nonoverlapping17h7bc88eec128897e3E(%TokenTree* %src, %TokenTree* %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 %count, 48
  %1 = bitcast %TokenTree* %dst to i8*
  %2 = bitcast %TokenTree* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false)
  ret void
}

; core::intrinsics::copy
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics4copy17hd62e2a697c37c7e1E(i8* %src, i8* %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 1, %count
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %0, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics4copy17hed681f37ab6bf5ebE(%"proc_macro::TokenTree"* %src, %"proc_macro::TokenTree"* %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 8, %count
  %1 = bitcast %"proc_macro::TokenTree"* %dst to i8*
  %2 = bitcast %"proc_macro::TokenTree"* %src to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 %0, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::any::TypeId::of
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core3any6TypeId2of17h5f53d1458b757991E() unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 9147559743429524724, i64* %0, align 8
  %_1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %_1, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  ret i64 %2
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3Ord3max17h425aceec5c091a67E(i64 %self, i64 %other) unnamed_addr #0 {
start:
; call core::cmp::max_by
  %0 = call i64 @_ZN4core3cmp6max_by17h3f7a9c3c90694553E(i64 %self, i64 %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::Ord::min
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3Ord3min17hf302ce9f9ab3ac66E(i64 %self, i64 %other) unnamed_addr #0 {
start:
; call core::cmp::min_by
  %0 = call i64 @_ZN4core3cmp6min_by17h0e2abcfa96d32d0aE(i64 %self, i64 %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3max17h74b219b421c96b03E(i64 %v1, i64 %v2) unnamed_addr #0 {
start:
; call core::cmp::Ord::max
  %0 = call i64 @_ZN4core3cmp3Ord3max17h425aceec5c091a67E(i64 %v1, i64 %v2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::min
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3min17h956c98ef35d8dc7eE(i64 %v1, i64 %v2) unnamed_addr #0 {
start:
; call core::cmp::Ord::min
  %0 = call i64 @_ZN4core3cmp3Ord3min17hf302ce9f9ab3ac66E(i64 %v1, i64 %v2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h4b983b01175bf2ffE"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_4 = load i64, i64* %self, align 8
  %_5 = load i64, i64* %other, align 8
  %_3 = icmp ult i64 %_4, %_5
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8
  %_8 = load i64, i64* %other, align 8
  %_6 = icmp eq i64 %_7, %_8
  br i1 %_6, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !range !30
  ret i8 %1

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6
}

; core::cmp::impls::<impl core::cmp::PartialEq for usize>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17h7238af03805d1feeE"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp eq i64 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h10200a66eeec1a18E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp ult i64 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17hf950d59200eae44bE"({}* nonnull align 1 %self, {}* nonnull align 1 %_other) unnamed_addr #0 {
start:
  ret i1 true
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h25048be4cf3ce7b1E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !20
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_3.1 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !20
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1
  %_4.1 = load i64, i64* %3, align 8
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %4 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h62c1c4526097ae7dE"([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1, [0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h2f91869674e547ceE"(%"fallback::Ident"** align 8 dereferenceable(8) %self, %"fallback::Ident"** align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %_3 = load %"fallback::Ident"*, %"fallback::Ident"** %self, align 8, !nonnull !20
  %_4 = load %"fallback::Ident"*, %"fallback::Ident"** %other, align 8, !nonnull !20
; call <proc_macro2::fallback::Ident as core::cmp::PartialEq>::eq
  %0 = call zeroext i1 @"_ZN69_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..cmp..PartialEq$GT$2eq17hb3459ecfa27e2f25E"(%"fallback::Ident"* align 8 dereferenceable(32) %_3, %"fallback::Ident"* align 8 dereferenceable(32) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hb348444d202a4a88E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !20
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_3.1 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !20
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1
  %_4.1 = load i64, i64* %3, align 8
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %4 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h7e6c3cbd7a44ffbfE"([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1, [0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::cmp::max_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6max_by17h3f7a9c3c90694553E(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %3 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  store i8 1, i8* %_12, align 1
  %4 = bitcast { i64*, i64* }* %_6 to i64**
  store i64* %v1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  store i64* %v2, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !20
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !20
; invoke core::ops::function::FnOnce::call_once
  %10 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17h2a95e17b8a4d1e63E(i64* align 8 dereferenceable(8) %7, i64* align 8 dereferenceable(8) %9)
          to label %bb1 unwind label %cleanup, !range !30

bb1:                                              ; preds = %start
  store i8 %10, i8* %_4, align 1
  %_11 = load i8, i8* %_4, align 1, !range !30
  switch i8 %_11, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ]

bb8:                                              ; preds = %cleanup
  br label %bb13

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb8

bb13:                                             ; preds = %bb8
  %16 = load i8, i8* %_13, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb12, label %bb9

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_12, align 1
  %18 = load i64, i64* %v2, align 8
  store i64 %18, i64* %3, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_13, align 1
  %19 = load i64, i64* %v1, align 8
  store i64 %19, i64* %3, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load i8, i8* %_12, align 1, !range !2
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb10, label %bb6

bb6:                                              ; preds = %bb10, %bb5
  %22 = load i8, i8* %_13, align 1, !range !2
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb11, label %bb7

bb10:                                             ; preds = %bb5
  br label %bb6

bb9:                                              ; preds = %bb12, %bb13
  %24 = bitcast { i8*, i32 }* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb12:                                             ; preds = %bb13
  br label %bb9

bb7:                                              ; preds = %bb11, %bb6
  %30 = load i64, i64* %3, align 8
  ret i64 %30

bb11:                                             ; preds = %bb6
  br label %bb7
}

; core::cmp::min_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6min_by17h0e2abcfa96d32d0aE(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %3 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  store i8 1, i8* %_12, align 1
  %4 = bitcast { i64*, i64* }* %_6 to i64**
  store i64* %v1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  store i64* %v2, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !20
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !20
; invoke core::ops::function::FnOnce::call_once
  %10 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17h2a95e17b8a4d1e63E(i64* align 8 dereferenceable(8) %7, i64* align 8 dereferenceable(8) %9)
          to label %bb1 unwind label %cleanup, !range !30

bb1:                                              ; preds = %start
  store i8 %10, i8* %_4, align 1
  %_11 = load i8, i8* %_4, align 1, !range !30
  switch i8 %_11, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ]

bb8:                                              ; preds = %cleanup
  br label %bb13

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb8

bb13:                                             ; preds = %bb8
  %16 = load i8, i8* %_13, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb12, label %bb9

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_13, align 1
  %18 = load i64, i64* %v1, align 8
  store i64 %18, i64* %3, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_12, align 1
  %19 = load i64, i64* %v2, align 8
  store i64 %19, i64* %3, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load i8, i8* %_12, align 1, !range !2
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb10, label %bb6

bb6:                                              ; preds = %bb10, %bb5
  %22 = load i8, i8* %_13, align 1, !range !2
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb11, label %bb7

bb10:                                             ; preds = %bb5
  br label %bb6

bb9:                                              ; preds = %bb12, %bb13
  %24 = bitcast { i8*, i32 }* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb12:                                             ; preds = %bb13
  br label %bb9

bb7:                                              ; preds = %bb11, %bb6
  %30 = load i64, i64* %3, align 8
  ret i64 %30

bb11:                                             ; preds = %bb6
  br label %bb7
}

; core::cmp::PartialEq::ne
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3cmp9PartialEq2ne17h96e11aad982a8cb8E(i8* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %other) unnamed_addr #0 {
start:
; call <proc_macro2::Delimiter as core::cmp::PartialEq>::eq
  %_3 = call zeroext i1 @"_ZN63_$LT$proc_macro2..Delimiter$u20$as$u20$core..cmp..PartialEq$GT$2eq17h5a400777d5a6ecc3E"(i8* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %other)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_3, true
  ret i1 %0
}

; core::f32::<impl f32>::abs_private
; Function Attrs: inlinehint nonlazybind uwtable
define internal float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$11abs_private17h8e09777927894e93E"(float %self) unnamed_addr #0 {
start:
; call core::f32::<impl f32>::to_bits
  %_3 = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h0a9cbb87d9a523eaE"(float %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = and i32 %_3, 2147483647
; call core::f32::<impl f32>::from_bits
  %0 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17hc1a2073227587decE"(i32 %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret float %0
}

; core::f32::<impl f32>::to_bits
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17h0a9cbb87d9a523eaE"(float %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = bitcast float %self to i32
  store i32 %1, i32* %0, align 4
  %2 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %2
}

; core::f32::<impl f32>::from_bits
; Function Attrs: inlinehint nonlazybind uwtable
define internal float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9from_bits17hc1a2073227587decE"(i32 %v) unnamed_addr #0 {
start:
  %0 = alloca float, align 4
  %1 = bitcast i32 %v to float
  store float %1, float* %0, align 4
  %2 = load float, float* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  ret float %2
}

; core::f32::<impl f32>::is_finite
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9is_finite17h6a17ff44aab97c5aE"(float %self) unnamed_addr #0 {
start:
; call core::f32::<impl f32>::abs_private
  %_2 = call float @"_ZN4core3f3221_$LT$impl$u20$f32$GT$11abs_private17h8e09777927894e93E"(float %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = fcmp olt float %_2, 0x7FF0000000000000
  ret i1 %0
}

; core::f64::<impl f64>::abs_private
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$11abs_private17hb99b1e4b4b8e1c5fE"(double %self) unnamed_addr #0 {
start:
; call core::f64::<impl f64>::to_bits
  %_3 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17h8fbc0db526ecf5d0E"(double %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = and i64 %_3, 9223372036854775807
; call core::f64::<impl f64>::from_bits
  %0 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17hc6b18035cb90b95cE"(i64 %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret double %0
}

; core::f64::<impl f64>::to_bits
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17h8fbc0db526ecf5d0E"(double %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = bitcast double %self to i64
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::f64::<impl f64>::from_bits
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17hc6b18035cb90b95cE"(i64 %v) unnamed_addr #0 {
start:
  %0 = alloca double, align 8
  %1 = bitcast i64 %v to double
  store double %1, double* %0, align 8
  %2 = load double, double* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret double %2
}

; core::f64::<impl f64>::is_finite
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9is_finite17h3df526ab68d5c3bdE"(double %self) unnamed_addr #0 {
start:
; call core::f64::<impl f64>::abs_private
  %_2 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$11abs_private17hb99b1e4b4b8e1c5fE"(double %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = fcmp olt double %_2, 0x7FF0000000000000
  ret i1 %0
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h3077d2933dc22190E(i64* align 8 dereferenceable(8) %x, i1 (i64*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h34cab7ee437631f3E(i8* align 1 dereferenceable(1) %x, i1 (i8*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i8*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i8* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h5255efb528208bbeE(i16* align 2 dereferenceable(2) %x, i1 (i16*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i16*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i16* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h5af4dca2cfcf14b2E(i128* align 8 dereferenceable(16) %x, i1 (i128*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i128*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i128* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h6979be01fdacff4fE(i32* align 4 dereferenceable(4) %x, i1 (i32*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i32*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i32* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h76ad21a0b460a28fE(%"alloc::string::String"* align 8 dereferenceable(24) %x, i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"alloc::string::String"* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h9420cf8c14623dbaE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %x, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { [0 x i8]*, i64 }* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h9482ddc84991e93cE(i8** align 8 dereferenceable(8) %x, i1 (i8**, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i8**, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i8** %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h9af6061c940ee60eE(%Ident** align 8 dereferenceable(8) %x, i1 (%Ident**, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%Ident**, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %Ident** %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h9db212a163446998E(i64* align 8 dereferenceable(8) %x, i1 (i64*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17ha274dde9db218663E(i16* align 2 dereferenceable(2) %x, i1 (i16*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i16*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i16* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17habf5741534d52963E(i32* align 4 dereferenceable(4) %x, i1 (i32*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i32*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i32* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc8d3ad37cdbcbd2aE(double* align 8 dereferenceable(8) %x, i1 (double*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (double*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast double* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hdca5efe8d2d1670cE(float* align 4 dereferenceable(4) %x, i1 (float*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (float*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast float* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hdee05b1b3b7d8679E(%"fallback::Ident"** align 8 dereferenceable(8) %x, i1 (%"fallback::Ident"**, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%"fallback::Ident"**, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"fallback::Ident"** %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hdfa545861fa2bdadE(i128* align 8 dereferenceable(16) %x, i1 (i128*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i128*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i128* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hf24e40afeedc69b6E(i64* align 8 dereferenceable(8) %x, i1 (i64*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hf34519ccf236690fE(i8* align 1 dereferenceable(1) %x, i1 (i8*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i8*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i8* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hfc87138be8c493f2E(i64* align 8 dereferenceable(8) %x, i1 (i64*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !20
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !20
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h15cd1bc9b60d9c03E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17hc1ea778f34506390E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9143b4968b3afd78E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h15400e4abae8bbbeE"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb9

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17ha63680436de3943cE"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10
}

; core::fmt::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write9write_fmt17h3aaba967388a2b5bE(%"alloc::string::String"* align 8 dereferenceable(24) %0, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %args) unnamed_addr #1 {
start:
  %_6 = alloca %"core::fmt::Arguments", align 8
  %self = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %0, %"alloc::string::String"** %self, align 8
  %_3.0 = bitcast %"alloc::string::String"** %self to {}*
  %1 = bitcast %"core::fmt::Arguments"* %_6 to i8*
  %2 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false)
; call core::fmt::write
  %3 = call zeroext i1 @_ZN4core3fmt5write17h0200d27bf417ad61E({}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_6)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %3
}

; core::fmt::builders::DebugList::entries
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(16) %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17h4090912470ff62d2E(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16) %self, %"fallback::TokenStream"* noalias nocapture dereferenceable(24) %entries) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %entry = alloca %TokenTree, align 8
  %_7 = alloca %"core::option::Option<TokenTree>", align 8
  %iter = alloca %"alloc::vec::into_iter::IntoIter<TokenTree>", align 8
  %_5 = alloca %"fallback::TokenStream", align 8
  %_4 = alloca %"alloc::vec::into_iter::IntoIter<TokenTree>", align 8
  %1 = bitcast %"fallback::TokenStream"* %_5 to i8*
  %2 = bitcast %"fallback::TokenStream"* %entries to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call <proc_macro2::fallback::TokenStream as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN96_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h647f703566f6b801E"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* noalias nocapture sret(%"alloc::vec::into_iter::IntoIter<TokenTree>") dereferenceable(32) %_4, %"fallback::TokenStream"* noalias nocapture dereferenceable(24) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast %"alloc::vec::into_iter::IntoIter<TokenTree>"* %iter to i8*
  %4 = bitcast %"alloc::vec::into_iter::IntoIter<TokenTree>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb8, %bb1
; invoke <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::next
  invoke void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h70a5125afbb54fe8E"(%"core::option::Option<TokenTree>"* noalias nocapture sret(%"core::option::Option<TokenTree>") dereferenceable(48) %_7, %"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %iter)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %5 = bitcast %"core::option::Option<TokenTree>"* %_7 to i32*
  %6 = load i32, i32* %5, align 8, !range !31
  %7 = sub i32 %6, 4
  %8 = icmp eq i32 %7, 0
  %_10 = select i1 %8, i64 0, i64 1
  switch i64 %_10, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ]

bb11:                                             ; preds = %bb10, %cleanup
; call core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr82drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$proc_macro2..TokenTree$GT$$GT$17h68c19ac5709d6d72E"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* %iter) #18
  br label %bb12

cleanup:                                          ; preds = %bb7, %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb11

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
; call core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr82drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$proc_macro2..TokenTree$GT$$GT$17h68c19ac5709d6d72E"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* %iter)
  br label %bb9

bb4:                                              ; preds = %bb3
  %14 = bitcast %"core::option::Option<TokenTree>"* %_7 to %"core::option::Option<TokenTree>::Some"*
  %15 = bitcast %"core::option::Option<TokenTree>::Some"* %14 to %TokenTree*
  %16 = bitcast %TokenTree* %entry to i8*
  %17 = bitcast %TokenTree* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 48, i1 false)
  %_14.0 = bitcast %TokenTree* %entry to {}*
; invoke core::fmt::builders::DebugList::entry
  %_12 = invoke align 8 dereferenceable(16) %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17hfd5de0649c122df2E(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16) %self, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.5 to [3 x i64]*))
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb4
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %entry)
          to label %bb8 unwind label %cleanup

bb10:                                             ; preds = %cleanup1
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %entry) #18
  br label %bb11

cleanup1:                                         ; preds = %bb4
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb10

bb8:                                              ; preds = %bb7
  br label %bb2

bb12:                                             ; preds = %bb11
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb9:                                              ; preds = %bb6
  ret %"core::fmt::builders::DebugList"* %self
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17h96eaec9a9eff626eE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %0, [0 x { [0 x i8]*, i64 }]* nonnull align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* nonnull align 8 %args.0, i64 %args.1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 %fmt.0, i64 %fmt.1) unnamed_addr #0 {
start:
  %_6 = alloca { i64*, i64 }, align 8
  %1 = bitcast { i64*, i64 }* %_6 to { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }*
  %2 = getelementptr inbounds { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }, { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }* %1, i32 0, i32 0
  store [0 x %"core::fmt::rt::v1::Argument"]* %fmt.0, [0 x %"core::fmt::rt::v1::Argument"]** %2, align 8
  %3 = getelementptr inbounds { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }, { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }* %1, i32 0, i32 1
  store i64 %fmt.1, i64* %3, align 8
  %4 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %5 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %5, align 8
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 1
  store i64 %pieces.1, i64* %6, align 8
  %7 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 0
  store i64* %9, i64** %12, align 8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 1
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2
  %15 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %14, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %15, align 8
  %16 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %14, i32 0, i32 1
  store i64 %args.1, i64* %16, align 8
  ret void
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %0, [0 x { [0 x i8]*, i64 }]* nonnull align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* nonnull align 8 %args.0, i64 %args.1) unnamed_addr #0 {
start:
  %_16 = alloca { i64*, i64 }, align 8
  %_3 = alloca i8, align 1
  %_4 = icmp ult i64 %pieces.1, %args.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1
  %_9 = icmp ugt i64 %pieces.1, %_12
  %1 = zext i1 %_9 to i8
  store i8 %1, i8* %_3, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i8, i8* %_3, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %4 = bitcast { i64*, i64 }* %_16 to {}**
  store {}* null, {}** %4, align 8
  %5 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %6, align 8
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 1
  store i64 %pieces.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1
  %9 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 0
  store i64* %10, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 1
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2
  %16 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %16, align 8
  %17 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 1
  store i64 %args.1, i64* %17, align 8
  ret void

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [12 x i8] }>* @alloc1345 to [0 x i8]*), i64 12, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1347 to %"core::panic::location::Location"*)) #19
  unreachable
}

; core::mem::size_of_val
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem11size_of_val17haee1c57800617744E([0 x i8]* nonnull align 1 %val.0, i64 %val.1) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = mul i64 %val.1, 1
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::mem::maybe_uninit::MaybeUninit<T>::zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6zeroed17h9bdeca31e8fee1deE"(%"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* noalias nocapture sret(%"core::mem::maybe_uninit::MaybeUninit<TokenTree>") dereferenceable(48) %u) unnamed_addr #0 {
start:
  call void @llvm.experimental.noalias.scope.decl(metadata !32)
  %0 = bitcast %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %u to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %u to %TokenTree*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::write_bytes
  call void @_ZN4core10intrinsics11write_bytes17h6ef66e163007deecE(%TokenTree* %1, i8 0, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::mem::manually_drop::ManuallyDrop<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) i64* @"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$4take17h2a810a18a4c6c712E"(i64** align 8 dereferenceable(8) %slot) unnamed_addr #0 {
start:
; call core::ptr::read
  %0 = call align 8 dereferenceable(16) i64* @_ZN4core3ptr4read17ha5a0480b38770784E(i64** %slot)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; core::mem::forget
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem6forget17h58ddc169762f1da2E(i64* align 8 dereferenceable(24) %t.0, i64 %t.1) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i64 }, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 0
  store i64* %t.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  store i64 %t.1, i64* %2, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8, !nonnull !20
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64*, i64 } undef, i64* %4, 0
  %8 = insertvalue { i64*, i64 } %7, i64 %6, 1
  %_2.0 = extractvalue { i64*, i64 } %8, 0
  %_2.1 = extractvalue { i64*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::forget
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem6forget17h623319471d1491c1E(i64* align 8 dereferenceable(24) %t.0, i64 %t.1) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i64 }, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 0
  store i64* %t.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  store i64 %t.1, i64* %2, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8, !nonnull !20
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64*, i64 } undef, i64* %4, 0
  %8 = insertvalue { i64*, i64 } %7, i64 %6, 1
  %_2.0 = extractvalue { i64*, i64 } %8, 0
  %_2.1 = extractvalue { i64*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::forget
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem6forget17hc4f2b586491183bdE(i32 %t) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  store i32 %t, i32* %0, align 4
  %1 = load i32, i32* %0, align 4, !range !21
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::forget
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem6forget17hebb48cb9a8f8f63aE(i64 %t.0, i32 %t.1) unnamed_addr #0 {
start:
  %0 = alloca { i64, i32 }, align 8
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  store i64 %t.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %t.1, i32* %2, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8, !range !21
  %7 = insertvalue { i64, i32 } undef, i64 %4, 0
  %8 = insertvalue { i64, i32 } %7, i32 %6, 1
  %_2.0 = extractvalue { i64, i32 } %8, 0
  %_2.1 = extractvalue { i64, i32 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3mem7replace17h3ed5a2f3197ecffbE(i32* align 4 dereferenceable(4) %dest, i32 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i32 @_ZN4core3ptr4read17h672ce745ba22dc3fE(i32* %dest)
          to label %bb1 unwind label %cleanup, !range !21

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17haf941faac4f81eb2E(i32* %dest, i32 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i32 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3mem7replace17h4669929bb741bdb2E(i8* align 1 dereferenceable(1) %dest, i1 zeroext %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke zeroext i1 @_ZN4core3ptr4read17h4c931e8d1e100f70E(i8* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hc63b3fe249e96837E(i8* %dest, i1 zeroext %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i1 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17h5e022adce40a4689E(i64* align 8 dereferenceable(8) %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i64 @_ZN4core3ptr4read17hd361acbd1d987cbcE(i64* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h9fae3eedb7c74fcfE(i64* %dest, i64 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i64 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @_ZN4core3mem7replace17h69951be77b0fdea2E({ i32*, i32* }* align 8 dereferenceable(16) %dest, i32* nonnull %src.0, i32* %src.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %1 = invoke { i32*, i32* } @_ZN4core3ptr4read17h195bf6506de849fdE({ i32*, i32* }* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %result.0 = extractvalue { i32*, i32* } %1, 0
  %result.1 = extractvalue { i32*, i32* } %1, 1
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h22e125194c2cfce3E({ i32*, i32* }* %dest, i32* nonnull %src.0, i32* %src.1)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %2 = load i8, i8* %_7, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %9 = insertvalue { i32*, i32* } undef, i32* %result.0, 0
  %10 = insertvalue { i32*, i32* } %9, i32* %result.1, 1
  ret { i32*, i32* } %10

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3mem7replace17h7c413ed7fcb24aa5E(%"proc_macro::TokenStream"* align 4 dereferenceable(4) %dest, i32 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i32, align 4
  %2 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"proc_macro::TokenStream", align 4
  %result = alloca %"proc_macro::TokenStream", align 4
  %3 = alloca i32, align 4
  %src = alloca %"proc_macro::TokenStream", align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %"proc_macro::TokenStream"* %src to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %6 = invoke i32 @_ZN4core3ptr4read17h401b92d9459d8dc3E(%"proc_macro::TokenStream"* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i32 %6, i32* %1, align 4
  %7 = bitcast %"proc_macro::TokenStream"* %result to i8*
  %8 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  store i8 0, i8* %_7, align 1
  %9 = bitcast %"proc_macro::TokenStream"* %_6 to i8*
  %10 = bitcast %"proc_macro::TokenStream"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  %11 = bitcast %"proc_macro::TokenStream"* %_6 to i32*
  %12 = load i32, i32* %11, align 4
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h4fcf02963d60e8beE(%"proc_macro::TokenStream"* %dest, i32 %12)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %13 = load i8, i8* %_7, align 1, !range !2
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %20 = bitcast %"proc_macro::TokenStream"* %result to i32*
  %21 = load i32, i32* %20, align 4
  ret i32 %21

bb3:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %result) #18
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %27 = bitcast { i8*, i32 }* %2 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1
  resume { i8*, i32 } %32

bb5:                                              ; preds = %bb6
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %src) #18
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3mem7replace17h9b5ec3429b32d9acE(%"core::option::Option<proc_macro::TokenStream>"* align 4 dereferenceable(4) %dest, i32 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i32, align 4
  %2 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  %result = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  %3 = alloca i32, align 4
  %src = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %src to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %6 = invoke i32 @_ZN4core3ptr4read17hb69cacf1ee6d2415E(%"core::option::Option<proc_macro::TokenStream>"* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i32 %6, i32* %1, align 4
  %7 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %result to i8*
  %8 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  store i8 0, i8* %_7, align 1
  %9 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %_6 to i8*
  %10 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  %11 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %_6 to i32*
  %12 = load i32, i32* %11, align 4
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hda6df30abb223207E(%"core::option::Option<proc_macro::TokenStream>"* %dest, i32 %12)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %13 = load i8, i8* %_7, align 1, !range !2
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %20 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %result to i32*
  %21 = load i32, i32* %20, align 4
  ret i32 %21

bb3:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<core::option::Option<proc_macro::TokenStream>>
  call void @"_ZN4core3ptr72drop_in_place$LT$core..option..Option$LT$proc_macro..TokenStream$GT$$GT$17h28cfc80b7f647751E"(%"core::option::Option<proc_macro::TokenStream>"* %result) #18
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %27 = bitcast { i8*, i32 }* %2 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1
  resume { i8*, i32 } %32

bb5:                                              ; preds = %bb6
; call core::ptr::drop_in_place<core::option::Option<proc_macro::TokenStream>>
  call void @"_ZN4core3ptr72drop_in_place$LT$core..option..Option$LT$proc_macro..TokenStream$GT$$GT$17h28cfc80b7f647751E"(%"core::option::Option<proc_macro::TokenStream>"* %src) #18
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core3mem7replace17hbbff4be0d81fb7c4E({ i8*, i64 }* align 8 dereferenceable(16) %dest, i8* align 1 %src.0, i64 %src.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %1 = invoke { i8*, i64 } @_ZN4core3ptr4read17h644fc1dc01c0fa56E({ i8*, i64 }* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %result.0 = extractvalue { i8*, i64 } %1, 0
  %result.1 = extractvalue { i8*, i64 } %1, 1
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h23d0436df06ff517E({ i8*, i64 }* %dest, i8* align 1 %src.0, i64 %src.1)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %2 = load i8, i8* %_7, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %9 = insertvalue { i8*, i64 } undef, i8* %result.0, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %result.1, 1
  ret { i8*, i64 } %10

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @_ZN4core3mem7replace17hc9b6a7fa6f10c72bE({ i64, i32 }* align 8 dereferenceable(16) %dest, i64 %src.0, i32 %src.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %1 = invoke { i64, i32 } @_ZN4core3ptr4read17ha379a8bbecf5ac3cE({ i64, i32 }* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %result.0 = extractvalue { i64, i32 } %1, 0
  %result.1 = extractvalue { i64, i32 } %1, 1
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17ha6b28d2e744b969bE({ i64, i32 }* %dest, i64 %src.0, i32 %src.1)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %2 = load i8, i8* %_7, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %9 = insertvalue { i64, i32 } undef, i64 %result.0, 0
  %10 = insertvalue { i64, i32 } %9, i32 %result.1, 1
  ret { i64, i32 } %10

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem7replace17hfdc3ff23003c753dE(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %result, %"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %dest, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17h173054a24835ec96E(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %result, %"alloc::vec::Vec<TokenTree>"* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %1 = bitcast %"alloc::vec::Vec<TokenTree>"* %_6 to i8*
  %2 = bitcast %"alloc::vec::Vec<TokenTree>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h8bbf6a9e0305b5b4E(%"alloc::vec::Vec<TokenTree>"* %dest, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %_6)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %3 = load i8, i8* %_7, align 1, !range !2
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %result) #18
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb5:                                              ; preds = %bb6
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %src) #18
  br label %bb4
}

; core::num::<impl i8>::unsigned_abs
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3num20_$LT$impl$u20$i8$GT$12unsigned_abs17hf643b95baf117443E"(i8 %self) unnamed_addr #0 {
start:
; call core::num::<impl i8>::wrapping_abs
  %_2 = call i8 @"_ZN4core3num20_$LT$impl$u20$i8$GT$12wrapping_abs17h576317bfdaf5cedcE"(i8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %_2
}

; core::num::<impl i8>::wrapping_abs
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3num20_$LT$impl$u20$i8$GT$12wrapping_abs17h576317bfdaf5cedcE"(i8 %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp slt i8 %self, 0
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %1, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  store i8 %self, i8* %0, align 1
  br label %bb5

bb2:                                              ; preds = %bb1
  %2 = sub i8 0, %self
  store i8 %2, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %3 = load i8, i8* %0, align 1
  ret i8 %3
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3d452424c360551E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !2
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !18
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h156acd740bde912eE"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !2
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !18
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::nonzero::NonZeroUsize::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h1f9bdcd98b21c390E(i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 %n, i64* %0, align 8
  %1 = load i64, i64* %0, align 8, !range !35
  ret i64 %1
}

; core::num::nonzero::NonZeroUsize::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize3get17h6feeb9e8dcb1c6b6E(i64 %self) unnamed_addr #0 {
start:
  ret i64 %self
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function5FnMut8call_mut17hf24f377f7f5ab732E({}* nonnull align 1 %_1, i64 %0) unnamed_addr #0 {
start:
  %1 = alloca i32, align 4
  %2 = alloca %"proc_macro::TokenStream", align 4
  %3 = alloca i64, align 8
  %_2 = alloca { %"proc_macro::TokenTree" }, align 4
  %4 = bitcast { %"proc_macro::TokenTree" }* %_2 to %"proc_macro::TokenTree"*
  store i64 %0, i64* %3, align 8
  %5 = bitcast %"proc_macro::TokenTree"* %4 to i8*
  %6 = bitcast i64* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 8, i1 false)
  %7 = bitcast { %"proc_macro::TokenTree" }* %_2 to %"proc_macro::TokenTree"*
  %8 = bitcast %"proc_macro::TokenTree"* %7 to i64*
  %9 = load i64, i64* %8, align 4
; call <proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from
  %10 = call i32 @"_ZN92_$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$4from17h9a352173d3b4519dE"(i64 %9)
  store i32 %10, i32* %1, align 4
  %11 = bitcast %"proc_macro::TokenStream"* %2 to i8*
  %12 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %13 = bitcast %"proc_macro::TokenStream"* %2 to i32*
  %14 = load i32, i32* %13, align 4
  ret i32 %14
}

; core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17hdeabacbe1aa23f6eE"(i32*** align 8 dereferenceable(8) %self, i32 %0) unnamed_addr #1 {
start:
  %_4 = alloca { {}, %"proc_macro::TokenStream" }, align 4
  %1 = alloca i32, align 4
  %args = alloca { {}, %"proc_macro::TokenStream" }, align 4
  %2 = bitcast { {}, %"proc_macro::TokenStream" }* %args to {}*
  %3 = bitcast { {}, %"proc_macro::TokenStream" }* %args to %"proc_macro::TokenStream"*
  store i32 %0, i32* %1, align 4
  %4 = bitcast %"proc_macro::TokenStream"* %3 to i8*
  %5 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %_3 = load i32**, i32*** %self, align 8, !nonnull !20
  %6 = bitcast { {}, %"proc_macro::TokenStream" }* %_4 to i8*
  %7 = bitcast { {}, %"proc_macro::TokenStream" }* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast { {}, %"proc_macro::TokenStream" }* %_4 to {}*
  %9 = bitcast { {}, %"proc_macro::TokenStream" }* %_4 to %"proc_macro::TokenStream"*
  %10 = bitcast %"proc_macro::TokenStream"* %9 to i32*
  %11 = load i32, i32* %10, align 4
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h807c6b294bd52337E"(i32** align 8 dereferenceable(8) %_3, i32 %11)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h86cff1f02ad58db4E"(i8** %_1, { i64, i8 }* align 8 dereferenceable(16) %0) unnamed_addr #0 {
start:
  %_2 = alloca i64*, align 8
  %1 = bitcast i64** %_2 to { i64, i8 }**
  store { i64, i8 }* %0, { i64, i8 }** %1, align 8
  %2 = load i8*, i8** %_1, align 8, !nonnull !20
  %3 = load i64*, i64** %_2, align 8, !nonnull !20
  %4 = bitcast i64* %3 to { i64, i8 }*
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17hb21f5d12679da217E(i8* align 1 dereferenceable(1) %2, { i64, i8 }* align 8 dereferenceable(16) %4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h06e632ecef4ec0efE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %1) unnamed_addr #0 {
start:
  %_2 = alloca { %"imp::Literal" }, align 8
  %2 = bitcast { %"imp::Literal" }* %_2 to %"imp::Literal"*
  %3 = bitcast %"imp::Literal"* %2 to i8*
  %4 = bitcast %"imp::Literal"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  %5 = bitcast { %"imp::Literal" }* %_2 to %"imp::Literal"*
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %5)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3ops8function6FnOnce9call_once17h0db61f46d337a9abE() unnamed_addr #0 {
start:
  %_2 = alloca { %"proc_macro::LexError" }, align 1
  %0 = bitcast { %"proc_macro::LexError" }* %_2 to %"proc_macro::LexError"*
; call proc_macro2::imp::LexError::Compiler
  %1 = call zeroext i1 @_ZN11proc_macro23imp8LexError8Compiler17h73e5a86b110ee91aE()
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17h2a95e17b8a4d1e63E(i64* align 8 dereferenceable(8) %0, i64* align 8 dereferenceable(8) %1) unnamed_addr #0 {
start:
  %_2 = alloca { i64*, i64* }, align 8
  %2 = bitcast { i64*, i64* }* %_2 to i64**
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  store i64* %1, i64** %3, align 8
  %4 = bitcast { i64*, i64* }* %_2 to i64**
  %5 = load i64*, i64** %4, align 8, !nonnull !20
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !20
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h4b983b01175bf2ffE"(i64* align 8 dereferenceable(8) %5, i64* align 8 dereferenceable(8) %7), !range !30
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %8
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h5bacd46014e167e3E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i32 %1) unnamed_addr #0 {
start:
  %2 = alloca i32, align 4
  %_2 = alloca { %"proc_macro::Literal" }, align 4
  %3 = bitcast { %"proc_macro::Literal" }* %_2 to %"proc_macro::Literal"*
  store i32 %1, i32* %2, align 4
  %4 = bitcast %"proc_macro::Literal"* %3 to i8*
  %5 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast { %"proc_macro::Literal" }* %_2 to %"proc_macro::Literal"*
  %7 = bitcast %"proc_macro::Literal"* %6 to i32*
  %8 = load i32, i32* %7, align 4
; call proc_macro2::imp::Literal::Compiler
  call void @_ZN11proc_macro23imp7Literal8Compiler17haccb6d08c7aa7969E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i32 %8)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17h62534de291ef8d30E(i32 %0) unnamed_addr #0 {
start:
  %1 = alloca i32, align 4
  %2 = alloca %Span, align 4
  %3 = alloca i32, align 4
  %_2 = alloca { %"imp::Span" }, align 4
  %4 = bitcast { %"imp::Span" }* %_2 to %"imp::Span"*
  store i32 %0, i32* %3, align 4
  %5 = bitcast %"imp::Span"* %4 to i8*
  %6 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  %7 = bitcast { %"imp::Span" }* %_2 to %"imp::Span"*
  %8 = bitcast %"imp::Span"* %7 to i32*
  %9 = load i32, i32* %8, align 4
; call proc_macro2::Span::_new
  %10 = call i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %9)
  store i32 %10, i32* %1, align 4
  %11 = bitcast %Span* %2 to i8*
  %12 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %13 = bitcast %Span* %2 to i32*
  %14 = load i32, i32* %13, align 4
  ret i32 %14
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h824a0c88f3f31544E() unnamed_addr #0 {
start:
  %_2 = alloca {}, align 1
; call proc_macro2::detection::initialize
  call void @_ZN11proc_macro29detection10initialize17ha8fdcd0ae2c28965E()
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hb21f5d12679da217E(i8* align 1 dereferenceable(1) %0, { i64, i8 }* align 8 dereferenceable(16) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_2 = alloca i64*, align 8
  %_1 = alloca i8*, align 8
  store i8* %0, i8** %_1, align 8
  %3 = bitcast i64** %_2 to { i64, i8 }**
  store { i64, i8 }* %1, { i64, i8 }** %3, align 8
  %4 = load i64*, i64** %_2, align 8, !nonnull !20
  %5 = bitcast i64* %4 to { i64, i8 }*
; invoke std::sync::once::Once::call_once::{{closure}}
  invoke void @"_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h8a5def87039816d6E"(i8** align 8 dereferenceable(8) %_1, { i64, i8 }* align 8 dereferenceable(16) %5)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  br label %bb2

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb2:                                              ; preds = %bb1
  ret void
}

; core::ptr::drop_in_place<(proc_macro2::parse::Cursor,alloc::vec::Vec<proc_macro2::TokenTree>)>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr103drop_in_place$LT$$LP$proc_macro2..parse..Cursor$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$17h20ead89f80570bdfE"({ { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }, { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<[(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr109drop_in_place$LT$$u5b$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$u5d$$GT$17hea152c612779964bE"([0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* %_1.0, i64 %_1.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*, align 8
  %_4 = alloca i64, align 8
  br i1 false, label %bb7, label %bb12

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8
  br label %bb6

bb12:                                             ; preds = %start
  %1 = bitcast [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* %_1.0 to { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*
  store { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %1, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %_9, align 8
  %2 = load { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %_9, align 8
  %_10 = getelementptr inbounds { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %2, i64 %_1.1
  br label %bb11

bb11:                                             ; preds = %bb10, %bb12
  %3 = load { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %_9, align 8
  %_14 = icmp eq { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %3, %_10
  br i1 %_14, label %bb1, label %bb10

bb10:                                             ; preds = %bb11
  %_13 = load { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %_9, align 8
  %4 = load { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %_9, align 8
  %5 = getelementptr inbounds { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %4, i64 1
  store { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %5, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %_9, align 8
; invoke core::ptr::drop_in_place<(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)>
  invoke void @"_ZN4core3ptr99drop_in_place$LT$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$17h4354002c24974f83E"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_13)
          to label %bb11 unwind label %cleanup

bb1:                                              ; preds = %bb6, %bb11
  ret void

bb9:                                              ; preds = %bb8, %cleanup
  %6 = load { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %_9, align 8
  %_12 = icmp eq { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %6, %_10
  br i1 %_12, label %bb2, label %bb8

cleanup:                                          ; preds = %bb10
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb9

bb8:                                              ; preds = %bb9
  %_11 = load { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %_9, align 8
  %12 = load { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %_9, align 8
  %13 = getelementptr inbounds { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %12, i64 1
  store { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %13, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %_9, align 8
; call core::ptr::drop_in_place<(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)>
  call void @"_ZN4core3ptr99drop_in_place$LT$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$17h4354002c24974f83E"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_11) #18
  br label %bb9

bb2:                                              ; preds = %bb4, %bb9
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb6:                                              ; preds = %bb5, %bb7
  %20 = load i64, i64* %_4, align 8
  %_8 = icmp eq i64 %20, %_1.1
  br i1 %_8, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %21 = load i64, i64* %_4, align 8
  %_7 = getelementptr inbounds [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }], [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* %_1.0, i64 0, i64 %21
  %22 = load i64, i64* %_4, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %_4, align 8
; invoke core::ptr::drop_in_place<(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)>
  invoke void @"_ZN4core3ptr99drop_in_place$LT$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$17h4354002c24974f83E"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_7)
          to label %bb6 unwind label %cleanup1

bb4:                                              ; preds = %bb3, %cleanup1
  %24 = load i64, i64* %_4, align 8
  %_6 = icmp eq i64 %24, %_1.1
  br i1 %_6, label %bb2, label %bb3

cleanup1:                                         ; preds = %bb5
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %30 = load i64, i64* %_4, align 8
  %_5 = getelementptr inbounds [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }], [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* %_1.0, i64 0, i64 %30
  %31 = load i64, i64* %_4, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %_4, align 8
; call core::ptr::drop_in_place<(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)>
  call void @"_ZN4core3ptr99drop_in_place$LT$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$17h4354002c24974f83E"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_5) #18
  br label %bb4
}

; core::ptr::drop_in_place<core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr111drop_in_place$LT$core..option..Option$LT$core..iter..sources..once..Once$LT$proc_macro..TokenStream$GT$$GT$$GT$17h4e2ae10a080ad048E"(%"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %_1 to i32*
  %1 = load i32, i32* %0, align 4, !range !19
  %_2 = zext i32 %1 to i64
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %_1 to %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some", %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some"* %3, i32 0, i32 1
; call core::ptr::drop_in_place<core::iter::sources::once::Once<proc_macro::TokenStream>>
  call void @"_ZN4core3ptr83drop_in_place$LT$core..iter..sources..once..Once$LT$proc_macro..TokenStream$GT$$GT$17h570fc2ba36075531E"(%"core::iter::sources::once::Once<proc_macro::TokenStream>"* %4)
  br label %bb1
}

; core::ptr::drop_in_place<alloc::vec::Vec<(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr122drop_in_place$LT$alloc..vec..Vec$LT$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$$GT$17hd2f3c047bc7be274E"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h026ba42c7d35d9c6E"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)>>
  call void @"_ZN4core3ptr129drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$$GT$17hf43d1a43f886ffcdE"({ i64*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)>>
  call void @"_ZN4core3ptr129drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$$GT$17hf43d1a43f886ffcdE"({ i64*, i64 }* %2) #18
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<std::sync::once::Once::call_once<proc_macro2::detection::initialize>::{{closure}}>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr124drop_in_place$LT$std..sync..once..Once..call_once$LT$proc_macro2..detection..initialize$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5478942f25b80afeE"(i8** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr129drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$$GT$17hf43d1a43f886ffcdE"({ i64*, i64 }* %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2e1d7678ba2a9971E"({ i64*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<proc_macro::TokenTree,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr143drop_in_place$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$proc_macro..TokenTree$C$alloc..alloc..Global$GT$$GT$17h9ebcc4967f510253E"({ i64*, i64 }* %_1) unnamed_addr #1 {
start:
; call <<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN125_$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1c2820cbd069ea05E"({ i64*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<proc_macro2::TokenTree,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr144drop_in_place$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$proc_macro2..TokenTree$C$alloc..alloc..Global$GT$$GT$17h6e7cc634e50ab074E"({ i64*, i64 }* %_1) unnamed_addr #1 {
start:
; call <<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN125_$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf26897844fc86a74E"({ i64*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::result::Result<(proc_macro2::parse::Cursor,alloc::vec::Vec<proc_macro2::TokenTree>),proc_macro2::parse::Reject>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr160drop_in_place$LT$core..result..Result$LT$$LP$proc_macro2..parse..Cursor$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$C$proc_macro2..parse..Reject$GT$$GT$17hd38e2e3fa4a5dbb9E"(%"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb2, label %bb1

bb2:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* %_1 to %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>::Ok"*
  %5 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>::Ok"* %4 to { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }*
; call core::ptr::drop_in_place<(proc_macro2::parse::Cursor,alloc::vec::Vec<proc_macro2::TokenTree>)>
  call void @"_ZN4core3ptr103drop_in_place$LT$$LP$proc_macro2..parse..Cursor$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$17h20ead89f80570bdfE"({ { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }* %5)
  br label %bb1

bb1:                                              ; preds = %bb2, %start
  ret void
}

; core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro::TokenTree,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr168drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro..TokenTree$C$alloc..alloc..Global$GT$$GT$17hd544538411050593E"(i64** %_1) unnamed_addr #1 {
start:
; call <<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN150_$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8858366ee19599daE"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro2::TokenTree,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr176drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro2..TokenTree$C$alloc..alloc..Global$GT$$GT$17h501da02cad3c8d34E"(i64** %_1) unnamed_addr #1 {
start:
; call <<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN157_$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h73bdd535d15ae295E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h688988a0ce65c112E({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h947349b23849c599E"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hb212785c48f83b35E({}* %_3, i64 %len)
  %1 = extractvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %0, 0
  %2 = extractvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } undef, [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* %1, 0
  %4 = insertvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %3, i64 %2, 1
  ret { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %4
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h8f72da74031e27f4E(%"proc_macro::TokenTree"* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h306a58186c70055cE"(%"proc_macro::TokenTree"* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hdbb02f573c934494E({}* %_3, i64 %len)
  %1 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %0, 0
  %2 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } undef, [0 x %"proc_macro::TokenTree"]* %1, 0
  %4 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %3, i64 %2, 1
  ret { [0 x %"proc_macro::TokenTree"]*, i64 } %4
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %TokenTree]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hfda42fca2c1a34c7E(%TokenTree* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h78616fc6ff457bfbE"(%TokenTree* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x %TokenTree]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17he9bd5561f29713a0E({}* %_3, i64 %len)
  %1 = extractvalue { [0 x %TokenTree]*, i64 } %0, 0
  %2 = extractvalue { [0 x %TokenTree]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x %TokenTree]*, i64 } undef, [0 x %TokenTree]* %1, 0
  %4 = insertvalue { [0 x %TokenTree]*, i64 } %3, i64 %2, 1
  ret { [0 x %TokenTree]*, i64 } %4
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hffb7268dfbdf28e2E(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h8a4be63148746bf8E"(i8* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h00e6bf5487957e41E({}* %_3, i64 %len)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; core::ptr::drop_in_place<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>,<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr212drop_in_place$LT$core..iter..adapters..map..Map$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$C$$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$..from$GT$$GT$17h258ecf846b955c31E"(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %_1 to %"alloc::vec::drain::Drain<proc_macro::TokenTree>"*
; call core::ptr::drop_in_place<alloc::vec::drain::Drain<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr74drop_in_place$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$GT$17h20282709377aa8a6E"(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>,<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr240drop_in_place$LT$core..option..Option$LT$core..iter..adapters..map..Map$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$C$$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$..from$GT$$GT$$GT$17h0a35bc442319e264E"(%"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %_1, i32 0, i32 1
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %_1 to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>::Some"*
  %5 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>::Some"* %4 to %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"*
; call core::ptr::drop_in_place<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>,<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from>>
  call void @"_ZN4core3ptr212drop_in_place$LT$core..iter..adapters..map..Map$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$C$$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$..from$GT$$GT$17h258ecf846b955c31E"(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %5)
  br label %bb1
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h0f5cbe894c90e201E({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17ha149669fccb9d542E({}* %0, i64 %len)
  %2 = extractvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %1, 0
  %3 = extractvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } undef, [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* %2, 0
  %5 = insertvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %4, i64 %3, 1
  ret { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h10b6ef78c7a5bdf6E(%"proc_macro::TokenTree"* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast %"proc_macro::TokenTree"* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17ha7ca5a2b64fb37e1E({}* %0, i64 %len)
  %2 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %1, 0
  %3 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } undef, [0 x %"proc_macro::TokenTree"]* %2, 0
  %5 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %4, i64 %3, 1
  ret { [0 x %"proc_macro::TokenTree"]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h1d170a4145e08d8eE(%"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h13cd8d59477f7b83E({}* %0, i64 %len)
  %2 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %1, 0
  %3 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } undef, [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]* %2, 0
  %5 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %4, i64 %3, 1
  ret { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %TokenTree]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h71da89a5af3b0b0dE(%TokenTree* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast %TokenTree* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x %TokenTree]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hf0c1a69dd8c9b405E({}* %0, i64 %len)
  %2 = extractvalue { [0 x %TokenTree]*, i64 } %1, 0
  %3 = extractvalue { [0 x %TokenTree]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %TokenTree]*, i64 } undef, [0 x %TokenTree]* %2, 0
  %5 = insertvalue { [0 x %TokenTree]*, i64 } %4, i64 %3, 1
  ret { [0 x %TokenTree]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h7b4f6aee009f378dE(i8* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast i8* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hfc5926d74f7e01a2E({}* %0, i64 %len)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hf3c48f452b20430fE(%"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h3266b1b8b306b34bE({}* %0, i64 %len)
  %2 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %1, 0
  %3 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } undef, [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]* %2, 0
  %5 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %4, i64 %3, 1
  ret { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %5
}

; core::ptr::drop_in_place<bool>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr25drop_in_place$LT$bool$GT$17hbfdfd384d31b0755E"(i8* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<char>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr25drop_in_place$LT$char$GT$17h6f85a03e0a533aebE"(i32* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&str>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17hb6ee8af02a01ff5cE"({ [0 x i8]*, i64 }* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&usize>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h62fd7da71f236745E"(i64** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>,core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>,<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr319drop_in_place$LT$core..iter..adapters..chain..Chain$LT$core..iter..sources..once..Once$LT$proc_macro..TokenStream$GT$$C$core..iter..adapters..map..Map$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$C$$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$..from$GT$$GT$$GT$17h27188bb8f9556545E"(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>>
  invoke void @"_ZN4core3ptr111drop_in_place$LT$core..option..Option$LT$core..iter..sources..once..Once$LT$proc_macro..TokenStream$GT$$GT$$GT$17h4e2ae10a080ad048E"(%"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %_1 to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"*
; call core::ptr::drop_in_place<core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>,<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from>>>
  call void @"_ZN4core3ptr240drop_in_place$LT$core..option..Option$LT$core..iter..adapters..map..Map$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$C$$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$..from$GT$$GT$$GT$17h0a35bc442319e264E"(%"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %2)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %3 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %_1 to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"*
; call core::ptr::drop_in_place<core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>,<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from>>>
  call void @"_ZN4core3ptr240drop_in_place$LT$core..option..Option$LT$core..iter..adapters..map..Map$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$C$$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$..from$GT$$GT$$GT$17h0a35bc442319e264E"(%"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %3) #18
  br label %bb1

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<core::fmt::Error>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17h2e88339520814d73E"(%"core::fmt::Error"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro::Span>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr37drop_in_place$LT$proc_macro..Span$GT$17h242c2613f3041202E"(%"proc_macro::Span"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro::Group>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr38drop_in_place$LT$proc_macro..Group$GT$17h018fff65b3ea9048E"(%"proc_macro::Group"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"proc_macro::Group"* %_1 to %"proc_macro::bridge::client::Group"*
; call core::ptr::drop_in_place<proc_macro::bridge::client::Group>
  call void @"_ZN4core3ptr54drop_in_place$LT$proc_macro..bridge..client..Group$GT$17hc979332daffa03c9E"(%"proc_macro::bridge::client::Group"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<proc_macro2::Group>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Group$GT$17h63f66057fccbef96E"(%Group* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %Group* %_1 to %"imp::Group"*
; call core::ptr::drop_in_place<proc_macro2::imp::Group>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17h7901ac00c8dfa1c6E"(%"imp::Group"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<proc_macro2::Ident>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Ident$GT$17ha5a69e48e88af264E"(%Ident* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %Ident* %_1 to %"imp::Ident"*
; call core::ptr::drop_in_place<proc_macro2::imp::Ident>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Ident$GT$17h63dd89cad702d684E"(%"imp::Ident"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::path::PathBuf>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hae66e9d6f0635f16E"(%"std::path::PathBuf"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::path::PathBuf"* %_1 to %"std::ffi::os_str::OsString"*
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h8b9ed9daf3251c4cE"(%"std::ffi::os_str::OsString"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<proc_macro::Literal>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr40drop_in_place$LT$proc_macro..Literal$GT$17hff6acdf425c9bb8eE"(%"proc_macro::Literal"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"proc_macro::Literal"* %_1 to %"proc_macro::bridge::client::Literal"*
; call core::ptr::drop_in_place<proc_macro::bridge::client::Literal>
  call void @"_ZN4core3ptr56drop_in_place$LT$proc_macro..bridge..client..Literal$GT$17h853fdbc90f7904c9E"(%"proc_macro::bridge::client::Literal"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::fmt::Arguments>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr41drop_in_place$LT$core..fmt..Arguments$GT$17hab43e5c263302fb1E"(%"core::fmt::Arguments"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro::LexError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr41drop_in_place$LT$proc_macro..LexError$GT$17h398257a7d509d3d5E"(%"proc_macro::LexError"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro2::Literal>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr41drop_in_place$LT$proc_macro2..Literal$GT$17h80baf135aeaf8eb5E"(%Literal* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %Literal* %_1 to %"imp::Literal"*
; call core::ptr::drop_in_place<proc_macro2::imp::Literal>
  call void @"_ZN4core3ptr46drop_in_place$LT$proc_macro2..imp..Literal$GT$17h1792172ac090f0a6E"(%"imp::Literal"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<proc_macro2::Spacing>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr41drop_in_place$LT$proc_macro2..Spacing$GT$17h95f340fe17449509E"(i8* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"alloc::string::String"* %_1 to %"alloc::vec::Vec<u8>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hd8350eb4e54098a8E"(%"alloc::vec::Vec<u8>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<proc_macro::TokenTree>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$proc_macro..TokenTree$GT$17h590df432ff1e94c3E"(%"proc_macro::TokenTree"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"proc_macro::TokenTree"* %_1 to i32*
  %1 = load i32, i32* %0, align 4, !range !36
  %_2 = zext i32 %1 to i64
  switch i64 %_2, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb1
    i64 2, label %bb1
  ]

bb3:                                              ; preds = %start
  %2 = bitcast %"proc_macro::TokenTree"* %_1 to %"proc_macro::TokenTree::Literal"*
  %3 = getelementptr inbounds %"proc_macro::TokenTree::Literal", %"proc_macro::TokenTree::Literal"* %2, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro::Literal>
  call void @"_ZN4core3ptr40drop_in_place$LT$proc_macro..Literal$GT$17hff6acdf425c9bb8eE"(%"proc_macro::Literal"* %3)
  br label %bb1

bb2:                                              ; preds = %start
  %4 = bitcast %"proc_macro::TokenTree"* %_1 to %"proc_macro::TokenTree::Group"*
  %5 = getelementptr inbounds %"proc_macro::TokenTree::Group", %"proc_macro::TokenTree::Group"* %4, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro::Group>
  call void @"_ZN4core3ptr38drop_in_place$LT$proc_macro..Group$GT$17h018fff65b3ea9048E"(%"proc_macro::Group"* %5)
  br label %bb1

bb1:                                              ; preds = %bb2, %bb3, %start, %start
  ret void
}

; core::ptr::drop_in_place<proc_macro2::Delimiter>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..Delimiter$GT$17h9c9bbf2a1760d77aE"(i8* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro2::TokenTree>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %TokenTree* %_1 to i32*
  %1 = load i32, i32* %0, align 8, !range !36
  %_2 = zext i32 %1 to i64
  switch i64 %_2, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
    i64 2, label %bb1
  ]

bb4:                                              ; preds = %start
  %2 = bitcast %TokenTree* %_1 to %"TokenTree::Literal"*
  %3 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %2, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::Literal>
  call void @"_ZN4core3ptr41drop_in_place$LT$proc_macro2..Literal$GT$17h80baf135aeaf8eb5E"(%Literal* %3)
  br label %bb1

bb2:                                              ; preds = %start
  %4 = bitcast %TokenTree* %_1 to %"TokenTree::Group"*
  %5 = getelementptr inbounds %"TokenTree::Group", %"TokenTree::Group"* %4, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::Group>
  call void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Group$GT$17h63f66057fccbef96E"(%Group* %5)
  br label %bb1

bb3:                                              ; preds = %start
  %6 = bitcast %TokenTree* %_1 to %"TokenTree::Ident"*
  %7 = getelementptr inbounds %"TokenTree::Ident", %"TokenTree::Ident"* %6, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::Ident>
  call void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Ident$GT$17ha5a69e48e88af264E"(%Ident* %7)
  br label %bb1

bb1:                                              ; preds = %bb2, %bb3, %bb4, %start
  ret void
}

; core::ptr::drop_in_place<proc_macro::TokenStream>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"proc_macro::TokenStream"* %_1 to %"proc_macro::bridge::client::TokenStream"*
; call core::ptr::drop_in_place<proc_macro::bridge::client::TokenStream>
  call void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..TokenStream$GT$17h9253204819f5425bE"(%"proc_macro::bridge::client::TokenStream"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<proc_macro2::imp::Group>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17h7901ac00c8dfa1c6E"(%"imp::Group"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"imp::Group"* %_1 to i32*
  %1 = load i32, i32* %0, align 8, !range !19
  %_2 = zext i32 %1 to i64
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %3 = bitcast %"imp::Group"* %_1 to %"imp::Group::Compiler"*
  %4 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %3, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro::Group>
  call void @"_ZN4core3ptr38drop_in_place$LT$proc_macro..Group$GT$17h018fff65b3ea9048E"(%"proc_macro::Group"* %4)
  br label %bb1

bb3:                                              ; preds = %start
  %5 = bitcast %"imp::Group"* %_1 to %"imp::Group::Fallback"*
  %6 = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %5, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::fallback::Group>
  call void @"_ZN4core3ptr49drop_in_place$LT$proc_macro2..fallback..Group$GT$17h13f8c54853fc68c6E"(%"fallback::Group"* %6)
  br label %bb1

bb1:                                              ; preds = %bb2, %bb3
  ret void
}

; core::ptr::drop_in_place<proc_macro2::imp::Ident>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Ident$GT$17h63dd89cad702d684E"(%"imp::Ident"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"imp::Ident"* %_1 to i32*
  %1 = load i32, i32* %0, align 8, !range !19
  %_2 = zext i32 %1 to i64
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %3 = bitcast %"imp::Ident"* %_1 to %"imp::Ident::Fallback"*
  %4 = getelementptr inbounds %"imp::Ident::Fallback", %"imp::Ident::Fallback"* %3, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::fallback::Ident>
  call void @"_ZN4core3ptr49drop_in_place$LT$proc_macro2..fallback..Ident$GT$17h7d504549761c054cE"(%"fallback::Ident"* %4)
  br label %bb1
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hd8350eb4e54098a8E"(%"alloc::vec::Vec<u8>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he6f1315d91b76757E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h92b3c7fd964fa647E"({ i8*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h92b3c7fd964fa647E"({ i8*, i64 }* %2) #18
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<proc_macro2::imp::Literal>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$proc_macro2..imp..Literal$GT$17h1792172ac090f0a6E"(%"imp::Literal"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"imp::Literal"* %_1 to i32*
  %1 = load i32, i32* %0, align 8, !range !19
  %_2 = zext i32 %1 to i64
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %3 = bitcast %"imp::Literal"* %_1 to %"imp::Literal::Compiler"*
  %4 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %3, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro::Literal>
  call void @"_ZN4core3ptr40drop_in_place$LT$proc_macro..Literal$GT$17hff6acdf425c9bb8eE"(%"proc_macro::Literal"* %4)
  br label %bb1

bb3:                                              ; preds = %start
  %5 = bitcast %"imp::Literal"* %_1 to %"imp::Literal::Fallback"*
  %6 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %5, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  call void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17hbda93f62f7510cdeE"(%"fallback::Literal"* %6)
  br label %bb1

bb1:                                              ; preds = %bb2, %bb3
  ret void
}

; core::ptr::drop_in_place<proc_macro2::imp::LexError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr47drop_in_place$LT$proc_macro2..imp..LexError$GT$17hc7b5ef404820aed3E"(i8* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<std::ffi::os_str::OsString>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h8b9ed9daf3251c4cE"(%"std::ffi::os_str::OsString"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::ffi::os_str::OsString"* %_1 to %"std::sys::unix::os_str::Buf"*
; call core::ptr::drop_in_place<std::sys::unix::os_str::Buf>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..sys..unix..os_str..Buf$GT$17hc3403b99761a3460E"(%"std::sys::unix::os_str::Buf"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sys::unix::os_str::Buf>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr48drop_in_place$LT$std..sys..unix..os_str..Buf$GT$17hc3403b99761a3460E"(%"std::sys::unix::os_str::Buf"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::sys::unix::os_str::Buf"* %_1 to %"alloc::vec::Vec<u8>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hd8350eb4e54098a8E"(%"alloc::vec::Vec<u8>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<proc_macro2::fallback::Group>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr49drop_in_place$LT$proc_macro2..fallback..Group$GT$17h13f8c54853fc68c6E"(%"fallback::Group"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"fallback::Group"* %_1 to %"fallback::TokenStream"*
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h8ea3f1fe2253e242E"(%"fallback::TokenStream"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<proc_macro2::fallback::Ident>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr49drop_in_place$LT$proc_macro2..fallback..Ident$GT$17h7d504549761c054cE"(%"fallback::Ident"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"fallback::Ident"* %_1 to %"alloc::string::String"*
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17h173054a24835ec96E(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, %"alloc::vec::Vec<TokenTree>"* %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<TokenTree>>", align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::vec::Vec<TokenTree>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::vec::Vec<TokenTree>>", align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !37)
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::vec::Vec<TokenTree>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::vec::Vec<TokenTree>>"* %tmp to %"alloc::vec::Vec<TokenTree>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"alloc::vec::Vec<TokenTree>"* %2 to i8*
  %4 = bitcast %"alloc::vec::Vec<TokenTree>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::vec::Vec<TokenTree>>"* %_6 to i8*
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::vec::Vec<TokenTree>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !40)
  call void @llvm.experimental.noalias.scope.decl(metadata !43)
  %7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::vec::Vec<TokenTree>>"* %_6 to %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<TokenTree>>"*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<TokenTree>>"* %_3.i to i8*
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<TokenTree>>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !noalias !40
  call void @llvm.experimental.noalias.scope.decl(metadata !45)
  call void @llvm.experimental.noalias.scope.decl(metadata !48)
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<TokenTree>>"* %_3.i to %"alloc::vec::Vec<TokenTree>"*
  %11 = bitcast %"alloc::vec::Vec<TokenTree>"* %0 to i8*
  %12 = bitcast %"alloc::vec::Vec<TokenTree>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false), !alias.scope !50, !noalias !43
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @_ZN4core3ptr4read17h195bf6506de849fdE({ i32*, i32* }* %src) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i8* }, align 8
  %tmp = alloca { i8*, i8* }, align 8
  %1 = bitcast { i8*, i8* }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i8*, i8* } undef, i8* %3, 0
  %7 = insertvalue { i8*, i8* } %6, i8* %5, 1
  store { i8*, i8* } %7, { i8*, i8* }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast { i8*, i8* }* %tmp to { i32*, i32* }*
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = bitcast { i32*, i32* }* %8 to i8*
  %10 = bitcast { i32*, i32* }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %tmp, i32 0, i32 0
  %_6.0 = load i8*, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %tmp, i32 0, i32 1
  %_6.1 = load i8*, i8** %12, align 8
  %_3.0.i = bitcast i8* %_6.0 to i32*
  %_3.1.i = bitcast i8* %_6.1 to i32*
  %13 = insertvalue { i32*, i32* } undef, i32* %_3.0.i, 0
  %14 = insertvalue { i32*, i32* } %13, i32* %_3.1.i, 1
  %15 = extractvalue { i32*, i32* } %14, 0
  %16 = extractvalue { i32*, i32* } %14, 1
  %17 = extractvalue { i32*, i32* } %14, 0
  %18 = extractvalue { i32*, i32* } %14, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %19 = insertvalue { i32*, i32* } undef, i32* %17, 0
  %20 = insertvalue { i32*, i32* } %19, i32* %18, 1
  ret { i32*, i32* } %20
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3ptr4read17h401b92d9459d8dc3E(%"proc_macro::TokenStream"* %src) unnamed_addr #0 {
start:
  %0 = alloca %"proc_macro::TokenStream", align 4
  %1 = alloca i32, align 4
  %slot.i = alloca %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenStream>", align 4
  %2 = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>", align 4
  %3 = alloca i32, align 4
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenStream>", align 4
  %4 = alloca %"proc_macro::TokenStream", align 4
  %5 = alloca i32, align 4
  %self.i = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>", align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>", align 4
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>", align 4
  %8 = alloca %"proc_macro::TokenStream", align 4
  %9 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>"* %2 to {}*
  %10 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>"* %2 to i32*
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %7, align 4
  %12 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>"* %tmp to i8*
  %13 = bitcast i32* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %14 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>"* %tmp to %"proc_macro::TokenStream"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %15 = bitcast %"proc_macro::TokenStream"* %14 to i8*
  %16 = bitcast %"proc_macro::TokenStream"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 4, i1 false)
  %17 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>"* %_6 to i8*
  %18 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 4, i1 false)
  %19 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>"* %_6 to i32*
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %5, align 4
  %21 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>"* %self.i to i8*
  %22 = bitcast i32* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 4, i1 false)
  %23 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenStream>"* %self.i to %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenStream>"*
  %24 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenStream>"* %_3.i to i8*
  %25 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenStream>"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 4, i1 false)
  %26 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenStream>"* %_3.i to i32*
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %1, align 4
  %28 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenStream>"* %slot.i to i8*
  %29 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 4, i1 false)
  %30 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenStream>"* %slot.i to %"proc_macro::TokenStream"*
  %31 = bitcast %"proc_macro::TokenStream"* %0 to i8*
  %32 = bitcast %"proc_macro::TokenStream"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 4, i1 false)
  %33 = bitcast %"proc_macro::TokenStream"* %0 to i32*
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %3, align 4
  %35 = bitcast %"proc_macro::TokenStream"* %4 to i8*
  %36 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 4, i1 false)
  %37 = bitcast %"proc_macro::TokenStream"* %4 to i32*
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %6, align 4
  %39 = bitcast %"proc_macro::TokenStream"* %8 to i8*
  %40 = bitcast i32* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %41 = bitcast %"proc_macro::TokenStream"* %8 to i32*
  %42 = load i32, i32* %41, align 4
  ret i32 %42
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17h4c36405c669cc0a7E(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, %TokenTree* %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<TokenTree>", align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<TokenTree>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<TokenTree>", align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !51)
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %tmp to %TokenTree*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %TokenTree* %2 to i8*
  %4 = bitcast %TokenTree* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false)
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %_6 to i8*
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 48, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !54)
  call void @llvm.experimental.noalias.scope.decl(metadata !57)
  %7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %_6 to %"core::mem::manually_drop::ManuallyDrop<TokenTree>"*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<TokenTree>"* %_3.i to i8*
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<TokenTree>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 48, i1 false), !noalias !54
  call void @llvm.experimental.noalias.scope.decl(metadata !59)
  call void @llvm.experimental.noalias.scope.decl(metadata !62)
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<TokenTree>"* %_3.i to %TokenTree*
  %11 = bitcast %TokenTree* %0 to i8*
  %12 = bitcast %TokenTree* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 48, i1 false), !alias.scope !64, !noalias !57
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3ptr4read17h4c931e8d1e100f70E(i8* %src) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %tmp = alloca i8, align 1
  %1 = bitcast i8* %0 to {}*
  %2 = load i8, i8* %0, align 1
  store i8 %2, i8* %tmp, align 1
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %tmp, i8* align 1 %src, i64 1, i1 false)
  %_6 = load i8, i8* %tmp, align 1
  %_3.i = trunc i8 %_6 to i1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %_3.i
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core3ptr4read17h644fc1dc01c0fa56E({ i8*, i64 }* %src) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %tmp = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast { i8*, i64 }* %tmp to i8*
  %9 = bitcast { i8*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 0
  %_6.0 = load i8*, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 1
  %_6.1 = load i64, i64* %11, align 8
  %12 = insertvalue { i8*, i64 } undef, i8* %_6.0, 0
  %13 = insertvalue { i8*, i64 } %12, i64 %_6.1, 1
  %14 = extractvalue { i8*, i64 } %13, 0
  %15 = extractvalue { i8*, i64 } %13, 1
  %16 = extractvalue { i8*, i64 } %13, 0
  %17 = extractvalue { i8*, i64 } %13, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %18 = insertvalue { i8*, i64 } undef, i8* %16, 0
  %19 = insertvalue { i8*, i64 } %18, i64 %17, 1
  ret { i8*, i64 } %19
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3ptr4read17h672ce745ba22dc3fE(i32* %src) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %1 = bitcast i32* %0 to {}*
  %2 = load i32, i32* %0, align 4
  store i32 %2, i32* %tmp, align 4
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i32* %tmp to i8*
  %4 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %_6 = load i32, i32* %tmp, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i32 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr4read17h6a2997a46829b4b5E(%"proc_macro::TokenTree"* %src) unnamed_addr #0 {
start:
  %0 = alloca %"proc_macro::TokenTree", align 4
  %1 = alloca i64, align 8
  %slot.i = alloca %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>", align 4
  %2 = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>", align 4
  %3 = alloca i64, align 8
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>", align 4
  %4 = alloca %"proc_macro::TokenTree", align 4
  %5 = alloca i64, align 8
  %self.i = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>", align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>", align 4
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>", align 4
  %8 = alloca %"proc_macro::TokenTree", align 4
  %9 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %2 to {}*
  %10 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %2 to i64*
  %11 = load i64, i64* %10, align 4
  store i64 %11, i64* %7, align 8
  %12 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %tmp to i8*
  %13 = bitcast i64* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 8, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %14 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %tmp to %"proc_macro::TokenTree"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %15 = bitcast %"proc_macro::TokenTree"* %14 to i8*
  %16 = bitcast %"proc_macro::TokenTree"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 8, i1 false)
  %17 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %_6 to i8*
  %18 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 8, i1 false)
  %19 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %_6 to i64*
  %20 = load i64, i64* %19, align 4
  store i64 %20, i64* %5, align 8
  %21 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %self.i to i8*
  %22 = bitcast i64* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 8 %22, i64 8, i1 false)
  %23 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %self.i to %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>"*
  %24 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>"* %_3.i to i8*
  %25 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 8, i1 false)
  %26 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>"* %_3.i to i64*
  %27 = load i64, i64* %26, align 4
  store i64 %27, i64* %1, align 8
  %28 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>"* %slot.i to i8*
  %29 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 8 %29, i64 8, i1 false)
  %30 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>"* %slot.i to %"proc_macro::TokenTree"*
  %31 = bitcast %"proc_macro::TokenTree"* %0 to i8*
  %32 = bitcast %"proc_macro::TokenTree"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 8, i1 false)
  %33 = bitcast %"proc_macro::TokenTree"* %0 to i64*
  %34 = load i64, i64* %33, align 4
  store i64 %34, i64* %3, align 8
  %35 = bitcast %"proc_macro::TokenTree"* %4 to i8*
  %36 = bitcast i64* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 8 %36, i64 8, i1 false)
  %37 = bitcast %"proc_macro::TokenTree"* %4 to i64*
  %38 = load i64, i64* %37, align 4
  store i64 %38, i64* %6, align 8
  %39 = bitcast %"proc_macro::TokenTree"* %8 to i8*
  %40 = bitcast i64* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 8 %40, i64 8, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %41 = bitcast %"proc_macro::TokenTree"* %8 to i64*
  %42 = load i64, i64* %41, align 4
  ret i64 %42
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17h971cb86e41d2d7a0E({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* noalias nocapture sret({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }) dereferenceable(32) %0, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<(Delimiter, alloc::vec::Vec<TokenTree>)>", align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<(Delimiter, alloc::vec::Vec<TokenTree>)>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<(Delimiter, alloc::vec::Vec<TokenTree>)>", align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !65)
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %tmp to { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %2 to i8*
  %4 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %_6 to i8*
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !68)
  call void @llvm.experimental.noalias.scope.decl(metadata !71)
  %7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %_6 to %"core::mem::manually_drop::ManuallyDrop<(Delimiter, alloc::vec::Vec<TokenTree>)>"*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %_3.i to i8*
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false), !noalias !68
  call void @llvm.experimental.noalias.scope.decl(metadata !73)
  call void @llvm.experimental.noalias.scope.decl(metadata !76)
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %_3.i to { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*
  %11 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %0 to i8*
  %12 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false), !alias.scope !78, !noalias !71
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @_ZN4core3ptr4read17ha379a8bbecf5ac3cE({ i64, i32 }* %src) unnamed_addr #0 {
start:
  %0 = alloca { i64, i32 }, align 8
  %tmp = alloca { i64, i32 }, align 8
  %1 = bitcast { i64, i32 }* %0 to {}*
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i64, i32 } undef, i64 %3, 0
  %7 = insertvalue { i64, i32 } %6, i32 %5, 1
  store { i64, i32 } %7, { i64, i32 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast { i64, i32 }* %tmp to i8*
  %9 = bitcast { i64, i32 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %tmp, i32 0, i32 0
  %_6.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %tmp, i32 0, i32 1
  %_6.1 = load i32, i32* %11, align 8
  %12 = insertvalue { i64, i32 } undef, i64 %_6.0, 0
  %13 = insertvalue { i64, i32 } %12, i32 %_6.1, 1
  %14 = extractvalue { i64, i32 } %13, 0
  %15 = extractvalue { i64, i32 } %13, 1
  %16 = extractvalue { i64, i32 } %13, 0
  %17 = extractvalue { i64, i32 } %13, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %18 = insertvalue { i64, i32 } undef, i64 %16, 0
  %19 = insertvalue { i64, i32 } %18, i32 %17, 1
  ret { i64, i32 } %19
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) i64* @_ZN4core3ptr4read17ha5a0480b38770784E(i64** %src) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %1 = bitcast i8** %0 to {}*
  %2 = load i8*, i8** %0, align 8
  store i8* %2, i8** %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i8** %tmp to i64**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast i64** %3 to i8*
  %5 = bitcast i64** %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false)
  %_6 = load i8*, i8** %tmp, align 8
  %_3.i = bitcast i8* %_6 to i64*
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64* %_3.i
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3ptr4read17hb69cacf1ee6d2415E(%"core::option::Option<proc_macro::TokenStream>"* %src) unnamed_addr #0 {
start:
  %0 = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  %1 = alloca i32, align 4
  %slot.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::TokenStream>>", align 4
  %2 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>", align 4
  %3 = alloca i32, align 4
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::TokenStream>>", align 4
  %4 = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  %5 = alloca i32, align 4
  %self.i = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>", align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>", align 4
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>", align 4
  %8 = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  %9 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>"* %2 to {}*
  %10 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>"* %2 to i32*
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %7, align 4
  %12 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>"* %tmp to i8*
  %13 = bitcast i32* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %14 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>"* %tmp to %"core::option::Option<proc_macro::TokenStream>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %15 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %14 to i8*
  %16 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 4, i1 false)
  %17 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>"* %_6 to i8*
  %18 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 4, i1 false)
  %19 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>"* %_6 to i32*
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %5, align 4
  %21 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>"* %self.i to i8*
  %22 = bitcast i32* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 4, i1 false)
  %23 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<proc_macro::TokenStream>>"* %self.i to %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::TokenStream>>"*
  %24 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::TokenStream>>"* %_3.i to i8*
  %25 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::TokenStream>>"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 4, i1 false)
  %26 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::TokenStream>>"* %_3.i to i32*
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %1, align 4
  %28 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::TokenStream>>"* %slot.i to i8*
  %29 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 4, i1 false)
  %30 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<proc_macro::TokenStream>>"* %slot.i to %"core::option::Option<proc_macro::TokenStream>"*
  %31 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %0 to i8*
  %32 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 4, i1 false)
  %33 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %0 to i32*
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %3, align 4
  %35 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %4 to i8*
  %36 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 4, i1 false)
  %37 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %4 to i32*
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %6, align 4
  %39 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %8 to i8*
  %40 = bitcast i32* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %41 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %8 to i32*
  %42 = load i32, i32* %41, align 4
  ret i32 %42
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17hb8940c633bb47f85E(%"alloc::alloc::Global"* %src) unnamed_addr #0 {
start:
  %0 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %0 to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp to %"alloc::alloc::Global"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"alloc::alloc::Global"* %2 to i8*
  %4 = bitcast %"alloc::alloc::Global"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 0, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr4read17hd361acbd1d987cbcE(i64* %src) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*
  %4 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %_6 = load i64, i64* %tmp, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %_6
}

; core::ptr::drop_in_place<proc_macro2::imp::TokenStream>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr50drop_in_place$LT$proc_macro2..imp..TokenStream$GT$17h3e867c88d655ed3aE"(%"imp::TokenStream"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"imp::TokenStream"* %_1 to i64*
  %_2 = load i64, i64* %0, align 8, !range !18
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %2 = bitcast %"imp::TokenStream"* %_1 to %"imp::TokenStream::Compiler"*
  %3 = getelementptr inbounds %"imp::TokenStream::Compiler", %"imp::TokenStream::Compiler"* %2, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::imp::DeferredTokenStream>
  call void @"_ZN4core3ptr58drop_in_place$LT$proc_macro2..imp..DeferredTokenStream$GT$17h8f57e1d1862dffcfE"(%"imp::DeferredTokenStream"* %3)
  br label %bb1

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::TokenStream"* %_1 to %"imp::TokenStream::Fallback"*
  %5 = getelementptr inbounds %"imp::TokenStream::Fallback", %"imp::TokenStream::Fallback"* %4, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h8ea3f1fe2253e242E"(%"fallback::TokenStream"* %5)
  br label %bb1

bb1:                                              ; preds = %bb2, %bb3
  ret void
}

; core::ptr::drop_in_place<proc_macro2::fallback::Literal>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17hbda93f62f7510cdeE"(%"fallback::Literal"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"fallback::Literal"* %_1 to %"alloc::string::String"*
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<&proc_macro2::fallback::Span>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$$RF$proc_macro2..fallback..Span$GT$17h6775c8026575606bE"(%"fallback::Span"** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<[proc_macro::TokenTree]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr52drop_in_place$LT$$u5b$proc_macro..TokenTree$u5d$$GT$17h40061cb744fe2901E"([0 x %"proc_macro::TokenTree"]* %_1.0, i64 %_1.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca %"proc_macro::TokenTree"*, align 8
  %_4 = alloca i64, align 8
  br i1 false, label %bb7, label %bb12

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8
  br label %bb6

bb12:                                             ; preds = %start
  %1 = bitcast [0 x %"proc_macro::TokenTree"]* %_1.0 to %"proc_macro::TokenTree"*
  store %"proc_macro::TokenTree"* %1, %"proc_macro::TokenTree"** %_9, align 8
  %2 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %_9, align 8
  %_10 = getelementptr inbounds %"proc_macro::TokenTree", %"proc_macro::TokenTree"* %2, i64 %_1.1
  br label %bb11

bb11:                                             ; preds = %bb10, %bb12
  %3 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %_9, align 8
  %_14 = icmp eq %"proc_macro::TokenTree"* %3, %_10
  br i1 %_14, label %bb1, label %bb10

bb10:                                             ; preds = %bb11
  %_13 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %_9, align 8
  %4 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %_9, align 8
  %5 = getelementptr inbounds %"proc_macro::TokenTree", %"proc_macro::TokenTree"* %4, i64 1
  store %"proc_macro::TokenTree"* %5, %"proc_macro::TokenTree"** %_9, align 8
; invoke core::ptr::drop_in_place<proc_macro::TokenTree>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$proc_macro..TokenTree$GT$17h590df432ff1e94c3E"(%"proc_macro::TokenTree"* %_13)
          to label %bb11 unwind label %cleanup

bb1:                                              ; preds = %bb6, %bb11
  ret void

bb9:                                              ; preds = %bb8, %cleanup
  %6 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %_9, align 8
  %_12 = icmp eq %"proc_macro::TokenTree"* %6, %_10
  br i1 %_12, label %bb2, label %bb8

cleanup:                                          ; preds = %bb10
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb9

bb8:                                              ; preds = %bb9
  %_11 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %_9, align 8
  %12 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %_9, align 8
  %13 = getelementptr inbounds %"proc_macro::TokenTree", %"proc_macro::TokenTree"* %12, i64 1
  store %"proc_macro::TokenTree"* %13, %"proc_macro::TokenTree"** %_9, align 8
; call core::ptr::drop_in_place<proc_macro::TokenTree>
  call void @"_ZN4core3ptr42drop_in_place$LT$proc_macro..TokenTree$GT$17h590df432ff1e94c3E"(%"proc_macro::TokenTree"* %_11) #18
  br label %bb9

bb2:                                              ; preds = %bb4, %bb9
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb6:                                              ; preds = %bb5, %bb7
  %20 = load i64, i64* %_4, align 8
  %_8 = icmp eq i64 %20, %_1.1
  br i1 %_8, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %21 = load i64, i64* %_4, align 8
  %_7 = getelementptr inbounds [0 x %"proc_macro::TokenTree"], [0 x %"proc_macro::TokenTree"]* %_1.0, i64 0, i64 %21
  %22 = load i64, i64* %_4, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %_4, align 8
; invoke core::ptr::drop_in_place<proc_macro::TokenTree>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$proc_macro..TokenTree$GT$17h590df432ff1e94c3E"(%"proc_macro::TokenTree"* %_7)
          to label %bb6 unwind label %cleanup1

bb4:                                              ; preds = %bb3, %cleanup1
  %24 = load i64, i64* %_4, align 8
  %_6 = icmp eq i64 %24, %_1.1
  br i1 %_6, label %bb2, label %bb3

cleanup1:                                         ; preds = %bb5
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %30 = load i64, i64* %_4, align 8
  %_5 = getelementptr inbounds [0 x %"proc_macro::TokenTree"], [0 x %"proc_macro::TokenTree"]* %_1.0, i64 0, i64 %30
  %31 = load i64, i64* %_4, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %_4, align 8
; call core::ptr::drop_in_place<proc_macro::TokenTree>
  call void @"_ZN4core3ptr42drop_in_place$LT$proc_macro..TokenTree$GT$17h590df432ff1e94c3E"(%"proc_macro::TokenTree"* %_5) #18
  br label %bb4
}

; core::ptr::drop_in_place<proc_macro2::fallback::LexError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$proc_macro2..fallback..LexError$GT$17hf86f001f3e360b8fE"(%"fallback::LexError"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<[proc_macro2::TokenTree]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr53drop_in_place$LT$$u5b$proc_macro2..TokenTree$u5d$$GT$17ha228b2f3e6324fd0E"([0 x %TokenTree]* %_1.0, i64 %_1.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca %TokenTree*, align 8
  %_4 = alloca i64, align 8
  br i1 false, label %bb7, label %bb12

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8
  br label %bb6

bb12:                                             ; preds = %start
  %1 = bitcast [0 x %TokenTree]* %_1.0 to %TokenTree*
  store %TokenTree* %1, %TokenTree** %_9, align 8
  %2 = load %TokenTree*, %TokenTree** %_9, align 8
  %_10 = getelementptr inbounds %TokenTree, %TokenTree* %2, i64 %_1.1
  br label %bb11

bb11:                                             ; preds = %bb10, %bb12
  %3 = load %TokenTree*, %TokenTree** %_9, align 8
  %_14 = icmp eq %TokenTree* %3, %_10
  br i1 %_14, label %bb1, label %bb10

bb10:                                             ; preds = %bb11
  %_13 = load %TokenTree*, %TokenTree** %_9, align 8
  %4 = load %TokenTree*, %TokenTree** %_9, align 8
  %5 = getelementptr inbounds %TokenTree, %TokenTree* %4, i64 1
  store %TokenTree* %5, %TokenTree** %_9, align 8
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %_13)
          to label %bb11 unwind label %cleanup

bb1:                                              ; preds = %bb6, %bb11
  ret void

bb9:                                              ; preds = %bb8, %cleanup
  %6 = load %TokenTree*, %TokenTree** %_9, align 8
  %_12 = icmp eq %TokenTree* %6, %_10
  br i1 %_12, label %bb2, label %bb8

cleanup:                                          ; preds = %bb10
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb9

bb8:                                              ; preds = %bb9
  %_11 = load %TokenTree*, %TokenTree** %_9, align 8
  %12 = load %TokenTree*, %TokenTree** %_9, align 8
  %13 = getelementptr inbounds %TokenTree, %TokenTree* %12, i64 1
  store %TokenTree* %13, %TokenTree** %_9, align 8
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %_11) #18
  br label %bb9

bb2:                                              ; preds = %bb4, %bb9
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb6:                                              ; preds = %bb5, %bb7
  %20 = load i64, i64* %_4, align 8
  %_8 = icmp eq i64 %20, %_1.1
  br i1 %_8, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %21 = load i64, i64* %_4, align 8
  %_7 = getelementptr inbounds [0 x %TokenTree], [0 x %TokenTree]* %_1.0, i64 0, i64 %21
  %22 = load i64, i64* %_4, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %_4, align 8
; invoke core::ptr::drop_in_place<proc_macro2::TokenTree>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %_7)
          to label %bb6 unwind label %cleanup1

bb4:                                              ; preds = %bb3, %cleanup1
  %24 = load i64, i64* %_4, align 8
  %_6 = icmp eq i64 %24, %_1.1
  br i1 %_6, label %bb2, label %bb3

cleanup1:                                         ; preds = %bb5
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %30 = load i64, i64* %_4, align 8
  %_5 = getelementptr inbounds [0 x %TokenTree], [0 x %TokenTree]* %_1.0, i64 0, i64 %30
  %31 = load i64, i64* %_4, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %_4, align 8
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %_5) #18
  br label %bb4
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h92b3c7fd964fa647E"({ i8*, i64 }* %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc16f0330b6241265E"({ i8*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<&mut alloc::string::String>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr54drop_in_place$LT$$RF$mut$u20$alloc..string..String$GT$17h1c125322e7b3e87fE"(%"alloc::string::String"** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro::bridge::client::Group>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr54drop_in_place$LT$proc_macro..bridge..client..Group$GT$17hc979332daffa03c9E"(%"proc_macro::bridge::client::Group"* %_1) unnamed_addr #1 {
start:
; call <proc_macro::bridge::client::Group as core::ops::drop::Drop>::drop
  call void @"_ZN75_$LT$proc_macro..bridge..client..Group$u20$as$u20$core..ops..drop..Drop$GT$4drop17h36494f41192a028bE"(%"proc_macro::bridge::client::Group"* align 4 dereferenceable(4) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<proc_macro::token_stream::IntoIter>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..token_stream..IntoIter$GT$17h5922e4ebf79848ccE"(%"proc_macro::token_stream::IntoIter"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"proc_macro::token_stream::IntoIter"* %_1 to %"proc_macro::bridge::client::TokenStreamIter"*
; call core::ptr::drop_in_place<proc_macro::bridge::client::TokenStreamIter>
  call void @"_ZN4core3ptr64drop_in_place$LT$proc_macro..bridge..client..TokenStreamIter$GT$17h3f727f6ff6df0d9eE"(%"proc_macro::bridge::client::TokenStreamIter"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h8ea3f1fe2253e242E"(%"fallback::TokenStream"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <proc_macro2::fallback::TokenStream as core::ops::drop::Drop>::drop
  invoke void @"_ZN76_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf225ef0badb83821E"(%"fallback::TokenStream"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"fallback::TokenStream"* %_1 to %"alloc::vec::Vec<TokenTree>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"fallback::TokenStream"* %_1 to %"alloc::vec::Vec<TokenTree>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %2) #18
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<proc_macro::bridge::client::Literal>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr56drop_in_place$LT$proc_macro..bridge..client..Literal$GT$17h853fdbc90f7904c9E"(%"proc_macro::bridge::client::Literal"* %_1) unnamed_addr #1 {
start:
; call <proc_macro::bridge::client::Literal as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$proc_macro..bridge..client..Literal$u20$as$u20$core..ops..drop..Drop$GT$4drop17hea974dcff523ffe2E"(%"proc_macro::bridge::client::Literal"* align 4 dereferenceable(4) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<&core::option::Option<usize>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr58drop_in_place$LT$$RF$core..option..Option$LT$usize$GT$$GT$17hcd2c9dc1c925a0bdE"({ i64, i64 }** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<proc_macro2::imp::DeferredTokenStream>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr58drop_in_place$LT$proc_macro2..imp..DeferredTokenStream$GT$17h8f57e1d1862dffcfE"(%"imp::DeferredTokenStream"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = getelementptr inbounds %"imp::DeferredTokenStream", %"imp::DeferredTokenStream"* %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<proc_macro::TokenStream>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %2 = bitcast %"imp::DeferredTokenStream"* %_1 to %"alloc::vec::Vec<proc_macro::TokenTree>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$proc_macro..TokenTree$GT$$GT$17h11ec50d681298b2eE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* %2)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %3 = bitcast %"imp::DeferredTokenStream"* %_1 to %"alloc::vec::Vec<proc_macro::TokenTree>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$proc_macro..TokenTree$GT$$GT$17h11ec50d681298b2eE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* %3) #18
  br label %bb1

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h22e125194c2cfce3E({ i32*, i32* }* %dst, i32* nonnull %0, i32* %1) unnamed_addr #0 {
start:
  %src = alloca { i32*, i32* }, align 8
  %2 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %src, i32 0, i32 0
  store i32* %0, i32** %2, align 8
  %3 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %src, i32 0, i32 1
  store i32* %1, i32** %3, align 8
  %4 = bitcast { i32*, i32* }* %dst to i8*
  %5 = bitcast { i32*, i32* }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h23d0436df06ff517E({ i8*, i64 }* %dst, i8* align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %src = alloca { i8*, i64 }, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = bitcast { i8*, i64 }* %dst to i8*
  %5 = bitcast { i8*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h301b0ce9b0367c5aE(%TokenTree* %dst, %TokenTree* noalias nocapture dereferenceable(48) %src) unnamed_addr #0 {
start:
  %0 = bitcast %TokenTree* %dst to i8*
  %1 = bitcast %TokenTree* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 48, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h4fcf02963d60e8beE(%"proc_macro::TokenStream"* %dst, i32 %0) unnamed_addr #0 {
start:
  %1 = alloca i32, align 4
  %src = alloca %"proc_macro::TokenStream", align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %"proc_macro::TokenStream"* %src to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %4 = bitcast %"proc_macro::TokenStream"* %dst to i8*
  %5 = bitcast %"proc_macro::TokenStream"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h70a90a43d2912f05E({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %dst, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* noalias nocapture dereferenceable(32) %src) unnamed_addr #0 {
start:
  %0 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %dst to i8*
  %1 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 32, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h8bbf6a9e0305b5b4E(%"alloc::vec::Vec<TokenTree>"* %dst, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %src) unnamed_addr #0 {
start:
  %0 = bitcast %"alloc::vec::Vec<TokenTree>"* %dst to i8*
  %1 = bitcast %"alloc::vec::Vec<TokenTree>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h9fae3eedb7c74fcfE(i64* %dst, i64 %0) unnamed_addr #0 {
start:
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  %1 = bitcast i64* %dst to i8*
  %2 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17ha6b28d2e744b969bE({ i64, i32 }* %dst, i64 %0, i32 %1) unnamed_addr #0 {
start:
  %src = alloca { i64, i32 }, align 8
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %src, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %src, i32 0, i32 1
  store i32 %1, i32* %3, align 8
  %4 = bitcast { i64, i32 }* %dst to i8*
  %5 = bitcast { i64, i32 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17haf941faac4f81eb2E(i32* %dst, i32 %0) unnamed_addr #0 {
start:
  %src = alloca i32, align 4
  store i32 %0, i32* %src, align 4
  %1 = bitcast i32* %dst to i8*
  %2 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 4, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hc63b3fe249e96837E(i8* %dst, i1 zeroext %0) unnamed_addr #0 {
start:
  %src = alloca i8, align 1
  %1 = zext i1 %0 to i8
  store i8 %1, i8* %src, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 1, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hda6df30abb223207E(%"core::option::Option<proc_macro::TokenStream>"* %dst, i32 %0) unnamed_addr #0 {
start:
  %1 = alloca i32, align 4
  %src = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %src to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %4 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %dst to i8*
  %5 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17heb5e817f5e7260a4E(i8* %dst, i8 %0) unnamed_addr #0 {
start:
  %src = alloca i8, align 1
  store i8 %0, i8* %src, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 1, i1 false)
  ret void
}

; core::ptr::drop_in_place<proc_macro::bridge::client::TokenStream>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr60drop_in_place$LT$proc_macro..bridge..client..TokenStream$GT$17h9253204819f5425bE"(%"proc_macro::bridge::client::TokenStream"* %_1) unnamed_addr #1 {
start:
; call <proc_macro::bridge::client::TokenStream as core::ops::drop::Drop>::drop
  call void @"_ZN81_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8664478b0655338fE"(%"proc_macro::bridge::client::TokenStream"* align 4 dereferenceable(4) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<proc_macro::bridge::client::TokenStreamIter>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr64drop_in_place$LT$proc_macro..bridge..client..TokenStreamIter$GT$17h3f727f6ff6df0d9eE"(%"proc_macro::bridge::client::TokenStreamIter"* %_1) unnamed_addr #1 {
start:
; call <proc_macro::bridge::client::TokenStreamIter as core::ops::drop::Drop>::drop
  call void @"_ZN85_$LT$proc_macro..bridge..client..TokenStreamIter$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha3e79c7adb56b7bcE"(%"proc_macro::bridge::client::TokenStreamIter"* align 4 dereferenceable(4) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<proc_macro::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$proc_macro..TokenTree$GT$$GT$17h11ec50d681298b2eE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb1faeb0f230f6277E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"alloc::vec::Vec<proc_macro::TokenTree>"* %_1 to { i32*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro..TokenTree$GT$$GT$17h9c83e31940f34dd2E"({ i32*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"alloc::vec::Vec<proc_macro::TokenTree>"* %_1 to { i32*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro..TokenTree$GT$$GT$17h9c83e31940f34dd2E"({ i32*, i64 }* %2) #18
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6199b52a3c41b67dE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"alloc::vec::Vec<TokenTree>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr73drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro2..TokenTree$GT$$GT$17h2a7bb5db53d57cc8E"({ i64*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"alloc::vec::Vec<TokenTree>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr73drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro2..TokenTree$GT$$GT$17h2a7bb5db53d57cc8E"({ i64*, i64 }* %2) #18
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<dyn core::any::Any+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr66drop_in_place$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$17hd69c03f953e6530cE"({}* %_1.0, [3 x i64]* align 8 dereferenceable(24) %_1.1) unnamed_addr #1 {
start:
  %0 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %1 = getelementptr inbounds void ({}*)*, void ({}*)** %0, i64 0
  %2 = load void ({}*)*, void ({}*)** %1, align 8, !invariant.load !20, !nonnull !20
  call void %2({}* %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<proc_macro::bridge::client::TokenStreamBuilder>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr67drop_in_place$LT$proc_macro..bridge..client..TokenStreamBuilder$GT$17h00fd1e515f3b3c53E"(%"proc_macro::bridge::client::TokenStreamBuilder"* %_1) unnamed_addr #1 {
start:
; call <proc_macro::bridge::client::TokenStreamBuilder as core::ops::drop::Drop>::drop
  call void @"_ZN88_$LT$proc_macro..bridge..client..TokenStreamBuilder$u20$as$u20$core..ops..drop..Drop$GT$4drop17h305394f802690d8cE"(%"proc_macro::bridge::client::TokenStreamBuilder"* align 4 dereferenceable(4) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h224a7f1a510d9a8eE"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }**
  store { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %ptr, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !20
  ret i64* %2
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h654f822fbb0d196cE"(%TokenTree* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %TokenTree**
  store %TokenTree* %ptr, %TokenTree** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !20
  ret i64* %2
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h7c3a1b45c96a6c96E"(%"proc_macro::TokenTree"* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = bitcast i32** %0 to %"proc_macro::TokenTree"**
  store %"proc_macro::TokenTree"* %ptr, %"proc_macro::TokenTree"** %1, align 8
  %2 = load i32*, i32** %0, align 8, !nonnull !20
  ret i32* %2
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8f7c30dd2c2e78d7E"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !20
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h12c76a2069f090feE"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h21bbe95dad311f30E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1)
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8f7c30dd2c2e78d7E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h2f55a264a7e14f1dE"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %TokenTree* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h650b187efc2d49f2E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %TokenTree* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8f7c30dd2c2e78d7E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h40a368fb598102feE"(i32* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"proc_macro::TokenTree"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6baeed9149d30095E"(i32* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"proc_macro::TokenTree"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8f7c30dd2c2e78d7E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h50a391b0586a30ecE"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call [3 x %TokenTree]* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hd34a5d26ef2fd8d0E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [3 x %TokenTree]* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8f7c30dd2c2e78d7E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h6b9913a9e45a4534E"(i64* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { [0 x %TokenTree]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbd9b7bdf8f79d5f5E"(i64* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x %TokenTree]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x %TokenTree]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x %TokenTree]* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8f7c30dd2c2e78d7E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc761b8392f6646e4E"(i8* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf9b8b9f669db1ff5E"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8f7c30dd2c2e78d7E"(i8* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc94a574ec9190c12E"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf57b905ca9027d9cE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8f7c30dd2c2e78d7E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h21bbe95dad311f30E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %TokenTree* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h650b187efc2d49f2E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %TokenTree*
  ret %TokenTree* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"proc_macro::TokenTree"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6baeed9149d30095E"(i32* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i32* %self to %"proc_macro::TokenTree"*
  ret %"proc_macro::TokenTree"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %TokenTree]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbd9b7bdf8f79d5f5E"(i64* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i64* %self.0 to [0 x %TokenTree]*
  %0 = insertvalue { [0 x %TokenTree]*, i64 } undef, [0 x %TokenTree]* %_2.0, 0
  %1 = insertvalue { [0 x %TokenTree]*, i64 } %0, i64 %self.1, 1
  ret { [0 x %TokenTree]*, i64 } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define [3 x %TokenTree]* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hd34a5d26ef2fd8d0E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to [3 x %TokenTree]*
  ret [3 x %TokenTree]* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf57b905ca9027d9cE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*
  ret { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf9b8b9f669db1ff5E"(i8* nonnull %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %TokenTree]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h1f5ab876a00b187fE"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 0
  %_3.0 = load i64*, i64** %0, align 8, !nonnull !20
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_3.1 = load i64, i64* %1, align 8
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { [0 x %TokenTree]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbd9b7bdf8f79d5f5E"(i64* nonnull %_3.0, i64 %_3.1)
  %_2.0 = extractvalue { [0 x %TokenTree]*, i64 } %2, 0
  %_2.1 = extractvalue { [0 x %TokenTree]*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { [0 x %TokenTree]*, i64 } undef, [0 x %TokenTree]* %_2.0, 0
  %4 = insertvalue { [0 x %TokenTree]*, i64 } %3, i64 %_2.1, 1
  ret { [0 x %TokenTree]*, i64 } %4
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h82a0da0298c3c5ddE"({ i8*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !20
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !20
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h21bbe95dad311f30E"(i8* nonnull %_3.0, i64* align 8 dereferenceable(24) %_3.1)
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(144) [3 x %TokenTree]* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hba00b83eff61d0c6E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !20
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call [3 x %TokenTree]* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hd34a5d26ef2fd8d0E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret [3 x %TokenTree]* %_2
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h27540e8f3e80a693E"() unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_1 = inttoptr i64 8 to %TokenTree*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h654f822fbb0d196cE"(%TokenTree* %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h5b21f69aac1e1a2cE"() unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_1 = inttoptr i64 1 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8f7c30dd2c2e78d7E"(i8* %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h9eda7148b3d93a99E"() unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_1 = inttoptr i64 4 to %"proc_macro::TokenTree"*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h7c3a1b45c96a6c96E"(%"proc_macro::TokenTree"* %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32* %0
}

; core::ptr::drop_in_place<core::option::Item<proc_macro::TokenStream>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr70drop_in_place$LT$core..option..Item$LT$proc_macro..TokenStream$GT$$GT$17h09ebea8164cfe0dfE"(%"core::option::Item<proc_macro::TokenStream>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::option::Item<proc_macro::TokenStream>"* %_1 to %"core::option::Option<proc_macro::TokenStream>"*
; call core::ptr::drop_in_place<core::option::Option<proc_macro::TokenStream>>
  call void @"_ZN4core3ptr72drop_in_place$LT$core..option..Option$LT$proc_macro..TokenStream$GT$$GT$17h28cfc80b7f647751E"(%"core::option::Option<proc_macro::TokenStream>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::option::Option<proc_macro::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$proc_macro..TokenTree$GT$$GT$17hd9efd9c900ae0eb9E"(%"core::option::Option<proc_macro::TokenTree>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_1 to i32*
  %1 = load i32, i32* %0, align 4, !range !31
  %2 = sub i32 %1, 4
  %3 = icmp eq i32 %2, 0
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_1 to %"core::option::Option<proc_macro::TokenTree>::Some"*
  %6 = bitcast %"core::option::Option<proc_macro::TokenTree>::Some"* %5 to %"proc_macro::TokenTree"*
; call core::ptr::drop_in_place<proc_macro::TokenTree>
  call void @"_ZN4core3ptr42drop_in_place$LT$proc_macro..TokenTree$GT$17h590df432ff1e94c3E"(%"proc_macro::TokenTree"* %6)
  br label %bb1
}

; core::ptr::drop_in_place<core::option::Option<proc_macro2::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr71drop_in_place$LT$core..option..Option$LT$proc_macro2..TokenTree$GT$$GT$17h8c6a5948268c77d1E"(%"core::option::Option<TokenTree>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::option::Option<TokenTree>"* %_1 to i32*
  %1 = load i32, i32* %0, align 8, !range !31
  %2 = sub i32 %1, 4
  %3 = icmp eq i32 %2, 0
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<TokenTree>"* %_1 to %"core::option::Option<TokenTree>::Some"*
  %6 = bitcast %"core::option::Option<TokenTree>::Some"* %5 to %TokenTree*
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %6)
  br label %bb1
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro..TokenTree$GT$$GT$17h9c83e31940f34dd2E"({ i32*, i64 }* %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hee1f59a5fab953b7E"({ i32*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::option::Option<proc_macro::TokenStream>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr72drop_in_place$LT$core..option..Option$LT$proc_macro..TokenStream$GT$$GT$17h28cfc80b7f647751E"(%"core::option::Option<proc_macro::TokenStream>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %_1 to i32*
  %1 = load i32, i32* %0, align 4
  %2 = icmp eq i32 %1, 0
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %_1 to %"core::option::Option<proc_macro::TokenStream>::Some"*
  %5 = bitcast %"core::option::Option<proc_macro::TokenStream>::Some"* %4 to %"proc_macro::TokenStream"*
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %5)
  br label %bb1
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<proc_macro2::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr73drop_in_place$LT$alloc..raw_vec..RawVec$LT$proc_macro2..TokenTree$GT$$GT$17h2a7bb5db53d57cc8E"({ i64*, i64 }* %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h35e94c8e4c947545E"({ i64*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::vec::drain::Drain<proc_macro::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr74drop_in_place$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$GT$17h20282709377aa8a6E"(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %_1) unnamed_addr #1 {
start:
; call <alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h48618e1f6db68739E"(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* align 8 dereferenceable(40) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::option::IntoIter<proc_macro::TokenStream>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr74drop_in_place$LT$core..option..IntoIter$LT$proc_macro..TokenStream$GT$$GT$17h8b90ad0e598081acE"(%"core::option::IntoIter<proc_macro::TokenStream>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::option::IntoIter<proc_macro::TokenStream>"* %_1 to %"core::option::Item<proc_macro::TokenStream>"*
; call core::ptr::drop_in_place<core::option::Item<proc_macro::TokenStream>>
  call void @"_ZN4core3ptr70drop_in_place$LT$core..option..Item$LT$proc_macro..TokenStream$GT$$GT$17h09ebea8164cfe0dfE"(%"core::option::Item<proc_macro::TokenStream>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<(proc_macro2::parse::Cursor,proc_macro2::Ident)>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr76drop_in_place$LT$$LP$proc_macro2..parse..Cursor$C$proc_macro2..Ident$RP$$GT$17h85831b782bb2dac3E"({ { i8*, i64 }, %Ident }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { { i8*, i64 }, %Ident }, { { i8*, i64 }, %Ident }* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::Ident>
  call void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Ident$GT$17ha5a69e48e88af264E"(%Ident* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::panicking::begin_panic::PanicPayload<&str>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr77drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$$RF$str$GT$$GT$17h1455d367f15106c0E"({ i8*, i64 }* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<[proc_macro2::TokenTree]>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$$u5b$proc_macro2..TokenTree$u5d$$GT$$GT$17h0efd95a8d617292aE"({ [0 x %TokenTree]*, i64 }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %_1, i32 0, i32 0
  %2 = load [0 x %TokenTree]*, [0 x %TokenTree]** %1, align 8, !nonnull !20
  %3 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %_1, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
; invoke core::ptr::drop_in_place<[proc_macro2::TokenTree]>
  invoke void @"_ZN4core3ptr53drop_in_place$LT$$u5b$proc_macro2..TokenTree$u5d$$GT$17ha228b2f3e6324fd0E"([0 x %TokenTree]* %2, i64 %4)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %5 = bitcast { [0 x %TokenTree]*, i64 }* %_1 to { i64*, i64 }*
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !20
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %5, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17habf25ea6ee996cccE(i64* nonnull %7, i64 %9)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %10 = bitcast { [0 x %TokenTree]*, i64 }* %_1 to { i64*, i64 }*
  %11 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8, !nonnull !20
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %10, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17habf25ea6ee996cccE(i64* nonnull %12, i64 %14) #18
  br label %bb2

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %20 = bitcast { i8*, i32 }* %0 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  resume { i8*, i32 } %25

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17ha6c468ad415eeda1E"(i8* %self, i8* %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0cb6a7c5c268c72fE"(%"proc_macro::TokenTree"* %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"proc_macro::TokenTree"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17ha6c468ad415eeda1E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h8d6f546585bcf643E"({ [0 x i8]*, i64 }* %self) unnamed_addr #0 {
start:
  %_2 = bitcast { [0 x i8]*, i64 }* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17ha6c468ad415eeda1E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17haaf0b225da85ab5dE"(i8* %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17ha6c468ad415eeda1E"(i8* %self, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17haf6d44baa4c89275E"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %self) unnamed_addr #0 {
start:
  %_2 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17ha6c468ad415eeda1E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hdac48138c0f4bcfaE"(%TokenTree* %self) unnamed_addr #0 {
start:
  %_2 = bitcast %TokenTree* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17ha6c468ad415eeda1E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<proc_macro2::TokenTree>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr82drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$proc_macro2..TokenTree$GT$$GT$17h68c19ac5709d6d72E"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* %_1) unnamed_addr #1 {
start:
; call <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN86_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9e7c43139b4bc632E"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::iter::sources::once::Once<proc_macro::TokenStream>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr83drop_in_place$LT$core..iter..sources..once..Once$LT$proc_macro..TokenStream$GT$$GT$17h570fc2ba36075531E"(%"core::iter::sources::once::Once<proc_macro::TokenStream>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %_1 to %"core::option::IntoIter<proc_macro::TokenStream>"*
; call core::ptr::drop_in_place<core::option::IntoIter<proc_macro::TokenStream>>
  call void @"_ZN4core3ptr74drop_in_place$LT$core..option..IntoIter$LT$proc_macro..TokenStream$GT$$GT$17h8b90ad0e598081acE"(%"core::option::IntoIter<proc_macro::TokenStream>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h00e6bf5487957e41E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hb212785c48f83b35E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[(Delimiter, alloc::vec::Vec<TokenTree>)]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[(Delimiter, alloc::vec::Vec<TokenTree>)]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[(Delimiter, alloc::vec::Vec<TokenTree>)]>"* %_3 to { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 }*
  %10 = getelementptr inbounds { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 }, { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]** %10, align 8
  %12 = getelementptr inbounds { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 }, { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } undef, [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* %11, 0
  %15 = insertvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %14, i64 %13, 1
  ret { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hdbb02f573c934494E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[proc_macro::TokenTree]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[proc_macro::TokenTree]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[proc_macro::TokenTree]>"* %_3 to { [0 x %"proc_macro::TokenTree"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"proc_macro::TokenTree"]*, i64 }, { [0 x %"proc_macro::TokenTree"]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %"proc_macro::TokenTree"]*, [0 x %"proc_macro::TokenTree"]** %10, align 8
  %12 = getelementptr inbounds { [0 x %"proc_macro::TokenTree"]*, i64 }, { [0 x %"proc_macro::TokenTree"]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } undef, [0 x %"proc_macro::TokenTree"]* %11, 0
  %15 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %14, i64 %13, 1
  ret { [0 x %"proc_macro::TokenTree"]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %TokenTree]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17he9bd5561f29713a0E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[TokenTree]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[TokenTree]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[TokenTree]>"* %_3 to { [0 x %TokenTree]*, i64 }*
  %10 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %TokenTree]*, [0 x %TokenTree]** %10, align 8
  %12 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %TokenTree]*, i64 } undef, [0 x %TokenTree]* %11, 0
  %15 = insertvalue { [0 x %TokenTree]*, i64 } %14, i64 %13, 1
  ret { [0 x %TokenTree]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h13cd8d59477f7b83E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<TokenTree>]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<TokenTree>]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<TokenTree>]>"* %_3 to { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]** %10, align 8
  %12 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } undef, [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]* %11, 0
  %15 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %14, i64 %13, 1
  ret { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h3266b1b8b306b34bE({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>]>"* %_3 to { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]** %10, align 8
  %12 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } undef, [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]* %11, 0
  %15 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %14, i64 %13, 1
  ret { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17ha149669fccb9d542E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[(Delimiter, alloc::vec::Vec<TokenTree>)]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[(Delimiter, alloc::vec::Vec<TokenTree>)]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[(Delimiter, alloc::vec::Vec<TokenTree>)]>"* %_3 to { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 }*
  %10 = getelementptr inbounds { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 }, { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]** %10, align 8
  %12 = getelementptr inbounds { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 }, { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } undef, [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* %11, 0
  %15 = insertvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %14, i64 %13, 1
  ret { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17ha7ca5a2b64fb37e1E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[proc_macro::TokenTree]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[proc_macro::TokenTree]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[proc_macro::TokenTree]>"* %_3 to { [0 x %"proc_macro::TokenTree"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"proc_macro::TokenTree"]*, i64 }, { [0 x %"proc_macro::TokenTree"]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %"proc_macro::TokenTree"]*, [0 x %"proc_macro::TokenTree"]** %10, align 8
  %12 = getelementptr inbounds { [0 x %"proc_macro::TokenTree"]*, i64 }, { [0 x %"proc_macro::TokenTree"]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } undef, [0 x %"proc_macro::TokenTree"]* %11, 0
  %15 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %14, i64 %13, 1
  ret { [0 x %"proc_macro::TokenTree"]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %TokenTree]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hf0c1a69dd8c9b405E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[TokenTree]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[TokenTree]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[TokenTree]>"* %_3 to { [0 x %TokenTree]*, i64 }*
  %10 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %TokenTree]*, [0 x %TokenTree]** %10, align 8
  %12 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %TokenTree]*, i64 } undef, [0 x %TokenTree]* %11, 0
  %15 = insertvalue { [0 x %TokenTree]*, i64 } %14, i64 %13, 1
  ret { [0 x %TokenTree]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hfc5926d74f7e01a2E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr8metadata8metadata17hc46c9c2e915b8af5E([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %ptr.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h17484b1272d935c5E"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }**
  store { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %ptr, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !20
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1c8bb6e5f9b44612E"(%TokenTree* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %TokenTree**
  store %TokenTree* %ptr, %TokenTree** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !20
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h533c702b08329719E"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !20
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h6098372279fa56beE"([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %ptr.1, i64* %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !20
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc7780c779fcada6aE"({ [0 x i8]*, i64 }* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !20
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5b8055f2025b575E"(%"proc_macro::TokenTree"* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = bitcast i32** %0 to %"proc_macro::TokenTree"**
  store %"proc_macro::TokenTree"* %ptr, %"proc_macro::TokenTree"** %1, align 8
  %2 = load i32*, i32** %0, align 8, !nonnull !20
  ret i32* %2
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h89a41c4bca7ecf66E"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17haaf0b225da85ab5dE"(i8* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast i8** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_5 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h533c702b08329719E"(i8* %ptr)
  br label %bb3

bb3:                                              ; preds = %bb2
  store i8* %_5, i8** %0, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8*, i8** %0, align 8
  ret i8* %2
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h175e832c4181a8aeE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h461558c5af577efbE"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h533c702b08329719E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h24c585313047c6e2E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h461558c5af577efbE"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h17484b1272d935c5E"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7eb738d1da598d10E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h461558c5af577efbE"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to %TokenTree*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1c8bb6e5f9b44612E"(%TokenTree* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17ha5f75b8840ac00c1E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h461558c5af577efbE"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to %"proc_macro::TokenTree"*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5b8055f2025b575E"(%"proc_macro::TokenTree"* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32* %1
}

; core::ptr::non_null::NonNull<T>::as_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(24) %"alloc::vec::Vec<proc_macro::TokenTree>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h3a37e3a1cc999094E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_6 = load i64*, i64** %self, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::vec::Vec<proc_macro::TokenTree>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h526aa5b65e5b4231E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::vec::Vec<proc_macro::TokenTree>"* %_5
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h461558c5af577efbE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to [0 x i8]*
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %self.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<proc_macro::TokenTree>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h526aa5b65e5b4231E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::vec::Vec<proc_macro::TokenTree>"*
  ret %"alloc::vec::Vec<proc_macro::TokenTree>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"proc_macro::TokenTree"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6b211d9fbe8eae44E"(i32* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i32* %self to %"proc_macro::TokenTree"*
  ret %"proc_macro::TokenTree"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9e78fc77ba98f504E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to { [0 x i8]*, i64 }*
  ret { [0 x i8]*, i64 }* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc5cf9c0e16d41064E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*
  ret { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %TokenTree* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he4fe09edffbb8032E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %TokenTree*
  ret %TokenTree* %_2
}

; core::ptr::non_null::NonNull<[T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hf4d70c932fb36507E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_2 = call nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17haf6587fe77f1b608E"(i8* nonnull %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17haf6587fe77f1b608E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h461558c5af577efbE"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast [0 x i8]* %_3.0 to i8*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %2 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h533c702b08329719E"(i8* %1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %2
}

; core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8fa12df1ed57b689E"(i8* nonnull %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h7b4f6aee009f378dE(i8* %_4, i64 %len)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h6098372279fa56beE"([0 x i8]* %_3.0, i64 %_3.1)
  %2 = extractvalue { i8*, i64 } %1, 0
  %3 = extractvalue { i8*, i64 } %1, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1
  ret { i8*, i64 } %5
}

; core::ptr::non_null::NonNull<[T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h79e311fe84b68755E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h461558c5af577efbE"(i8* nonnull %self.0, i64 %self.1)
  %_2.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::metadata
  %1 = call i64 @_ZN4core3ptr8metadata8metadata17hc46c9c2e915b8af5E([0 x i8]* %_2.0, i64 %_2.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %1
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h857be11e154f62f4E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 0
  %2 = load {}*, {}** %1, align 8, !nonnull !20
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 1
  %4 = load [3 x i64]*, [3 x i64]** %3, align 8, !nonnull !20
  %5 = bitcast [3 x i64]* %4 to void ({}*)**
  %6 = getelementptr inbounds void ({}*)*, void ({}*)** %5, i64 0
  %7 = load void ({}*)*, void ({}*)** %6, align 8, !invariant.load !20, !nonnull !20
  invoke void %7({}* %2)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %8 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !nonnull !20
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8, !nonnull !20
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hb796cbe5f5b84f41E(i8* nonnull %10, i64* align 8 dereferenceable(24) %12)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %13 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8, !nonnull !20
  %16 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8, !nonnull !20
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hb796cbe5f5b84f41E(i8* nonnull %15, i64* align 8 dereferenceable(24) %17) #18
  br label %bb2

cleanup:                                          ; preds = %start
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr99drop_in_place$LT$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$17h4354002c24974f83E"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_1, i32 0, i32 2
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::const_ptr::<impl *const T>::offset_from
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$11offset_from17h0e4c7e106f142d01E"(%TokenTree* %self, %TokenTree* %origin) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_5 = alloca i8, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = icmp ult i64 0, 48
  br i1 %_6, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_5, align 1
  br label %bb4

bb3:                                              ; preds = %bb1
  %_8 = icmp ule i64 48, 9223372036854775807
  %1 = zext i1 %_8 to i8
  store i8 %1, i8* %_5, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %2 = load i8, i8* %_5, align 1, !range !2
  %3 = trunc i8 %2 to i1
  %_4 = xor i1 %3, true
  br i1 %_4, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %4 = ptrtoint %TokenTree* %self to i64
  %5 = ptrtoint %TokenTree* %origin to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 48
  store i64 %7, i64* %0, align 8
  %8 = load i64, i64* %0, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [73 x i8] }>* @alloc1353 to [0 x i8]*), i64 73, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1352 to %"core::panic::location::Location"*)) #19
  unreachable

bb7:                                              ; preds = %bb6
  ret i64 %8
}

; core::ptr::const_ptr::<impl *const T>::offset_from
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$11offset_from17h602a023dbf9f8a22E"(%"proc_macro::TokenTree"* %self, %"proc_macro::TokenTree"* %origin) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_5 = alloca i8, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = icmp ult i64 0, 8
  br i1 %_6, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_5, align 1
  br label %bb4

bb3:                                              ; preds = %bb1
  %_8 = icmp ule i64 8, 9223372036854775807
  %1 = zext i1 %_8 to i8
  store i8 %1, i8* %_5, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %2 = load i8, i8* %_5, align 1, !range !2
  %3 = trunc i8 %2 to i1
  %_4 = xor i1 %3, true
  br i1 %_4, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %4 = ptrtoint %"proc_macro::TokenTree"* %self to i64
  %5 = ptrtoint %"proc_macro::TokenTree"* %origin to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 8
  store i64 %7, i64* %0, align 8
  %8 = load i64, i64* %0, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [73 x i8] }>* @alloc1353 to [0 x i8]*), i64 73, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1352 to %"core::panic::location::Location"*)) #19
  unreachable

bb7:                                              ; preds = %bb6
  ret i64 %8
}

; core::ptr::const_ptr::<impl *const T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h47eaeaf3bcd56939E"(i8* %self, i8* %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17h76d52783eef2b06eE"(i8* %self, i8* %dest, i64 %count) unnamed_addr #0 {
start:
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h5e4499aff0018dfdE(i8* %self, i8* %dest, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h306a58186c70055cE"(%"proc_macro::TokenTree"* %self) unnamed_addr #0 {
start:
  %0 = bitcast %"proc_macro::TokenTree"* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h78616fc6ff457bfbE"(%TokenTree* %self) unnamed_addr #0 {
start:
  %0 = bitcast %TokenTree* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h8a4be63148746bf8E"(i8* %self) unnamed_addr #0 {
start:
  %0 = bitcast i8* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h947349b23849c599E"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %self) unnamed_addr #0 {
start:
  %0 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h258514ed74eefc35E"(%TokenTree* %self) unnamed_addr #0 {
start:
  %_2 = bitcast %TokenTree* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h47eaeaf3bcd56939E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h53d54fb9d61d12c9E"(%"proc_macro::TokenTree"* %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"proc_macro::TokenTree"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h47eaeaf3bcd56939E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h71639994d106fa68E"({ [0 x i8]*, i64 }* %self) unnamed_addr #0 {
start:
  %_2 = bitcast { [0 x i8]*, i64 }* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h47eaeaf3bcd56939E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha17824b829e247faE"(i8* %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h47eaeaf3bcd56939E"(i8* %self, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h76e771fc3e718e35E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::metadata::metadata
  %0 = call i64 @_ZN4core3ptr8metadata8metadata17hc46c9c2e915b8af5E([0 x i8]* %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hbd65a9caba176d19E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core3str11validations15next_code_point17h76a167488b359f65E({ i8*, i8* }* align 8 dereferenceable(16) %bytes) unnamed_addr #0 {
start:
  %ch = alloca i32, align 4
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_5 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6c4bacd36189c2a1E"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %1 = call align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf39b0ff5aff85803E"(i8* align 1 dereferenceable_or_null(1) %_5)
  store i8* %1, i8** %_4, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast i8** %_4 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_7 = select i1 %4, i64 1, i64 0
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !nonnull !20
  %x = load i8, i8* %val, align 1
  %_11 = icmp ult i8 %x, -128
  br i1 %_11, label %bb7, label %bb8

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %5 = call { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hfd63a3d4886e45c9E"()
  store { i32, i32 } %5, { i32, i32 }* %0, align 4
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb23

bb23:                                             ; preds = %bb7, %bb6
  br label %bb24

bb8:                                              ; preds = %bb3
; call core::str::validations::utf8_first_byte
  %init = call i32 @_ZN4core3str11validations15utf8_first_byte17hb2af1738f3930a4aE(i8 %x, i32 2)
  br label %bb9

bb7:                                              ; preds = %bb3
  %_13 = zext i8 %x to i32
  %6 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %6, i32 0, i32 1
  store i32 %_13, i32* %7, align 4
  %8 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %8, align 4
  br label %bb23

bb24:                                             ; preds = %bb22, %bb23
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4, !range !19
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = insertvalue { i32, i32 } undef, i32 %10, 0
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1
  ret { i32, i32 } %14

bb9:                                              ; preds = %bb8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_19 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6c4bacd36189c2a1E"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::option::Option<T>::unwrap_unchecked
  %_18 = call align 1 dereferenceable(1) i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h7e063fd9c6ad46d8E"(i8* align 1 dereferenceable_or_null(1) %_19, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1355 to %"core::panic::location::Location"*))
  br label %bb11

bb11:                                             ; preds = %bb10
  %y = load i8, i8* %_18, align 1
; call core::str::validations::utf8_acc_cont_byte
  %15 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h888496a09232ea7cE(i32 %init, i8 %y)
  store i32 %15, i32* %ch, align 4
  br label %bb12

bb12:                                             ; preds = %bb11
  %_24 = icmp uge i8 %x, -32
  br i1 %_24, label %bb13, label %bb22

bb22:                                             ; preds = %bb21, %bb12
  %_50 = load i32, i32* %ch, align 4
  %16 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %16, i32 0, i32 1
  store i32 %_50, i32* %17, align 4
  %18 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %18, align 4
  br label %bb24

bb13:                                             ; preds = %bb12
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_28 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6c4bacd36189c2a1E"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::option::Option<T>::unwrap_unchecked
  %_27 = call align 1 dereferenceable(1) i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h7e063fd9c6ad46d8E"(i8* align 1 dereferenceable_or_null(1) %_28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1357 to %"core::panic::location::Location"*))
  br label %bb15

bb15:                                             ; preds = %bb14
  %z = load i8, i8* %_27, align 1
  %_32 = and i8 %y, 63
  %_31 = zext i8 %_32 to i32
; call core::str::validations::utf8_acc_cont_byte
  %y_z = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h888496a09232ea7cE(i32 %_31, i8 %z)
  br label %bb16

bb16:                                             ; preds = %bb15
  %_35 = shl i32 %init, 12
  %19 = or i32 %_35, %y_z
  store i32 %19, i32* %ch, align 4
  %_38 = icmp uge i8 %x, -16
  br i1 %_38, label %bb17, label %bb21

bb21:                                             ; preds = %bb20, %bb16
  br label %bb22

bb17:                                             ; preds = %bb16
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_42 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6c4bacd36189c2a1E"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::option::Option<T>::unwrap_unchecked
  %_41 = call align 1 dereferenceable(1) i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h7e063fd9c6ad46d8E"(i8* align 1 dereferenceable_or_null(1) %_42, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1359 to %"core::panic::location::Location"*))
  br label %bb19

bb19:                                             ; preds = %bb18
  %w = load i8, i8* %_41, align 1
  %_45 = and i32 %init, 7
  %_44 = shl i32 %_45, 18
; call core::str::validations::utf8_acc_cont_byte
  %_47 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h888496a09232ea7cE(i32 %y_z, i8 %w)
  br label %bb20

bb20:                                             ; preds = %bb19
  %20 = or i32 %_44, %_47
  store i32 %20, i32* %ch, align 4
  br label %bb21
}

; core::str::validations::utf8_first_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3str11validations15utf8_first_byte17hb2af1738f3930a4aE(i8 %byte, i32 %width) unnamed_addr #0 {
start:
  %0 = trunc i32 %width to i8
  %1 = and i8 %0, 7
  %_5 = lshr i8 127, %1
  %_3 = and i8 %byte, %_5
  %2 = zext i8 %_3 to i32
  ret i32 %2
}

; core::str::validations::utf8_acc_cont_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h888496a09232ea7cE(i32 %ch, i8 %byte) unnamed_addr #0 {
start:
  %_3 = shl i32 %ch, 6
  %_6 = and i8 %byte, 63
  %_5 = zext i8 %_6 to i32
  %0 = or i32 %_3, %_5
  ret i32 %0
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h359f1f5daab71f3aE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call <F as core::str::pattern::Pattern>::is_prefix_of
  %0 = call zeroext i1 @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hc21ddd92e82a3ef8E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h5b1588591b62590eE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %pat.0, i64 %pat.1) unnamed_addr #1 {
start:
; call <&str as core::str::pattern::Pattern>::is_prefix_of
  %0 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hab5ca7f4fe7e41ffE"([0 x i8]* nonnull align 1 %pat.0, i64 %pat.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17he067b52065bc5e41E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #1 {
start:
; call <char as core::str::pattern::Pattern>::is_prefix_of
  %0 = call zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hd1a4941e56993d54E"(i32 %pat, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::str::<impl str>::char_indices
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hcbe81db3a34466e5E"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::str::<impl str>::chars
  %1 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h6f889b924c1c660fE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %_2.0 = extractvalue { i8*, i8* } %1, 0
  %_2.1 = extractvalue { i8*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::str::iter::CharIndices"* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %0, i32 0, i32 1
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 0
  store i8* %_2.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1
  store i8* %_2.1, i8** %5, align 8
  ret void
}

; core::str::<impl str>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h7ec85330413af61bE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %i.0, i64 %i.1) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h20048ff0cb3fe13aE"(i64 %i.0, i64 %i.1, [0 x i8]* %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::str::<impl str>::is_char_boundary
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h81242d51336a2898E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %2 = icmp eq i64 %index, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i8 1, i8* %1, align 1
  br label %bb10

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %6 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !20
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %6, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1
  %_6.0 = extractvalue { [0 x i8]*, i64 } %10, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %10, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::get
  %11 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h7d94116415f9462cE"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1, i64 %index)
  store i8* %11, i8** %_4, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %12 = bitcast i8** %_4 to {}**
  %13 = load {}*, {}** %12, align 8
  %14 = icmp eq {}* %13, null
  %_9 = select i1 %14, i64 0, i64 1
  switch i64 %_9, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
; call core::str::<impl str>::len
  %_11 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb8

bb5:                                              ; preds = %bb4
  %15 = load i8*, i8** %_4, align 8, !nonnull !20
  %b = load i8, i8* %15, align 1
  %16 = icmp sge i8 %b, -64
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb5
  br label %bb10

bb8:                                              ; preds = %bb7
  %18 = icmp eq i64 %index, %_11
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb1, %bb9
  %20 = load i8, i8* %1, align 1, !range !2
  %21 = trunc i8 %20 to i1
  ret i1 %21
}

; core::str::<impl str>::len
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !20
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_3.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %_3.1
}

; core::str::<impl str>::find
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17h38269b1130165281E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_5 = alloca %"core::str::pattern::CharSearcher", align 8
  %_3 = alloca %"core::option::Option<(usize, usize)>", align 8
; call <char as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h476d4dfb6c6fbef6E"(%"core::str::pattern::CharSearcher"* noalias nocapture sret(%"core::str::pattern::CharSearcher") dereferenceable(48) %_5, i32 %pat, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  invoke void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h79575f14addad360E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %_3, %"core::str::pattern::CharSearcher"* align 8 dereferenceable(48) %_5)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::option::Option<T>::map
  %1 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h54cabbbe7baa38d6E"(%"core::option::Option<(usize, usize)>"* noalias nocapture dereferenceable(24) %_3)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  br label %bb6

cleanup:                                          ; preds = %bb2, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %7 = extractvalue { i64, i64 } %1, 0
  %8 = extractvalue { i64, i64 } %1, 1
  br label %bb4

bb6:                                              ; preds = %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb3
  %15 = insertvalue { i64, i64 } undef, i64 %7, 0
  %16 = insertvalue { i64, i64 } %15, i64 %8, 1
  ret { i64, i64 } %16
}

; core::str::<impl str>::find::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h2fbca9cecf419981E"(i64 %_2.0, i64 %_2.1) unnamed_addr #0 {
start:
  ret i64 %_2.0
}

; core::str::<impl str>::bytes
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h3f2cdf005d447438E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !20
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_5.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %10 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf8525a97290cd8e4E"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1)
  %_3.0 = extractvalue { i8*, i8* } %10, 0
  %_3.1 = extractvalue { i8*, i8* } %10, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::iter::traits::iterator::Iterator::copied
  %11 = call { i8*, i8* } @_ZN4core4iter6traits8iterator8Iterator6copied17hcaf2a6e38404df2bE(i8* nonnull %_3.0, i8* %_3.1)
  %_2.0 = extractvalue { i8*, i8* } %11, 0
  %_2.1 = extractvalue { i8*, i8* } %11, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  store i8* %_2.0, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  store i8* %_2.1, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8, !nonnull !20
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = insertvalue { i8*, i8* } undef, i8* %15, 0
  %19 = insertvalue { i8*, i8* } %18, i8* %17, 1
  ret { i8*, i8* } %19
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h6f889b924c1c660fE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !20
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %10 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf8525a97290cd8e4E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  %_2.0 = extractvalue { i8*, i8* } %10, 0
  %_2.1 = extractvalue { i8*, i8* } %10, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  store i8* %_2.0, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  store i8* %_2.1, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !nonnull !20
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = insertvalue { i8*, i8* } undef, i8* %14, 0
  %18 = insertvalue { i8*, i8* } %17, i8* %16, 1
  ret { i8*, i8* } %18
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h39ac1c872f7ab429E"(%"core::result::Result<imp::TokenStream, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::TokenStream, imp::LexError>") dereferenceable(48) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call <proc_macro2::imp::TokenStream as core::str::traits::FromStr>::from_str
  call void @"_ZN76_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h87b277d9d722a913E"(%"core::result::Result<imp::TokenStream, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::TokenStream, imp::LexError>") dereferenceable(48) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h55ffe21b3051e736E"(%"core::result::Result<imp::Literal, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::Literal, imp::LexError>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call <proc_macro2::imp::Literal as core::str::traits::FromStr>::from_str
  call void @"_ZN72_$LT$proc_macro2..imp..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17he36a51a38e0881edE"(%"core::result::Result<imp::Literal, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::Literal, imp::LexError>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h934c7f9f25233c78E"(%"core::result::Result<fallback::TokenStream, fallback::LexError>"* noalias nocapture sret(%"core::result::Result<fallback::TokenStream, fallback::LexError>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call <proc_macro2::fallback::TokenStream as core::str::traits::FromStr>::from_str
  call void @"_ZN81_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h9ca650c494097a50E"(%"core::result::Result<fallback::TokenStream, fallback::LexError>"* noalias nocapture sret(%"core::result::Result<fallback::TokenStream, fallback::LexError>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h96bf1284bafc9ddeE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = alloca %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>", align 4
; call <proc_macro::TokenStream as core::str::traits::FromStr>::from_str
  %2 = call i32 @"_ZN70_$LT$proc_macro..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h4d9e6fdb02ba8545E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %1 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %1 to i32*
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; core::str::<impl str>::contains
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17ha2412111a1423152E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #0 {
start:
; call <char as core::str::pattern::Pattern>::is_contained_in
  %0 = call zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$15is_contained_in17h71b441341bfbb3a9E"(i32 %pat, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::str::<impl str>::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h6888ad1662ab9a20E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::str::<impl str>::len
  %_2 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i64 %_2, 0
  ret i1 %0
}

; core::str::<impl str>::split_at
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$8split_at17h085c2dc32863358bE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 {
start:
  %_14 = alloca { i64, i64 }, align 8
  %_9 = alloca { i64, i64 }, align 8
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h81242d51336a2898E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %mid)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17ha499ccf9a8f75ce3E([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 0, i64 %mid, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1361 to %"core::panic::location::Location"*)) #19
  unreachable

bb2:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %_9 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  store i64 %mid, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call core::str::<impl str>::get_unchecked
  %7 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h7ec85330413af61bE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %4, i64 %6)
  %_7.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::str::<impl str>::len
  %_16 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %8 = bitcast { i64, i64 }* %_14 to i64*
  store i64 %mid, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1
  store i64 %_16, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
; call core::str::<impl str>::get_unchecked
  %14 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h7ec85330413af61bE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %11, i64 %13)
  %_12.0 = extractvalue { [0 x i8]*, i64 } %14, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %14, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %15 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0 to { [0 x i8]*, i64 }*
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0
  store [0 x i8]* %_7.0, [0 x i8]** %16, align 8
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1
  store i64 %_7.1, i64* %17, align 8
  %18 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0, i32 0, i32 1
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %18, i32 0, i32 0
  store [0 x i8]* %_12.0, [0 x i8]** %19, align 8
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %18, i32 0, i32 1
  store i64 %_12.1, i64* %20, align 8
  ret void
}

; core::str::iter::Chars::as_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str4iter5Chars6as_str17h1251553d4761c223E({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::as_slice
  %0 = call { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h2fc8dd389f922073E"({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked
  %1 = call { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h0871ecd4ebcfb3adE([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h20048ff0cb3fe13aE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hbd65a9caba176d19E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_6, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %len = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hffb7268dfbdf28e2E(i8* %2, i64 %len)
  %_12.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_12.0, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_12.1, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17h872a01b076cd86bbE"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %_5 = icmp ule i64 %self.0, %self.1
  br i1 %_5, label %bb5, label %bb4

bb4:                                              ; preds = %start
  store i8 0, i8* %_4, align 1
  br label %bb6

bb5:                                              ; preds = %start
; call core::str::<impl str>::is_char_boundary
  %_8 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h81242d51336a2898E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %self.0)
  br label %bb7

bb7:                                              ; preds = %bb5
  %1 = zext i1 %_8 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb6

bb6:                                              ; preds = %bb4, %bb7
  %2 = load i8, i8* %_4, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb2, label %bb1

bb1:                                              ; preds = %bb6
  store i8 0, i8* %_3, align 1
  br label %bb3

bb2:                                              ; preds = %bb6
; call core::str::<impl str>::is_char_boundary
  %_11 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h81242d51336a2898E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %self.1)
  br label %bb8

bb8:                                              ; preds = %bb2
  %4 = zext i1 %_11 to i8
  store i8 %4, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb8
  %5 = load i8, i8* %_3, align 1, !range !2
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb9, label %bb11

bb11:                                             ; preds = %bb3
  %7 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %7, align 8
  br label %bb12

bb9:                                              ; preds = %bb3
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %8 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h20048ff0cb3fe13aE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_16.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_16.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %9 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  store [0 x i8]* %_16.0, [0 x i8]** %10, align 8
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  store i64 %_16.1, i64* %11, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { i8*, i64 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i64 } %16, i64 %15, 1
  ret { i8*, i64 } %17
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index17h632ee71738b411a0E"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_8 = alloca { i8*, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %_5 to i64*
  %start1 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %end = load i64, i64* %4, align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get
  %5 = call { i8*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17h872a01b076cd86bbE"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  store { i8*, i64 } %5, { i8*, i64 }* %_8, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast { i8*, i64 }* %_8 to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_11 = select i1 %8, i64 0, i64 1
  switch i64 %_11, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17ha499ccf9a8f75ce3E([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %start1, i64 %end, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #19
  unreachable

bb4:                                              ; preds = %bb1
  %9 = bitcast { i8*, i64 }* %_8 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !20
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %s.1 = load i64, i64* %11, align 8
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %s.0, 0
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %s.1, 1
  ret { [0 x i8]*, i64 } %13
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$13get_unchecked17hd9410cbee175431cE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %ptr = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hbd65a9caba176d19E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hffb7268dfbdf28e2E(i8* %ptr, i64 %self)
  %_7.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_7.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_7.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$3get17h14bdda3d29ebf2c6E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h81242d51336a2898E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::get_unchecked
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$13get_unchecked17hd9410cbee175431cE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  %_8.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %_8.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %_8.1, i64* %5, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i64 } %10, i64 %9, 1
  ret { i8*, i64 } %11
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$5index17h51c82f301147dd97E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::get
  %1 = call { i8*, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$3get17h14bdda3d29ebf2c6E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  store { i8*, i64 } %1, { i8*, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i8*, i64 }* %_4 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_7 = select i1 %4, i64 0, i64 1
  switch i64 %_7, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17ha499ccf9a8f75ce3E([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 0, i64 %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #19
  unreachable

bb4:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64 }* %_4 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !20
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %s.1 = load i64, i64* %7, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %s.0, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %s.1, 1
  ret { [0 x i8]*, i64 } %9
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h6fc03ac6a6351dbbE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hbd65a9caba176d19E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_6, i64 %self
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_10 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h76e771fc3e718e35E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %len = sub i64 %_10, %self
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hffb7268dfbdf28e2E(i8* %2, i64 %len)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_13.0, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_13.1, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h4473268c7ed32398E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h81242d51336a2898E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h6fc03ac6a6351dbbE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  %_8.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %_8.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %_8.1, i64* %5, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i64 } %10, i64 %9, 1
  ret { i8*, i64 } %11
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17h18ba24f290a9878cE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_9 = alloca { i8*, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
; call core::str::<impl str>::len
  %_7 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 %self, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %_7, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %_5 to i64*
  %start1 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %end = load i64, i64* %4, align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
  %5 = call { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h4473268c7ed32398E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  store { i8*, i64 } %5, { i8*, i64 }* %_9, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = bitcast { i8*, i64 }* %_9 to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_12 = select i1 %8, i64 0, i64 1
  switch i64 %_12, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17ha499ccf9a8f75ce3E([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %start1, i64 %end, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #19
  unreachable

bb5:                                              ; preds = %bb2
  %9 = bitcast { i8*, i64 }* %_9 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !20
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %s.1 = load i64, i64* %11, align 8
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %s.0, 0
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %s.1, 1
  ret { [0 x i8]*, i64 } %13
}

; core::str::traits::<impl core::cmp::PartialEq for str>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h62c1c4526097ae7dE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !20
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  store { [0 x i8]*, i64 } %9, { [0 x i8]*, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %10, align 8
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %other.1, i64* %11, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %13 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !20
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %17 = insertvalue { [0 x i8]*, i64 } %16, i64 %15, 1
  store { [0 x i8]*, i64 } %17, { [0 x i8]*, i64 }* %_7, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %18 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hb348444d202a4a88E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_4, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %18
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h92cbe302d9c6844dE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$5index17h51c82f301147dd97E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17ha5dfc76fbe8f171dE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17h18ba24f290a9878cE"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hbc164f4155ccfd5dE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index17h632ee71738b411a0E"(i64 %index.0, i64 %index.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::pattern::TwoWaySearcher::byteset_contains
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17h567b50a414d0b1d6E(%"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %self, i8 %byte) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 3
  %_5 = load i64, i64* %0, align 8
  %_7 = and i8 %byte, 63
  %_6 = zext i8 %_7 to i64
  %1 = and i64 %_6, 63
  %_4 = lshr i64 %_5, %1
  %_3 = and i64 %_4, 1
  %2 = icmp ne i64 %_3, 0
  ret i1 %2
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern14TwoWaySearcher4next17h29dd5a52aa80d052E(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, %"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %self, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, [0 x i8]* nonnull align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #0 {
start:
  %_76 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_72 = alloca { i64, i64 }, align 8
  %start2 = alloca i64, align 8
  %_46 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_41 = alloca { i64, i64 }, align 8
  %start1 = alloca i64, align 8
  %_21 = alloca i8, align 1
  %_10 = alloca i8*, align 8
  %1 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %old_pos = load i64, i64* %1, align 8
  %needle_last = sub i64 %needle.1, 1
  br label %bb1

bb1:                                              ; preds = %bb55, %start
  %2 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_13 = load i64, i64* %2, align 8
  %_12 = add i64 %_13, %needle_last
; call core::slice::<impl [T]>::get
  %3 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h7d94116415f9462cE"([0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, i64 %_12)
  store i8* %3, i8** %_10, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast i8** %_10 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_15 = select i1 %6, i64 0, i64 1
  switch i64 %_15, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %7 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  store i64 %haystack.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_20 = load i64, i64* %8, align 8
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hd5145548859436afE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %old_pos, i64 %_20)
  br label %bb6

bb5:                                              ; preds = %bb2
  %9 = load i8*, i8** %_10, align 8, !nonnull !20
  %b = load i8, i8* %9, align 1
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_22 = call zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17heae5d38660255b4eE"()
  br label %bb10

bb10:                                             ; preds = %bb5
  br i1 %_22, label %bb8, label %bb7

bb7:                                              ; preds = %bb10
  store i8 0, i8* %_21, align 1
  br label %bb9

bb8:                                              ; preds = %bb10
  %10 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_25 = load i64, i64* %10, align 8
  %_23 = icmp ne i64 %old_pos, %_25
  %11 = zext i1 %_23 to i8
  store i8 %11, i8* %_21, align 1
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %12 = load i8, i8* %_21, align 1, !range !2
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb11, label %bb13

bb13:                                             ; preds = %bb9
; call core::str::pattern::TwoWaySearcher::byteset_contains
  %_29 = call zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17h567b50a414d0b1d6E(%"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %self, i8 %b)
  br label %bb14

bb11:                                             ; preds = %bb9
  %14 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_27 = load i64, i64* %14, align 8
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hd5145548859436afE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %old_pos, i64 %_27)
  br label %bb12

bb12:                                             ; preds = %bb11
  br label %bb56

bb56:                                             ; preds = %bb6, %bb53, %bb12
  ret void

bb14:                                             ; preds = %bb13
  %_28 = xor i1 %_29, true
  br i1 %_28, label %bb15, label %bb18

bb18:                                             ; preds = %bb14
  br i1 %long_period, label %bb19, label %bb20

bb15:                                             ; preds = %bb14
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %16 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %needle.1
  store i64 %18, i64* %15, align 8
  %_34 = xor i1 %long_period, true
  br i1 %_34, label %bb16, label %bb17

bb17:                                             ; preds = %bb16, %bb15
  br label %bb55

bb16:                                             ; preds = %bb15
  %19 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %19, align 8
  br label %bb17

bb55:                                             ; preds = %bb54, %bb17
  br label %bb1

bb20:                                             ; preds = %bb18
  %20 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_38 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %_39 = load i64, i64* %21, align 8
; call core::cmp::max
  %22 = call i64 @_ZN4core3cmp3max17h74b219b421c96b03E(i64 %_38, i64 %_39)
  store i64 %22, i64* %start1, align 8
  br label %bb21

bb19:                                             ; preds = %bb18
  %23 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %start1, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb19
  %_42 = load i64, i64* %start1, align 8
  %25 = bitcast { i64, i64 }* %_41 to i64*
  store i64 %_42, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  store i64 %needle.1, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %31 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hae39948ba3945051E"(i64 %28, i64 %30)
  %_40.0 = extractvalue { i64, i64 } %31, 0
  %_40.1 = extractvalue { i64, i64 } %31, 1
  br label %bb23

bb21:                                             ; preds = %bb20
  br label %bb22

bb23:                                             ; preds = %bb22
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_40.0, i64* %32, align 8
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_40.1, i64* %33, align 8
  br label %bb24

bb24:                                             ; preds = %bb34, %bb23
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %34 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h35992a76360bb397E"({ i64, i64 }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %34, { i64, i64 }* %_46, align 8
  br label %bb25

bb25:                                             ; preds = %bb24
  %35 = bitcast { i64, i64 }* %_46 to i64*
  %_49 = load i64, i64* %35, align 8, !range !18
  switch i64 %_49, label %bb27 [
    i64 0, label %bb28
    i64 1, label %bb26
  ]

bb27:                                             ; preds = %bb25
  unreachable

bb28:                                             ; preds = %bb25
  br i1 %long_period, label %bb35, label %bb36

bb26:                                             ; preds = %bb25
  %36 = bitcast { i64, i64 }* %_46 to %"core::option::Option<usize>::Some"*
  %37 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %36, i32 0, i32 1
  %i = load i64, i64* %37, align 8
  %_55 = icmp ult i64 %i, %needle.1
  %38 = call i1 @llvm.expect.i1(i1 %_55, i1 true)
  br i1 %38, label %bb29, label %panic

bb29:                                             ; preds = %bb26
  %39 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i
  %_52 = load i8, i8* %39, align 1
  %40 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_58 = load i64, i64* %40, align 8
  %_57 = add i64 %_58, %i
  %_61 = icmp ult i64 %_57, %haystack.1
  %41 = call i1 @llvm.expect.i1(i1 %_61, i1 true)
  br i1 %41, label %bb30, label %panic4

panic:                                            ; preds = %bb26
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 %needle.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1363 to %"core::panic::location::Location"*)) #19
  unreachable

bb30:                                             ; preds = %bb29
  %42 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_57
  %_56 = load i8, i8* %42, align 1
  %_51 = icmp ne i8 %_52, %_56
  br i1 %_51, label %bb31, label %bb34

panic4:                                           ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_57, i64 %haystack.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1365 to %"core::panic::location::Location"*)) #19
  unreachable

bb34:                                             ; preds = %bb30
  br label %bb24

bb31:                                             ; preds = %bb30
  %43 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_65 = load i64, i64* %43, align 8
  %_63 = sub i64 %i, %_65
  %_62 = add i64 %_63, 1
  %44 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %45 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %_62
  store i64 %47, i64* %44, align 8
  %_66 = xor i1 %long_period, true
  br i1 %_66, label %bb32, label %bb33

bb33:                                             ; preds = %bb32, %bb31
  br label %bb54

bb32:                                             ; preds = %bb31
  %48 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %48, align 8
  br label %bb33

bb54:                                             ; preds = %bb49, %bb33
  br label %bb55

bb36:                                             ; preds = %bb28
  %49 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %start2, align 8
  br label %bb37

bb35:                                             ; preds = %bb28
  store i64 0, i64* %start2, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35
  %_73 = load i64, i64* %start2, align 8
  %51 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_74 = load i64, i64* %51, align 8
  %52 = bitcast { i64, i64 }* %_72 to i64*
  store i64 %_73, i64* %52, align 8
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  store i64 %_74, i64* %53, align 8
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
; call core::iter::traits::iterator::Iterator::rev
  %58 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17ha282dd18a33b7c7eE(i64 %55, i64 %57)
  %_71.0 = extractvalue { i64, i64 } %58, 0
  %_71.1 = extractvalue { i64, i64 } %58, 1
  br label %bb38

bb38:                                             ; preds = %bb37
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %59 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h551cb7f0a512ebedE"(i64 %_71.0, i64 %_71.1)
  %_70.0 = extractvalue { i64, i64 } %59, 0
  %_70.1 = extractvalue { i64, i64 } %59, 1
  br label %bb39

bb39:                                             ; preds = %bb38
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 0
  store i64 %_70.0, i64* %60, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 1
  store i64 %_70.1, i64* %61, align 8
  br label %bb40

bb40:                                             ; preds = %bb50, %bb39
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %62 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd7f0148f5fc8708eE"({ i64, i64 }* align 8 dereferenceable(16) %iter3)
  store { i64, i64 } %62, { i64, i64 }* %_76, align 8
  br label %bb41

bb41:                                             ; preds = %bb40
  %63 = bitcast { i64, i64 }* %_76 to i64*
  %_79 = load i64, i64* %63, align 8, !range !18
  switch i64 %_79, label %bb43 [
    i64 0, label %bb44
    i64 1, label %bb42
  ]

bb43:                                             ; preds = %bb41
  unreachable

bb44:                                             ; preds = %bb41
  %64 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %match_pos = load i64, i64* %64, align 8
  %65 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %66 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, %needle.1
  store i64 %68, i64* %65, align 8
  %_101 = xor i1 %long_period, true
  br i1 %_101, label %bb51, label %bb52

bb42:                                             ; preds = %bb41
  %69 = bitcast { i64, i64 }* %_76 to %"core::option::Option<usize>::Some"*
  %70 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %69, i32 0, i32 1
  %i5 = load i64, i64* %70, align 8
  %_85 = icmp ult i64 %i5, %needle.1
  %71 = call i1 @llvm.expect.i1(i1 %_85, i1 true)
  br i1 %71, label %bb45, label %panic6

bb45:                                             ; preds = %bb42
  %72 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i5
  %_82 = load i8, i8* %72, align 1
  %73 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_88 = load i64, i64* %73, align 8
  %_87 = add i64 %_88, %i5
  %_91 = icmp ult i64 %_87, %haystack.1
  %74 = call i1 @llvm.expect.i1(i1 %_91, i1 true)
  br i1 %74, label %bb46, label %panic7

panic6:                                           ; preds = %bb42
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i5, i64 %needle.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1367 to %"core::panic::location::Location"*)) #19
  unreachable

bb46:                                             ; preds = %bb45
  %75 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_87
  %_86 = load i8, i8* %75, align 1
  %_81 = icmp ne i8 %_82, %_86
  br i1 %_81, label %bb47, label %bb50

panic7:                                           ; preds = %bb45
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_87, i64 %haystack.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1369 to %"core::panic::location::Location"*)) #19
  unreachable

bb50:                                             ; preds = %bb46
  br label %bb40

bb47:                                             ; preds = %bb46
  %76 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_92 = load i64, i64* %76, align 8
  %77 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %78 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, %_92
  store i64 %80, i64* %77, align 8
  %_93 = xor i1 %long_period, true
  br i1 %_93, label %bb48, label %bb49

bb49:                                             ; preds = %bb48, %bb47
  br label %bb54

bb48:                                             ; preds = %bb47
  %81 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_97 = load i64, i64* %81, align 8
  %82 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %83 = sub i64 %needle.1, %_97
  store i64 %83, i64* %82, align 8
  br label %bb49

bb52:                                             ; preds = %bb51, %bb44
  %_104 = add i64 %match_pos, %needle.1
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17hea0db42388669d73E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %match_pos, i64 %_104)
  br label %bb53

bb51:                                             ; preds = %bb44
  %84 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %84, align 8
  br label %bb52

bb53:                                             ; preds = %bb52
  br label %bb56

bb6:                                              ; preds = %bb3
  br label %bb56
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern14TwoWaySearcher4next17h3d82cc279a5322daE(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %self, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, [0 x i8]* nonnull align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #0 {
start:
  %_76 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_72 = alloca { i64, i64 }, align 8
  %start2 = alloca i64, align 8
  %_46 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_41 = alloca { i64, i64 }, align 8
  %start1 = alloca i64, align 8
  %_21 = alloca i8, align 1
  %_10 = alloca i8*, align 8
  %1 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %old_pos = load i64, i64* %1, align 8
  %needle_last = sub i64 %needle.1, 1
  br label %bb1

bb1:                                              ; preds = %bb55, %start
  %2 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_13 = load i64, i64* %2, align 8
  %_12 = add i64 %_13, %needle_last
; call core::slice::<impl [T]>::get
  %3 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h7d94116415f9462cE"([0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, i64 %_12)
  store i8* %3, i8** %_10, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast i8** %_10 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_15 = select i1 %6, i64 0, i64 1
  switch i64 %_15, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %7 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  store i64 %haystack.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_20 = load i64, i64* %8, align 8
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h3d6ca41e12acdf94E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, i64 %old_pos, i64 %_20)
  br label %bb6

bb5:                                              ; preds = %bb2
  %9 = load i8*, i8** %_10, align 8, !nonnull !20
  %b = load i8, i8* %9, align 1
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_22 = call zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h083d0b3a68dd26b2E"()
  br label %bb10

bb10:                                             ; preds = %bb5
  br i1 %_22, label %bb8, label %bb7

bb7:                                              ; preds = %bb10
  store i8 0, i8* %_21, align 1
  br label %bb9

bb8:                                              ; preds = %bb10
  %10 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_25 = load i64, i64* %10, align 8
  %_23 = icmp ne i64 %old_pos, %_25
  %11 = zext i1 %_23 to i8
  store i8 %11, i8* %_21, align 1
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %12 = load i8, i8* %_21, align 1, !range !2
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb11, label %bb13

bb13:                                             ; preds = %bb9
; call core::str::pattern::TwoWaySearcher::byteset_contains
  %_29 = call zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17h567b50a414d0b1d6E(%"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %self, i8 %b)
  br label %bb14

bb11:                                             ; preds = %bb9
  %14 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_27 = load i64, i64* %14, align 8
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h3d6ca41e12acdf94E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, i64 %old_pos, i64 %_27)
  br label %bb12

bb12:                                             ; preds = %bb11
  br label %bb56

bb56:                                             ; preds = %bb6, %bb53, %bb12
  ret void

bb14:                                             ; preds = %bb13
  %_28 = xor i1 %_29, true
  br i1 %_28, label %bb15, label %bb18

bb18:                                             ; preds = %bb14
  br i1 %long_period, label %bb19, label %bb20

bb15:                                             ; preds = %bb14
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %16 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %needle.1
  store i64 %18, i64* %15, align 8
  %_34 = xor i1 %long_period, true
  br i1 %_34, label %bb16, label %bb17

bb17:                                             ; preds = %bb16, %bb15
  br label %bb55

bb16:                                             ; preds = %bb15
  %19 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %19, align 8
  br label %bb17

bb55:                                             ; preds = %bb54, %bb17
  br label %bb1

bb20:                                             ; preds = %bb18
  %20 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_38 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %_39 = load i64, i64* %21, align 8
; call core::cmp::max
  %22 = call i64 @_ZN4core3cmp3max17h74b219b421c96b03E(i64 %_38, i64 %_39)
  store i64 %22, i64* %start1, align 8
  br label %bb21

bb19:                                             ; preds = %bb18
  %23 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %start1, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb19
  %_42 = load i64, i64* %start1, align 8
  %25 = bitcast { i64, i64 }* %_41 to i64*
  store i64 %_42, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  store i64 %needle.1, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %31 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hae39948ba3945051E"(i64 %28, i64 %30)
  %_40.0 = extractvalue { i64, i64 } %31, 0
  %_40.1 = extractvalue { i64, i64 } %31, 1
  br label %bb23

bb21:                                             ; preds = %bb20
  br label %bb22

bb23:                                             ; preds = %bb22
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_40.0, i64* %32, align 8
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_40.1, i64* %33, align 8
  br label %bb24

bb24:                                             ; preds = %bb34, %bb23
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %34 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h35992a76360bb397E"({ i64, i64 }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %34, { i64, i64 }* %_46, align 8
  br label %bb25

bb25:                                             ; preds = %bb24
  %35 = bitcast { i64, i64 }* %_46 to i64*
  %_49 = load i64, i64* %35, align 8, !range !18
  switch i64 %_49, label %bb27 [
    i64 0, label %bb28
    i64 1, label %bb26
  ]

bb27:                                             ; preds = %bb25
  unreachable

bb28:                                             ; preds = %bb25
  br i1 %long_period, label %bb35, label %bb36

bb26:                                             ; preds = %bb25
  %36 = bitcast { i64, i64 }* %_46 to %"core::option::Option<usize>::Some"*
  %37 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %36, i32 0, i32 1
  %i = load i64, i64* %37, align 8
  %_55 = icmp ult i64 %i, %needle.1
  %38 = call i1 @llvm.expect.i1(i1 %_55, i1 true)
  br i1 %38, label %bb29, label %panic

bb29:                                             ; preds = %bb26
  %39 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i
  %_52 = load i8, i8* %39, align 1
  %40 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_58 = load i64, i64* %40, align 8
  %_57 = add i64 %_58, %i
  %_61 = icmp ult i64 %_57, %haystack.1
  %41 = call i1 @llvm.expect.i1(i1 %_61, i1 true)
  br i1 %41, label %bb30, label %panic4

panic:                                            ; preds = %bb26
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 %needle.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1363 to %"core::panic::location::Location"*)) #19
  unreachable

bb30:                                             ; preds = %bb29
  %42 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_57
  %_56 = load i8, i8* %42, align 1
  %_51 = icmp ne i8 %_52, %_56
  br i1 %_51, label %bb31, label %bb34

panic4:                                           ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_57, i64 %haystack.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1365 to %"core::panic::location::Location"*)) #19
  unreachable

bb34:                                             ; preds = %bb30
  br label %bb24

bb31:                                             ; preds = %bb30
  %43 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_65 = load i64, i64* %43, align 8
  %_63 = sub i64 %i, %_65
  %_62 = add i64 %_63, 1
  %44 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %45 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %_62
  store i64 %47, i64* %44, align 8
  %_66 = xor i1 %long_period, true
  br i1 %_66, label %bb32, label %bb33

bb33:                                             ; preds = %bb32, %bb31
  br label %bb54

bb32:                                             ; preds = %bb31
  %48 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %48, align 8
  br label %bb33

bb54:                                             ; preds = %bb49, %bb33
  br label %bb55

bb36:                                             ; preds = %bb28
  %49 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %start2, align 8
  br label %bb37

bb35:                                             ; preds = %bb28
  store i64 0, i64* %start2, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35
  %_73 = load i64, i64* %start2, align 8
  %51 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_74 = load i64, i64* %51, align 8
  %52 = bitcast { i64, i64 }* %_72 to i64*
  store i64 %_73, i64* %52, align 8
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  store i64 %_74, i64* %53, align 8
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
; call core::iter::traits::iterator::Iterator::rev
  %58 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17ha282dd18a33b7c7eE(i64 %55, i64 %57)
  %_71.0 = extractvalue { i64, i64 } %58, 0
  %_71.1 = extractvalue { i64, i64 } %58, 1
  br label %bb38

bb38:                                             ; preds = %bb37
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %59 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h551cb7f0a512ebedE"(i64 %_71.0, i64 %_71.1)
  %_70.0 = extractvalue { i64, i64 } %59, 0
  %_70.1 = extractvalue { i64, i64 } %59, 1
  br label %bb39

bb39:                                             ; preds = %bb38
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 0
  store i64 %_70.0, i64* %60, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 1
  store i64 %_70.1, i64* %61, align 8
  br label %bb40

bb40:                                             ; preds = %bb50, %bb39
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %62 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd7f0148f5fc8708eE"({ i64, i64 }* align 8 dereferenceable(16) %iter3)
  store { i64, i64 } %62, { i64, i64 }* %_76, align 8
  br label %bb41

bb41:                                             ; preds = %bb40
  %63 = bitcast { i64, i64 }* %_76 to i64*
  %_79 = load i64, i64* %63, align 8, !range !18
  switch i64 %_79, label %bb43 [
    i64 0, label %bb44
    i64 1, label %bb42
  ]

bb43:                                             ; preds = %bb41
  unreachable

bb44:                                             ; preds = %bb41
  %64 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %match_pos = load i64, i64* %64, align 8
  %65 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %66 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, %needle.1
  store i64 %68, i64* %65, align 8
  %_101 = xor i1 %long_period, true
  br i1 %_101, label %bb51, label %bb52

bb42:                                             ; preds = %bb41
  %69 = bitcast { i64, i64 }* %_76 to %"core::option::Option<usize>::Some"*
  %70 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %69, i32 0, i32 1
  %i5 = load i64, i64* %70, align 8
  %_85 = icmp ult i64 %i5, %needle.1
  %71 = call i1 @llvm.expect.i1(i1 %_85, i1 true)
  br i1 %71, label %bb45, label %panic6

bb45:                                             ; preds = %bb42
  %72 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i5
  %_82 = load i8, i8* %72, align 1
  %73 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_88 = load i64, i64* %73, align 8
  %_87 = add i64 %_88, %i5
  %_91 = icmp ult i64 %_87, %haystack.1
  %74 = call i1 @llvm.expect.i1(i1 %_91, i1 true)
  br i1 %74, label %bb46, label %panic7

panic6:                                           ; preds = %bb42
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i5, i64 %needle.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1367 to %"core::panic::location::Location"*)) #19
  unreachable

bb46:                                             ; preds = %bb45
  %75 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_87
  %_86 = load i8, i8* %75, align 1
  %_81 = icmp ne i8 %_82, %_86
  br i1 %_81, label %bb47, label %bb50

panic7:                                           ; preds = %bb45
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_87, i64 %haystack.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1369 to %"core::panic::location::Location"*)) #19
  unreachable

bb50:                                             ; preds = %bb46
  br label %bb40

bb47:                                             ; preds = %bb46
  %76 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_92 = load i64, i64* %76, align 8
  %77 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %78 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, %_92
  store i64 %80, i64* %77, align 8
  %_93 = xor i1 %long_period, true
  br i1 %_93, label %bb48, label %bb49

bb49:                                             ; preds = %bb48, %bb47
  br label %bb54

bb48:                                             ; preds = %bb47
  %81 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_97 = load i64, i64* %81, align 8
  %82 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %83 = sub i64 %needle.1, %_97
  store i64 %83, i64* %82, align 8
  br label %bb49

bb52:                                             ; preds = %bb51, %bb44
  %_104 = add i64 %match_pos, %needle.1
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17he49e50b51d22b0a4E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, i64 %match_pos, i64 %_104)
  br label %bb53

bb51:                                             ; preds = %bb44
  %84 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %84, align 8
  br label %bb52

bb53:                                             ; preds = %bb52
  br label %bb56

bb6:                                              ; preds = %bb3
  br label %bb56
}

; core::str::pattern::Pattern::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3str7pattern7Pattern12is_prefix_of17h7f1af78f1b112618E([0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_5 = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>", align 8
  %_3 = alloca %"core::str::pattern::SearchStep", align 8
  %1 = alloca i8, align 1
; call <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17he3774d64a88f24abE"(%"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>"* noalias nocapture sret(%"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>") dereferenceable(40) %_5, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
  invoke void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h47e5bb2cf68980b2E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %_3, %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>"* align 8 dereferenceable(40) %_5)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %2 = bitcast %"core::str::pattern::SearchStep"* %_3 to i64*
  %_8 = load i64, i64* %2, align 8, !range !79
  %3 = icmp eq i64 %_8, 0
  br i1 %3, label %bb3, label %bb4

bb8:                                              ; preds = %cleanup
  br label %bb9

cleanup:                                          ; preds = %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb8

bb9:                                              ; preds = %bb8
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb3:                                              ; preds = %bb2
  %15 = bitcast %"core::str::pattern::SearchStep"* %_3 to %"core::str::pattern::SearchStep::Match"*
  %16 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %15, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %bb5, label %bb4

bb4:                                              ; preds = %bb3, %bb2
  store i8 0, i8* %1, align 1
  br label %bb6

bb5:                                              ; preds = %bb3
  store i8 1, i8* %1, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  br label %bb7

bb7:                                              ; preds = %bb6
  %19 = load i8, i8* %1, align 1, !range !2
  %20 = trunc i8 %19 to i1
  ret i1 %20
}

; core::str::pattern::Pattern::is_contained_in
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3str7pattern7Pattern15is_contained_in17h0d8ded745001b704E([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_6 = alloca %"core::str::pattern::StrSearcher", align 8
  %_4 = alloca %"core::option::Option<(usize, usize)>", align 8
; call <&str as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17ha861664cd265bc21E"(%"core::str::pattern::StrSearcher"* noalias nocapture sret(%"core::str::pattern::StrSearcher") dereferenceable(104) %_6, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
  invoke void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h5b07b4091f1de8dcE"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %_4, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::option::Option<T>::is_some
  %1 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h10218797bc4bf074E"(%"core::option::Option<(usize, usize)>"* align 8 dereferenceable(24) %_4)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  br label %bb6

cleanup:                                          ; preds = %bb2, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb4

bb6:                                              ; preds = %bb5
  %7 = bitcast { i8*, i32 }* %0 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1
  resume { i8*, i32 } %12

bb4:                                              ; preds = %bb3
  ret i1 %1
}

; core::str::converts::from_utf8_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h0871ecd4ebcfb3adE([0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %v.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %v.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !20
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  ret { [0 x i8]*, i64 } %8
}

; core::str::converts::from_utf8_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17h7cf98c7fe009905cE([0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #0 {
start:
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %v.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %v.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::char::convert::char_try_from_u32
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4char7convert17char_try_from_u3217h22b7a00df7c0d487E(i32 %i) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_6 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %1 = alloca i32, align 4
  %_3 = icmp ugt i32 %i, 1114111
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = icmp uge i32 %i, 55296
  br i1 %_7, label %bb5, label %bb4

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb6, %bb1
  %2 = load i8, i8* %_2, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb7, label %bb8

bb4:                                              ; preds = %bb2
  store i8 0, i8* %_6, align 1
  br label %bb6

bb5:                                              ; preds = %bb2
  %_9 = icmp ule i32 %i, 57343
  %4 = zext i1 %_9 to i8
  store i8 %4, i8* %_6, align 1
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %5 = load i8, i8* %_6, align 1, !range !2
  %6 = trunc i8 %5 to i1
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %_2, align 1
  br label %bb3

bb8:                                              ; preds = %bb3
  store i32 %i, i32* %0, align 4
  %_11 = load i32, i32* %0, align 4, !range !80
  br label %bb9

bb7:                                              ; preds = %bb3
  store i32 1114112, i32* %1, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %8 = load i32, i32* %1, align 4, !range !22
  ret i32 %8

bb9:                                              ; preds = %bb8
  store i32 %_11, i32* %1, align 4
  br label %bb10
}

; core::char::convert::from_u32_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4char7convert18from_u32_unchecked17ha88fb2c29d2e4b03E(i32 %i) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  store i32 %i, i32* %0, align 4
  %1 = load i32, i32* %0, align 4, !range !80
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; core::char::convert::from_u32
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4char7convert8from_u3217hceae4654701b1926E(i32 %i) unnamed_addr #0 {
start:
  %_2 = alloca i32, align 4
  %0 = alloca i32, align 4
; call core::char::convert::char_try_from_u32
  %1 = call i32 @_ZN4core4char7convert17char_try_from_u3217h22b7a00df7c0d487E(i32 %i), !range !22
  store i32 %1, i32* %_2, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i32, i32* %_2, align 4, !range !22
  %3 = sub i32 %2, 1114112
  %4 = icmp eq i32 %3, 0
  %_4 = select i1 %4, i64 1, i64 0
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %c = load i32, i32* %_2, align 4, !range !80
  store i32 %c, i32* %0, align 4
  br label %bb5

bb2:                                              ; preds = %bb1
  store i32 1114112, i32* %0, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %5 = load i32, i32* %0, align 4, !range !22
  ret i32 %5
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h53bf24c99521757cE(i32 %0, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #0 {
start:
  %_95 = alloca i64, align 8
  %_args = alloca { i64*, i32*, i64* }, align 8
  %_80 = alloca i64, align 8
  %_76 = alloca { i64*, i32*, i64* }, align 8
  %_75 = alloca [3 x { i8*, i64* }], align 8
  %_68 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca { i64, { [0 x i8]*, i64 } }, align 8
  %len = alloca i64, align 8
  %code = alloca i32, align 4
  store i32 %0, i32* %code, align 4
  %_5 = load i32, i32* %code, align 4
; call core::char::methods::len_utf8
  %1 = call i64 @_ZN4core4char7methods8len_utf817heb2c55bc61278cceE(i32 %_5)
  store i64 %1, i64* %len, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %len, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %2 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfc735c5fe30aef80E"([0 x i8]* nonnull align 1 %dst.0, i64 %dst.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1371 to %"core::panic::location::Location"*))
  %_9.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*
  store i64 %_7, i64* %3, align 8
  %4 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  store [0 x i8]* %_9.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  store i64 %_9.1, i64* %6, align 8
  %7 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*
  %8 = load i64, i64* %7, align 8
  switch i64 %8, label %bb4 [
    i64 1, label %bb3
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
  ]

bb4:                                              ; preds = %bb3, %bb5, %bb6, %bb7, %bb2
  store i64 %dst.1, i64* %_80, align 8
  %9 = bitcast { i64*, i32*, i64* }* %_76 to i64**
  store i64* %len, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 1
  store i32* %code, i32** %10, align 8
  %11 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 2
  store i64* %_80, i64** %11, align 8
  %12 = bitcast { i64*, i32*, i64* }* %_args to i8*
  %13 = bitcast { i64*, i32*, i64* }* %_76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast { i64*, i32*, i64* }* %_args to i64**
  %_84 = load i64*, i64** %14, align 8, !nonnull !20
; call core::fmt::ArgumentV1::new
  %15 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hfc87138be8c493f2E(i64* align 8 dereferenceable(8) %_84, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE")
  %_83.0 = extractvalue { i8*, i64* } %15, 0
  %_83.1 = extractvalue { i8*, i64* } %15, 1
  br label %bb12

bb3:                                              ; preds = %bb2
  %16 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0
  %18 = load [0 x i8]*, [0 x i8]** %17, align 8, !nonnull !20
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1
  %_12 = load i64, i64* %19, align 8
  %_14 = icmp uge i64 %_12, 1
  br i1 %_14, label %bb8, label %bb4

bb5:                                              ; preds = %bb2
  %20 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0
  %22 = load [0 x i8]*, [0 x i8]** %21, align 8, !nonnull !20
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1
  %_15 = load i64, i64* %23, align 8
  %_17 = icmp uge i64 %_15, 2
  br i1 %_17, label %bb9, label %bb4

bb6:                                              ; preds = %bb2
  %24 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 0
  %26 = load [0 x i8]*, [0 x i8]** %25, align 8, !nonnull !20
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 1
  %_18 = load i64, i64* %27, align 8
  %_20 = icmp uge i64 %_18, 3
  br i1 %_20, label %bb10, label %bb4

bb7:                                              ; preds = %bb2
  %28 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  %30 = load [0 x i8]*, [0 x i8]** %29, align 8, !nonnull !20
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  %_21 = load i64, i64* %31, align 8
  %_23 = icmp uge i64 %_21, 4
  br i1 %_23, label %bb11, label %bb4

bb11:                                             ; preds = %bb7
  %32 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0
  %34 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !20
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %a = getelementptr inbounds [0 x i8], [0 x i8]* %34, i64 0, i64 0
  %37 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0
  %39 = load [0 x i8]*, [0 x i8]** %38, align 8, !nonnull !20
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %b = getelementptr inbounds [0 x i8], [0 x i8]* %39, i64 0, i64 1
  %42 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 0
  %44 = load [0 x i8]*, [0 x i8]** %43, align 8, !nonnull !20
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %c = getelementptr inbounds [0 x i8], [0 x i8]* %44, i64 0, i64 2
  %47 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 0
  %49 = load [0 x i8]*, [0 x i8]** %48, align 8, !nonnull !20
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %d = getelementptr inbounds [0 x i8], [0 x i8]* %49, i64 0, i64 3
  %_56 = load i32, i32* %code, align 4
  %_55 = lshr i32 %_56, 18
  %_54 = and i32 %_55, 7
  %_53 = trunc i32 %_54 to i8
  %52 = or i8 %_53, -16
  store i8 %52, i8* %a, align 1
  %_60 = load i32, i32* %code, align 4
  %_59 = lshr i32 %_60, 12
  %_58 = and i32 %_59, 63
  %_57 = trunc i32 %_58 to i8
  %53 = or i8 %_57, -128
  store i8 %53, i8* %b, align 1
  %_64 = load i32, i32* %code, align 4
  %_63 = lshr i32 %_64, 6
  %_62 = and i32 %_63, 63
  %_61 = trunc i32 %_62 to i8
  %54 = or i8 %_61, -128
  store i8 %54, i8* %c, align 1
  %_67 = load i32, i32* %code, align 4
  %_66 = and i32 %_67, 63
  %_65 = trunc i32 %_66 to i8
  %55 = or i8 %_65, -128
  store i8 %55, i8* %d, align 1
  br label %bb16

bb16:                                             ; preds = %bb8, %bb9, %bb10, %bb11
  %_96 = load i64, i64* %len, align 8
  store i64 %_96, i64* %_95, align 8
  %56 = load i64, i64* %_95, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %57 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h44c3c97e5941e846E"([0 x i8]* nonnull align 1 %dst.0, i64 %dst.1, i64 %56, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1373 to %"core::panic::location::Location"*))
  %_93.0 = extractvalue { [0 x i8]*, i64 } %57, 0
  %_93.1 = extractvalue { [0 x i8]*, i64 } %57, 1
  br label %bb17

bb10:                                             ; preds = %bb6
  %58 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0
  %60 = load [0 x i8]*, [0 x i8]** %59, align 8, !nonnull !20
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %a1 = getelementptr inbounds [0 x i8], [0 x i8]* %60, i64 0, i64 0
  %63 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %63, i32 0, i32 0
  %65 = load [0 x i8]*, [0 x i8]** %64, align 8, !nonnull !20
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %63, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %b2 = getelementptr inbounds [0 x i8], [0 x i8]* %65, i64 0, i64 1
  %68 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 0
  %70 = load [0 x i8]*, [0 x i8]** %69, align 8, !nonnull !20
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %c3 = getelementptr inbounds [0 x i8], [0 x i8]* %70, i64 0, i64 2
  %_41 = load i32, i32* %code, align 4
  %_40 = lshr i32 %_41, 12
  %_39 = and i32 %_40, 15
  %_38 = trunc i32 %_39 to i8
  %73 = or i8 %_38, -32
  store i8 %73, i8* %a1, align 1
  %_45 = load i32, i32* %code, align 4
  %_44 = lshr i32 %_45, 6
  %_43 = and i32 %_44, 63
  %_42 = trunc i32 %_43 to i8
  %74 = or i8 %_42, -128
  store i8 %74, i8* %b2, align 1
  %_48 = load i32, i32* %code, align 4
  %_47 = and i32 %_48, 63
  %_46 = trunc i32 %_47 to i8
  %75 = or i8 %_46, -128
  store i8 %75, i8* %c3, align 1
  br label %bb16

bb9:                                              ; preds = %bb5
  %76 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %76, i32 0, i32 0
  %78 = load [0 x i8]*, [0 x i8]** %77, align 8, !nonnull !20
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %76, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %a4 = getelementptr inbounds [0 x i8], [0 x i8]* %78, i64 0, i64 0
  %81 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %82 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %81, i32 0, i32 0
  %83 = load [0 x i8]*, [0 x i8]** %82, align 8, !nonnull !20
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %81, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %b5 = getelementptr inbounds [0 x i8], [0 x i8]* %83, i64 0, i64 1
  %_31 = load i32, i32* %code, align 4
  %_30 = lshr i32 %_31, 6
  %_29 = and i32 %_30, 31
  %_28 = trunc i32 %_29 to i8
  %86 = or i8 %_28, -64
  store i8 %86, i8* %a4, align 1
  %_34 = load i32, i32* %code, align 4
  %_33 = and i32 %_34, 63
  %_32 = trunc i32 %_33 to i8
  %87 = or i8 %_32, -128
  store i8 %87, i8* %b5, align 1
  br label %bb16

bb8:                                              ; preds = %bb3
  %88 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0
  %90 = load [0 x i8]*, [0 x i8]** %89, align 8, !nonnull !20
  %91 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %a6 = getelementptr inbounds [0 x i8], [0 x i8]* %90, i64 0, i64 0
  %_25 = load i32, i32* %code, align 4
  %93 = trunc i32 %_25 to i8
  store i8 %93, i8* %a6, align 1
  br label %bb16

bb17:                                             ; preds = %bb16
  %94 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_93.0, 0
  %95 = insertvalue { [0 x i8]*, i64 } %94, i64 %_93.1, 1
  ret { [0 x i8]*, i64 } %95

bb12:                                             ; preds = %bb4
  %96 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_args, i32 0, i32 1
  %_87 = load i32*, i32** %96, align 8, !nonnull !20
; call core::fmt::ArgumentV1::new
  %97 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h6979be01fdacff4fE(i32* align 4 dereferenceable(4) %_87, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17hef35279af1b2dff0E")
  %_86.0 = extractvalue { i8*, i64* } %97, 0
  %_86.1 = extractvalue { i8*, i64* } %97, 1
  br label %bb13

bb13:                                             ; preds = %bb12
  %98 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_args, i32 0, i32 2
  %_90 = load i64*, i64** %98, align 8, !nonnull !20
; call core::fmt::ArgumentV1::new
  %99 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hfc87138be8c493f2E(i64* align 8 dereferenceable(8) %_90, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE")
  %_89.0 = extractvalue { i8*, i64* } %99, 0
  %_89.1 = extractvalue { i8*, i64* } %99, 1
  br label %bb14

bb14:                                             ; preds = %bb13
  %100 = bitcast [3 x { i8*, i64* }]* %_75 to { i8*, i64* }*
  %101 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %100, i32 0, i32 0
  store i8* %_83.0, i8** %101, align 8
  %102 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %100, i32 0, i32 1
  store i64* %_83.1, i64** %102, align 8
  %103 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_75, i32 0, i32 1
  %104 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %103, i32 0, i32 0
  store i8* %_86.0, i8** %104, align 8
  %105 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %103, i32 0, i32 1
  store i64* %_86.1, i64** %105, align 8
  %106 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_75, i32 0, i32 2
  %107 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %106, i32 0, i32 0
  store i8* %_89.0, i8** %107, align 8
  %108 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %106, i32 0, i32 1
  store i64* %_89.1, i64** %108, align 8
  %_72.0 = bitcast [3 x { i8*, i64* }]* %_75 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_68, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc171 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_72.0, i64 3)
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_68, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1375 to %"core::panic::location::Location"*)) #19
  unreachable
}

; core::char::methods::<impl char>::encode_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h8d57095e1ef61f0dE"(i32 %self, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #0 {
start:
  %0 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %0)
; call core::char::methods::encode_utf8_raw
  %1 = call { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h53bf24c99521757cE(i32 %self, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1)
  %_7.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked_mut
  %2 = call { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17h7cf98c7fe009905cE([0 x i8]* nonnull align 1 %_7.0, i64 %_7.1)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_5.0, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %_5.1, 1
  ret { [0 x i8]*, i64 } %4
}

; core::char::methods::<impl char>::escape_debug
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12escape_debug17h186301ed539dee87E"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %0, i32 %self) unnamed_addr #0 {
start:
  %1 = alloca %"core::char::methods::EscapeDebugExtArgs", align 1
  %2 = bitcast %"core::char::methods::EscapeDebugExtArgs"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @0, i32 0, i32 0, i32 0), i64 3, i1 false)
  %3 = bitcast %"core::char::methods::EscapeDebugExtArgs"* %1 to i24*
  %4 = load i24, i24* %3, align 1
; call core::char::methods::<impl char>::escape_debug_ext
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h421a16db17f353fdE"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %0, i32 %self, i24 %4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::char::methods::<impl char>::is_whitespace
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h3d27cd8679dd9538E"(i32 %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i32 %self, 32
  br i1 %1, label %bb4, label %bb1

bb4:                                              ; preds = %bb2, %start
  store i8 1, i8* %0, align 1
  br label %bb9

bb1:                                              ; preds = %start
  %_2 = icmp ule i32 9, %self
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %_5 = icmp ugt i32 %self, 127
  br i1 %_5, label %bb6, label %bb5

bb2:                                              ; preds = %bb1
  %_3 = icmp ule i32 %self, 13
  br i1 %_3, label %bb4, label %bb3

bb5:                                              ; preds = %bb3
  store i8 0, i8* %0, align 1
  br label %bb7

bb6:                                              ; preds = %bb3
; call core::unicode::unicode_data::white_space::lookup
  %_7 = call zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17h3d79e61de93a9ceeE(i32 %self)
  br label %bb8

bb8:                                              ; preds = %bb6
  %2 = zext i1 %_7 to i8
  store i8 %2, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb5, %bb8
  br label %bb9

bb9:                                              ; preds = %bb4, %bb7
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::char::methods::<impl char>::escape_unicode
; Function Attrs: inlinehint nonlazybind uwtable
define internal i128 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$14escape_unicode17h54b7fa22393eafc2E"(i32 %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = alloca %"core::char::EscapeUnicode", align 8
  %2 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %2)
  %_6 = or i32 %self, 1
  %3 = call i32 @llvm.ctlz.i32(i32 %_6, i1 false)
  store i32 %3, i32* %0, align 4
  %4 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %msb = sub i32 31, %4
  %ms_hex_digit = udiv i32 %msb, 4
  %_11 = zext i32 %ms_hex_digit to i64
  %5 = getelementptr inbounds %"core::char::EscapeUnicode", %"core::char::EscapeUnicode"* %1, i32 0, i32 1
  store i32 %self, i32* %5, align 8
  %6 = getelementptr inbounds %"core::char::EscapeUnicode", %"core::char::EscapeUnicode"* %1, i32 0, i32 2
  store i8 5, i8* %6, align 4
  %7 = bitcast %"core::char::EscapeUnicode"* %1 to i64*
  store i64 %_11, i64* %7, align 8
  %8 = bitcast %"core::char::EscapeUnicode"* %1 to i128*
  %9 = load i128, i128* %8, align 8
  ret i128 %9
}

; core::char::methods::<impl char>::is_ascii_digit
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$14is_ascii_digit17h3779a102f304fbaeE"(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = load i32, i32* %self, align 4, !range !80
  %_2 = icmp ule i32 48, %1
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %bb1, %start
  store i8 0, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %2 = load i32, i32* %self, align 4, !range !80
  %_3 = icmp ule i32 %2, 57
  br i1 %_3, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::char::methods::<impl char>::escape_debug_ext
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h421a16db17f353fdE"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %0, i32 %self, i24 %1) unnamed_addr #0 {
start:
  %2 = alloca i128, align 8
  %3 = alloca i128, align 8
  %_21 = alloca %"core::char::EscapeDefaultState", align 8
  %_20 = alloca %"core::char::EscapeDefault", align 8
  %_18 = alloca %"core::char::EscapeUnicode", align 8
  %_13 = alloca %"core::char::EscapeUnicode", align 8
  %_9 = alloca i8, align 1
  %init_state = alloca %"core::char::EscapeDefaultState", align 8
  %4 = alloca i24, align 4
  %args = alloca %"core::char::methods::EscapeDebugExtArgs", align 1
  store i24 %1, i24* %4, align 4
  %5 = bitcast %"core::char::methods::EscapeDebugExtArgs"* %args to i8*
  %6 = bitcast i24* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 4 %6, i64 3, i1 false)
  switch i32 %self, label %bb11 [
    i32 9, label %bb1
    i32 13, label %bb2
    i32 10, label %bb3
    i32 92, label %bb4
    i32 34, label %bb5
    i32 39, label %bb8
  ]

bb11:                                             ; preds = %bb7, %bb10, %start
  %7 = bitcast %"core::char::methods::EscapeDebugExtArgs"* %args to i8*
  %8 = load i8, i8* %7, align 1, !range !2
  %_10 = trunc i8 %8 to i1
  br i1 %_10, label %bb13, label %bb12

bb1:                                              ; preds = %start
  %9 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Backslash"*
  %10 = getelementptr inbounds %"core::char::EscapeDefaultState::Backslash", %"core::char::EscapeDefaultState::Backslash"* %9, i32 0, i32 1
  store i32 116, i32* %10, align 4
  %11 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 2, i32* %11, align 8
  br label %bb23

bb2:                                              ; preds = %start
  %12 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Backslash"*
  %13 = getelementptr inbounds %"core::char::EscapeDefaultState::Backslash", %"core::char::EscapeDefaultState::Backslash"* %12, i32 0, i32 1
  store i32 114, i32* %13, align 4
  %14 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 2, i32* %14, align 8
  br label %bb23

bb3:                                              ; preds = %start
  %15 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Backslash"*
  %16 = getelementptr inbounds %"core::char::EscapeDefaultState::Backslash", %"core::char::EscapeDefaultState::Backslash"* %15, i32 0, i32 1
  store i32 110, i32* %16, align 4
  %17 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 2, i32* %17, align 8
  br label %bb23

bb4:                                              ; preds = %start
  %18 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Backslash"*
  %19 = getelementptr inbounds %"core::char::EscapeDefaultState::Backslash", %"core::char::EscapeDefaultState::Backslash"* %18, i32 0, i32 1
  store i32 %self, i32* %19, align 4
  %20 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 2, i32* %20, align 8
  br label %bb23

bb5:                                              ; preds = %start
  %21 = getelementptr inbounds %"core::char::methods::EscapeDebugExtArgs", %"core::char::methods::EscapeDebugExtArgs"* %args, i32 0, i32 2
  %22 = load i8, i8* %21, align 1, !range !2
  %_5 = trunc i8 %22 to i1
  br i1 %_5, label %bb6, label %bb7

bb8:                                              ; preds = %start
  %23 = getelementptr inbounds %"core::char::methods::EscapeDebugExtArgs", %"core::char::methods::EscapeDebugExtArgs"* %args, i32 0, i32 1
  %24 = load i8, i8* %23, align 1, !range !2
  %_7 = trunc i8 %24 to i1
  br i1 %_7, label %bb9, label %bb10

bb10:                                             ; preds = %bb8
  br label %bb11

bb9:                                              ; preds = %bb8
  %25 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Backslash"*
  %26 = getelementptr inbounds %"core::char::EscapeDefaultState::Backslash", %"core::char::EscapeDefaultState::Backslash"* %25, i32 0, i32 1
  store i32 %self, i32* %26, align 4
  %27 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 2, i32* %27, align 8
  br label %bb23

bb23:                                             ; preds = %bb1, %bb2, %bb3, %bb4, %bb22, %bb20, %bb18, %bb6, %bb9
  %28 = bitcast %"core::char::EscapeDefaultState"* %_21 to i8*
  %29 = bitcast %"core::char::EscapeDefaultState"* %init_state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false)
  %30 = bitcast %"core::char::EscapeDefault"* %_20 to %"core::char::EscapeDefaultState"*
  %31 = bitcast %"core::char::EscapeDefaultState"* %30 to i8*
  %32 = bitcast %"core::char::EscapeDefaultState"* %_21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false)
  %33 = bitcast %"core::char::EscapeDebug"* %0 to %"core::char::EscapeDefault"*
  %34 = bitcast %"core::char::EscapeDefault"* %33 to i8*
  %35 = bitcast %"core::char::EscapeDefault"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false)
  ret void

bb7:                                              ; preds = %bb5
  br label %bb11

bb6:                                              ; preds = %bb5
  %36 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Backslash"*
  %37 = getelementptr inbounds %"core::char::EscapeDefaultState::Backslash", %"core::char::EscapeDefaultState::Backslash"* %36, i32 0, i32 1
  store i32 %self, i32* %37, align 4
  %38 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 2, i32* %38, align 8
  br label %bb23

bb12:                                             ; preds = %bb11
  store i8 0, i8* %_9, align 1
  br label %bb14

bb13:                                             ; preds = %bb11
; call core::char::methods::<impl char>::is_grapheme_extended
  %_11 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$20is_grapheme_extended17h3b07abefa78870c0E"(i32 %self)
  br label %bb15

bb15:                                             ; preds = %bb13
  %39 = zext i1 %_11 to i8
  store i8 %39, i8* %_9, align 1
  br label %bb14

bb14:                                             ; preds = %bb12, %bb15
  %40 = load i8, i8* %_9, align 1, !range !2
  %41 = trunc i8 %40 to i1
  br i1 %41, label %bb16, label %bb17

bb17:                                             ; preds = %bb14
; call core::unicode::printable::is_printable
  %_15 = call zeroext i1 @_ZN4core7unicode9printable12is_printable17h838e0e5b00b65dc0E(i32 %self)
  br label %bb19

bb16:                                             ; preds = %bb14
; call core::char::methods::<impl char>::escape_unicode
  %42 = call i128 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$14escape_unicode17h54b7fa22393eafc2E"(i32 %self)
  store i128 %42, i128* %3, align 8
  %43 = bitcast %"core::char::EscapeUnicode"* %_13 to i8*
  %44 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  br label %bb18

bb18:                                             ; preds = %bb16
  %45 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Unicode"*
  %46 = getelementptr inbounds %"core::char::EscapeDefaultState::Unicode", %"core::char::EscapeDefaultState::Unicode"* %45, i32 0, i32 1
  %47 = bitcast %"core::char::EscapeUnicode"* %46 to i8*
  %48 = bitcast %"core::char::EscapeUnicode"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 16, i1 false)
  %49 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 3, i32* %49, align 8
  br label %bb23

bb19:                                             ; preds = %bb17
  br i1 %_15, label %bb20, label %bb21

bb21:                                             ; preds = %bb19
; call core::char::methods::<impl char>::escape_unicode
  %50 = call i128 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$14escape_unicode17h54b7fa22393eafc2E"(i32 %self)
  store i128 %50, i128* %2, align 8
  %51 = bitcast %"core::char::EscapeUnicode"* %_18 to i8*
  %52 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 16, i1 false)
  br label %bb22

bb20:                                             ; preds = %bb19
  %53 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Char"*
  %54 = getelementptr inbounds %"core::char::EscapeDefaultState::Char", %"core::char::EscapeDefaultState::Char"* %53, i32 0, i32 1
  store i32 %self, i32* %54, align 4
  %55 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 1, i32* %55, align 8
  br label %bb23

bb22:                                             ; preds = %bb21
  %56 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Unicode"*
  %57 = getelementptr inbounds %"core::char::EscapeDefaultState::Unicode", %"core::char::EscapeDefaultState::Unicode"* %56, i32 0, i32 1
  %58 = bitcast %"core::char::EscapeUnicode"* %57 to i8*
  %59 = bitcast %"core::char::EscapeUnicode"* %_18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 16, i1 false)
  %60 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 3, i32* %60, align 8
  br label %bb23
}

; core::char::methods::<impl char>::is_grapheme_extended
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$20is_grapheme_extended17h3b07abefa78870c0E"(i32 %self) unnamed_addr #0 {
start:
; call core::unicode::unicode_data::grapheme_extend::lookup
  %0 = call zeroext i1 @_ZN4core7unicode12unicode_data15grapheme_extend6lookup17hd79b3282daeb95c7E(i32 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::char::methods::<impl char>::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817h820a382be7518970E"(i32 %self) unnamed_addr #0 {
start:
  %0 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %0)
; call core::char::methods::len_utf8
  %1 = call i64 @_ZN4core4char7methods8len_utf817heb2c55bc61278cceE(i32 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4char7methods8len_utf817heb2c55bc61278cceE(i32 %code) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_2 = icmp ult i32 %code, 128
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_4 = icmp ult i32 %code, 2048
  br i1 %_4, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb1
  %1 = load i64, i64* %0, align 8
  ret i64 %1

bb4:                                              ; preds = %bb2
  %_6 = icmp ult i32 %code, 65536
  br i1 %_6, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  store i64 2, i64* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  br label %bb9

bb6:                                              ; preds = %bb4
  store i64 4, i64* %0, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
  store i64 3, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  br label %bb8
}

; core::hint::unreachable_unchecked
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define internal void @_ZN4core4hint21unreachable_unchecked17hea02cab2d304a246E() unnamed_addr #4 {
start:
  unreachable
}

; core::hint::black_box
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4hint9black_box17hd6bd0c80ec9af505E() unnamed_addr #0 {
start:
  call void asm sideeffect "", "r,~{memory}"({}* undef), !srcloc !81
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h35992a76360bb397E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hf11f59e49dbc7b8cE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h19802dd0cab66da6E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h112180ad17a6ced4E"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::exact_size::ExactSizeIterator::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17hb089bc151c2e0112E(%"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_22 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_8 = alloca { i64, i64 }, align 8
  %_5 = alloca { i64*, i64* }, align 8
  %_3 = alloca { i64, { i64, i64 } }, align 8
  %upper = alloca { i64, i64 }, align 8
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hb88b0ce347d580e0E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_3, %"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast { i64, { i64, i64 } }* %_3 to i64*
  %lower = load i64, i64* %0, align 8
  %1 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %_3, i32 0, i32 1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8, !range !18
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %upper, i32 0, i32 0
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %upper, i32 0, i32 1
  store i64 %5, i64* %7, align 8
  %8 = bitcast { i64, i64 }* %_8 to %"core::option::Option<usize>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %8, i32 0, i32 1
  store i64 %lower, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %_8 to i64*
  store i64 1, i64* %10, align 8
  %11 = bitcast { i64*, i64* }* %_5 to { i64, i64 }**
  store { i64, i64 }* %upper, { i64, i64 }** %11, align 8
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %13 = bitcast i64** %12 to { i64, i64 }**
  store { i64, i64 }* %_8, { i64, i64 }** %13, align 8
  %14 = bitcast { i64*, i64* }* %_5 to { i64, i64 }**
  %left_val = load { i64, i64 }*, { i64, i64 }** %14, align 8, !nonnull !20
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %16 = bitcast i64** %15 to { i64, i64 }**
  %right_val = load { i64, i64 }*, { i64, i64 }** %16, align 8, !nonnull !20
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_13 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h1f096f5326b29345E"({ i64, i64 }* align 8 dereferenceable(16) %left_val, { i64, i64 }* align 8 dereferenceable(16) %right_val)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_12 = xor i1 %_13, true
  br i1 %_12, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  ret i64 %lower

bb3:                                              ; preds = %bb2
  store i8 0, i8* %kind, align 1
  %17 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_22 to {}**
  store {}* null, {}** %17, align 8
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17he0d6241321a0e753E(i8 0, { i64, i64 }* align 8 dereferenceable(16) %left_val, { i64, i64 }* align 8 dereferenceable(16) %right_val, %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %_22, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1377 to %"core::panic::location::Location"*)) #19
  unreachable
}

; core::iter::traits::iterator::Iterator::all
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h86ba4c508979f985E({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
; call core::iter::traits::iterator::Iterator::all::check
  call void @_ZN4core4iter6traits8iterator8Iterator3all5check17h95ce6e8c19655165E()
  br label %bb1

bb1:                                              ; preds = %start
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::try_fold
  %0 = call zeroext i1 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17hbc68546bfb4c941aE"({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %1 = zext i1 %0 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %2 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h85e5bdb20f909e5bE"(i8* align 1 dereferenceable(1) %_4, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc366, i32 0, i32 0, i32 0))
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %2
}

; core::iter::traits::iterator::Iterator::all::check
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3all5check17h95ce6e8c19655165E() unnamed_addr #0 {
start:
  %0 = alloca %"[closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]"*
  ret void
}

; core::iter::traits::iterator::Iterator::all::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hd7e01bdd084c0b60E"(%"[closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]"* nonnull align 1 %_1, i8 %x) unnamed_addr #0 {
start:
  %_6 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_5 = bitcast %"[closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]"* %_1 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]"*
  store i8 %x, i8* %_6, align 1
  %1 = load i8, i8* %_6, align 1
; call proc_macro2::fallback::validate_ident::{{closure}}
  %_4 = call zeroext i1 @"_ZN11proc_macro28fallback14validate_ident28_$u7b$$u7b$closure$u7d$$u7d$17h2149b127399abbc4E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]"* nonnull align 1 %_5, i8 %1)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i8, i8* %0, align 1, !range !2
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3map17h2bb23c731e613fbdE(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture sret(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>") dereferenceable(40) %0, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_3 = alloca %"alloc::vec::drain::Drain<proc_macro::TokenTree>", align 8
  %1 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %_3 to i8*
  %2 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hbf0a7163d6cbbe9bE"(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture sret(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>") dereferenceable(40) %0, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture dereferenceable(40) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17ha282dd18a33b7c7eE(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::rev::Rev<T>::new
  %0 = call { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17hca00e2592ce1067eE"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator4fold17h77b2faeb55543b06E(i32 %0, i32** align 8 dereferenceable(8) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i32, align 4
  %3 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca %"proc_macro::TokenStream", align 4
  %_10 = alloca { {}, %"proc_macro::TokenStream" }, align 4
  %x = alloca %"proc_macro::TokenStream", align 4
  %_4 = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  %f = alloca i32**, align 8
  %4 = alloca i32, align 4
  %self = alloca %"core::iter::sources::once::Once<proc_macro::TokenStream>", align 4
  store i32 %0, i32* %4, align 4
  %5 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %self to i8*
  %6 = bitcast i32* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  store i32** %1, i32*** %f, align 8
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_13, align 1
  br label %bb1

bb1:                                              ; preds = %bb4, %start
; invoke <core::iter::sources::once::Once<T> as core::iter::traits::iterator::Iterator>::next
  %7 = invoke i32 @"_ZN99_$LT$core..iter..sources..once..Once$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h30e844c8a3f16b73E"(%"core::iter::sources::once::Once<proc_macro::TokenStream>"* align 4 dereferenceable(4) %self)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i32 %7, i32* %2, align 4
  %8 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %_4 to i8*
  %9 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 4, i1 false)
  %10 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %_4 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %_6 = select i1 %12, i64 0, i64 1
  %13 = icmp eq i64 %_6, 1
  br i1 %13, label %bb3, label %bb5

bb13:                                             ; preds = %cleanup
  %14 = load i8, i8* %_13, align 1, !range !2
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb12, label %bb9

cleanup:                                          ; preds = %bb3, %bb5, %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb13

bb3:                                              ; preds = %bb2
  %21 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %_4 to %"core::option::Option<proc_macro::TokenStream>::Some"*
  %22 = bitcast %"core::option::Option<proc_macro::TokenStream>::Some"* %21 to %"proc_macro::TokenStream"*
  %23 = bitcast %"proc_macro::TokenStream"* %x to i8*
  %24 = bitcast %"proc_macro::TokenStream"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 4, i1 false)
  store i8 0, i8* %_13, align 1
  %25 = bitcast %"proc_macro::TokenStream"* %_12 to i8*
  %26 = bitcast %"proc_macro::TokenStream"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 4, i1 false)
  %27 = bitcast { {}, %"proc_macro::TokenStream" }* %_10 to {}*
  %28 = bitcast { {}, %"proc_macro::TokenStream" }* %_10 to %"proc_macro::TokenStream"*
  %29 = bitcast %"proc_macro::TokenStream"* %28 to i8*
  %30 = bitcast %"proc_macro::TokenStream"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 4, i1 false)
  %31 = bitcast { {}, %"proc_macro::TokenStream" }* %_10 to {}*
  %32 = bitcast { {}, %"proc_macro::TokenStream" }* %_10 to %"proc_macro::TokenStream"*
  %33 = bitcast %"proc_macro::TokenStream"* %32 to i32*
  %34 = load i32, i32* %33, align 4
; invoke core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  invoke void @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17hdeabacbe1aa23f6eE"(i32*** align 8 dereferenceable(8) %f, i32 %34)
          to label %bb4 unwind label %cleanup

bb5:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::option::Option<proc_macro::TokenStream>>
  invoke void @"_ZN4core3ptr72drop_in_place$LT$core..option..Option$LT$proc_macro..TokenStream$GT$$GT$17h28cfc80b7f647751E"(%"core::option::Option<proc_macro::TokenStream>"* %_4)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_13, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::ptr::drop_in_place<core::iter::sources::once::Once<proc_macro::TokenStream>>
  call void @"_ZN4core3ptr83drop_in_place$LT$core..iter..sources..once..Once$LT$proc_macro..TokenStream$GT$$GT$17h570fc2ba36075531E"(%"core::iter::sources::once::Once<proc_macro::TokenStream>"* %self)
  br label %bb8

bb8:                                              ; preds = %bb7
  ret void

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_13, align 1
  br label %bb1

bb9:                                              ; preds = %bb12, %bb13
  br label %bb10

bb12:                                             ; preds = %bb13
  br label %bb9

bb10:                                             ; preds = %bb9
; call core::ptr::drop_in_place<core::iter::sources::once::Once<proc_macro::TokenStream>>
  call void @"_ZN4core3ptr83drop_in_place$LT$core..iter..sources..once..Once$LT$proc_macro..TokenStream$GT$$GT$17h570fc2ba36075531E"(%"core::iter::sources::once::Once<proc_macro::TokenStream>"* %self) #18
  br label %bb11

bb11:                                             ; preds = %bb10
  %35 = bitcast { i8*, i32 }* %3 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator4fold17h9e03b8287c7c327fE(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture dereferenceable(40) %self, i32* align 4 dereferenceable(4) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca %"proc_macro::TokenTree", align 4
  %_10 = alloca { {}, %"proc_macro::TokenTree" }, align 4
  %x = alloca %"proc_macro::TokenTree", align 4
  %_4 = alloca %"core::option::Option<proc_macro::TokenTree>", align 4
  %f = alloca i32*, align 8
  store i32* %0, i32** %f, align 8
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_13, align 1
  br label %bb1

bb1:                                              ; preds = %bb4, %start
; invoke <alloc::vec::drain::Drain<T,A> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke i64 @"_ZN96_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a3915dbdf075b7eE"(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* align 8 dereferenceable(40) %self)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i64 %3, i64* %1, align 8
  %4 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_4 to i8*
  %5 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 8, i1 false)
  %6 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_4 to i32*
  %7 = load i32, i32* %6, align 4, !range !31
  %8 = sub i32 %7, 4
  %9 = icmp eq i32 %8, 0
  %_6 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_6, 1
  br i1 %10, label %bb3, label %bb5

bb13:                                             ; preds = %cleanup
  %11 = load i8, i8* %_13, align 1, !range !2
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb12, label %bb9

cleanup:                                          ; preds = %bb3, %bb5, %bb1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb13

bb3:                                              ; preds = %bb2
  %18 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_4 to %"core::option::Option<proc_macro::TokenTree>::Some"*
  %19 = bitcast %"core::option::Option<proc_macro::TokenTree>::Some"* %18 to %"proc_macro::TokenTree"*
  %20 = bitcast %"proc_macro::TokenTree"* %x to i8*
  %21 = bitcast %"proc_macro::TokenTree"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %21, i64 8, i1 false)
  store i8 0, i8* %_13, align 1
  %22 = bitcast %"proc_macro::TokenTree"* %_12 to i8*
  %23 = bitcast %"proc_macro::TokenTree"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 8, i1 false)
  %24 = bitcast { {}, %"proc_macro::TokenTree" }* %_10 to {}*
  %25 = bitcast { {}, %"proc_macro::TokenTree" }* %_10 to %"proc_macro::TokenTree"*
  %26 = bitcast %"proc_macro::TokenTree"* %25 to i8*
  %27 = bitcast %"proc_macro::TokenTree"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 8, i1 false)
  %28 = bitcast { {}, %"proc_macro::TokenTree" }* %_10 to {}*
  %29 = bitcast { {}, %"proc_macro::TokenTree" }* %_10 to %"proc_macro::TokenTree"*
  %30 = bitcast %"proc_macro::TokenTree"* %29 to i64*
  %31 = load i64, i64* %30, align 4
; invoke core::iter::adapters::map::map_fold::{{closure}}
  invoke void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h551f70bdf08fb781E"(i32** align 8 dereferenceable(8) %f, i64 %31)
          to label %bb4 unwind label %cleanup

bb5:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::option::Option<proc_macro::TokenTree>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$proc_macro..TokenTree$GT$$GT$17hd9efd9c900ae0eb9E"(%"core::option::Option<proc_macro::TokenTree>"* %_4)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_13, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::ptr::drop_in_place<alloc::vec::drain::Drain<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr74drop_in_place$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$GT$17h20282709377aa8a6E"(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %self)
  br label %bb8

bb8:                                              ; preds = %bb7
  ret void

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_13, align 1
  br label %bb1

bb9:                                              ; preds = %bb12, %bb13
  br label %bb10

bb12:                                             ; preds = %bb13
  br label %bb9

bb10:                                             ; preds = %bb9
; call core::ptr::drop_in_place<alloc::vec::drain::Drain<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr74drop_in_place$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$GT$17h20282709377aa8a6E"(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %self) #18
  br label %bb11

bb11:                                             ; preds = %bb10
  %32 = bitcast { i8*, i32 }* %2 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator4fold17hf556f3ce39f83291E(%"core::char::EscapeDebug"* noalias nocapture dereferenceable(24) %self, i64* align 8 dereferenceable(24) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_10 = alloca i32, align 4
  %_4 = alloca i32, align 4
  %f = alloca i64*, align 8
  store i64* %0, i64** %f, align 8
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_13, align 1
  br label %bb1

bb1:                                              ; preds = %bb4, %start
; invoke <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next
  %2 = invoke i32 @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h27e5bcc26268a1b2E"(%"core::char::EscapeDebug"* align 8 dereferenceable(24) %self)
          to label %bb2 unwind label %cleanup, !range !22

bb2:                                              ; preds = %bb1
  store i32 %2, i32* %_4, align 4
  %3 = load i32, i32* %_4, align 4, !range !22
  %4 = sub i32 %3, 1114112
  %5 = icmp eq i32 %4, 0
  %_6 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_6, 1
  br i1 %6, label %bb3, label %bb5

bb13:                                             ; preds = %cleanup
  %7 = load i8, i8* %_13, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb12, label %bb9

cleanup:                                          ; preds = %bb3, %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb13

bb3:                                              ; preds = %bb2
  %x = load i32, i32* %_4, align 4, !range !80
  store i8 0, i8* %_13, align 1
  %14 = bitcast i32* %_10 to {}*
  store i32 %x, i32* %_10, align 4
  %15 = load i32, i32* %_10, align 4, !range !80
; invoke core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  invoke void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h504d8c1f74cf56c7E"(i64** align 8 dereferenceable(8) %f, i32 %15)
          to label %bb4 unwind label %cleanup

bb5:                                              ; preds = %bb2
  br label %bb6

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_13, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  ret void

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_13, align 1
  br label %bb1

bb9:                                              ; preds = %bb12, %bb13
  br label %bb10

bb12:                                             ; preds = %bb13
  br label %bb9

bb10:                                             ; preds = %bb9
  br label %bb11

bb11:                                             ; preds = %bb10
  %16 = bitcast { i8*, i32 }* %1 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; core::iter::traits::iterator::Iterator::take
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator4take17h39af3ab0e7860beaE(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>") dereferenceable(32) %0, %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* noalias nocapture dereferenceable(24) %self, i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>", align 8
  %1 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %_3 to i8*
  %2 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call core::iter::adapters::take::Take<I>::new
  call void @"_ZN4core4iter8adapters4take13Take$LT$I$GT$3new17h86bd623dbfe6618fE"(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>") dereferenceable(32) %0, %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* noalias nocapture dereferenceable(24) %_3, i64 %n)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::take
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator4take17h91876bb2c83db02fE(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>") dereferenceable(32) %0, %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* noalias nocapture dereferenceable(24) %self, i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>", align 8
  %1 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* %_3 to i8*
  %2 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call core::iter::adapters::take::Take<I>::new
  call void @"_ZN4core4iter8adapters4take13Take$LT$I$GT$3new17h226b692f0d6506c0E"(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>") dereferenceable(32) %0, %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* noalias nocapture dereferenceable(24) %_3, i64 %n)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::chain
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator5chain17hca449e62a3322f46E(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>") dereferenceable(48) %0, i32 %1, %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture dereferenceable(40) %other) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_5 = alloca %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>", align 8
  %_4 = alloca %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>", align 8
  %_3 = alloca %"core::iter::sources::once::Once<proc_macro::TokenStream>", align 4
  %3 = alloca i32, align 4
  %self = alloca %"core::iter::sources::once::Once<proc_macro::TokenStream>", align 4
  store i32 %1, i32* %3, align 4
  %4 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %self to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
  %6 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %_3 to i8*
  %7 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %_5 to i8*
  %9 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %other to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 40, i1 false)
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h753141ec08893293E"(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture sret(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>") dereferenceable(40) %_4, %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture dereferenceable(40) %_5)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
  %10 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %_3 to i32*
  %11 = load i32, i32* %10, align 4
; invoke core::iter::adapters::chain::Chain<A,B>::new
  invoke void @"_ZN4core4iter8adapters5chain18Chain$LT$A$C$B$GT$3new17h4e327af52e4224a0E"(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>") dereferenceable(48) %0, i32 %11, %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture dereferenceable(40) %_4)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %12 = load i8, i8* %_6, align 1, !range !2
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_6, align 1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %19 = bitcast { i8*, i32 }* %2 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

bb4:                                              ; preds = %bb5
; call core::ptr::drop_in_place<core::iter::sources::once::Once<proc_macro::TokenStream>>
  call void @"_ZN4core3ptr83drop_in_place$LT$core..iter..sources..once..Once$LT$proc_macro..TokenStream$GT$$GT$17h570fc2ba36075531E"(%"core::iter::sources::once::Once<proc_macro::TokenStream>"* %_3) #18
  br label %bb3
}

; core::iter::traits::iterator::Iterator::copied
; Function Attrs: nonlazybind uwtable
define { i8*, i8* } @_ZN4core4iter6traits8iterator8Iterator6copied17hcaf2a6e38404df2bE(i8* nonnull %self.0, i8* %self.1) unnamed_addr #1 {
start:
; call core::iter::adapters::copied::Copied<I>::new
  %0 = call { i8*, i8* } @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h4be26a2873e22cc7E"(i8* nonnull %self.0, i8* %self.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core4iter6traits8iterator8Iterator7collect17hbfd2d01ca989b7e5E(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture dereferenceable(48) %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_2 = alloca %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", align 8
  %1 = alloca %"proc_macro::TokenStream", align 4
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %_2 to i8*
  %3 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 48, i1 false)
; call <proc_macro::TokenStream as core::iter::traits::collect::FromIterator<proc_macro::TokenStream>>::from_iter
  %4 = call i32 @"_ZN116_$LT$proc_macro..TokenStream$u20$as$u20$core..iter..traits..collect..FromIterator$LT$proc_macro..TokenStream$GT$$GT$9from_iter17hc0cc5efa9700f3f3E"(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture dereferenceable(48) %_2)
  store i32 %4, i32* %0, align 4
  %5 = bitcast %"proc_macro::TokenStream"* %1 to i8*
  %6 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"proc_macro::TokenStream"* %1 to i32*
  %8 = load i32, i32* %7, align 4
  ret i32 %8
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8for_each17h517f0ea880e62e58E(%"core::char::EscapeDebug"* noalias nocapture dereferenceable(24) %self, i64* align 8 dereferenceable(24) %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  %_4 = alloca %"core::char::EscapeDebug", align 8
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_8, align 1
  %1 = bitcast %"core::char::EscapeDebug"* %_4 to i8*
  %2 = bitcast %"core::char::EscapeDebug"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; invoke core::iter::traits::iterator::Iterator::for_each::call
  %_6 = invoke align 8 dereferenceable(24) i64* @_ZN4core4iter6traits8iterator8Iterator8for_each4call17he1bdb971e17f6155E(i64* align 8 dereferenceable(24) %f)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
; invoke core::iter::traits::iterator::Iterator::fold
  invoke void @_ZN4core4iter6traits8iterator8Iterator4fold17hf556f3ce39f83291E(%"core::char::EscapeDebug"* noalias nocapture dereferenceable(24) %_4, i64* align 8 dereferenceable(24) %_6)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %3 = load i8, i8* %_8, align 1, !range !2
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_8, align 1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %10 = bitcast { i8*, i32 }* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8for_each17ha33190d401dfceffE(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture dereferenceable(48) %self, i32* align 4 dereferenceable(4) %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  %_4 = alloca %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", align 8
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_8, align 1
  %1 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %_4 to i8*
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false)
; invoke core::iter::traits::iterator::Iterator::for_each::call
  %_6 = invoke align 4 dereferenceable(4) i32* @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h4f48b98dec3fd395E(i32* align 4 dereferenceable(4) %f)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
; invoke <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold
  invoke void @"_ZN106_$LT$core..iter..adapters..chain..Chain$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h0921f328f25395c7E"(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture dereferenceable(48) %_4, i32* align 4 dereferenceable(4) %_6)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %3 = load i8, i8* %_8, align 1, !range !2
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_8, align 1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %10 = bitcast { i8*, i32 }* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb4:                                              ; preds = %bb5
; call core::ptr::drop_in_place<core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>,core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>,<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from>>>
  call void @"_ZN4core3ptr319drop_in_place$LT$core..iter..adapters..chain..Chain$LT$core..iter..sources..once..Once$LT$proc_macro..TokenStream$GT$$C$core..iter..adapters..map..Map$LT$alloc..vec..drain..Drain$LT$proc_macro..TokenTree$GT$$C$$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$..from$GT$$GT$$GT$17h27188bb8f9556545E"(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %_4) #18
  br label %bb3
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable(4) i32* @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h4f48b98dec3fd395E(i32* align 4 dereferenceable(4) %f) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  store i32* %f, i32** %0, align 8
  %1 = load i32*, i32** %0, align 8, !nonnull !20
  ret i32* %1
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(24) i64* @_ZN4core4iter6traits8iterator8Iterator8for_each4call17he1bdb971e17f6155E(i64* align 8 dereferenceable(24) %f) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  store i64* %f, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !20
  ret i64* %1
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h504d8c1f74cf56c7E"(i64** align 8 dereferenceable(8) %_1, i32 %item) unnamed_addr #0 {
start:
  %_5 = alloca i32, align 4
  store i32 %item, i32* %_5, align 4
  %0 = load i32, i32* %_5, align 4, !range !80
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h835f372686f77764E"(i64** align 8 dereferenceable(8) %_1, i32 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h807c6b294bd52337E"(i32** align 8 dereferenceable(8) %_1, i32 %0) unnamed_addr #0 {
start:
  %_6 = alloca %"proc_macro::TokenStream", align 4
  %_5 = alloca { %"proc_macro::TokenStream" }, align 4
  %1 = alloca i32, align 4
  %item = alloca %"proc_macro::TokenStream", align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %"proc_macro::TokenStream"* %item to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %4 = bitcast %"proc_macro::TokenStream"* %_6 to i8*
  %5 = bitcast %"proc_macro::TokenStream"* %item to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast { %"proc_macro::TokenStream" }* %_5 to %"proc_macro::TokenStream"*
  %7 = bitcast %"proc_macro::TokenStream"* %6 to i8*
  %8 = bitcast %"proc_macro::TokenStream"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast { %"proc_macro::TokenStream" }* %_5 to %"proc_macro::TokenStream"*
  %10 = bitcast %"proc_macro::TokenStream"* %9 to i32*
  %11 = load i32, i32* %10, align 4
; call <proc_macro::TokenStream as core::iter::traits::collect::FromIterator<proc_macro::TokenStream>>::from_iter::{{closure}}
  call void @"_ZN116_$LT$proc_macro..TokenStream$u20$as$u20$core..iter..traits..collect..FromIterator$LT$proc_macro..TokenStream$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17h81933a2671fc7b40E"(i32** align 8 dereferenceable(8) %_1, i32 %11)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::peekable
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8peekable17h265198a04e813f11E(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* noalias nocapture sret(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>") dereferenceable(24) %0, i8* nonnull %self.0, i8* %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::peekable::Peekable<I>::new
  call void @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$3new17h0077afd50a9c22d8E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* noalias nocapture sret(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>") dereferenceable(24) %0, i8* nonnull %self.0, i8* %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::peekable
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8peekable17hb5d3104d4ec7e3a7E(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* noalias nocapture sret(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>") dereferenceable(40) %0, %"core::str::iter::CharIndices"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = alloca %"core::str::iter::CharIndices", align 8
  %1 = bitcast %"core::str::iter::CharIndices"* %_2 to i8*
  %2 = bitcast %"core::str::iter::CharIndices"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call core::iter::adapters::peekable::Peekable<I>::new
  call void @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$3new17h4beac3442b451430E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* noalias nocapture sret(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>") dereferenceable(40) %0, %"core::str::iter::CharIndices"* noalias nocapture dereferenceable(24) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hda46dcf243e1bc6cE({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i8*, align 8
  %_10 = alloca i8, align 1
  %_5 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %f = alloca %"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]>::{closure#0}]", align 1
  store i8 0, i8* %_21, align 1
  store i8 1, i8* %_21, align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6c4bacd36189c2a1E"({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i8* %2, i8** %_5, align 8
  %3 = bitcast i8** %_5 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_7 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_7, 1
  br i1 %6, label %bb3, label %bb10

bb17:                                             ; preds = %cleanup
  %7 = load i8, i8* %_21, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb16, label %bb14

cleanup:                                          ; preds = %bb8, %bb4, %bb3, %bb11, %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb17

bb3:                                              ; preds = %bb2
  %x = load i8*, i8** %_5, align 8, !nonnull !20
  store i8 0, i8* %_21, align 1
  %14 = bitcast i8** %_13 to {}*
  store i8* %x, i8** %_13, align 8
  %15 = load i8*, i8** %_13, align 8, !nonnull !20
; invoke core::iter::adapters::copied::copy_try_fold::{{closure}}
  %_11 = invoke zeroext i1 @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h54219f61581d8edbE"(%"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]>::{closure#0}]"* nonnull align 1 %f, i8* align 1 dereferenceable(1) %15)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %16 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hf961b8663e646f07E"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb13:                                             ; preds = %bb9, %bb12
  %18 = load i8, i8* %1, align 1, !range !2
  %19 = trunc i8 %18 to i1
  ret i1 %19

bb4:                                              ; preds = %bb3
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %20 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd995fa570b1ca111E"(i1 zeroext %_11)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %_10, align 1
  %22 = load i8, i8* %_10, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  store i8 1, i8* %_21, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %24 = invoke zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h1f0e0022b36d066fE"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  br label %bb15

bb16:                                             ; preds = %bb17
  br label %bb14

bb15:                                             ; preds = %bb14
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::iter::traits::iterator::Iterator::enumerate
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h4c5ec0b4ac9d9853E(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>") dereferenceable(24) %0, i64* nonnull %self.0, i64* %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::enumerate::Enumerate<I>::new
  call void @"_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h1a20318db9ed17dfE"(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>") dereferenceable(24) %0, i64* nonnull %self.0, i64* %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::enumerate
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h9e4c01dcad3e2ef7E(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>") dereferenceable(24) %0, i32* nonnull %self.0, i32* %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::enumerate::Enumerate<I>::new
  call void @"_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h1b77840f64c54d22E"(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>") dereferenceable(24) %0, i32* nonnull %self.0, i32* %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::enumerate
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hefecad122e98defcE(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>") dereferenceable(24) %0, i8* nonnull %self.0, i8* %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::enumerate::Enumerate<I>::new
  call void @"_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h3697e4056357a302E"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>") dereferenceable(24) %0, i8* nonnull %self.0, i8* %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9size_hint17hda17a0e4a2da2cb6E({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"proc_macro::token_stream::IntoIter"* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %_2 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_2 to i64*
  store i64 0, i64* %1, align 8
  %2 = bitcast { i64, { i64, i64 } }* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !range !18
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %7, i64* %9, align 8
  ret void
}

; core::iter::sources::once::once
; Function Attrs: nonlazybind uwtable
define i32 @_ZN4core4iter7sources4once4once17heba0bc3abb166515E(i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_4 = alloca %"proc_macro::TokenStream", align 4
  %_3 = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  %_2 = alloca %"core::option::IntoIter<proc_macro::TokenStream>", align 4
  %2 = alloca %"core::iter::sources::once::Once<proc_macro::TokenStream>", align 4
  %3 = alloca i32, align 4
  %value = alloca %"proc_macro::TokenStream", align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %"proc_macro::TokenStream"* %value to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %"proc_macro::TokenStream"* %_4 to i8*
  %7 = bitcast %"proc_macro::TokenStream"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %_3 to %"core::option::Option<proc_macro::TokenStream>::Some"*
  %9 = bitcast %"core::option::Option<proc_macro::TokenStream>::Some"* %8 to %"proc_macro::TokenStream"*
  %10 = bitcast %"proc_macro::TokenStream"* %9 to i8*
  %11 = bitcast %"proc_macro::TokenStream"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 4, i1 false)
  %12 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %_3 to i32*
  %13 = load i32, i32* %12, align 4
; call <core::option::Option<T> as core::iter::traits::collect::IntoIterator>::into_iter
  %14 = call i32 @"_ZN91_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb359ab37ea35cc24E"(i32 %13)
  store i32 %14, i32* %1, align 4
  %15 = bitcast %"core::option::IntoIter<proc_macro::TokenStream>"* %_2 to i8*
  %16 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %17 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %2 to %"core::option::IntoIter<proc_macro::TokenStream>"*
  %18 = bitcast %"core::option::IntoIter<proc_macro::TokenStream>"* %17 to i8*
  %19 = bitcast %"core::option::IntoIter<proc_macro::TokenStream>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 4, i1 false)
  %20 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %2 to i32*
  %21 = load i32, i32* %20, align 4
  ret i32 %21
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hbf0a7163d6cbbe9bE"(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture sret(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>") dereferenceable(40) %0, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture dereferenceable(40) %iter) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::vec::drain::Drain<proc_macro::TokenTree>", align 8
  %1 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %_3 to i8*
  %2 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  %3 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %0 to %"alloc::vec::drain::Drain<proc_macro::TokenTree>"*
  %4 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %3 to i8*
  %5 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false)
  %6 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %0 to {}*
  ret void
}

; core::iter::adapters::map::map_fold
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @_ZN4core4iter8adapters3map8map_fold17h5162c7c767d5359fE(i32* align 4 dereferenceable(4) %g) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
  store i32* %g, i32** %0, align 8
  %1 = bitcast i32** %0 to {}*
  %2 = load i32*, i32** %0, align 8, !nonnull !20
  ret i32* %2
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h551f70bdf08fb781E"(i32** align 8 dereferenceable(8) %_1, i64 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i32, align 4
  %2 = alloca { i8*, i32 }, align 8
  %_11 = alloca i8, align 1
  %_10 = alloca %"proc_macro::TokenTree", align 4
  %_9 = alloca { %"proc_macro::TokenTree" }, align 4
  %_7 = alloca %"proc_macro::TokenStream", align 4
  %_5 = alloca { {}, %"proc_macro::TokenStream" }, align 4
  %3 = alloca i64, align 8
  %elt = alloca %"proc_macro::TokenTree", align 4
  store i64 %0, i64* %3, align 8
  %4 = bitcast %"proc_macro::TokenTree"* %elt to i8*
  %5 = bitcast i64* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 8, i1 false)
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %_8 = bitcast i32** %_1 to {}*
  %6 = bitcast %"proc_macro::TokenTree"* %_10 to i8*
  %7 = bitcast %"proc_macro::TokenTree"* %elt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 8, i1 false)
  %8 = bitcast { %"proc_macro::TokenTree" }* %_9 to %"proc_macro::TokenTree"*
  %9 = bitcast %"proc_macro::TokenTree"* %8 to i8*
  %10 = bitcast %"proc_macro::TokenTree"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 8, i1 false)
  %11 = bitcast { %"proc_macro::TokenTree" }* %_9 to %"proc_macro::TokenTree"*
  %12 = bitcast %"proc_macro::TokenTree"* %11 to i64*
  %13 = load i64, i64* %12, align 4
; invoke core::ops::function::FnMut::call_mut
  %14 = invoke i32 @_ZN4core3ops8function5FnMut8call_mut17hf24f377f7f5ab732E({}* nonnull align 1 %_8, i64 %13)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i32 %14, i32* %1, align 4
  %15 = bitcast %"proc_macro::TokenStream"* %_7 to i8*
  %16 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 4, i1 false)
  store i8 0, i8* %_11, align 1
  %17 = bitcast { {}, %"proc_macro::TokenStream" }* %_5 to {}*
  %18 = bitcast { {}, %"proc_macro::TokenStream" }* %_5 to %"proc_macro::TokenStream"*
  %19 = bitcast %"proc_macro::TokenStream"* %18 to i8*
  %20 = bitcast %"proc_macro::TokenStream"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 4, i1 false)
  %21 = bitcast { {}, %"proc_macro::TokenStream" }* %_5 to {}*
  %22 = bitcast { {}, %"proc_macro::TokenStream" }* %_5 to %"proc_macro::TokenStream"*
  %23 = bitcast %"proc_macro::TokenStream"* %22 to i32*
  %24 = load i32, i32* %23, align 4
; invoke core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  invoke void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h807c6b294bd52337E"(i32** align 8 dereferenceable(8) %_1, i32 %24)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %25 = load i8, i8* %_11, align 1, !range !2
  %26 = trunc i8 %25 to i1
  br i1 %26, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_11, align 1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %32 = bitcast { i8*, i32 }* %2 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::adapters::rev::Rev<T>::new
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17hca00e2592ce1067eE"(i64 %iter.0, i64 %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::iter::adapters::take::Take<I>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters4take13Take$LT$I$GT$3new17h226b692f0d6506c0E"(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>") dereferenceable(32) %0, %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* noalias nocapture dereferenceable(24) %iter, i64 %n) unnamed_addr #1 {
start:
  %_3 = alloca %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>", align 8
  %1 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* %_3 to i8*
  %2 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* %0 to %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"*
  %4 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* %3 to i8*
  %5 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  %6 = getelementptr inbounds %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>", %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* %0, i32 0, i32 1
  store i64 %n, i64* %6, align 8
  ret void
}

; core::iter::adapters::take::Take<I>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters4take13Take$LT$I$GT$3new17h86bd623dbfe6618fE"(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>") dereferenceable(32) %0, %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* noalias nocapture dereferenceable(24) %iter, i64 %n) unnamed_addr #1 {
start:
  %_3 = alloca %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>", align 8
  %1 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %_3 to i8*
  %2 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* %0 to %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"*
  %4 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %3 to i8*
  %5 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  %6 = getelementptr inbounds %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>", %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* %0, i32 0, i32 1
  store i64 %n, i64* %6, align 8
  ret void
}

; core::iter::adapters::chain::Chain<A,B>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters5chain18Chain$LT$A$C$B$GT$3new17h4e327af52e4224a0E"(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>") dereferenceable(48) %0, i32 %1, %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture dereferenceable(40) %b) unnamed_addr #1 {
start:
  %_6 = alloca %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>", align 8
  %_5 = alloca %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", align 8
  %_4 = alloca %"core::iter::sources::once::Once<proc_macro::TokenStream>", align 4
  %_3 = alloca %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>", align 4
  %2 = alloca i32, align 4
  %a = alloca %"core::iter::sources::once::Once<proc_macro::TokenStream>", align 4
  store i32 %1, i32* %2, align 4
  %3 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %a to i8*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %5 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %_4 to i8*
  %6 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %a to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  %7 = bitcast %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %_3 to %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some", %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>::Some"* %7, i32 0, i32 1
  %9 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %8 to i8*
  %10 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  %11 = bitcast %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %_3 to i32*
  store i32 1, i32* %11, align 4
  %12 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %_6 to i8*
  %13 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %b to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 40, i1 false)
  %14 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %_5 to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>::Some"*
  %15 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>::Some"* %14 to %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"*
  %16 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %15 to i8*
  %17 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 40, i1 false)
  %18 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>", %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %0, i32 0, i32 1
  %19 = bitcast %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %18 to i8*
  %20 = bitcast %"core::option::Option<core::iter::sources::once::Once<proc_macro::TokenStream>>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 4 %20, i64 8, i1 false)
  %21 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %0 to %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"*
  %22 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %21 to i8*
  %23 = bitcast %"core::option::Option<core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 40, i1 false)
  ret void
}

; core::iter::adapters::copied::copy_try_fold
; Function Attrs: nonlazybind uwtable
define void @_ZN4core4iter8adapters6copied13copy_try_fold17hdcbcdf6b3d298c54E() unnamed_addr #1 {
start:
  %0 = alloca %"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]>::{closure#0}]"* %0 to %"[closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]"*
  ret void
}

; core::iter::adapters::copied::copy_try_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h54219f61581d8edbE"(%"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]>::{closure#0}]"* nonnull align 1 %_1, i8* align 1 dereferenceable(1) %_3) unnamed_addr #0 {
start:
  %_6 = alloca i8, align 1
  %elt = load i8, i8* %_3, align 1
  %_5 = bitcast %"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]"*
  %0 = bitcast i8* %_6 to {}*
  store i8 %elt, i8* %_6, align 1
  %1 = load i8, i8* %_6, align 1
; call core::iter::traits::iterator::Iterator::all::check::{{closure}}
  %2 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hd7e01bdd084c0b60E"(%"[closure@core::iter::traits::iterator::Iterator::all::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]>::{closure#0}]"* nonnull align 1 %_5, i8 %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::iter::adapters::copied::Copied<I>::new
; Function Attrs: nonlazybind uwtable
define { i8*, i8* } @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h4be26a2873e22cc7E"(i8* nonnull %it.0, i8* %it.1) unnamed_addr #1 {
start:
  %0 = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0
  store i8* %it.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1
  store i8* %it.1, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8, !nonnull !20
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = insertvalue { i8*, i8* } undef, i8* %4, 0
  %8 = insertvalue { i8*, i8* } %7, i8* %6, 1
  ret { i8*, i8* } %8
}

; core::iter::adapters::peekable::Peekable<I>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$3new17h0077afd50a9c22d8E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* noalias nocapture sret(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>") dereferenceable(24) %0, i8* nonnull %iter.0, i8* %iter.1) unnamed_addr #1 {
start:
  %_3 = alloca i32, align 4
  store i32 1114113, i32* %_3, align 4
  %1 = bitcast %"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* %0 to { i8*, i8* }*
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  store i8* %iter.0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  store i8* %iter.1, i8** %3, align 8
  %4 = getelementptr inbounds %"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>", %"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* %0, i32 0, i32 1
  %5 = load i32, i32* %_3, align 4, !range !21
  store i32 %5, i32* %4, align 8
  ret void
}

; core::iter::adapters::peekable::Peekable<I>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$3new17h4beac3442b451430E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* noalias nocapture sret(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>") dereferenceable(40) %0, %"core::str::iter::CharIndices"* noalias nocapture dereferenceable(24) %iter) unnamed_addr #1 {
start:
  %_3 = alloca { i64, i32 }, align 8
  %_2 = alloca %"core::str::iter::CharIndices", align 8
  %1 = bitcast %"core::str::iter::CharIndices"* %_2 to i8*
  %2 = bitcast %"core::str::iter::CharIndices"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_3, i32 0, i32 1
  store i32 1114113, i32* %3, align 8
  %4 = bitcast %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* %0 to %"core::str::iter::CharIndices"*
  %5 = bitcast %"core::str::iter::CharIndices"* %4 to i8*
  %6 = bitcast %"core::str::iter::CharIndices"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>", %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* %0, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_3, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_3, i32 0, i32 1
  %11 = load i32, i32* %10, align 8, !range !21
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 0
  store i64 %9, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  ret void
}

; core::iter::adapters::peekable::Peekable<I>::peek
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h5bcf17031e90f523E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_6 = alloca i64*, align 8
  %iter = alloca %"core::str::iter::CharIndices"*, align 8
  %0 = bitcast %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* %self to %"core::str::iter::CharIndices"*
  store %"core::str::iter::CharIndices"* %0, %"core::str::iter::CharIndices"** %iter, align 8
  %_5 = getelementptr inbounds %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>", %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* %self, i32 0, i32 1
  %1 = bitcast i64** %_6 to %"core::str::iter::CharIndices"***
  store %"core::str::iter::CharIndices"** %iter, %"core::str::iter::CharIndices"*** %1, align 8
  %2 = load i64*, i64** %_6, align 8, !nonnull !20
; call core::option::Option<T>::get_or_insert_with
  %_4 = call align 8 dereferenceable(16) { i64, i32 }* @"_ZN4core6option15Option$LT$T$GT$18get_or_insert_with17h5fbaed3c8adfe715E"({ i64, i32 }* align 8 dereferenceable(16) %_5, i64* align 8 dereferenceable(8) %2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::as_ref
  %3 = call align 8 dereferenceable_or_null(16) i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h69c45ea05bde7fdeE"({ i64, i32 }* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %3
}

; core::iter::adapters::peekable::Peekable<I>::peek
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h6c6ac8e500c7bf91E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca i64*, align 8
  %iter = alloca { i8*, i8* }*, align 8
  %0 = bitcast %"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* %self to { i8*, i8* }*
  store { i8*, i8* }* %0, { i8*, i8* }** %iter, align 8
  %_5 = getelementptr inbounds %"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>", %"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* %self, i32 0, i32 1
  %1 = bitcast i64** %_6 to { i8*, i8* }***
  store { i8*, i8* }** %iter, { i8*, i8* }*** %1, align 8
  %2 = load i64*, i64** %_6, align 8, !nonnull !20
; call core::option::Option<T>::get_or_insert_with
  %_4 = call align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$18get_or_insert_with17he8d126f4c9754ff6E"(i32* align 4 dereferenceable(4) %_5, i64* align 8 dereferenceable(8) %2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::as_ref
  %3 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h586364fd946318f3E"(i32* align 4 dereferenceable(4) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32* %3
}

; core::iter::adapters::peekable::Peekable<I>::peek::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek28_$u7b$$u7b$closure$u7d$$u7d$17hfb97931316b1bcb2E"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = bitcast i64* %_1 to %"core::str::iter::CharIndices"**
  %1 = bitcast i64* %_1 to %"core::str::iter::CharIndices"**
  %_2 = load %"core::str::iter::CharIndices"*, %"core::str::iter::CharIndices"** %1, align 8, !nonnull !20
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %2 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %_2)
  %3 = extractvalue { i64, i32 } %2, 0
  %4 = extractvalue { i64, i32 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { i64, i32 } undef, i64 %3, 0
  %6 = insertvalue { i64, i32 } %5, i32 %4, 1
  ret { i64, i32 } %6
}

; core::iter::adapters::peekable::Peekable<I>::peek::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek28_$u7b$$u7b$closure$u7d$$u7d$17hfeaa1d622bde4cc6E"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = bitcast i64* %_1 to { i8*, i8* }**
  %1 = bitcast i64* %_1 to { i8*, i8* }**
  %_2 = load { i8*, i8* }*, { i8*, i8* }** %1, align 8, !nonnull !20
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %2 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %_2), !range !22
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %2
}

; core::iter::adapters::enumerate::Enumerate<I>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h1a20318db9ed17dfE"(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>") dereferenceable(24) %0, i64* nonnull %iter.0, i64* %iter.1) unnamed_addr #1 {
start:
  %1 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %0 to { i64*, i64* }*
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %1, i32 0, i32 0
  store i64* %iter.0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %1, i32 0, i32 1
  store i64* %iter.1, i64** %3, align 8
  %4 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>", %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %0, i32 0, i32 1
  store i64 0, i64* %4, align 8
  ret void
}

; core::iter::adapters::enumerate::Enumerate<I>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h1b77840f64c54d22E"(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>") dereferenceable(24) %0, i32* nonnull %iter.0, i32* %iter.1) unnamed_addr #1 {
start:
  %1 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* %0 to { i32*, i32* }*
  %2 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %1, i32 0, i32 0
  store i32* %iter.0, i32** %2, align 8
  %3 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %1, i32 0, i32 1
  store i32* %iter.1, i32** %3, align 8
  %4 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>", %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* %0, i32 0, i32 1
  store i64 0, i64* %4, align 8
  ret void
}

; core::iter::adapters::enumerate::Enumerate<I>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h3697e4056357a302E"(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>") dereferenceable(24) %0, i8* nonnull %iter.0, i8* %iter.1) unnamed_addr #1 {
start:
  %1 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* %0 to { i8*, i8* }*
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  store i8* %iter.0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  store i8* %iter.1, i8** %3, align 8
  %4 = getelementptr inbounds %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>", %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* %0, i32 0, i32 1
  store i64 0, i64* %4, align 8
  ret void
}

; core::sync::atomic::AtomicUsize::load
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize4load17h96fd510a8ef09f55E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %self, i8 %order) unnamed_addr #0 {
start:
  %_5 = bitcast %"core::sync::atomic::AtomicUsize"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_load
  %0 = call i64 @_ZN4core4sync6atomic11atomic_load17h5b5a27d880e90f5eE(i64* %_5, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %0
}

; core::sync::atomic::AtomicUsize::store
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4sync6atomic11AtomicUsize5store17hf0e24cb2720a6dd9E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %self, i64 %val, i8 %order) unnamed_addr #0 {
start:
  %_6 = bitcast %"core::sync::atomic::AtomicUsize"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_store
  call void @_ZN4core4sync6atomic12atomic_store17h4faf9c7429142d6eE(i64* %_6, i64 %val, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::sync::atomic::atomic_load
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4sync6atomic11atomic_load17h5b5a27d880e90f5eE(i64* %dst, i8 %0) unnamed_addr #0 {
start:
  %1 = alloca i64, align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !23
  %_3 = zext i8 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb9
    i64 2, label %bb3
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  %3 = load atomic i64, i64* %dst monotonic, align 8
  store i64 %3, i64* %1, align 8
  br label %bb6

bb9:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc1381 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1383 to %"core::panic::location::Location"*)) #19
  unreachable

bb3:                                              ; preds = %start
  %4 = load atomic i64, i64* %dst acquire, align 8
  store i64 %4, i64* %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [49 x i8] }>* @alloc1378 to [0 x i8]*), i64 49, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1380 to %"core::panic::location::Location"*)) #19
  unreachable

bb7:                                              ; preds = %start
  %5 = load atomic i64, i64* %dst seq_cst, align 8
  store i64 %5, i64* %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb10:                                             ; preds = %bb6, %bb4, %bb8
  %6 = load i64, i64* %1, align 8
  ret i64 %6

bb4:                                              ; preds = %bb3
  br label %bb10

bb6:                                              ; preds = %bb5
  br label %bb10
}

; core::sync::atomic::atomic_store
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4sync6atomic12atomic_store17h4faf9c7429142d6eE(i64* %dst, i64 %val, i8 %0) unnamed_addr #0 {
start:
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %1 = load i8, i8* %order, align 1, !range !23
  %_4 = zext i8 %1 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb3
    i64 2, label %bb9
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  store atomic i64 %val, i64* %dst monotonic, align 8
  br label %bb6

bb3:                                              ; preds = %start
  store atomic i64 %val, i64* %dst release, align 8
  br label %bb4

bb9:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [42 x i8] }>* @alloc1387 to [0 x i8]*), i64 42, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1389 to %"core::panic::location::Location"*)) #19
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [50 x i8] }>* @alloc1384 to [0 x i8]*), i64 50, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1386 to %"core::panic::location::Location"*)) #19
  unreachable

bb7:                                              ; preds = %start
  store atomic i64 %val, i64* %dst seq_cst, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb10:                                             ; preds = %bb6, %bb4, %bb8
  ret void

bb4:                                              ; preds = %bb3
  br label %bb10

bb6:                                              ; preds = %bb5
  br label %bb10
}

; core::alloc::layout::Layout::from_size_align_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h105bf08884adfd29E(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
; call core::num::nonzero::NonZeroUsize::new_unchecked
  %_4 = call i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h1f9bdcd98b21c390E(i64 %align), !range !35
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 %size, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_4, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !35
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::size
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64, i64 }* %self to i64*
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::alloc::layout::Layout::align
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout5align17h0fe79403dc20457fE({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_2 = load i64, i64* %0, align 8, !range !35
; call core::num::nonzero::NonZeroUsize::get
  %1 = call i64 @_ZN4core3num7nonzero12NonZeroUsize3get17h6feeb9e8dcb1c6b6E(i64 %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h7c4d298f9f440a55E(i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h156acd740bde912eE"(i64 32, i64 %n)
  %_5.0 = extractvalue { i64, i64 } %1, 0
  %_5.1 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h66cfb18fed3da94eE"(i64 %_5.0, i64 %_5.1)
  %_4.0 = extractvalue { i64, i64 } %2, 0
  %_4.1 = extractvalue { i64, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h20db0c871e65b5d7E"(i64 %_4.0, i64 %_4.1)
  store { i64, i64 } %3, { i64, i64 }* %_3, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = bitcast { i64, i64 }* %_3 to i64*
  %_9 = load i64, i64* %4, align 8, !range !18
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %5 = bitcast { i64, i64 }* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"* %5, i32 0, i32 1
  %val = load i64, i64* %6, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ce4cbe066a48548E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1391 to %"core::panic::location::Location"*))
  store { i64, i64 } %7, { i64, i64 }* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1
  ret { i64, i64 } %13

bb9:                                              ; preds = %bb5
; call core::alloc::layout::Layout::from_size_align_unchecked
  %14 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h105bf08884adfd29E(i64 %val, i64 8)
  %_13.0 = extractvalue { i64, i64 } %14, 0
  %_13.1 = extractvalue { i64, i64 } %14, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_13.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_13.1, i64* %16, align 8
  br label %bb11
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h99eb5c4484c6bc08E(i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h156acd740bde912eE"(i64 8, i64 %n)
  %_5.0 = extractvalue { i64, i64 } %1, 0
  %_5.1 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h66cfb18fed3da94eE"(i64 %_5.0, i64 %_5.1)
  %_4.0 = extractvalue { i64, i64 } %2, 0
  %_4.1 = extractvalue { i64, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h20db0c871e65b5d7E"(i64 %_4.0, i64 %_4.1)
  store { i64, i64 } %3, { i64, i64 }* %_3, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = bitcast { i64, i64 }* %_3 to i64*
  %_9 = load i64, i64* %4, align 8, !range !18
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %5 = bitcast { i64, i64 }* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"* %5, i32 0, i32 1
  %val = load i64, i64* %6, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ce4cbe066a48548E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1391 to %"core::panic::location::Location"*))
  store { i64, i64 } %7, { i64, i64 }* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1
  ret { i64, i64 } %13

bb9:                                              ; preds = %bb5
; call core::alloc::layout::Layout::from_size_align_unchecked
  %14 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h105bf08884adfd29E(i64 %val, i64 4)
  %_13.0 = extractvalue { i64, i64 } %14, 0
  %_13.1 = extractvalue { i64, i64 } %14, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_13.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_13.1, i64* %16, align 8
  br label %bb11
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17ha7033033690e3a47E(i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h156acd740bde912eE"(i64 1, i64 %n)
  %_5.0 = extractvalue { i64, i64 } %1, 0
  %_5.1 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h66cfb18fed3da94eE"(i64 %_5.0, i64 %_5.1)
  %_4.0 = extractvalue { i64, i64 } %2, 0
  %_4.1 = extractvalue { i64, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h20db0c871e65b5d7E"(i64 %_4.0, i64 %_4.1)
  store { i64, i64 } %3, { i64, i64 }* %_3, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = bitcast { i64, i64 }* %_3 to i64*
  %_9 = load i64, i64* %4, align 8, !range !18
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %5 = bitcast { i64, i64 }* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"* %5, i32 0, i32 1
  %val = load i64, i64* %6, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ce4cbe066a48548E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1391 to %"core::panic::location::Location"*))
  store { i64, i64 } %7, { i64, i64 }* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1
  ret { i64, i64 } %13

bb9:                                              ; preds = %bb5
; call core::alloc::layout::Layout::from_size_align_unchecked
  %14 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h105bf08884adfd29E(i64 %val, i64 1)
  %_13.0 = extractvalue { i64, i64 } %14, 0
  %_13.1 = extractvalue { i64, i64 } %14, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_13.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_13.1, i64* %16, align 8
  br label %bb11
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hc82c7ca35e413b59E(i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h156acd740bde912eE"(i64 48, i64 %n)
  %_5.0 = extractvalue { i64, i64 } %1, 0
  %_5.1 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h66cfb18fed3da94eE"(i64 %_5.0, i64 %_5.1)
  %_4.0 = extractvalue { i64, i64 } %2, 0
  %_4.1 = extractvalue { i64, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h20db0c871e65b5d7E"(i64 %_4.0, i64 %_4.1)
  store { i64, i64 } %3, { i64, i64 }* %_3, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = bitcast { i64, i64 }* %_3 to i64*
  %_9 = load i64, i64* %4, align 8, !range !18
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %5 = bitcast { i64, i64 }* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"* %5, i32 0, i32 1
  %val = load i64, i64* %6, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ce4cbe066a48548E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1391 to %"core::panic::location::Location"*))
  store { i64, i64 } %7, { i64, i64 }* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1
  ret { i64, i64 } %13

bb9:                                              ; preds = %bb5
; call core::alloc::layout::Layout::from_size_align_unchecked
  %14 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h105bf08884adfd29E(i64 %val, i64 8)
  %_13.0 = extractvalue { i64, i64 } %14, 0
  %_13.1 = extractvalue { i64, i64 } %14, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_13.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_13.1, i64* %16, align 8
  br label %bb11
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define internal nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h602e6ef57c26d631E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::alloc::layout::Layout::align
  %_3 = call i64 @_ZN4core5alloc6layout6Layout5align17h0fe79403dc20457fE({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = inttoptr i64 %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h533c702b08329719E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hc4f06f87edaada12E"([4 x i8]* align 1 dereferenceable(4) %self, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_4.0 = bitcast [4 x i8]* %self to [0 x i8]*
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h20c31b522d9ac302E"([0 x i8]* nonnull align 1 %_4.0, i64 4, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::clone::Clone::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core5clone5Clone5clone17h6abdc0f2a538fd08E({}* nonnull align 1 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::clone::impls::<impl core::clone::Clone for bool>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5clone5impls53_$LT$impl$u20$core..clone..Clone$u20$for$u20$bool$GT$5clone17h5799fac79982198eE"(i8* align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
  %0 = load i8, i8* %self, align 1, !range !2
  %1 = trunc i8 %0 to i1
  ret i1 %1
}

; core::clone::impls::<impl core::clone::Clone for char>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core5clone5impls53_$LT$impl$u20$core..clone..Clone$u20$for$u20$char$GT$5clone17h65bc3a15aebc30feE"(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = load i32, i32* %self, align 4, !range !80
  ret i32 %0
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h4d7448d02689a788E"(i64* align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %TokenTree* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7b23ec74eba4127dE"([0 x %TokenTree]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x %TokenTree]* %self.0 to %TokenTree*
  ret %TokenTree* %0
}

; core::slice::<impl [T]>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h78e02b7a29820b5dE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_15 = alloca i64, align 8
  %_12 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca i8, align 1
  %needle = alloca { [0 x i8]*, i64 }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !20
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1
  %_4.1 = load i64, i64* %6, align 8
  %_5 = icmp uge i64 %self.1, %_4.1
  br i1 %_5, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %2, align 1
  br label %bb3

bb2:                                              ; preds = %start
  store i64 %_4.1, i64* %_15, align 8
  %7 = load i64, i64* %_15, align 8
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %8 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h0cfce9b3c9008d04E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %7, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1393 to %"core::panic::location::Location"*))
  %_13.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb4

bb4:                                              ; preds = %bb2
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 0
  store [0 x i8]* %_13.0, [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 1
  store i64 %_13.1, i64* %10, align 8
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_9 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hb348444d202a4a88E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %needle, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %_12)
  br label %bb5

bb5:                                              ; preds = %bb4
  %11 = zext i1 %_9 to i8
  store i8 %11, i8* %2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb5
  %12 = load i8, i8* %2, align 1, !range !2
  %13 = trunc i8 %12 to i1
  ret i1 %13
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf8fb324857833ae3E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hfb1927e6aec2732fE"(i64 %index, [0 x i8]* %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %_3
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h7d94116415f9462cE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %0 = call align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h90d4e6b374055422E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hc1defbab80d2d62bE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1) unnamed_addr #0 {
start:
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %0 = call { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h876ef9f2cd6f754bE"(i64 %index.0, i64 %index.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h22582127986feed0E"([0 x %"proc_macro::TokenTree"]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[proc_macro::TokenTree]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[proc_macro::TokenTree]>"* %_2 to { [0 x %"proc_macro::TokenTree"]*, i64 }*
  %1 = getelementptr inbounds { [0 x %"proc_macro::TokenTree"]*, i64 }, { [0 x %"proc_macro::TokenTree"]*, i64 }* %0, i32 0, i32 0
  store [0 x %"proc_macro::TokenTree"]* %self.0, [0 x %"proc_macro::TokenTree"]** %1, align 8
  %2 = getelementptr inbounds { [0 x %"proc_macro::TokenTree"]*, i64 }, { [0 x %"proc_macro::TokenTree"]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[proc_macro::TokenTree]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h2927603ac6c0f275E"([0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<TokenTree>]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<TokenTree>]>"* %_2 to { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 }*
  %1 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 }* %0, i32 0, i32 0
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]* %self.0, [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]** %1, align 8
  %2 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<TokenTree>]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h38cdb01f3d73b908E"([0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>]>"* %_2 to { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 }*
  %1 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 }* %0, i32 0, i32 0
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]* %self.0, [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]** %1, align 8
  %2 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hbc92195a81a43742E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf0454bdf6502d708E"([0 x %TokenTree]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[TokenTree]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[TokenTree]>"* %_2 to { [0 x %TokenTree]*, i64 }*
  %1 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %0, i32 0, i32 0
  store [0 x %TokenTree]* %self.0, [0 x %TokenTree]** %1, align 8
  %2 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[TokenTree]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h648dde61b10f65cdE"([0 x { [0 x i8]*, i64 }]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h3a04150b84f30f2dE"([0 x { [0 x i8]*, i64 }]* nonnull align 8 %self.0, i64 %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h88ed401c1e71beb7E"([0 x %"proc_macro::TokenTree"]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha17071c6db39f99aE"([0 x %"proc_macro::TokenTree"]* nonnull align 4 %self.0, i64 %self.1)
  %1 = extractvalue { i32*, i32* } %0, 0
  %2 = extractvalue { i32*, i32* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i32*, i32* } undef, i32* %1, 0
  %4 = insertvalue { i32*, i32* } %3, i32* %2, 1
  ret { i32*, i32* } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb44ce95d4c3f27c9E"([0 x %TokenTree]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h9a00b5253a708758E"([0 x %TokenTree]* nonnull align 8 %self.0, i64 %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf8525a97290cd8e4E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7b71a6563d469ff8E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; core::slice::<impl [T]>::last
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(32) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h347b61df47be93c8E"([0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %_4 = icmp uge i64 %self.1, 1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %1 = bitcast i64** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %2 = sub i64 %self.1, 1
  %last = getelementptr inbounds [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }], [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* %self.0, i64 0, i64 %2
  %3 = bitcast i64** %0 to { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }**
  store { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %last, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %3, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %4 = load i64*, i64** %0, align 8
  ret i64* %4
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"proc_macro::TokenTree"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h07ea9d35149e8d3dE"([0 x %"proc_macro::TokenTree"]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x %"proc_macro::TokenTree"]* %self.0 to %"proc_macro::TokenTree"*
  ret %"proc_macro::TokenTree"* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %TokenTree* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8935e20930b4a2b1E"([0 x %TokenTree]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x %TokenTree]* %self.0 to %TokenTree*
  ret %TokenTree* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hea9353c459319010E"([0 x { [0 x i8]*, i64 }]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x { [0 x i8]*, i64 }]* %self.0 to { [0 x i8]*, i64 }*
  ret { [0 x i8]*, i64 }* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf84c2d601562b202E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::slice::<impl [T]>::contains
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8contains17he9ac7ab3ab389013E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i8* align 1 dereferenceable(1) %x) unnamed_addr #0 {
start:
; call <u8 as core::slice::cmp::SliceContains>::slice_contains
  %0 = call zeroext i1 @"_ZN54_$LT$u8$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains17h7cffb99ae0b46917E"(i8* align 1 dereferenceable(1) %x, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::slice::<impl [T]>::iter_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h278b78f21dbc8294E"([0 x %TokenTree]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::IterMut<T>::new
  %0 = call { i64*, i64* } @"_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h8b90f6dc5f2d4ffbE"([0 x %TokenTree]* nonnull align 8 %self.0, i64 %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::slice::cmp::<impl core::cmp::Ord for [T]>::cmp
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN4core5slice3cmp56_$LT$impl$u20$core..cmp..Ord$u20$for$u20$$u5b$T$u5d$$GT$3cmp17hdbaa136fa769d27aE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
; call <u8 as core::slice::cmp::SliceOrd>::compare
  %0 = call i8 @"_ZN49_$LT$u8$u20$as$u20$core..slice..cmp..SliceOrd$GT$7compare17h4509ef385d8608ffE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1), !range !30
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %0
}

; core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h7e6c3cbd7a44ffbfE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %0 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17ha2c57b98493c37acE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h234ea1c9a01e0549E({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %data, i64 %len) unnamed_addr #0 {
start:
; call core::slice::raw::debug_check_data_len
  call void @_ZN4core5slice3raw20debug_check_data_len17h83390fdcd8604d9eE({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %data, i64 %len)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h688988a0ce65c112E({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %data, i64 %len)
  %_6.0 = extractvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %0, 0
  %_6.1 = extractvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } undef, [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* %_6.0, 0
  %2 = insertvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %1, i64 %_6.1, 1
  ret { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %2
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %TokenTree]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h81f8922349e85d24E(%TokenTree* %data, i64 %len) unnamed_addr #0 {
start:
; call core::slice::raw::debug_check_data_len
  call void @_ZN4core5slice3raw20debug_check_data_len17h3ff173a5f1a042d0E(%TokenTree* %data, i64 %len)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x %TokenTree]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hfda42fca2c1a34c7E(%TokenTree* %data, i64 %len)
  %_6.0 = extractvalue { [0 x %TokenTree]*, i64 } %0, 0
  %_6.1 = extractvalue { [0 x %TokenTree]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x %TokenTree]*, i64 } undef, [0 x %TokenTree]* %_6.0, 0
  %2 = insertvalue { [0 x %TokenTree]*, i64 } %1, i64 %_6.1, 1
  ret { [0 x %TokenTree]*, i64 } %2
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core5slice3raw14from_raw_parts17ha38973cbb5700c88E(%"proc_macro::TokenTree"* %data, i64 %len) unnamed_addr #0 {
start:
; call core::slice::raw::debug_check_data_len
  call void @_ZN4core5slice3raw20debug_check_data_len17hbb0f34745d5c0603E(%"proc_macro::TokenTree"* %data, i64 %len)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h8f72da74031e27f4E(%"proc_macro::TokenTree"* %data, i64 %len)
  %_6.0 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %0, 0
  %_6.1 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } undef, [0 x %"proc_macro::TokenTree"]* %_6.0, 0
  %2 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %1, i64 %_6.1, 1
  ret { [0 x %"proc_macro::TokenTree"]*, i64 } %2
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hcc66b321fcab96bfE(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::slice::raw::debug_check_data_len
  call void @_ZN4core5slice3raw20debug_check_data_len17h34d530b76e8988b6E(i8* %data, i64 %len)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hffb7268dfbdf28e2E(i8* %data, i64 %len)
  %_6.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_6.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_6.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h2fa030c4fc081c56E(%"proc_macro::TokenTree"* %data, i64 %len) unnamed_addr #0 {
start:
; call core::slice::raw::debug_check_data_len
  call void @_ZN4core5slice3raw20debug_check_data_len17hbb0f34745d5c0603E(%"proc_macro::TokenTree"* %data, i64 %len)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h10b6ef78c7a5bdf6E(%"proc_macro::TokenTree"* %data, i64 %len)
  %_11.0 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %0, 0
  %_11.1 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } undef, [0 x %"proc_macro::TokenTree"]* %_11.0, 0
  %2 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %1, i64 %_11.1, 1
  ret { [0 x %"proc_macro::TokenTree"]*, i64 } %2
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17ha80bd306be02c786E(%"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %data, i64 %len) unnamed_addr #0 {
start:
; call core::slice::raw::debug_check_data_len
  call void @_ZN4core5slice3raw20debug_check_data_len17h1b1c2a71b4da5f13E(%"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %data, i64 %len)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h1d170a4145e08d8eE(%"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %data, i64 %len)
  %_11.0 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %0, 0
  %_11.1 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } undef, [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]* %_11.0, 0
  %2 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %1, i64 %_11.1, 1
  ret { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %2
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hafbf00fa479035b2E(%"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %data, i64 %len) unnamed_addr #0 {
start:
; call core::slice::raw::debug_check_data_len
  call void @_ZN4core5slice3raw20debug_check_data_len17h95ff6a6ebbd1f6b0E(%"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %data, i64 %len)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hf3c48f452b20430fE(%"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %data, i64 %len)
  %_11.0 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %0, 0
  %_11.1 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } undef, [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]* %_11.0, 0
  %2 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %1, i64 %_11.1, 1
  ret { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %2
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %TokenTree]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17he23381acddfb9fe1E(%TokenTree* %data, i64 %len) unnamed_addr #0 {
start:
; call core::slice::raw::debug_check_data_len
  call void @_ZN4core5slice3raw20debug_check_data_len17h3ff173a5f1a042d0E(%TokenTree* %data, i64 %len)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x %TokenTree]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h71da89a5af3b0b0dE(%TokenTree* %data, i64 %len)
  %_11.0 = extractvalue { [0 x %TokenTree]*, i64 } %0, 0
  %_11.1 = extractvalue { [0 x %TokenTree]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x %TokenTree]*, i64 } undef, [0 x %TokenTree]* %_11.0, 0
  %2 = insertvalue { [0 x %TokenTree]*, i64 } %1, i64 %_11.1, 1
  ret { [0 x %TokenTree]*, i64 } %2
}

; core::slice::raw::debug_check_data_len
; Function Attrs: nonlazybind uwtable
define void @_ZN4core5slice3raw20debug_check_data_len17h1b1c2a71b4da5f13E(%"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %_data, i64 %_len) unnamed_addr #1 {
start:
  ret void
}

; core::slice::raw::debug_check_data_len
; Function Attrs: nonlazybind uwtable
define void @_ZN4core5slice3raw20debug_check_data_len17h34d530b76e8988b6E(i8* %_data, i64 %_len) unnamed_addr #1 {
start:
  ret void
}

; core::slice::raw::debug_check_data_len
; Function Attrs: nonlazybind uwtable
define void @_ZN4core5slice3raw20debug_check_data_len17h3ff173a5f1a042d0E(%TokenTree* %_data, i64 %_len) unnamed_addr #1 {
start:
  ret void
}

; core::slice::raw::debug_check_data_len
; Function Attrs: nonlazybind uwtable
define void @_ZN4core5slice3raw20debug_check_data_len17h83390fdcd8604d9eE({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_data, i64 %_len) unnamed_addr #1 {
start:
  ret void
}

; core::slice::raw::debug_check_data_len
; Function Attrs: nonlazybind uwtable
define void @_ZN4core5slice3raw20debug_check_data_len17h95ff6a6ebbd1f6b0E(%"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %_data, i64 %_len) unnamed_addr #1 {
start:
  ret void
}

; core::slice::raw::debug_check_data_len
; Function Attrs: nonlazybind uwtable
define void @_ZN4core5slice3raw20debug_check_data_len17hbb0f34745d5c0603E(%"proc_macro::TokenTree"* %_data, i64 %_len) unnamed_addr #1 {
start:
  ret void
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h3a04150b84f30f2dE"([0 x { [0 x i8]*, i64 }]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca i8*, align 8
  %end = alloca { [0 x i8]*, i64 }*, align 8
  %2 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call { [0 x i8]*, i64 }* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hea9353c459319010E"([0 x { [0 x i8]*, i64 }]* nonnull align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h71639994d106fa68E"({ [0 x i8]*, i64 }* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 16, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast { [0 x i8]*, i64 }* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr, i64 %slice.1
  store { [0 x i8]*, i64 }* %6, { [0 x i8]*, i64 }** %0, align 8
  %7 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %0, align 8
  store { [0 x i8]*, i64 }* %7, { [0 x i8]*, i64 }** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc7780c779fcada6aE"({ [0 x i8]*, i64 }* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to { [0 x i8]*, i64 }*
  store { [0 x i8]*, i64 }* %8, { [0 x i8]*, i64 }** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %end, align 8
  %9 = bitcast { i64*, i64* }* %2 to i64**
  store i64* %_18, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %11 = bitcast i64** %10 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %_21, { [0 x i8]*, i64 }** %11, align 8
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !20
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = insertvalue { i64*, i64* } undef, i64* %13, 0
  %17 = insertvalue { i64*, i64* } %16, i64* %15, 1
  ret { i64*, i64* } %17
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7b71a6563d469ff8E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %end = alloca i8*, align 8
  %2 = alloca { i8*, i8* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf84c2d601562b202E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha17824b829e247faE"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 1, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %4 = getelementptr i8, i8* %ptr, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1
  store i8* %6, i8** %0, align 8
  %7 = load i8*, i8** %0, align 8
  store i8* %7, i8** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h533c702b08329719E"(i8* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  store i8* %5, i8** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load i8*, i8** %end, align 8
  %8 = bitcast { i8*, i8* }* %2 to i8**
  store i8* %_18, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  store i8* %_21, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8, !nonnull !20
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = insertvalue { i8*, i8* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i8* } %14, i8* %13, 1
  ret { i8*, i8* } %15
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h9a00b5253a708758E"([0 x %TokenTree]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca %TokenTree*, align 8
  %1 = alloca i8*, align 8
  %end = alloca %TokenTree*, align 8
  %2 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call %TokenTree* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8935e20930b4a2b1E"([0 x %TokenTree]* nonnull align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h258514ed74eefc35E"(%TokenTree* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 48, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast %TokenTree* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds %TokenTree, %TokenTree* %ptr, i64 %slice.1
  store %TokenTree* %6, %TokenTree** %0, align 8
  %7 = load %TokenTree*, %TokenTree** %0, align 8
  store %TokenTree* %7, %TokenTree** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1c8bb6e5f9b44612E"(%TokenTree* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to %TokenTree*
  store %TokenTree* %8, %TokenTree** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load %TokenTree*, %TokenTree** %end, align 8
  %9 = bitcast { i64*, i64* }* %2 to i64**
  store i64* %_18, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %11 = bitcast i64** %10 to %TokenTree**
  store %TokenTree* %_21, %TokenTree** %11, align 8
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !20
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = insertvalue { i64*, i64* } undef, i64* %13, 0
  %17 = insertvalue { i64*, i64* } %16, i64* %15, 1
  ret { i64*, i64* } %17
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha17071c6db39f99aE"([0 x %"proc_macro::TokenTree"]* nonnull align 4 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca %"proc_macro::TokenTree"*, align 8
  %1 = alloca i8*, align 8
  %end = alloca %"proc_macro::TokenTree"*, align 8
  %2 = alloca { i32*, i32* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call %"proc_macro::TokenTree"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h07ea9d35149e8d3dE"([0 x %"proc_macro::TokenTree"]* nonnull align 4 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h53d54fb9d61d12c9E"(%"proc_macro::TokenTree"* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 8, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast %"proc_macro::TokenTree"* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds %"proc_macro::TokenTree", %"proc_macro::TokenTree"* %ptr, i64 %slice.1
  store %"proc_macro::TokenTree"* %6, %"proc_macro::TokenTree"** %0, align 8
  %7 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %0, align 8
  store %"proc_macro::TokenTree"* %7, %"proc_macro::TokenTree"** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5b8055f2025b575E"(%"proc_macro::TokenTree"* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to %"proc_macro::TokenTree"*
  store %"proc_macro::TokenTree"* %8, %"proc_macro::TokenTree"** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %end, align 8
  %9 = bitcast { i32*, i32* }* %2 to i32**
  store i32* %_18, i32** %9, align 8
  %10 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 1
  %11 = bitcast i32** %10 to %"proc_macro::TokenTree"**
  store %"proc_macro::TokenTree"* %_21, %"proc_macro::TokenTree"** %11, align 8
  %12 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8, !nonnull !20
  %14 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 1
  %15 = load i32*, i32** %14, align 8
  %16 = insertvalue { i32*, i32* } undef, i32* %13, 0
  %17 = insertvalue { i32*, i32* } %16, i32* %15, 1
  ret { i32*, i32* } %17
}

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h2fc8dd389f922073E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %_5.i = alloca i64, align 8
  %1 = bitcast { i8*, i8* }* %self to i8**
  %_4.i = load i8*, i8** %1, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %_4.i)
  %2 = bitcast { i8*, i8* }* %self to i8**
  %start1.i = load i8*, i8** %2, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_9.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i)
  %3 = icmp eq i64 1, 0
  br i1 %3, label %bb4.i, label %bb7.i

bb4.i:                                            ; preds = %start
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_13.i = load i8*, i8** %4, align 8
  %_12.i = ptrtoint i8* %_13.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i)
  %_14.i = ptrtoint i8* %_15.i to i64
  %5 = sub i64 %_12.i, %_14.i
  store i64 %5, i64* %_5.i, align 8
  br label %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17hf83ba79bc0b565acE.exit"

bb7.i:                                            ; preds = %start
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_19.i = load i8*, i8** %6, align 8
  %_18.i = ptrtoint i8* %_19.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_21.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i)
  %_20.i = ptrtoint i8* %_21.i to i64
  %7 = sub nuw i64 %_18.i, %_20.i
  store i64 %7, i64* %0, align 8
  %diff.i = load i64, i64* %0, align 8
  %8 = udiv exact i64 %diff.i, 1
  store i64 %8, i64* %_5.i, align 8
  br label %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17hf83ba79bc0b565acE.exit"

"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17hf83ba79bc0b565acE.exit": ; preds = %bb7.i, %bb4.i
  %9 = load i64, i64* %_5.i, align 8
; call core::slice::raw::from_raw_parts
  %10 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hcc66b321fcab96bfE(i8* %_3.i, i64 %9)
  %11 = extractvalue { [0 x i8]*, i64 } %10, 0
  %12 = extractvalue { [0 x i8]*, i64 } %10, 1
  %13 = extractvalue { [0 x i8]*, i64 } %10, 0
  %14 = extractvalue { [0 x i8]*, i64 } %10, 1
  br label %bb1

bb1:                                              ; preds = %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17hf83ba79bc0b565acE.exit"
  %15 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %16 = insertvalue { [0 x i8]*, i64 } %15, i64 %14, 1
  ret { [0 x i8]*, i64 } %16
}

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: nonlazybind uwtable
define { [0 x %"proc_macro::TokenTree"]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h725acc1f37792afaE"({ i32*, i32* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %_5.i = alloca i64, align 8
  %1 = bitcast { i32*, i32* }* %self to i32**
  %_4.i = load i32*, i32** %1, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3.i = call %"proc_macro::TokenTree"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6b211d9fbe8eae44E"(i32* nonnull %_4.i)
  %2 = bitcast { i32*, i32* }* %self to i32**
  %start1.i = load i32*, i32** %2, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_9.i = call %"proc_macro::TokenTree"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6b211d9fbe8eae44E"(i32* nonnull %start1.i)
  %3 = icmp eq i64 8, 0
  br i1 %3, label %bb4.i, label %bb7.i

bb4.i:                                            ; preds = %start
  %4 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %5 = bitcast i32** %4 to %"proc_macro::TokenTree"**
  %_13.i = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %5, align 8
  %_12.i = ptrtoint %"proc_macro::TokenTree"* %_13.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call %"proc_macro::TokenTree"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6b211d9fbe8eae44E"(i32* nonnull %start1.i)
  %_14.i = ptrtoint %"proc_macro::TokenTree"* %_15.i to i64
  %6 = sub i64 %_12.i, %_14.i
  store i64 %6, i64* %_5.i, align 8
  br label %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17hcc7ec0a0a6f6625cE.exit"

bb7.i:                                            ; preds = %start
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %8 = bitcast i32** %7 to %"proc_macro::TokenTree"**
  %_19.i = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %8, align 8
  %_18.i = ptrtoint %"proc_macro::TokenTree"* %_19.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_21.i = call %"proc_macro::TokenTree"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6b211d9fbe8eae44E"(i32* nonnull %start1.i)
  %_20.i = ptrtoint %"proc_macro::TokenTree"* %_21.i to i64
  %9 = sub nuw i64 %_18.i, %_20.i
  store i64 %9, i64* %0, align 8
  %diff.i = load i64, i64* %0, align 8
  %10 = udiv exact i64 %diff.i, 8
  store i64 %10, i64* %_5.i, align 8
  br label %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17hcc7ec0a0a6f6625cE.exit"

"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17hcc7ec0a0a6f6625cE.exit": ; preds = %bb7.i, %bb4.i
  %11 = load i64, i64* %_5.i, align 8
; call core::slice::raw::from_raw_parts
  %12 = call { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core5slice3raw14from_raw_parts17ha38973cbb5700c88E(%"proc_macro::TokenTree"* %_3.i, i64 %11)
  %13 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %12, 0
  %14 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %12, 1
  %15 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %12, 0
  %16 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %12, 1
  br label %bb1

bb1:                                              ; preds = %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17hcc7ec0a0a6f6625cE.exit"
  %17 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } undef, [0 x %"proc_macro::TokenTree"]* %15, 0
  %18 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %17, i64 %16, 1
  ret { [0 x %"proc_macro::TokenTree"]*, i64 } %18
}

; core::slice::iter::IterMut<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h8b90f6dc5f2d4ffbE"([0 x %TokenTree]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca %TokenTree*, align 8
  %1 = alloca i8*, align 8
  %end = alloca %TokenTree*, align 8
  %2 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::as_mut_ptr
  %ptr = call %TokenTree* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7b23ec74eba4127dE"([0 x %TokenTree]* nonnull align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hdac48138c0f4bcfaE"(%TokenTree* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 48, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast %TokenTree* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %_3.i = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %5 = getelementptr inbounds %TokenTree, %TokenTree* %ptr, i64 %slice.1
  store %TokenTree* %5, %TokenTree** %0, align 8
  %_3.i1 = load %TokenTree*, %TokenTree** %0, align 8
  store %TokenTree* %_3.i1, %TokenTree** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1c8bb6e5f9b44612E"(%TokenTree* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %6 = bitcast i8* %_3.i to %TokenTree*
  store %TokenTree* %6, %TokenTree** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_20 = load %TokenTree*, %TokenTree** %end, align 8
  %7 = bitcast { i64*, i64* }* %2 to i64**
  store i64* %_18, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %9 = bitcast i64** %8 to %TokenTree**
  store %TokenTree* %_20, %TokenTree** %9, align 8
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8, !nonnull !20
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = insertvalue { i64*, i64* } undef, i64* %11, 0
  %15 = insertvalue { i64*, i64* } %14, i64* %13, 1
  ret { i64*, i64* } %15
}

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h50aa6608fa5bace2E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::slice::<impl [T]>::iter
  %0 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf8525a97290cd8e4E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; core::slice::index::range
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5slice5index5range17h6f627b2b6677e985E(i64 %bounds, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %end3 = alloca i64, align 8
  %end = alloca { i64, i8* }, align 8
  %start2 = alloca i64, align 8
  %start1 = alloca { i64, i8* }, align 8
  %2 = alloca { i64, i64 }, align 8
  %range = alloca %"core::ops::range::RangeFull", align 1
; invoke <core::ops::range::RangeFull as core::ops::range::RangeBounds<T>>::start_bound
  %3 = invoke { i64, i8* } @"_ZN86_$LT$core..ops..range..RangeFull$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17hc7db767ac700b0d0E"(%"core::ops::range::RangeFull"* nonnull align 1 %range)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store { i64, i8* } %3, { i64, i8* }* %start1, align 8
  %4 = bitcast { i64, i8* }* %start1 to i64*
  %_7 = load i64, i64* %4, align 8, !range !79
  switch i64 %_7, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
    i64 2, label %bb2
  ]

bb22:                                             ; preds = %cleanup
  br label %bb23

cleanup:                                          ; preds = %bb19, %bb17, %bb13, %bb12, %bb8, %bb6, %bb5, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb22

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %10 = bitcast { i64, i8* }* %start1 to %"core::ops::range::Bound<&usize>::Included"*
  %11 = getelementptr inbounds %"core::ops::range::Bound<&usize>::Included", %"core::ops::range::Bound<&usize>::Included"* %10, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8, !nonnull !20
  %start5 = load i64, i64* %12, align 8
  store i64 %start5, i64* %start2, align 8
  br label %bb8

bb5:                                              ; preds = %bb1
  %13 = bitcast { i64, i8* }* %start1 to %"core::ops::range::Bound<&usize>::Excluded"*
  %14 = getelementptr inbounds %"core::ops::range::Bound<&usize>::Excluded", %"core::ops::range::Bound<&usize>::Excluded"* %13, i32 0, i32 1
  %start4 = load i64*, i64** %14, align 8, !nonnull !20
  %_11 = load i64, i64* %start4, align 8
; invoke core::num::<impl usize>::checked_add
  %15 = invoke { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3d452424c360551E"(i64 %_11, i64 1)
          to label %bb6 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i64 0, i64* %start2, align 8
  br label %bb8

bb8:                                              ; preds = %bb4, %bb7, %bb2
; invoke <core::ops::range::RangeFull as core::ops::range::RangeBounds<T>>::end_bound
  %16 = invoke { i64, i8* } @"_ZN86_$LT$core..ops..range..RangeFull$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17ha363100487debeeeE"(%"core::ops::range::RangeFull"* nonnull align 1 %range)
          to label %bb9 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_10.0 = extractvalue { i64, i64 } %15, 0
  %_10.1 = extractvalue { i64, i64 } %15, 1
; invoke core::option::Option<T>::unwrap_or_else
  %17 = invoke i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h6449391ab74f0e28E"(i64 %_10.0, i64 %_10.1)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  store i64 %17, i64* %start2, align 8
  br label %bb8

bb9:                                              ; preds = %bb8
  store { i64, i8* } %16, { i64, i8* }* %end, align 8
  %18 = bitcast { i64, i8* }* %end to i64*
  %_16 = load i64, i64* %18, align 8, !range !79
  switch i64 %_16, label %bb11 [
    i64 0, label %bb12
    i64 1, label %bb15
    i64 2, label %bb10
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb12:                                             ; preds = %bb9
  %19 = bitcast { i64, i8* }* %end to %"core::ops::range::Bound<&usize>::Included"*
  %20 = getelementptr inbounds %"core::ops::range::Bound<&usize>::Included", %"core::ops::range::Bound<&usize>::Included"* %19, i32 0, i32 1
  %end7 = load i64*, i64** %20, align 8, !nonnull !20
  %_19 = load i64, i64* %end7, align 8
; invoke core::num::<impl usize>::checked_add
  %21 = invoke { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3d452424c360551E"(i64 %_19, i64 1)
          to label %bb13 unwind label %cleanup

bb15:                                             ; preds = %bb9
  %22 = bitcast { i64, i8* }* %end to %"core::ops::range::Bound<&usize>::Excluded"*
  %23 = getelementptr inbounds %"core::ops::range::Bound<&usize>::Excluded", %"core::ops::range::Bound<&usize>::Excluded"* %22, i32 0, i32 1
  %24 = load i64*, i64** %23, align 8, !nonnull !20
  %end6 = load i64, i64* %24, align 8
  store i64 %end6, i64* %end3, align 8
  br label %bb16

bb10:                                             ; preds = %bb9
  store i64 %bounds, i64* %end3, align 8
  br label %bb16

bb16:                                             ; preds = %bb14, %bb15, %bb10
  %_23 = load i64, i64* %start2, align 8
  %_24 = load i64, i64* %end3, align 8
  %_22 = icmp ugt i64 %_23, %_24
  br i1 %_22, label %bb17, label %bb18

bb13:                                             ; preds = %bb12
  %_18.0 = extractvalue { i64, i64 } %21, 0
  %_18.1 = extractvalue { i64, i64 } %21, 1
; invoke core::option::Option<T>::unwrap_or_else
  %25 = invoke i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h17e08c927056277aE"(i64 %_18.0, i64 %_18.1)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  store i64 %25, i64* %end3, align 8
  br label %bb16

bb18:                                             ; preds = %bb16
  %_28 = load i64, i64* %end3, align 8
  %_27 = icmp ugt i64 %_28, %bounds
  br i1 %_27, label %bb19, label %bb20

bb17:                                             ; preds = %bb16
  %_25 = load i64, i64* %start2, align 8
  %_26 = load i64, i64* %end3, align 8
; invoke core::slice::index::slice_index_order_fail
  invoke void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64 %_25, i64 %_26, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb19, %bb17
  unreachable

bb20:                                             ; preds = %bb18
  %_32 = load i64, i64* %start2, align 8
  %_33 = load i64, i64* %end3, align 8
  %26 = bitcast { i64, i64 }* %2 to i64*
  store i64 %_32, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %_33, i64* %27, align 8
  br label %bb21

bb19:                                             ; preds = %bb18
  %_30 = load i64, i64* %end3, align 8
; invoke core::slice::index::slice_end_index_len_fail
  invoke void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64 %_30, i64 %bounds, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #19
          to label %unreachable unwind label %cleanup

bb23:                                             ; preds = %bb22
  %28 = bitcast { i8*, i32 }* %1 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb21:                                             ; preds = %bb20
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1
  ret { i64, i64 } %39
}

; core::slice::index::range::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17h0f342f7878ebd022E"() unnamed_addr #0 {
start:
; call core::slice::index::slice_start_index_overflow_fail
  call void @_ZN4core5slice5index31slice_start_index_overflow_fail17hab4b04de8721a1a3E(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1395 to %"core::panic::location::Location"*)) #19
  unreachable
}

; core::slice::index::range::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17h27caff738297be48E"() unnamed_addr #0 {
start:
; call core::slice::index::slice_end_index_overflow_fail
  call void @_ZN4core5slice5index29slice_end_index_overflow_fail17h1088041795c895c8E(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1397 to %"core::panic::location::Location"*)) #19
  unreachable
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h0cfce9b3c9008d04E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hdff2297ec1f31a47E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h20c31b522d9ac302E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h94d64e8a11b4416bE"(i64 %index.0, i64 %index.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h44c3c97e5941e846E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hcf93cc01da105208E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hfc735c5fe30aef80E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb23caedbae4abdf6E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::slice::memchr::memchr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5slice6memchr6memchr17h9c45462924d98aa5E(i8 %0, [0 x i8]* nonnull align 1 %text.0, i64 %text.1) unnamed_addr #0 {
start:
  %_10 = alloca i8*, align 8
  %_8 = alloca { i8*, i8* }, align 8
  %1 = alloca { i64, i64 }, align 8
  %x = alloca i8, align 1
  store i8 %0, i8* %x, align 1
  %_3 = icmp ult i64 %text.1, 16
  br i1 %_3, label %bb1, label %bb4

bb4:                                              ; preds = %start
  %_12 = load i8, i8* %x, align 1
; call core::slice::memchr::memchr_general_case
  %2 = call { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17h3d12d97f424848f5E(i8 %_12, [0 x i8]* nonnull align 1 %text.0, i64 %text.1)
  store { i64, i64 } %2, { i64, i64 }* %1, align 8
  br label %bb5

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %3 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf8525a97290cd8e4E"([0 x i8]* nonnull align 1 %text.0, i64 %text.1)
  store { i8*, i8* } %3, { i8*, i8* }* %_8, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8* %x, i8** %_10, align 8
  %4 = load i8*, i8** %_10, align 8, !nonnull !20
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %5 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17haac7b45b548faa86E"({ i8*, i8* }* align 8 dereferenceable(16) %_8, i8* align 1 dereferenceable(1) %4)
  store { i64, i64 } %5, { i64, i64 }* %1, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8, !range !18
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i64, i64 } undef, i64 %7, 0
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1
  ret { i64, i64 } %11

bb5:                                              ; preds = %bb4
  br label %bb6
}

; core::slice::memchr::memchr::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17hb6d131f054b2881bE"(i8** align 8 dereferenceable(8) %_1, i8* align 1 dereferenceable(1) %elt) unnamed_addr #0 {
start:
  %_3 = load i8, i8* %elt, align 1
  %0 = load i8*, i8** %_1, align 8, !nonnull !20
  %_4 = load i8, i8* %0, align 1
  %1 = icmp eq i8 %_3, %_4
  ret i1 %1
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h17e08c927056277aE"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca i64, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !18
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; call core::slice::index::range::{{closure}}
  %6 = call i64 @"_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17h27caff738297be48E"()
  store i64 %6, i64* %2, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  %x = load i64, i64* %8, align 8
  store i64 %x, i64* %2, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb3
  %9 = load i8, i8* %_7, align 1, !range !2
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb5

bb4:                                              ; preds = %bb1
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i64, i64* %2, align 8
  ret i64 %11

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h6449391ab74f0e28E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca i64, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !18
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; call core::slice::index::range::{{closure}}
  %6 = call i64 @"_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17h0f342f7878ebd022E"()
  store i64 %6, i64* %2, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  %x = load i64, i64* %8, align 8
  store i64 %x, i64* %2, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb3
  %9 = load i8, i8* %_7, align 1, !range !2
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb5

bb4:                                              ; preds = %bb1
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i64, i64* %2, align 8
  ret i64 %11

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::unwrap_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) { i64, i32 }* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h1c3deb3b2dc24c64E"(i64* align 8 dereferenceable_or_null(16) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_3 = alloca i8, align 1
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  store i8 0, i8* %_3, align 1
  store i8 1, i8* %_3, align 1
  %3 = bitcast i64** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_2 = select i1 %5, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17hea02cab2d304a246E() #19
          to label %unreachable unwind label %cleanup

bb3:                                              ; preds = %start
  store i8 0, i8* %_3, align 1
  %6 = bitcast i64** %self to { i64, i32 }**
  %val = load { i64, i32 }*, { i64, i32 }** %6, align 8, !nonnull !20
  ret { i64, i32 }* %val

unreachable:                                      ; preds = %bb1
  unreachable

bb7:                                              ; preds = %cleanup
  %7 = bitcast i64** %self to {}**
  %8 = load {}*, {}** %7, align 8
  %9 = icmp eq {}* %8, null
  %_4 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_4, 1
  br i1 %10, label %bb5, label %bb4

cleanup:                                          ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb7

bb5:                                              ; preds = %bb7
  %16 = load i8, i8* %_3, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb6, label %bb4

bb4:                                              ; preds = %bb6, %bb5, %bb7
  %18 = bitcast { i8*, i32 }* %2 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb6:                                              ; preds = %bb5
  br label %bb4
}

; core::option::Option<T>::unwrap_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable(1) i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h7e063fd9c6ad46d8E"(i8* align 1 dereferenceable_or_null(1) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_3 = alloca i8, align 1
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  store i8 0, i8* %_3, align 1
  store i8 1, i8* %_3, align 1
  %3 = bitcast i8** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_2 = select i1 %5, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17hea02cab2d304a246E() #19
          to label %unreachable unwind label %cleanup

bb3:                                              ; preds = %start
  store i8 0, i8* %_3, align 1
  %val = load i8*, i8** %self, align 8, !nonnull !20
  ret i8* %val

unreachable:                                      ; preds = %bb1
  unreachable

bb7:                                              ; preds = %cleanup
  %6 = bitcast i8** %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_4 = select i1 %8, i64 0, i64 1
  %9 = icmp eq i64 %_4, 1
  br i1 %9, label %bb5, label %bb4

cleanup:                                          ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb7

bb5:                                              ; preds = %bb7
  %15 = load i8, i8* %_3, align 1, !range !2
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb6, label %bb4

bb4:                                              ; preds = %bb6, %bb5, %bb7
  %17 = bitcast { i8*, i32 }* %2 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

bb6:                                              ; preds = %bb5
  br label %bb4
}

; core::option::Option<T>::unwrap_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hc49fab79aa85a7d7E"(i32* align 4 dereferenceable_or_null(4) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_3 = alloca i8, align 1
  %self = alloca i32*, align 8
  store i32* %0, i32** %self, align 8
  store i8 0, i8* %_3, align 1
  store i8 1, i8* %_3, align 1
  %3 = bitcast i32** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_2 = select i1 %5, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17hea02cab2d304a246E() #19
          to label %unreachable unwind label %cleanup

bb3:                                              ; preds = %start
  store i8 0, i8* %_3, align 1
  %val = load i32*, i32** %self, align 8, !nonnull !20
  ret i32* %val

unreachable:                                      ; preds = %bb1
  unreachable

bb7:                                              ; preds = %cleanup
  %6 = bitcast i32** %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_4 = select i1 %8, i64 0, i64 1
  %9 = icmp eq i64 %_4, 1
  br i1 %9, label %bb5, label %bb4

cleanup:                                          ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb7

bb5:                                              ; preds = %bb7
  %15 = load i8, i8* %_3, align 1, !range !2
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb6, label %bb4

bb4:                                              ; preds = %bb6, %bb5, %bb7
  %17 = bitcast { i8*, i32 }* %2 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

bb6:                                              ; preds = %bb5
  br label %bb4
}

; core::option::Option<T>::get_or_insert_with
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) { i64, i32 }* @"_ZN4core6option15Option$LT$T$GT$18get_or_insert_with17h5fbaed3c8adfe715E"({ i64, i32 }* align 8 dereferenceable(16) %self, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_16 = alloca i8, align 1
  %_8 = alloca { i64, i32 }, align 8
  store i8 0, i8* %_16, align 1
  store i8 1, i8* %_16, align 1
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %2 = load i32, i32* %1, align 8, !range !21
  %3 = sub i32 %2, 1114113
  %4 = icmp eq i32 %3, 0
  %_5 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_5, 0
  br i1 %5, label %bb1, label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_16, align 1
; invoke core::iter::adapters::peekable::Peekable<I>::peek::{{closure}}
  %6 = invoke { i64, i32 } @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek28_$u7b$$u7b$closure$u7d$$u7d$17hfb97931316b1bcb2E"(i64* align 8 dereferenceable(8) %f)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %bb4, %start
; invoke core::option::Option<T>::as_mut
  %_14 = invoke align 8 dereferenceable_or_null(16) i64* @"_ZN4core6option15Option$LT$T$GT$6as_mut17h0ba091ff992e70e5E"({ i64, i32 }* align 8 dereferenceable(16) %self)
          to label %bb6 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_9.0 = extractvalue { i64, i32 } %6, 0
  %_9.1 = extractvalue { i64, i32 } %6, 1
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_8, i32 0, i32 0
  store i64 %_9.0, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_8, i32 0, i32 1
  store i32 %_9.1, i32* %8, align 8
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_8, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_8, i32 0, i32 1
  %12 = load i32, i32* %11, align 8, !range !21
; invoke core::mem::replace
  %13 = invoke { i64, i32 } @_ZN4core3mem7replace17hc9b6a7fa6f10c72bE({ i64, i32 }* align 8 dereferenceable(16) %self, i64 %10, i32 %12)
          to label %bb3 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %14 = load i8, i8* %_16, align 1, !range !2
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb11, label %bb9

cleanup:                                          ; preds = %bb6, %bb5, %bb3, %bb2, %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb12

bb3:                                              ; preds = %bb2
  %_6.0 = extractvalue { i64, i32 } %13, 0
  %_6.1 = extractvalue { i64, i32 } %13, 1
; invoke core::mem::forget
  invoke void @_ZN4core3mem6forget17hebb48cb9a8f8f63aE(i64 %_6.0, i32 %_6.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br label %bb5

bb6:                                              ; preds = %bb5
; invoke core::option::Option<T>::unwrap_unchecked
  %_13 = invoke align 8 dereferenceable(16) { i64, i32 }* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h1c3deb3b2dc24c64E"(i64* align 8 dereferenceable_or_null(16) %_14, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1399 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %21 = load i8, i8* %_16, align 1, !range !2
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb10, label %bb8

bb9:                                              ; preds = %bb11, %bb12
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb11:                                             ; preds = %bb12
  br label %bb9

bb8:                                              ; preds = %bb10, %bb7
  ret { i64, i32 }* %_13

bb10:                                             ; preds = %bb7
  br label %bb8
}

; core::option::Option<T>::get_or_insert_with
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$18get_or_insert_with17he8d126f4c9754ff6E"(i32* align 4 dereferenceable(4) %self, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_16 = alloca i8, align 1
  %_8 = alloca i32, align 4
  store i8 0, i8* %_16, align 1
  store i8 1, i8* %_16, align 1
  %1 = load i32, i32* %self, align 4, !range !21
  %2 = sub i32 %1, 1114113
  %3 = icmp eq i32 %2, 0
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 0
  br i1 %4, label %bb1, label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_16, align 1
; invoke core::iter::adapters::peekable::Peekable<I>::peek::{{closure}}
  %_9 = invoke i32 @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek28_$u7b$$u7b$closure$u7d$$u7d$17hfeaa1d622bde4cc6E"(i64* align 8 dereferenceable(8) %f)
          to label %bb2 unwind label %cleanup, !range !22

bb5:                                              ; preds = %bb4, %start
; invoke core::option::Option<T>::as_mut
  %_14 = invoke align 4 dereferenceable_or_null(4) i32* @"_ZN4core6option15Option$LT$T$GT$6as_mut17hd0876e859c02976fE"(i32* align 4 dereferenceable(4) %self)
          to label %bb6 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i32 %_9, i32* %_8, align 4
  %5 = load i32, i32* %_8, align 4, !range !21
; invoke core::mem::replace
  %_6 = invoke i32 @_ZN4core3mem7replace17h3ed5a2f3197ecffbE(i32* align 4 dereferenceable(4) %self, i32 %5)
          to label %bb3 unwind label %cleanup, !range !21

bb12:                                             ; preds = %cleanup
  %6 = load i8, i8* %_16, align 1, !range !2
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb11, label %bb9

cleanup:                                          ; preds = %bb6, %bb5, %bb3, %bb2, %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb12

bb3:                                              ; preds = %bb2
; invoke core::mem::forget
  invoke void @_ZN4core3mem6forget17hc4f2b586491183bdE(i32 %_6)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br label %bb5

bb6:                                              ; preds = %bb5
; invoke core::option::Option<T>::unwrap_unchecked
  %_13 = invoke align 4 dereferenceable(4) i32* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hc49fab79aa85a7d7E"(i32* align 4 dereferenceable_or_null(4) %_14, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1399 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %13 = load i8, i8* %_16, align 1, !range !2
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb10, label %bb8

bb9:                                              ; preds = %bb11, %bb12
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb11:                                             ; preds = %bb12
  br label %bb9

bb8:                                              ; preds = %bb10, %bb7
  ret i32* %_13

bb10:                                             ; preds = %bb7
  br label %bb8
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17h46595accff9d4d4bE"(i64 %0, i32 %1) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca { i64, i32 }, align 8
  %2 = alloca i32, align 4
  %self = alloca { i64, i32 }, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %6 = load i32, i32* %5, align 8, !range !22
  %7 = sub i32 %6, 1114112
  %8 = icmp eq i32 %7, 0
  %_3 = select i1 %8, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  %x.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %x.1 = load i32, i32* %10, align 8, !range !80
  store i8 0, i8* %_9, align 1
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 0
  store i64 %x.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 1
  store i32 %x.1, i32* %12, align 8
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 1
  %16 = load i32, i32* %15, align 8, !range !80
; call proc_macro2::parse::character::{{closure}}
  %_5 = call i32 @"_ZN11proc_macro25parse9character28_$u7b$$u7b$closure$u7d$$u7d$17h103b207451ec3db5E"(i64 %14, i32 %16), !range !80
  br label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %17 = load i8, i8* %_9, align 1, !range !2
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %19 = load i32, i32* %2, align 4, !range !22
  ret i32 %19

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h54cabbbe7baa38d6E"(%"core::option::Option<(usize, usize)>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %1 = bitcast %"core::option::Option<(usize, usize)>"* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !18
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %2, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<(usize, usize)>"* %self to %"core::option::Option<(usize, usize)>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0
  %x.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  %x.1 = load i64, i64* %6, align 8
  store i8 0, i8* %_9, align 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  store i64 %x.0, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  store i64 %x.1, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
; call core::str::<impl str>::find::{{closure}}
  %_5 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h2fbca9cecf419981E"(i64 %10, i64 %12)
  br label %bb4

bb4:                                              ; preds = %bb3
  %13 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %13, i32 0, i32 1
  store i64 %_5, i64* %14, align 8
  %15 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %15, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %16 = load i8, i8* %_9, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8, !range !18
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = insertvalue { i64, i64 } undef, i64 %19, 0
  %23 = insertvalue { i64, i64 } %22, i64 %21, 1
  ret { i64, i64 } %23

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17h61f94068aab3f33aE"(%"core::option::Option<(usize, u8)>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca { i64, i8 }, align 8
  %0 = alloca { i8, i8 }, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %1 = bitcast %"core::option::Option<(usize, u8)>"* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !18
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %2 = bitcast { i8, i8 }* %0 to i8*
  store i8 0, i8* %2, align 1
  br label %bb7

bb3:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<(usize, u8)>"* %self to %"core::option::Option<(usize, u8)>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %4, i32 0, i32 0
  %x.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %4, i32 0, i32 1
  %x.1 = load i8, i8* %6, align 8
  store i8 0, i8* %_9, align 1
  %7 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_7, i32 0, i32 0
  store i64 %x.0, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_7, i32 0, i32 1
  store i8 %x.1, i8* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_7, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_7, i32 0, i32 1
  %12 = load i8, i8* %11, align 8
; call proc_macro2::parse::byte::{{closure}}
  %_5 = call i8 @"_ZN11proc_macro25parse4byte28_$u7b$$u7b$closure$u7d$$u7d$17h4972709292b661efE"(i64 %10, i8 %12)
  br label %bb4

bb4:                                              ; preds = %bb3
  %13 = bitcast { i8, i8 }* %0 to %"core::option::Option<u8>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %13, i32 0, i32 1
  store i8 %_5, i8* %14, align 1
  %15 = bitcast { i8, i8 }* %0 to i8*
  store i8 1, i8* %15, align 1
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %16 = load i8, i8* %_9, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = trunc i8 %19 to i1
  %21 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i1 %20 to i8
  %24 = insertvalue { i8, i8 } undef, i8 %23, 0
  %25 = insertvalue { i8, i8 } %24, i8 %22, 1
  ret { i8, i8 } %25

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17h6a00c7e27cceeb47E"(i32 %0, i32 %1) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i32, i32 }* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !19
  %_3 = zext i32 %6 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i32, i32 }* %self to %"core::option::Option<u32>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %7, i32 0, i32 1
  %x = load i32, i32* %8, align 4
  store i8 0, i8* %_9, align 1
  store i32 %x, i32* %_7, align 4
  %9 = load i32, i32* %_7, align 4
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
  %_5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h2aeb12f835f887f6E"(i32 %9), !range !80
  br label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %10 = load i8, i8* %_9, align 1, !range !2
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %12 = load i32, i32* %2, align 4, !range !22
  ret i32 %12

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6option15Option$LT$T$GT$3map17h75258a3e381e8136E"(i32* align 4 dereferenceable_or_null(8) %0) unnamed_addr #0 {
start:
  %1 = alloca i64, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca i32*, align 8
  %_5 = alloca %"proc_macro::TokenTree", align 4
  %2 = alloca %"core::option::Option<proc_macro::TokenTree>", align 4
  %self = alloca i32*, align 8
  store i32* %0, i32** %self, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %3 = bitcast i32** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_3 = select i1 %5, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %2 to i32*
  store i32 4, i32* %6, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast i32** %self to %"proc_macro::TokenTree"**
  %x = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %7, align 8, !nonnull !20
  store i8 0, i8* %_9, align 1
  %8 = bitcast i32** %_7 to %"proc_macro::TokenTree"**
  store %"proc_macro::TokenTree"* %x, %"proc_macro::TokenTree"** %8, align 8
  %9 = load i32*, i32** %_7, align 8, !nonnull !20
  %10 = bitcast i32* %9 to %"proc_macro::TokenTree"*
; call <alloc::vec::drain::Drain<T,A> as core::iter::traits::iterator::Iterator>::next::{{closure}}
  %11 = call i64 @"_ZN96_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h9cdc34aad590a717E"(%"proc_macro::TokenTree"* align 4 dereferenceable(8) %10)
  store i64 %11, i64* %1, align 8
  %12 = bitcast %"proc_macro::TokenTree"* %_5 to i8*
  %13 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 8, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb3
  %14 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %2 to %"core::option::Option<proc_macro::TokenTree>::Some"*
  %15 = bitcast %"core::option::Option<proc_macro::TokenTree>::Some"* %14 to %"proc_macro::TokenTree"*
  %16 = bitcast %"proc_macro::TokenTree"* %15 to i8*
  %17 = bitcast %"proc_macro::TokenTree"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 8, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %18 = load i8, i8* %_9, align 1, !range !2
  %19 = trunc i8 %18 to i1
  br i1 %19, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %20 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %2 to i64*
  %21 = load i64, i64* %20, align 4
  ret i64 %21

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6option15Option$LT$T$GT$3map17h891251b0cd99f271E"(i64 %0) unnamed_addr #0 {
start:
  %1 = alloca i32, align 4
  %_9 = alloca i8, align 1
  %_8 = alloca %"imp::Span", align 4
  %_7 = alloca { %"imp::Span" }, align 4
  %_5 = alloca %Span, align 4
  %x = alloca %"imp::Span", align 4
  %2 = alloca %"core::option::Option<Span>", align 4
  %3 = alloca i64, align 8
  %self = alloca %"core::option::Option<imp::Span>", align 4
  store i64 %0, i64* %3, align 8
  %4 = bitcast %"core::option::Option<imp::Span>"* %self to i8*
  %5 = bitcast i64* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 8, i1 false)
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %6 = bitcast %"core::option::Option<imp::Span>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !19
  %_3 = zext i32 %7 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %8 = bitcast %"core::option::Option<Span>"* %2 to i32*
  store i32 0, i32* %8, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %9 = bitcast %"core::option::Option<imp::Span>"* %self to %"core::option::Option<imp::Span>::Some"*
  %10 = getelementptr inbounds %"core::option::Option<imp::Span>::Some", %"core::option::Option<imp::Span>::Some"* %9, i32 0, i32 1
  %11 = bitcast %"imp::Span"* %x to i8*
  %12 = bitcast %"imp::Span"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  store i8 0, i8* %_9, align 1
  %13 = bitcast %"imp::Span"* %_8 to i8*
  %14 = bitcast %"imp::Span"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 4, i1 false)
  %15 = bitcast { %"imp::Span" }* %_7 to %"imp::Span"*
  %16 = bitcast %"imp::Span"* %15 to i8*
  %17 = bitcast %"imp::Span"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 4, i1 false)
  %18 = bitcast { %"imp::Span" }* %_7 to %"imp::Span"*
  %19 = bitcast %"imp::Span"* %18 to i32*
  %20 = load i32, i32* %19, align 4
; call core::ops::function::FnOnce::call_once
  %21 = call i32 @_ZN4core3ops8function6FnOnce9call_once17h62534de291ef8d30E(i32 %20)
  store i32 %21, i32* %1, align 4
  %22 = bitcast %Span* %_5 to i8*
  %23 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 4, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb3
  %24 = bitcast %"core::option::Option<Span>"* %2 to %"core::option::Option<Span>::Some"*
  %25 = getelementptr inbounds %"core::option::Option<Span>::Some", %"core::option::Option<Span>::Some"* %24, i32 0, i32 1
  %26 = bitcast %Span* %25 to i8*
  %27 = bitcast %Span* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 4, i1 false)
  %28 = bitcast %"core::option::Option<Span>"* %2 to i32*
  store i32 1, i32* %28, align 4
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %29 = load i8, i8* %_9, align 1, !range !2
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %31 = bitcast %"core::option::Option<Span>"* %2 to i64*
  %32 = load i64, i64* %31, align 4
  ret i64 %32

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17h8c963428cd84d0cfE"(%"core::option::Option<(usize, u8)>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca { i64, i8 }, align 8
  %0 = alloca { i8, i8 }, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %1 = bitcast %"core::option::Option<(usize, u8)>"* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !18
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %2 = bitcast { i8, i8 }* %0 to i8*
  store i8 0, i8* %2, align 1
  br label %bb7

bb3:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<(usize, u8)>"* %self to %"core::option::Option<(usize, u8)>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %4, i32 0, i32 0
  %x.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %4, i32 0, i32 1
  %x.1 = load i8, i8* %6, align 8
  store i8 0, i8* %_9, align 1
  %7 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_7, i32 0, i32 0
  store i64 %x.0, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_7, i32 0, i32 1
  store i8 %x.1, i8* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_7, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_7, i32 0, i32 1
  %12 = load i8, i8* %11, align 8
; call proc_macro2::parse::byte::{{closure}}
  %_5 = call i8 @"_ZN11proc_macro25parse4byte28_$u7b$$u7b$closure$u7d$$u7d$17h72d1c01890deaba2E"(i64 %10, i8 %12)
  br label %bb4

bb4:                                              ; preds = %bb3
  %13 = bitcast { i8, i8 }* %0 to %"core::option::Option<u8>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %13, i32 0, i32 1
  store i8 %_5, i8* %14, align 1
  %15 = bitcast { i8, i8 }* %0 to i8*
  store i8 1, i8* %15, align 1
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %16 = load i8, i8* %_9, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = trunc i8 %19 to i1
  %21 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i1 %20 to i8
  %24 = insertvalue { i8, i8 } undef, i8 %23, 0
  %25 = insertvalue { i8, i8 } %24, i8 %22, 1
  ret { i8, i8 } %25

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17h9a4fe630b4828fafE"(i64 %0, i32 %1) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca { i64, i32 }, align 8
  %2 = alloca i32, align 4
  %self = alloca { i64, i32 }, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %6 = load i32, i32* %5, align 8, !range !22
  %7 = sub i32 %6, 1114112
  %8 = icmp eq i32 %7, 0
  %_3 = select i1 %8, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  %x.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %x.1 = load i32, i32* %10, align 8, !range !80
  store i8 0, i8* %_9, align 1
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 0
  store i64 %x.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 1
  store i32 %x.1, i32* %12, align 8
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 1
  %16 = load i32, i32* %15, align 8, !range !80
; call proc_macro2::parse::character::{{closure}}
  %_5 = call i32 @"_ZN11proc_macro25parse9character28_$u7b$$u7b$closure$u7d$$u7d$17he13bf60694f3ebdfE"(i64 %14, i32 %16), !range !80
  br label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %17 = load i8, i8* %_9, align 1, !range !2
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %19 = load i32, i32* %2, align 4, !range !22
  ret i32 %19

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$4take17h10fce18ac9eb6dd9E"(i8* align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
  %_3 = alloca i8, align 1
  store i8 0, i8* %_3, align 1
  %0 = load i8, i8* %_3, align 1, !range !2
  %1 = trunc i8 %0 to i1
; call core::mem::replace
  %2 = call zeroext i1 @_ZN4core3mem7replace17h4669929bb741bdb2E(i8* align 1 dereferenceable(1) %self, i1 zeroext %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN4core6option15Option$LT$T$GT$4take17hd5472e4633667577E"({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i32 }, align 8
  %0 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_3, i32 0, i32 1
  store i32 1114113, i32* %0, align 8
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_3, i32 0, i32 0
  %2 = load i64, i64* %1, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_3, i32 0, i32 1
  %4 = load i32, i32* %3, align 8, !range !21
; call core::mem::replace
  %5 = call { i64, i32 } @_ZN4core3mem7replace17hc9b6a7fa6f10c72bE({ i64, i32 }* align 8 dereferenceable(16) %self, i64 %2, i32 %4)
  %6 = extractvalue { i64, i32 } %5, 0
  %7 = extractvalue { i64, i32 } %5, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { i64, i32 } undef, i64 %6, 0
  %9 = insertvalue { i64, i32 } %8, i32 %7, 1
  ret { i64, i32 } %9
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$4take17hdcbde9e655ad839dE"(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %_3 = alloca i32, align 4
  store i32 1114113, i32* %_3, align 4
  %0 = load i32, i32* %_3, align 4, !range !21
; call core::mem::replace
  %1 = call i32 @_ZN4core3mem7replace17h3ed5a2f3197ecffbE(i32* align 4 dereferenceable(4) %self, i32 %0), !range !21
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$4take17hdfc0ad1035f05d5aE"(%"core::option::Option<proc_macro::TokenStream>"* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_3 = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  %1 = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  %2 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %_3 to i32*
  store i32 0, i32* %2, align 4
  %3 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %_3 to i32*
  %4 = load i32, i32* %3, align 4
; call core::mem::replace
  %5 = call i32 @_ZN4core3mem7replace17h9b5ec3429b32d9acE(%"core::option::Option<proc_macro::TokenStream>"* align 4 dereferenceable(4) %self, i32 %4)
  store i32 %5, i32* %0, align 4
  %6 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %1 to i8*
  %7 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %1 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17he747dfbf88bd4b83E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_3 = alloca { i8*, i64 }, align 8
  %0 = bitcast { i8*, i64 }* %_3 to {}**
  store {}* null, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 0
  %2 = load i8*, i8** %1, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
; call core::mem::replace
  %5 = call { i8*, i64 } @_ZN4core3mem7replace17hbbff4be0d81fb7c4E({ i8*, i64 }* align 8 dereferenceable(16) %self, i8* align 1 %2, i64 %4)
  %6 = extractvalue { i8*, i64 } %5, 0
  %7 = extractvalue { i8*, i64 } %5, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h21df77647a4b4599E"(i64 %0, i32 %1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i32 }, align 8
  %self = alloca { i64, i32 }, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %6 = load i32, i32* %5, align 8, !range !22
  %7 = sub i32 %6, 1114112
  %8 = icmp eq i32 %7, 0
  %_3 = select i1 %8, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %9 = bitcast { i64, i32 }* %2 to %"core::result::Result<(usize, char), parse::Reject>::Err"*
  %10 = bitcast %"core::result::Result<(usize, char), parse::Reject>::Err"* %9 to %"parse::Reject"*
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1
  store i32 1114112, i32* %11, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  %v.0 = load i64, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %v.1 = load i32, i32* %13, align 8, !range !80
  %14 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0
  store i64 %v.0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1
  store i32 %v.1, i32* %15, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %16 = load i8, i8* %_7, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %18 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1
  %21 = load i32, i32* %20, align 8, !range !22
  %22 = insertvalue { i64, i32 } undef, i64 %19, 0
  %23 = insertvalue { i64, i32 } %22, i32 %21, 1
  ret { i64, i32 } %23

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h2d3db2e373c4f258E"(%"core::result::Result<(usize, u8), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(usize, u8), parse::Reject>") dereferenceable(24) %0, %"core::option::Option<(usize, u8)>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %1 = bitcast %"core::option::Option<(usize, u8)>"* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !18
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %2 = bitcast %"core::result::Result<(usize, u8), parse::Reject>"* %0 to %"core::result::Result<(usize, u8), parse::Reject>::Err"*
  %3 = getelementptr inbounds %"core::result::Result<(usize, u8), parse::Reject>::Err", %"core::result::Result<(usize, u8), parse::Reject>::Err"* %2, i32 0, i32 1
  %4 = bitcast %"core::result::Result<(usize, u8), parse::Reject>"* %0 to i64*
  store i64 1, i64* %4, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<(usize, u8)>"* %self to %"core::option::Option<(usize, u8)>::Some"*
  %6 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %6, i32 0, i32 0
  %v.0 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %6, i32 0, i32 1
  %v.1 = load i8, i8* %8, align 8
  %9 = bitcast %"core::result::Result<(usize, u8), parse::Reject>"* %0 to %"core::result::Result<(usize, u8), parse::Reject>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<(usize, u8), parse::Reject>::Ok", %"core::result::Result<(usize, u8), parse::Reject>::Ok"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %10, i32 0, i32 0
  store i64 %v.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %10, i32 0, i32 1
  store i8 %v.1, i8* %12, align 8
  %13 = bitcast %"core::result::Result<(usize, u8), parse::Reject>"* %0 to i64*
  store i64 0, i64* %13, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %14 = load i8, i8* %_7, align 1, !range !2
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  ret void

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h476826e2c9e479e8E"(i8* %0) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i8** %1 to %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"*
  %6 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"* %5 to %"core::alloc::AllocError"*
  %7 = bitcast i8** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !20
  store i8* %v, i8** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %8 = load i8, i8* %_7, align 1, !range !2
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %10 = load i8*, i8** %1, align 8
  ret i8* %10

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h66cfb18fed3da94eE"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !18
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err"* %6, i32 0, i32 1
  %8 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %8, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %10 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %9, i32 0, i32 1
  %v = load i64, i64* %10, align 8
  %11 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"* %11, i32 0, i32 1
  store i64 %v, i64* %12, align 8
  %13 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %13, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %14 = load i8, i8* %_7, align 1, !range !2
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8, !range !18
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1
  ret { i64, i64 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h958040790a46abb2E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2, i64 %err.0, i64 %err.1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !18
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  store i64 %err.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  store i64 %err.1, i64* %9, align 8
  %10 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %10, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %11 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %12 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %11, i32 0, i32 1
  %v = load i64, i64* %12, align 8
  %13 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*
  %14 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %13, i32 0, i32 1
  store i64 %v, i64* %14, align 8
  %15 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %15, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %16 = load i8, i8* %_7, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  ret void

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::as_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN4core6option15Option$LT$T$GT$6as_mut17h0ba091ff992e70e5E"({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %2 = load i32, i32* %1, align 8, !range !21
  %3 = sub i32 %2, 1114113
  %4 = icmp eq i32 %3, 0
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast i64** %0 to {}**
  store {}* null, {}** %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %6 = bitcast i64** %0 to { i64, i32 }**
  store { i64, i32 }* %self, { i64, i32 }** %6, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %7 = load i64*, i64** %0, align 8
  ret i64* %7
}

; core::option::Option<T>::as_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN4core6option15Option$LT$T$GT$6as_mut17hd0876e859c02976fE"(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = load i32, i32* %self, align 4, !range !21
  %2 = sub i32 %1, 1114113
  %3 = icmp eq i32 %2, 0
  %_2 = select i1 %3, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %4 = bitcast i32** %0 to {}**
  store {}* null, {}** %4, align 8
  br label %bb4

bb3:                                              ; preds = %start
  store i32* %self, i32** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %5 = load i32*, i32** %0, align 8
  ret i32* %5
}

; core::option::Option<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h586364fd946318f3E"(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = load i32, i32* %self, align 4, !range !22
  %2 = sub i32 %1, 1114112
  %3 = icmp eq i32 %2, 0
  %_2 = select i1 %3, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %4 = bitcast i32** %0 to {}**
  store {}* null, {}** %4, align 8
  br label %bb4

bb3:                                              ; preds = %start
  store i32* %self, i32** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %5 = load i32*, i32** %0, align 8
  ret i32* %5
}

; core::option::Option<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h69c45ea05bde7fdeE"({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %2 = load i32, i32* %1, align 8, !range !22
  %3 = sub i32 %2, 1114112
  %4 = icmp eq i32 %3, 0
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast i64** %0 to {}**
  store {}* null, {}** %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %6 = bitcast i64** %0 to { i64, i32 }**
  store { i64, i32 }* %self, { i64, i32 }** %6, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %7 = load i64*, i64** %0, align 8
  ret i64* %7
}

; core::option::Option<T>::map_or
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$6map_or17h29e43934efe359ecE"(i32* align 4 dereferenceable_or_null(4) %0, i1 zeroext %default) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_7 = alloca i32*, align 8
  %2 = alloca i8, align 1
  %self = alloca i32*, align 8
  store i32* %0, i32** %self, align 8
  store i8 0, i8* %_10, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_10, align 1
  store i8 1, i8* %_9, align 1
  %3 = bitcast i32** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_4 = select i1 %5, i64 0, i64 1
  switch i64 %_4, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %6 = zext i1 %default to i8
  store i8 %6, i8* %2, align 1
  br label %bb9

bb3:                                              ; preds = %start
  %t = load i32*, i32** %self, align 8, !nonnull !20
  store i8 0, i8* %_9, align 1
  store i32* %t, i32** %_7, align 8
  %7 = load i32*, i32** %_7, align 8, !nonnull !20
; invoke proc_macro2::parse::float_digits::{{closure}}
  %8 = invoke zeroext i1 @"_ZN11proc_macro25parse12float_digits28_$u7b$$u7b$closure$u7d$$u7d$17h2b35ff143152d439E"(i32* align 4 dereferenceable(4) %7)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  br label %bb9

bb12:                                             ; preds = %cleanup
  %10 = load i8, i8* %_10, align 1, !range !2
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb11, label %bb7

cleanup:                                          ; preds = %bb3
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb12

bb9:                                              ; preds = %bb1, %bb4
  %17 = load i8, i8* %_9, align 1, !range !2
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb8, label %bb5

bb5:                                              ; preds = %bb8, %bb9
  %19 = load i8, i8* %_10, align 1, !range !2
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb10, label %bb6

bb8:                                              ; preds = %bb9
  br label %bb5

bb7:                                              ; preds = %bb11, %bb12
  %21 = bitcast { i8*, i32 }* %1 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26

bb11:                                             ; preds = %bb12
  br label %bb7

bb6:                                              ; preds = %bb10, %bb5
  %27 = load i8, i8* %2, align 1, !range !2
  %28 = trunc i8 %27 to i1
  ret i1 %28

bb10:                                             ; preds = %bb5
  br label %bb6
}

; core::option::Option<T>::map_or
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$6map_or17h5fd3ef750210296eE"(i64 %0, i32 %1, i1 zeroext %default) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_7 = alloca { i64, i32 }, align 8
  %3 = alloca i8, align 1
  %self = alloca { i64, i32 }, align 8
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %5, align 8
  store i8 0, i8* %_10, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_10, align 1
  store i8 1, i8* %_9, align 1
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %7 = load i32, i32* %6, align 8, !range !22
  %8 = sub i32 %7, 1114112
  %9 = icmp eq i32 %8, 0
  %_4 = select i1 %9, i64 0, i64 1
  switch i64 %_4, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = zext i1 %default to i8
  store i8 %10, i8* %3, align 1
  br label %bb9

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  %t.0 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %t.1 = load i32, i32* %12, align 8, !range !80
  store i8 0, i8* %_9, align 1
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 0
  store i64 %t.0, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 1
  store i32 %t.1, i32* %14, align 8
  %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 1
  %18 = load i32, i32* %17, align 8, !range !80
; invoke proc_macro2::parse::cooked_byte_string::{{closure}}
  %19 = invoke zeroext i1 @"_ZN11proc_macro25parse18cooked_byte_string28_$u7b$$u7b$closure$u7d$$u7d$17h5cd4a7bf9bafda53E"(i64 %16, i32 %18)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %3, align 1
  br label %bb9

bb12:                                             ; preds = %cleanup
  %21 = load i8, i8* %_10, align 1, !range !2
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb11, label %bb7

cleanup:                                          ; preds = %bb3
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb12

bb9:                                              ; preds = %bb1, %bb4
  %28 = load i8, i8* %_9, align 1, !range !2
  %29 = trunc i8 %28 to i1
  br i1 %29, label %bb8, label %bb5

bb5:                                              ; preds = %bb8, %bb9
  %30 = load i8, i8* %_10, align 1, !range !2
  %31 = trunc i8 %30 to i1
  br i1 %31, label %bb10, label %bb6

bb8:                                              ; preds = %bb9
  br label %bb5

bb7:                                              ; preds = %bb11, %bb12
  %32 = bitcast { i8*, i32 }* %2 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37

bb11:                                             ; preds = %bb12
  br label %bb7

bb6:                                              ; preds = %bb10, %bb5
  %38 = load i8, i8* %3, align 1, !range !2
  %39 = trunc i8 %38 to i1
  ret i1 %39

bb10:                                             ; preds = %bb5
  br label %bb6
}

; core::option::Option<T>::map_or
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$6map_or17hc86b3a60189db29dE"(i64 %0, i32 %1, i1 zeroext %default) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_7 = alloca { i64, i32 }, align 8
  %3 = alloca i8, align 1
  %self = alloca { i64, i32 }, align 8
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %5, align 8
  store i8 0, i8* %_10, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_10, align 1
  store i8 1, i8* %_9, align 1
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %7 = load i32, i32* %6, align 8, !range !22
  %8 = sub i32 %7, 1114112
  %9 = icmp eq i32 %8, 0
  %_4 = select i1 %9, i64 0, i64 1
  switch i64 %_4, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = zext i1 %default to i8
  store i8 %10, i8* %3, align 1
  br label %bb9

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  %t.0 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %t.1 = load i32, i32* %12, align 8, !range !80
  store i8 0, i8* %_9, align 1
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 0
  store i64 %t.0, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 1
  store i32 %t.1, i32* %14, align 8
  %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 1
  %18 = load i32, i32* %17, align 8, !range !80
; invoke proc_macro2::parse::cooked_string::{{closure}}
  %19 = invoke zeroext i1 @"_ZN11proc_macro25parse13cooked_string28_$u7b$$u7b$closure$u7d$$u7d$17hbc564fad2c9c2251E"(i64 %16, i32 %18)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %3, align 1
  br label %bb9

bb12:                                             ; preds = %cleanup
  %21 = load i8, i8* %_10, align 1, !range !2
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb11, label %bb7

cleanup:                                          ; preds = %bb3
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb12

bb9:                                              ; preds = %bb1, %bb4
  %28 = load i8, i8* %_9, align 1, !range !2
  %29 = trunc i8 %28 to i1
  br i1 %29, label %bb8, label %bb5

bb5:                                              ; preds = %bb8, %bb9
  %30 = load i8, i8* %_10, align 1, !range !2
  %31 = trunc i8 %30 to i1
  br i1 %31, label %bb10, label %bb6

bb8:                                              ; preds = %bb9
  br label %bb5

bb7:                                              ; preds = %bb11, %bb12
  %32 = bitcast { i8*, i32 }* %2 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37

bb11:                                             ; preds = %bb12
  br label %bb7

bb6:                                              ; preds = %bb10, %bb5
  %38 = load i8, i8* %3, align 1, !range !2
  %39 = trunc i8 %38 to i1
  ret i1 %39

bb10:                                             ; preds = %bb5
  br label %bb6
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb66cd30b4af554e3E"(i32 %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
  %self = alloca i32, align 4
  store i32 %0, i32* %self, align 4
  %2 = load i32, i32* %self, align 4, !range !22
  %3 = sub i32 %2, 1114112
  %4 = icmp eq i32 %3, 0
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1401 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #19
  unreachable

bb3:                                              ; preds = %start
  %val = load i32, i32* %self, align 4, !range !80
  ret i32 %val
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$6unwrap17hc8fabe580be02c58E"(i1 zeroext %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %self, align 1
  %3 = load i8, i8* %self, align 1, !range !2
  %4 = trunc i8 %3 to i1
  %_2 = zext i1 %4 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1401 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #19
  unreachable

bb3:                                              ; preds = %start
  ret void
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h10218797bc4bf074E"(%"core::option::Option<(usize, usize)>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"core::option::Option<(usize, usize)>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !18
  %2 = icmp eq i64 %_2, 1
  br i1 %2, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h8ac4927ea1f3ce84E"({ i8, i8 }* align 1 dereferenceable(2) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast { i8, i8 }* %self to i8*
  %2 = load i8, i8* %1, align 1, !range !2
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  %4 = icmp eq i64 %_2, 1
  br i1 %4, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, i8* %0, align 1, !range !2
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17ha273fb9945a5aeaaE"(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = load i32, i32* %self, align 4, !range !22
  %2 = sub i32 %1, 1114112
  %3 = icmp eq i32 %2, 0
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 1
  br i1 %4, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, i8* %0, align 1, !range !2
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17hcc1d1afcd2c82442E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !18
  %2 = icmp eq i64 %_2, 1
  br i1 %2, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::option::Option<&T>::copied
; Function Attrs: nonlazybind uwtable
define { i8, i8 } @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17hff2fbf231359b5bdE"(i8* align 1 dereferenceable_or_null(1) %0) unnamed_addr #1 {
start:
  %1 = alloca { i8, i8 }, align 1
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast { i8, i8 }* %1 to i8*
  store i8 0, i8* %5, align 1
  br label %bb4

bb3:                                              ; preds = %start
  %6 = load i8*, i8** %self, align 8, !nonnull !20
  %v = load i8, i8* %6, align 1
  %7 = bitcast { i8, i8 }* %1 to %"core::option::Option<u8>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %7, i32 0, i32 1
  store i8 %v, i8* %8, align 1
  %9 = bitcast { i8, i8 }* %1 to i8*
  store i8 1, i8* %9, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %10 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %1, i32 0, i32 0
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = trunc i8 %11 to i1
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %1, i32 0, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = zext i1 %12 to i8
  %16 = insertvalue { i8, i8 } undef, i8 %15, 0
  %17 = insertvalue { i8, i8 } %16, i8 %14, 1
  ret { i8, i8 } %17
}

; core::result::Result<T,E>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hd9821730f10abefaE"(%"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca { i8*, i64* }, align 8
  %t = alloca %"core::result::Result<proc_macro::TokenStream, imp::LexError>", align 4
  %1 = alloca %"core::result::Result<proc_macro::TokenStream, imp::LexError>", align 4
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %2 = bitcast %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* %self to i32*
  %3 = load i32, i32* %2, align 8, !range !19
  %_3 = zext i32 %3 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* %self to %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok"*
  %5 = getelementptr inbounds %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok", %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok"* %4, i32 0, i32 1
  %6 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %t to i8*
  %7 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 8, i1 false)
  %8 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %1 to i8*
  %9 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 8, i1 false)
  br label %bb7

bb1:                                              ; preds = %start
  %10 = bitcast %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* %self to %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Err"*
  %11 = getelementptr inbounds %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Err", %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Err"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %11, i32 0, i32 0
  %e.0 = load {}*, {}** %12, align 8, !nonnull !20
  %13 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %11, i32 0, i32 1
  %e.1 = load [3 x i64]*, [3 x i64]** %13, align 8, !nonnull !20
  store i8 0, i8* %_9, align 1
  %14 = bitcast { i8*, i64* }* %_7 to { {}*, [3 x i64]* }*
  %15 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %14, i32 0, i32 0
  store {}* %e.0, {}** %15, align 8
  %16 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %14, i32 0, i32 1
  store [3 x i64]* %e.1, [3 x i64]** %16, align 8
  %17 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_7, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !nonnull !20
  %19 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_7, i32 0, i32 1
  %20 = load i64*, i64** %19, align 8, !nonnull !20
  %21 = bitcast i8* %18 to {}*
  %22 = bitcast i64* %20 to [3 x i64]*
; call proc_macro2::imp::proc_macro_parse::{{closure}}
  %23 = call i64 @"_ZN11proc_macro23imp16proc_macro_parse28_$u7b$$u7b$closure$u7d$$u7d$17hae33c21e834b28efE"({}* noalias nonnull align 1 %21, [3 x i64]* align 8 dereferenceable(24) %22)
  store i64 %23, i64* %0, align 8
  %24 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %1 to i8*
  %25 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 8 %25, i64 8, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb1
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %26 = load i8, i8* %_9, align 1, !range !2
  %27 = trunc i8 %26 to i1
  br i1 %27, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %28 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %1 to i64*
  %29 = load i64, i64* %28, align 4
  ret i64 %29

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h753498bdb8479530E"(%"core::result::Result<Literal, imp::LexError>"* noalias nocapture sret(%"core::result::Result<Literal, imp::LexError>") dereferenceable(40) %0, %"core::result::Result<imp::Literal, imp::LexError>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_8 = alloca %"imp::Literal", align 8
  %_7 = alloca { %"imp::Literal" }, align 8
  %_5 = alloca %Literal, align 8
  %t = alloca %"imp::Literal", align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %1 = bitcast %"core::result::Result<imp::Literal, imp::LexError>"* %self to i8*
  %2 = load i8, i8* %1, align 8, !range !2
  %3 = trunc i8 %2 to i1
  %_3 = zext i1 %3 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<imp::Literal, imp::LexError>"* %self to %"core::result::Result<imp::Literal, imp::LexError>::Ok"*
  %5 = getelementptr inbounds %"core::result::Result<imp::Literal, imp::LexError>::Ok", %"core::result::Result<imp::Literal, imp::LexError>::Ok"* %4, i32 0, i32 1
  %6 = bitcast %"imp::Literal"* %t to i8*
  %7 = bitcast %"imp::Literal"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false)
  store i8 0, i8* %_11, align 1
  %8 = bitcast %"imp::Literal"* %_8 to i8*
  %9 = bitcast %"imp::Literal"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  %10 = bitcast { %"imp::Literal" }* %_7 to %"imp::Literal"*
  %11 = bitcast %"imp::Literal"* %10 to i8*
  %12 = bitcast %"imp::Literal"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false)
  %13 = bitcast { %"imp::Literal" }* %_7 to %"imp::Literal"*
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h06e632ecef4ec0efE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %_5, %"imp::Literal"* noalias nocapture dereferenceable(32) %13)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<imp::Literal, imp::LexError>"* %self to %"core::result::Result<imp::Literal, imp::LexError>::Err"*
  %15 = getelementptr inbounds %"core::result::Result<imp::Literal, imp::LexError>::Err", %"core::result::Result<imp::Literal, imp::LexError>::Err"* %14, i32 0, i32 1
  %16 = load i8, i8* %15, align 1, !range !2
  %e = trunc i8 %16 to i1
  %17 = bitcast %"core::result::Result<Literal, imp::LexError>"* %0 to %"core::result::Result<Literal, imp::LexError>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<Literal, imp::LexError>::Err", %"core::result::Result<Literal, imp::LexError>::Err"* %17, i32 0, i32 1
  %19 = zext i1 %e to i8
  store i8 %19, i8* %18, align 1
  %20 = bitcast %"core::result::Result<Literal, imp::LexError>"* %0 to i8*
  store i8 1, i8* %20, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %21 = load i8, i8* %_11, align 1, !range !2
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  %23 = bitcast %"core::result::Result<Literal, imp::LexError>"* %0 to %"core::result::Result<Literal, imp::LexError>::Ok"*
  %24 = getelementptr inbounds %"core::result::Result<Literal, imp::LexError>::Ok", %"core::result::Result<Literal, imp::LexError>::Ok"* %23, i32 0, i32 1
  %25 = bitcast %Literal* %24 to i8*
  %26 = bitcast %Literal* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 32, i1 false)
  %27 = bitcast %"core::result::Result<Literal, imp::LexError>"* %0 to i8*
  store i8 0, i8* %27, align 8
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hfcf89ed8136ec4d8E"(%"core::result::Result<imp::Literal, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::Literal, imp::LexError>") dereferenceable(40) %0, i64 %1) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_8 = alloca %"proc_macro::Literal", align 4
  %_7 = alloca { %"proc_macro::Literal" }, align 4
  %_5 = alloca %"imp::Literal", align 8
  %t = alloca %"proc_macro::Literal", align 4
  %2 = alloca i64, align 8
  %self = alloca %"core::result::Result<proc_macro::Literal, imp::LexError>", align 4
  store i64 %1, i64* %2, align 8
  %3 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %self to i8*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %self to i8*
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = trunc i8 %6 to i1
  %_3 = zext i1 %7 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %self to %"core::result::Result<proc_macro::Literal, imp::LexError>::Ok"*
  %9 = getelementptr inbounds %"core::result::Result<proc_macro::Literal, imp::LexError>::Ok", %"core::result::Result<proc_macro::Literal, imp::LexError>::Ok"* %8, i32 0, i32 1
  %10 = bitcast %"proc_macro::Literal"* %t to i8*
  %11 = bitcast %"proc_macro::Literal"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 4, i1 false)
  store i8 0, i8* %_11, align 1
  %12 = bitcast %"proc_macro::Literal"* %_8 to i8*
  %13 = bitcast %"proc_macro::Literal"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 4, i1 false)
  %14 = bitcast { %"proc_macro::Literal" }* %_7 to %"proc_macro::Literal"*
  %15 = bitcast %"proc_macro::Literal"* %14 to i8*
  %16 = bitcast %"proc_macro::Literal"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 4, i1 false)
  %17 = bitcast { %"proc_macro::Literal" }* %_7 to %"proc_macro::Literal"*
  %18 = bitcast %"proc_macro::Literal"* %17 to i32*
  %19 = load i32, i32* %18, align 4
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h5bacd46014e167e3E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_5, i32 %19)
  br label %bb4

bb1:                                              ; preds = %start
  %20 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %self to %"core::result::Result<proc_macro::Literal, imp::LexError>::Err"*
  %21 = getelementptr inbounds %"core::result::Result<proc_macro::Literal, imp::LexError>::Err", %"core::result::Result<proc_macro::Literal, imp::LexError>::Err"* %20, i32 0, i32 1
  %22 = load i8, i8* %21, align 1, !range !2
  %e = trunc i8 %22 to i1
  %23 = bitcast %"core::result::Result<imp::Literal, imp::LexError>"* %0 to %"core::result::Result<imp::Literal, imp::LexError>::Err"*
  %24 = getelementptr inbounds %"core::result::Result<imp::Literal, imp::LexError>::Err", %"core::result::Result<imp::Literal, imp::LexError>::Err"* %23, i32 0, i32 1
  %25 = zext i1 %e to i8
  store i8 %25, i8* %24, align 1
  %26 = bitcast %"core::result::Result<imp::Literal, imp::LexError>"* %0 to i8*
  store i8 1, i8* %26, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %27 = load i8, i8* %_11, align 1, !range !2
  %28 = trunc i8 %27 to i1
  br i1 %28, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  %29 = bitcast %"core::result::Result<imp::Literal, imp::LexError>"* %0 to %"core::result::Result<imp::Literal, imp::LexError>::Ok"*
  %30 = getelementptr inbounds %"core::result::Result<imp::Literal, imp::LexError>::Ok", %"core::result::Result<imp::Literal, imp::LexError>::Ok"* %29, i32 0, i32 1
  %31 = bitcast %"imp::Literal"* %30 to i8*
  %32 = bitcast %"imp::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 32, i1 false)
  %33 = bitcast %"core::result::Result<imp::Literal, imp::LexError>"* %0 to i8*
  store i8 0, i8* %33, align 8
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1b4c3316e24922ccE"(i1 zeroext %0, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::fmt::Error", align 1
  %self = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %self, align 1
  %4 = load i8, i8* %self, align 1, !range !2
  %5 = trunc i8 %4 to i1
  %_3 = zext i1 %5 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  ret void

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"core::fmt::Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.6 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h4a70ddbccc88da25E"(i32 %0, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %"proc_macro::LexError", align 1
  %t = alloca %"proc_macro::TokenStream", align 4
  %3 = alloca i32, align 4
  %self = alloca %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>", align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %self to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %self to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %_3 = select i1 %8, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %self to %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>::Ok"*
  %10 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>::Ok"* %9 to %"proc_macro::TokenStream"*
  %11 = bitcast %"proc_macro::TokenStream"* %t to i8*
  %12 = bitcast %"proc_macro::TokenStream"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  %13 = bitcast %"proc_macro::TokenStream"* %t to i32*
  %14 = load i32, i32* %13, align 4
  ret i32 %14

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"proc_macro::LexError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.7 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %20 = bitcast { i8*, i32 }* %2 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  resume { i8*, i32 } %25
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h6acc701f3b473f22E"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %t, %"core::result::Result<fallback::TokenStream, fallback::LexError>"* noalias nocapture dereferenceable(24) %self, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca %"fallback::LexError", align 1
  %2 = bitcast %"core::result::Result<fallback::TokenStream, fallback::LexError>"* %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<fallback::TokenStream, fallback::LexError>"* %self to %"core::result::Result<fallback::TokenStream, fallback::LexError>::Ok"*
  %6 = bitcast %"core::result::Result<fallback::TokenStream, fallback::LexError>::Ok"* %5 to %"fallback::TokenStream"*
  %7 = bitcast %"fallback::TokenStream"* %t to i8*
  %8 = bitcast %"fallback::TokenStream"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  ret void

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"fallback::LexError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.8 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %14 = bitcast { i8*, i32 }* %1 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9201bcd6a96bf516E"(i64 %0, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca i8, align 1
  %t = alloca %"proc_macro::Literal", align 4
  %3 = alloca i64, align 8
  %self = alloca %"core::result::Result<proc_macro::Literal, imp::LexError>", align 4
  store i64 %0, i64* %3, align 8
  %4 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %self to i8*
  %5 = bitcast i64* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 8, i1 false)
  %6 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %self to i8*
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %self to %"core::result::Result<proc_macro::Literal, imp::LexError>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<proc_macro::Literal, imp::LexError>::Ok", %"core::result::Result<proc_macro::Literal, imp::LexError>::Ok"* %9, i32 0, i32 1
  %11 = bitcast %"proc_macro::Literal"* %t to i8*
  %12 = bitcast %"proc_macro::Literal"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  %13 = bitcast %"proc_macro::Literal"* %t to i32*
  %14 = load i32, i32* %13, align 4
  ret i32 %14

bb1:                                              ; preds = %start
  %15 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %self to %"core::result::Result<proc_macro::Literal, imp::LexError>::Err"*
  %16 = getelementptr inbounds %"core::result::Result<proc_macro::Literal, imp::LexError>::Err", %"core::result::Result<proc_macro::Literal, imp::LexError>::Err"* %15, i32 0, i32 1
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %e, align 1
  %_6.0 = bitcast i8* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.9 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %25 = bitcast { i8*, i32 }* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = insertvalue { i8*, i32 } undef, i8* %26, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  resume { i8*, i32 } %30
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h116a095dcf4e3f12E"(i32 %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %"proc_macro::LexError", align 1
  %t = alloca %"proc_macro::TokenStream", align 4
  %3 = alloca i32, align 4
  %self = alloca %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>", align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %self to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %self to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %_2 = select i1 %8, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %self to %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>::Ok"*
  %10 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>::Ok"* %9 to %"proc_macro::TokenStream"*
  %11 = bitcast %"proc_macro::TokenStream"* %t to i8*
  %12 = bitcast %"proc_macro::TokenStream"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  %13 = bitcast %"proc_macro::TokenStream"* %t to i32*
  %14 = load i32, i32* %13, align 4
  ret i32 %14

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"proc_macro::LexError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1414 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.7 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %20 = bitcast { i8*, i32 }* %2 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  resume { i8*, i32 } %25
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h039f54c1b0d2cbcaE"(%"core::result::Result<Literal, LexError>"* noalias nocapture sret(%"core::result::Result<Literal, LexError>") dereferenceable(40) %0, %"core::result::Result<Literal, imp::LexError>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_5 = alloca %Literal, align 8
  %t = alloca %Literal, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %1 = bitcast %"core::result::Result<Literal, imp::LexError>"* %self to i8*
  %2 = load i8, i8* %1, align 8, !range !2
  %3 = trunc i8 %2 to i1
  %_3 = zext i1 %3 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<Literal, imp::LexError>"* %self to %"core::result::Result<Literal, imp::LexError>::Ok"*
  %5 = getelementptr inbounds %"core::result::Result<Literal, imp::LexError>::Ok", %"core::result::Result<Literal, imp::LexError>::Ok"* %4, i32 0, i32 1
  %6 = bitcast %Literal* %t to i8*
  %7 = bitcast %Literal* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false)
  %8 = bitcast %Literal* %_5 to i8*
  %9 = bitcast %Literal* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  %10 = bitcast %"core::result::Result<Literal, LexError>"* %0 to %"core::result::Result<Literal, LexError>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<Literal, LexError>::Ok", %"core::result::Result<Literal, LexError>::Ok"* %10, i32 0, i32 1
  %12 = bitcast %Literal* %11 to i8*
  %13 = bitcast %Literal* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false)
  %14 = bitcast %"core::result::Result<Literal, LexError>"* %0 to i8*
  store i8 0, i8* %14, align 8
  br label %bb7

bb1:                                              ; preds = %start
  %15 = bitcast %"core::result::Result<Literal, imp::LexError>"* %self to %"core::result::Result<Literal, imp::LexError>::Err"*
  %16 = getelementptr inbounds %"core::result::Result<Literal, imp::LexError>::Err", %"core::result::Result<Literal, imp::LexError>::Err"* %15, i32 0, i32 1
  %17 = load i8, i8* %16, align 1, !range !2
  %e = trunc i8 %17 to i1
  store i8 0, i8* %_11, align 1
  %18 = zext i1 %e to i8
  store i8 %18, i8* %_9, align 1
  %19 = load i8, i8* %_9, align 1, !range !2
  %20 = trunc i8 %19 to i1
; call <proc_macro2::Literal as core::str::traits::FromStr>::from_str::{{closure}}
  %_7 = call zeroext i1 @"_ZN67_$LT$proc_macro2..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str28_$u7b$$u7b$closure$u7d$$u7d$17h11381dd69e547d93E"(i1 zeroext %20)
  br label %bb4

bb4:                                              ; preds = %bb1
  %21 = bitcast %"core::result::Result<Literal, LexError>"* %0 to %"core::result::Result<Literal, LexError>::Err"*
  %22 = getelementptr inbounds %"core::result::Result<Literal, LexError>::Err", %"core::result::Result<Literal, LexError>::Err"* %21, i32 0, i32 1
  %23 = zext i1 %_7 to i8
  store i8 %23, i8* %22, align 1
  %24 = bitcast %"core::result::Result<Literal, LexError>"* %0 to i8*
  store i8 1, i8* %24, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %25 = load i8, i8* %_11, align 1, !range !2
  %26 = trunc i8 %25 to i1
  br i1 %26, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h138ba687fcfcb664E"(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>") dereferenceable(24) %0, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !18
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %4 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %4, align 8
  br label %bb7

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0
  %e.0 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  %e.1 = load i64, i64* %8, align 8
  store i8 0, i8* %_11, align 1
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0
  store i64 %e.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  store i64 %e.1, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
; call alloc::raw_vec::handle_reserve::{{closure}}
  %15 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h297cebbb7b7472a4E"(i64 %12, i64 %14)
  %_7.0 = extractvalue { i64, i64 } %15, 0
  %_7.1 = extractvalue { i64, i64 } %15, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %16 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"*
  %17 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"* %16, i32 0, i32 1
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  store i64 %_7.0, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  store i64 %_7.1, i64* %19, align 8
  %20 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %20, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %21 = load i8, i8* %_11, align 1, !range !2
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4a1dd4bf806dc6d9E"(%"core::result::Result<imp::TokenStream, LexError>"* noalias nocapture sret(%"core::result::Result<imp::TokenStream, LexError>") dereferenceable(48) %0, %"core::result::Result<imp::TokenStream, imp::LexError>"* noalias nocapture dereferenceable(48) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_5 = alloca %"imp::TokenStream", align 8
  %t = alloca %"imp::TokenStream", align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %1 = bitcast %"core::result::Result<imp::TokenStream, imp::LexError>"* %self to i8*
  %2 = load i8, i8* %1, align 8, !range !2
  %3 = trunc i8 %2 to i1
  %_3 = zext i1 %3 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<imp::TokenStream, imp::LexError>"* %self to %"core::result::Result<imp::TokenStream, imp::LexError>::Ok"*
  %5 = getelementptr inbounds %"core::result::Result<imp::TokenStream, imp::LexError>::Ok", %"core::result::Result<imp::TokenStream, imp::LexError>::Ok"* %4, i32 0, i32 1
  %6 = bitcast %"imp::TokenStream"* %t to i8*
  %7 = bitcast %"imp::TokenStream"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 40, i1 false)
  %8 = bitcast %"imp::TokenStream"* %_5 to i8*
  %9 = bitcast %"imp::TokenStream"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 40, i1 false)
  %10 = bitcast %"core::result::Result<imp::TokenStream, LexError>"* %0 to %"core::result::Result<imp::TokenStream, LexError>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<imp::TokenStream, LexError>::Ok", %"core::result::Result<imp::TokenStream, LexError>::Ok"* %10, i32 0, i32 1
  %12 = bitcast %"imp::TokenStream"* %11 to i8*
  %13 = bitcast %"imp::TokenStream"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 40, i1 false)
  %14 = bitcast %"core::result::Result<imp::TokenStream, LexError>"* %0 to i8*
  store i8 0, i8* %14, align 8
  br label %bb7

bb1:                                              ; preds = %start
  %15 = bitcast %"core::result::Result<imp::TokenStream, imp::LexError>"* %self to %"core::result::Result<imp::TokenStream, imp::LexError>::Err"*
  %16 = getelementptr inbounds %"core::result::Result<imp::TokenStream, imp::LexError>::Err", %"core::result::Result<imp::TokenStream, imp::LexError>::Err"* %15, i32 0, i32 1
  %17 = load i8, i8* %16, align 1, !range !2
  %e = trunc i8 %17 to i1
  store i8 0, i8* %_11, align 1
  %18 = zext i1 %e to i8
  store i8 %18, i8* %_9, align 1
  %19 = load i8, i8* %_9, align 1, !range !2
  %20 = trunc i8 %19 to i1
; call <proc_macro2::TokenStream as core::str::traits::FromStr>::from_str::{{closure}}
  %_7 = call zeroext i1 @"_ZN71_$LT$proc_macro2..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str28_$u7b$$u7b$closure$u7d$$u7d$17h68248873f4891c69E"(i1 zeroext %20)
  br label %bb4

bb4:                                              ; preds = %bb1
  %21 = bitcast %"core::result::Result<imp::TokenStream, LexError>"* %0 to %"core::result::Result<imp::TokenStream, LexError>::Err"*
  %22 = getelementptr inbounds %"core::result::Result<imp::TokenStream, LexError>::Err", %"core::result::Result<imp::TokenStream, LexError>::Err"* %21, i32 0, i32 1
  %23 = zext i1 %_7 to i8
  store i8 %23, i8* %22, align 1
  %24 = bitcast %"core::result::Result<imp::TokenStream, LexError>"* %0 to i8*
  store i8 1, i8* %24, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %25 = load i8, i8* %_11, align 1, !range !2
  %26 = trunc i8 %25 to i1
  br i1 %26, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4b7ddfd9a119aca3E"(i32 %0) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { %"proc_macro::LexError" }, align 1
  %_5 = alloca %"proc_macro::Literal", align 4
  %t = alloca %"proc_macro::Literal", align 4
  %1 = alloca %"core::result::Result<proc_macro::Literal, imp::LexError>", align 4
  %2 = alloca i32, align 4
  %self = alloca %"core::result::Result<proc_macro::Literal, proc_macro::LexError>", align 4
  store i32 %0, i32* %2, align 4
  %3 = bitcast %"core::result::Result<proc_macro::Literal, proc_macro::LexError>"* %self to i8*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = bitcast %"core::result::Result<proc_macro::Literal, proc_macro::LexError>"* %self to i32*
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %_3 = select i1 %7, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<proc_macro::Literal, proc_macro::LexError>"* %self to %"core::result::Result<proc_macro::Literal, proc_macro::LexError>::Ok"*
  %9 = bitcast %"core::result::Result<proc_macro::Literal, proc_macro::LexError>::Ok"* %8 to %"proc_macro::Literal"*
  %10 = bitcast %"proc_macro::Literal"* %t to i8*
  %11 = bitcast %"proc_macro::Literal"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 4, i1 false)
  %12 = bitcast %"proc_macro::Literal"* %_5 to i8*
  %13 = bitcast %"proc_macro::Literal"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 4, i1 false)
  %14 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %1 to %"core::result::Result<proc_macro::Literal, imp::LexError>::Ok"*
  %15 = getelementptr inbounds %"core::result::Result<proc_macro::Literal, imp::LexError>::Ok", %"core::result::Result<proc_macro::Literal, imp::LexError>::Ok"* %14, i32 0, i32 1
  %16 = bitcast %"proc_macro::Literal"* %15 to i8*
  %17 = bitcast %"proc_macro::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 4, i1 false)
  %18 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %1 to i8*
  store i8 0, i8* %18, align 4
  br label %bb7

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %19 = bitcast { %"proc_macro::LexError" }* %_9 to %"proc_macro::LexError"*
; call core::ops::function::FnOnce::call_once
  %_7 = call zeroext i1 @_ZN4core3ops8function6FnOnce9call_once17h0db61f46d337a9abE()
  br label %bb4

bb4:                                              ; preds = %bb1
  %20 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %1 to %"core::result::Result<proc_macro::Literal, imp::LexError>::Err"*
  %21 = getelementptr inbounds %"core::result::Result<proc_macro::Literal, imp::LexError>::Err", %"core::result::Result<proc_macro::Literal, imp::LexError>::Err"* %20, i32 0, i32 1
  %22 = zext i1 %_7 to i8
  store i8 %22, i8* %21, align 1
  %23 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %1 to i8*
  store i8 1, i8* %23, align 4
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !range !2
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %1 to i64*
  %27 = load i64, i64* %26, align 4
  ret i64 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h8c773e230b45d246E"(i32 %0) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { %"proc_macro::LexError" }, align 1
  %_5 = alloca %"proc_macro::TokenStream", align 4
  %t = alloca %"proc_macro::TokenStream", align 4
  %1 = alloca %"core::result::Result<proc_macro::TokenStream, imp::LexError>", align 4
  %2 = alloca i32, align 4
  %self = alloca %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>", align 4
  store i32 %0, i32* %2, align 4
  %3 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %self to i8*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %self to i32*
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %_3 = select i1 %7, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %self to %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>::Ok"*
  %9 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>::Ok"* %8 to %"proc_macro::TokenStream"*
  %10 = bitcast %"proc_macro::TokenStream"* %t to i8*
  %11 = bitcast %"proc_macro::TokenStream"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 4, i1 false)
  %12 = bitcast %"proc_macro::TokenStream"* %_5 to i8*
  %13 = bitcast %"proc_macro::TokenStream"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 4, i1 false)
  %14 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %1 to %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Ok"*
  %15 = getelementptr inbounds %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Ok", %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Ok"* %14, i32 0, i32 1
  %16 = bitcast %"proc_macro::TokenStream"* %15 to i8*
  %17 = bitcast %"proc_macro::TokenStream"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 4, i1 false)
  %18 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %1 to i8*
  store i8 0, i8* %18, align 4
  br label %bb7

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %19 = bitcast { %"proc_macro::LexError" }* %_9 to %"proc_macro::LexError"*
; call core::ops::function::FnOnce::call_once
  %_7 = call zeroext i1 @_ZN4core3ops8function6FnOnce9call_once17h0db61f46d337a9abE()
  br label %bb4

bb4:                                              ; preds = %bb1
  %20 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %1 to %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Err"*
  %21 = getelementptr inbounds %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Err", %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Err"* %20, i32 0, i32 1
  %22 = zext i1 %_7 to i8
  store i8 %22, i8* %21, align 1
  %23 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %1 to i8*
  store i8 1, i8* %23, align 4
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !range !2
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %1 to i64*
  %27 = load i64, i64* %26, align 4
  ret i64 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbac44579ad666314E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::layout::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %_3 = select i1 %7, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %t.0 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %9, align 8, !range !35
  %10 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %t.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %t.1, i64* %13, align 8
  %14 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb7

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %15 = bitcast { %"core::alloc::layout::LayoutError" }* %_9 to %"core::alloc::layout::LayoutError"*
; call alloc::raw_vec::finish_grow::{{closure}}
  %16 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h00e71fad6747fdc9E"()
  %_7.0 = extractvalue { i64, i64 } %16, 0
  %_7.1 = extractvalue { i64, i64 } %16, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %17 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %_7.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %_7.1, i64* %20, align 8
  %21 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %22 = load i8, i8* %_11, align 1, !range !2
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17he8e9a490f21436ecE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i8* %1, i64 %2, i64* align 8 dereferenceable(16) %op) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_3 = select i1 %7, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %t.0 = load i8*, i8** %8, align 8, !nonnull !20
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %9, align 8
  %10 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 0
  store i8* %t.0, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 1
  store i64 %t.1, i64* %13, align 8
  %14 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb7

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %15 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*
; call alloc::raw_vec::finish_grow::{{closure}}
  %16 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h2867befed634fc3dE"(i64* align 8 dereferenceable(16) %op)
  %_7.0 = extractvalue { i64, i64 } %16, 0
  %_7.1 = extractvalue { i64, i64 } %16, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %17 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %_7.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %_7.1, i64* %20, align 8
  %21 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %22 = load i8, i8* %_11, align 1, !range !2
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::convert::num::<impl core::convert::From<u8> for u32>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core7convert3num63_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$u32$GT$4from17h93dadc74f1905e6bE"(i8 %small) unnamed_addr #0 {
start:
  %0 = zext i8 %small to i32
  ret i32 %0
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define void @_ZN4core9panicking13assert_failed17he0d6241321a0e753E(i8 %kind, { i64, i64 }* align 8 dereferenceable(16) %0, { i64, i64 }* align 8 dereferenceable(16) %1, %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %args, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #5 {
start:
  %_12 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca { i64, i64 }*, align 8
  %left = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %0, { i64, i64 }** %left, align 8
  store { i64, i64 }* %1, { i64, i64 }** %right, align 8
  %_6.0 = bitcast { i64, i64 }** %left to {}*
  %_9.0 = bitcast { i64, i64 }** %right to {}*
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_12 to i8*
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false)
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h90ea89642d218837E(i8 %kind, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.a to [3 x i64]*), {}* nonnull align 1 %_9.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.a to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %_12, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #19
  unreachable
}

; <&mut W as core::fmt::Write>::write_char
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hcf34cec1ed7dacc5E"(%"alloc::string::String"** align 8 dereferenceable(8) %self, i32 %c) unnamed_addr #1 {
start:
  %_3 = load %"alloc::string::String"*, %"alloc::string::String"** %self, align 8, !nonnull !20
; call <alloc::string::String as core::fmt::Write>::write_char
  %0 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h1e6bb7c6ae9f1e43E"(%"alloc::string::String"* align 8 dereferenceable(24) %_3, i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&mut W as core::fmt::Write>::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h4dcca56e3e83f0f7E"(%"alloc::string::String"** align 8 dereferenceable(8) %self, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %args) unnamed_addr #1 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
  %_3 = load %"alloc::string::String"*, %"alloc::string::String"** %self, align 8, !nonnull !20
  %0 = bitcast %"core::fmt::Arguments"* %_4 to i8*
  %1 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 48, i1 false)
; call core::fmt::Write::write_fmt
  %2 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h3aaba967388a2b5bE(%"alloc::string::String"* align 8 dereferenceable(24) %_3, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&mut W as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h9c20d219f2b657ecE"(%"alloc::string::String"** align 8 dereferenceable(8) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %_3 = load %"alloc::string::String"*, %"alloc::string::String"** %self, align 8, !nonnull !20
; call <alloc::string::String as core::fmt::Write>::write_str
  %0 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h2821c2fca6a3609bE"(%"alloc::string::String"* align 8 dereferenceable(24) %_3, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h4469f8e31adfd146E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h4789199f6831155eE"(i1 zeroext %t) unnamed_addr #1 {
start:
  ret i1 %t
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h65cb161b8e2bee4dE"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h69fec645575d3ee5E"(i1 zeroext %t) unnamed_addr #1 {
start:
  ret i1 %t
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hbed30968fe0c395eE"(i64 %t.0, i64 %t.1) unnamed_addr #1 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %t.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %t.1, 1
  ret { i64, i64 } %1
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc9768cb5f877874bE"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd7066e7dd5e77a2eE"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h2fd22c8a997389bfE"(i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %_2 = alloca %"proc_macro::Punct", align 4
  %2 = alloca %"proc_macro::TokenTree", align 4
  %3 = alloca i32, align 4
  %self = alloca %"proc_macro::Punct", align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %"proc_macro::Punct"* %self to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %"proc_macro::Punct"* %_2 to i8*
  %7 = bitcast %"proc_macro::Punct"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::Punct"* %_2 to i32*
  %9 = load i32, i32* %8, align 4
; call <proc_macro::TokenTree as core::convert::From<proc_macro::Punct>>::from
  %10 = call i64 @"_ZN86_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Punct$GT$$GT$4from17h6ed6fdb17fde94c0E"(i32 %9)
  store i64 %10, i64* %1, align 8
  %11 = bitcast %"proc_macro::TokenTree"* %2 to i8*
  %12 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 8 %12, i64 8, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %13 = bitcast %"proc_macro::TokenTree"* %2 to i64*
  %14 = load i64, i64* %13, align 4
  ret i64 %14
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h37a9804b13a2baf9E"(i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %_2 = alloca %"proc_macro::Literal", align 4
  %2 = alloca %"proc_macro::TokenTree", align 4
  %3 = alloca i32, align 4
  %self = alloca %"proc_macro::Literal", align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %"proc_macro::Literal"* %self to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %"proc_macro::Literal"* %_2 to i8*
  %7 = bitcast %"proc_macro::Literal"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::Literal"* %_2 to i32*
  %9 = load i32, i32* %8, align 4
; call <proc_macro::TokenTree as core::convert::From<proc_macro::Literal>>::from
  %10 = call i64 @"_ZN88_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Literal$GT$$GT$4from17hb7eb961715b9a0d0E"(i32 %9)
  store i64 %10, i64* %1, align 8
  %11 = bitcast %"proc_macro::TokenTree"* %2 to i8*
  %12 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 8 %12, i64 8, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %13 = bitcast %"proc_macro::TokenTree"* %2 to i64*
  %14 = load i64, i64* %13, align 4
  ret i64 %14
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h388c60fbcabe1925E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, i96 %1) unnamed_addr #1 {
start:
  %_2 = alloca %Punct, align 4
  %2 = alloca i96, align 8
  %self = alloca %Punct, align 4
  store i96 %1, i96* %2, align 8
  %3 = bitcast %Punct* %self to i8*
  %4 = bitcast i96* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 12, i1 false)
  %5 = bitcast %Punct* %_2 to i8*
  %6 = bitcast %Punct* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 12, i1 false)
  %7 = bitcast %Punct* %_2 to i96*
  %8 = load i96, i96* %7, align 4
; call <proc_macro2::TokenTree as core::convert::From<proc_macro2::Punct>>::from
  call void @"_ZN88_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Punct$GT$$GT$4from17hfcf751fd0b875a47E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, i96 %8)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h42656985eb2ccbdeE"(%"imp::Group"* noalias nocapture sret(%"imp::Group") dereferenceable(40) %0, %"fallback::Group"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"fallback::Group", align 8
  %1 = bitcast %"fallback::Group"* %_2 to i8*
  %2 = bitcast %"fallback::Group"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
; call <proc_macro2::imp::Group as core::convert::From<proc_macro2::fallback::Group>>::from
  call void @"_ZN99_$LT$proc_macro2..imp..Group$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..Group$GT$$GT$4from17h62b3a580825fde05E"(%"imp::Group"* noalias nocapture sret(%"imp::Group") dereferenceable(40) %0, %"fallback::Group"* noalias nocapture dereferenceable(32) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4ada3002c3319531E"(i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %_2 = alloca %"proc_macro::Group", align 4
  %2 = alloca %"proc_macro::TokenTree", align 4
  %3 = alloca i32, align 4
  %self = alloca %"proc_macro::Group", align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %"proc_macro::Group"* %self to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %"proc_macro::Group"* %_2 to i8*
  %7 = bitcast %"proc_macro::Group"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::Group"* %_2 to i32*
  %9 = load i32, i32* %8, align 4
; call <proc_macro::TokenTree as core::convert::From<proc_macro::Group>>::from
  %10 = call i64 @"_ZN86_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Group$GT$$GT$4from17ha5a0a33f019de1dbE"(i32 %9)
  store i64 %10, i64* %1, align 8
  %11 = bitcast %"proc_macro::TokenTree"* %2 to i8*
  %12 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 8 %12, i64 8, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %13 = bitcast %"proc_macro::TokenTree"* %2 to i64*
  %14 = load i64, i64* %13, align 4
  ret i64 %14
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h562c3ea49e2ed430E"(i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %_2 = alloca %"proc_macro::Ident", align 4
  %2 = alloca %"proc_macro::TokenTree", align 4
  %3 = alloca i32, align 4
  %self = alloca %"proc_macro::Ident", align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %"proc_macro::Ident"* %self to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %"proc_macro::Ident"* %_2 to i8*
  %7 = bitcast %"proc_macro::Ident"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::Ident"* %_2 to i32*
  %9 = load i32, i32* %8, align 4
; call <proc_macro::TokenTree as core::convert::From<proc_macro::Ident>>::from
  %10 = call i64 @"_ZN86_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Ident$GT$$GT$4from17hcabfe1a867fde07fE"(i32 %9)
  store i64 %10, i64* %1, align 8
  %11 = bitcast %"proc_macro::TokenTree"* %2 to i8*
  %12 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 8 %12, i64 8, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %13 = bitcast %"proc_macro::TokenTree"* %2 to i64*
  %14 = load i64, i64* %13, align 4
  ret i64 %14
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5724af1066b10069E"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %0, %TokenTree* noalias nocapture dereferenceable(48) %self) unnamed_addr #1 {
start:
  %_2 = alloca %TokenTree, align 8
  %1 = bitcast %TokenTree* %_2 to i8*
  %2 = bitcast %TokenTree* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false)
; call <proc_macro2::fallback::TokenStream as core::convert::From<proc_macro2::TokenTree>>::from
  call void @"_ZN104_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro2..TokenTree$GT$$GT$4from17h5f2087de38ea7a90E"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %0, %TokenTree* noalias nocapture dereferenceable(48) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5e86063d0b748c21E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, %Group* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_2 = alloca %Group, align 8
  %1 = bitcast %Group* %_2 to i8*
  %2 = bitcast %Group* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
; call <proc_macro2::TokenTree as core::convert::From<proc_macro2::Group>>::from
  call void @"_ZN88_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Group$GT$$GT$4from17hbf12835379981fc1E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, %Group* noalias nocapture dereferenceable(40) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h780f9290d002de92E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, %Ident* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_2 = alloca %Ident, align 8
  %1 = bitcast %Ident* %_2 to i8*
  %2 = bitcast %Ident* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
; call <proc_macro2::TokenTree as core::convert::From<proc_macro2::Ident>>::from
  call void @"_ZN88_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Ident$GT$$GT$4from17h1f5e714bdb1c155eE"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, %Ident* noalias nocapture dereferenceable(40) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h876568dae10255bbE"(i8* nonnull %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h69d2c24778900438E"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h87ea74df22a0430cE"(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, %"fallback::Literal"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"fallback::Literal", align 8
  %1 = bitcast %"fallback::Literal"* %_2 to i8*
  %2 = bitcast %"fallback::Literal"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call <proc_macro2::imp::Literal as core::convert::From<proc_macro2::fallback::Literal>>::from
  call void @"_ZN103_$LT$proc_macro2..imp..Literal$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..Literal$GT$$GT$4from17ha04af699e9b451f8E"(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, %"fallback::Literal"* noalias nocapture dereferenceable(24) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h91a9e43fbbd0eeaaE"() unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca %"imp::Span", align 4
; call <proc_macro2::imp::Span as core::convert::From<proc_macro2::fallback::Span>>::from
  %2 = call i32 @"_ZN97_$LT$proc_macro2..imp..Span$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..Span$GT$$GT$4from17h4a633cdf721bfa1bE"()
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"imp::Span"* %1 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"imp::Span"* %1 to i32*
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h9b6183a2ec4c5ff2E"(i64 %0) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_2 = alloca %"proc_macro::TokenTree", align 4
  %2 = alloca %"proc_macro::TokenStream", align 4
  %3 = alloca i64, align 8
  %self = alloca %"proc_macro::TokenTree", align 4
  store i64 %0, i64* %3, align 8
  %4 = bitcast %"proc_macro::TokenTree"* %self to i8*
  %5 = bitcast i64* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 8, i1 false)
  %6 = bitcast %"proc_macro::TokenTree"* %_2 to i8*
  %7 = bitcast %"proc_macro::TokenTree"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 8, i1 false)
  %8 = bitcast %"proc_macro::TokenTree"* %_2 to i64*
  %9 = load i64, i64* %8, align 4
; call <proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from
  %10 = call i32 @"_ZN92_$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$4from17h9a352173d3b4519dE"(i64 %9)
  store i32 %10, i32* %1, align 4
  %11 = bitcast %"proc_macro::TokenStream"* %2 to i8*
  %12 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %13 = bitcast %"proc_macro::TokenStream"* %2 to i32*
  %14 = load i32, i32* %13, align 4
  ret i32 %14
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb267cb12d365858bE"(i64 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %0 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hc9c52d7acb3a3410E"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hd57029033d51eaa8E"(%"imp::TokenStream"* noalias nocapture sret(%"imp::TokenStream") dereferenceable(40) %0, i32 %1) unnamed_addr #1 {
start:
  %_2 = alloca %"proc_macro::TokenStream", align 4
  %2 = alloca i32, align 4
  %self = alloca %"proc_macro::TokenStream", align 4
  store i32 %1, i32* %2, align 4
  %3 = bitcast %"proc_macro::TokenStream"* %self to i8*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %5 = bitcast %"proc_macro::TokenStream"* %_2 to i8*
  %6 = bitcast %"proc_macro::TokenStream"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  %7 = bitcast %"proc_macro::TokenStream"* %_2 to i32*
  %8 = load i32, i32* %7, align 4
; call <proc_macro2::imp::TokenStream as core::convert::From<proc_macro::TokenStream>>::from
  call void @"_ZN100_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenStream$GT$$GT$4from17hc4891675c0f7b4feE"(%"imp::TokenStream"* noalias nocapture sret(%"imp::TokenStream") dereferenceable(40) %0, i32 %8)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he191eaa88bc0bebeE"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, %Literal* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_2 = alloca %Literal, align 8
  %1 = bitcast %Literal* %_2 to i8*
  %2 = bitcast %Literal* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
; call <proc_macro2::TokenTree as core::convert::From<proc_macro2::Literal>>::from
  call void @"_ZN90_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Literal$GT$$GT$4from17h548874ce824b8d3dE"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, %Literal* noalias nocapture dereferenceable(32) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf29e00f20e32edaeE"(%"imp::TokenStream"* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_2 = alloca %"imp::TokenStream", align 8
  %1 = alloca %"proc_macro::TokenStream", align 4
  %2 = bitcast %"imp::TokenStream"* %_2 to i8*
  %3 = bitcast %"imp::TokenStream"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 40, i1 false)
; call proc_macro2::imp::<impl core::convert::From<proc_macro2::imp::TokenStream> for proc_macro::TokenStream>::from
  %4 = call i32 @"_ZN11proc_macro23imp110_$LT$impl$u20$core..convert..From$LT$proc_macro2..imp..TokenStream$GT$$u20$for$u20$proc_macro..TokenStream$GT$4from17hfdf94ac7e2e97a7bE"(%"imp::TokenStream"* noalias nocapture dereferenceable(40) %_2)
  store i32 %4, i32* %0, align 4
  %5 = bitcast %"proc_macro::TokenStream"* %1 to i8*
  %6 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"proc_macro::TokenStream"* %1 to i32*
  %8 = load i32, i32* %7, align 4
  ret i32 %8
}

; <T as alloc::slice::hack::ConvertVec>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h91ddaf07b5747c1aE"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %vec, [0 x %TokenTree]* nonnull align 8 %s.0, i64 %s.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %_2.i = alloca %TokenTree, align 8
  %_3.i.i = alloca %TokenTree, align 8
  %_2.i.i = alloca %"core::mem::manually_drop::ManuallyDrop<TokenTree>", align 8
  %_5.i = alloca %TokenTree, align 8
  %_4.i = alloca %"core::mem::maybe_uninit::MaybeUninit<TokenTree>", align 8
  %0 = alloca { i8*, i32 }, align 8
  %_40 = alloca i8, align 1
  %_39 = alloca i8, align 1
  %_31 = alloca %TokenTree, align 8
  %_19 = alloca { i64, i64* }, align 8
  %iter = alloca %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>", align 8
  %_13 = alloca %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>", align 8
  %_12 = alloca %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>", align 8
  %_11 = alloca %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>", align 8
  %guard = alloca { i64*, i64 }, align 8
  store i8 0, i8* %_40, align 1
  store i8 0, i8* %_39, align 1
  store i8 1, i8* %_40, align 1
; invoke core::slice::<impl [T]>::len
  %_3 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf0454bdf6502d708E"([0 x %TokenTree]* nonnull align 8 %s.0, i64 %s.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_40, align 1
; invoke alloc::vec::Vec<T,A>::with_capacity_in
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hc8a716a1e79e4023E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %vec, i64 %_3)
          to label %bb2 unwind label %cleanup

bb25:                                             ; preds = %bb20, %cleanup
  %1 = load i8, i8* %_40, align 1, !range !2
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb24, label %bb21

cleanup:                                          ; preds = %bb1, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb25

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_39, align 1
  %8 = bitcast { i64*, i64 }* %guard to %"alloc::vec::Vec<TokenTree>"**
  store %"alloc::vec::Vec<TokenTree>"* %vec, %"alloc::vec::Vec<TokenTree>"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %guard, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = bitcast { i64*, i64 }* %guard to %"alloc::vec::Vec<TokenTree>"**
  %_10 = load %"alloc::vec::Vec<TokenTree>"*, %"alloc::vec::Vec<TokenTree>"** %10, align 8, !nonnull !20
; invoke alloc::vec::Vec<T,A>::spare_capacity_mut
  %11 = invoke { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h6ed1012c837993e7E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %_10)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
  %slots.0 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %11, 0
  %slots.1 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %11, 1
; invoke core::slice::<impl [T]>::iter
  %12 = invoke { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb44ce95d4c3f27c9E"([0 x %TokenTree]* nonnull align 8 %s.0, i64 %s.1)
          to label %bb4 unwind label %cleanup1

bb23:                                             ; preds = %cleanup1
  %13 = load i8, i8* %_39, align 1, !range !2
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb22, label %bb20

cleanup1:                                         ; preds = %bb18, %bb17, %bb13, %bb14, %panic, %bb9, %bb7, %bb6, %bb5, %bb4, %bb3, %bb2
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb23

bb4:                                              ; preds = %bb3
  %_14.0 = extractvalue { i64*, i64* } %12, 0
  %_14.1 = extractvalue { i64*, i64* } %12, 1
; invoke core::iter::traits::iterator::Iterator::enumerate
  invoke void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h4c5ec0b4ac9d9853E(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>") dereferenceable(24) %_13, i64* nonnull %_14.0, i64* %_14.1)
          to label %bb5 unwind label %cleanup1

bb5:                                              ; preds = %bb4
; invoke core::slice::<impl [T]>::len
  %_16 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h2927603ac6c0f275E"([0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]* nonnull align 8 %slots.0, i64 %slots.1)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
; invoke core::iter::traits::iterator::Iterator::take
  invoke void @_ZN4core4iter6traits8iterator8Iterator4take17h39af3ab0e7860beaE(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>") dereferenceable(32) %_12, %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* noalias nocapture dereferenceable(24) %_13, i64 %_16)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h01c54d33475b7534E"(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>") dereferenceable(32) %_11, %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* noalias nocapture dereferenceable(32) %_12)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  %20 = bitcast %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* %iter to i8*
  %21 = bitcast %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 32, i1 false)
  br label %bb9

bb9:                                              ; preds = %bb16, %bb8
; invoke <core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::next
  %22 = invoke { i64, i64* } @"_ZN100_$LT$core..iter..adapters..take..Take$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h085ff6caf75062f6E"(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* align 8 dereferenceable(32) %iter)
          to label %bb10 unwind label %cleanup1

bb10:                                             ; preds = %bb9
  store { i64, i64* } %22, { i64, i64* }* %_19, align 8
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_19, i32 0, i32 1
  %24 = bitcast i64** %23 to {}**
  %25 = load {}*, {}** %24, align 8
  %26 = icmp eq {}* %25, null
  %_22 = select i1 %26, i64 0, i64 1
  switch i64 %_22, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  store i8 0, i8* %_39, align 1
  %27 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %guard, i32 0, i32 0
  %_34.0 = load i64*, i64** %27, align 8, !nonnull !20
  %28 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %guard, i32 0, i32 1
  %_34.1 = load i64, i64* %28, align 8
; invoke core::mem::forget
  invoke void @_ZN4core3mem6forget17h58ddc169762f1da2E(i64* align 8 dereferenceable(24) %_34.0, i64 %_34.1)
          to label %bb17 unwind label %cleanup1

bb11:                                             ; preds = %bb10
  %29 = bitcast { i64, i64* }* %_19 to i64*
  %i = load i64, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_19, i32 0, i32 1
  %31 = bitcast i64** %30 to %TokenTree**
  %b = load %TokenTree*, %TokenTree** %31, align 8, !nonnull !20
  %32 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %guard, i32 0, i32 1
  store i64 %i, i64* %32, align 8
  %_30 = icmp ult i64 %i, %slots.1
  %33 = call i1 @llvm.expect.i1(i1 %_30, i1 true)
  br i1 %33, label %bb14, label %panic

bb14:                                             ; preds = %bb11
  %_27 = getelementptr inbounds [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"], [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]* %slots.0, i64 0, i64 %i
; invoke <proc_macro2::TokenTree as core::clone::Clone>::clone
  invoke void @"_ZN61_$LT$proc_macro2..TokenTree$u20$as$u20$core..clone..Clone$GT$5clone17hc5480cc3261eb639E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %_31, %TokenTree* align 8 dereferenceable(48) %b)
          to label %bb15 unwind label %cleanup1

panic:                                            ; preds = %bb11
; invoke core::panicking::panic_bounds_check
  invoke void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 %slots.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1419 to %"core::panic::location::Location"*)) #19
          to label %unreachable unwind label %cleanup1

unreachable:                                      ; preds = %panic
  unreachable

bb15:                                             ; preds = %bb14
  call void @llvm.experimental.noalias.scope.decl(metadata !82)
  %34 = bitcast %TokenTree* %_5.i to i8*
  %35 = bitcast %TokenTree* %_31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 48, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !85)
  call void @llvm.experimental.noalias.scope.decl(metadata !88)
  %36 = bitcast %TokenTree* %_3.i.i to i8*
  %37 = bitcast %TokenTree* %_5.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 48, i1 false), !noalias !90
  call void @llvm.experimental.noalias.scope.decl(metadata !91)
  call void @llvm.experimental.noalias.scope.decl(metadata !94)
  %38 = bitcast %TokenTree* %_2.i to i8*
  %39 = bitcast %TokenTree* %_3.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 48, i1 false), !noalias !91
  %40 = bitcast %"core::mem::manually_drop::ManuallyDrop<TokenTree>"* %_2.i.i to %TokenTree*
  %41 = bitcast %TokenTree* %40 to i8*
  %42 = bitcast %TokenTree* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 48, i1 false), !noalias !94
  br label %"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$5write17h54ac953682d2a90eE.exit"

"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$5write17h54ac953682d2a90eE.exit": ; preds = %bb15
  %43 = bitcast %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %_4.i to %"core::mem::manually_drop::ManuallyDrop<TokenTree>"*
  %44 = bitcast %"core::mem::manually_drop::ManuallyDrop<TokenTree>"* %43 to i8*
  %45 = bitcast %"core::mem::manually_drop::ManuallyDrop<TokenTree>"* %_2.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 48, i1 false), !noalias !96
  %46 = bitcast %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %_27 to i8*
  %47 = bitcast %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %_4.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 48, i1 false), !noalias !82
  %48 = bitcast %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %_27 to %TokenTree*
  br label %bb16

bb16:                                             ; preds = %"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$5write17h54ac953682d2a90eE.exit"
  br label %bb9

bb17:                                             ; preds = %bb13
; invoke core::slice::<impl [T]>::len
  %_37 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf0454bdf6502d708E"([0 x %TokenTree]* nonnull align 8 %s.0, i64 %s.1)
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17he8b407ec15d33071E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %vec, i64 %_37)
          to label %bb19 unwind label %cleanup1

bb19:                                             ; preds = %bb18
  store i8 0, i8* %_39, align 1
  ret void

bb20:                                             ; preds = %bb22, %bb23
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %vec) #18
  br label %bb25

bb22:                                             ; preds = %bb23
; call core::ptr::drop_in_place<<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<proc_macro2::TokenTree,alloc::alloc::Global>>
  call void @"_ZN4core3ptr144drop_in_place$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$proc_macro2..TokenTree$C$alloc..alloc..Global$GT$$GT$17h6e7cc634e50ab074E"({ i64*, i64 }* %guard) #18
  br label %bb20

bb21:                                             ; preds = %bb24, %bb25
  %49 = bitcast { i8*, i32 }* %0 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = insertvalue { i8*, i32 } undef, i8* %50, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  resume { i8*, i32 } %54

bb24:                                             ; preds = %bb25
  br label %bb21
}

; <T as alloc::slice::hack::ConvertVec>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17ha815db8585bb44b6E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<proc_macro::TokenTree>") dereferenceable(24) %vec, [0 x %"proc_macro::TokenTree"]* nonnull align 4 %s.0, i64 %s.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %_2.i = alloca %"proc_macro::TokenTree", align 4
  %0 = alloca %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>", align 4
  %1 = alloca i64, align 8
  %value.i = alloca %"proc_macro::TokenTree", align 4
  %2 = alloca i64, align 8
  %_3.i.i = alloca %"proc_macro::TokenTree", align 4
  %_2.i.i = alloca %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>", align 4
  %3 = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>", align 4
  %4 = alloca i64, align 8
  %val.i.i = alloca %"proc_macro::TokenTree", align 4
  %5 = alloca i64, align 8
  %_5.i = alloca %"proc_macro::TokenTree", align 4
  %_4.i = alloca %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>", align 4
  %6 = alloca i64, align 8
  %val.i = alloca %"proc_macro::TokenTree", align 4
  %7 = alloca i64, align 8
  %8 = alloca { i8*, i32 }, align 8
  %_40 = alloca i8, align 1
  %_39 = alloca i8, align 1
  %_31 = alloca %"proc_macro::TokenTree", align 4
  %_19 = alloca { i64, i32* }, align 8
  %iter = alloca %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>", align 8
  %_13 = alloca %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>", align 8
  %_12 = alloca %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>", align 8
  %_11 = alloca %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>", align 8
  %guard = alloca { i64*, i64 }, align 8
  store i8 0, i8* %_40, align 1
  store i8 0, i8* %_39, align 1
  store i8 1, i8* %_40, align 1
; invoke core::slice::<impl [T]>::len
  %_3 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h22582127986feed0E"([0 x %"proc_macro::TokenTree"]* nonnull align 4 %s.0, i64 %s.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_40, align 1
; invoke alloc::vec::Vec<T,A>::with_capacity_in
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hf48b2d1dc5a753d9E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<proc_macro::TokenTree>") dereferenceable(24) %vec, i64 %_3)
          to label %bb2 unwind label %cleanup

bb25:                                             ; preds = %bb20, %cleanup
  %9 = load i8, i8* %_40, align 1, !range !2
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb24, label %bb21

cleanup:                                          ; preds = %bb1, %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %8, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %8, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb25

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_39, align 1
  %16 = bitcast { i64*, i64 }* %guard to %"alloc::vec::Vec<proc_macro::TokenTree>"**
  store %"alloc::vec::Vec<proc_macro::TokenTree>"* %vec, %"alloc::vec::Vec<proc_macro::TokenTree>"** %16, align 8
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %guard, i32 0, i32 1
  store i64 0, i64* %17, align 8
  %18 = bitcast { i64*, i64 }* %guard to %"alloc::vec::Vec<proc_macro::TokenTree>"**
  %_10 = load %"alloc::vec::Vec<proc_macro::TokenTree>"*, %"alloc::vec::Vec<proc_macro::TokenTree>"** %18, align 8, !nonnull !20
; invoke alloc::vec::Vec<T,A>::spare_capacity_mut
  %19 = invoke { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17ha1bedd9ac1056fb7E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %_10)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
  %slots.0 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %19, 0
  %slots.1 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %19, 1
; invoke core::slice::<impl [T]>::iter
  %20 = invoke { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h88ed401c1e71beb7E"([0 x %"proc_macro::TokenTree"]* nonnull align 4 %s.0, i64 %s.1)
          to label %bb4 unwind label %cleanup1

bb23:                                             ; preds = %cleanup1
  %21 = load i8, i8* %_39, align 1, !range !2
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb22, label %bb20

cleanup1:                                         ; preds = %bb18, %bb17, %bb13, %bb14, %panic, %bb9, %bb7, %bb6, %bb5, %bb4, %bb3, %bb2
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %8, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %8, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb23

bb4:                                              ; preds = %bb3
  %_14.0 = extractvalue { i32*, i32* } %20, 0
  %_14.1 = extractvalue { i32*, i32* } %20, 1
; invoke core::iter::traits::iterator::Iterator::enumerate
  invoke void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h9e4c01dcad3e2ef7E(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>") dereferenceable(24) %_13, i32* nonnull %_14.0, i32* %_14.1)
          to label %bb5 unwind label %cleanup1

bb5:                                              ; preds = %bb4
; invoke core::slice::<impl [T]>::len
  %_16 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h38cdb01f3d73b908E"([0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]* nonnull align 4 %slots.0, i64 %slots.1)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
; invoke core::iter::traits::iterator::Iterator::take
  invoke void @_ZN4core4iter6traits8iterator8Iterator4take17h91876bb2c83db02fE(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>") dereferenceable(32) %_12, %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>"* noalias nocapture dereferenceable(24) %_13, i64 %_16)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2c807badaa7c3fe8E"(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>") dereferenceable(32) %_11, %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* noalias nocapture dereferenceable(32) %_12)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  %28 = bitcast %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* %iter to i8*
  %29 = bitcast %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 32, i1 false)
  br label %bb9

bb9:                                              ; preds = %bb16, %bb8
; invoke <core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::next
  %30 = invoke { i64, i32* } @"_ZN100_$LT$core..iter..adapters..take..Take$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h05a212bbb880ae21E"(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* align 8 dereferenceable(32) %iter)
          to label %bb10 unwind label %cleanup1

bb10:                                             ; preds = %bb9
  store { i64, i32* } %30, { i64, i32* }* %_19, align 8
  %31 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %_19, i32 0, i32 1
  %32 = bitcast i32** %31 to {}**
  %33 = load {}*, {}** %32, align 8
  %34 = icmp eq {}* %33, null
  %_22 = select i1 %34, i64 0, i64 1
  switch i64 %_22, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  store i8 0, i8* %_39, align 1
  %35 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %guard, i32 0, i32 0
  %_34.0 = load i64*, i64** %35, align 8, !nonnull !20
  %36 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %guard, i32 0, i32 1
  %_34.1 = load i64, i64* %36, align 8
; invoke core::mem::forget
  invoke void @_ZN4core3mem6forget17h623319471d1491c1E(i64* align 8 dereferenceable(24) %_34.0, i64 %_34.1)
          to label %bb17 unwind label %cleanup1

bb11:                                             ; preds = %bb10
  %37 = bitcast { i64, i32* }* %_19 to i64*
  %i = load i64, i64* %37, align 8
  %38 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %_19, i32 0, i32 1
  %39 = bitcast i32** %38 to %"proc_macro::TokenTree"**
  %b = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %39, align 8, !nonnull !20
  %40 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %guard, i32 0, i32 1
  store i64 %i, i64* %40, align 8
  %_30 = icmp ult i64 %i, %slots.1
  %41 = call i1 @llvm.expect.i1(i1 %_30, i1 true)
  br i1 %41, label %bb14, label %panic

bb14:                                             ; preds = %bb11
  %_27 = getelementptr inbounds [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"], [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]* %slots.0, i64 0, i64 %i
; invoke <proc_macro::TokenTree as core::clone::Clone>::clone
  %42 = invoke i64 @"_ZN60_$LT$proc_macro..TokenTree$u20$as$u20$core..clone..Clone$GT$5clone17hec15caa419bf4e6dE"(%"proc_macro::TokenTree"* align 4 dereferenceable(8) %b)
          to label %bb15 unwind label %cleanup1

panic:                                            ; preds = %bb11
; invoke core::panicking::panic_bounds_check
  invoke void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 %slots.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1419 to %"core::panic::location::Location"*)) #19
          to label %unreachable unwind label %cleanup1

unreachable:                                      ; preds = %panic
  unreachable

bb15:                                             ; preds = %bb14
  store i64 %42, i64* %7, align 8
  %43 = bitcast %"proc_macro::TokenTree"* %_31 to i8*
  %44 = bitcast i64* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 8 %44, i64 8, i1 false)
  %45 = bitcast %"proc_macro::TokenTree"* %_31 to i64*
  %46 = load i64, i64* %45, align 4
  store i64 %46, i64* %6, align 8
  %47 = bitcast %"proc_macro::TokenTree"* %val.i to i8*
  %48 = bitcast i64* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 8 %48, i64 8, i1 false)
  %49 = bitcast %"proc_macro::TokenTree"* %_5.i to i8*
  %50 = bitcast %"proc_macro::TokenTree"* %val.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 8, i1 false)
  %51 = bitcast %"proc_macro::TokenTree"* %_5.i to i64*
  %52 = load i64, i64* %51, align 4
  store i64 %52, i64* %4, align 8
  %53 = bitcast %"proc_macro::TokenTree"* %val.i.i to i8*
  %54 = bitcast i64* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 8 %54, i64 8, i1 false)
  %55 = bitcast %"proc_macro::TokenTree"* %_3.i.i to i8*
  %56 = bitcast %"proc_macro::TokenTree"* %val.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %56, i64 8, i1 false)
  %57 = bitcast %"proc_macro::TokenTree"* %_3.i.i to i64*
  %58 = load i64, i64* %57, align 4
  store i64 %58, i64* %1, align 8
  %59 = bitcast %"proc_macro::TokenTree"* %value.i to i8*
  %60 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 8 %60, i64 8, i1 false)
  %61 = bitcast %"proc_macro::TokenTree"* %_2.i to i8*
  %62 = bitcast %"proc_macro::TokenTree"* %value.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 8, i1 false)
  %63 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>"* %0 to %"proc_macro::TokenTree"*
  %64 = bitcast %"proc_macro::TokenTree"* %63 to i8*
  %65 = bitcast %"proc_macro::TokenTree"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %65, i64 8, i1 false)
  %66 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>"* %0 to i64*
  %67 = load i64, i64* %66, align 4
  br label %"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$5write17h053a6eae6df1a6b7E.exit"

"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$5write17h053a6eae6df1a6b7E.exit": ; preds = %bb15
  store i64 %67, i64* %2, align 8
  %68 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>"* %_2.i.i to i8*
  %69 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 8 %69, i64 8, i1 false)
  %70 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %3 to %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>"*
  %71 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>"* %70 to i8*
  %72 = bitcast %"core::mem::manually_drop::ManuallyDrop<proc_macro::TokenTree>"* %_2.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 8, i1 false)
  %73 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %3 to i64*
  %74 = load i64, i64* %73, align 4
  store i64 %74, i64* %5, align 8
  %75 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %_4.i to i8*
  %76 = bitcast i64* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 8 %76, i64 8, i1 false)
  %77 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %_27 to i8*
  %78 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %_4.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 8, i1 false)
  %79 = bitcast %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %_27 to %"proc_macro::TokenTree"*
  br label %bb16

bb16:                                             ; preds = %"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$5write17h053a6eae6df1a6b7E.exit"
  br label %bb9

bb17:                                             ; preds = %bb13
; invoke core::slice::<impl [T]>::len
  %_37 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h22582127986feed0E"([0 x %"proc_macro::TokenTree"]* nonnull align 4 %s.0, i64 %s.1)
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h70cf08fcd00ff5dbE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %vec, i64 %_37)
          to label %bb19 unwind label %cleanup1

bb19:                                             ; preds = %bb18
  store i8 0, i8* %_39, align 1
  ret void

bb20:                                             ; preds = %bb22, %bb23
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$proc_macro..TokenTree$GT$$GT$17h11ec50d681298b2eE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* %vec) #18
  br label %bb25

bb22:                                             ; preds = %bb23
; call core::ptr::drop_in_place<<T as alloc::slice::hack::ConvertVec>::to_vec::DropGuard<proc_macro::TokenTree,alloc::alloc::Global>>
  call void @"_ZN4core3ptr143drop_in_place$LT$$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$..to_vec..DropGuard$LT$proc_macro..TokenTree$C$alloc..alloc..Global$GT$$GT$17h9ebcc4967f510253E"({ i64*, i64 }* %guard) #18
  br label %bb20

bb21:                                             ; preds = %bb24, %bb25
  %80 = bitcast { i8*, i32 }* %8 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %8, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = insertvalue { i8*, i32 } undef, i8* %81, 0
  %85 = insertvalue { i8*, i32 } %84, i32 %83, 1
  resume { i8*, i32 } %85

bb24:                                             ; preds = %bb25
  br label %bb21
}

; <T as alloc::slice::hack::ConvertVec>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17hbd4413739dec8de1E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %v, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
; invoke core::slice::<impl [T]>::len
  %_3 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hbc92195a81a43742E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_17, align 1
; invoke alloc::vec::Vec<T,A>::with_capacity_in
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hcb963cd3d3db946cE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %v, i64 %_3)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %bb9, %cleanup
  %1 = load i8, i8* %_17, align 1, !range !2
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb11, label %bb10

cleanup:                                          ; preds = %bb1, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; invoke core::slice::<impl [T]>::as_ptr
  %_7 = invoke i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf84c2d601562b202E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_9 = invoke i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hf09764db7aa5c1adE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %v)
          to label %bb4 unwind label %cleanup1

bb9:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hd8350eb4e54098a8E"(%"alloc::vec::Vec<u8>"* %v) #18
  br label %bb12

cleanup1:                                         ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
; invoke core::slice::<impl [T]>::len
  %_11 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hbc92195a81a43742E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
          to label %bb5 unwind label %cleanup1

bb5:                                              ; preds = %bb4
; invoke core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
  invoke void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17h76d52783eef2b06eE"(i8* %_7, i8* %_9, i64 %_11)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
; invoke core::slice::<impl [T]>::len
  %_15 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hbc92195a81a43742E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h6067e44850d26d4aE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %v, i64 %_15)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  ret void

bb10:                                             ; preds = %bb11, %bb12
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb11:                                             ; preds = %bb12
  br label %bb10
}

; <char as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hd1a4941e56993d54E"(i32 %self, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_9 = alloca [4 x i8], align 1
  %0 = getelementptr inbounds [4 x i8], [4 x i8]* %_9, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 4, i1 false)
  %_6.0 = bitcast [4 x i8]* %_9 to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %1 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h8d57095e1ef61f0dE"(i32 %self, [0 x i8]* nonnull align 1 %_6.0, i64 4)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <&str as core::str::pattern::Pattern>::is_prefix_of
  %2 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hab5ca7f4fe7e41ffE"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %2
}

; <char as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h476d4dfb6c6fbef6E"(%"core::str::pattern::CharSearcher"* noalias nocapture sret(%"core::str::pattern::CharSearcher") dereferenceable(48) %0, i32 %self, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_16 = alloca [4 x i8], align 1
  %utf8_encoded = alloca [4 x i8], align 1
  %1 = getelementptr inbounds [4 x i8], [4 x i8]* %utf8_encoded, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 4, i1 false)
  %_8.0 = bitcast [4 x i8]* %utf8_encoded to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %2 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h8d57095e1ef61f0dE"(i32 %self, [0 x i8]* nonnull align 1 %_8.0, i64 4)
  %_6.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::<impl str>::len
  %utf8_size = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::str::<impl str>::len
  %_12 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast [4 x i8]* %_16 to i8*
  %4 = bitcast [4 x i8]* %utf8_encoded to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 4, i1 false)
  %5 = bitcast %"core::str::pattern::CharSearcher"* %0 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  store i64 %haystack.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 1
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 2
  store i64 %_12, i64* %9, align 8
  %10 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 4
  store i32 %self, i32* %10, align 8
  %11 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 3
  store i64 %utf8_size, i64* %11, align 8
  %12 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 5
  %13 = bitcast [4 x i8]* %12 to i8*
  %14 = bitcast [4 x i8]* %_16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 1 %14, i64 4, i1 false)
  ret void
}

; <char as core::str::pattern::Pattern>::is_contained_in
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$15is_contained_in17h71b441341bfbb3a9E"(i32 %self, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %buffer = alloca [4 x i8], align 1
  %_11 = alloca i8, align 1
  %1 = alloca i8, align 1
  %2 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %2)
  %_3 = icmp ult i32 %self, 128
  br i1 %_3, label %bb1, label %bb4

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds [4 x i8], [4 x i8]* %buffer, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 4, i1 false)
  %_17.0 = bitcast [4 x i8]* %buffer to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %4 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h8d57095e1ef61f0dE"(i32 %self, [0 x i8]* nonnull align 1 %_17.0, i64 4)
  %_15.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_15.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb5

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %haystack.1, i64* %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %8 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !20
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1
  %_7.0 = extractvalue { [0 x i8]*, i64 } %12, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %12, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %13 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %13)
  %14 = trunc i32 %self to i8
  store i8 %14, i8* %_11, align 1
; call core::slice::<impl [T]>::contains
  %15 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8contains17he9ac7ab3ab389013E"([0 x i8]* nonnull align 1 %_7.0, i64 %_7.1, i8* align 1 dereferenceable(1) %_11)
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %1, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  %17 = load i8, i8* %1, align 1, !range !2
  %18 = trunc i8 %17 to i1
  ret i1 %18

bb5:                                              ; preds = %bb4
; call core::str::pattern::Pattern::is_contained_in
  %19 = call zeroext i1 @_ZN4core3str7pattern7Pattern15is_contained_in17h0d8ded745001b704E([0 x i8]* nonnull align 1 %_15.0, i64 %_15.1, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %1, align 1
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <F as core::str::pattern::MultiCharEq>::matches
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hf6c54823d7091a11E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]"* nonnull align 1 %self, i32 %c) unnamed_addr #0 {
start:
  %_4 = alloca i32, align 4
  store i32 %c, i32* %_4, align 4
  %0 = load i32, i32* %_4, align 4, !range !80
; call <proc_macro2::fallback::Literal as core::str::traits::FromStr>::from_str::{{closure}}
  %1 = call zeroext i1 @"_ZN77_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str28_$u7b$$u7b$closure$u7d$$u7d$17h2760f224f566527fE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]"* nonnull align 1 %self, i32 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; <u8 as core::slice::cmp::SliceContains>::slice_contains
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN54_$LT$u8$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains17h7cffb99ae0b46917E"(i8* align 1 dereferenceable(1) %self, [0 x i8]* nonnull align 1 %x.0, i64 %x.1) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
  %_5 = load i8, i8* %self, align 1
; call core::slice::memchr::memchr
  %0 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17h9c45462924d98aa5E(i8 %_5, [0 x i8]* nonnull align 1 %x.0, i64 %x.1)
  store { i64, i64 } %0, { i64, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::is_some
  %1 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17hcc1d1afcd2c82442E"({ i64, i64 }* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %1
}

; <&str as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hab5ca7f4fe7e41ffE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %haystack.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !20
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %10, align 8
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %self.1, i64* %11, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %13 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !20
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %17 = insertvalue { [0 x i8]*, i64 } %16, i64 %15, 1
  %_7.0 = extractvalue { [0 x i8]*, i64 } %17, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %17, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::slice::<impl [T]>::starts_with
  %18 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h78e02b7a29820b5dE"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, [0 x i8]* nonnull align 1 %_7.0, i64 %_7.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %18
}

; <&str as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17ha861664cd265bc21E"(%"core::str::pattern::StrSearcher"* noalias nocapture sret(%"core::str::pattern::StrSearcher") dereferenceable(104) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
; call core::str::pattern::StrSearcher::new
  call void @_ZN4core3str7pattern11StrSearcher3new17h95d68a0534dab867E(%"core::str::pattern::StrSearcher"* noalias nocapture sret(%"core::str::pattern::StrSearcher") dereferenceable(104) %0, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::string::String as core::cmp::Ord>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN56_$LT$alloc..string..String$u20$as$u20$core..cmp..Ord$GT$3cmp17ha531ae584e4c2137E"(%"alloc::string::String"* align 8 dereferenceable(24) %self, %"alloc::string::String"* align 8 dereferenceable(24) %other) unnamed_addr #0 {
start:
  %_5 = alloca i8, align 1
  %0 = alloca i8, align 1
  %__self_1_0 = bitcast %"alloc::string::String"* %other to %"alloc::vec::Vec<u8>"*
  %__self_0_0 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
; call <alloc::vec::Vec<T,A> as core::cmp::Ord>::cmp
  %1 = call i8 @"_ZN63_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..cmp..Ord$GT$3cmp17h724111ee2783e8b6E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %__self_0_0, %"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %__self_1_0), !range !30
  store i8 %1, i8* %_5, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %_10 = load i8, i8* %_5, align 1, !range !30
  %2 = icmp eq i8 %_10, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb4

bb2:                                              ; preds = %bb1
  %cmp = load i8, i8* %_5, align 1, !range !30
  store i8 %cmp, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %3 = load i8, i8* %0, align 1, !range !30
  ret i8 %3
}

; <proc_macro::Group as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN56_$LT$proc_macro..Group$u20$as$u20$core..clone..Clone$GT$5clone17he1c3dc9b0d6e1fceE"(%"proc_macro::Group"* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_3 = alloca %"proc_macro::bridge::client::Group", align 4
  %1 = alloca %"proc_macro::Group", align 4
  %__self_0_0 = bitcast %"proc_macro::Group"* %self to %"proc_macro::bridge::client::Group"*
; call <proc_macro::bridge::client::Group as core::clone::Clone>::clone
  %2 = call i32 @"_ZN72_$LT$proc_macro..bridge..client..Group$u20$as$u20$core..clone..Clone$GT$5clone17h9f6dcf87757fd27aE"(%"proc_macro::bridge::client::Group"* align 4 dereferenceable(4) %__self_0_0)
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"proc_macro::bridge::client::Group"* %_3 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"proc_macro::Group"* %1 to %"proc_macro::bridge::client::Group"*
  %6 = bitcast %"proc_macro::bridge::client::Group"* %5 to i8*
  %7 = bitcast %"proc_macro::bridge::client::Group"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::Group"* %1 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; <proc_macro::Ident as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN56_$LT$proc_macro..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h8f7b72947ebd0f02E"(%"proc_macro::Ident"* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_3 = alloca %"proc_macro::bridge::client::Ident", align 4
  %1 = alloca %"proc_macro::Ident", align 4
  %__self_0_0 = bitcast %"proc_macro::Ident"* %self to %"proc_macro::bridge::client::Ident"*
; call <proc_macro::bridge::client::Ident as core::clone::Clone>::clone
  %2 = call i32 @"_ZN72_$LT$proc_macro..bridge..client..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h12f270af630b7442E"(%"proc_macro::bridge::client::Ident"* align 4 dereferenceable(4) %__self_0_0)
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"proc_macro::bridge::client::Ident"* %_3 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"proc_macro::Ident"* %1 to %"proc_macro::bridge::client::Ident"*
  %6 = bitcast %"proc_macro::bridge::client::Ident"* %5 to i8*
  %7 = bitcast %"proc_macro::bridge::client::Ident"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::Ident"* %1 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; <proc_macro::Punct as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN56_$LT$proc_macro..Punct$u20$as$u20$core..clone..Clone$GT$5clone17h559090529518f331E"(%"proc_macro::Punct"* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_3 = alloca %"proc_macro::bridge::client::Punct", align 4
  %1 = alloca %"proc_macro::Punct", align 4
  %__self_0_0 = bitcast %"proc_macro::Punct"* %self to %"proc_macro::bridge::client::Punct"*
; call <proc_macro::bridge::client::Punct as core::clone::Clone>::clone
  %2 = call i32 @"_ZN72_$LT$proc_macro..bridge..client..Punct$u20$as$u20$core..clone..Clone$GT$5clone17hac9ef9c44e9fa5fbE"(%"proc_macro::bridge::client::Punct"* align 4 dereferenceable(4) %__self_0_0)
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"proc_macro::bridge::client::Punct"* %_3 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"proc_macro::Punct"* %1 to %"proc_macro::bridge::client::Punct"*
  %6 = bitcast %"proc_macro::bridge::client::Punct"* %5 to i8*
  %7 = bitcast %"proc_macro::bridge::client::Punct"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::Punct"* %1 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; <std::path::PathBuf as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN57_$LT$std..path..PathBuf$u20$as$u20$core..clone..Clone$GT$5clone17h2c4b8125d2966649E"(%"std::path::PathBuf"* noalias nocapture sret(%"std::path::PathBuf") dereferenceable(24) %0, %"std::path::PathBuf"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = alloca %"std::ffi::os_str::OsString", align 8
  %_3 = bitcast %"std::path::PathBuf"* %self to %"std::ffi::os_str::OsString"*
; call <std::ffi::os_str::OsString as core::clone::Clone>::clone
  call void @"_ZN65_$LT$std..ffi..os_str..OsString$u20$as$u20$core..clone..Clone$GT$5clone17h93597e1d25767e7fE"(%"std::ffi::os_str::OsString"* noalias nocapture sret(%"std::ffi::os_str::OsString") dereferenceable(24) %_2, %"std::ffi::os_str::OsString"* align 8 dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"std::path::PathBuf"* %0 to %"std::ffi::os_str::OsString"*
  %2 = bitcast %"std::ffi::os_str::OsString"* %1 to i8*
  %3 = bitcast %"std::ffi::os_str::OsString"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; <alloc::string::String as core::fmt::Write>::write_char
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h1e6bb7c6ae9f1e43E"(%"alloc::string::String"* align 8 dereferenceable(24) %self, i32 %c) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %self, i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; <alloc::string::String as core::fmt::Write>::write_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h2821c2fca6a3609bE"(%"alloc::string::String"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17h8bcb7dfa0493c639E(%"alloc::string::String"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; <proc_macro::Literal as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN58_$LT$proc_macro..Literal$u20$as$u20$core..clone..Clone$GT$5clone17ha4effe94ca93fcc6E"(%"proc_macro::Literal"* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_3 = alloca %"proc_macro::bridge::client::Literal", align 4
  %1 = alloca %"proc_macro::Literal", align 4
  %__self_0_0 = bitcast %"proc_macro::Literal"* %self to %"proc_macro::bridge::client::Literal"*
; call <proc_macro::bridge::client::Literal as core::clone::Clone>::clone
  %2 = call i32 @"_ZN74_$LT$proc_macro..bridge..client..Literal$u20$as$u20$core..clone..Clone$GT$5clone17hbf992a04f63ee438E"(%"proc_macro::bridge::client::Literal"* align 4 dereferenceable(4) %__self_0_0)
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"proc_macro::bridge::client::Literal"* %_3 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"proc_macro::Literal"* %1 to %"proc_macro::bridge::client::Literal"*
  %6 = bitcast %"proc_macro::bridge::client::Literal"* %5 to i8*
  %7 = bitcast %"proc_macro::bridge::client::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::Literal"* %1 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; <alloc::alloc::Global as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h9f232de56c8f9037E"(%"alloc::alloc::Global"* nonnull align 1 %self) unnamed_addr #0 {
start:
  ret void
}

; alloc::collections::TryReserveError::kind
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h8184c7cdc0a49ca4E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
  %0 = call { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h5fa364adad6c3b41E"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hab0586ae0da4fc4eE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !20
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17hf3db0623a5fd9bcdE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %_2, [0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h3a553588053e2461E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, %"alloc::vec::Vec<u8>"* noalias nocapture dereferenceable(24) %_2)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::vec::Vec<T>::with_capacity
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17haa61a8ffc4ac3561E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, i64 %capacity) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::with_capacity_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hcb963cd3d3db946cE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, i64 %capacity)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h3bd7eafdf39cd676E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = bitcast %"alloc::vec::Vec<TokenTree>"* %0 to { i64*, i64 }*
  %2 = load i64*, i64** getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i64*, i64 }*), i32 0, i32 0), align 8, !nonnull !20
  %3 = load i64, i64* getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i64*, i64 }*), i32 0, i32 1), align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  store i64* %2, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h9651a10911b2153fE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<proc_macro::TokenTree>") dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = bitcast %"alloc::vec::Vec<proc_macro::TokenTree>"* %0 to { i32*, i64 }*
  %2 = load i32*, i32** getelementptr inbounds ({ i32*, i64 }, { i32*, i64 }* bitcast (<{ [16 x i8] }>* @2 to { i32*, i64 }*), i32 0, i32 0), align 8, !nonnull !20
  %3 = load i64, i64* getelementptr inbounds ({ i32*, i64 }, { i32*, i64 }* bitcast (<{ [16 x i8] }>* @2 to { i32*, i64 }*), i32 0, i32 1), align 8
  %4 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 0
  store i32* %2, i32** %4, align 8
  %5 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::Vec<proc_macro::TokenTree>", %"alloc::vec::Vec<proc_macro::TokenTree>"* %0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hde12185ed0e5bf49E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*
  %2 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @3 to { i8*, i64 }*), i32 0, i32 0), align 8, !nonnull !20
  %3 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @3 to { i8*, i64 }*), i32 0, i32 1), align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hdf1c071211edda7fE"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* noalias nocapture sret(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>") dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = bitcast %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %0 to { i64*, i64 }*
  %2 = load i64*, i64** getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i64*, i64 }*), i32 0, i32 0), align 8, !nonnull !20
  %3 = load i64, i64* getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i64*, i64 }*), i32 0, i32 1), align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  store i64* %2, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>", %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h274172260de658ceE"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h647374ef1ba3b17bE"({ i64*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17haf6d44baa4c89275E"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %ptr
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"proc_macro::TokenTree"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h6f4663d8bec95cf4E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<proc_macro::TokenTree>"* %self to { i32*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call %"proc_macro::TokenTree"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h8b342b8f266a7fecE"({ i32*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0cb6a7c5c268c72fE"(%"proc_macro::TokenTree"* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"proc_macro::TokenTree"* %ptr
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %TokenTree* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17haf38022be0a8fd96E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<TokenTree>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call %TokenTree* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hdb23bc7de493375cE"({ i64*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hdac48138c0f4bcfaE"(%TokenTree* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %TokenTree* %ptr
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hf09764db7aa5c1adE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h27dfaf706e9390adE"({ i8*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17haaf0b225da85ab5dE"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %ptr
}

; alloc::vec::Vec<T,A>::append_elements
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h035caf5151e7a454E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, [0 x i8]* %other.0, i64 %other.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h071249ac61ab92eeE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i64 %other.1)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::len
  %len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hdc591608662dab0cE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_11 = bitcast [0 x i8]* %other.0 to i8*
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_14 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hf09764db7aa5c1adE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
  %1 = getelementptr inbounds i8, i8* %_14, i64 %len
  store i8* %1, i8** %0, align 8
  %_3.i = load i8*, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h5e4499aff0018dfdE(i8* %_11, i8* %_3.i, i64 %other.1)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %other.1
  store i64 %5, i64* %2, align 8
  ret void
}

; alloc::vec::Vec<T,A>::append_elements
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h2d9131bc61f1c99aE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self, [0 x %TokenTree]* %other.0, i64 %other.1) unnamed_addr #0 {
start:
  %0 = alloca %TokenTree*, align 8
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h4f150b8dacc470d5E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self, i64 %other.1)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::len
  %len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h99027def3e7bafd0E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_11 = bitcast [0 x %TokenTree]* %other.0 to %TokenTree*
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_14 = call %TokenTree* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17haf38022be0a8fd96E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
  %1 = getelementptr inbounds %TokenTree, %TokenTree* %_14, i64 %len
  store %TokenTree* %1, %TokenTree** %0, align 8
  %_3.i = load %TokenTree*, %TokenTree** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h7bc88eec128897e3E(%TokenTree* %_11, %TokenTree* %_3.i, i64 %other.1)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %3 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %other.1
  store i64 %5, i64* %2, align 8
  ret void
}

; alloc::vec::Vec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hc8a716a1e79e4023E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, i64 %capacity) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %1 = call { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h4b4d2bebc51e526fE"(i64 %capacity)
  %_3.0 = extractvalue { i64*, i64 } %1, 0
  %_3.1 = extractvalue { i64*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"alloc::vec::Vec<TokenTree>"* %0 to { i64*, i64 }*
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  store i64* %_3.0, i64** %3, align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %_3.1, i64* %4, align 8
  %5 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  ret void
}

; alloc::vec::Vec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hcb963cd3d3db946cE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, i64 %capacity) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %1 = call { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hd8d0af38837e49edE"(i64 %capacity)
  %_3.0 = extractvalue { i8*, i64 } %1, 0
  %_3.1 = extractvalue { i8*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_3.0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_3.1, i64* %4, align 8
  %5 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  ret void
}

; alloc::vec::Vec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hf48b2d1dc5a753d9E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<proc_macro::TokenTree>") dereferenceable(24) %0, i64 %capacity) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %1 = call { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hf4df7dfb043833a6E"(i64 %capacity)
  %_3.0 = extractvalue { i32*, i64 } %1, 0
  %_3.1 = extractvalue { i32*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"alloc::vec::Vec<proc_macro::TokenTree>"* %0 to { i32*, i64 }*
  %3 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 0
  store i32* %_3.0, i32** %3, align 8
  %4 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1
  store i64 %_3.1, i64* %4, align 8
  %5 = getelementptr inbounds %"alloc::vec::Vec<proc_macro::TokenTree>", %"alloc::vec::Vec<proc_macro::TokenTree>"* %0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  ret void
}

; alloc::vec::Vec<T,A>::extend_from_slice
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h50020e967d55d44cE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
; call core::slice::<impl [T]>::iter
  %0 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf8525a97290cd8e4E"([0 x i8]* nonnull align 1 %other.0, i64 %other.1)
  %_4.0 = extractvalue { i8*, i8* } %0, 0
  %_4.1 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h27a433780a504339E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i8* nonnull %_4.0, i8* %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::vec::Vec<T,A>::from_raw_parts_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in17h4cea94b97f060368E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, %TokenTree* %ptr, i64 %length, i64 %capacity) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::from_raw_parts_in
  %1 = call { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17h39c8e79352bd938dE"(%TokenTree* %ptr, i64 %capacity)
  %_5.0 = extractvalue { i64*, i64 } %1, 0
  %_5.1 = extractvalue { i64*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"alloc::vec::Vec<TokenTree>"* %0 to { i64*, i64 }*
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  store i64* %_5.0, i64** %3, align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %_5.1, i64* %4, align 8
  %5 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %0, i32 0, i32 1
  store i64 %length, i64* %5, align 8
  ret void
}

; alloc::vec::Vec<T,A>::spare_capacity_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h6ed1012c837993e7E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca %TokenTree*, align 8
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_7 = call %TokenTree* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17haf38022be0a8fd96E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds %TokenTree, %TokenTree* %_7, i64 %_9
  store %TokenTree* %3, %TokenTree** %1, align 8
  %_3.i = load %TokenTree*, %TokenTree** %1, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = bitcast %TokenTree* %_3.i to %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"*
  %_12 = bitcast %"alloc::vec::Vec<TokenTree>"* %self to { i64*, i64 }*
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_12, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %_13 = load i64, i64* %7, align 8
  %_10 = sub i64 %6, %_13
; call core::slice::raw::from_raw_parts_mut
  %8 = call { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17ha80bd306be02c786E(%"core::mem::maybe_uninit::MaybeUninit<TokenTree>"* %_5, i64 %_10)
  %_4.0 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %8, 0
  %_4.1 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %8, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %9 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } undef, [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]* %_4.0, 0
  %10 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %9, i64 %_4.1, 1
  ret { [0 x %"core::mem::maybe_uninit::MaybeUninit<TokenTree>"]*, i64 } %10
}

; alloc::vec::Vec<T,A>::spare_capacity_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17ha1bedd9ac1056fb7E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca %"proc_macro::TokenTree"*, align 8
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_7 = call %"proc_macro::TokenTree"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h6f4663d8bec95cf4E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"alloc::vec::Vec<proc_macro::TokenTree>", %"alloc::vec::Vec<proc_macro::TokenTree>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds %"proc_macro::TokenTree", %"proc_macro::TokenTree"* %_7, i64 %_9
  store %"proc_macro::TokenTree"* %3, %"proc_macro::TokenTree"** %1, align 8
  %_3.i = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %1, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = bitcast %"proc_macro::TokenTree"* %_3.i to %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"*
  %_12 = bitcast %"alloc::vec::Vec<proc_macro::TokenTree>"* %self to { i32*, i64 }*
  %4 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %_12, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = getelementptr inbounds %"alloc::vec::Vec<proc_macro::TokenTree>", %"alloc::vec::Vec<proc_macro::TokenTree>"* %self, i32 0, i32 1
  %_13 = load i64, i64* %7, align 8
  %_10 = sub i64 %6, %_13
; call core::slice::raw::from_raw_parts_mut
  %8 = call { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hafbf00fa479035b2E(%"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"* %_5, i64 %_10)
  %_4.0 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %8, 0
  %_4.1 = extractvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %8, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %9 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } undef, [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]* %_4.0, 0
  %10 = insertvalue { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %9, i64 %_4.1, 1
  ret { [0 x %"core::mem::maybe_uninit::MaybeUninit<proc_macro::TokenTree>"]*, i64 } %10
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h5043d7be96cfe829E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<proc_macro::TokenTree>", %"alloc::vec::Vec<proc_macro::TokenTree>"* %self, i32 0, i32 1
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h622002f3eeb64f89E"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>", %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self, i32 0, i32 1
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h99027def3e7bafd0E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hdc591608662dab0cE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; alloc::vec::Vec<T,A>::pop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h01a6e8a18c8181a2E"(%"core::option::Option<TokenTree>"* noalias nocapture sret(%"core::option::Option<TokenTree>") dereferenceable(48) %0, %"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %1 = alloca %TokenTree*, align 8
  %_3 = alloca %TokenTree, align 8
  %2 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %_2 = load i64, i64* %2, align 8
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<TokenTree>"* %0 to i32*
  store i32 4, i32* %4, align 8
  br label %bb7

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %6 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, 1
  store i64 %8, i64* %5, align 8
; call alloc::vec::Vec<T,A>::as_ptr
  %_5 = call %TokenTree* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h80431fd5da059e9eE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
; call alloc::vec::Vec<T,A>::len
  %_7 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h99027def3e7bafd0E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb4

bb4:                                              ; preds = %bb3
  %9 = getelementptr inbounds %TokenTree, %TokenTree* %_5, i64 %_7
  store %TokenTree* %9, %TokenTree** %1, align 8
  %10 = load %TokenTree*, %TokenTree** %1, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::ptr::read
  call void @_ZN4core3ptr4read17h4c36405c669cc0a7E(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %_3, %TokenTree* %10)
  br label %bb6

bb6:                                              ; preds = %bb5
  %11 = bitcast %"core::option::Option<TokenTree>"* %0 to %"core::option::Option<TokenTree>::Some"*
  %12 = bitcast %"core::option::Option<TokenTree>::Some"* %11 to %TokenTree*
  %13 = bitcast %TokenTree* %12 to i8*
  %14 = bitcast %TokenTree* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 48, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb1, %bb6
  ret void
}

; alloc::vec::Vec<T,A>::pop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h0ca971be8b2abc50E"(%"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>"* noalias nocapture sret(%"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>") dereferenceable(32) %0, %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %1 = alloca { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*, align 8
  %_3 = alloca { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, align 8
  %2 = getelementptr inbounds %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>", %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self, i32 0, i32 1
  %_2 = load i64, i64* %2, align 8
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %0 to i8*
  store i8 4, i8* %4, align 8
  br label %bb7

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>", %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self, i32 0, i32 1
  %6 = getelementptr inbounds %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>", %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, 1
  store i64 %8, i64* %5, align 8
; call alloc::vec::Vec<T,A>::as_ptr
  %_5 = call { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17he7b12294da37f6ecE"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
; call alloc::vec::Vec<T,A>::len
  %_7 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h622002f3eeb64f89E"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %self)
  br label %bb4

bb4:                                              ; preds = %bb3
  %9 = getelementptr inbounds { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_5, i64 %_7
  store { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %9, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %1, align 8
  %10 = load { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %1, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::ptr::read
  call void @_ZN4core3ptr4read17h971cb86e41d2d7a0E({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* noalias nocapture sret({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }) dereferenceable(32) %_3, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %10)
  br label %bb6

bb6:                                              ; preds = %bb5
  %11 = bitcast %"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %0 to %"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>::Some"*
  %12 = bitcast %"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>::Some"* %11 to { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*
  %13 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %12 to i8*
  %14 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb1, %bb6
  ret void
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h2713efb11b97e64cE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i8 %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %3, align 8
  %_6 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp eq i64 %_4, %6
  br i1 %_3, label %bb2, label %bb4

bb10:                                             ; preds = %cleanup
  %7 = load i8, i8* %_17, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

cleanup:                                          ; preds = %bb6, %bb4, %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb4:                                              ; preds = %bb3, %bb1
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_11 = invoke i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hf09764db7aa5c1adE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
          to label %bb5 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_8 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
  %14 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %14, align 8
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hd765e67c05ac0732E"({ i8*, i64 }* align 8 dereferenceable(16) %_8, i64 %_9)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb5:                                              ; preds = %bb4
  %15 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_13 = load i64, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %_11, i64 %_13
  store i8* %16, i8** %1, align 8
  %_3.i = load i8*, i8** %1, align 8
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h9c2076a59cbc9ab0E.exit"

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h9c2076a59cbc9ab0E.exit": ; preds = %bb5
  br label %bb6

bb6:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h9c2076a59cbc9ab0E.exit"
  store i8 0, i8* %_17, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17heb5e817f5e7260a4E(i8* %_3.i, i8 %value)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %17 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %18 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %17, align 8
  ret void

bb8:                                              ; preds = %bb9, %bb10
  %21 = bitcast { i8*, i32 }* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26

bb9:                                              ; preds = %bb10
  br label %bb8
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h3f5781f67b14714cE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self, %TokenTree* noalias nocapture dereferenceable(48) %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca %TokenTree*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_16 = alloca %TokenTree, align 8
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
  %3 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %3, align 8
  %_6 = bitcast %"alloc::vec::Vec<TokenTree>"* %self to { i64*, i64 }*
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp eq i64 %_4, %6
  br i1 %_3, label %bb2, label %bb4

bb10:                                             ; preds = %cleanup
  %7 = load i8, i8* %_17, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

cleanup:                                          ; preds = %bb6, %bb4, %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb4:                                              ; preds = %bb3, %bb1
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_11 = invoke %TokenTree* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17haf38022be0a8fd96E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self)
          to label %bb5 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_8 = bitcast %"alloc::vec::Vec<TokenTree>"* %self to { i64*, i64 }*
  %14 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %14, align 8
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h7bc838fc9b379737E"({ i64*, i64 }* align 8 dereferenceable(16) %_8, i64 %_9)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb5:                                              ; preds = %bb4
  %15 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %_13 = load i64, i64* %15, align 8
  %16 = getelementptr inbounds %TokenTree, %TokenTree* %_11, i64 %_13
  store %TokenTree* %16, %TokenTree** %1, align 8
  %_3.i = load %TokenTree*, %TokenTree** %1, align 8
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17he00aba794f4de07aE.exit"

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17he00aba794f4de07aE.exit": ; preds = %bb5
  br label %bb6

bb6:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17he00aba794f4de07aE.exit"
  store i8 0, i8* %_17, align 1
  %17 = bitcast %TokenTree* %_16 to i8*
  %18 = bitcast %TokenTree* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 48, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h301b0ce9b0367c5aE(%TokenTree* %_3.i, %TokenTree* noalias nocapture dereferenceable(48) %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %19 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %20 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %19, align 8
  ret void

bb8:                                              ; preds = %bb9, %bb10
  %23 = bitcast { i8*, i32 }* %2 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %value) #18
  br label %bb8
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hf6eca3128bf369fbE"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %self, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* noalias nocapture dereferenceable(32) %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_16 = alloca { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, align 8
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
  %3 = getelementptr inbounds %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>", %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %3, align 8
  %_6 = bitcast %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self to { i64*, i64 }*
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp eq i64 %_4, %6
  br i1 %_3, label %bb2, label %bb4

bb10:                                             ; preds = %cleanup
  %7 = load i8, i8* %_17, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

cleanup:                                          ; preds = %bb6, %bb4, %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb4:                                              ; preds = %bb3, %bb1
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_11 = invoke { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h274172260de658ceE"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %self)
          to label %bb5 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_8 = bitcast %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self to { i64*, i64 }*
  %14 = getelementptr inbounds %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>", %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %14, align 8
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h5a2191a7ec0dbab4E"({ i64*, i64 }* align 8 dereferenceable(16) %_8, i64 %_9)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb5:                                              ; preds = %bb4
  %15 = getelementptr inbounds %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>", %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self, i32 0, i32 1
  %_13 = load i64, i64* %15, align 8
  %16 = getelementptr inbounds { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_11, i64 %_13
  store { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %16, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %1, align 8
  %_3.i = load { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %1, align 8
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hf97bcb522ab585b7E.exit"

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hf97bcb522ab585b7E.exit": ; preds = %bb5
  br label %bb6

bb6:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hf97bcb522ab585b7E.exit"
  store i8 0, i8* %_17, align 1
  %17 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_16 to i8*
  %18 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h70a90a43d2912f05E({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_3.i, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* noalias nocapture dereferenceable(32) %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %19 = getelementptr inbounds %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>", %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self, i32 0, i32 1
  %20 = getelementptr inbounds %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>", %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %19, align 8
  ret void

bb8:                                              ; preds = %bb9, %bb10
  %23 = bitcast { i8*, i32 }* %2 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)>
  call void @"_ZN4core3ptr99drop_in_place$LT$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$17h4354002c24974f83E"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %value) #18
  br label %bb8
}

; alloc::vec::Vec<T,A>::drain
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17hf7fc01d54ea30cd9E"(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::drain::Drain<proc_macro::TokenTree>") dereferenceable(40) %0, %"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca %"proc_macro::TokenTree"*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_30 = alloca i8, align 1
  %_9 = alloca i64, align 8
  store i8 0, i8* %_30, align 1
  store i8 1, i8* %_30, align 1
; invoke alloc::vec::Vec<T,A>::len
  %len = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h5043d7be96cfe829E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_30, align 1
  store i64 %len, i64* %_9, align 8
  %3 = load i64, i64* %_9, align 8
; invoke core::slice::index::range
  %4 = invoke { i64, i64 } @_ZN4core5slice5index5range17h6f627b2b6677e985E(i64 %3, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1421 to %"core::panic::location::Location"*))
          to label %bb2 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %5 = load i8, i8* %_30, align 1, !range !2
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb10, label %bb9

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb3, %bb2, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb11

bb2:                                              ; preds = %bb1
  %_7.0 = extractvalue { i64, i64 } %4, 0
  %_7.1 = extractvalue { i64, i64 } %4, 1
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h70cf08fcd00ff5dbE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self, i64 %_7.0)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_16 = invoke %"proc_macro::TokenTree"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h6f4663d8bec95cf4E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %12 = getelementptr inbounds %"proc_macro::TokenTree", %"proc_macro::TokenTree"* %_16, i64 %_7.0
  store %"proc_macro::TokenTree"* %12, %"proc_macro::TokenTree"** %1, align 8
  %_3.i = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %1, align 8
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h45ab4dd9fe9c0438E.exit"

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h45ab4dd9fe9c0438E.exit": ; preds = %bb4
  br label %bb5

bb5:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h45ab4dd9fe9c0438E.exit"
  %_19 = sub i64 %_7.1, %_7.0
; invoke core::slice::raw::from_raw_parts_mut
  %13 = invoke { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h2fa030c4fc081c56E(%"proc_macro::TokenTree"* %_3.i, i64 %_19)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %range_slice.0 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %13, 0
  %range_slice.1 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %13, 1
  %_23 = sub i64 %len, %_7.1
; invoke core::slice::<impl [T]>::iter
  %14 = invoke { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h88ed401c1e71beb7E"([0 x %"proc_macro::TokenTree"]* nonnull align 4 %range_slice.0, i64 %range_slice.1)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %_26.0 = extractvalue { i32*, i32* } %14, 0
  %_26.1 = extractvalue { i32*, i32* } %14, 1
; invoke <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %_28 = invoke nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h5d75a6ec64ccbae6E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %15 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %0 to i64*
  store i64 %_7.1, i64* %15, align 8
  %16 = getelementptr inbounds %"alloc::vec::drain::Drain<proc_macro::TokenTree>", %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %0, i32 0, i32 1
  store i64 %_23, i64* %16, align 8
  %17 = getelementptr inbounds %"alloc::vec::drain::Drain<proc_macro::TokenTree>", %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %0, i32 0, i32 2
  %18 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %17, i32 0, i32 0
  store i32* %_26.0, i32** %18, align 8
  %19 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %17, i32 0, i32 1
  store i32* %_26.1, i32** %19, align 8
  %20 = getelementptr inbounds %"alloc::vec::drain::Drain<proc_macro::TokenTree>", %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %0, i32 0, i32 3
  store i64* %_28, i64** %20, align 8
  ret void

bb9:                                              ; preds = %bb10, %bb11
  %21 = bitcast { i8*, i32 }* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26

bb10:                                             ; preds = %bb11
  br label %bb9
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h3e7642b8b22ab217E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h27dfaf706e9390adE"({ i8*, i64 }* align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17haaf0b225da85ab5dE"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %ptr
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"proc_macro::TokenTree"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h4c3e04a6b3f0f0c4E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::vec::Vec<proc_macro::TokenTree>"* %self to { i32*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call %"proc_macro::TokenTree"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h8b342b8f266a7fecE"({ i32*, i64 }* align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0cb6a7c5c268c72fE"(%"proc_macro::TokenTree"* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"proc_macro::TokenTree"* %ptr
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %TokenTree* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h80431fd5da059e9eE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::vec::Vec<TokenTree>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call %TokenTree* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hdb23bc7de493375cE"({ i64*, i64 }* align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hdac48138c0f4bcfaE"(%TokenTree* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %TokenTree* %ptr
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17he7b12294da37f6ecE"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h647374ef1ba3b17bE"({ i64*, i64 }* align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17haf6d44baa4c89275E"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %ptr
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h071249ac61ab92eeE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i64 %additional) unnamed_addr #1 {
start:
  %_4 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h9f444dafc14cf428E"({ i8*, i64 }* align 8 dereferenceable(16) %_4, i64 %_5, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h4f150b8dacc470d5E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self, i64 %additional) unnamed_addr #1 {
start:
  %_4 = bitcast %"alloc::vec::Vec<TokenTree>"* %self to { i64*, i64 }*
  %0 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hb4e8d6555bcfb636E"({ i64*, i64 }* align 8 dereferenceable(16) %_4, i64 %_5, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T,A>::set_len
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h6067e44850d26d4aE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i64 %new_len) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  store i64 %new_len, i64* %0, align 8
  ret void
}

; alloc::vec::Vec<T,A>::set_len
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h70cf08fcd00ff5dbE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self, i64 %new_len) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<proc_macro::TokenTree>", %"alloc::vec::Vec<proc_macro::TokenTree>"* %self, i32 0, i32 1
  store i64 %new_len, i64* %0, align 8
  ret void
}

; alloc::vec::Vec<T,A>::set_len
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17he8b407ec15d33071E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self, i64 %new_len) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  store i64 %new_len, i64* %0, align 8
  ret void
}

; alloc::vec::Vec<T,A>::is_empty
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h0a621e06143c71e8E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::len
  %_2 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h5043d7be96cfe829E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i64 %_2, 0
  ret i1 %0
}

; alloc::vec::Vec<T,A>::is_empty
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h4ac0660ba2c838eaE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::len
  %_2 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h99027def3e7bafd0E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i64 %_2, 0
  ret i1 %0
}

; alloc::vec::Vec<T,A>::truncate
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8truncate17h2ced661f93a239cdE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self, i64 %len) unnamed_addr #1 {
start:
  %0 = alloca %"proc_macro::TokenTree"*, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<proc_macro::TokenTree>", %"alloc::vec::Vec<proc_macro::TokenTree>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %1, align 8
  %_3 = icmp ugt i64 %len, %_5
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds %"alloc::vec::Vec<proc_macro::TokenTree>", %"alloc::vec::Vec<proc_macro::TokenTree>"* %self, i32 0, i32 1
  %_7 = load i64, i64* %2, align 8
  %remaining_len = sub i64 %_7, %len
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_11 = call %"proc_macro::TokenTree"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h6f4663d8bec95cf4E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb7

bb7:                                              ; preds = %bb6, %bb1
  ret void

bb3:                                              ; preds = %bb2
  %3 = getelementptr inbounds %"proc_macro::TokenTree", %"proc_macro::TokenTree"* %_11, i64 %len
  store %"proc_macro::TokenTree"* %3, %"proc_macro::TokenTree"** %0, align 8
  %_3.i = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::ptr::slice_from_raw_parts_mut
  %4 = call { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h10b6ef78c7a5bdf6E(%"proc_macro::TokenTree"* %_3.i, i64 %remaining_len)
  %s.0 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %4, 0
  %s.1 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %4, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds %"alloc::vec::Vec<proc_macro::TokenTree>", %"alloc::vec::Vec<proc_macro::TokenTree>"* %self, i32 0, i32 1
  store i64 %len, i64* %5, align 8
; call core::ptr::drop_in_place<[proc_macro::TokenTree]>
  call void @"_ZN4core3ptr52drop_in_place$LT$$u5b$proc_macro..TokenTree$u5d$$GT$17h40061cb744fe2901E"([0 x %"proc_macro::TokenTree"]* %s.0, i64 %s.1)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; alloc::vec::Vec<T,A>::allocator
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h169552e3e51e1ccfE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<proc_macro::TokenTree>"* %self to { i32*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::allocator
  %0 = call nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h11b316f553055f72E"({ i32*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::alloc::Global"* %0
}

; alloc::vec::Vec<T,A>::allocator
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h7cce5620753758b1E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<TokenTree>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::allocator
  %0 = call nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h79999ef5dc740c80E"({ i64*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::alloc::Global"* %0
}

; alloc::vec::Vec<T,A>::allocator
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17hf8c0d74357019822E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::allocator
  %0 = call nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h8803a748fa13c020E"({ i8*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::alloc::Global"* %0
}

; alloc::vec::into_iter::IntoIter<T,A>::as_raw_mut_slice
; Function Attrs: nonlazybind uwtable
define { [0 x %TokenTree]*, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$16as_raw_mut_slice17hee6465027ed5202aE"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %0) unnamed_addr #1 {
start:
  %self = alloca %"alloc::vec::into_iter::IntoIter<TokenTree>"*, align 8
  store %"alloc::vec::into_iter::IntoIter<TokenTree>"* %0, %"alloc::vec::into_iter::IntoIter<TokenTree>"** %self, align 8
  %1 = load %"alloc::vec::into_iter::IntoIter<TokenTree>"*, %"alloc::vec::into_iter::IntoIter<TokenTree>"** %self, align 8, !nonnull !20
  %2 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %1, i32 0, i32 4
  %_3 = load %TokenTree*, %TokenTree** %2, align 8
; call <&mut I as core::iter::traits::exact_size::ExactSizeIterator>::len
  %_4 = call i64 @"_ZN83_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hefe28157a3dfb97bE"(%"alloc::vec::into_iter::IntoIter<TokenTree>"** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x %TokenTree]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h71da89a5af3b0b0dE(%TokenTree* %_3, i64 %_4)
  %4 = extractvalue { [0 x %TokenTree]*, i64 } %3, 0
  %5 = extractvalue { [0 x %TokenTree]*, i64 } %3, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = insertvalue { [0 x %TokenTree]*, i64 } undef, [0 x %TokenTree]* %4, 0
  %7 = insertvalue { [0 x %TokenTree]*, i64 } %6, i64 %5, 1
  ret { [0 x %TokenTree]*, i64 } %7
}

; alloc::vec::into_iter::IntoIter<T,A>::as_slice
; Function Attrs: nonlazybind uwtable
define { [0 x %TokenTree]*, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$8as_slice17h71e2d4c80be3ce4bE"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %self, i32 0, i32 4
  %_2 = load %TokenTree*, %TokenTree** %0, align 8
; call core::iter::traits::exact_size::ExactSizeIterator::len
  %_3 = call i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17hb089bc151c2e0112E(%"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x %TokenTree]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h81f8922349e85d24E(%TokenTree* %_2, i64 %_3)
  %2 = extractvalue { [0 x %TokenTree]*, i64 } %1, 0
  %3 = extractvalue { [0 x %TokenTree]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %TokenTree]*, i64 } undef, [0 x %TokenTree]* %2, 0
  %5 = insertvalue { [0 x %TokenTree]*, i64 } %4, i64 %3, 1
  ret { [0 x %TokenTree]*, i64 } %5
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc12alloc_zeroed17h24ad2cd328099731E(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h0fe79403dc20457fE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc_zeroed(i64 %_2, i64 %_4) #20
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc15exchange_malloc17h9a27f765b757f92fE(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %_6 = alloca { i8*, i64 }, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h105bf08884adfd29E(i64 %size, i64 %align)
  %layout.0 = extractvalue { i64, i64 } %0, 0
  %layout.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %1 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc53b34ce3da806e6E"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc954 to %"alloc::alloc::Global"*), i64 %layout.0, i64 %layout.1)
  store { i8*, i64 } %1, { i8*, i64 }* %_6, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast { i8*, i64 }* %_6 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_9 = select i1 %4, i64 1, i64 0
  switch i64 %_9, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0
  %ptr.0 = load i8*, i8** %5, align 8, !nonnull !20
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1
  %ptr.1 = load i64, i64* %6, align 8
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %7 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hf4d70c932fb36507E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb6

bb3:                                              ; preds = %bb2
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h2740986bd2451aa0E(i64 %layout.0, i64 %layout.1) #21
  unreachable

bb6:                                              ; preds = %bb5
  ret i8* %7
}

; alloc::alloc::alloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc5alloc17hdeac91da2c70aa5bE(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h0fe79403dc20457fE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc(i64 %_2, i64 %_4) #20
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h9618e4ba11f69a7aE(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %_15 = alloca i8*, align 8
  %raw_ptr = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
; call core::alloc::layout::Layout::dangling
  %_7 = call nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h602e6ef57c26d631E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb4

bb2:                                              ; preds = %bb1
  br i1 %zeroed, label %bb6, label %bb8

bb8:                                              ; preds = %bb2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_13.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_13.1 = load i64, i64* %7, align 8, !range !35
; call alloc::alloc::alloc
  %8 = call i8* @_ZN5alloc5alloc5alloc17hdeac91da2c70aa5bE(i64 %_13.0, i64 %_13.1)
  store i8* %8, i8** %raw_ptr, align 8
  br label %bb9

bb6:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_12.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_12.1 = load i64, i64* %10, align 8, !range !35
; call alloc::alloc::alloc_zeroed
  %11 = call i8* @_ZN5alloc5alloc12alloc_zeroed17h24ad2cd328099731E(i64 %_12.0, i64 %_12.1)
  store i8* %11, i8** %raw_ptr, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %_18 = load i8*, i8** %raw_ptr, align 8
; call core::ptr::non_null::NonNull<T>::new
  %_17 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h89a41c4bca7ecf66E"(i8* %_18)
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10

bb11:                                             ; preds = %bb10
; call core::option::Option<T>::ok_or
  %_16 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h476826e2c9e479e8E"(i8* %_17)
  br label %bb12

bb12:                                             ; preds = %bb11
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h250279cab3240b09E"(i8* %_16)
  store i8* %12, i8** %_15, align 8
  br label %bb13

bb13:                                             ; preds = %bb12
  %13 = bitcast i8** %_15 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_20 = select i1 %15, i64 1, i64 0
  switch i64 %_20, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ]

bb15:                                             ; preds = %bb13
  unreachable

bb14:                                             ; preds = %bb13
  %val = load i8*, i8** %_15, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %16 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8fa12df1ed57b689E"(i8* nonnull %val, i64 %_4)
  %_24.0 = extractvalue { i8*, i64 } %16, 0
  %_24.1 = extractvalue { i8*, i64 } %16, 1
  br label %bb18

bb16:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %17 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h47721b912c6d4e5aE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1423 to %"core::panic::location::Location"*))
  store { i8*, i64 } %17, { i8*, i64 }* %2, align 8
  br label %bb17

bb17:                                             ; preds = %bb16
  br label %bb20

bb20:                                             ; preds = %bb19, %bb17
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = insertvalue { i8*, i64 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i64 } %22, i64 %21, 1
  ret { i8*, i64 } %23

bb18:                                             ; preds = %bb14
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_24.0, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_24.1, i64* %25, align 8
  br label %bb19

bb19:                                             ; preds = %bb5, %bb18
  br label %bb20

bb4:                                              ; preds = %bb3
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %26 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8fa12df1ed57b689E"(i8* nonnull %_7, i64 0)
  %_6.0 = extractvalue { i8*, i64 } %26, 0
  %_6.1 = extractvalue { i8*, i64 } %26, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_6.0, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_6.1, i64* %28, align 8
  br label %bb19
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h2b73b82c59a275a7E(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %4 = alloca i8*, align 8
  %_53 = alloca { i8*, i64 }, align 8
  %_31 = alloca i8*, align 8
  %_6 = alloca i64, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
; call core::alloc::layout::Layout::size
  %10 = call i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  store i64 %10, i64* %_6, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %11 = load i64, i64* %_6, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_9.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_9.1 = load i64, i64* %14, align 8, !range !35
; call alloc::alloc::Global::alloc_impl
  %15 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h9618e4ba11f69a7aE(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %_9.0, i64 %_9.1, i1 zeroext %zeroed)
  store { i8*, i64 } %15, { i8*, i64 }* %5, align 8
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::alloc::layout::Layout::align
  %_14 = call i64 @_ZN4core5alloc6layout6Layout5align17h0fe79403dc20457fE({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::alloc::layout::Layout::align
  %_16 = call i64 @_ZN4core5alloc6layout6Layout5align17h0fe79403dc20457fE({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_13 = icmp eq i64 %_14, %_16
  br i1 %_13, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  %old_size1 = load i64, i64* %_6, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_56.0 = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_56.1 = load i64, i64* %17, align 8, !range !35
; call alloc::alloc::Global::alloc_impl
  %18 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h9618e4ba11f69a7aE(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %_56.0, i64 %_56.1, i1 zeroext %zeroed)
  %_54.0 = extractvalue { i8*, i64 } %18, 0
  %_54.1 = extractvalue { i8*, i64 } %18, 1
  br label %bb26

bb7:                                              ; preds = %bb6
  %old_size = load i64, i64* %_6, align 8
; call core::alloc::layout::Layout::size
  %new_size = call i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb9

bb9:                                              ; preds = %bb7
; call core::alloc::layout::Layout::size
  %_23 = call i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  br label %bb10

bb10:                                             ; preds = %bb9
  %_21 = icmp uge i64 %new_size, %_23
  call void @llvm.assume(i1 %_21)
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %ptr)
  br label %bb12

bb12:                                             ; preds = %bb11
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_28.0 = load i64, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_28.1 = load i64, i64* %20, align 8, !range !35
; call alloc::alloc::realloc
  %raw_ptr = call i8* @_ZN5alloc5alloc7realloc17h0708c8a6d535bd34E(i8* %_26, i64 %_28.0, i64 %_28.1, i64 %new_size)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::ptr::non_null::NonNull<T>::new
  %_33 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h89a41c4bca7ecf66E"(i8* %raw_ptr)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::option::Option<T>::ok_or
  %_32 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h476826e2c9e479e8E"(i8* %_33)
  br label %bb15

bb15:                                             ; preds = %bb14
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h250279cab3240b09E"(i8* %_32)
  store i8* %21, i8** %_31, align 8
  br label %bb16

bb16:                                             ; preds = %bb15
  %22 = bitcast i8** %_31 to {}**
  %23 = load {}*, {}** %22, align 8
  %24 = icmp eq {}* %23, null
  %_36 = select i1 %24, i64 1, i64 0
  switch i64 %_36, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ]

bb18:                                             ; preds = %bb16
  unreachable

bb17:                                             ; preds = %bb16
  %val = load i8*, i8** %_31, align 8, !nonnull !20
  br i1 %zeroed, label %bb21, label %bb24

bb19:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %25 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h47721b912c6d4e5aE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1425 to %"core::panic::location::Location"*))
  store { i8*, i64 } %25, { i8*, i64 }* %5, align 8
  br label %bb20

bb20:                                             ; preds = %bb19
  br label %bb37

bb37:                                             ; preds = %bb31, %bb20
  br label %bb38

bb24:                                             ; preds = %bb23, %bb17
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %26 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8fa12df1ed57b689E"(i8* nonnull %val, i64 %new_size)
  %_48.0 = extractvalue { i8*, i64 } %26, 0
  %_48.1 = extractvalue { i8*, i64 } %26, 1
  br label %bb25

bb21:                                             ; preds = %bb17
  %27 = getelementptr inbounds i8, i8* %raw_ptr, i64 %old_size
  store i8* %27, i8** %4, align 8
  %_3.i = load i8*, i8** %4, align 8
  br label %bb22

bb22:                                             ; preds = %bb21
  %_45 = sub i64 %new_size, %old_size
; call core::intrinsics::write_bytes
  call void @_ZN4core10intrinsics11write_bytes17h929804c1c8d7dbf7E(i8* %_3.i, i8 0, i64 %_45)
  br label %bb23

bb23:                                             ; preds = %bb22
  br label %bb24

bb25:                                             ; preds = %bb24
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  store i8* %_48.0, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  store i64 %_48.1, i64* %29, align 8
  br label %bb36

bb36:                                             ; preds = %bb3, %bb35, %bb25
  br label %bb38

bb26:                                             ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %30 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h52bf41484a890aa1E"(i8* %_54.0, i64 %_54.1)
  store { i8*, i64 } %30, { i8*, i64 }* %_53, align 8
  br label %bb27

bb27:                                             ; preds = %bb26
  %31 = bitcast { i8*, i64 }* %_53 to {}**
  %32 = load {}*, {}** %31, align 8
  %33 = icmp eq {}* %32, null
  %_58 = select i1 %33, i64 1, i64 0
  switch i64 %_58, label %bb29 [
    i64 0, label %bb28
    i64 1, label %bb30
  ]

bb29:                                             ; preds = %bb27
  unreachable

bb28:                                             ; preds = %bb27
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 0
  %val.0 = load i8*, i8** %34, align 8, !nonnull !20
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 1
  %val.1 = load i64, i64* %35, align 8
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_64 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %ptr)
  br label %bb32

bb30:                                             ; preds = %bb27
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %36 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h47721b912c6d4e5aE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1427 to %"core::panic::location::Location"*))
  store { i8*, i64 } %36, { i8*, i64 }* %5, align 8
  br label %bb31

bb31:                                             ; preds = %bb30
  br label %bb37

bb38:                                             ; preds = %bb36, %bb37
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = insertvalue { i8*, i64 } undef, i8* %38, 0
  %42 = insertvalue { i8*, i64 } %41, i64 %40, 1
  ret { i8*, i64 } %42

bb32:                                             ; preds = %bb28
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_66 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hf4d70c932fb36507E"(i8* nonnull %val.0, i64 %val.1)
  br label %bb33

bb33:                                             ; preds = %bb32
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h5e4499aff0018dfdE(i8* %_64, i8* %_66, i64 %old_size1)
  br label %bb34

bb34:                                             ; preds = %bb33
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_72.0 = load i64, i64* %43, align 8
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_72.1 = load i64, i64* %44, align 8, !range !35
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5b082909e9215cb7E"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %_72.0, i64 %_72.1)
  br label %bb35

bb35:                                             ; preds = %bb34
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  store i8* %val.0, i8** %45, align 8
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  store i64 %val.1, i64* %46, align 8
  br label %bb36

bb3:                                              ; preds = %bb2
  br label %bb36
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc7dealloc17h985f00f78b49e192E(i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_6 = call i64 @_ZN4core5alloc6layout6Layout5align17h0fe79403dc20457fE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @__rust_dealloc(i8* %ptr, i64 %_4, i64 %_6) #20
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::alloc::realloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc7realloc17h0708c8a6d535bd34E(i8* %ptr, i64 %0, i64 %1, i64 %new_size) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_5 = call i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_7 = call i64 @_ZN4core5alloc6layout6Layout5align17h0fe79403dc20457fE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_realloc(i8* %ptr, i64 %_5, i64 %_7, i64 %new_size) #20
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h22b0149e52738a52E(i64* nonnull %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(144) [3 x %TokenTree]* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hba00b83eff61d0c6E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 144, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(144) [3 x %TokenTree]* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hba00b83eff61d0c6E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h105bf08884adfd29E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !20
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h50a391b0586a30ecE"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h876568dae10255bbE"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5b082909e9215cb7E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17habf25ea6ee996cccE(i64* nonnull %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i64*, i64 }, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %ptr, i32 0, i32 0
  store i64* %0, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %ptr, i32 0, i32 1
  store i64 %1, i64* %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { [0 x %TokenTree]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h1f5ab876a00b187fE"({ i64*, i64 }* align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { [0 x %TokenTree]*, i64 } %7, 0
  %_5.1 = extractvalue { [0 x %TokenTree]*, i64 } %7, 1
  %8 = mul i64 %_5.1, 48
  store i64 %8, i64* %3, align 8
  %size = load i64, i64* %3, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %14 = invoke { [0 x %TokenTree]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h1f5ab876a00b187fE"({ i64*, i64 }* align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { [0 x %TokenTree]*, i64 } %14, 0
  %_9.1 = extractvalue { [0 x %TokenTree]*, i64 } %14, 1
  %15 = mul i64 %_9.1, 48
  store i64 8, i64* %2, align 8
  %align = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %16 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h105bf08884adfd29E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %16, 0
  %layout.1 = extractvalue { i64, i64 } %16, 1
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %ptr, i32 0, i32 0
  %_17.0 = load i64*, i64** %17, align 8, !nonnull !20
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %ptr, i32 0, i32 1
  %_17.1 = load i64, i64* %18, align 8
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h6b9913a9e45a4534E"(i64* nonnull %_17.0, i64 %_17.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h876568dae10255bbE"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5b082909e9215cb7E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %19 = bitcast { i8*, i32 }* %4 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17hb796cbe5f5b84f41E(i8* nonnull %0, i64* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h82a0da0298c3c5ddE"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %8 = bitcast [3 x i64]* %_5.1 to i64*
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = load i64, i64* %9, align 8, !invariant.load !20
  %11 = bitcast [3 x i64]* %_5.1 to i64*
  %12 = getelementptr inbounds i64, i64* %11, i64 2
  %13 = load i64, i64* %12, align 8, !range !35, !invariant.load !20
  store i64 %10, i64* %3, align 8
  %size = load i64, i64* %3, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %19 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h82a0da0298c3c5ddE"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %19, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %19, 1
  %20 = bitcast [3 x i64]* %_9.1 to i64*
  %21 = getelementptr inbounds i64, i64* %20, i64 1
  %22 = load i64, i64* %21, align 8, !invariant.load !20
  %23 = bitcast [3 x i64]* %_9.1 to i64*
  %24 = getelementptr inbounds i64, i64* %23, i64 2
  %25 = load i64, i64* %24, align 8, !range !35, !invariant.load !20
  store i64 %25, i64* %2, align 8
  %align = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %26 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h105bf08884adfd29E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %26, 0
  %layout.1 = extractvalue { i64, i64 } %26, 1
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %27, align 8, !nonnull !20
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %28, align 8, !nonnull !20
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h12c76a2069f090feE"(i8* nonnull %_17.0, i64* align 8 dereferenceable(24) %_17.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h876568dae10255bbE"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5b082909e9215cb7E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %29 = bitcast { i8*, i32 }* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::boxed::Box<T,A>::into_unique
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h47b4e977a6b2eb4bE"([0 x %TokenTree]* noalias nonnull align 8 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %3 = alloca { i64*, i64 }, align 8
  %b = alloca { [0 x %TokenTree]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %b, i32 0, i32 0
  store [0 x %TokenTree]* %0, [0 x %TokenTree]** %4, align 8
  %5 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %b, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %_4 = bitcast { [0 x %TokenTree]*, i64 }* %b to %"alloc::alloc::Global"*
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17hb8940c633bb47f85E(%"alloc::alloc::Global"* %_4)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
  %6 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %b, i32 0, i32 0
  %_7.0 = load [0 x %TokenTree]*, [0 x %TokenTree]** %6, align 8, !nonnull !20
  %7 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %b, i32 0, i32 1
  %_7.1 = load i64, i64* %7, align 8
; invoke alloc::boxed::Box<T,A>::leak
  %8 = invoke { [0 x %TokenTree]*, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17had2a30ca43cc41ceE"([0 x %TokenTree]* noalias nonnull align 8 %_7.0, i64 %_7.1)
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %9 = load i8, i8* %_9, align 1, !range !2
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { [0 x %TokenTree]*, i64 } %8, 0
  %_6.1 = extractvalue { [0 x %TokenTree]*, i64 } %8, 1
; invoke <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
  %16 = invoke { i64*, i64 } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h856550f8c3b0efdcE"([0 x %TokenTree]* nonnull align 8 %_6.0, i64 %_6.1)
          to label %bb3 unwind label %cleanup1

bb4:                                              ; preds = %cleanup1
  br label %bb7

cleanup1:                                         ; preds = %bb2, %bb1
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { i64*, i64 } %16, 0
  %_5.1 = extractvalue { i64*, i64 } %16, 1
  %22 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %3, i32 0, i32 0
  store i64* %_5.0, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %3, i32 0, i32 1
  store i64 %_5.1, i64* %23, align 8
  %24 = bitcast { i64*, i64 }* %3 to i8*
  %25 = getelementptr i8, i8* %24, i64 16
  %26 = bitcast i8* %25 to %"alloc::alloc::Global"*
  %27 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %3, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8, !nonnull !20
  %29 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %3, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = insertvalue { i64*, i64 } undef, i64* %28, 0
  %32 = insertvalue { i64*, i64 } %31, i64 %30, 1
  ret { i64*, i64 } %32

bb5:                                              ; preds = %bb6, %bb7
  %33 = bitcast { i8*, i32 }* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::boxed::Box<[proc_macro2::TokenTree]>>
  call void @"_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$$u5b$proc_macro2..TokenTree$u5d$$GT$$GT$17h0efd95a8d617292aE"({ [0 x %TokenTree]*, i64 }* %b) #18
  br label %bb5
}

; alloc::boxed::Box<T,A>::into_unique
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hb223f9ad368a68a8E"({}* noalias nonnull align 1 %0, [3 x i64]* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %3 = alloca { i8*, i64* }, align 8
  %b = alloca { {}*, [3 x i64]* }, align 8
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  store {}* %0, {}** %4, align 8
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  store [3 x i64]* %1, [3 x i64]** %5, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %_4 = bitcast { {}*, [3 x i64]* }* %b to %"alloc::alloc::Global"*
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17hb8940c633bb47f85E(%"alloc::alloc::Global"* %_4)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  %_7.0 = load {}*, {}** %6, align 8, !nonnull !20
  %7 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  %_7.1 = load [3 x i64]*, [3 x i64]** %7, align 8, !nonnull !20
; invoke alloc::boxed::Box<T,A>::leak
  %8 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h10345b085ffe1143E"({}* noalias nonnull align 1 %_7.0, [3 x i64]* align 8 dereferenceable(24) %_7.1)
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %9 = load i8, i8* %_9, align 1, !range !2
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { {}*, [3 x i64]* } %8, 0
  %_6.1 = extractvalue { {}*, [3 x i64]* } %8, 1
; invoke <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
  %16 = invoke { i8*, i64* } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h77f5f1ac0290e563E"({}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) %_6.1)
          to label %bb3 unwind label %cleanup1

bb4:                                              ; preds = %cleanup1
  br label %bb7

cleanup1:                                         ; preds = %bb2, %bb1
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { i8*, i64* } %16, 0
  %_5.1 = extractvalue { i8*, i64* } %16, 1
  %22 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_5.0, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_5.1, i64** %23, align 8
  %24 = bitcast { i8*, i64* }* %3 to i8*
  %25 = getelementptr i8, i8* %24, i64 16
  %26 = bitcast i8* %25 to %"alloc::alloc::Global"*
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !nonnull !20
  %29 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  %30 = load i64*, i64** %29, align 8, !nonnull !20
  %31 = insertvalue { i8*, i64* } undef, i8* %28, 0
  %32 = insertvalue { i8*, i64* } %31, i64* %30, 1
  ret { i8*, i64* } %32

bb5:                                              ; preds = %bb6, %bb7
  %33 = bitcast { i8*, i32 }* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h857be11e154f62f4E"({ {}*, [3 x i64]* }* %b) #18
  br label %bb5
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h15db2f63e7e819daE"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i64* }, align 8
; call alloc::boxed::Box<T,A>::into_unique
  %2 = call { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hb223f9ad368a68a8E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1)
  %_4.0 = extractvalue { i8*, i64* } %2, 0
  %_4.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::ptr::unique::Unique<T>::as_ptr
  %3 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h21bbe95dad311f30E"(i8* nonnull %_4.0, i64* align 8 dereferenceable(24) %_4.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { {}*, [3 x i64]* } %3, 0
  %_6.1 = extractvalue { {}*, [3 x i64]* } %3, 1
  %4 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 0
  store {}* %_6.0, {}** %5, align 8
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 1
  store [3 x i64]* %_6.1, [3 x i64]** %6, align 8
  %7 = bitcast { i8*, i64* }* %1 to i8*
  %8 = getelementptr i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to %"alloc::alloc::Global"*
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %1, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %1, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8, !nonnull !20
  %14 = insertvalue { i8*, i64* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64* } %14, i64* %13, 1
  ret { i8*, i64* } %15

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %21 = bitcast { i8*, i32 }* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hdea713a6ee243d63E"([0 x %TokenTree]* noalias nonnull align 8 %b.0, i64 %b.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i64*, i64 }, align 8
; call alloc::boxed::Box<T,A>::into_unique
  %2 = call { i64*, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h47b4e977a6b2eb4bE"([0 x %TokenTree]* noalias nonnull align 8 %b.0, i64 %b.1)
  %_4.0 = extractvalue { i64*, i64 } %2, 0
  %_4.1 = extractvalue { i64*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::ptr::unique::Unique<T>::as_ptr
  %3 = invoke { [0 x %TokenTree]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbd9b7bdf8f79d5f5E"(i64* nonnull %_4.0, i64 %_4.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { [0 x %TokenTree]*, i64 } %3, 0
  %_6.1 = extractvalue { [0 x %TokenTree]*, i64 } %3, 1
  %4 = bitcast { i64*, i64 }* %1 to { [0 x %TokenTree]*, i64 }*
  %5 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %4, i32 0, i32 0
  store [0 x %TokenTree]* %_6.0, [0 x %TokenTree]** %5, align 8
  %6 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %4, i32 0, i32 1
  store i64 %_6.1, i64* %6, align 8
  %7 = bitcast { i64*, i64 }* %1 to i8*
  %8 = getelementptr i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to %"alloc::alloc::Global"*
  %10 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { i64*, i64 } undef, i64* %11, 0
  %15 = insertvalue { i64*, i64 } %14, i64 %13, 1
  ret { i64*, i64 } %15

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %21 = bitcast { i8*, i32 }* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h10345b085ffe1143E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64* }, align 8
  %_9 = alloca { i8*, i64* }, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !97)
  %1 = bitcast { i8*, i64* }* %0 to { {}*, [3 x i64]* }*
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 0
  store {}* %b.0, {}** %2, align 8, !noalias !97
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 1
  store [3 x i64]* %b.1, [3 x i64]** %3, align 8, !noalias !97
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !noalias !97, !nonnull !20
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !noalias !97, !nonnull !20
  %8 = insertvalue { i8*, i64* } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64* } %8, i64* %7, 1
  store { i8*, i64* } %9, { i8*, i64* }* %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %10 = bitcast { i8*, i64* }* %_9 to { {}*, [3 x i64]* }*
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast { {}*, [3 x i64]* }* %10 to { i8*, i64* }*
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 0
  %_6.0 = load i8*, i8** %12, align 8, !nonnull !20
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 1
  %_6.1 = load i64*, i64** %13, align 8, !nonnull !20
; call core::ptr::unique::Unique<T>::as_ptr
  %14 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h21bbe95dad311f30E"(i8* nonnull %_6.0, i64* align 8 dereferenceable(24) %_6.1)
  %_5.0 = extractvalue { {}*, [3 x i64]* } %14, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %14, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %15 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0
  %16 = insertvalue { {}*, [3 x i64]* } %15, [3 x i64]* %_5.1, 1
  ret { {}*, [3 x i64]* } %16
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %TokenTree]*, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17had2a30ca43cc41ceE"([0 x %TokenTree]* noalias nonnull align 8 %b.0, i64 %b.1) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i64 }, align 8
  %_9 = alloca { i64*, i64 }, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !100)
  %1 = bitcast { i64*, i64 }* %0 to { [0 x %TokenTree]*, i64 }*
  %2 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %1, i32 0, i32 0
  store [0 x %TokenTree]* %b.0, [0 x %TokenTree]** %2, align 8, !noalias !100
  %3 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %1, i32 0, i32 1
  store i64 %b.1, i64* %3, align 8, !noalias !100
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !noalias !100, !nonnull !20
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !noalias !100
  %8 = insertvalue { i64*, i64 } undef, i64* %5, 0
  %9 = insertvalue { i64*, i64 } %8, i64 %7, 1
  store { i64*, i64 } %9, { i64*, i64 }* %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %10 = bitcast { i64*, i64 }* %_9 to { [0 x %TokenTree]*, i64 }*
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast { [0 x %TokenTree]*, i64 }* %10 to { i64*, i64 }*
  %12 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %11, i32 0, i32 0
  %_6.0 = load i64*, i64** %12, align 8, !nonnull !20
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %11, i32 0, i32 1
  %_6.1 = load i64, i64* %13, align 8
; call core::ptr::unique::Unique<T>::as_ptr
  %14 = call { [0 x %TokenTree]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbd9b7bdf8f79d5f5E"(i64* nonnull %_6.0, i64 %_6.1)
  %_5.0 = extractvalue { [0 x %TokenTree]*, i64 } %14, 0
  %_5.1 = extractvalue { [0 x %TokenTree]*, i64 } %14, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %15 = insertvalue { [0 x %TokenTree]*, i64 } undef, [0 x %TokenTree]* %_5.0, 0
  %16 = insertvalue { [0 x %TokenTree]*, i64 } %15, i64 %_5.1, 1
  ret { [0 x %TokenTree]*, i64 } %16
}

; alloc::boxed::Box<T,A>::into_raw
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h93feb4abd88f6d66E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #0 {
start:
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %0 = call { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h15db2f63e7e819daE"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1)
  %_2.0 = extractvalue { i8*, i64* } %0, 0
  %_2.1 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast i8* %_2.0 to {}*
  %2 = bitcast i64* %_2.1 to [3 x i64]*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %1, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %2, 1
  ret { {}*, [3 x i64]* } %4
}

; alloc::slice::<impl [T]>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hc166a1f6f888fb2eE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::<impl [T]>::to_vec_in
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17hcf366da7ee3e18e0E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::<impl [T]>::into_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h25f49859986a86e7E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, [0 x %TokenTree]* noalias nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::hack::into_vec
  call void @_ZN5alloc5slice4hack8into_vec17h13769569e727bffaE(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, [0 x %TokenTree]* noalias nonnull align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::<impl [T]>::to_vec_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h3661703f5cf9f062E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, [0 x %TokenTree]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::hack::to_vec
  call void @_ZN5alloc5slice4hack6to_vec17h800133f5d5b4e9e9E(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, [0 x %TokenTree]* nonnull align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::<impl [T]>::to_vec_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h39ac65480451fc9eE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<proc_macro::TokenTree>") dereferenceable(24) %0, [0 x %"proc_macro::TokenTree"]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::hack::to_vec
  call void @_ZN5alloc5slice4hack6to_vec17h4a2cfd5a4da857b8E(%"alloc::vec::Vec<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<proc_macro::TokenTree>") dereferenceable(24) %0, [0 x %"proc_macro::TokenTree"]* nonnull align 4 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::<impl [T]>::to_vec_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17hcf366da7ee3e18e0E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::hack::to_vec
  call void @_ZN5alloc5slice4hack6to_vec17hf2ce530c7e1f1d0eE(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::hack::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5slice4hack6to_vec17h4a2cfd5a4da857b8E(%"alloc::vec::Vec<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<proc_macro::TokenTree>") dereferenceable(24) %0, [0 x %"proc_macro::TokenTree"]* nonnull align 4 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17ha815db8585bb44b6E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<proc_macro::TokenTree>") dereferenceable(24) %0, [0 x %"proc_macro::TokenTree"]* nonnull align 4 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::hack::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5slice4hack6to_vec17h800133f5d5b4e9e9E(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, [0 x %TokenTree]* nonnull align 8 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h91ddaf07b5747c1aE"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, [0 x %TokenTree]* nonnull align 8 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::hack::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5slice4hack6to_vec17hf2ce530c7e1f1d0eE(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17hbd4413739dec8de1E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::hack::into_vec
; Function Attrs: nonlazybind uwtable
define void @_ZN5alloc5slice4hack8into_vec17h13769569e727bffaE(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, [0 x %TokenTree]* noalias nonnull align 8 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_13 = alloca i8, align 1
  %b = alloca { [0 x %TokenTree]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %b, i32 0, i32 0
  store [0 x %TokenTree]* %1, [0 x %TokenTree]** %4, align 8
  %5 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %b, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
  %6 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %b, i32 0, i32 0
  %_3.0 = load [0 x %TokenTree]*, [0 x %TokenTree]** %6, align 8, !nonnull !20
  %7 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %b, i32 0, i32 1
  %_3.1 = load i64, i64* %7, align 8
; invoke core::slice::<impl [T]>::len
  %len = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hf0454bdf6502d708E"([0 x %TokenTree]* nonnull align 8 %_3.0, i64 %_3.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_14, align 1
  %8 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %b, i32 0, i32 0
  %_7.0 = load [0 x %TokenTree]*, [0 x %TokenTree]** %8, align 8, !nonnull !20
  %9 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %b, i32 0, i32 1
  %_7.1 = load i64, i64* %9, align 8
; invoke alloc::boxed::Box<T,A>::into_raw_with_allocator
  %10 = invoke { i64*, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hdea713a6ee243d63E"([0 x %TokenTree]* noalias nonnull align 8 %_7.0, i64 %_7.1)
          to label %bb2 unwind label %cleanup

bb8:                                              ; preds = %bb6, %bb4, %cleanup
  %11 = load i8, i8* %_14, align 1, !range !2
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb7, label %bb5

cleanup:                                          ; preds = %bb1, %start
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb8

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { i64*, i64 } %10, 0
  %_6.1 = extractvalue { i64*, i64 } %10, 1
  %b.0 = bitcast i64* %_6.0 to [0 x %TokenTree]*
  store i8 1, i8* %_13, align 1
  %_8 = bitcast [0 x %TokenTree]* %b.0 to %TokenTree*
  store i8 0, i8* %_13, align 1
; invoke alloc::vec::Vec<T,A>::from_raw_parts_in
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in17h4cea94b97f060368E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, %TokenTree* %_8, i64 %len, i64 %len)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
  store i8 0, i8* %_13, align 1
  ret void

bb4:                                              ; preds = %cleanup1
  %18 = load i8, i8* %_13, align 1, !range !2
  %19 = trunc i8 %18 to i1
  br i1 %19, label %bb6, label %bb8

cleanup1:                                         ; preds = %bb2
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb4

bb6:                                              ; preds = %bb4
  br label %bb8

bb5:                                              ; preds = %bb7, %bb8
  %25 = bitcast { i8*, i32 }* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = insertvalue { i8*, i32 } undef, i8* %26, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  resume { i8*, i32 } %30

bb7:                                              ; preds = %bb8
; call core::ptr::drop_in_place<alloc::boxed::Box<[proc_macro2::TokenTree]>>
  call void @"_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$$u5b$proc_macro2..TokenTree$u5d$$GT$$GT$17h0efd95a8d617292aE"({ [0 x %TokenTree]*, i64 }* %b) #18
  br label %bb5
}

; alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17hf3db0623a5fd9bcdE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call alloc::slice::<impl [T]>::to_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hc166a1f6f888fb2eE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::string::String::with_capacity
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String13with_capacity17hddc02b7ab7666e98E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, i64 %capacity) unnamed_addr #0 {
start:
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17haa61a8ffc4ac3561E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %_2, i64 %capacity)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*
  %2 = bitcast %"alloc::vec::Vec<u8>"* %1 to i8*
  %3 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; alloc::string::String::from_utf8_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String19from_utf8_unchecked17h3a553588053e2461E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, %"alloc::vec::Vec<u8>"* noalias nocapture dereferenceable(24) %bytes) unnamed_addr #0 {
start:
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*
  %2 = bitcast %"alloc::vec::Vec<u8>"* %bytes to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*
  %4 = bitcast %"alloc::vec::Vec<u8>"* %3 to i8*
  %5 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  ret void
}

; alloc::string::String::len
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN5alloc6string6String3len17h4d2826c01d4b820dE(%"alloc::string::String"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
; call alloc::vec::Vec<T,A>::len
  %0 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hdc591608662dab0cE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; alloc::string::String::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_1 = alloca %"alloc::vec::Vec<u8>", align 8
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hde12185ed0e5bf49E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*
  %2 = bitcast %"alloc::vec::Vec<u8>"* %1 to i8*
  %3 = bitcast %"alloc::vec::Vec<u8>"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; alloc::string::String::push
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %self, i32 %ch) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %_17 = alloca [4 x i8], align 1
; call core::char::methods::<impl char>::len_utf8
  %_3 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817h820a382be7518970E"(i32 %ch)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 %_3, 1
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %_5 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
  %2 = icmp ule i32 %ch, 1114111
  call void @llvm.assume(i1 %2)
  %_6 = trunc i32 %ch to i8
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h2713efb11b97e64cE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_5, i8 %_6)
  br label %bb4

bb2:                                              ; preds = %bb1
  %_8 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
  %3 = getelementptr inbounds [4 x i8], [4 x i8]* %_17, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 4, i1 false)
  %_14.0 = bitcast [4 x i8]* %_17 to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %4 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h8d57095e1ef61f0dE"(i32 %ch, [0 x i8]* nonnull align 1 %_14.0, i64 4)
  %_12.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb5

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %_12.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %_12.1, i64* %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %8 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !20
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1
  %_10.0 = extractvalue { [0 x i8]*, i64 } %12, 0
  %_10.1 = extractvalue { [0 x i8]*, i64 } %12, 1
  br label %bb6

bb6:                                              ; preds = %bb5
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h50020e967d55d44cE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_8, [0 x i8]* nonnull align 1 %_10.0, i64 %_10.1)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb4, %bb7
  ret void

bb4:                                              ; preds = %bb3
  br label %bb8
}

; alloc::string::String::insert
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String6insert17h8de987893be43f28E(%"alloc::string::String"* align 8 dereferenceable(24) %self, i64 %idx, i32 %ch) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %bits = alloca [4 x i8], align 1
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %1 = call { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb4e9891ef10b3b2fE"(%"alloc::string::String"* align 8 dereferenceable(24) %self)
  %_7.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::<impl str>::is_char_boundary
  %_5 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h81242d51336a2898E"([0 x i8]* nonnull align 1 %_7.0, i64 %_7.1, i64 %idx)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %2 = getelementptr inbounds [4 x i8], [4 x i8]* %bits, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 4, i1 false)
  %_15.0 = bitcast [4 x i8]* %bits to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %3 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h8d57095e1ef61f0dE"(i32 %ch, [0 x i8]* nonnull align 1 %_15.0, i64 4)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [44 x i8] }>* @alloc1428 to [0 x i8]*), i64 44, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1430 to %"core::panic::location::Location"*)) #19
  unreachable

bb5:                                              ; preds = %bb4
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %_13.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %_13.1, i64* %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %7 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !20
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %7, 0
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1
  %bits.0 = extractvalue { [0 x i8]*, i64 } %11, 0
  %bits.1 = extractvalue { [0 x i8]*, i64 } %11, 1
  br label %bb6

bb6:                                              ; preds = %bb5
; call alloc::string::String::insert_bytes
  call void @_ZN5alloc6string6String12insert_bytes17hf57fda4a43928e12E(%"alloc::string::String"* align 8 dereferenceable(24) %self, i64 %idx, [0 x i8]* nonnull align 1 %bits.0, i64 %bits.1)
  br label %bb7

bb7:                                              ; preds = %bb6
  ret void
}

; alloc::string::String::remove
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN5alloc6string6String6remove17hc6b023cb73596cfcE(%"alloc::string::String"* align 8 dereferenceable(24) %self, i64 %idx) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %_9 = alloca i64, align 8
  %_5 = alloca { i8*, i8* }, align 8
  %_3 = alloca i32, align 4
  store i64 %idx, i64* %_9, align 8
  %2 = load i64, i64* %_9, align 8
; call <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFrom<usize>>>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN113_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFrom$LT$usize$GT$$GT$$GT$5index17h23c4d689e854a079E"(%"alloc::string::String"* align 8 dereferenceable(24) %self, i64 %2, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1432 to %"core::panic::location::Location"*))
  %_7.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::<impl str>::chars
  %4 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h6f889b924c1c660fE"([0 x i8]* nonnull align 1 %_7.0, i64 %_7.1)
  store { i8*, i8* } %4, { i8*, i8* }* %_5, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %_5), !range !22
  store i32 %5, i32* %_3, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = load i32, i32* %_3, align 4, !range !22
  %7 = sub i32 %6, 1114112
  %8 = icmp eq i32 %7, 0
  %_11 = select i1 %8, i64 0, i64 1
  switch i64 %_11, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [45 x i8] }>* @alloc1433 to [0 x i8]*), i64 45, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1435 to %"core::panic::location::Location"*)) #19
  unreachable

bb6:                                              ; preds = %bb3
  %ch = load i32, i32* %_3, align 4, !range !80
; call core::char::methods::<impl char>::len_utf8
  %_15 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817h820a382be7518970E"(i32 %ch)
  br label %bb7

bb7:                                              ; preds = %bb6
  %next = add i64 %idx, %_15
; call alloc::string::String::len
  %len = call i64 @_ZN5alloc6string6String3len17h4d2826c01d4b820dE(%"alloc::string::String"* align 8 dereferenceable(24) %self)
  br label %bb8

bb8:                                              ; preds = %bb7
  %_22 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
; call alloc::vec::Vec<T,A>::as_ptr
  %_21 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h3e7642b8b22ab217E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_22)
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = getelementptr inbounds i8, i8* %_21, i64 %next
  store i8* %9, i8** %0, align 8
  %10 = load i8*, i8** %0, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
  %_26 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_25 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hf09764db7aa5c1adE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_26)
  br label %bb11

bb11:                                             ; preds = %bb10
  %11 = getelementptr inbounds i8, i8* %_25, i64 %idx
  store i8* %11, i8** %1, align 8
  %_3.i = load i8*, i8** %1, align 8
  br label %bb12

bb12:                                             ; preds = %bb11
  %_28 = sub i64 %len, %next
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17hd62e2a697c37c7e1E(i8* %10, i8* %_3.i, i64 %_28)
  br label %bb13

bb13:                                             ; preds = %bb12
  %_32 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
  %_35 = sub i64 %next, %idx
  %_33 = sub i64 %len, %_35
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h6067e44850d26d4aE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_32, i64 %_33)
  br label %bb14

bb14:                                             ; preds = %bb13
  ret i32 %ch
}

; alloc::string::String::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String7reserve17h11466adf3ced724dE(%"alloc::string::String"* align 8 dereferenceable(24) %self, i64 %additional) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h071249ac61ab92eeE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_3, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::string::String::push_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String8push_str17h8bcb7dfa0493c639E(%"alloc::string::String"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %string.0, i64 %string.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %_3 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %string.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %string.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !20
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_5.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h50020e967d55d44cE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_3, [0 x i8]* nonnull align 1 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::alloc_guard
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec11alloc_guard17h602e4c93ddc4516dE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %alloc_size) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
  br i1 false, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb267cb12d365858bE"(i64 %4, i64 %6)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  ret void
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define void @_ZN5alloc7raw_vec11finish_grow17h99f7628a29be5404E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %current_memory, %"alloc::alloc::Global"* nonnull align 1 %alloc) unnamed_addr #6 {
start:
  %_41 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %_14 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_13 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>", align 8
  %_6 = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbac44579ad666314E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_6, i64 %new_layout.0, i64 %new_layout.1)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1786e3e453c24b7cE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>") dereferenceable(24) %_5, %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*
  %_9 = load i64, i64* %1, align 8, !range !18
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*
  %3 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %val.0 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %val.1 = load i64, i64* %5, align 8, !range !35
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %val.0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %val.1, i64* %7, align 8
; call core::alloc::layout::Layout::size
  %_15 = call i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb7

bb5:                                              ; preds = %bb2
  %8 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %residual.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %residual.1 = load i64, i64* %11, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc78c54a1f193f2b1E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1437 to %"core::panic::location::Location"*))
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb23

bb23:                                             ; preds = %bb13, %bb6
  br label %bb24

bb7:                                              ; preds = %bb3
; call alloc::raw_vec::alloc_guard
  call void @_ZN5alloc7raw_vec11alloc_guard17h602e4c93ddc4516dE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_14, i64 %_15)
  br label %bb8

bb8:                                              ; preds = %bb7
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3f40f9e290d6fe3eE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>") dereferenceable(24) %_13, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_14)
  br label %bb9

bb9:                                              ; preds = %bb8
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %_13 to i64*
  %_17 = load i64, i64* %12, align 8, !range !18
  switch i64 %_17, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb10:                                             ; preds = %bb9
  %13 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_22 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_22, 1
  br i1 %16, label %bb15, label %bb14

bb12:                                             ; preds = %bb9
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %_13 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  %residual.01 = load i64, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  %residual.12 = load i64, i64* %20, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h290d2156755b852dE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.01, i64 %residual.12, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1439 to %"core::panic::location::Location"*))
  br label %bb13

bb13:                                             ; preds = %bb12
  br label %bb23

bb24:                                             ; preds = %bb22, %bb23
  ret void

bb15:                                             ; preds = %bb10
  %21 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %22 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %21 to { i8*, { i64, i64 } }*
  %23 = bitcast { i8*, { i64, i64 } }* %22 to i8**
  %ptr = load i8*, i8** %23, align 8, !nonnull !20
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %25 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %24 to { i8*, { i64, i64 } }*
  %26 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1
  %30 = load i64, i64* %29, align 8, !range !35
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %28, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %30, i64* %32, align 8
; call core::alloc::layout::Layout::align
  %_30 = call i64 @_ZN4core5alloc6layout6Layout5align17h0fe79403dc20457fE({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  br label %bb16

bb14:                                             ; preds = %bb10
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_39.0 = load i64, i64* %33, align 8
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_39.1 = load i64, i64* %34, align 8, !range !35
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %35 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc53b34ce3da806e6E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_39.0, i64 %_39.1)
  store { i8*, i64 } %35, { i8*, i64 }* %memory, align 8
  br label %bb20

bb20:                                             ; preds = %bb14
  br label %bb21

bb21:                                             ; preds = %bb19, %bb20
  %36 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0
  %_40.0 = load i8*, i8** %36, align 8
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1
  %_40.1 = load i64, i64* %37, align 8
  %38 = bitcast i64** %_41 to { i64, i64 }**
  store { i64, i64 }* %new_layout, { i64, i64 }** %38, align 8
  %39 = load i64*, i64** %_41, align 8, !nonnull !20
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17he8e9a490f21436ecE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i8* %_40.0, i64 %_40.1, i64* align 8 dereferenceable(16) %39)
  br label %bb22

bb16:                                             ; preds = %bb15
; call core::alloc::layout::Layout::align
  %_32 = call i64 @_ZN4core5alloc6layout6Layout5align17h0fe79403dc20457fE({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb17

bb17:                                             ; preds = %bb16
  %_29 = icmp eq i64 %_30, %_32
  call void @llvm.assume(i1 %_29)
  br label %bb18

bb18:                                             ; preds = %bb17
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_36.0 = load i64, i64* %40, align 8
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_36.1 = load i64, i64* %41, align 8, !range !35
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_37.0 = load i64, i64* %42, align 8
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_37.1 = load i64, i64* %43, align 8, !range !35
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %44 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h789c1afc42dcd4ecE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %ptr, i64 %_36.0, i64 %_36.1, i64 %_37.0, i64 %_37.1)
  store { i8*, i64 } %44, { i8*, i64 }* %memory, align 8
  br label %bb19

bb19:                                             ; preds = %bb18
  br label %bb21

bb22:                                             ; preds = %bb21
  br label %bb24
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h00e71fad6747fdc9E"() unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h2867befed634fc3dE"(i64* align 8 dereferenceable(16) %_1) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = bitcast i64* %_1 to { i64, i64 }*
  %1 = bitcast i64* %_1 to { i64, i64 }*
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %_4.0 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %_4.1 = load i64, i64* %3, align 8, !range !35
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  store i64 %_4.0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %_4.1, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
; call <T as core::convert::Into<U>>::into
  %10 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb267cb12d365858bE"(i64 %7, i64 %9)
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  br label %bb1

bb1:                                              ; preds = %start
  %13 = insertvalue { i64, i64 } undef, i64 %11, 0
  %14 = insertvalue { i64, i64 } %13, i64 %12, 1
  ret { i64, i64 } %14
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17h4952eef341708a0fE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %result) unnamed_addr #0 {
start:
  %_3 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_2 = alloca %"core::result::Result<(), alloc::collections::TryReserveErrorKind>", align 8
  %0 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_3 to i8*
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h138ba687fcfcb664E"(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_2, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %_2 to i64*
  %_6 = load i64, i64* %2, align 8, !range !18
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb3, %bb1
  unreachable

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %bb1
  %3 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %_2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"*
  %4 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 0, i64 1
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17ha72cd8fd7333b22dE() #19
  unreachable

bb6:                                              ; preds = %bb3
  %8 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %_2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !35
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h2740986bd2451aa0E(i64 %layout.0, i64 %layout.1) #21
  unreachable
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h297cebbb7b7472a4E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %e = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call alloc::collections::TryReserveError::kind
  %4 = call { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h8184c7cdc0a49ca4E({ i64, i64 }* align 8 dereferenceable(16) %e)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h4c1c5d5a7320d46fE"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_33 = alloca i8, align 1
  %result = alloca { i8*, i64 }, align 8
  %_11 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_7 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = alloca { i8*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i8 0, i8* %_33, align 1
  store i8 1, i8* %_33, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 1, 0
  br i1 %4, label %bb2, label %bb4

bb31:                                             ; preds = %cleanup
  %5 = load i8, i8* %_33, align 1, !range !2
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb30, label %bb29

cleanup:                                          ; preds = %bb2, %bb26, %bb25, %bb24, %bb23, %bb22, %bb16, %bb14, %bb11, %bb9, %bb8, %bb6, %bb4
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb31

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_33, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %12 = invoke { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h089212289a6e0c28E"()
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array
  %13 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17ha7033033690e3a47E(i64 %capacity)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store { i64, i64 } %13, { i64, i64 }* %_7, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %_9 = select i1 %16, i64 1, i64 0
  switch i64 %_9, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb5
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %layout.0 = load i64, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %layout.1 = load i64, i64* %18, align 8, !range !35
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %layout.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %layout.1, i64* %20, align 8
; invoke core::alloc::layout::Layout::size
  %_12 = invoke i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %layout)
          to label %bb9 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17ha72cd8fd7333b22dE() #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb11, %bb6
  unreachable

bb9:                                              ; preds = %bb8
; invoke alloc::raw_vec::alloc_guard
  invoke void @_ZN5alloc7raw_vec11alloc_guard17h602e4c93ddc4516dE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_11, i64 %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %21 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_11 to i64*
  %_14 = load i64, i64* %21, align 8, !range !18
  switch i64 %_14, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  %22 = load i8, i8* %init, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17ha72cd8fd7333b22dE() #19
          to label %unreachable unwind label %cleanup

bb15:                                             ; preds = %bb13
  unreachable

bb16:                                             ; preds = %bb13
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_18.0 = load i64, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_18.1 = load i64, i64* %25, align 8, !range !35
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %26 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc53b34ce3da806e6E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_18.0, i64 %_18.1)
          to label %bb17 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_20.0 = load i64, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_20.1 = load i64, i64* %28, align 8, !range !35
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %29 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hd8e7401b64140516E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_20.0, i64 %_20.1)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %29, { i8*, i64 }* %result, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %30 = bitcast { i8*, i64 }* %result to {}**
  %31 = load {}*, {}** %30, align 8
  %32 = icmp eq {}* %31, null
  %_22 = select i1 %32, i64 1, i64 0
  switch i64 %_22, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ]

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %26, { i8*, i64 }* %result, align 8
  br label %bb19

bb21:                                             ; preds = %bb19
  unreachable

bb22:                                             ; preds = %bb19
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0
  %ptr.0 = load i8*, i8** %33, align 8, !nonnull !20
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1
  %ptr.1 = load i64, i64* %34, align 8
; invoke core::ptr::non_null::NonNull<T>::cast
  %_27 = invoke nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h175e832c4181a8aeE"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb23 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_24.0 = load i64, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_24.1 = load i64, i64* %36, align 8, !range !35
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h2740986bd2451aa0E(i64 %_24.0, i64 %_24.1) #21
  unreachable

bb23:                                             ; preds = %bb22
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %_27)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_25 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8f7c30dd2c2e78d7E"(i8* %_26)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
; invoke core::ptr::non_null::NonNull<[T]>::len
  %_30 = invoke i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h79e311fe84b68755E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
; invoke alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_29 = invoke i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h20000a4325a27353E"(i64 %_30)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
  store i8 0, i8* %_33, align 1
  %37 = bitcast { i8*, i64 }* %2 to i8**
  store i8* %_25, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_29, i64* %38, align 8
  %39 = bitcast { i8*, i64 }* %2 to %"alloc::alloc::Global"*
  br label %bb28

bb28:                                             ; preds = %bb3, %bb27
  %40 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8, !nonnull !20
  %42 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = insertvalue { i8*, i64 } undef, i8* %41, 0
  %45 = insertvalue { i8*, i64 } %44, i64 %43, 1
  ret { i8*, i64 } %45

bb3:                                              ; preds = %bb2
  store { i8*, i64 } %12, { i8*, i64 }* %2, align 8
  br label %bb28

bb29:                                             ; preds = %bb30, %bb31
  %46 = bitcast { i8*, i32 }* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

bb30:                                             ; preds = %bb31
  br label %bb29
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h97ab90abae06d5f6E"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_33 = alloca i8, align 1
  %result = alloca { i8*, i64 }, align 8
  %_11 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_7 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = alloca { i64*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i8 0, i8* %_33, align 1
  store i8 1, i8* %_33, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 48, 0
  br i1 %4, label %bb2, label %bb4

bb31:                                             ; preds = %cleanup
  %5 = load i8, i8* %_33, align 1, !range !2
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb30, label %bb29

cleanup:                                          ; preds = %bb2, %bb26, %bb25, %bb24, %bb23, %bb22, %bb16, %bb14, %bb11, %bb9, %bb8, %bb6, %bb4
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb31

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_33, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %12 = invoke { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h632ad3c5b95b2633E"()
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array
  %13 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hc82c7ca35e413b59E(i64 %capacity)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store { i64, i64 } %13, { i64, i64 }* %_7, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %_9 = select i1 %16, i64 1, i64 0
  switch i64 %_9, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb5
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %layout.0 = load i64, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %layout.1 = load i64, i64* %18, align 8, !range !35
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %layout.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %layout.1, i64* %20, align 8
; invoke core::alloc::layout::Layout::size
  %_12 = invoke i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %layout)
          to label %bb9 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17ha72cd8fd7333b22dE() #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb11, %bb6
  unreachable

bb9:                                              ; preds = %bb8
; invoke alloc::raw_vec::alloc_guard
  invoke void @_ZN5alloc7raw_vec11alloc_guard17h602e4c93ddc4516dE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_11, i64 %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %21 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_11 to i64*
  %_14 = load i64, i64* %21, align 8, !range !18
  switch i64 %_14, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  %22 = load i8, i8* %init, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17ha72cd8fd7333b22dE() #19
          to label %unreachable unwind label %cleanup

bb15:                                             ; preds = %bb13
  unreachable

bb16:                                             ; preds = %bb13
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_18.0 = load i64, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_18.1 = load i64, i64* %25, align 8, !range !35
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %26 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc53b34ce3da806e6E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_18.0, i64 %_18.1)
          to label %bb17 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_20.0 = load i64, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_20.1 = load i64, i64* %28, align 8, !range !35
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %29 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hd8e7401b64140516E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_20.0, i64 %_20.1)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %29, { i8*, i64 }* %result, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %30 = bitcast { i8*, i64 }* %result to {}**
  %31 = load {}*, {}** %30, align 8
  %32 = icmp eq {}* %31, null
  %_22 = select i1 %32, i64 1, i64 0
  switch i64 %_22, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ]

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %26, { i8*, i64 }* %result, align 8
  br label %bb19

bb21:                                             ; preds = %bb19
  unreachable

bb22:                                             ; preds = %bb19
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0
  %ptr.0 = load i8*, i8** %33, align 8, !nonnull !20
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1
  %ptr.1 = load i64, i64* %34, align 8
; invoke core::ptr::non_null::NonNull<T>::cast
  %_27 = invoke nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7eb738d1da598d10E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb23 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_24.0 = load i64, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_24.1 = load i64, i64* %36, align 8, !range !35
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h2740986bd2451aa0E(i64 %_24.0, i64 %_24.1) #21
  unreachable

bb23:                                             ; preds = %bb22
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = invoke %TokenTree* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he4fe09edffbb8032E"(i64* nonnull %_27)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_25 = invoke nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h654f822fbb0d196cE"(%TokenTree* %_26)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
; invoke core::ptr::non_null::NonNull<[T]>::len
  %_30 = invoke i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h79e311fe84b68755E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
; invoke alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_29 = invoke i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h4d399d218a141d41E"(i64 %_30)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
  store i8 0, i8* %_33, align 1
  %37 = bitcast { i64*, i64 }* %2 to i64**
  store i64* %_25, i64** %37, align 8
  %38 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %_29, i64* %38, align 8
  %39 = bitcast { i64*, i64 }* %2 to %"alloc::alloc::Global"*
  br label %bb28

bb28:                                             ; preds = %bb3, %bb27
  %40 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  %41 = load i64*, i64** %40, align 8, !nonnull !20
  %42 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = insertvalue { i64*, i64 } undef, i64* %41, 0
  %45 = insertvalue { i64*, i64 } %44, i64 %43, 1
  ret { i64*, i64 } %45

bb3:                                              ; preds = %bb2
  store { i64*, i64 } %12, { i64*, i64 }* %2, align 8
  br label %bb28

bb29:                                             ; preds = %bb30, %bb31
  %46 = bitcast { i8*, i32 }* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

bb30:                                             ; preds = %bb31
  br label %bb29
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hb3af621b0742ffafE"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_33 = alloca i8, align 1
  %result = alloca { i8*, i64 }, align 8
  %_11 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_7 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = alloca { i32*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i8 0, i8* %_33, align 1
  store i8 1, i8* %_33, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 8, 0
  br i1 %4, label %bb2, label %bb4

bb31:                                             ; preds = %cleanup
  %5 = load i8, i8* %_33, align 1, !range !2
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb30, label %bb29

cleanup:                                          ; preds = %bb2, %bb26, %bb25, %bb24, %bb23, %bb22, %bb16, %bb14, %bb11, %bb9, %bb8, %bb6, %bb4
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb31

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_33, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %12 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17ha4d59a8bf5e43ebeE"()
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array
  %13 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h99eb5c4484c6bc08E(i64 %capacity)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store { i64, i64 } %13, { i64, i64 }* %_7, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %_9 = select i1 %16, i64 1, i64 0
  switch i64 %_9, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb5
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %layout.0 = load i64, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %layout.1 = load i64, i64* %18, align 8, !range !35
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %layout.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %layout.1, i64* %20, align 8
; invoke core::alloc::layout::Layout::size
  %_12 = invoke i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %layout)
          to label %bb9 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17ha72cd8fd7333b22dE() #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb11, %bb6
  unreachable

bb9:                                              ; preds = %bb8
; invoke alloc::raw_vec::alloc_guard
  invoke void @_ZN5alloc7raw_vec11alloc_guard17h602e4c93ddc4516dE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_11, i64 %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %21 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_11 to i64*
  %_14 = load i64, i64* %21, align 8, !range !18
  switch i64 %_14, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  %22 = load i8, i8* %init, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17ha72cd8fd7333b22dE() #19
          to label %unreachable unwind label %cleanup

bb15:                                             ; preds = %bb13
  unreachable

bb16:                                             ; preds = %bb13
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_18.0 = load i64, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_18.1 = load i64, i64* %25, align 8, !range !35
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %26 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc53b34ce3da806e6E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_18.0, i64 %_18.1)
          to label %bb17 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_20.0 = load i64, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_20.1 = load i64, i64* %28, align 8, !range !35
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %29 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hd8e7401b64140516E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_20.0, i64 %_20.1)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %29, { i8*, i64 }* %result, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %30 = bitcast { i8*, i64 }* %result to {}**
  %31 = load {}*, {}** %30, align 8
  %32 = icmp eq {}* %31, null
  %_22 = select i1 %32, i64 1, i64 0
  switch i64 %_22, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ]

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %26, { i8*, i64 }* %result, align 8
  br label %bb19

bb21:                                             ; preds = %bb19
  unreachable

bb22:                                             ; preds = %bb19
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0
  %ptr.0 = load i8*, i8** %33, align 8, !nonnull !20
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1
  %ptr.1 = load i64, i64* %34, align 8
; invoke core::ptr::non_null::NonNull<T>::cast
  %_27 = invoke nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17ha5f75b8840ac00c1E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb23 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_24.0 = load i64, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_24.1 = load i64, i64* %36, align 8, !range !35
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h2740986bd2451aa0E(i64 %_24.0, i64 %_24.1) #21
  unreachable

bb23:                                             ; preds = %bb22
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = invoke %"proc_macro::TokenTree"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6b211d9fbe8eae44E"(i32* nonnull %_27)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_25 = invoke nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h7c3a1b45c96a6c96E"(%"proc_macro::TokenTree"* %_26)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
; invoke core::ptr::non_null::NonNull<[T]>::len
  %_30 = invoke i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h79e311fe84b68755E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
; invoke alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_29 = invoke i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h34ca938ecdabf00bE"(i64 %_30)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
  store i8 0, i8* %_33, align 1
  %37 = bitcast { i32*, i64 }* %2 to i32**
  store i32* %_25, i32** %37, align 8
  %38 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1
  store i64 %_29, i64* %38, align 8
  %39 = bitcast { i32*, i64 }* %2 to %"alloc::alloc::Global"*
  br label %bb28

bb28:                                             ; preds = %bb3, %bb27
  %40 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8, !nonnull !20
  %42 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = insertvalue { i32*, i64 } undef, i32* %41, 0
  %45 = insertvalue { i32*, i64 } %44, i64 %43, 1
  ret { i32*, i64 } %45

bb3:                                              ; preds = %bb2
  store { i32*, i64 } %12, { i32*, i64 }* %2, align 8
  br label %bb28

bb29:                                             ; preds = %bb30, %bb31
  %46 = bitcast { i8*, i32 }* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

bb30:                                             ; preds = %bb31
  br label %bb29
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h0771931ea711b61dE"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = sub i64 %3, %len
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4
  ret i1 %5
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hba5a833ac7d1deebE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = sub i64 %3, %len
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4
  ret i1 %5
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h3e1ef470926953a7E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 48, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 48, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h105bf08884adfd29E(i64 %size, i64 8)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i64*, i64 }* %self to i64**
  %_16 = load i64*, i64** %9, align 8, !nonnull !20
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h2f55a264a7e14f1dE"(i64* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h876568dae10255bbE"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h6b74db44d76de773E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 32, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 32, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h105bf08884adfd29E(i64 %size, i64 8)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i64*, i64 }* %self to i64**
  %_16 = load i64*, i64** %9, align 8, !nonnull !20
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc94a574ec9190c12E"(i64* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h876568dae10255bbE"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17ha92dece78f22514bE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i32*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 8, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 8, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h105bf08884adfd29E(i64 %size, i64 4)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i32*, i64 }* %self to i32**
  %_16 = load i32*, i32** %9, align 8, !nonnull !20
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h40a368fb598102feE"(i32* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h876568dae10255bbE"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hd639099b469475c7E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 1, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 1, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h105bf08884adfd29E(i64 %size, i64 1)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i8*, i64 }* %self to i8**
  %_16 = load i8*, i8** %9, align 8, !nonnull !20
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc761b8392f6646e4E"(i8* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h876568dae10255bbE"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h70cb34a42e09ed8eE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_28 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 1, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb267cb12d365858bE"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3d452424c360551E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h958040790a46abb2E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3424d05129708615E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !18
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_20 = load i64, i64* %17, align 8
  %_19 = mul i64 %_20, 2
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h74b219b421c96b03E(i64 %_19, i64 %val)
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4c7f3ff78e8c9c16E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1441 to %"core::panic::location::Location"*))
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb23

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h74b219b421c96b03E(i64 8, i64 %cap)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17ha7033033690e3a47E(i64 %cap1)
  %new_layout.0 = extractvalue { i64, i64 } %22, 0
  %new_layout.1 = extractvalue { i64, i64 } %22, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hd639099b469475c7E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_30, { i8*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h99f7628a29be5404E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %_28, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %_30, %"alloc::alloc::Global"* nonnull align 1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd04d5659ee7ac709E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %_27, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_28)
  br label %bb17

bb17:                                             ; preds = %bb16
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*
  %_34 = load i64, i64* %23, align 8, !range !18
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %24, i32 0, i32 1
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 0
  %val.0 = load i8*, i8** %26, align 8, !nonnull !20
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 1
  %val.1 = load i64, i64* %27, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hd66451a48e6bd603E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %val.0, i64 %val.1)
  br label %bb22

bb20:                                             ; preds = %bb17
  %28 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %29 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0
  %residual.02 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1
  %residual.13 = load i64, i64* %31, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h31dc57a528e3b351E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.02, i64 %residual.13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1443 to %"core::panic::location::Location"*))
  br label %bb21

bb21:                                             ; preds = %bb20
  br label %bb23

bb24:                                             ; preds = %bb3, %bb22, %bb23
  ret void

bb22:                                             ; preds = %bb18
  %32 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %32, align 8
  br label %bb24

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %34 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %33, i32 0, i32 1
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0
  store i64 %_5.0, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1
  store i64 %_5.1, i64* %36, align 8
  %37 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %37, align 8
  br label %bb24
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hc392e9d65e316f64E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_28 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 32, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb267cb12d365858bE"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3d452424c360551E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h958040790a46abb2E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3424d05129708615E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !18
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_20 = load i64, i64* %17, align 8
  %_19 = mul i64 %_20, 2
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h74b219b421c96b03E(i64 %_19, i64 %val)
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4c7f3ff78e8c9c16E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1441 to %"core::panic::location::Location"*))
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb23

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h74b219b421c96b03E(i64 4, i64 %cap)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h7c4d298f9f440a55E(i64 %cap1)
  %new_layout.0 = extractvalue { i64, i64 } %22, 0
  %new_layout.1 = extractvalue { i64, i64 } %22, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h6b74db44d76de773E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_30, { i64*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h99f7628a29be5404E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %_28, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %_30, %"alloc::alloc::Global"* nonnull align 1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd04d5659ee7ac709E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %_27, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_28)
  br label %bb17

bb17:                                             ; preds = %bb16
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*
  %_34 = load i64, i64* %23, align 8, !range !18
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %24, i32 0, i32 1
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 0
  %val.0 = load i8*, i8** %26, align 8, !nonnull !20
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 1
  %val.1 = load i64, i64* %27, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hb11c8d7d19ffb15aE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %val.0, i64 %val.1)
  br label %bb22

bb20:                                             ; preds = %bb17
  %28 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %29 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0
  %residual.02 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1
  %residual.13 = load i64, i64* %31, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h31dc57a528e3b351E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.02, i64 %residual.13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1443 to %"core::panic::location::Location"*))
  br label %bb21

bb21:                                             ; preds = %bb20
  br label %bb23

bb24:                                             ; preds = %bb3, %bb22, %bb23
  ret void

bb22:                                             ; preds = %bb18
  %32 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %32, align 8
  br label %bb24

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %34 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %33, i32 0, i32 1
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0
  store i64 %_5.0, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1
  store i64 %_5.1, i64* %36, align 8
  %37 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %37, align 8
  br label %bb24
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17he05e826024d431e9E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_28 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 48, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb267cb12d365858bE"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17ha3d452424c360551E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h958040790a46abb2E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3424d05129708615E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !18
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_20 = load i64, i64* %17, align 8
  %_19 = mul i64 %_20, 2
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h74b219b421c96b03E(i64 %_19, i64 %val)
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4c7f3ff78e8c9c16E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1441 to %"core::panic::location::Location"*))
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb23

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h74b219b421c96b03E(i64 4, i64 %cap)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hc82c7ca35e413b59E(i64 %cap1)
  %new_layout.0 = extractvalue { i64, i64 } %22, 0
  %new_layout.1 = extractvalue { i64, i64 } %22, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h3e1ef470926953a7E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_30, { i64*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h99f7628a29be5404E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %_28, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %_30, %"alloc::alloc::Global"* nonnull align 1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd04d5659ee7ac709E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %_27, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_28)
  br label %bb17

bb17:                                             ; preds = %bb16
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*
  %_34 = load i64, i64* %23, align 8, !range !18
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %24, i32 0, i32 1
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 0
  %val.0 = load i8*, i8** %26, align 8, !nonnull !20
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 1
  %val.1 = load i64, i64* %27, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17h948e73c7f89977e0E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %val.0, i64 %val.1)
  br label %bb22

bb20:                                             ; preds = %bb17
  %28 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %29 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0
  %residual.02 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1
  %residual.13 = load i64, i64* %31, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h31dc57a528e3b351E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.02, i64 %residual.13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1443 to %"core::panic::location::Location"*))
  br label %bb21

bb21:                                             ; preds = %bb20
  br label %bb23

bb24:                                             ; preds = %bb3, %bb22, %bb23
  ret void

bb22:                                             ; preds = %bb18
  %32 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %32, align 8
  br label %bb24

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %34 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %33, i32 0, i32 1
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0
  store i64 %_5.0, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1
  store i64 %_5.1, i64* %36, align 8
  %37 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %37, align 8
  br label %bb24
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h5a2191a7ec0dbab4E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len) unnamed_addr #6 {
start:
  %_4 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hc392e9d65e316f64E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_4, { i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 1)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h4952eef341708a0fE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h7bc838fc9b379737E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len) unnamed_addr #6 {
start:
  %_4 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17he05e826024d431e9E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_4, { i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 1)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h4952eef341708a0fE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hd765e67c05ac0732E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len) unnamed_addr #6 {
start:
  %_4 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h70cb34a42e09ed8eE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_4, { i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 1)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h4952eef341708a0fE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h4b4d2bebc51e526fE"(i64 %capacity) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !2
  %1 = trunc i8 %0 to i1
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %2 = call { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h97ab90abae06d5f6E"(i64 %capacity, i1 zeroext %1)
  %3 = extractvalue { i64*, i64 } %2, 0
  %4 = extractvalue { i64*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { i64*, i64 } undef, i64* %3, 0
  %6 = insertvalue { i64*, i64 } %5, i64 %4, 1
  ret { i64*, i64 } %6
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hd8d0af38837e49edE"(i64 %capacity) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !2
  %1 = trunc i8 %0 to i1
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %2 = call { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h4c1c5d5a7320d46fE"(i64 %capacity, i1 zeroext %1)
  %3 = extractvalue { i8*, i64 } %2, 0
  %4 = extractvalue { i8*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1
  ret { i8*, i64 } %6
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hf4df7dfb043833a6E"(i64 %capacity) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !2
  %1 = trunc i8 %0 to i1
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %2 = call { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hb3af621b0742ffafE"(i64 %capacity, i1 zeroext %1)
  %3 = extractvalue { i32*, i64 } %2, 0
  %4 = extractvalue { i32*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { i32*, i64 } undef, i32* %3, 0
  %6 = insertvalue { i32*, i64 } %5, i64 %4, 1
  ret { i32*, i64 } %6
}

; alloc::raw_vec::RawVec<T,A>::from_raw_parts_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17h39c8e79352bd938dE"(%TokenTree* %ptr, i64 %capacity) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i64*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_4 = invoke nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h654f822fbb0d196cE"(%TokenTree* %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i64 }* %1 to i64**
  store i64* %_4, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %capacity, i64* %3, align 8
  %4 = bitcast { i64*, i64 }* %1 to %"alloc::alloc::Global"*
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8, !nonnull !20
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64*, i64 } undef, i64* %6, 0
  %10 = insertvalue { i64*, i64 } %9, i64 %8, 1
  ret { i64*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h20000a4325a27353E"(i64 %excess) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 1, 0
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 1
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.b to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1445 to %"core::panic::location::Location"*)) #19
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h34ca938ecdabf00bE"(i64 %excess) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 8, 0
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 8
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.b to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1445 to %"core::panic::location::Location"*)) #19
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h4d399d218a141d41E"(i64 %excess) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 48, 0
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 48
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.b to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1445 to %"core::panic::location::Location"*)) #19
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h6363053fc7844b2bE"(i64 %excess) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 32, 0
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 32
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.b to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1445 to %"core::panic::location::Location"*)) #19
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h27dfaf706e9390adE"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i8*, i64 }* %self to i8**
  %_2 = load i8*, i8** %0, align 8, !nonnull !20
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf9b8b9f669db1ff5E"(i8* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h647374ef1ba3b17bE"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i64 }* %self to i64**
  %_2 = load i64*, i64** %0, align 8, !nonnull !20
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf57b905ca9027d9cE"(i64* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"proc_macro::TokenTree"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h8b342b8f266a7fecE"({ i32*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i32*, i64 }* %self to i32**
  %_2 = load i32*, i32** %0, align 8, !nonnull !20
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call %"proc_macro::TokenTree"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6baeed9149d30095E"(i32* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"proc_macro::TokenTree"* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %TokenTree* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hdb23bc7de493375cE"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i64 }* %self to i64**
  %_2 = load i64*, i64** %0, align 8, !nonnull !20
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call %TokenTree* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h650b187efc2d49f2E"(i64* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %TokenTree* %1
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h089212289a6e0c28E"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::dangling
  %_2 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h5b21f69aac1e1a2cE"()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast { i8*, i64 }* %1 to i8**
  store i8* %_2, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = bitcast { i8*, i64 }* %1 to %"alloc::alloc::Global"*
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8, !nonnull !20
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h632ad3c5b95b2633E"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i64*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::dangling
  %_2 = invoke nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h27540e8f3e80a693E"()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i64 }* %1 to i64**
  store i64* %_2, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = bitcast { i64*, i64 }* %1 to %"alloc::alloc::Global"*
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8, !nonnull !20
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64*, i64 } undef, i64* %6, 0
  %10 = insertvalue { i64*, i64 } %9, i64 %8, 1
  ret { i64*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17ha4d59a8bf5e43ebeE"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i32*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::dangling
  %_2 = invoke nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h9eda7148b3d93a99E"()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast { i32*, i64 }* %1 to i32**
  store i32* %_2, i32** %2, align 8
  %3 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = bitcast { i32*, i64 }* %1 to %"alloc::alloc::Global"*
  %5 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8, !nonnull !20
  %7 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i32*, i64 } undef, i32* %6, 0
  %10 = insertvalue { i32*, i64 } %9, i64 %8, 1
  ret { i32*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h9f444dafc14cf428E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h0771931ea711b61dE"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h63338202bdda94d0E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hb4e8d6555bcfb636E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hba5a833ac7d1deebE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h4f771f0e6b4cd969E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h4f771f0e6b4cd969E"({ i64*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional) unnamed_addr #7 {
start:
  %_5 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17he05e826024d431e9E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_5, { i64*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h4952eef341708a0fE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h63338202bdda94d0E"({ i8*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional) unnamed_addr #7 {
start:
  %_5 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h70cb34a42e09ed8eE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_5, { i8*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h4952eef341708a0fE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::set_ptr
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17h948e73c7f89977e0E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7eb738d1da598d10E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call %TokenTree* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he4fe09edffbb8032E"(i64* nonnull %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_3 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h654f822fbb0d196cE"(%TokenTree* %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i64*, i64 }* %self to i64**
  store i64* %_3, i64** %0, align 8
; call core::ptr::non_null::NonNull<[T]>::len
  %_8 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h79e311fe84b68755E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h4d399d218a141d41E"(i64 %_8)
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  ret void
}

; alloc::raw_vec::RawVec<T,A>::set_ptr
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hb11c8d7d19ffb15aE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h24c585313047c6e2E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc5cf9c0e16d41064E"(i64* nonnull %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_3 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h224a7f1a510d9a8eE"({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i64*, i64 }* %self to i64**
  store i64* %_3, i64** %0, align 8
; call core::ptr::non_null::NonNull<[T]>::len
  %_8 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h79e311fe84b68755E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h6363053fc7844b2bE"(i64 %_8)
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  ret void
}

; alloc::raw_vec::RawVec<T,A>::set_ptr
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hd66451a48e6bd603E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h175e832c4181a8aeE"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_3 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8f7c30dd2c2e78d7E"(i8* %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i8*, i64 }* %self to i8**
  store i8* %_3, i8** %0, align 8
; call core::ptr::non_null::NonNull<[T]>::len
  %_8 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h79e311fe84b68755E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h20000a4325a27353E"(i64 %_8)
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  ret void
}

; alloc::raw_vec::RawVec<T,A>::allocator
; Function Attrs: nonlazybind uwtable
define nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h11b316f553055f72E"({ i32*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*
  ret %"alloc::alloc::Global"* %0
}

; alloc::raw_vec::RawVec<T,A>::allocator
; Function Attrs: nonlazybind uwtable
define nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h79999ef5dc740c80E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
  ret %"alloc::alloc::Global"* %0
}

; alloc::raw_vec::RawVec<T,A>::allocator
; Function Attrs: nonlazybind uwtable
define nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h8803a748fa13c020E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*
  ret %"alloc::alloc::Global"* %0
}

; <alloc::string::String as core::fmt::Display>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h2b6a6f1c2c9388a1E"(%"alloc::string::String"* align 8 dereferenceable(24) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb4e9891ef10b3b2fE"(%"alloc::string::String"* align 8 dereferenceable(24) %self)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <str as core::fmt::Display>::fmt
  %1 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h4fb653153270e40aE"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %1
}

; <proc_macro::TokenTree as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN60_$LT$proc_macro..TokenTree$u20$as$u20$core..clone..Clone$GT$5clone17hec15caa419bf4e6dE"(%"proc_macro::TokenTree"* align 4 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %_18 = alloca %"proc_macro::Literal", align 4
  %_14 = alloca %"proc_macro::Punct", align 4
  %_10 = alloca %"proc_macro::Ident", align 4
  %_6 = alloca %"proc_macro::Group", align 4
  %_2 = alloca i32*, align 8
  %4 = alloca %"proc_macro::TokenTree", align 4
  %5 = bitcast i32** %_2 to %"proc_macro::TokenTree"**
  store %"proc_macro::TokenTree"* %self, %"proc_macro::TokenTree"** %5, align 8
  %6 = bitcast i32** %_2 to %"proc_macro::TokenTree"**
  %7 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %6, align 8, !nonnull !20
  %8 = bitcast %"proc_macro::TokenTree"* %7 to i32*
  %9 = load i32, i32* %8, align 4, !range !36
  %_4 = zext i32 %9 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
    i64 2, label %bb7
    i64 3, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %10 = bitcast i32** %_2 to %"proc_macro::TokenTree"**
  %11 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %10, align 8, !nonnull !20
  %12 = bitcast %"proc_macro::TokenTree"* %11 to %"proc_macro::TokenTree::Group"*
  %__self_03 = getelementptr inbounds %"proc_macro::TokenTree::Group", %"proc_macro::TokenTree::Group"* %12, i32 0, i32 1
; call <proc_macro::Group as core::clone::Clone>::clone
  %13 = call i32 @"_ZN56_$LT$proc_macro..Group$u20$as$u20$core..clone..Clone$GT$5clone17he1c3dc9b0d6e1fceE"(%"proc_macro::Group"* align 4 dereferenceable(4) %__self_03)
  store i32 %13, i32* %0, align 4
  %14 = bitcast %"proc_macro::Group"* %_6 to i8*
  %15 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 4, i1 false)
  br label %bb4

bb5:                                              ; preds = %start
  %16 = bitcast i32** %_2 to %"proc_macro::TokenTree"**
  %17 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %16, align 8, !nonnull !20
  %18 = bitcast %"proc_macro::TokenTree"* %17 to %"proc_macro::TokenTree::Ident"*
  %__self_02 = getelementptr inbounds %"proc_macro::TokenTree::Ident", %"proc_macro::TokenTree::Ident"* %18, i32 0, i32 1
; call <proc_macro::Ident as core::clone::Clone>::clone
  %19 = call i32 @"_ZN56_$LT$proc_macro..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h8f7b72947ebd0f02E"(%"proc_macro::Ident"* align 4 dereferenceable(4) %__self_02)
  store i32 %19, i32* %1, align 4
  %20 = bitcast %"proc_macro::Ident"* %_10 to i8*
  %21 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %21, i64 4, i1 false)
  br label %bb6

bb7:                                              ; preds = %start
  %22 = bitcast i32** %_2 to %"proc_macro::TokenTree"**
  %23 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %22, align 8, !nonnull !20
  %24 = bitcast %"proc_macro::TokenTree"* %23 to %"proc_macro::TokenTree::Punct"*
  %__self_01 = getelementptr inbounds %"proc_macro::TokenTree::Punct", %"proc_macro::TokenTree::Punct"* %24, i32 0, i32 1
; call <proc_macro::Punct as core::clone::Clone>::clone
  %25 = call i32 @"_ZN56_$LT$proc_macro..Punct$u20$as$u20$core..clone..Clone$GT$5clone17h559090529518f331E"(%"proc_macro::Punct"* align 4 dereferenceable(4) %__self_01)
  store i32 %25, i32* %2, align 4
  %26 = bitcast %"proc_macro::Punct"* %_14 to i8*
  %27 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 4, i1 false)
  br label %bb8

bb1:                                              ; preds = %start
  %28 = bitcast i32** %_2 to %"proc_macro::TokenTree"**
  %29 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %28, align 8, !nonnull !20
  %30 = bitcast %"proc_macro::TokenTree"* %29 to %"proc_macro::TokenTree::Literal"*
  %__self_0 = getelementptr inbounds %"proc_macro::TokenTree::Literal", %"proc_macro::TokenTree::Literal"* %30, i32 0, i32 1
; call <proc_macro::Literal as core::clone::Clone>::clone
  %31 = call i32 @"_ZN58_$LT$proc_macro..Literal$u20$as$u20$core..clone..Clone$GT$5clone17ha4effe94ca93fcc6E"(%"proc_macro::Literal"* align 4 dereferenceable(4) %__self_0)
  store i32 %31, i32* %3, align 4
  %32 = bitcast %"proc_macro::Literal"* %_18 to i8*
  %33 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 4, i1 false)
  br label %bb9

bb9:                                              ; preds = %bb1
  %34 = bitcast %"proc_macro::TokenTree"* %4 to %"proc_macro::TokenTree::Literal"*
  %35 = getelementptr inbounds %"proc_macro::TokenTree::Literal", %"proc_macro::TokenTree::Literal"* %34, i32 0, i32 1
  %36 = bitcast %"proc_macro::Literal"* %35 to i8*
  %37 = bitcast %"proc_macro::Literal"* %_18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 4, i1 false)
  %38 = bitcast %"proc_macro::TokenTree"* %4 to i32*
  store i32 3, i32* %38, align 4
  br label %bb10

bb10:                                             ; preds = %bb4, %bb6, %bb8, %bb9
  %39 = bitcast %"proc_macro::TokenTree"* %4 to i64*
  %40 = load i64, i64* %39, align 4
  ret i64 %40

bb8:                                              ; preds = %bb7
  %41 = bitcast %"proc_macro::TokenTree"* %4 to %"proc_macro::TokenTree::Punct"*
  %42 = getelementptr inbounds %"proc_macro::TokenTree::Punct", %"proc_macro::TokenTree::Punct"* %41, i32 0, i32 1
  %43 = bitcast %"proc_macro::Punct"* %42 to i8*
  %44 = bitcast %"proc_macro::Punct"* %_14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %44, i64 4, i1 false)
  %45 = bitcast %"proc_macro::TokenTree"* %4 to i32*
  store i32 2, i32* %45, align 4
  br label %bb10

bb6:                                              ; preds = %bb5
  %46 = bitcast %"proc_macro::TokenTree"* %4 to %"proc_macro::TokenTree::Ident"*
  %47 = getelementptr inbounds %"proc_macro::TokenTree::Ident", %"proc_macro::TokenTree::Ident"* %46, i32 0, i32 1
  %48 = bitcast %"proc_macro::Ident"* %47 to i8*
  %49 = bitcast %"proc_macro::Ident"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %49, i64 4, i1 false)
  %50 = bitcast %"proc_macro::TokenTree"* %4 to i32*
  store i32 1, i32* %50, align 4
  br label %bb10

bb4:                                              ; preds = %bb3
  %51 = bitcast %"proc_macro::TokenTree"* %4 to %"proc_macro::TokenTree::Group"*
  %52 = getelementptr inbounds %"proc_macro::TokenTree::Group", %"proc_macro::TokenTree::Group"* %51, i32 0, i32 1
  %53 = bitcast %"proc_macro::Group"* %52 to i8*
  %54 = bitcast %"proc_macro::Group"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %54, i64 4, i1 false)
  %55 = bitcast %"proc_macro::TokenTree"* %4 to i32*
  store i32 0, i32* %55, align 4
  br label %bb10
}

; <alloc::string::String as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN62_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$GT$2eq17h95af6a925cb85c16E"(%"alloc::string::String"* align 8 dereferenceable(24) %self, %"alloc::string::String"* align 8 dereferenceable(24) %other) unnamed_addr #0 {
start:
; call <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFull>>::index
  %0 = call { [0 x i8]*, i64 } @"_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h5ba9688412c0923fE"(%"alloc::string::String"* align 8 dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1447 to %"core::panic::location::Location"*))
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFull>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h5ba9688412c0923fE"(%"alloc::string::String"* align 8 dereferenceable(24) %other, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1449 to %"core::panic::location::Location"*))
  %_10.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_10.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %2 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h62c1c4526097ae7dE"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1, [0 x i8]* nonnull align 1 %_10.0, i64 %_10.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %2
}

; <proc_macro::TokenStream as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN62_$LT$proc_macro..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17h653f1efbbaf9802dE"(%"proc_macro::TokenStream"* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_3 = alloca %"proc_macro::bridge::client::TokenStream", align 4
  %1 = alloca %"proc_macro::TokenStream", align 4
  %__self_0_0 = bitcast %"proc_macro::TokenStream"* %self to %"proc_macro::bridge::client::TokenStream"*
; call <proc_macro::bridge::client::TokenStream as core::clone::Clone>::clone
  %2 = call i32 @"_ZN78_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17h3ebb46c6a4556a55E"(%"proc_macro::bridge::client::TokenStream"* align 4 dereferenceable(4) %__self_0_0)
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"proc_macro::bridge::client::TokenStream"* %_3 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"proc_macro::TokenStream"* %1 to %"proc_macro::bridge::client::TokenStream"*
  %6 = bitcast %"proc_macro::bridge::client::TokenStream"* %5 to i8*
  %7 = bitcast %"proc_macro::bridge::client::TokenStream"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::TokenStream"* %1 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h01c54d33475b7534E"(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>") dereferenceable(32) %0, %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h15bf28ed3a98aeccE"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %0, %"core::str::iter::CharIndices"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::str::iter::CharIndices"* %0 to i8*
  %2 = bitcast %"core::str::iter::CharIndices"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2c807badaa7c3fe8E"(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>") dereferenceable(32) %0, %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::take::Take<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<proc_macro::TokenTree>>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h52f97a0f2c6bbd30E"(i8* nonnull %self.0, i8* %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i8*, i8* } undef, i8* %self.0, 0
  %1 = insertvalue { i8*, i8* } %0, i8* %self.1, 1
  ret { i8*, i8* } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h551cb7f0a512ebedE"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h56849493de6680dfE"(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::drain::Drain<proc_macro::TokenTree>") dereferenceable(40) %0, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %0 to i8*
  %2 = bitcast %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h731f515ea4aa7c37E"(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>") dereferenceable(24) %0, %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h753141ec08893293E"(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture sret(%"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>") dereferenceable(40) %0, %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha0beed33966e8aa6E"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %0, %"core::char::EscapeDebug"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::char::EscapeDebug"* %0 to i8*
  %2 = bitcast %"core::char::EscapeDebug"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hae39948ba3945051E"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc62a69b3ad5a9aefE"(i8* nonnull %self.0, i8* %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i8*, i8* } undef, i8* %self.0, 0
  %1 = insertvalue { i8*, i8* } %0, i8* %self.1, 1
  ret { i8*, i8* } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(40) %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd8e8fada8bf37e3fE"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  ret %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* %self
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(24) %"core::str::iter::CharIndices"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he26099cc682e909bE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  ret %"core::str::iter::CharIndices"* %self
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17heba3cdde11bb1980E"(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>") dereferenceable(48) %0, %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* noalias nocapture dereferenceable(48) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::sources::once::Once<proc_macro::TokenStream>, core::iter::adapters::map::Map<alloc::vec::drain::Drain<proc_macro::TokenTree>, fn(proc_macro::TokenTree) -> proc_macro::TokenStream {<proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from}>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false)
  ret void
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5b082909e9215cb7E"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17hb1374a481d41c44cE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 %_4, 0
  br i1 %4, label %bb5, label %bb2

bb5:                                              ; preds = %bb1
  br label %bb6

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %ptr)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_8.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_8.1 = load i64, i64* %6, align 8, !range !35
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17h985f00f78b49e192E(i8* %_6, i64 %_8.0, i64 %_8.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  ret void
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hd8e7401b64140516E"(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h9618e4ba11f69a7aE(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h789c1afc42dcd4ecE"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::grow_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h2b73b82c59a275a7E(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc53b34ce3da806e6E"(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h9618e4ba11f69a7aE(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <alloc::vec::Vec<T,A> as core::cmp::Ord>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN63_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..cmp..Ord$GT$3cmp17h724111ee2783e8b6E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, %"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %other) unnamed_addr #0 {
start:
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hadec8598de4b5ca6E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hadec8598de4b5ca6E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %other)
  %_9.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::slice::cmp::<impl core::cmp::Ord for [T]>::cmp
  %2 = call i8 @"_ZN4core5slice3cmp56_$LT$impl$u20$core..cmp..Ord$u20$for$u20$$u5b$T$u5d$$GT$3cmp17hdbaa136fa769d27aE"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1, [0 x i8]* nonnull align 1 %_9.0, i64 %_9.1), !range !30
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8 %2
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb4e9891ef10b3b2fE"(%"alloc::string::String"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_5 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hadec8598de4b5ca6E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_5)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked
  %1 = call { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h0871ecd4ebcfb3adE([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; <std::ffi::os_str::OsString as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN65_$LT$std..ffi..os_str..OsString$u20$as$u20$core..clone..Clone$GT$5clone17h93597e1d25767e7fE"(%"std::ffi::os_str::OsString"* noalias nocapture sret(%"std::ffi::os_str::OsString") dereferenceable(24) %0, %"std::ffi::os_str::OsString"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = alloca %"std::sys::unix::os_str::Buf", align 8
  %_3 = bitcast %"std::ffi::os_str::OsString"* %self to %"std::sys::unix::os_str::Buf"*
; call <std::sys::unix::os_str::Buf as core::clone::Clone>::clone
  call void @"_ZN66_$LT$std..sys..unix..os_str..Buf$u20$as$u20$core..clone..Clone$GT$5clone17h1b54c6cf8ab5c5aaE"(%"std::sys::unix::os_str::Buf"* noalias nocapture sret(%"std::sys::unix::os_str::Buf") dereferenceable(24) %_2, %"std::sys::unix::os_str::Buf"* align 8 dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"std::ffi::os_str::OsString"* %0 to %"std::sys::unix::os_str::Buf"*
  %2 = bitcast %"std::sys::unix::os_str::Buf"* %1 to i8*
  %3 = bitcast %"std::sys::unix::os_str::Buf"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; <core::alloc::layout::Layout as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h15fdb04b1a3b4b79E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %1 = load i64, i64* %0, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %3 = load i64, i64* %2, align 8, !range !35
  %4 = insertvalue { i64, i64 } undef, i64 %1, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <core::option::Option<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hee6ac4d65e240d92E"({ i64, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_20 = alloca i64*, align 8
  %_11 = alloca %"core::fmt::builders::DebugTuple", align 8
  %_3 = alloca i64*, align 8
  %0 = alloca i8, align 1
  %1 = bitcast i64** %_3 to { i64, i64 }**
  store { i64, i64 }* %self, { i64, i64 }** %1, align 8
  %2 = bitcast i64** %_3 to { i64, i64 }**
  %3 = load { i64, i64 }*, { i64, i64 }** %2, align 8, !nonnull !20
  %4 = bitcast { i64, i64 }* %3 to i64*
  %_5 = load i64, i64* %4, align 8, !range !18
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %5 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1791 to [0 x i8]*), i64 4)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast i64** %_3 to { i64, i64 }**
  %8 = load { i64, i64 }*, { i64, i64 }** %7, align 8, !nonnull !20
  %9 = bitcast { i64, i64 }* %8 to %"core::option::Option<usize>::Some"*
  %__self_0 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %9, i32 0, i32 1
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_11, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1450 to [0 x i8]*), i64 4)
  br label %bb5

bb5:                                              ; preds = %bb1
  store i64* %__self_0, i64** %_20, align 8
  %_17.0 = bitcast i64** %_20 to {}*
; call core::fmt::builders::DebugTuple::field
  %_15 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_11, {}* nonnull align 1 %_17.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.c to [3 x i64]*))
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::fmt::builders::DebugTuple::finish
  %10 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_11)
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb4, %bb7
  %12 = load i8, i8* %0, align 1, !range !2
  %13 = trunc i8 %12 to i1
  ret i1 %13

bb4:                                              ; preds = %bb3
  br label %bb8
}

; <std::sys::unix::os_str::Buf as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN66_$LT$std..sys..unix..os_str..Buf$u20$as$u20$core..clone..Clone$GT$5clone17h1b54c6cf8ab5c5aaE"(%"std::sys::unix::os_str::Buf"* noalias nocapture sret(%"std::sys::unix::os_str::Buf") dereferenceable(24) %0, %"std::sys::unix::os_str::Buf"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  %_3 = bitcast %"std::sys::unix::os_str::Buf"* %self to %"alloc::vec::Vec<u8>"*
; call <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
  call void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hb5809ffd10b0563aE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %_2, %"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"std::sys::unix::os_str::Buf"* %0 to %"alloc::vec::Vec<u8>"*
  %2 = bitcast %"alloc::vec::Vec<u8>"* %1 to i8*
  %3 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h366cad49e43ca07fE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<proc_macro::TokenTree>") dereferenceable(24) %0, %"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_11 = alloca i8, align 1
  store i8 0, i8* %_11, align 1
; call alloc::vec::Vec<T,A>::allocator
  %_4 = call nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h169552e3e51e1ccfE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 1, i8* %_11, align 1
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h9f232de56c8f9037E"(%"alloc::alloc::Global"* nonnull align 1 %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %2 = invoke { [0 x %"proc_macro::TokenTree"]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd24d9a11cc34e48aE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_8.0 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %2, 0
  %_8.1 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %2, 1
  store i8 0, i8* %_11, align 1
; invoke alloc::slice::<impl [T]>::to_vec_in
  invoke void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h39ac65480451fc9eE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<proc_macro::TokenTree>") dereferenceable(24) %0, [0 x %"proc_macro::TokenTree"]* nonnull align 4 %_8.0, i64 %_8.1)
          to label %bb4 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %3 = load i8, i8* %_11, align 1, !range !2
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb6, label %bb5

cleanup:                                          ; preds = %bb3, %bb2
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb7

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_11, align 1
  ret void

bb5:                                              ; preds = %bb6, %bb7
  %10 = bitcast { i8*, i32 }* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb6:                                              ; preds = %bb7
  br label %bb5
}

; <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h7e20692ae7b54d4fE"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, %"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_11 = alloca i8, align 1
  store i8 0, i8* %_11, align 1
; call alloc::vec::Vec<T,A>::allocator
  %_4 = call nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h7cce5620753758b1E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 1, i8* %_11, align 1
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h9f232de56c8f9037E"(%"alloc::alloc::Global"* nonnull align 1 %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %2 = invoke { [0 x %TokenTree]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc5702eb1e52cbebdE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_8.0 = extractvalue { [0 x %TokenTree]*, i64 } %2, 0
  %_8.1 = extractvalue { [0 x %TokenTree]*, i64 } %2, 1
  store i8 0, i8* %_11, align 1
; invoke alloc::slice::<impl [T]>::to_vec_in
  invoke void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h3661703f5cf9f062E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, [0 x %TokenTree]* nonnull align 8 %_8.0, i64 %_8.1)
          to label %bb4 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %3 = load i8, i8* %_11, align 1, !range !2
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb6, label %bb5

cleanup:                                          ; preds = %bb3, %bb2
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb7

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_11, align 1
  ret void

bb5:                                              ; preds = %bb6, %bb7
  %10 = bitcast { i8*, i32 }* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb6:                                              ; preds = %bb7
  br label %bb5
}

; <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hb5809ffd10b0563aE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, %"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_11 = alloca i8, align 1
  store i8 0, i8* %_11, align 1
; call alloc::vec::Vec<T,A>::allocator
  %_4 = call nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17hf8c0d74357019822E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 1, i8* %_11, align 1
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h9f232de56c8f9037E"(%"alloc::alloc::Global"* nonnull align 1 %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %2 = invoke { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hadec8598de4b5ca6E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_8.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  store i8 0, i8* %_11, align 1
; invoke alloc::slice::<impl [T]>::to_vec_in
  invoke void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17hcf366da7ee3e18e0E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %_8.0, i64 %_8.1)
          to label %bb4 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %3 = load i8, i8* %_11, align 1, !range !2
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb6, label %bb5

cleanup:                                          ; preds = %bb3, %bb2
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb7

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_11, align 1
  ret void

bb5:                                              ; preds = %bb6, %bb7
  %10 = bitcast { i8*, i32 }* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb6:                                              ; preds = %bb7
  br label %bb5
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h026ba42c7d35d9c6E"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h274172260de658ceE"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>", %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h0f5cbe894c90e201E({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<[(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)]>
  call void @"_ZN4core3ptr109drop_in_place$LT$$u5b$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$u5d$$GT$17hea152c612779964bE"([0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* %_2.0, i64 %_2.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6199b52a3c41b67dE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call %TokenTree* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17haf38022be0a8fd96E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x %TokenTree]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h71da89a5af3b0b0dE(%TokenTree* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x %TokenTree]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x %TokenTree]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<[proc_macro2::TokenTree]>
  call void @"_ZN4core3ptr53drop_in_place$LT$$u5b$proc_macro2..TokenTree$u5d$$GT$17ha228b2f3e6324fd0E"([0 x %TokenTree]* %_2.0, i64 %_2.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb1faeb0f230f6277E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call %"proc_macro::TokenTree"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h6f4663d8bec95cf4E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<proc_macro::TokenTree>", %"alloc::vec::Vec<proc_macro::TokenTree>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h10b6ef78c7a5bdf6E(%"proc_macro::TokenTree"* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<[proc_macro::TokenTree]>
  call void @"_ZN4core3ptr52drop_in_place$LT$$u5b$proc_macro..TokenTree$u5d$$GT$17h40061cb744fe2901E"([0 x %"proc_macro::TokenTree"]* %_2.0, i64 %_2.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he6f1315d91b76757E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hf09764db7aa5c1adE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h7b4f6aee009f378dE(i8* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <core::option::Option<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h1f096f5326b29345E"({ i64, i64 }* align 8 dereferenceable(16) %self, { i64, i64 }* align 8 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %_13 = alloca { i64*, i64* }, align 8
  %0 = alloca i8, align 1
  %1 = bitcast { i64, i64 }* %self to i64*
  %__self_vi = load i64, i64* %1, align 8, !range !18
  %2 = bitcast { i64, i64 }* %other to i64*
  %__arg_1_vi = load i64, i64* %2, align 8, !range !18
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb7

bb7:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb8

bb1:                                              ; preds = %start
  %3 = bitcast { i64*, i64* }* %_13 to { i64, i64 }**
  store { i64, i64 }* %self, { i64, i64 }** %3, align 8
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %5 = bitcast i64** %4 to { i64, i64 }**
  store { i64, i64 }* %other, { i64, i64 }** %5, align 8
  %6 = bitcast { i64*, i64* }* %_13 to { i64, i64 }**
  %7 = load { i64, i64 }*, { i64, i64 }** %6, align 8, !nonnull !20
  %8 = bitcast { i64, i64 }* %7 to i64*
  %_17 = load i64, i64* %8, align 8, !range !18
  %9 = icmp eq i64 %_17, 1
  br i1 %9, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %11 = bitcast i64** %10 to { i64, i64 }**
  %12 = load { i64, i64 }*, { i64, i64 }** %11, align 8, !nonnull !20
  %13 = bitcast { i64, i64 }* %12 to i64*
  %_16 = load i64, i64* %13, align 8, !range !18
  %14 = icmp eq i64 %_16, 1
  br i1 %14, label %bb4, label %bb2

bb2:                                              ; preds = %bb3, %bb1
  store i8 1, i8* %0, align 1
  br label %bb6

bb4:                                              ; preds = %bb3
  %15 = bitcast { i64*, i64* }* %_13 to { i64, i64 }**
  %16 = load { i64, i64 }*, { i64, i64 }** %15, align 8, !nonnull !20
  %17 = bitcast { i64, i64 }* %16 to %"core::option::Option<usize>::Some"*
  %__self_0 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %17, i32 0, i32 1
  %18 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %19 = bitcast i64** %18 to { i64, i64 }**
  %20 = load { i64, i64 }*, { i64, i64 }** %19, align 8, !nonnull !20
  %21 = bitcast { i64, i64 }* %20 to %"core::option::Option<usize>::Some"*
  %__arg_1_0 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %21, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialEq for usize>::eq
  %22 = call zeroext i1 @"_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17h7238af03805d1feeE"(i64* align 8 dereferenceable(8) %__self_0, i64* align 8 dereferenceable(8) %__arg_1_0)
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %0, align 1
  br label %bb5

bb6:                                              ; preds = %bb5, %bb2
  br label %bb8

bb5:                                              ; preds = %bb4
  br label %bb6

bb8:                                              ; preds = %bb7, %bb6
  %24 = load i8, i8* %0, align 1, !range !2
  %25 = trunc i8 %24 to i1
  ret i1 %25
}

; <&mut I as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0cf5ee7912affc8eE"(%"core::str::iter::CharIndices"** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_2 = load %"core::str::iter::CharIndices"*, %"core::str::iter::CharIndices"** %self, align 8, !nonnull !20
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %0 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %_2)
  %1 = extractvalue { i64, i32 } %0, 0
  %2 = extractvalue { i64, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i32 } undef, i64 %1, 0
  %4 = insertvalue { i64, i32 } %3, i32 %2, 1
  ret { i64, i32 } %4
}

; <&mut I as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h18a3ed321d1210caE"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_2 = load %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"*, %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"** %self, align 8, !nonnull !20
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %0 = call { i64, i32 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h326ec6dedebd3983E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %_2)
  %1 = extractvalue { i64, i32 } %0, 0
  %2 = extractvalue { i64, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i32 } undef, i64 %1, 0
  %4 = insertvalue { i64, i32 } %3, i32 %2, 1
  ret { i64, i32 } %4
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0f7d0b3edebf8dbdE"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17he7b12294da37f6ecE"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>", %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h234ea1c9a01e0549E({ i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_2, i64 %_4)
  %2 = extractvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %1, 0
  %3 = extractvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } undef, [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* %2, 0
  %5 = insertvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %4, i64 %3, 1
  ret { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %5
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hadec8598de4b5ca6E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h3e7642b8b22ab217E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hcc66b321fcab96bfE(i8* %_2, i64 %_4)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define { [0 x %TokenTree]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc5702eb1e52cbebdE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call %TokenTree* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h80431fd5da059e9eE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x %TokenTree]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h81f8922349e85d24E(%TokenTree* %_2, i64 %_4)
  %2 = extractvalue { [0 x %TokenTree]*, i64 } %1, 0
  %3 = extractvalue { [0 x %TokenTree]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %TokenTree]*, i64 } undef, [0 x %TokenTree]* %2, 0
  %5 = insertvalue { [0 x %TokenTree]*, i64 } %4, i64 %3, 1
  ret { [0 x %TokenTree]*, i64 } %5
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define { [0 x %"proc_macro::TokenTree"]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd24d9a11cc34e48aE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call %"proc_macro::TokenTree"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h4c3e04a6b3f0f0c4E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<proc_macro::TokenTree>", %"alloc::vec::Vec<proc_macro::TokenTree>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core5slice3raw14from_raw_parts17ha38973cbb5700c88E(%"proc_macro::TokenTree"* %_2, i64 %_4)
  %2 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %1, 0
  %3 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } undef, [0 x %"proc_macro::TokenTree"]* %2, 0
  %5 = insertvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %4, i64 %3, 1
  ret { [0 x %"proc_macro::TokenTree"]*, i64 } %5
}

; <proc_macro::bridge::client::Ident as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN72_$LT$proc_macro..bridge..client..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h12f270af630b7442E"(%"proc_macro::bridge::client::Ident"* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca %"proc_macro::bridge::client::Ident", align 4
  %1 = bitcast %"proc_macro::bridge::client::Ident"* %0 to i8*
  %2 = bitcast %"proc_macro::bridge::client::Ident"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 4, i1 false)
  %3 = bitcast %"proc_macro::bridge::client::Ident"* %0 to i32*
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; <proc_macro::bridge::client::Punct as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN72_$LT$proc_macro..bridge..client..Punct$u20$as$u20$core..clone..Clone$GT$5clone17hac9ef9c44e9fa5fbE"(%"proc_macro::bridge::client::Punct"* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca %"proc_macro::bridge::client::Punct", align 4
  %1 = bitcast %"proc_macro::bridge::client::Punct"* %0 to i8*
  %2 = bitcast %"proc_macro::bridge::client::Punct"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 4, i1 false)
  %3 = bitcast %"proc_macro::bridge::client::Punct"* %0 to i32*
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17ha2c57b98493c37acE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_3 = icmp ne i64 %self.1, %other.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call core::mem::size_of_val
  %size = call i64 @_ZN4core3mem11size_of_val17haee1c57800617744E([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb1
  %1 = load i8, i8* %0, align 1, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::as_ptr
  %_12 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf84c2d601562b202E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::slice::<impl [T]>::as_ptr
  %_15 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf84c2d601562b202E"([0 x i8]* nonnull align 1 %other.0, i64 %other.1)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_10 = call i32 @memcmp(i8* %_12, i8* %_15, i64 %size)
  br label %bb6

bb6:                                              ; preds = %bb5
  %3 = icmp eq i32 %_10, 0
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %0, align 1
  br label %bb7
}

; <core::marker::PhantomData<T> as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define void @"_ZN73_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h1aa66f5ea2e69dacE"(%"core::marker::PhantomData<marker::ProcMacroAutoTraits>"* nonnull align 1 %self) unnamed_addr #1 {
start:
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define { [0 x %TokenTree]*, i64 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h796d981de04d1274E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_5 = call %TokenTree* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17haf38022be0a8fd96E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<TokenTree>", %"alloc::vec::Vec<TokenTree>"* %self, i32 0, i32 1
  %_7 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts_mut
  %1 = call { [0 x %TokenTree]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17he23381acddfb9fe1E(%TokenTree* %_5, i64 %_7)
  %_4.0 = extractvalue { [0 x %TokenTree]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x %TokenTree]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = insertvalue { [0 x %TokenTree]*, i64 } undef, [0 x %TokenTree]* %_4.0, 0
  %3 = insertvalue { [0 x %TokenTree]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x %TokenTree]*, i64 } %3
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(8) i32* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h23a12c9a62356ca3E"(i32* align 4 dereferenceable_or_null(8) %0) unnamed_addr #0 {
start:
  %1 = alloca i32*, align 8
  %self = alloca i32*, align 8
  store i32* %0, i32** %self, align 8
  %2 = bitcast i32** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast i32** %1 to {}**
  store {}* null, {}** %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %6 = bitcast i32** %self to %"proc_macro::TokenTree"**
  %v = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %6, align 8, !nonnull !20
  %7 = bitcast i32** %1 to %"proc_macro::TokenTree"**
  store %"proc_macro::TokenTree"* %v, %"proc_macro::TokenTree"** %7, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %8 = load i32*, i32** %1, align 8
  ret i32* %8
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h24f1f8cec27ebe1fE"(i8* align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %8, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %v.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !20
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %v.1 = load i64, i64* %11, align 8
  %12 = bitcast { i8*, i64 }* %2 to { [0 x i8]*, i64 }*
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  store [0 x i8]* %v.0, [0 x i8]** %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  store i64 %v.1, i64* %14, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i8*, i64 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i64 } %19, i64 %18, 1
  ret { i8*, i64 } %20
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6e6c9e7e8b8a2470E"(i1 zeroext %0) unnamed_addr #0 {
start:
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %self, align 1
  %3 = load i8, i8* %self, align 1, !range !2
  %4 = trunc i8 %3 to i1
  %_2 = zext i1 %4 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 1, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %start
  %5 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, fallback::Span>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, fallback::Span>::Continue", %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, fallback::Span>::Continue"* %5, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %7 = load i8, i8* %1, align 1, !range !2
  %8 = trunc i8 %7 to i1
  ret i1 %8
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(48) i64* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb67b4a95301191cbE"(i64* align 8 dereferenceable_or_null(48) %0) unnamed_addr #0 {
start:
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast i64** %1 to {}**
  store {}* null, {}** %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %6 = bitcast i64** %self to %TokenTree**
  %v = load %TokenTree*, %TokenTree** %6, align 8, !nonnull !20
  %7 = bitcast i64** %1 to %TokenTree**
  store %TokenTree* %v, %TokenTree** %7, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %8 = load i64*, i64** %1, align 8
  ret i64* %8
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcf82740328f54b5eE"(i1 zeroext %0, i8 %1) unnamed_addr #0 {
start:
  %2 = alloca { i8, i8 }, align 1
  %self = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 0
  %4 = zext i1 %0 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 1
  store i8 %1, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %self to i8*
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = trunc i8 %7 to i1
  %_2 = zext i1 %8 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %2 to i8*
  store i8 1, i8* %9, align 1
  br label %bb4

bb3:                                              ; preds = %start
  %10 = bitcast { i8, i8 }* %self to %"core::option::Option<u8>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %10, i32 0, i32 1
  %v = load i8, i8* %11, align 1
  %12 = bitcast { i8, i8 }* %2 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u8>::Continue"*
  %13 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u8>::Continue", %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u8>::Continue"* %12, i32 0, i32 1
  store i8 %v, i8* %13, align 1
  %14 = bitcast { i8, i8 }* %2 to i8*
  store i8 0, i8* %14, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %2, i32 0, i32 0
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %2, i32 0, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = zext i1 %17 to i8
  %21 = insertvalue { i8, i8 } undef, i8 %20, 0
  %22 = insertvalue { i8, i8 } %21, i8 %19, 1
  ret { i8, i8 } %22
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd871516878da4d70E"(i32 %0) unnamed_addr #0 {
start:
  %_4 = alloca %"proc_macro::Span", align 4
  %v = alloca %"proc_macro::Span", align 4
  %1 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>", align 4
  %2 = alloca i32, align 4
  %self = alloca %"core::option::Option<proc_macro::Span>", align 4
  store i32 %0, i32* %2, align 4
  %3 = bitcast %"core::option::Option<proc_macro::Span>"* %self to i8*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %5 = bitcast %"core::option::Option<proc_macro::Span>"* %self to i32*
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %_2 = select i1 %7, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %8 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>"* %1 to i32*
  store i32 0, i32* %8, align 4
  br label %bb4

bb3:                                              ; preds = %start
  %9 = bitcast %"core::option::Option<proc_macro::Span>"* %self to %"core::option::Option<proc_macro::Span>::Some"*
  %10 = bitcast %"core::option::Option<proc_macro::Span>::Some"* %9 to %"proc_macro::Span"*
  %11 = bitcast %"proc_macro::Span"* %v to i8*
  %12 = bitcast %"proc_macro::Span"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  %13 = bitcast %"proc_macro::Span"* %_4 to i8*
  %14 = bitcast %"proc_macro::Span"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 4, i1 false)
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>"* %1 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>::Continue"*
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>::Continue"* %15 to %"proc_macro::Span"*
  %17 = bitcast %"proc_macro::Span"* %16 to i8*
  %18 = bitcast %"proc_macro::Span"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 4, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>"* %1 to i32*
  %20 = load i32, i32* %19, align 4
  ret i32 %20
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he4599fd3f2004516E"(i64 %0) unnamed_addr #0 {
start:
  %_4 = alloca %"proc_macro::TokenTree", align 4
  %v = alloca %"proc_macro::TokenTree", align 4
  %1 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>", align 4
  %2 = alloca i64, align 8
  %self = alloca %"core::option::Option<proc_macro::TokenTree>", align 4
  store i64 %0, i64* %2, align 8
  %3 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %self to i8*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !31
  %7 = sub i32 %6, 4
  %8 = icmp eq i32 %7, 0
  %_2 = select i1 %8, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>"* %1 to i32*
  store i32 4, i32* %9, align 4
  br label %bb4

bb3:                                              ; preds = %start
  %10 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %self to %"core::option::Option<proc_macro::TokenTree>::Some"*
  %11 = bitcast %"core::option::Option<proc_macro::TokenTree>::Some"* %10 to %"proc_macro::TokenTree"*
  %12 = bitcast %"proc_macro::TokenTree"* %v to i8*
  %13 = bitcast %"proc_macro::TokenTree"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 8, i1 false)
  %14 = bitcast %"proc_macro::TokenTree"* %_4 to i8*
  %15 = bitcast %"proc_macro::TokenTree"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 8, i1 false)
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>"* %1 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>::Continue"*
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>::Continue"* %16 to %"proc_macro::TokenTree"*
  %18 = bitcast %"proc_macro::TokenTree"* %17 to i8*
  %19 = bitcast %"proc_macro::TokenTree"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 8, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %20 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>"* %1 to i64*
  %21 = load i64, i64* %20, align 4
  ret i64 %21
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf39b0ff5aff85803E"(i8* align 1 dereferenceable_or_null(1) %0) unnamed_addr #0 {
start:
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast i8** %1 to {}**
  store {}* null, {}** %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !20
  store i8* %v, i8** %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i8*, i8** %1, align 8
  ret i8* %6
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hfb1927e6aec2732fE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hbd65a9caba176d19E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_3, i64 %self
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h90d4e6b374055422E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %_3 = icmp ult i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast i8** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_9 = call i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hfb1927e6aec2732fE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8* %_9, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i8*, i8** %0, align 8
  ret i8* %2
}

; <alloc::string::String as core::convert::From<&str>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h283cc81c8b69a486E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hab0586ae0da4fc4eE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2e1d7678ba2a9971E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h6b74db44d76de773E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i64*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !20
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !35
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5b082909e9215cb7E"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h35e94c8e4c947545E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h3e1ef470926953a7E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i64*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !20
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !35
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5b082909e9215cb7E"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc16f0330b6241265E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hd639099b469475c7E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i8*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !20
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !35
  %_7 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5b082909e9215cb7E"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hee1f59a5fab953b7E"({ i32*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17ha92dece78f22514bE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i32*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !20
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !35
  %_7 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5b082909e9215cb7E"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h5fa364adad6c3b41E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_2 = alloca i64*, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast i64** %_2 to { i64, i64 }**
  store { i64, i64 }* %self, { i64, i64 }** %1, align 8
  %2 = bitcast i64** %_2 to { i64, i64 }**
  %3 = load { i64, i64 }*, { i64, i64 }** %2, align 8, !nonnull !20
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %_4 = select i1 %6, i64 0, i64 1
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %7, align 8
  br label %bb6

bb1:                                              ; preds = %start
  %8 = bitcast i64** %_2 to { i64, i64 }**
  %__self_0 = load { i64, i64 }*, { i64, i64 }** %8, align 8, !nonnull !20
  %9 = bitcast i64** %_2 to { i64, i64 }**
  %10 = load { i64, i64 }*, { i64, i64 }** %9, align 8, !nonnull !20
  %__self_1 = bitcast { i64, i64 }* %10 to {}*
; call <core::alloc::layout::Layout as core::clone::Clone>::clone
  %11 = call { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h15fdb04b1a3b4b79E"({ i64, i64 }* align 8 dereferenceable(16) %__self_0)
  %_7.0 = extractvalue { i64, i64 } %11, 0
  %_7.1 = extractvalue { i64, i64 } %11, 1
  br label %bb4

bb4:                                              ; preds = %bb1
; call core::clone::Clone::clone
  call void @_ZN4core5clone5Clone5clone17h6abdc0f2a538fd08E({}* nonnull align 1 %__self_1)
  br label %bb5

bb5:                                              ; preds = %bb4
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_7.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_7.1, i64* %13, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19
}

; <alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN79_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h48618e1f6db68739E"(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* align 8 dereferenceable(40) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca %"proc_macro::TokenTree"*, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_guard = alloca i64*, align 8
  %vec = alloca i64*, align 8
  %iter = alloca { i32*, i32* }, align 8
  %_4 = getelementptr inbounds %"alloc::vec::drain::Drain<proc_macro::TokenTree>", %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %self, i32 0, i32 2
; call core::slice::<impl [T]>::iter
  %4 = call { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h88ed401c1e71beb7E"([0 x %"proc_macro::TokenTree"]* nonnull align 4 bitcast (<{ [0 x i8] }>* @alloc954 to [0 x %"proc_macro::TokenTree"]*), i64 0)
  %_5.0 = extractvalue { i32*, i32* } %4, 0
  %_5.1 = extractvalue { i32*, i32* } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::replace
  %5 = call { i32*, i32* } @_ZN4core3mem7replace17h69951be77b0fdea2E({ i32*, i32* }* align 8 dereferenceable(16) %_4, i32* nonnull %_5.0, i32* %_5.1)
  store { i32*, i32* } %5, { i32*, i32* }* %iter, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = bitcast { i32*, i32* }* %iter to i32**
  %start1.i = load i32*, i32** %6, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i = call %"proc_macro::TokenTree"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6b211d9fbe8eae44E"(i32* nonnull %start1.i)
  %7 = icmp eq i64 8, 0
  br i1 %7, label %bb3.i, label %bb6.i

bb3.i:                                            ; preds = %bb2
  %8 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %iter, i32 0, i32 1
  %9 = bitcast i32** %8 to %"proc_macro::TokenTree"**
  %_9.i = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %9, align 8
  %_8.i = ptrtoint %"proc_macro::TokenTree"* %_9.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_11.i = call %"proc_macro::TokenTree"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6b211d9fbe8eae44E"(i32* nonnull %start1.i)
  %_10.i = ptrtoint %"proc_macro::TokenTree"* %_11.i to i64
  %10 = sub i64 %_8.i, %_10.i
  store i64 %10, i64* %2, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h004814039582e2c9E.exit"

bb6.i:                                            ; preds = %bb2
  %11 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %iter, i32 0, i32 1
  %12 = bitcast i32** %11 to %"proc_macro::TokenTree"**
  %_15.i = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %12, align 8
  %_14.i = ptrtoint %"proc_macro::TokenTree"* %_15.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i = call %"proc_macro::TokenTree"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6b211d9fbe8eae44E"(i32* nonnull %start1.i)
  %_16.i = ptrtoint %"proc_macro::TokenTree"* %_17.i to i64
  %13 = sub nuw i64 %_14.i, %_16.i
  store i64 %13, i64* %1, align 8
  %diff.i = load i64, i64* %1, align 8
  %14 = udiv exact i64 %diff.i, 8
  store i64 %14, i64* %2, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h004814039582e2c9E.exit"

"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h004814039582e2c9E.exit": ; preds = %bb6.i, %bb3.i
  %15 = load i64, i64* %2, align 8
  br label %bb3

bb3:                                              ; preds = %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h004814039582e2c9E.exit"
  %16 = getelementptr inbounds %"alloc::vec::drain::Drain<proc_macro::TokenTree>", %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %self, i32 0, i32 3
  %17 = load i64*, i64** %16, align 8, !nonnull !20
  store i64* %17, i64** %vec, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %18 = icmp eq i64 8, 0
  br i1 %18, label %bb5, label %bb10

bb5:                                              ; preds = %bb4
; call core::ptr::non_null::NonNull<T>::as_mut
  %vec1 = call align 8 dereferenceable(24) %"alloc::vec::Vec<proc_macro::TokenTree>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h3a37e3a1cc999094E"(i64** align 8 dereferenceable(8) %vec)
  br label %bb6

bb10:                                             ; preds = %bb4
  %19 = bitcast i64** %_guard to %"alloc::vec::drain::Drain<proc_macro::TokenTree>"**
  store %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %self, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"** %19, align 8
  %20 = icmp eq i64 %15, 0
  br i1 %20, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
; call core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro::TokenTree,alloc::alloc::Global>>
  call void @"_ZN4core3ptr168drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro..TokenTree$C$alloc..alloc..Global$GT$$GT$17hd544538411050593E"(i64** %_guard)
  br label %bb22

bb12:                                             ; preds = %bb10
; invoke core::slice::iter::Iter<T>::as_slice
  %21 = invoke { [0 x %"proc_macro::TokenTree"]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h725acc1f37792afaE"({ i32*, i32* }* align 8 dereferenceable(16) %iter)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
  %_34.0 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %21, 0
  %_34.1 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %21, 1
; invoke core::slice::<impl [T]>::as_ptr
  %drop_ptr = invoke %"proc_macro::TokenTree"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h07ea9d35149e8d3dE"([0 x %"proc_macro::TokenTree"]* nonnull align 4 %_34.0, i64 %_34.1)
          to label %bb14 unwind label %cleanup

bb25:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro::TokenTree,alloc::alloc::Global>>
  call void @"_ZN4core3ptr168drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro..TokenTree$C$alloc..alloc..Global$GT$$GT$17hd544538411050593E"(i64** %_guard) #18
  br label %bb26

cleanup:                                          ; preds = %bb19, %bb18, %bb16, %bb15, %bb14, %bb13, %bb12
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb25

bb14:                                             ; preds = %bb13
; invoke core::ptr::non_null::NonNull<T>::as_mut
  %_38 = invoke align 8 dereferenceable(24) %"alloc::vec::Vec<proc_macro::TokenTree>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h3a37e3a1cc999094E"(i64** align 8 dereferenceable(8) %vec)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %vec_ptr = invoke %"proc_macro::TokenTree"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h6f4663d8bec95cf4E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %_38)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
; invoke core::ptr::const_ptr::<impl *const T>::offset_from
  %_41 = invoke i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$11offset_from17h602a023dbf9f8a22E"(%"proc_macro::TokenTree"* %drop_ptr, %"proc_macro::TokenTree"* %vec_ptr)
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
  %27 = getelementptr inbounds %"proc_macro::TokenTree", %"proc_macro::TokenTree"* %vec_ptr, i64 %_41
  store %"proc_macro::TokenTree"* %27, %"proc_macro::TokenTree"** %0, align 8
  %_3.i = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %0, align 8
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h45ab4dd9fe9c0438E.exit"

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h45ab4dd9fe9c0438E.exit": ; preds = %bb17
  br label %bb18

bb18:                                             ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h45ab4dd9fe9c0438E.exit"
; invoke core::ptr::slice_from_raw_parts_mut
  %28 = invoke { [0 x %"proc_macro::TokenTree"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h10b6ef78c7a5bdf6E(%"proc_macro::TokenTree"* %_3.i, i64 %15)
          to label %bb19 unwind label %cleanup

bb19:                                             ; preds = %bb18
  %to_drop.0 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %28, 0
  %to_drop.1 = extractvalue { [0 x %"proc_macro::TokenTree"]*, i64 } %28, 1
; invoke core::ptr::drop_in_place<[proc_macro::TokenTree]>
  invoke void @"_ZN4core3ptr52drop_in_place$LT$$u5b$proc_macro..TokenTree$u5d$$GT$17h40061cb744fe2901E"([0 x %"proc_macro::TokenTree"]* %to_drop.0, i64 %to_drop.1)
          to label %bb20 unwind label %cleanup

bb20:                                             ; preds = %bb19
; call core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro::TokenTree,alloc::alloc::Global>>
  call void @"_ZN4core3ptr168drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro..TokenTree$C$alloc..alloc..Global$GT$$GT$17hd544538411050593E"(i64** %_guard)
  br label %bb21

bb26:                                             ; preds = %bb25
  %29 = bitcast { i8*, i32 }* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb21:                                             ; preds = %bb20
  br label %bb24

bb24:                                             ; preds = %bb23, %bb21
  ret void

bb22:                                             ; preds = %bb11
  br label %bb23

bb23:                                             ; preds = %bb9, %bb22
  br label %bb24

bb6:                                              ; preds = %bb5
; call alloc::vec::Vec<T,A>::len
  %old_len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h5043d7be96cfe829E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %vec1)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_20 = add i64 %old_len, %15
  %35 = getelementptr inbounds %"alloc::vec::drain::Drain<proc_macro::TokenTree>", %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %self, i32 0, i32 1
  %_23 = load i64, i64* %35, align 8
  %_19 = add i64 %_20, %_23
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h70cf08fcd00ff5dbE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %vec1, i64 %_19)
  br label %bb8

bb8:                                              ; preds = %bb7
  %36 = getelementptr inbounds %"alloc::vec::drain::Drain<proc_macro::TokenTree>", %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %self, i32 0, i32 1
  %_28 = load i64, i64* %36, align 8
  %_26 = add i64 %old_len, %_28
; call alloc::vec::Vec<T,A>::truncate
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8truncate17h2ced661f93a239cdE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %vec1, i64 %_26)
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb23
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h10b2ec07c277ddedE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>") dereferenceable(56) %0, %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* noalias nocapture dereferenceable(56) %self) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, parse::Reject>::Err", align 1
  %_4 = alloca { { i8*, i64 }, %Ident }, align 8
  %v = alloca { { i8*, i64 }, %Ident }, align 8
  %1 = getelementptr inbounds %"core::result::Result<(parse::Cursor, Ident), parse::Reject>", %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* %self, i32 0, i32 1
  %2 = load i32, i32* %1, align 8, !range !103
  %3 = sub i32 %2, 2
  %4 = icmp eq i32 %3, 0
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* %self to %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Ok"*
  %6 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Ok"* %5 to { { i8*, i64 }, %Ident }*
  %7 = bitcast { { i8*, i64 }, %Ident }* %v to i8*
  %8 = bitcast { { i8*, i64 }, %Ident }* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 56, i1 false)
  %9 = bitcast { { i8*, i64 }, %Ident }* %_4 to i8*
  %10 = bitcast { { i8*, i64 }, %Ident }* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 56, i1 false)
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>::Continue"*
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>::Continue"* %11 to { { i8*, i64 }, %Ident }*
  %13 = bitcast { { i8*, i64 }, %Ident }* %12 to i8*
  %14 = bitcast { { i8*, i64 }, %Ident }* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 56, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %15 = bitcast %"core::result::Result<core::convert::Infallible, parse::Reject>::Err"* %_6 to %"parse::Reject"*
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>::Break"*
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>::Break"* %16 to %"core::result::Result<core::convert::Infallible, parse::Reject>::Err"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>"* %0, i32 0, i32 1
  store i32 2, i32* %18, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h15ce75f009833eeaE"(i64 %0) unnamed_addr #0 {
start:
  %_6 = alloca i8, align 1
  %_4 = alloca %"proc_macro::TokenStream", align 4
  %v = alloca %"proc_macro::TokenStream", align 4
  %1 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>", align 4
  %2 = alloca i64, align 8
  %self = alloca %"core::result::Result<proc_macro::TokenStream, imp::LexError>", align 4
  store i64 %0, i64* %2, align 8
  %3 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %self to i8*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %self to i8*
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = trunc i8 %6 to i1
  %_2 = zext i1 %7 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %self to %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Ok"*
  %9 = getelementptr inbounds %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Ok", %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Ok"* %8, i32 0, i32 1
  %10 = bitcast %"proc_macro::TokenStream"* %v to i8*
  %11 = bitcast %"proc_macro::TokenStream"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 4, i1 false)
  %12 = bitcast %"proc_macro::TokenStream"* %_4 to i8*
  %13 = bitcast %"proc_macro::TokenStream"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 4, i1 false)
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>"* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Continue"*
  %15 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Continue"* %14, i32 0, i32 1
  %16 = bitcast %"proc_macro::TokenStream"* %15 to i8*
  %17 = bitcast %"proc_macro::TokenStream"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 4, i1 false)
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>"* %1 to i8*
  store i8 0, i8* %18, align 4
  br label %bb4

bb1:                                              ; preds = %start
  %19 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %self to %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Err"*
  %20 = getelementptr inbounds %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Err", %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Err"* %19, i32 0, i32 1
  %21 = load i8, i8* %20, align 1, !range !2
  %e = trunc i8 %21 to i1
  %22 = zext i1 %e to i8
  store i8 %22, i8* %_6, align 1
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>"* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Break"*
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Break"* %23, i32 0, i32 1
  %25 = load i8, i8* %_6, align 1, !range !2
  %26 = trunc i8 %25 to i1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %24, align 1
  %28 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>"* %1 to i8*
  store i8 1, i8* %28, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %29 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>"* %1 to i64*
  %30 = load i64, i64* %29, align 4
  ret i64 %30
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1786e3e453c24b7cE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>") dereferenceable(24) %0, %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !18
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %v.0 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %v.1 = load i64, i64* %5, align 8, !range !35
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  store i64 %v.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  store i64 %v.1, i64* %9, align 8
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  %e.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  %e.1 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %16, align 8
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to i64*
  store i64 1, i64* %25, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h20db0c871e65b5d7E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !18
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"* %6, i32 0, i32 1
  %v = load i64, i64* %7, align 8
  %8 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"* %8, i32 0, i32 1
  store i64 %v, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %_6 to %"core::alloc::layout::LayoutError"*
  %12 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break"*
  %13 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break"* %12, i32 0, i32 1
  %14 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %14, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !18
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h250279cab3240b09E"(i8* %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !20
  store i8* %v, i8** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %_6 to %"core::alloc::AllocError"*
  %6 = bitcast i8** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break"*
  %7 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break"* %6 to %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"*
  %8 = bitcast i8** %1 to {}**
  store {}* null, {}** %8, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8*, i8** %1, align 8
  ret i8* %9
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h28751eac51608096E"(i1 zeroext %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err", align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %self, align 1
  %3 = load i8, i8* %self, align 1, !range !2
  %4 = trunc i8 %3 to i1
  %_2 = zext i1 %4 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Continue"* %5, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err"* %_6 to %"core::fmt::Error"*
  %8 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Break"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Break"* %8, i32 0, i32 1
  store i8 1, i8* %1, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %10 = load i8, i8* %1, align 1, !range !2
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3424d05129708615E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %0, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !18
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %v = load i64, i64* %3, align 8
  %4 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %5 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %4, i32 0, i32 1
  store i64 %v, i64* %5, align 8
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to i64*
  store i64 0, i64* %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*
  %8 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %7, i32 0, i32 1
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0
  %e.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1
  %e.1 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %12, align 8
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %14 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %13, i32 0, i32 1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h3f40f9e290d6fe3eE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>") dereferenceable(24) %0, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !18
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue"*
  %3 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue"* %2, i32 0, i32 1
  %4 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to i64*
  store i64 0, i64* %4, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0
  %e.0 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  %e.1 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %10, align 8
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"*
  %12 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to i64*
  store i64 1, i64* %19, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h40c0b469fab2e112E"(i64 %0, i32 %1) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, parse::Reject>::Err", align 1
  %2 = alloca { i64, i32 }, align 8
  %self = alloca { i64, i32 }, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %6 = load i32, i32* %5, align 8, !range !22
  %7 = sub i32 %6, 1114112
  %8 = icmp eq i32 %7, 0
  %_2 = select i1 %8, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  %v.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %v.1 = load i32, i32* %10, align 8, !range !80
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0
  store i64 %v.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1
  store i32 %v.1, i32* %12, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<core::convert::Infallible, parse::Reject>::Err"* %_6 to %"parse::Reject"*
  %14 = bitcast { i64, i32 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, char)>::Break"*
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, char)>::Break"* %14 to %"core::result::Result<core::convert::Infallible, parse::Reject>::Err"*
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1
  store i32 1114112, i32* %16, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1
  %20 = load i32, i32* %19, align 8, !range !22
  %21 = insertvalue { i64, i32 } undef, i64 %18, 0
  %22 = insertvalue { i64, i32 } %21, i32 %20, 1
  ret { i64, i32 } %22
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h52bf41484a890aa1E"(i8* %0, i64 %1) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %v.0 = load i8*, i8** %8, align 8, !nonnull !20
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %v.1 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %v.0, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %v.1, i64* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %12 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %_6 to %"core::alloc::AllocError"*
  %13 = bitcast { i8*, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %13 to %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"*
  %15 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1
  ret { i8*, i64 } %21
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5e71673a19ec9cdaE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>") dereferenceable(40) %0, %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, parse::Reject>::Err", align 1
  %_4 = alloca { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, align 8
  %v = alloca { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, align 8
  %1 = getelementptr inbounds %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>", %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* %self, i32 0, i32 1
  %2 = load i8, i8* %1, align 8, !range !104
  %3 = sub i8 %2, 2
  %4 = icmp eq i8 %3, 0
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* %self to %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Ok"*
  %6 = bitcast %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Ok"* %5 to { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }*
  %7 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %v to i8*
  %8 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 40, i1 false)
  %9 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_4 to i8*
  %10 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 40, i1 false)
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>::Continue"*
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>::Continue"* %11 to { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }*
  %13 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %12 to i8*
  %14 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 40, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %15 = bitcast %"core::result::Result<core::convert::Infallible, parse::Reject>::Err"* %_6 to %"parse::Reject"*
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>::Break"*
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>::Break"* %16 to %"core::result::Result<core::convert::Infallible, parse::Reject>::Err"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>"* %0, i32 0, i32 1
  store i8 2, i8* %18, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6a4058ab03d358aaE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>") dereferenceable(48) %0, %"core::result::Result<imp::TokenStream, LexError>"* noalias nocapture dereferenceable(48) %self) unnamed_addr #0 {
start:
  %_6 = alloca i8, align 1
  %_4 = alloca %"imp::TokenStream", align 8
  %v = alloca %"imp::TokenStream", align 8
  %1 = bitcast %"core::result::Result<imp::TokenStream, LexError>"* %self to i8*
  %2 = load i8, i8* %1, align 8, !range !2
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<imp::TokenStream, LexError>"* %self to %"core::result::Result<imp::TokenStream, LexError>::Ok"*
  %5 = getelementptr inbounds %"core::result::Result<imp::TokenStream, LexError>::Ok", %"core::result::Result<imp::TokenStream, LexError>::Ok"* %4, i32 0, i32 1
  %6 = bitcast %"imp::TokenStream"* %v to i8*
  %7 = bitcast %"imp::TokenStream"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 40, i1 false)
  %8 = bitcast %"imp::TokenStream"* %_4 to i8*
  %9 = bitcast %"imp::TokenStream"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 40, i1 false)
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Continue"*
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Continue"* %10, i32 0, i32 1
  %12 = bitcast %"imp::TokenStream"* %11 to i8*
  %13 = bitcast %"imp::TokenStream"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 40, i1 false)
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>"* %0 to i8*
  store i8 0, i8* %14, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %15 = bitcast %"core::result::Result<imp::TokenStream, LexError>"* %self to %"core::result::Result<imp::TokenStream, LexError>::Err"*
  %16 = getelementptr inbounds %"core::result::Result<imp::TokenStream, LexError>::Err", %"core::result::Result<imp::TokenStream, LexError>::Err"* %15, i32 0, i32 1
  %17 = load i8, i8* %16, align 1, !range !2
  %e = trunc i8 %17 to i1
  %18 = zext i1 %e to i8
  store i8 %18, i8* %_6, align 1
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Break"*
  %20 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Break"* %19, i32 0, i32 1
  %21 = load i8, i8* %_6, align 1, !range !2
  %22 = trunc i8 %21 to i1
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %20, align 1
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>"* %0 to i8*
  store i8 1, i8* %24, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h797226bcece5389aE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>") dereferenceable(24) %0, %"core::result::Result<(usize, u8), parse::Reject>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, parse::Reject>::Err", align 1
  %1 = bitcast %"core::result::Result<(usize, u8), parse::Reject>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !18
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(usize, u8), parse::Reject>"* %self to %"core::result::Result<(usize, u8), parse::Reject>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<(usize, u8), parse::Reject>::Ok", %"core::result::Result<(usize, u8), parse::Reject>::Ok"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %3, i32 0, i32 0
  %v.0 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %3, i32 0, i32 1
  %v.1 = load i8, i8* %5, align 8
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>::Continue"*
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>::Continue"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %7, i32 0, i32 0
  store i64 %v.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %7, i32 0, i32 1
  store i8 %v.1, i8* %9, align 8
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>"* %0 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::convert::Infallible, parse::Reject>::Err"* %_6 to %"parse::Reject"*
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>::Break"*
  %13 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>::Break"* %12, i32 0, i32 1
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>"* %0 to i64*
  store i64 1, i64* %14, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h872dfb803c62b9c2E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>") dereferenceable(32) %0, %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, parse::Reject>::Err", align 1
  %_4 = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %v = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %1 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* %self to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* %self to %"core::result::Result<(parse::Cursor, &str), parse::Reject>::Ok"*
  %5 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>::Ok"* %4 to { { i8*, i64 }, { [0 x i8]*, i64 } }*
  %6 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %v to i8*
  %7 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false)
  %8 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_4 to i8*
  %9 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Continue"*
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Continue"* %10 to { { i8*, i64 }, { [0 x i8]*, i64 } }*
  %12 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %11 to i8*
  %13 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<core::convert::Infallible, parse::Reject>::Err"* %_6 to %"parse::Reject"*
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Break"*
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Break"* %15 to %"core::result::Result<core::convert::Infallible, parse::Reject>::Err"*
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* %0 to {}**
  store {}* null, {}** %17, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb2dc13e984552c4bE"(i8* align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, parse::Reject>::Err", align 1
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %v.0 = load i8*, i8** %8, align 8, !nonnull !20
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %v.1 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %v.0, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %v.1, i64* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %12 = bitcast %"core::result::Result<core::convert::Infallible, parse::Reject>::Err"* %_6 to %"parse::Reject"*
  %13 = bitcast { i8*, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, parse::Cursor>::Break"*
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, parse::Cursor>::Break"* %13 to %"core::result::Result<core::convert::Infallible, parse::Reject>::Err"*
  %15 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1
  ret { i8*, i64 } %21
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb731ae330c9f3770E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>") dereferenceable(24) %0, %"core::result::Result<fallback::TokenStream, fallback::LexError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, fallback::LexError>::Err", align 1
  %_4 = alloca %"fallback::TokenStream", align 8
  %v = alloca %"fallback::TokenStream", align 8
  %1 = bitcast %"core::result::Result<fallback::TokenStream, fallback::LexError>"* %self to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<fallback::TokenStream, fallback::LexError>"* %self to %"core::result::Result<fallback::TokenStream, fallback::LexError>::Ok"*
  %5 = bitcast %"core::result::Result<fallback::TokenStream, fallback::LexError>::Ok"* %4 to %"fallback::TokenStream"*
  %6 = bitcast %"fallback::TokenStream"* %v to i8*
  %7 = bitcast %"fallback::TokenStream"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = bitcast %"fallback::TokenStream"* %_4 to i8*
  %9 = bitcast %"fallback::TokenStream"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>::Continue"*
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>::Continue"* %10 to %"fallback::TokenStream"*
  %12 = bitcast %"fallback::TokenStream"* %11 to i8*
  %13 = bitcast %"fallback::TokenStream"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<core::convert::Infallible, fallback::LexError>::Err"* %_6 to %"fallback::LexError"*
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>::Break"*
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>::Break"* %15 to %"core::result::Result<core::convert::Infallible, fallback::LexError>::Err"*
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>"* %0 to {}**
  store {}* null, {}** %17, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd04d5659ee7ac709E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %0, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !18
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0
  %v.0 = load i8*, i8** %4, align 8, !nonnull !20
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %v.1 = load i64, i64* %5, align 8
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %7, i32 0, i32 0
  store i8* %v.0, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %7, i32 0, i32 1
  store i64 %v.1, i64* %9, align 8
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  %e.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  %e.1 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %16, align 8
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to i64*
  store i64 1, i64* %25, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd79bca939fffd5e5E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>") dereferenceable(24) %0, %"core::result::Result<fallback::Literal, fallback::LexError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, fallback::LexError>::Err", align 1
  %_4 = alloca %"fallback::Literal", align 8
  %v = alloca %"fallback::Literal", align 8
  %1 = bitcast %"core::result::Result<fallback::Literal, fallback::LexError>"* %self to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<fallback::Literal, fallback::LexError>"* %self to %"core::result::Result<fallback::Literal, fallback::LexError>::Ok"*
  %5 = bitcast %"core::result::Result<fallback::Literal, fallback::LexError>::Ok"* %4 to %"fallback::Literal"*
  %6 = bitcast %"fallback::Literal"* %v to i8*
  %7 = bitcast %"fallback::Literal"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = bitcast %"fallback::Literal"* %_4 to i8*
  %9 = bitcast %"fallback::Literal"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>::Continue"*
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>::Continue"* %10 to %"fallback::Literal"*
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<core::convert::Infallible, fallback::LexError>::Err"* %_6 to %"fallback::LexError"*
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>::Break"*
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>::Break"* %15 to %"core::result::Result<core::convert::Infallible, fallback::LexError>::Err"*
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>"* %0 to {}**
  store {}* null, {}** %17, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he015db8260c73fc8E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>") dereferenceable(24) %0, %"core::result::Result<(parse::Cursor, char), parse::Reject>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, parse::Reject>::Err", align 1
  %_4 = alloca { { i8*, i64 }, i32, [1 x i32] }, align 8
  %v = alloca { { i8*, i64 }, i32, [1 x i32] }, align 8
  %1 = getelementptr inbounds %"core::result::Result<(parse::Cursor, char), parse::Reject>", %"core::result::Result<(parse::Cursor, char), parse::Reject>"* %self, i32 0, i32 1
  %2 = load i32, i32* %1, align 8, !range !22
  %3 = sub i32 %2, 1114112
  %4 = icmp eq i32 %3, 0
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(parse::Cursor, char), parse::Reject>"* %self to %"core::result::Result<(parse::Cursor, char), parse::Reject>::Ok"*
  %6 = bitcast %"core::result::Result<(parse::Cursor, char), parse::Reject>::Ok"* %5 to { { i8*, i64 }, i32, [1 x i32] }*
  %7 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %v to i8*
  %8 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %_4 to i8*
  %10 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>::Continue"*
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>::Continue"* %11 to { { i8*, i64 }, i32, [1 x i32] }*
  %13 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %12 to i8*
  %14 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %15 = bitcast %"core::result::Result<core::convert::Infallible, parse::Reject>::Err"* %_6 to %"parse::Reject"*
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>::Break"*
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>::Break"* %16 to %"core::result::Result<core::convert::Infallible, parse::Reject>::Err"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>"* %0, i32 0, i32 1
  store i32 1114112, i32* %18, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h5b07b4091f1de8dcE"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %self) unnamed_addr #0 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %4 = alloca { [0 x i8]*, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_3 = alloca %"core::str::pattern::SearchStep", align 8
  %5 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %6 = bitcast %"core::str::pattern::StrSearcherImpl"* %5 to i64*
  %_2 = load i64, i64* %6, align 8, !range !18
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %8 = bitcast %"core::str::pattern::StrSearcherImpl"* %7 to %"core::str::pattern::StrSearcherImpl::TwoWay"*
  %searcher = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", %"core::str::pattern::StrSearcherImpl::TwoWay"* %8, i32 0, i32 1
  %9 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 6
  %_13 = load i64, i64* %9, align 8
  %is_long = icmp eq i64 %_13, -1
  br i1 %is_long, label %bb10, label %bb14

bb14:                                             ; preds = %bb1
  %10 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0
  %_25.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !nonnull !20
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1
  %_25.1 = load i64, i64* %12, align 8
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %_25.0, [0 x i8]** %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %_25.1, i64* %14, align 8
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  %16 = load [0 x i8]*, [0 x i8]** %15, align 8, !nonnull !20
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %16, 0
  %20 = insertvalue { [0 x i8]*, i64 } %19, i64 %18, 1
  %_24.0 = extractvalue { [0 x i8]*, i64 } %20, 0
  %_24.1 = extractvalue { [0 x i8]*, i64 } %20, 1
  br label %bb15

bb10:                                             ; preds = %bb1
  %21 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 0
  %_18.0 = load [0 x i8]*, [0 x i8]** %22, align 8, !nonnull !20
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 1
  %_18.1 = load i64, i64* %23, align 8
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %_18.0, [0 x i8]** %24, align 8
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %_18.1, i64* %25, align 8
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %27 = load [0 x i8]*, [0 x i8]** %26, align 8, !nonnull !20
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %27, 0
  %31 = insertvalue { [0 x i8]*, i64 } %30, i64 %29, 1
  %_17.0 = extractvalue { [0 x i8]*, i64 } %31, 0
  %_17.1 = extractvalue { [0 x i8]*, i64 } %31, 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %32 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0
  %_21.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !20
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1
  %_21.1 = load i64, i64* %34, align 8
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_21.0, [0 x i8]** %35, align 8
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %_21.1, i64* %36, align 8
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  %38 = load [0 x i8]*, [0 x i8]** %37, align 8, !nonnull !20
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %38, 0
  %42 = insertvalue { [0 x i8]*, i64 } %41, i64 %40, 1
  %_20.0 = extractvalue { [0 x i8]*, i64 } %42, 0
  %_20.1 = extractvalue { [0 x i8]*, i64 } %42, 1
  br label %bb12

bb12:                                             ; preds = %bb11
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h3d82cc279a5322daE(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %searcher, [0 x i8]* nonnull align 1 %_17.0, i64 %_17.1, [0 x i8]* nonnull align 1 %_20.0, i64 %_20.1, i1 zeroext true)
  br label %bb13

bb13:                                             ; preds = %bb12
  br label %bb18

bb18:                                             ; preds = %bb17, %bb13
  br label %bb20

bb15:                                             ; preds = %bb14
  %43 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 0
  %_28.0 = load [0 x i8]*, [0 x i8]** %44, align 8, !nonnull !20
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 1
  %_28.1 = load i64, i64* %45, align 8
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  store [0 x i8]* %_28.0, [0 x i8]** %46, align 8
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  store i64 %_28.1, i64* %47, align 8
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  %49 = load [0 x i8]*, [0 x i8]** %48, align 8, !nonnull !20
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %49, 0
  %53 = insertvalue { [0 x i8]*, i64 } %52, i64 %51, 1
  %_27.0 = extractvalue { [0 x i8]*, i64 } %53, 0
  %_27.1 = extractvalue { [0 x i8]*, i64 } %53, 1
  br label %bb16

bb16:                                             ; preds = %bb15
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h3d82cc279a5322daE(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %searcher, [0 x i8]* nonnull align 1 %_24.0, i64 %_24.1, [0 x i8]* nonnull align 1 %_27.0, i64 %_27.1, i1 zeroext false)
  br label %bb17

bb17:                                             ; preds = %bb16
  br label %bb18

bb20:                                             ; preds = %bb19, %bb18
  ret void

bb4:                                              ; preds = %bb6, %bb3
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h6dd45c434af24eefE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %_3, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %self)
  br label %bb5

bb5:                                              ; preds = %bb4
  %54 = bitcast %"core::str::pattern::SearchStep"* %_3 to i64*
  %_5 = load i64, i64* %54, align 8, !range !79
  switch i64 %_5, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
    i64 2, label %bb9
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb5
  %55 = bitcast %"core::str::pattern::SearchStep"* %_3 to %"core::str::pattern::SearchStep::Match"*
  %56 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %55, i32 0, i32 1
  %a = load i64, i64* %56, align 8
  %57 = bitcast %"core::str::pattern::SearchStep"* %_3 to %"core::str::pattern::SearchStep::Match"*
  %58 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %57, i32 0, i32 2
  %b = load i64, i64* %58, align 8
  %59 = bitcast { i64, i64 }* %_8 to i64*
  store i64 %a, i64* %59, align 8
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  store i64 %b, i64* %60, align 8
  %61 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*
  %62 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %61, i32 0, i32 1
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %62, i32 0, i32 0
  store i64 %64, i64* %67, align 8
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %62, i32 0, i32 1
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %69, align 8
  br label %bb19

bb6:                                              ; preds = %bb5
  br label %bb4

bb9:                                              ; preds = %bb5
  %70 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %70, align 8
  br label %bb19

bb19:                                             ; preds = %bb8, %bb9
  br label %bb20
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h6dd45c434af24eefE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %self) unnamed_addr #0 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %otherwise = alloca %"core::str::pattern::SearchStep", align 8
  %b = alloca i64, align 8
  %_32 = alloca %"core::str::pattern::SearchStep", align 8
  %_14 = alloca i64, align 8
  %_10 = alloca { i8*, i8* }, align 8
  %_8 = alloca i32, align 4
  %3 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %4 = bitcast %"core::str::pattern::StrSearcherImpl"* %3 to i64*
  %_2 = load i64, i64* %4, align 8, !range !18
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %6 = bitcast %"core::str::pattern::StrSearcherImpl"* %5 to %"core::str::pattern::StrSearcherImpl::Empty"*
  %searcher1 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", %"core::str::pattern::StrSearcherImpl::Empty"* %6, i32 0, i32 1
  %7 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 4
  %8 = load i8, i8* %7, align 2, !range !2
  %_4 = trunc i8 %8 to i1
  br i1 %_4, label %bb4, label %bb5

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %10 = bitcast %"core::str::pattern::StrSearcherImpl"* %9 to %"core::str::pattern::StrSearcherImpl::TwoWay"*
  %searcher = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", %"core::str::pattern::StrSearcherImpl::TwoWay"* %10, i32 0, i32 1
  %11 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4
  %_27 = load i64, i64* %11, align 8
  %12 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  %_29.0 = load [0 x i8]*, [0 x i8]** %13, align 8, !nonnull !20
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  %_29.1 = load i64, i64* %14, align 8
; call core::str::<impl str>::len
  %_28 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %_29.0, i64 %_29.1)
  br label %bb16

bb16:                                             ; preds = %bb1
  %_26 = icmp eq i64 %_27, %_28
  br i1 %_26, label %bb17, label %bb18

bb18:                                             ; preds = %bb16
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 6
  %_31 = load i64, i64* %15, align 8
  %is_long = icmp eq i64 %_31, -1
  %16 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0
  %_36.0 = load [0 x i8]*, [0 x i8]** %17, align 8, !nonnull !20
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1
  %_36.1 = load i64, i64* %18, align 8
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %_36.0, [0 x i8]** %19, align 8
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %_36.1, i64* %20, align 8
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %22 = load [0 x i8]*, [0 x i8]** %21, align 8, !nonnull !20
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %22, 0
  %26 = insertvalue { [0 x i8]*, i64 } %25, i64 %24, 1
  %_35.0 = extractvalue { [0 x i8]*, i64 } %26, 0
  %_35.1 = extractvalue { [0 x i8]*, i64 } %26, 1
  br label %bb19

bb17:                                             ; preds = %bb16
  %27 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %27, align 8
  br label %bb30

bb30:                                             ; preds = %bb15, %bb4, %bb29, %bb17
  ret void

bb19:                                             ; preds = %bb18
  %28 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  %_39.0 = load [0 x i8]*, [0 x i8]** %29, align 8, !nonnull !20
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  %_39.1 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_39.0, [0 x i8]** %31, align 8
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %_39.1, i64* %32, align 8
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  %34 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !20
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %34, 0
  %38 = insertvalue { [0 x i8]*, i64 } %37, i64 %36, 1
  %_38.0 = extractvalue { [0 x i8]*, i64 } %38, 0
  %_38.1 = extractvalue { [0 x i8]*, i64 } %38, 1
  br label %bb20

bb20:                                             ; preds = %bb19
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h29dd5a52aa80d052E(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %_32, %"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %searcher, [0 x i8]* nonnull align 1 %_35.0, i64 %_35.1, [0 x i8]* nonnull align 1 %_38.0, i64 %_38.1, i1 zeroext %is_long)
  br label %bb21

bb21:                                             ; preds = %bb20
  %39 = bitcast %"core::str::pattern::SearchStep"* %_32 to i64*
  %_41 = load i64, i64* %39, align 8, !range !79
  %40 = icmp eq i64 %_41, 1
  br i1 %40, label %bb23, label %bb22

bb23:                                             ; preds = %bb21
  %41 = bitcast %"core::str::pattern::SearchStep"* %_32 to %"core::str::pattern::SearchStep::Reject"*
  %42 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %41, i32 0, i32 1
  %a = load i64, i64* %42, align 8
  %43 = bitcast %"core::str::pattern::SearchStep"* %_32 to %"core::str::pattern::SearchStep::Reject"*
  %44 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %43, i32 0, i32 2
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %b, align 8
  br label %bb24

bb22:                                             ; preds = %bb21
  %46 = bitcast %"core::str::pattern::SearchStep"* %otherwise to i8*
  %47 = bitcast %"core::str::pattern::SearchStep"* %_32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false)
  %48 = bitcast %"core::str::pattern::SearchStep"* %0 to i8*
  %49 = bitcast %"core::str::pattern::SearchStep"* %otherwise to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false)
  br label %bb29

bb29:                                             ; preds = %bb28, %bb22
  br label %bb30

bb24:                                             ; preds = %bb26, %bb23
  %50 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 0
  %_46.0 = load [0 x i8]*, [0 x i8]** %51, align 8, !nonnull !20
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 1
  %_46.1 = load i64, i64* %52, align 8
  %_47 = load i64, i64* %b, align 8
; call core::str::<impl str>::is_char_boundary
  %_45 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h81242d51336a2898E"([0 x i8]* nonnull align 1 %_46.0, i64 %_46.1, i64 %_47)
  br label %bb25

bb25:                                             ; preds = %bb24
  %_44 = xor i1 %_45, true
  br i1 %_44, label %bb26, label %bb27

bb27:                                             ; preds = %bb25
  %_49 = load i64, i64* %b, align 8
  %53 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4
  %_50 = load i64, i64* %53, align 8
; call core::cmp::max
  %_48 = call i64 @_ZN4core3cmp3max17h74b219b421c96b03E(i64 %_49, i64 %_50)
  br label %bb28

bb26:                                             ; preds = %bb25
  %54 = load i64, i64* %b, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %b, align 8
  br label %bb24

bb28:                                             ; preds = %bb27
  %56 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4
  store i64 %_48, i64* %56, align 8
  %_52 = load i64, i64* %b, align 8
  %57 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %58 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %57, i32 0, i32 1
  store i64 %a, i64* %58, align 8
  %59 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %60 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %59, i32 0, i32 2
  store i64 %_52, i64* %60, align 8
  %61 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %61, align 8
  br label %bb29

bb5:                                              ; preds = %bb3
  %62 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 2
  %63 = load i8, i8* %62, align 8, !range !2
  %is_match = trunc i8 %63 to i1
  %64 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 2
  %65 = load i8, i8* %64, align 8, !range !2
  %_6 = trunc i8 %65 to i1
  %66 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 2
  %67 = xor i1 %_6, true
  %68 = zext i1 %67 to i8
  store i8 %68, i8* %66, align 8
  %69 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %pos = load i64, i64* %69, align 8
  %70 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 0
  %_13.0 = load [0 x i8]*, [0 x i8]** %71, align 8, !nonnull !20
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 1
  %_13.1 = load i64, i64* %72, align 8
  store i64 %pos, i64* %_14, align 8
  %73 = load i64, i64* %_14, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %74 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17ha5dfc76fbe8f171dE"([0 x i8]* nonnull align 1 %_13.0, i64 %_13.1, i64 %73, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1456 to %"core::panic::location::Location"*))
  %_12.0 = extractvalue { [0 x i8]*, i64 } %74, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %74, 1
  br label %bb6

bb4:                                              ; preds = %bb3
  %75 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %75, align 8
  br label %bb30

bb6:                                              ; preds = %bb5
; call core::str::<impl str>::chars
  %76 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h6f889b924c1c660fE"([0 x i8]* nonnull align 1 %_12.0, i64 %_12.1)
  store { i8*, i8* } %76, { i8*, i8* }* %_10, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %77 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %_10), !range !22
  store i32 %77, i32* %_8, align 4
  br label %bb8

bb8:                                              ; preds = %bb7
  br i1 %is_match, label %bb11, label %bb12

bb12:                                             ; preds = %bb8
  %78 = load i32, i32* %_8, align 4, !range !22
  %79 = sub i32 %78, 1114112
  %80 = icmp eq i32 %79, 0
  %_16 = select i1 %80, i64 0, i64 1
  switch i64 %_16, label %bb10 [
    i64 0, label %bb13
    i64 1, label %bb9
  ]

bb11:                                             ; preds = %bb8
  %81 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %82 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %81, i32 0, i32 1
  store i64 %pos, i64* %82, align 8
  %83 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %84 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %83, i32 0, i32 2
  store i64 %pos, i64* %84, align 8
  %85 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 0, i64* %85, align 8
  br label %bb15

bb15:                                             ; preds = %bb13, %bb14, %bb11
  br label %bb30

bb10:                                             ; preds = %bb12
  unreachable

bb13:                                             ; preds = %bb12
  %86 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 4
  store i8 1, i8* %86, align 2
  %87 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %87, align 8
  br label %bb15

bb9:                                              ; preds = %bb12
  %ch = load i32, i32* %_8, align 4, !range !80
; call core::char::methods::<impl char>::len_utf8
  %_21 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817h820a382be7518970E"(i32 %ch)
  br label %bb14

bb14:                                             ; preds = %bb9
  %88 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %89 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, %_21
  store i64 %91, i64* %88, align 8
  %92 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %_24 = load i64, i64* %92, align 8
  %93 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %94 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %93, i32 0, i32 1
  store i64 %pos, i64* %94, align 8
  %95 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %96 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %95, i32 0, i32 2
  store i64 %_24, i64* %96, align 8
  %97 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %97, align 8
  br label %bb15
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::all
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3all17h996fd7b0da908df3E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::iter::traits::iterator::Iterator::all
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h86ba4c508979f985E({ i8*, i8* }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h962fc68cde015298E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
  %0 = call { i8, i8 } @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7791cbd92c195851E"({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i8, i8 } %0, 0
  %2 = trunc i8 %1 to i1
  %3 = extractvalue { i8, i8 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = zext i1 %2 to i8
  %5 = insertvalue { i8, i8 } undef, i8 %4, 0
  %6 = insertvalue { i8, i8 } %5, i8 %3, 1
  ret { i8, i8 } %6
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17h76a167488b359f65E({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i32, i32 } %0, 0
  %_2.1 = extractvalue { i32, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::map
  %1 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h6a00c7e27cceeb47E"(i32 %_2.0, i32 %_2.1), !range !22
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %1
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h2aeb12f835f887f6E"(i32 %ch) unnamed_addr #0 {
start:
; call core::char::convert::from_u32_unchecked
  %0 = call i32 @_ZN4core4char7convert18from_u32_unchecked17ha88fb2c29d2e4b03E(i32 %ch), !range !80
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h79575f14addad360E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::CharSearcher"* align 8 dereferenceable(48) %self) unnamed_addr #0 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %_51 = alloca { i64, i64 }, align 8
  %_49 = alloca { i64, i64 }, align 8
  %_46 = alloca { [0 x i8]*, i64 }, align 8
  %slice = alloca { [0 x i8]*, i64 }, align 8
  %_38 = alloca { i64, i64 }, align 8
  %_34 = alloca { i8*, i64 }, align 8
  %_21 = alloca { i64, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %bb21, %start
  %3 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  %_7.0 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !20
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  %_7.1 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %_7.0, [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %_7.1, i64* %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %9 = load [0 x i8]*, [0 x i8]** %8, align 8, !nonnull !20
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1
  %_6.0 = extractvalue { [0 x i8]*, i64 } %13, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %13, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %14 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %_9 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 2
  %_10 = load i64, i64* %15, align 8
  %16 = bitcast { i64, i64 }* %_8 to i64*
  store i64 %_9, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  store i64 %_10, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
; call core::slice::<impl [T]>::get
  %22 = call { i8*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hc1defbab80d2d62bE"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1, i64 %19, i64 %21)
  %_4.0 = extractvalue { i8*, i64 } %22, 0
  %_4.1 = extractvalue { i8*, i64 } %22, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %23 = call { i8*, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h24f1f8cec27ebe1fE"(i8* align 1 %_4.0, i64 %_4.1)
  store { i8*, i64 } %23, { i8*, i64 }* %_3, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %24 = bitcast { i8*, i64 }* %_3 to {}**
  %25 = load {}*, {}** %24, align 8
  %26 = icmp eq {}* %25, null
  %_11 = select i1 %26, i64 1, i64 0
  switch i64 %_11, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %27 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 0
  %val.0 = load [0 x i8]*, [0 x i8]** %28, align 8, !nonnull !20
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 1
  %val.1 = load i64, i64* %29, align 8
  %_18 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 5
  %_17.0 = bitcast [4 x i8]* %_18 to [0 x i8]*
  %30 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %_20 = load i64, i64* %30, align 8
  %_19 = sub i64 %_20, 1
; call core::slice::<impl [T]>::get_unchecked
  %_16 = call align 1 dereferenceable(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hf8fb324857833ae3E"([0 x i8]* nonnull align 1 %_17.0, i64 4, i64 %_19)
  br label %bb9

bb7:                                              ; preds = %bb4
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  call void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h7ad9dfbd7afe0e07E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0)
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb24

bb24:                                             ; preds = %bb23, %bb8
  ret void

bb9:                                              ; preds = %bb5
  %last_byte = load i8, i8* %_16, align 1
; call core::slice::memchr::memchr
  %31 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17h9c45462924d98aa5E(i8 %last_byte, [0 x i8]* nonnull align 1 %val.0, i64 %val.1)
  store { i64, i64 } %31, { i64, i64 }* %_21, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
  %32 = bitcast { i64, i64 }* %_21 to i64*
  %_24 = load i64, i64* %32, align 8, !range !18
  %33 = icmp eq i64 %_24, 1
  br i1 %33, label %bb11, label %bb22

bb11:                                             ; preds = %bb10
  %34 = bitcast { i64, i64 }* %_21 to %"core::option::Option<usize>::Some"*
  %35 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %34, i32 0, i32 1
  %index = load i64, i64* %35, align 8
  %_26 = add i64 %index, 1
  %36 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %37 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, %_26
  store i64 %39, i64* %36, align 8
  %40 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %_29 = load i64, i64* %40, align 8
  %41 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %_30 = load i64, i64* %41, align 8
  %_28 = icmp uge i64 %_29, %_30
  br i1 %_28, label %bb12, label %bb21

bb22:                                             ; preds = %bb10
  %42 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 2
  %_54 = load i64, i64* %42, align 8
  %43 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  store i64 %_54, i64* %43, align 8
  %44 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %44, align 8
  br label %bb23

bb23:                                             ; preds = %bb18, %bb22
  br label %bb24

bb21:                                             ; preds = %bb20, %bb11
  br label %bb1

bb12:                                             ; preds = %bb11
  %45 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %_32 = load i64, i64* %45, align 8
  %46 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %_33 = load i64, i64* %46, align 8
  %found_char = sub i64 %_32, %_33
  %47 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 0
  %_37.0 = load [0 x i8]*, [0 x i8]** %48, align 8, !nonnull !20
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 1
  %_37.1 = load i64, i64* %49, align 8
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_37.0, [0 x i8]** %50, align 8
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %_37.1, i64* %51, align 8
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  %53 = load [0 x i8]*, [0 x i8]** %52, align 8, !nonnull !20
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %53, 0
  %57 = insertvalue { [0 x i8]*, i64 } %56, i64 %55, 1
  %_36.0 = extractvalue { [0 x i8]*, i64 } %57, 0
  %_36.1 = extractvalue { [0 x i8]*, i64 } %57, 1
  br label %bb13

bb13:                                             ; preds = %bb12
  %58 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %_40 = load i64, i64* %58, align 8
  %59 = bitcast { i64, i64 }* %_38 to i64*
  store i64 %found_char, i64* %59, align 8
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_38, i32 0, i32 1
  store i64 %_40, i64* %60, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_38, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_38, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
; call core::slice::<impl [T]>::get
  %65 = call { i8*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hc1defbab80d2d62bE"([0 x i8]* nonnull align 1 %_36.0, i64 %_36.1, i64 %62, i64 %64)
  store { i8*, i64 } %65, { i8*, i64 }* %_34, align 8
  br label %bb14

bb14:                                             ; preds = %bb13
  %66 = bitcast { i8*, i64 }* %_34 to {}**
  %67 = load {}*, {}** %66, align 8
  %68 = icmp eq {}* %67, null
  %_41 = select i1 %68, i64 0, i64 1
  %69 = icmp eq i64 %_41, 1
  br i1 %69, label %bb15, label %bb20

bb15:                                             ; preds = %bb14
  %70 = bitcast { i8*, i64 }* %_34 to { [0 x i8]*, i64 }*
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 0
  %72 = load [0 x i8]*, [0 x i8]** %71, align 8, !nonnull !20
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 0
  store [0 x i8]* %72, [0 x i8]** %75, align 8
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 1
  store i64 %74, i64* %76, align 8
  %_48 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 5
  %77 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %_50 = load i64, i64* %77, align 8
  %78 = bitcast { i64, i64 }* %_49 to i64*
  store i64 0, i64* %78, align 8
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1
  store i64 %_50, i64* %79, align 8
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %84 = call { [0 x i8]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hc4f06f87edaada12E"([4 x i8]* align 1 dereferenceable(4) %_48, i64 %81, i64 %83, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1458 to %"core::panic::location::Location"*))
  %_47.0 = extractvalue { [0 x i8]*, i64 } %84, 0
  %_47.1 = extractvalue { [0 x i8]*, i64 } %84, 1
  br label %bb16

bb20:                                             ; preds = %bb19, %bb14
  br label %bb21

bb16:                                             ; preds = %bb15
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 0
  store [0 x i8]* %_47.0, [0 x i8]** %85, align 8
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 1
  store i64 %_47.1, i64* %86, align 8
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_43 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hb348444d202a4a88E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %slice, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %_46)
  br label %bb17

bb17:                                             ; preds = %bb16
  br i1 %_43, label %bb18, label %bb19

bb19:                                             ; preds = %bb17
  br label %bb20

bb18:                                             ; preds = %bb17
  %87 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %_53 = load i64, i64* %87, align 8
  %88 = bitcast { i64, i64 }* %_51 to i64*
  store i64 %found_char, i64* %88, align 8
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1
  store i64 %_53, i64* %89, align 8
  %90 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*
  %91 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %90, i32 0, i32 1
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %91, i32 0, i32 0
  store i64 %93, i64* %96, align 8
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %91, i32 0, i32 1
  store i64 %95, i64* %97, align 8
  %98 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %98, align 8
  br label %bb23
}

; <&mut I as core::iter::traits::exact_size::ExactSizeIterator>::len
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN83_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hefe28157a3dfb97bE"(%"alloc::vec::into_iter::IntoIter<TokenTree>"** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_2 = load %"alloc::vec::into_iter::IntoIter<TokenTree>"*, %"alloc::vec::into_iter::IntoIter<TokenTree>"** %self, align 8, !nonnull !20
; call core::iter::traits::exact_size::ExactSizeIterator::len
  %0 = call i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17hb089bc151c2e0112E(%"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h01f1ed782db96195E"(%"core::option::Option<TokenTree>"* noalias nocapture sret(%"core::option::Option<TokenTree>") dereferenceable(48) %0) unnamed_addr #0 {
start:
  %1 = bitcast %"core::option::Option<TokenTree>"* %0 to i32*
  store i32 4, i32* %1, align 8
  ret void
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32* } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h04b5d4340821ba2aE"() unnamed_addr #0 {
start:
  %0 = alloca { i64, i32* }, align 8
  %1 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %0, i32 0, i32 1
  %2 = bitcast i32** %1 to {}**
  store {}* null, {}** %2, align 8
  %3 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i32* }, { i64, i32* }* %0, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = insertvalue { i64, i32* } undef, i64 %4, 0
  %8 = insertvalue { i64, i32* } %7, i32* %6, 1
  ret { i64, i32* } %8
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64* } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h4dfb458ba9ead32cE"() unnamed_addr #0 {
start:
  %0 = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  %2 = bitcast i64** %1 to {}**
  store {}* null, {}** %2, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  %6 = load i64*, i64** %5, align 8
  %7 = insertvalue { i64, i64* } undef, i64 %4, 0
  %8 = insertvalue { i64, i64* } %7, i64* %6, 1
  ret { i64, i64* } %8
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h6674b621e735188bE"() unnamed_addr #0 {
start:
  %0 = alloca %"core::option::Option<imp::Span>", align 4
  %1 = bitcast %"core::option::Option<imp::Span>"* %0 to i32*
  store i32 0, i32* %1, align 4
  %2 = bitcast %"core::option::Option<imp::Span>"* %0 to i64*
  %3 = load i64, i64* %2, align 4
  ret i64 %3
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h7ad9dfbd7afe0e07E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %1, align 8
  ret void
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hd0e9f55410d0a8caE"(%"core::option::Option<(usize, u8)>"* noalias nocapture sret(%"core::option::Option<(usize, u8)>") dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = bitcast %"core::option::Option<(usize, u8)>"* %0 to i64*
  store i64 0, i64* %1, align 8
  ret void
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hfd63a3d4886e45c9E"() unnamed_addr #0 {
start:
  %0 = alloca { i32, i32 }, align 4
  %1 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %1, align 4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4, !range !19
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = insertvalue { i32, i32 } undef, i32 %3, 0
  %7 = insertvalue { i32, i32 } %6, i32 %5, 1
  ret { i32, i32 } %7
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h083d0b3a68dd26b2E"() unnamed_addr #0 {
start:
  ret i1 false
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17he49e50b51d22b0a4E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_3 to i64*
  store i64 %a, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %b, i64* %2, align 8
  %3 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  store i64 %8, i64* %10, align 8
  %11 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %11, align 8
  ret void
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h3d6ca41e12acdf94E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, i64 %_a, i64 %_b) unnamed_addr #0 {
start:
  %1 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %1, align 8
  ret void
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN86_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9e7c43139b4bc632E"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %guard = alloca i64*, align 8
  %1 = bitcast i64** %guard to %"alloc::vec::into_iter::IntoIter<TokenTree>"**
  store %"alloc::vec::into_iter::IntoIter<TokenTree>"* %self, %"alloc::vec::into_iter::IntoIter<TokenTree>"** %1, align 8
  %2 = bitcast i64** %guard to %"alloc::vec::into_iter::IntoIter<TokenTree>"**
  %_6 = load %"alloc::vec::into_iter::IntoIter<TokenTree>"*, %"alloc::vec::into_iter::IntoIter<TokenTree>"** %2, align 8, !nonnull !20
; invoke alloc::vec::into_iter::IntoIter<T,A>::as_raw_mut_slice
  %3 = invoke { [0 x %TokenTree]*, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$16as_raw_mut_slice17hee6465027ed5202aE"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %_6)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { [0 x %TokenTree]*, i64 } %3, 0
  %_5.1 = extractvalue { [0 x %TokenTree]*, i64 } %3, 1
; invoke core::ptr::drop_in_place<[proc_macro2::TokenTree]>
  invoke void @"_ZN4core3ptr53drop_in_place$LT$$u5b$proc_macro2..TokenTree$u5d$$GT$17ha228b2f3e6324fd0E"([0 x %TokenTree]* %_5.0, i64 %_5.1)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro2::TokenTree,alloc::alloc::Global>>
  call void @"_ZN4core3ptr176drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro2..TokenTree$C$alloc..alloc..Global$GT$$GT$17h501da02cad3c8d34E"(i64** %guard) #18
  br label %bb5

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<proc_macro2::TokenTree,alloc::alloc::Global>>
  call void @"_ZN4core3ptr176drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$proc_macro2..TokenTree$C$alloc..alloc..Global$GT$$GT$17h501da02cad3c8d34E"(i64** %guard)
  br label %bb3

bb5:                                              ; preds = %bb4
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb3:                                              ; preds = %bb2
  ret void
}

; <core::ops::range::RangeFull as core::ops::range::RangeBounds<T>>::start_bound
; Function Attrs: nonlazybind uwtable
define { i64, i8* } @"_ZN86_$LT$core..ops..range..RangeFull$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17hc7db767ac700b0d0E"(%"core::ops::range::RangeFull"* nonnull align 1 %self) unnamed_addr #1 {
start:
  %0 = alloca { i64, i8* }, align 8
  %1 = bitcast { i64, i8* }* %0 to i64*
  store i64 2, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8, !range !79
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64, i8* } undef, i64 %3, 0
  %7 = insertvalue { i64, i8* } %6, i8* %5, 1
  ret { i64, i8* } %7
}

; <core::ops::range::RangeFull as core::ops::range::RangeBounds<T>>::end_bound
; Function Attrs: nonlazybind uwtable
define { i64, i8* } @"_ZN86_$LT$core..ops..range..RangeFull$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17ha363100487debeeeE"(%"core::ops::range::RangeFull"* nonnull align 1 %self) unnamed_addr #1 {
start:
  %0 = alloca { i64, i8* }, align 8
  %1 = bitcast { i64, i8* }* %0 to i64*
  store i64 2, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8, !range !79
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64, i8* } undef, i64 %3, 0
  %7 = insertvalue { i64, i8* } %6, i8* %5, 1
  ret { i64, i8* } %7
}

; <core::option::Item<A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN86_$LT$core..option..Item$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hef2d74691faeed77E"(%"core::option::Item<proc_macro::TokenStream>"* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  %_2 = bitcast %"core::option::Item<proc_macro::TokenStream>"* %self to %"core::option::Option<proc_macro::TokenStream>"*
; call core::option::Option<T>::take
  %2 = call i32 @"_ZN4core6option15Option$LT$T$GT$4take17hdfc0ad1035f05d5aE"(%"core::option::Option<proc_macro::TokenStream>"* align 4 dereferenceable(4) %_2)
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %1 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %1 to i32*
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %_14 = alloca { i64, i32 }, align 8
  %_4 = alloca i32, align 4
  %4 = alloca { i64, i32 }, align 8
  %_3 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
  %5 = bitcast { i8*, i8* }* %_3 to i8**
  %start1.i1 = load i8*, i8** %5, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i1)
  %6 = icmp eq i64 1, 0
  br i1 %6, label %bb3.i7, label %bb6.i11

bb3.i7:                                           ; preds = %start
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_3, i32 0, i32 1
  %_9.i4 = load i8*, i8** %7, align 8
  %_8.i5 = ptrtoint i8* %_9.i4 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_11.i6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i1)
  %_10.i14 = ptrtoint i8* %_11.i6 to i64
  %8 = sub i64 %_8.i5, %_10.i14
  store i64 %8, i64* %1, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit15"

bb6.i11:                                          ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_3, i32 0, i32 1
  %_15.i8 = load i8*, i8** %9, align 8
  %_14.i9 = ptrtoint i8* %_15.i8 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i10 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i1)
  %_16.i12 = ptrtoint i8* %_17.i10 to i64
  %10 = sub nuw i64 %_14.i9, %_16.i12
  store i64 %10, i64* %0, align 8
  %diff.i13 = load i64, i64* %0, align 8
  %11 = udiv exact i64 %diff.i13, 1
  store i64 %11, i64* %1, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit15"

"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit15": ; preds = %bb6.i11, %bb3.i7
  %12 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit15"
  %_5 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %13 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %_5), !range !22
  store i32 %13, i32* %_4, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %14 = load i32, i32* %_4, align 4, !range !22
  %15 = sub i32 %14, 1114112
  %16 = icmp eq i32 %15, 0
  %_6 = select i1 %16, i64 0, i64 1
  switch i64 %_6, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  store i32 1114112, i32* %17, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  %ch = load i32, i32* %_4, align 4, !range !80
  %18 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %index = load i64, i64* %18, align 8
  %_10 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
  %19 = bitcast { i8*, i8* }* %_10 to i8**
  %start1.i = load i8*, i8** %19, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i)
  %20 = icmp eq i64 1, 0
  br i1 %20, label %bb3.i, label %bb6.i

bb3.i:                                            ; preds = %bb3
  %21 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 1
  %_9.i = load i8*, i8** %21, align 8
  %_8.i = ptrtoint i8* %_9.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_11.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i)
  %_10.i = ptrtoint i8* %_11.i to i64
  %22 = sub i64 %_8.i, %_10.i
  store i64 %22, i64* %3, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit"

bb6.i:                                            ; preds = %bb3
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 1
  %_15.i = load i8*, i8** %23, align 8
  %_14.i = ptrtoint i8* %_15.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i)
  %_16.i = ptrtoint i8* %_17.i to i64
  %24 = sub nuw i64 %_14.i, %_16.i
  store i64 %24, i64* %2, align 8
  %diff.i = load i64, i64* %2, align 8
  %25 = udiv exact i64 %diff.i, 1
  store i64 %25, i64* %3, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit"

"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit": ; preds = %bb6.i, %bb3.i
  %26 = load i64, i64* %3, align 8
  br label %bb6

bb6:                                              ; preds = %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit"
  %_11 = sub i64 %12, %26
  %27 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %28 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, %_11
  store i64 %30, i64* %27, align 8
  %31 = bitcast { i64, i32 }* %_14 to i64*
  store i64 %index, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1
  store i32 %ch, i32* %32, align 8
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1
  %36 = load i32, i32* %35, align 8, !range !80
  %37 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 0
  store i64 %34, i64* %37, align 8
  %38 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  %42 = load i32, i32* %41, align 8, !range !22
  %43 = insertvalue { i64, i32 } undef, i64 %40, 0
  %44 = insertvalue { i64, i32 } %43, i32 %42, 1
  ret { i64, i32 } %44
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hcebc65437f07884dE"(%"alloc::string::String"* align 8 dereferenceable(24) %self, %"core::char::EscapeDebug"* noalias nocapture dereferenceable(24) %iter) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_13 = alloca i64*, align 8
  %_12 = alloca %"core::char::EscapeDebug", align 8
  %_6 = alloca { i64, { i64, i64 } }, align 8
  %_4 = alloca %"core::char::EscapeDebug", align 8
  %iterator = alloca %"core::char::EscapeDebug", align 8
  store i8 0, i8* %_14, align 1
  %1 = bitcast %"core::char::EscapeDebug"* %_4 to i8*
  %2 = bitcast %"core::char::EscapeDebug"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha0beed33966e8aa6E"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %iterator, %"core::char::EscapeDebug"* noalias nocapture dereferenceable(24) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 1, i8* %_14, align 1
; invoke <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h1298e3b9a969e420E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_6, %"core::char::EscapeDebug"* align 8 dereferenceable(24) %iterator)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, { i64, i64 } }* %_6 to i64*
  %lower_bound = load i64, i64* %3, align 8
; invoke alloc::string::String::reserve
  invoke void @_ZN5alloc6string6String7reserve17h11466adf3ced724dE(%"alloc::string::String"* align 8 dereferenceable(24) %self, i64 %lower_bound)
          to label %bb3 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %4 = load i8, i8* %_14, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb6, label %bb5

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  store i8 0, i8* %_14, align 1
  %11 = bitcast %"core::char::EscapeDebug"* %_12 to i8*
  %12 = bitcast %"core::char::EscapeDebug"* %iterator to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  %13 = bitcast i64** %_13 to %"alloc::string::String"**
  store %"alloc::string::String"* %self, %"alloc::string::String"** %13, align 8
  %14 = load i64*, i64** %_13, align 8, !nonnull !20
; invoke core::iter::traits::iterator::Iterator::for_each
  invoke void @_ZN4core4iter6traits8iterator8Iterator8for_each17h517f0ea880e62e58E(%"core::char::EscapeDebug"* noalias nocapture dereferenceable(24) %_12, i64* align 8 dereferenceable(24) %14)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_14, align 1
  ret void

bb5:                                              ; preds = %bb6, %bb7
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb6:                                              ; preds = %bb7
  br label %bb5
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h835f372686f77764E"(i64** align 8 dereferenceable(8) %_1, i32 %c) unnamed_addr #0 {
start:
  %0 = bitcast i64** %_1 to %"alloc::string::String"**
  %_3 = load %"alloc::string::String"*, %"alloc::string::String"** %0, align 8, !nonnull !20
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %_3, i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h112180ad17a6ced4E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h10200a66eeec1a18E"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %2 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %2, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h4d7448d02689a788E"(i64* align 8 dereferenceable(8) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::backward_unchecked
  %_5 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17h7e260d15da15d0d7E"(i64 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb9

bb9:                                              ; preds = %bb4
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %_5, i64* %3, align 8
  %_9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_8 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h4d7448d02689a788E"(i64* align 8 dereferenceable(8) %_9)
  br label %bb5

bb8:                                              ; No predecessors!
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %_5, i64* %4, align 8
  %5 = bitcast { i8*, i32 }* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb5:                                              ; preds = %bb9
  %11 = bitcast { i64, i64 }* %1 to %"core::option::Option<usize>::Some"*
  %12 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %11, i32 0, i32 1
  store i64 %_8, i64* %12, align 8
  %13 = bitcast { i64, i64 }* %1 to i64*
  store i64 1, i64* %13, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8, !range !18
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hf11f59e49dbc7b8cE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h10200a66eeec1a18E"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h4d7448d02689a788E"(i64* align 8 dereferenceable(8) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hcd6bddef854eedd1E"(i64 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17h5e022adce40a4689E(i64* align 8 dereferenceable(8) %_10, i64 %n)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %2, i32 0, i32 1
  store i64 %_8, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %4, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !range !18
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17heae5d38660255b4eE"() unnamed_addr #0 {
start:
  ret i1 true
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17hea0db42388669d73E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %1 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %2 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %1, i32 0, i32 1
  store i64 %a, i64* %2, align 8
  %3 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %4 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %3, i32 0, i32 2
  store i64 %b, i64* %4, align 8
  %5 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 0, i64* %5, align 8
  ret void
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hd5145548859436afE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %1 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %2 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %1, i32 0, i32 1
  store i64 %a, i64* %2, align 8
  %3 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %4 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %3, i32 0, i32 2
  store i64 %b, i64* %4, align 8
  %5 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %5, align 8
  ret void
}

; <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h17c2034c0e9acd21E"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* noalias nocapture sret(%"alloc::vec::into_iter::IntoIter<TokenTree>") dereferenceable(32) %0, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca %TokenTree*, align 8
  %_2.i = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %3 = alloca i8*, align 8
  %4 = alloca { i8*, i32 }, align 8
  %end = alloca %TokenTree*, align 8
  %_3 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %me = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<TokenTree>>", align 8
  %5 = bitcast %"alloc::vec::Vec<TokenTree>"* %_3 to i8*
  %6 = bitcast %"alloc::vec::Vec<TokenTree>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !105)
  call void @llvm.experimental.noalias.scope.decl(metadata !108)
  %7 = bitcast %"alloc::vec::Vec<TokenTree>"* %_2.i to i8*
  %8 = bitcast %"alloc::vec::Vec<TokenTree>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !noalias !105
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<TokenTree>>"* %me to %"alloc::vec::Vec<TokenTree>"*
  %10 = bitcast %"alloc::vec::Vec<TokenTree>"* %9 to i8*
  %11 = bitcast %"alloc::vec::Vec<TokenTree>"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !noalias !108
  br label %bb1

bb1:                                              ; preds = %start
  %12 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<TokenTree>>"* %me to %"alloc::vec::Vec<TokenTree>"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::allocator
  %_6 = call nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h7cce5620753758b1E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %12)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::ptr::read
  call void @_ZN4core3ptr4read17hb8940c633bb47f85E(%"alloc::alloc::Global"* %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_3.i1 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<TokenTree>>"* %me to %"alloc::vec::Vec<TokenTree>"*
  br label %bb5

bb5:                                              ; preds = %bb4
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %begin = invoke %TokenTree* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17haf38022be0a8fd96E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %_3.i1)
          to label %bb6 unwind label %cleanup

bb20:                                             ; preds = %cleanup
  br label %bb21

cleanup:                                          ; preds = %bb18, %bb9, %bb13, %bb5
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb20

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6
  %18 = icmp eq i64 48, 0
  br i1 %18, label %bb8, label %bb12

bb8:                                              ; preds = %bb7
  %_17 = bitcast %TokenTree* %begin to i8*
  %19 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<TokenTree>>"* %me to %"alloc::vec::Vec<TokenTree>"*
  br label %bb9

bb12:                                             ; preds = %bb7
  %20 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<TokenTree>>"* %me to %"alloc::vec::Vec<TokenTree>"*
  br label %bb13

bb13:                                             ; preds = %bb12
; invoke alloc::vec::Vec<T,A>::len
  %_26 = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h99027def3e7bafd0E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %20)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %21 = getelementptr inbounds %TokenTree, %TokenTree* %begin, i64 %_26
  store %TokenTree* %21, %TokenTree** %2, align 8
  %_3.i = load %TokenTree*, %TokenTree** %2, align 8
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17he00aba794f4de07aE.exit"

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17he00aba794f4de07aE.exit": ; preds = %bb14
  br label %bb15

bb15:                                             ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17he00aba794f4de07aE.exit"
  store %TokenTree* %_3.i, %TokenTree** %end, align 8
  br label %bb16

bb16:                                             ; preds = %bb11, %bb15
  %22 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<TokenTree>>"* %me to %"alloc::vec::Vec<TokenTree>"*
  br label %bb17

bb9:                                              ; preds = %bb8
; invoke alloc::vec::Vec<T,A>::len
  %_20 = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h99027def3e7bafd0E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %19)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %23 = getelementptr i8, i8* %_17, i64 %_20
  store i8* %23, i8** %3, align 8
  %_16 = load i8*, i8** %3, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  %24 = bitcast i8* %_16 to %TokenTree*
  store %TokenTree* %24, %TokenTree** %end, align 8
  br label %bb16

bb17:                                             ; preds = %bb16
  %_31 = bitcast %"alloc::vec::Vec<TokenTree>"* %22 to { i64*, i64 }*
  %25 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_31, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %1, align 8
  %27 = load i64, i64* %1, align 8
  br label %bb18

bb18:                                             ; preds = %bb17
; invoke core::ptr::non_null::NonNull<T>::new_unchecked
  %_34 = invoke nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1c8bb6e5f9b44612E"(%TokenTree* %begin)
          to label %bb19 unwind label %cleanup

bb19:                                             ; preds = %bb18
  %_40 = load %TokenTree*, %TokenTree** %end, align 8
  %28 = bitcast %"alloc::vec::into_iter::IntoIter<TokenTree>"* %0 to i64**
  store i64* %_34, i64** %28, align 8
  %29 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %0, i32 0, i32 3
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"alloc::vec::into_iter::IntoIter<TokenTree>"* %0 to %"alloc::alloc::Global"*
  %31 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %0, i32 0, i32 4
  store %TokenTree* %begin, %TokenTree** %31, align 8
  %32 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<TokenTree>", %"alloc::vec::into_iter::IntoIter<TokenTree>"* %0, i32 0, i32 5
  store %TokenTree* %_40, %TokenTree** %32, align 8
  ret void

bb21:                                             ; preds = %bb20
  %33 = bitcast { i8*, i32 }* %4 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38
}

; <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h85e5bdb20f909e5bE"(i8* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %other) unnamed_addr #0 {
start:
  %_13 = alloca { i8*, i8* }, align 8
  %0 = alloca i8, align 1
  %1 = load i8, i8* %self, align 1, !range !2
  %2 = trunc i8 %1 to i1
  %__self_vi = zext i1 %2 to i64
  %3 = load i8, i8* %other, align 1, !range !2
  %4 = trunc i8 %3 to i1
  %__arg_1_vi = zext i1 %4 to i64
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb10

bb10:                                             ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb11

bb1:                                              ; preds = %start
  %5 = bitcast { i8*, i8* }* %_13 to i8**
  store i8* %self, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1
  store i8* %other, i8** %6, align 8
  %7 = bitcast { i8*, i8* }* %_13 to i8**
  %8 = load i8*, i8** %7, align 8, !nonnull !20
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = trunc i8 %9 to i1
  %_18 = zext i1 %10 to i64
  switch i64 %_18, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb2, %bb4, %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1
  %12 = load i8*, i8** %11, align 8, !nonnull !20
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = trunc i8 %13 to i1
  %_16 = zext i1 %14 to i64
  %15 = icmp eq i64 %_16, 0
  br i1 %15, label %bb5, label %bb3

bb4:                                              ; preds = %bb1
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1
  %17 = load i8*, i8** %16, align 8, !nonnull !20
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = trunc i8 %18 to i1
  %_17 = zext i1 %19 to i64
  %20 = icmp eq i64 %_17, 1
  br i1 %20, label %bb7, label %bb3

bb7:                                              ; preds = %bb4
  %21 = bitcast { i8*, i8* }* %_13 to i8**
  %22 = load i8*, i8** %21, align 8, !nonnull !20
  %23 = bitcast i8* %22 to %"core::ops::control_flow::ControlFlow<()>::Break"*
  %__self_0 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<()>::Break", %"core::ops::control_flow::ControlFlow<()>::Break"* %23, i32 0, i32 1
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1
  %25 = load i8*, i8** %24, align 8, !nonnull !20
  %26 = bitcast i8* %25 to %"core::ops::control_flow::ControlFlow<()>::Break"*
  %__arg_1_0 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<()>::Break", %"core::ops::control_flow::ControlFlow<()>::Break"* %26, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %27 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17hf950d59200eae44bE"({}* nonnull align 1 %__self_0, {}* nonnull align 1 %__arg_1_0)
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
  br label %bb11

bb5:                                              ; preds = %bb2
  %29 = bitcast { i8*, i8* }* %_13 to i8**
  %30 = load i8*, i8** %29, align 8, !nonnull !20
  %31 = bitcast i8* %30 to %"core::ops::control_flow::ControlFlow<()>::Continue"*
  %__self_01 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<()>::Continue", %"core::ops::control_flow::ControlFlow<()>::Continue"* %31, i32 0, i32 1
  %32 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1
  %33 = load i8*, i8** %32, align 8, !nonnull !20
  %34 = bitcast i8* %33 to %"core::ops::control_flow::ControlFlow<()>::Continue"*
  %__arg_1_02 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<()>::Continue", %"core::ops::control_flow::ControlFlow<()>::Continue"* %34, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %35 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17hf950d59200eae44bE"({}* nonnull align 1 %__self_01, {}* nonnull align 1 %__arg_1_02)
  %36 = zext i1 %35 to i8
  store i8 %36, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb9

bb11:                                             ; preds = %bb10, %bb9
  %37 = load i8, i8* %0, align 1, !range !2
  %38 = trunc i8 %37 to i1
  ret i1 %38
}

; <core::option::IntoIter<A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN90_$LT$core..option..IntoIter$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hdc2e763b1950debeE"(%"core::option::IntoIter<proc_macro::TokenStream>"* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  %_2 = bitcast %"core::option::IntoIter<proc_macro::TokenStream>"* %self to %"core::option::Item<proc_macro::TokenStream>"*
; call <core::option::Item<A> as core::iter::traits::iterator::Iterator>::next
  %2 = call i32 @"_ZN86_$LT$core..option..Item$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hef2d74691faeed77E"(%"core::option::Item<proc_macro::TokenStream>"* align 4 dereferenceable(4) %_2)
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %1 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %1 to i32*
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; <core::option::Option<T> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN91_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb359ab37ea35cc24E"(i32 %0) unnamed_addr #0 {
start:
  %_3 = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  %_2 = alloca %"core::option::Item<proc_macro::TokenStream>", align 4
  %1 = alloca %"core::option::IntoIter<proc_macro::TokenStream>", align 4
  %2 = alloca i32, align 4
  %self = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  store i32 %0, i32* %2, align 4
  %3 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %self to i8*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %5 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %_3 to i8*
  %6 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  %7 = bitcast %"core::option::Item<proc_macro::TokenStream>"* %_2 to %"core::option::Option<proc_macro::TokenStream>"*
  %8 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %7 to i8*
  %9 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 4, i1 false)
  %10 = bitcast %"core::option::IntoIter<proc_macro::TokenStream>"* %1 to %"core::option::Item<proc_macro::TokenStream>"*
  %11 = bitcast %"core::option::Item<proc_macro::TokenStream>"* %10 to i8*
  %12 = bitcast %"core::option::Item<proc_macro::TokenStream>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  %13 = bitcast %"core::option::IntoIter<proc_macro::TokenStream>"* %1 to i32*
  %14 = load i32, i32* %13, align 4
  ret i32 %14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hc77fc040b5603a94E"({ i64*, i64* }* align 8 dereferenceable(16) %self, i64* align 8 dereferenceable(16) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_9 = alloca i64*, align 8
  %_3 = alloca i64*, align 8
  %2 = alloca i8, align 1
  %f = alloca i64*, align 8
  store i64* %0, i64** %f, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke align 8 dereferenceable_or_null(16) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6fd5833d1ac91308E"({ i64*, i64* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i64* %3, i64** %_3, align 8
  %4 = bitcast i64** %_3 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_5 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_5, 1
  br i1 %7, label %bb3, label %bb7

bb9:                                              ; preds = %cleanup
  br label %bb10

cleanup:                                          ; preds = %bb3, %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb9

bb3:                                              ; preds = %bb2
  %13 = bitcast i64** %_3 to { [0 x i8]*, i64 }**
  %x = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %13, align 8, !nonnull !20
  %14 = bitcast i64** %_9 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %14, align 8
  %15 = load i64*, i64** %_9, align 8, !nonnull !20
  %16 = bitcast i64* %15 to { [0 x i8]*, i64 }*
; invoke proc_macro2::parse::ident::{{closure}}
  %_7 = invoke zeroext i1 @"_ZN11proc_macro25parse5ident28_$u7b$$u7b$closure$u7d$$u7d$17h46f2c6595477ff7eE"(i64** align 8 dereferenceable(8) %f, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %16)
          to label %bb4 unwind label %cleanup

bb7:                                              ; preds = %bb2
  store i8 0, i8* %2, align 1
  br label %bb8

bb8:                                              ; preds = %bb5, %bb7
  %17 = load i8, i8* %2, align 1, !range !2
  %18 = trunc i8 %17 to i1
  ret i1 %18

bb4:                                              ; preds = %bb3
  br i1 %_7, label %bb5, label %bb6

bb10:                                             ; preds = %bb9
  %19 = bitcast { i8*, i32 }* %1 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

bb6:                                              ; preds = %bb4
  br label %bb1

bb5:                                              ; preds = %bb4
  store i8 1, i8* %2, align 1
  br label %bb8
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6c4bacd36189c2a1E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = bitcast { i8*, i8* }* %self to i8**
  %_6 = load i8*, i8** %3, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17haaf0b225da85ab5dE"(i8* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 1, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_11 = load i8*, i8** %5, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha17824b829e247faE"(i8* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i8*, i8* }* %self to i8**
  %_15 = load i8*, i8** %6, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_16 = load i8*, i8** %7, align 8
  %_12 = icmp eq i8* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %8 = bitcast { i8*, i8* }* %self to i8**
  %_12.i = load i8*, i8** %8, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %_12.i)
  %9 = bitcast { i8*, i8* }* %self to i8**
  %_16.i = load i8*, i8** %9, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %_16.i)
  %10 = getelementptr inbounds i8, i8* %_15.i, i64 1
  store i8* %10, i8** %0, align 8
  %_3.i.i = load i8*, i8** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h533c702b08329719E"(i8* %_3.i.i)
  %11 = bitcast { i8*, i8* }* %self to i8**
  store i8* %_13.i, i8** %11, align 8
  store i8* %old.i, i8** %1, align 8
  %12 = load i8*, i8** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %13 = bitcast i8** %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i8*, i8** %2, align 8
  ret i8* %14

bb13:                                             ; preds = %bb12
  store i8* %12, i8** %2, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6fd5833d1ac91308E"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca { [0 x i8]*, i64 }*, align 8
  %2 = alloca i64*, align 8
  %3 = bitcast { i64*, i64* }* %self to i64**
  %_6 = load i64*, i64** %3, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9e78fc77ba98f504E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h8d6f546585bcf643E"({ [0 x i8]*, i64 }* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 16, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %6 = bitcast i64** %5 to { [0 x i8]*, i64 }**
  %_11 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h71639994d106fa68E"({ [0 x i8]*, i64 }* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %7 = bitcast { i64*, i64* }* %self to i64**
  %_15 = load i64*, i64** %7, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9e78fc77ba98f504E"(i64* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %9 = bitcast i64** %8 to { [0 x i8]*, i64 }**
  %_16 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %9, align 8
  %_12 = icmp eq { [0 x i8]*, i64 }* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %10 = bitcast { i64*, i64* }* %self to i64**
  %_12.i = load i64*, i64** %10, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9e78fc77ba98f504E"(i64* nonnull %_12.i)
  %11 = bitcast { i64*, i64* }* %self to i64**
  %_16.i = load i64*, i64** %11, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9e78fc77ba98f504E"(i64* nonnull %_16.i)
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_15.i, i64 1
  store { [0 x i8]*, i64 }* %12, { [0 x i8]*, i64 }** %0, align 8
  %_3.i.i = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc7780c779fcada6aE"({ [0 x i8]*, i64 }* %_3.i.i)
  %13 = bitcast { i64*, i64* }* %self to i64**
  store i64* %_13.i, i64** %13, align 8
  store { [0 x i8]*, i64 }* %old.i, { [0 x i8]*, i64 }** %1, align 8
  %14 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %15 = bitcast i64** %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %16 = load i64*, i64** %2, align 8
  ret i64* %16

bb13:                                             ; preds = %bb12
  %17 = bitcast i64** %2 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %14, { [0 x i8]*, i64 }** %17, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(48) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf5eabe0f99f89e17E"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca %TokenTree*, align 8
  %1 = alloca %TokenTree*, align 8
  %2 = alloca i64*, align 8
  %3 = bitcast { i64*, i64* }* %self to i64**
  %_6 = load i64*, i64** %3, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %TokenTree* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he4fe09edffbb8032E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hdac48138c0f4bcfaE"(%TokenTree* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 48, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %6 = bitcast i64** %5 to %TokenTree**
  %_11 = load %TokenTree*, %TokenTree** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h258514ed74eefc35E"(%TokenTree* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %7 = bitcast { i64*, i64* }* %self to i64**
  %_15 = load i64*, i64** %7, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call %TokenTree* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he4fe09edffbb8032E"(i64* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %9 = bitcast i64** %8 to %TokenTree**
  %_16 = load %TokenTree*, %TokenTree** %9, align 8
  %_12 = icmp eq %TokenTree* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %10 = bitcast { i64*, i64* }* %self to i64**
  %_12.i = load i64*, i64** %10, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call %TokenTree* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he4fe09edffbb8032E"(i64* nonnull %_12.i)
  %11 = bitcast { i64*, i64* }* %self to i64**
  %_16.i = load i64*, i64** %11, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call %TokenTree* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he4fe09edffbb8032E"(i64* nonnull %_16.i)
  %12 = getelementptr inbounds %TokenTree, %TokenTree* %_15.i, i64 1
  store %TokenTree* %12, %TokenTree** %0, align 8
  %_3.i.i = load %TokenTree*, %TokenTree** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1c8bb6e5f9b44612E"(%TokenTree* %_3.i.i)
  %13 = bitcast { i64*, i64* }* %self to i64**
  store i64* %_13.i, i64** %13, align 8
  store %TokenTree* %old.i, %TokenTree** %1, align 8
  %14 = load %TokenTree*, %TokenTree** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %15 = bitcast i64** %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %16 = load i64*, i64** %2, align 8
  ret i64* %16

bb13:                                             ; preds = %bb12
  %17 = bitcast i64** %2 to %TokenTree**
  store %TokenTree* %14, %TokenTree** %17, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(8) i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf92aeb8cb5b0df9dE"({ i32*, i32* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca %"proc_macro::TokenTree"*, align 8
  %1 = alloca %"proc_macro::TokenTree"*, align 8
  %2 = alloca i32*, align 8
  %3 = bitcast { i32*, i32* }* %self to i32**
  %_6 = load i32*, i32** %3, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"proc_macro::TokenTree"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6b211d9fbe8eae44E"(i32* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0cb6a7c5c268c72fE"(%"proc_macro::TokenTree"* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 8, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %6 = bitcast i32** %5 to %"proc_macro::TokenTree"**
  %_11 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h53d54fb9d61d12c9E"(%"proc_macro::TokenTree"* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %7 = bitcast { i32*, i32* }* %self to i32**
  %_15 = load i32*, i32** %7, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call %"proc_macro::TokenTree"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6b211d9fbe8eae44E"(i32* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %8 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %9 = bitcast i32** %8 to %"proc_macro::TokenTree"**
  %_16 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %9, align 8
  %_12 = icmp eq %"proc_macro::TokenTree"* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %10 = bitcast { i32*, i32* }* %self to i32**
  %_12.i = load i32*, i32** %10, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call %"proc_macro::TokenTree"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6b211d9fbe8eae44E"(i32* nonnull %_12.i)
  %11 = bitcast { i32*, i32* }* %self to i32**
  %_16.i = load i32*, i32** %11, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call %"proc_macro::TokenTree"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6b211d9fbe8eae44E"(i32* nonnull %_16.i)
  %12 = getelementptr inbounds %"proc_macro::TokenTree", %"proc_macro::TokenTree"* %_15.i, i64 1
  store %"proc_macro::TokenTree"* %12, %"proc_macro::TokenTree"** %0, align 8
  %_3.i.i = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5b8055f2025b575E"(%"proc_macro::TokenTree"* %_3.i.i)
  %13 = bitcast { i32*, i32* }* %self to i32**
  store i32* %_13.i, i32** %13, align 8
  store %"proc_macro::TokenTree"* %old.i, %"proc_macro::TokenTree"** %1, align 8
  %14 = load %"proc_macro::TokenTree"*, %"proc_macro::TokenTree"** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %15 = bitcast i32** %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %16 = load i32*, i32** %2, align 8
  ret i32* %16

bb13:                                             ; preds = %bb12
  %17 = bitcast i32** %2 to %"proc_macro::TokenTree"**
  store %"proc_macro::TokenTree"* %14, %"proc_macro::TokenTree"** %17, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17haac7b45b548faa86E"({ i8*, i8* }* align 8 dereferenceable(16) %self, i8* align 1 dereferenceable(1) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_30 = alloca i8*, align 8
  %_24 = alloca i8*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %3 = alloca { i64, i64 }, align 8
  %predicate = alloca i8*, align 8
  store i8* %0, i8** %predicate, align 8
  %4 = bitcast { i8*, i8* }* %self to i8**
  %start1 = load i8*, i8** %4, align 8, !nonnull !20
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_7 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  br label %bb2

bb21:                                             ; preds = %cleanup
  br label %bb22

cleanup:                                          ; preds = %panic, %bb13, %bb11, %bb3, %bb6, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb21

bb2:                                              ; preds = %bb1
  %10 = icmp eq i64 1, 0
  br i1 %10, label %bb3, label %bb6

bb3:                                              ; preds = %bb2
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_11 = load i8*, i8** %11, align 8
  %_10 = ptrtoint i8* %_11 to i64
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_13 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1)
          to label %bb4 unwind label %cleanup

bb6:                                              ; preds = %bb2
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_17 = load i8*, i8** %12, align 8
  %_16 = ptrtoint i8* %_17 to i64
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_19 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %_18 = ptrtoint i8* %_19 to i64
  %13 = sub nuw i64 %_16, %_18
  store i64 %13, i64* %1, align 8
  %diff = load i64, i64* %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %14 = udiv exact i64 %diff, 1
  store i64 %14, i64* %n, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb10

bb10:                                             ; preds = %bb5, %bb9
  store i64 0, i64* %i, align 8
  br label %bb11

bb4:                                              ; preds = %bb3
  %_12 = ptrtoint i8* %_13 to i64
  %15 = sub i64 %_10, %_12
  br label %bb5

bb5:                                              ; preds = %bb4
  store i64 %15, i64* %n, align 8
  br label %bb10

bb11:                                             ; preds = %bb18, %bb10
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %16 = invoke align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6c4bacd36189c2a1E"({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  store i8* %16, i8** %_24, align 8
  %17 = bitcast i8** %_24 to {}**
  %18 = load {}*, {}** %17, align 8
  %19 = icmp eq {}* %18, null
  %_26 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_26, 1
  br i1 %20, label %bb13, label %bb19

bb13:                                             ; preds = %bb12
  %x = load i8*, i8** %_24, align 8, !nonnull !20
  store i8* %x, i8** %_30, align 8
  %21 = load i8*, i8** %_30, align 8, !nonnull !20
; invoke core::slice::memchr::memchr::{{closure}}
  %_28 = invoke zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17hb6d131f054b2881bE"(i8** align 8 dereferenceable(8) %predicate, i8* align 1 dereferenceable(1) %21)
          to label %bb14 unwind label %cleanup

bb19:                                             ; preds = %bb12
  %22 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %22, align 8
  br label %bb20

bb20:                                             ; preds = %bb16, %bb19
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %24 = load i64, i64* %23, align 8, !range !18
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = insertvalue { i64, i64 } undef, i64 %24, 0
  %28 = insertvalue { i64, i64 } %27, i64 %26, 1
  ret { i64, i64 } %28

bb14:                                             ; preds = %bb13
  br i1 %_28, label %bb15, label %bb17

bb17:                                             ; preds = %bb14
  %29 = load i64, i64* %i, align 8
  %30 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %29, i64 1)
  %_37.0 = extractvalue { i64, i1 } %30, 0
  %_37.1 = extractvalue { i64, i1 } %30, 1
  %31 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false)
  br i1 %31, label %panic, label %bb18

bb15:                                             ; preds = %bb14
  %_34 = load i64, i64* %i, align 8
  %_35 = load i64, i64* %n, align 8
  %_33 = icmp ult i64 %_34, %_35
  call void @llvm.assume(i1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
  %_36 = load i64, i64* %i, align 8
  %32 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %33 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %32, i32 0, i32 1
  store i64 %_36, i64* %33, align 8
  %34 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %34, align 8
  br label %bb20

bb18:                                             ; preds = %bb17
  store i64 %_37.0, i64* %i, align 8
  br label %bb11

panic:                                            ; preds = %bb17
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1460 to %"core::panic::location::Location"*)) #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb22:                                             ; preds = %bb21
  %35 = bitcast { i8*, i32 }* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get
; Function Attrs: nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17hc8e3b38eb97eed2bE"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_6 = select i1 %2, i64 0, i64 1
  switch i64 %_6, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call std::process::abort
  call void @_ZN3std7process5abort17h2f11b1d32ad057eaE() #19
  unreachable

bb3:                                              ; preds = %start
  %a = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %_5.0 = bitcast { [0 x i8]*, i64 }* %a to {}*
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.d to [3 x i64]*), 1
  ret { {}*, [3 x i64]* } %4
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box
; Function Attrs: nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17hc0187bfefdc2f72aE"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_4 = alloca { i8*, i64 }, align 8
  %data = alloca { {}*, [3 x i64]* }, align 8
  store i8 0, i8* %_14, align 1
; call core::option::Option<T>::take
  %2 = call { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17he747dfbf88bd4b83E"({ i8*, i64 }* align 8 dereferenceable(16) %self)
  store { i8*, i64 } %2, { i8*, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast { i8*, i64 }* %_4 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_6 = select i1 %5, i64 0, i64 1
  switch i64 %_6, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
; call std::process::abort
  call void @_ZN3std7process5abort17h2f11b1d32ad057eaE() #19
  unreachable

bb4:                                              ; preds = %bb1
  %6 = bitcast { i8*, i64 }* %_4 to { [0 x i8]*, i64 }*
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 0
  %a.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !20
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 1
  %a.1 = load i64, i64* %8, align 8
; invoke alloc::alloc::exchange_malloc
  %_4.i = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h9a27f765b757f92fE(i64 16, i64 8)
          to label %"_ZN5alloc5boxed12Box$LT$T$GT$3new17h655dcbfb4be435dfE.exit" unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb4
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

"_ZN5alloc5boxed12Box$LT$T$GT$3new17h655dcbfb4be435dfE.exit": ; preds = %bb4
  %20 = bitcast i8* %_4.i to { [0 x i8]*, i64 }*
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0
  store [0 x i8]* %a.0, [0 x i8]** %21, align 8
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1
  store i64 %a.1, i64* %22, align 8
  br label %bb5

bb5:                                              ; preds = %"_ZN5alloc5boxed12Box$LT$T$GT$3new17h655dcbfb4be435dfE.exit"
  %23 = bitcast { [0 x i8]*, i64 }* %20 to {}*
  %24 = bitcast {}* %23 to i8*
  %_8.0 = bitcast i8* %24 to {}*
  store i8 1, i8* %_14, align 1
  %25 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0
  store {}* %_8.0, {}** %25, align 8
  %26 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1
  store [3 x i64]* bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.d to [3 x i64]*), [3 x i64]** %26, align 8
  store i8 0, i8* %_14, align 1
  %27 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0
  %_13.0 = load {}*, {}** %27, align 8, !nonnull !20
  %28 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1
  %_13.1 = load [3 x i64]*, [3 x i64]** %28, align 8, !nonnull !20
; invoke alloc::boxed::Box<T,A>::into_raw
  %29 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h93feb4abd88f6d66E"({}* noalias nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) %_13.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_11.0 = extractvalue { {}*, [3 x i64]* } %29, 0
  %_11.1 = extractvalue { {}*, [3 x i64]* } %29, 1
  store i8 0, i8* %_14, align 1
  %30 = insertvalue { {}*, [3 x i64]* } undef, {}* %_11.0, 0
  %31 = insertvalue { {}*, [3 x i64]* } %30, [3 x i64]* %_11.1, 1
  ret { {}*, [3 x i64]* } %31

bb7:                                              ; preds = %cleanup
  %32 = load i8, i8* %_14, align 1, !range !2
  %33 = trunc i8 %32 to i1
  br i1 %33, label %bb9, label %bb8

cleanup:                                          ; preds = %bb5
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  %39 = bitcast { i8*, i32 }* %1 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = insertvalue { i8*, i32 } undef, i8* %40, 0
  %44 = insertvalue { i8*, i32 } %43, i32 %42, 1
  resume { i8*, i32 } %44

bb9:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h857be11e154f62f4E"({ {}*, [3 x i64]* }* %data) #18
  br label %bb8
}

; <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN93_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$T$GT$$GT$6extend17h460c1a988d14b96bE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %iter) unnamed_addr #0 {
start:
  %_5 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %_4 = alloca %"alloc::vec::into_iter::IntoIter<TokenTree>", align 8
  %0 = bitcast %"alloc::vec::Vec<TokenTree>"* %_5 to i8*
  %1 = bitcast %"alloc::vec::Vec<TokenTree>"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h17c2034c0e9acd21E"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* noalias nocapture sret(%"alloc::vec::into_iter::IntoIter<TokenTree>") dereferenceable(32) %_4, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,alloc::vec::into_iter::IntoIter<T>>>::spec_extend
  call void @"_ZN136_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$alloc..vec..into_iter..IntoIter$LT$T$GT$$GT$$GT$11spec_extend17hedbb1958a72d260aE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %self, %"alloc::vec::into_iter::IntoIter<TokenTree>"* noalias nocapture dereferenceable(32) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(48) i64* @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h318eff402406019fE"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca %TokenTree*, align 8
  %1 = alloca %TokenTree*, align 8
  %2 = alloca i64*, align 8
  %3 = bitcast { i64*, i64* }* %self to i64**
  %_6 = load i64*, i64** %3, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %TokenTree* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he4fe09edffbb8032E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hdac48138c0f4bcfaE"(%TokenTree* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 48, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %6 = bitcast i64** %5 to %TokenTree**
  %_11 = load %TokenTree*, %TokenTree** %6, align 8
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hdac48138c0f4bcfaE"(%TokenTree* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %7 = bitcast { i64*, i64* }* %self to i64**
  %_15 = load i64*, i64** %7, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call %TokenTree* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he4fe09edffbb8032E"(i64* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %9 = bitcast i64** %8 to %TokenTree**
  %_17 = load %TokenTree*, %TokenTree** %9, align 8
  %_12 = icmp eq %TokenTree* %_14, %_17
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %10 = bitcast { i64*, i64* }* %self to i64**
  %_11.i = load i64*, i64** %10, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call %TokenTree* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he4fe09edffbb8032E"(i64* nonnull %_11.i)
  %11 = bitcast { i64*, i64* }* %self to i64**
  %_15.i = load i64*, i64** %11, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14.i = call %TokenTree* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he4fe09edffbb8032E"(i64* nonnull %_15.i)
  %12 = getelementptr inbounds %TokenTree, %TokenTree* %_14.i, i64 1
  store %TokenTree* %12, %TokenTree** %0, align 8
  %_3.i1.i = load %TokenTree*, %TokenTree** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_12.i = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1c8bb6e5f9b44612E"(%TokenTree* %_3.i1.i)
  %13 = bitcast { i64*, i64* }* %self to i64**
  store i64* %_12.i, i64** %13, align 8
  store %TokenTree* %old.i, %TokenTree** %1, align 8
  %14 = load %TokenTree*, %TokenTree** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %15 = bitcast i64** %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %16 = load i64*, i64** %2, align 8
  ret i64* %16

bb13:                                             ; preds = %bb12
  %17 = bitcast i64** %2 to %TokenTree**
  store %TokenTree* %14, %TokenTree** %17, align 8
  br label %bb14
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hf961b8663e646f07E"() unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast i8* %0 to %"core::ops::control_flow::ControlFlow<()>::Continue"*
  %2 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<()>::Continue", %"core::ops::control_flow::ControlFlow<()>::Continue"* %1, i32 0, i32 1
  store i8 0, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd995fa570b1ca111E"(i1 zeroext %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break", align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %self, align 1
  %3 = load i8, i8* %self, align 1, !range !2
  %4 = trunc i8 %3 to i1
  %_2 = zext i1 %4 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Continue", %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Continue"* %5, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break"* %_6 to {}*
  %8 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Break"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Break", %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Break"* %8, i32 0, i32 1
  store i8 1, i8* %1, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %10 = load i8, i8* %1, align 1, !range !2
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

; <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h77f5f1ac0290e563E"({}* nonnull align 1 %reference.0, [3 x i64]* align 8 dereferenceable(24) %reference.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64* }, align 8
  %1 = bitcast { i8*, i64* }* %0 to { {}*, [3 x i64]* }*
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 0
  store {}* %reference.0, {}** %2, align 8
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 1
  store [3 x i64]* %reference.1, [3 x i64]** %3, align 8
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !20
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !20
  %8 = insertvalue { i8*, i64* } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64* } %8, i64* %7, 1
  ret { i8*, i64* } %9
}

; <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64 } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h856550f8c3b0efdcE"([0 x %TokenTree]* nonnull align 8 %reference.0, i64 %reference.1) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i64 }, align 8
  %1 = bitcast { i64*, i64 }* %0 to { [0 x %TokenTree]*, i64 }*
  %2 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %1, i32 0, i32 0
  store [0 x %TokenTree]* %reference.0, [0 x %TokenTree]** %2, align 8
  %3 = getelementptr inbounds { [0 x %TokenTree]*, i64 }, { [0 x %TokenTree]*, i64 }* %1, i32 0, i32 1
  store i64 %reference.1, i64* %3, align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !20
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64*, i64 } undef, i64* %5, 0
  %9 = insertvalue { i64*, i64 } %8, i64 %7, 1
  ret { i64*, i64 } %9
}

; <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17he3774d64a88f24abE"(%"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>"* noalias nocapture sret(%"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_5 = alloca %"core::str::iter::CharIndices", align 8
; invoke core::str::<impl str>::char_indices
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hcbe81db3a34466e5E"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %_5, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]"*
  %3 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>"* %0 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %haystack.1, i64* %5, align 8
  %6 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>", %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>"* %0, i32 0, i32 2
  %7 = bitcast %"core::str::iter::CharIndices"* %6 to i8*
  %8 = bitcast %"core::str::iter::CharIndices"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  ret void

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %14 = bitcast { i8*, i32 }* %1 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19
}

; <alloc::vec::drain::Drain<T,A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN96_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8a3915dbdf075b7eE"(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca %"core::option::Option<proc_macro::TokenTree>", align 4
  %_3 = getelementptr inbounds %"alloc::vec::drain::Drain<proc_macro::TokenTree>", %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* %self, i32 0, i32 2
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 4 dereferenceable_or_null(8) i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf92aeb8cb5b0df9dE"({ i32*, i32* }* align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::map
  %2 = call i64 @"_ZN4core6option15Option$LT$T$GT$3map17h75258a3e381e8136E"(i32* align 4 dereferenceable_or_null(8) %_2)
  store i64 %2, i64* %0, align 8
  %3 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %1 to i8*
  %4 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %1 to i64*
  %6 = load i64, i64* %5, align 4
  ret i64 %6
}

; <alloc::vec::drain::Drain<T,A> as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN96_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h9cdc34aad590a717E"(%"proc_macro::TokenTree"* align 4 dereferenceable(8) %elt) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca %"proc_macro::TokenTree", align 4
; call core::ptr::read
  %2 = call i64 @_ZN4core3ptr4read17h6a2997a46829b4b5E(%"proc_macro::TokenTree"* %elt)
  store i64 %2, i64* %0, align 8
  %3 = bitcast %"proc_macro::TokenTree"* %1 to i8*
  %4 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"proc_macro::TokenTree"* %1 to i64*
  %6 = load i64, i64* %5, align 4
  ret i64 %6
}

; <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb23caedbae4abdf6E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %slice.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %slice.1, 1
  ret { [0 x i8]*, i64 } %2
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h47e5bb2cf68980b2E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %_5 = alloca { i64, i32 }, align 8
  %s = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>", %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>"* %self, i32 0, i32 2
  %_4 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1
  %5 = bitcast { i8*, i8* }* %_4 to i8**
  %start1.i1 = load i8*, i8** %5, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i1)
  %6 = icmp eq i64 1, 0
  br i1 %6, label %bb3.i7, label %bb6.i11

bb3.i7:                                           ; preds = %start
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_4, i32 0, i32 1
  %_9.i4 = load i8*, i8** %7, align 8
  %_8.i5 = ptrtoint i8* %_9.i4 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_11.i6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i1)
  %_10.i14 = ptrtoint i8* %_11.i6 to i64
  %8 = sub i64 %_8.i5, %_10.i14
  store i64 %8, i64* %2, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit15"

bb6.i11:                                          ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_4, i32 0, i32 1
  %_15.i8 = load i8*, i8** %9, align 8
  %_14.i9 = ptrtoint i8* %_15.i8 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i10 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i1)
  %_16.i12 = ptrtoint i8* %_17.i10 to i64
  %10 = sub nuw i64 %_14.i9, %_16.i12
  store i64 %10, i64* %1, align 8
  %diff.i13 = load i64, i64* %1, align 8
  %11 = udiv exact i64 %diff.i13, 1
  store i64 %11, i64* %2, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit15"

"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit15": ; preds = %bb6.i11, %bb3.i7
  %12 = load i64, i64* %2, align 8
  br label %bb1

bb1:                                              ; preds = %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit15"
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %13 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %s)
  store { i64, i32 } %13, { i64, i32 }* %_5, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %14 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1
  %15 = load i32, i32* %14, align 8, !range !22
  %16 = sub i32 %15, 1114112
  %17 = icmp eq i32 %16, 0
  %_7 = select i1 %17, i64 0, i64 1
  %18 = icmp eq i64 %_7, 1
  br i1 %18, label %bb3, label %bb8

bb3:                                              ; preds = %bb2
  %19 = bitcast { i64, i32 }* %_5 to i64*
  %i = load i64, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1
  %c = load i32, i32* %20, align 8, !range !80
  %_11 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1
  %21 = bitcast { i8*, i8* }* %_11 to i8**
  %start1.i = load i8*, i8** %21, align 8, !nonnull !20
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i)
  %22 = icmp eq i64 1, 0
  br i1 %22, label %bb3.i, label %bb6.i

bb3.i:                                            ; preds = %bb3
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1
  %_9.i = load i8*, i8** %23, align 8
  %_8.i = ptrtoint i8* %_9.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_11.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i)
  %_10.i = ptrtoint i8* %_11.i to i64
  %24 = sub i64 %_8.i, %_10.i
  store i64 %24, i64* %4, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit"

bb6.i:                                            ; preds = %bb3
  %25 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1
  %_15.i = load i8*, i8** %25, align 8
  %_14.i = ptrtoint i8* %_15.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha1dc7e5e5d8ab403E"(i8* nonnull %start1.i)
  %_16.i = ptrtoint i8* %_17.i to i64
  %26 = sub nuw i64 %_14.i, %_16.i
  store i64 %26, i64* %3, align 8
  %diff.i = load i64, i64* %3, align 8
  %27 = udiv exact i64 %diff.i, 1
  store i64 %27, i64* %4, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit"

"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit": ; preds = %bb6.i, %bb3.i
  %28 = load i64, i64* %4, align 8
  br label %bb4

bb8:                                              ; preds = %bb2
  %29 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %29, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  ret void

bb4:                                              ; preds = %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h522291c0cd495b75E.exit"
  %char_len = sub i64 %12, %28
  %_16 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]>"* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]"*
; call <F as core::str::pattern::MultiCharEq>::matches
  %_15 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hf6c54823d7091a11E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]"* nonnull align 1 %_16, i32 %c)
  br label %bb5

bb5:                                              ; preds = %bb4
  br i1 %_15, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %_23 = add i64 %i, %char_len
  %30 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %31 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %30, i32 0, i32 1
  store i64 %i, i64* %31, align 8
  %32 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %33 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %32, i32 0, i32 2
  store i64 %_23, i64* %33, align 8
  %34 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %34, align 8
  br label %bb9

bb6:                                              ; preds = %bb5
  %_19 = add i64 %i, %char_len
  %35 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %36 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %35, i32 0, i32 1
  store i64 %i, i64* %36, align 8
  %37 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %38 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %37, i32 0, i32 2
  store i64 %_19, i64* %38, align 8
  %39 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 0, i64* %39, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb6
  br label %bb10
}

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd7f0148f5fc8708eE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
  %0 = call { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h19802dd0cab66da6E"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h5d75a6ec64ccbae6E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %reference) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::vec::Vec<proc_macro::TokenTree>"**
  store %"alloc::vec::Vec<proc_macro::TokenTree>"* %reference, %"alloc::vec::Vec<proc_macro::TokenTree>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !20
  ret i64* %2
}

; <core::iter::sources::once::Once<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN99_$LT$core..iter..sources..once..Once$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h30e844c8a3f16b73E"(%"core::iter::sources::once::Once<proc_macro::TokenStream>"* align 4 dereferenceable(4) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca %"core::option::Option<proc_macro::TokenStream>", align 4
  %_2 = bitcast %"core::iter::sources::once::Once<proc_macro::TokenStream>"* %self to %"core::option::IntoIter<proc_macro::TokenStream>"*
; call <core::option::IntoIter<A> as core::iter::traits::iterator::Iterator>::next
  %2 = call i32 @"_ZN90_$LT$core..option..IntoIter$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hdc2e763b1950debeE"(%"core::option::IntoIter<proc_macro::TokenStream>"* align 4 dereferenceable(4) %_2)
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %1 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<proc_macro::TokenStream>"* %1 to i32*
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; proc_macro2::parse::Cursor::advance
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %bytes) unnamed_addr #1 {
start:
  %_5 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !20
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_6.1 = load i64, i64* %3, align 8
; call core::str::<impl str>::split_at
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$8split_at17h085c2dc32863358bE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %_5, [0 x i8]* nonnull align 1 %_6.0, i64 %_6.1, i64 %bytes)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_5 to { [0 x i8]*, i64 }*
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  %_front.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !20
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  %_front.1 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_5, i32 0, i32 1
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %7, i32 0, i32 0
  %rest.0 = load [0 x i8]*, [0 x i8]** %8, align 8, !nonnull !20
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %7, i32 0, i32 1
  %rest.1 = load i64, i64* %9, align 8
  %10 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0
  store [0 x i8]* %rest.0, [0 x i8]** %11, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1
  store i64 %rest.1, i64* %12, align 8
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !nonnull !20
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = insertvalue { i8*, i64 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i64 } %17, i64 %16, 1
  ret { i8*, i64 } %18
}

; proc_macro2::parse::Cursor::starts_with
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !20
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %_3.1 = load i64, i64* %2, align 8
; call core::str::<impl str>::starts_with
  %3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h5b1588591b62590eE"([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %3
}

; proc_macro2::parse::Cursor::is_empty
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse6Cursor8is_empty17hea17ed5b4f0c14d9E({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %_2.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !20
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %_2.1 = load i64, i64* %2, align 8
; call core::str::<impl str>::is_empty
  %3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h6888ad1662ab9a20E"([0 x i8]* nonnull align 1 %_2.0, i64 %_2.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %3
}

; proc_macro2::parse::Cursor::len
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN11proc_macro25parse6Cursor3len17h8a72020d0a5d0b7bE({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %_2.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !20
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %_2.1 = load i64, i64* %2, align 8
; call core::str::<impl str>::len
  %3 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %_2.0, i64 %_2.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %3
}

; proc_macro2::parse::Cursor::as_bytes
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN11proc_macro25parse6Cursor8as_bytes17h5e485f6e1f81ec62E({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_2.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !20
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_2.1 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %_2.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %_2.1, i64* %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %7 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !20
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %7, 0
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1
  %12 = extractvalue { [0 x i8]*, i64 } %11, 0
  %13 = extractvalue { [0 x i8]*, i64 } %11, 1
  br label %bb1

bb1:                                              ; preds = %start
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %12, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; proc_macro2::parse::Cursor::bytes
; Function Attrs: nonlazybind uwtable
define internal { i8*, i8* } @_ZN11proc_macro25parse6Cursor5bytes17hb8375bf1baba45cdE({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %_2.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !20
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %_2.1 = load i64, i64* %2, align 8
; call core::str::<impl str>::bytes
  %3 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h3f2cdf005d447438E"([0 x i8]* nonnull align 1 %_2.0, i64 %_2.1)
  %4 = extractvalue { i8*, i8* } %3, 0
  %5 = extractvalue { i8*, i8* } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %6 = insertvalue { i8*, i8* } undef, i8* %4, 0
  %7 = insertvalue { i8*, i8* } %6, i8* %5, 1
  ret { i8*, i8* } %7
}

; proc_macro2::parse::Cursor::chars
; Function Attrs: nonlazybind uwtable
define internal { i8*, i8* } @_ZN11proc_macro25parse6Cursor5chars17h66a90ef9a000288fE({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %_2.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !20
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %_2.1 = load i64, i64* %2, align 8
; call core::str::<impl str>::chars
  %3 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h6f889b924c1c660fE"([0 x i8]* nonnull align 1 %_2.0, i64 %_2.1)
  %4 = extractvalue { i8*, i8* } %3, 0
  %5 = extractvalue { i8*, i8* } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %6 = insertvalue { i8*, i8* } undef, i8* %4, 0
  %7 = insertvalue { i8*, i8* } %6, i8* %5, 1
  ret { i8*, i8* } %7
}

; proc_macro2::parse::Cursor::char_indices
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse6Cursor12char_indices17h5b5acc4d3cd1d190E(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %0, { i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %1 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_2.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !20
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_2.1 = load i64, i64* %3, align 8
; call core::str::<impl str>::char_indices
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hcbe81db3a34466e5E"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %_2.0, i64 %_2.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::parse::Cursor::parse
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse6Cursor5parse17h695267df20f2c6e9E({ i8*, i64 }* align 8 dereferenceable(16) %self, [0 x i8]* nonnull align 1 %tag.0, i64 %tag.1) unnamed_addr #1 {
start:
  %0 = alloca { i8*, i64 }, align 8
; call proc_macro2::parse::Cursor::starts_with
  %_3 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %self, [0 x i8]* nonnull align 1 %tag.0, i64 %tag.1)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb5

bb5:                                              ; preds = %bb1
  %1 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
; call core::str::<impl str>::len
  %_8 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %tag.0, i64 %tag.1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call proc_macro2::parse::Cursor::advance
  %2 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %_8)
  %_6.0 = extractvalue { i8*, i64 } %2, 0
  %_6.1 = extractvalue { i8*, i64 } %2, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %_6.0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %_6.1, i64* %4, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10
}

; proc_macro2::parse::skip_whitespace
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse15skip_whitespace17hb28dd6beb0d6f9b3E(i8* nonnull align 1 %input.0, i64 %input.1) unnamed_addr #1 {
start:
  %_81 = alloca { i8*, i8* }, align 8
  %_65 = alloca %"core::result::Result<(parse::Cursor, &str), parse::Reject>", align 8
  %_50 = alloca i8, align 1
  %_45 = alloca i8, align 1
  %_44 = alloca i8, align 1
  %_35 = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_19 = alloca i8, align 1
  %_14 = alloca i8, align 1
  %_13 = alloca i8, align 1
  %byte = alloca i8, align 1
  %s = alloca { i8*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 0
  store i8* %input.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 1
  store i64 %input.1, i64* %2, align 8
  br label %bb1

bb1:                                              ; preds = %bb49, %bb59, %bb44, %bb25, %bb21, %start
; call proc_macro2::parse::Cursor::is_empty
  %_4 = call zeroext i1 @_ZN11proc_macro25parse6Cursor8is_empty17hea17ed5b4f0c14d9E({ i8*, i64 }* align 8 dereferenceable(16) %s)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb3, label %bb61

bb61:                                             ; preds = %bb2
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8, !nonnull !20
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  br label %bb62

bb3:                                              ; preds = %bb2
; call proc_macro2::parse::Cursor::as_bytes
  %9 = call { [0 x i8]*, i64 } @_ZN11proc_macro25parse6Cursor8as_bytes17h5e485f6e1f81ec62E({ i8*, i64 }* align 8 dereferenceable(16) %s)
  %_7.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %_11 = icmp ult i64 0, %_7.1
  %10 = call i1 @llvm.expect.i1(i1 %_11, i1 true)
  br i1 %10, label %bb5, label %panic

bb5:                                              ; preds = %bb4
  %11 = getelementptr inbounds [0 x i8], [0 x i8]* %_7.0, i64 0, i64 0
  %12 = load i8, i8* %11, align 1
  store i8 %12, i8* %byte, align 1
  %_12 = load i8, i8* %byte, align 1
  %13 = icmp eq i8 %_12, 47
  br i1 %13, label %bb6, label %bb45

panic:                                            ; preds = %bb4
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 0, i64 %_7.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1465 to %"core::panic::location::Location"*)) #19
  unreachable

bb6:                                              ; preds = %bb5
; call proc_macro2::parse::Cursor::starts_with
  %_15 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %s, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1609 to [0 x i8]*), i64 2)
  br label %bb13

bb45:                                             ; preds = %bb29, %bb5
  %14 = load i8, i8* %byte, align 1
  %15 = icmp eq i8 %14, 32
  br i1 %15, label %bb48, label %bb46

bb13:                                             ; preds = %bb6
  br i1 %_15, label %bb11, label %bb10

bb10:                                             ; preds = %bb13
  store i8 0, i8* %_14, align 1
  br label %bb12

bb11:                                             ; preds = %bb13
; call proc_macro2::parse::Cursor::starts_with
  %_21 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %s, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1627 to [0 x i8]*), i64 3)
  br label %bb17

bb17:                                             ; preds = %bb11
  %_20 = xor i1 %_21, true
  br i1 %_20, label %bb14, label %bb15

bb15:                                             ; preds = %bb17
; call proc_macro2::parse::Cursor::starts_with
  %_25 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %s, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1468 to [0 x i8]*), i64 4)
  br label %bb18

bb14:                                             ; preds = %bb17
  store i8 1, i8* %_19, align 1
  br label %bb16

bb16:                                             ; preds = %bb18, %bb14
  %16 = load i8, i8* %_19, align 1, !range !2
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %_14, align 1
  br label %bb12

bb18:                                             ; preds = %bb15
  %19 = zext i1 %_25 to i8
  store i8 %19, i8* %_19, align 1
  br label %bb16

bb12:                                             ; preds = %bb10, %bb16
  %20 = load i8, i8* %_14, align 1, !range !2
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb8, label %bb7

bb7:                                              ; preds = %bb12
  store i8 0, i8* %_13, align 1
  br label %bb9

bb8:                                              ; preds = %bb12
; call proc_macro2::parse::Cursor::starts_with
  %_30 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %s, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1619 to [0 x i8]*), i64 3)
  br label %bb19

bb19:                                             ; preds = %bb8
  %_29 = xor i1 %_30, true
  %22 = zext i1 %_29 to i8
  store i8 %22, i8* %_13, align 1
  br label %bb9

bb9:                                              ; preds = %bb7, %bb19
  %23 = load i8, i8* %_13, align 1, !range !2
  %24 = trunc i8 %23 to i1
  br i1 %24, label %bb20, label %bb22

bb22:                                             ; preds = %bb9
; call proc_macro2::parse::Cursor::starts_with
  %_38 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %s, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1470 to [0 x i8]*), i64 4)
  br label %bb23

bb20:                                             ; preds = %bb9
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 0
  %_36.0 = load i8*, i8** %25, align 8, !nonnull !20
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 1
  %_36.1 = load i64, i64* %26, align 8
; call proc_macro2::parse::take_until_newline_or_eof
  call void @_ZN11proc_macro25parse25take_until_newline_or_eof17h9e0f91b0e07891ebE({ { i8*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { i8*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %_35, i8* nonnull align 1 %_36.0, i64 %_36.1)
  br label %bb21

bb21:                                             ; preds = %bb20
  %27 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_35 to { i8*, i64 }*
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %27, i32 0, i32 0
  %cursor.0 = load i8*, i8** %28, align 8, !nonnull !20
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %27, i32 0, i32 1
  %cursor.1 = load i64, i64* %29, align 8
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 0
  store i8* %cursor.0, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 1
  store i64 %cursor.1, i64* %31, align 8
  br label %bb1

bb23:                                             ; preds = %bb22
  br i1 %_38, label %bb24, label %bb26

bb26:                                             ; preds = %bb23
; call proc_macro2::parse::Cursor::starts_with
  %_46 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %s, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1610 to [0 x i8]*), i64 2)
  br label %bb33

bb24:                                             ; preds = %bb23
; call proc_macro2::parse::Cursor::advance
  %32 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %s, i64 4)
  %_42.0 = extractvalue { i8*, i64 } %32, 0
  %_42.1 = extractvalue { i8*, i64 } %32, 1
  br label %bb25

bb25:                                             ; preds = %bb24
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 0
  store i8* %_42.0, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 1
  store i64 %_42.1, i64* %34, align 8
  br label %bb1

bb33:                                             ; preds = %bb26
  br i1 %_46, label %bb31, label %bb30

bb30:                                             ; preds = %bb33
  store i8 0, i8* %_45, align 1
  br label %bb32

bb31:                                             ; preds = %bb33
; call proc_macro2::parse::Cursor::starts_with
  %_52 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %s, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1629 to [0 x i8]*), i64 3)
  br label %bb37

bb37:                                             ; preds = %bb31
  %_51 = xor i1 %_52, true
  br i1 %_51, label %bb34, label %bb35

bb35:                                             ; preds = %bb37
; call proc_macro2::parse::Cursor::starts_with
  %_56 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %s, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1473 to [0 x i8]*), i64 4)
  br label %bb38

bb34:                                             ; preds = %bb37
  store i8 1, i8* %_50, align 1
  br label %bb36

bb36:                                             ; preds = %bb38, %bb34
  %35 = load i8, i8* %_50, align 1, !range !2
  %36 = trunc i8 %35 to i1
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %_45, align 1
  br label %bb32

bb38:                                             ; preds = %bb35
  %38 = zext i1 %_56 to i8
  store i8 %38, i8* %_50, align 1
  br label %bb36

bb32:                                             ; preds = %bb30, %bb36
  %39 = load i8, i8* %_45, align 1, !range !2
  %40 = trunc i8 %39 to i1
  br i1 %40, label %bb28, label %bb27

bb27:                                             ; preds = %bb32
  store i8 0, i8* %_44, align 1
  br label %bb29

bb28:                                             ; preds = %bb32
; call proc_macro2::parse::Cursor::starts_with
  %_61 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %s, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1620 to [0 x i8]*), i64 3)
  br label %bb39

bb39:                                             ; preds = %bb28
  %_60 = xor i1 %_61, true
  %41 = zext i1 %_60 to i8
  store i8 %41, i8* %_44, align 1
  br label %bb29

bb29:                                             ; preds = %bb27, %bb39
  %42 = load i8, i8* %_44, align 1, !range !2
  %43 = trunc i8 %42 to i1
  br i1 %43, label %bb40, label %bb45

bb40:                                             ; preds = %bb29
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 0
  %_66.0 = load i8*, i8** %44, align 8, !nonnull !20
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 1
  %_66.1 = load i64, i64* %45, align 8
; call proc_macro2::parse::block_comment
  call void @_ZN11proc_macro25parse13block_comment17hc8e324b812e6b33aE(%"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, &str), parse::Reject>") dereferenceable(32) %_65, i8* nonnull align 1 %_66.0, i64 %_66.1)
  br label %bb41

bb41:                                             ; preds = %bb40
  %46 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* %_65 to {}**
  %47 = load {}*, {}** %46, align 8
  %48 = icmp eq {}* %47, null
  %_67 = select i1 %48, i64 1, i64 0
  switch i64 %_67, label %bb43 [
    i64 0, label %bb44
    i64 1, label %bb42
  ]

bb43:                                             ; preds = %bb41
  unreachable

bb44:                                             ; preds = %bb41
  %49 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* %_65 to %"core::result::Result<(parse::Cursor, &str), parse::Reject>::Ok"*
  %50 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>::Ok"* %49 to { { i8*, i64 }, { [0 x i8]*, i64 } }*
  %51 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %50 to { i8*, i64 }*
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %51, i32 0, i32 0
  %rest.0 = load i8*, i8** %52, align 8, !nonnull !20
  %53 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %51, i32 0, i32 1
  %rest.1 = load i64, i64* %53, align 8
  %54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 0
  store i8* %rest.0, i8** %54, align 8
  %55 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 1
  store i64 %rest.1, i64* %55, align 8
  br label %bb1

bb42:                                             ; preds = %bb41
  %56 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8, !nonnull !20
  %58 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %57, i8** %60, align 8
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %59, i64* %61, align 8
  br label %bb62

bb62:                                             ; preds = %bb61, %bb60, %bb42
  %62 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8, !nonnull !20
  %64 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = insertvalue { i8*, i64 } undef, i8* %63, 0
  %67 = insertvalue { i8*, i64 } %66, i64 %65, 1
  ret { i8*, i64 } %67

bb48:                                             ; preds = %bb47, %bb45
; call proc_macro2::parse::Cursor::advance
  %68 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %s, i64 1)
  %_72.0 = extractvalue { i8*, i64 } %68, 0
  %_72.1 = extractvalue { i8*, i64 } %68, 1
  br label %bb49

bb46:                                             ; preds = %bb45
  %69 = load i8, i8* %byte, align 1
  %_70 = icmp ule i8 9, %69
  br i1 %_70, label %bb47, label %bb50

bb50:                                             ; preds = %bb47, %bb46
  %_77 = load i8, i8* %byte, align 1
  %_76 = icmp ule i8 %_77, 127
  br i1 %_76, label %bb51, label %bb52

bb47:                                             ; preds = %bb46
  %70 = load i8, i8* %byte, align 1
  %_71 = icmp ule i8 %70, 13
  br i1 %_71, label %bb48, label %bb50

bb52:                                             ; preds = %bb50
; call proc_macro2::parse::Cursor::chars
  %71 = call { i8*, i8* } @_ZN11proc_macro25parse6Cursor5chars17h66a90ef9a000288fE({ i8*, i64 }* align 8 dereferenceable(16) %s)
  store { i8*, i8* } %71, { i8*, i8* }* %_81, align 8
  br label %bb53

bb51:                                             ; preds = %bb50
  %b = load i8, i8* %byte, align 1
  br label %bb60

bb60:                                             ; preds = %bb56, %bb51
  %72 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8, !nonnull !20
  %74 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %73, i8** %76, align 8
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %75, i64* %77, align 8
  br label %bb62

bb53:                                             ; preds = %bb52
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_79 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %_81), !range !22
  br label %bb54

bb54:                                             ; preds = %bb53
; call core::option::Option<T>::unwrap
  %ch = call i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb66cd30b4af554e3E"(i32 %_79, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1476 to %"core::panic::location::Location"*)), !range !80
  br label %bb55

bb55:                                             ; preds = %bb54
; call proc_macro2::parse::is_whitespace
  %_83 = call zeroext i1 @_ZN11proc_macro25parse13is_whitespace17hd74e581a5feb1333E(i32 %ch)
  br label %bb56

bb56:                                             ; preds = %bb55
  br i1 %_83, label %bb57, label %bb60

bb57:                                             ; preds = %bb56
; call core::char::methods::<impl char>::len_utf8
  %_87 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817h820a382be7518970E"(i32 %ch)
  br label %bb58

bb58:                                             ; preds = %bb57
; call proc_macro2::parse::Cursor::advance
  %78 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %s, i64 %_87)
  %_85.0 = extractvalue { i8*, i64 } %78, 0
  %_85.1 = extractvalue { i8*, i64 } %78, 1
  br label %bb59

bb59:                                             ; preds = %bb58
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 0
  store i8* %_85.0, i8** %79, align 8
  %80 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 1
  store i64 %_85.1, i64* %80, align 8
  br label %bb1

bb49:                                             ; preds = %bb48
  %81 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 0
  store i8* %_72.0, i8** %81, align 8
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %s, i32 0, i32 1
  store i64 %_72.1, i64* %82, align 8
  br label %bb1
}

; proc_macro2::parse::block_comment
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse13block_comment17hc8e324b812e6b33aE(%"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, &str), parse::Reject>") dereferenceable(32) %0, i8* nonnull align 1 %1, i64 %2) unnamed_addr #1 {
start:
  %_56 = alloca i64, align 8
  %_46 = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_32 = alloca i8, align 1
  %_18 = alloca i8, align 1
  %i = alloca i64, align 8
  %depth = alloca i32, align 4
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %2, i64* %4, align 8
; call proc_macro2::parse::Cursor::starts_with
  %_3 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1610 to [0 x i8]*), i64 2)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i32 0, i32* %depth, align 4
; call proc_macro2::parse::Cursor::as_bytes
  %5 = call { [0 x i8]*, i64 } @_ZN11proc_macro25parse6Cursor8as_bytes17h5e485f6e1f81ec62E({ i8*, i64 }* align 8 dereferenceable(16) %input)
  %bytes.0 = extractvalue { [0 x i8]*, i64 } %5, 0
  %bytes.1 = extractvalue { [0 x i8]*, i64 } %5, 1
  br label %bb4

bb2:                                              ; preds = %bb1
  %6 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb36

bb36:                                             ; preds = %bb35, %bb30, %bb2
  ret void

bb4:                                              ; preds = %bb3
  store i64 0, i64* %i, align 8
  %7 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %bytes.1, i64 1)
  %_14.0 = extractvalue { i64, i1 } %7, 0
  %_14.1 = extractvalue { i64, i1 } %7, 1
  %8 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false)
  br i1 %8, label %panic, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1479 to %"core::panic::location::Location"*)) #19
  unreachable

bb6:                                              ; preds = %bb34, %bb5
  %_16 = load i64, i64* %i, align 8
  %_15 = icmp ult i64 %_16, %_14.0
  br i1 %_15, label %bb7, label %bb35

bb35:                                             ; preds = %bb6
  %9 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* %0 to {}**
  store {}* null, {}** %9, align 8
  br label %bb36

bb7:                                              ; preds = %bb6
  %_20 = load i64, i64* %i, align 8
  %_22 = icmp ult i64 %_20, %bytes.1
  %10 = call i1 @llvm.expect.i1(i1 %_22, i1 true)
  br i1 %10, label %bb11, label %panic1

bb11:                                             ; preds = %bb7
  %11 = getelementptr inbounds [0 x i8], [0 x i8]* %bytes.0, i64 0, i64 %_20
  %_19 = load i8, i8* %11, align 1
  %12 = icmp eq i8 %_19, 47
  br i1 %12, label %bb9, label %bb8

panic1:                                           ; preds = %bb7
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_20, i64 %bytes.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1481 to %"core::panic::location::Location"*)) #19
  unreachable

bb9:                                              ; preds = %bb11
  %_26 = load i64, i64* %i, align 8
  %13 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_26, i64 1)
  %_27.0 = extractvalue { i64, i1 } %13, 0
  %_27.1 = extractvalue { i64, i1 } %13, 1
  %14 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false)
  br i1 %14, label %panic2, label %bb12

bb8:                                              ; preds = %bb11
  store i8 0, i8* %_18, align 1
  br label %bb10

bb10:                                             ; preds = %bb13, %bb8
  %15 = load i8, i8* %_18, align 1, !range !2
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb14, label %bb17

bb12:                                             ; preds = %bb9
  %_29 = icmp ult i64 %_27.0, %bytes.1
  %17 = call i1 @llvm.expect.i1(i1 %_29, i1 true)
  br i1 %17, label %bb13, label %panic3

panic2:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1483 to %"core::panic::location::Location"*)) #19
  unreachable

bb13:                                             ; preds = %bb12
  %18 = getelementptr inbounds [0 x i8], [0 x i8]* %bytes.0, i64 0, i64 %_27.0
  %_24 = load i8, i8* %18, align 1
  %_23 = icmp eq i8 %_24, 42
  %19 = zext i1 %_23 to i8
  store i8 %19, i8* %_18, align 1
  br label %bb10

panic3:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_27.0, i64 %bytes.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1485 to %"core::panic::location::Location"*)) #19
  unreachable

bb17:                                             ; preds = %bb10
  %_34 = load i64, i64* %i, align 8
  %_36 = icmp ult i64 %_34, %bytes.1
  %20 = call i1 @llvm.expect.i1(i1 %_36, i1 true)
  br i1 %20, label %bb21, label %panic6

bb14:                                             ; preds = %bb10
  %21 = load i32, i32* %depth, align 4
  %22 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 1)
  %_30.0 = extractvalue { i32, i1 } %22, 0
  %_30.1 = extractvalue { i32, i1 } %22, 1
  %23 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %23, label %panic4, label %bb15

bb15:                                             ; preds = %bb14
  store i32 %_30.0, i32* %depth, align 4
  %24 = load i64, i64* %i, align 8
  %25 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %24, i64 1)
  %_31.0 = extractvalue { i64, i1 } %25, 0
  %_31.1 = extractvalue { i64, i1 } %25, 1
  %26 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false)
  br i1 %26, label %panic5, label %bb16

panic4:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1487 to %"core::panic::location::Location"*)) #19
  unreachable

bb16:                                             ; preds = %bb15
  store i64 %_31.0, i64* %i, align 8
  br label %bb33

panic5:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1489 to %"core::panic::location::Location"*)) #19
  unreachable

bb33:                                             ; preds = %bb32, %bb20, %bb16
  %27 = load i64, i64* %i, align 8
  %28 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %27, i64 1)
  %_61.0 = extractvalue { i64, i1 } %28, 0
  %_61.1 = extractvalue { i64, i1 } %28, 1
  %29 = call i1 @llvm.expect.i1(i1 %_61.1, i1 false)
  br i1 %29, label %panic13, label %bb34

bb21:                                             ; preds = %bb17
  %30 = getelementptr inbounds [0 x i8], [0 x i8]* %bytes.0, i64 0, i64 %_34
  %_33 = load i8, i8* %30, align 1
  %31 = icmp eq i8 %_33, 42
  br i1 %31, label %bb19, label %bb18

panic6:                                           ; preds = %bb17
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_34, i64 %bytes.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1491 to %"core::panic::location::Location"*)) #19
  unreachable

bb19:                                             ; preds = %bb21
  %_40 = load i64, i64* %i, align 8
  %32 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_40, i64 1)
  %_41.0 = extractvalue { i64, i1 } %32, 0
  %_41.1 = extractvalue { i64, i1 } %32, 1
  %33 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false)
  br i1 %33, label %panic7, label %bb22

bb18:                                             ; preds = %bb21
  store i8 0, i8* %_32, align 1
  br label %bb20

bb20:                                             ; preds = %bb23, %bb18
  %34 = load i8, i8* %_32, align 1, !range !2
  %35 = trunc i8 %34 to i1
  br i1 %35, label %bb24, label %bb33

bb22:                                             ; preds = %bb19
  %_43 = icmp ult i64 %_41.0, %bytes.1
  %36 = call i1 @llvm.expect.i1(i1 %_43, i1 true)
  br i1 %36, label %bb23, label %panic8

panic7:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1493 to %"core::panic::location::Location"*)) #19
  unreachable

bb23:                                             ; preds = %bb22
  %37 = getelementptr inbounds [0 x i8], [0 x i8]* %bytes.0, i64 0, i64 %_41.0
  %_38 = load i8, i8* %37, align 1
  %_37 = icmp eq i8 %_38, 47
  %38 = zext i1 %_37 to i8
  store i8 %38, i8* %_32, align 1
  br label %bb20

panic8:                                           ; preds = %bb22
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_41.0, i64 %bytes.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1495 to %"core::panic::location::Location"*)) #19
  unreachable

bb24:                                             ; preds = %bb20
  %39 = load i32, i32* %depth, align 4
  %40 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %39, i32 1)
  %_44.0 = extractvalue { i32, i1 } %40, 0
  %_44.1 = extractvalue { i32, i1 } %40, 1
  %41 = call i1 @llvm.expect.i1(i1 %_44.1, i1 false)
  br i1 %41, label %panic9, label %bb25

bb25:                                             ; preds = %bb24
  store i32 %_44.0, i32* %depth, align 4
  %_45 = load i32, i32* %depth, align 4
  %42 = icmp eq i32 %_45, 0
  br i1 %42, label %bb26, label %bb31

panic9:                                           ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1497 to %"core::panic::location::Location"*)) #19
  unreachable

bb26:                                             ; preds = %bb25
  %_50 = load i64, i64* %i, align 8
  %43 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_50, i64 2)
  %_51.0 = extractvalue { i64, i1 } %43, 0
  %_51.1 = extractvalue { i64, i1 } %43, 1
  %44 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false)
  br i1 %44, label %panic11, label %bb27

bb31:                                             ; preds = %bb25
  %45 = load i64, i64* %i, align 8
  %46 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %45, i64 1)
  %_60.0 = extractvalue { i64, i1 } %46, 0
  %_60.1 = extractvalue { i64, i1 } %46, 1
  %47 = call i1 @llvm.expect.i1(i1 %_60.1, i1 false)
  br i1 %47, label %panic10, label %bb32

bb32:                                             ; preds = %bb31
  store i64 %_60.0, i64* %i, align 8
  br label %bb33

panic10:                                          ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1499 to %"core::panic::location::Location"*)) #19
  unreachable

bb27:                                             ; preds = %bb26
; call proc_macro2::parse::Cursor::advance
  %48 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %_51.0)
  %_47.0 = extractvalue { i8*, i64 } %48, 0
  %_47.1 = extractvalue { i8*, i64 } %48, 1
  br label %bb28

panic11:                                          ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1501 to %"core::panic::location::Location"*)) #19
  unreachable

bb28:                                             ; preds = %bb27
  %49 = bitcast { i8*, i64 }* %input to { [0 x i8]*, i64 }*
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %49, i32 0, i32 0
  %_55.0 = load [0 x i8]*, [0 x i8]** %50, align 8, !nonnull !20
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %49, i32 0, i32 1
  %_55.1 = load i64, i64* %51, align 8
  %_58 = load i64, i64* %i, align 8
  %52 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_58, i64 2)
  %_59.0 = extractvalue { i64, i1 } %52, 0
  %_59.1 = extractvalue { i64, i1 } %52, 1
  %53 = call i1 @llvm.expect.i1(i1 %_59.1, i1 false)
  br i1 %53, label %panic12, label %bb29

bb29:                                             ; preds = %bb28
  store i64 %_59.0, i64* %_56, align 8
  %54 = load i64, i64* %_56, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %55 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h92cbe302d9c6844dE"([0 x i8]* nonnull align 1 %_55.0, i64 %_55.1, i64 %54, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1505 to %"core::panic::location::Location"*))
  %_54.0 = extractvalue { [0 x i8]*, i64 } %55, 0
  %_54.1 = extractvalue { [0 x i8]*, i64 } %55, 1
  br label %bb30

panic12:                                          ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1503 to %"core::panic::location::Location"*)) #19
  unreachable

bb30:                                             ; preds = %bb29
  %56 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_46 to { i8*, i64 }*
  %57 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %56, i32 0, i32 0
  store i8* %_47.0, i8** %57, align 8
  %58 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %56, i32 0, i32 1
  store i64 %_47.1, i64* %58, align 8
  %59 = getelementptr inbounds { { i8*, i64 }, { [0 x i8]*, i64 } }, { { i8*, i64 }, { [0 x i8]*, i64 } }* %_46, i32 0, i32 1
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %59, i32 0, i32 0
  store [0 x i8]* %_54.0, [0 x i8]** %60, align 8
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %59, i32 0, i32 1
  store i64 %_54.1, i64* %61, align 8
  %62 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, &str), parse::Reject>::Ok"*
  %63 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>::Ok"* %62 to { { i8*, i64 }, { [0 x i8]*, i64 } }*
  %64 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %63 to i8*
  %65 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 32, i1 false)
  br label %bb36

bb34:                                             ; preds = %bb33
  store i64 %_61.0, i64* %i, align 8
  br label %bb6

panic13:                                          ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1507 to %"core::panic::location::Location"*)) #19
  unreachable
}

; proc_macro2::parse::is_whitespace
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse13is_whitespace17hd74e581a5feb1333E(i32 %ch) unnamed_addr #1 {
start:
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
; call core::char::methods::<impl char>::is_whitespace
  %_3 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h3d27cd8679dd9538E"(i32 %ch)
  br label %bb7

bb7:                                              ; preds = %start
  br i1 %_3, label %bb4, label %bb5

bb5:                                              ; preds = %bb7
  %_5 = icmp eq i32 %ch, 8206
  %1 = zext i1 %_5 to i8
  store i8 %1, i8* %_2, align 1
  br label %bb6

bb4:                                              ; preds = %bb7
  store i8 1, i8* %_2, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %2 = load i8, i8* %_2, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb1, label %bb2

bb2:                                              ; preds = %bb6
  %_7 = icmp eq i32 %ch, 8207
  %4 = zext i1 %_7 to i8
  store i8 %4, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %bb6
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, i8* %0, align 1, !range !2
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; proc_macro2::parse::word_break
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse10word_break17h2b73ad6474b02b4bE(i8* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_4 = alloca { i8*, i8* }, align 8
  %_2 = alloca i32, align 4
  %2 = alloca { i8*, i64 }, align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call proc_macro2::parse::Cursor::chars
  %5 = call { i8*, i8* } @_ZN11proc_macro25parse6Cursor5chars17h66a90ef9a000288fE({ i8*, i64 }* align 8 dereferenceable(16) %input)
  store { i8*, i8* } %5, { i8*, i8* }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %6 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %_4), !range !22
  store i32 %6, i32* %_2, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %7 = load i32, i32* %_2, align 4, !range !22
  %8 = sub i32 %7, 1114112
  %9 = icmp eq i32 %8, 0
  %_6 = select i1 %9, i64 0, i64 1
  switch i64 %_6, label %bb3 [
    i64 0, label %bb7
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb7:                                              ; preds = %bb5, %bb2
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  %_11.0 = load i8*, i8** %10, align 8, !nonnull !20
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  %_11.1 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_11.0, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_11.1, i64* %13, align 8
  br label %bb8

bb4:                                              ; preds = %bb2
  %_10 = load i32, i32* %_2, align 4, !range !80
; call proc_macro2::fallback::is_ident_continue
  %_9 = call zeroext i1 @_ZN11proc_macro28fallback17is_ident_continue17h97e1ecc5a557951cE(i32 %_10)
  br label %bb5

bb5:                                              ; preds = %bb4
  br i1 %_9, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %ch = load i32, i32* %_2, align 4, !range !80
  %14 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %14, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i8*, i64 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i64 } %19, i64 %18, 1
  ret { i8*, i64 } %20
}

; proc_macro2::parse::token_stream
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse12token_stream17hd1563f0d6fe85b4cE(%"core::result::Result<fallback::TokenStream, fallback::LexError>"* noalias nocapture sret(%"core::result::Result<fallback::TokenStream, fallback::LexError>") dereferenceable(24) %0, i8* nonnull align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca i32, align 4
  %4 = alloca { i8*, i32 }, align 8
  %_98 = alloca i8, align 1
  %_97 = alloca i8, align 1
  %_96 = alloca i8, align 1
  %_95 = alloca i8, align 1
  %_94 = alloca i8, align 1
  %_92 = alloca %TokenTree, align 8
  %_88 = alloca %Span, align 4
  %_83 = alloca %TokenTree, align 8
  %tt4 = alloca %TokenTree, align 8
  %_77 = alloca %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>", align 8
  %_76 = alloca { { i8*, i64 }, %TokenTree }, align 8
  %tt3 = alloca %TokenTree, align 8
  %_73 = alloca %"fallback::Group", align 8
  %_72 = alloca %Group, align 8
  %_71 = alloca %TokenTree, align 8
  %_68 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %_64 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %_63 = alloca %"fallback::TokenStream", align 8
  %g = alloca %"fallback::Group", align 8
  %outer = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %open_delimiter = alloca i8, align 1
  %frame2 = alloca { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, align 8
  %_46 = alloca %"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>", align 8
  %frame1 = alloca { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, align 8
  %close_delimiter = alloca i8, align 1
  %_42 = alloca i8, align 1
  %_41 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %_40 = alloca { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, align 8
  %_37 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %frame = alloca { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, align 8
  %_30 = alloca i8, align 1
  %_28 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %_27 = alloca %"fallback::TokenStream", align 8
  %_22 = alloca i64*, align 8
  %_18 = alloca { i8*, i8* }, align 8
  %_16 = alloca { i8, i8 }, align 1
  %_13 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %tt = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %_6 = alloca %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>", align 8
  %stack = alloca %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>", align 8
  %trees = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %input = alloca { i8*, i64 }, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %2, i64* %6, align 8
  store i8 0, i8* %_98, align 1
  store i8 0, i8* %_94, align 1
  store i8 0, i8* %_95, align 1
  store i8 0, i8* %_97, align 1
  store i8 0, i8* %_96, align 1
  store i8 1, i8* %_94, align 1
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h3bd7eafdf39cd676E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %trees)
  br label %bb1

bb1:                                              ; preds = %start
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hdf1c071211edda7fE"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* noalias nocapture sret(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>") dereferenceable(24) %stack)
          to label %bb81 unwind label %cleanup

bb81:                                             ; preds = %bb1
  br label %bb2

bb80:                                             ; preds = %bb64, %cleanup
  %7 = load i8, i8* %_94, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb79, label %bb65

cleanup:                                          ; preds = %bb61, %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb80

bb2:                                              ; preds = %bb6, %bb66, %bb49, %bb58, %bb81
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  %_5.0 = load i8*, i8** %14, align 8, !nonnull !20
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  %_5.1 = load i64, i64* %15, align 8
; invoke proc_macro2::parse::skip_whitespace
  %16 = invoke { i8*, i64 } @_ZN11proc_macro25parse15skip_whitespace17hb28dd6beb0d6f9b3E(i8* nonnull align 1 %_5.0, i64 %_5.1)
          to label %bb3 unwind label %cleanup5

bb3:                                              ; preds = %bb2
  %_4.0 = extractvalue { i8*, i64 } %16, 0
  %_4.1 = extractvalue { i8*, i64 } %16, 1
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %_4.0, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %_4.1, i64* %18, align 8
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  %_7.0 = load i8*, i8** %19, align 8, !nonnull !20
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  %_7.1 = load i64, i64* %20, align 8
; invoke proc_macro2::parse::doc_comment
  invoke void @_ZN11proc_macro25parse11doc_comment17h65f8d67917836846E(%"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>") dereferenceable(40) %_6, i8* nonnull align 1 %_7.0, i64 %_7.1)
          to label %bb4 unwind label %cleanup5

bb64:                                             ; preds = %bb78, %bb77, %bb75, %bb76, %bb68, %bb69, %bb70, %cleanup5
; call core::ptr::drop_in_place<alloc::vec::Vec<(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)>>
  call void @"_ZN4core3ptr122drop_in_place$LT$alloc..vec..Vec$LT$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$$GT$17hd2f3c047bc7be274E"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %stack) #18
  br label %bb80

cleanup5:                                         ; preds = %bb18, %bb14, %bb11, %bb27, %bb26, %bb25, %bb34, %bb50, %bb9, %bb8, %bb7, %bb3, %bb2
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb64

bb4:                                              ; preds = %bb3
  %26 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* %_6 to {}**
  %27 = load {}*, {}** %26, align 8
  %28 = icmp eq {}* %27, null
  %_8 = select i1 %28, i64 1, i64 0
  %29 = icmp eq i64 %_8, 0
  br i1 %29, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %30 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* %_6 to %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>::Ok"*
  %31 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>::Ok"* %30 to { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }*
  %32 = bitcast { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }* %31 to { i8*, i64 }*
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %32, i32 0, i32 0
  %rest.015 = load i8*, i8** %33, align 8, !nonnull !20
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %32, i32 0, i32 1
  %rest.116 = load i64, i64* %34, align 8
  %35 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* %_6 to %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>::Ok"*
  %36 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>::Ok"* %35 to { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }*
  %37 = getelementptr inbounds { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }, { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }* %36, i32 0, i32 1
  %38 = bitcast %"alloc::vec::Vec<TokenTree>"* %tt to i8*
  %39 = bitcast %"alloc::vec::Vec<TokenTree>"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false)
  %40 = bitcast %"alloc::vec::Vec<TokenTree>"* %_13 to i8*
  %41 = bitcast %"alloc::vec::Vec<TokenTree>"* %tt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false)
; invoke <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend
  invoke void @"_ZN93_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$T$GT$$GT$6extend17h460c1a988d14b96bE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %trees, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %_13)
          to label %bb6 unwind label %cleanup17

bb7:                                              ; preds = %bb4
; invoke core::ptr::drop_in_place<core::result::Result<(proc_macro2::parse::Cursor,alloc::vec::Vec<proc_macro2::TokenTree>),proc_macro2::parse::Reject>>
  invoke void @"_ZN4core3ptr160drop_in_place$LT$core..result..Result$LT$$LP$proc_macro2..parse..Cursor$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$C$proc_macro2..parse..Reject$GT$$GT$17hd38e2e3fa4a5dbb9E"(%"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* %_6)
          to label %bb8 unwind label %cleanup5

bb8:                                              ; preds = %bb7
; invoke proc_macro2::parse::Cursor::bytes
  %42 = invoke { i8*, i8* } @_ZN11proc_macro25parse6Cursor5bytes17hb8375bf1baba45cdE({ i8*, i64 }* align 8 dereferenceable(16) %input)
          to label %bb9 unwind label %cleanup5

bb9:                                              ; preds = %bb8
  store { i8*, i8* } %42, { i8*, i8* }* %_18, align 8
; invoke <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
  %43 = invoke { i8, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h962fc68cde015298E"({ i8*, i8* }* align 8 dereferenceable(16) %_18)
          to label %bb10 unwind label %cleanup5

bb10:                                             ; preds = %bb9
  store { i8, i8 } %43, { i8, i8 }* %_16, align 1
  %44 = bitcast { i8, i8 }* %_16 to i8*
  %45 = load i8, i8* %44, align 1, !range !2
  %46 = trunc i8 %45 to i1
  %_20 = zext i1 %46 to i64
  switch i64 %_20, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %47 = invoke { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0f7d0b3edebf8dbdE"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %stack)
          to label %bb14 unwind label %cleanup5

bb13:                                             ; preds = %bb10
  %48 = bitcast { i8, i8 }* %_16 to %"core::option::Option<u8>::Some"*
  %49 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %48, i32 0, i32 1
  %first = load i8, i8* %49, align 1
  switch i8 %first, label %bb20 [
    i8 40, label %bb21
    i8 91, label %bb22
    i8 123, label %bb23
  ]

bb20:                                             ; preds = %bb13
  store i8 4, i8* %_30, align 1
  br label %bb24

bb21:                                             ; preds = %bb13
  store i8 0, i8* %_30, align 1
  br label %bb24

bb22:                                             ; preds = %bb13
  store i8 2, i8* %_30, align 1
  br label %bb24

bb23:                                             ; preds = %bb13
  store i8 1, i8* %_30, align 1
  br label %bb24

bb24:                                             ; preds = %bb21, %bb22, %bb23, %bb20
  %50 = load i8, i8* %_30, align 1, !range !23
  %51 = sub i8 %50, 4
  %52 = icmp eq i8 %51, 0
  %_31 = select i1 %52, i64 0, i64 1
  %53 = icmp eq i64 %_31, 1
  br i1 %53, label %bb25, label %bb28

bb25:                                             ; preds = %bb24
  %open_delimiter14 = load i8, i8* %_30, align 1, !range !110
; invoke proc_macro2::parse::Cursor::advance
  %54 = invoke { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 1)
          to label %bb26 unwind label %cleanup5

bb28:                                             ; preds = %bb24
  switch i8 %first, label %bb29 [
    i8 41, label %bb30
    i8 93, label %bb31
    i8 125, label %bb32
  ]

bb29:                                             ; preds = %bb28
  store i8 4, i8* %_42, align 1
  br label %bb33

bb30:                                             ; preds = %bb28
  store i8 0, i8* %_42, align 1
  br label %bb33

bb31:                                             ; preds = %bb28
  store i8 2, i8* %_42, align 1
  br label %bb33

bb32:                                             ; preds = %bb28
  store i8 1, i8* %_42, align 1
  br label %bb33

bb33:                                             ; preds = %bb30, %bb31, %bb32, %bb29
  %55 = load i8, i8* %_42, align 1, !range !23
  %56 = sub i8 %55, 4
  %57 = icmp eq i8 %56, 0
  %_43 = select i1 %57, i64 0, i64 1
  %58 = icmp eq i64 %_43, 1
  br i1 %58, label %bb34, label %bb50

bb34:                                             ; preds = %bb33
  %59 = load i8, i8* %_42, align 1, !range !110
  store i8 %59, i8* %close_delimiter, align 1
; invoke alloc::vec::Vec<T,A>::pop
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h0ca971be8b2abc50E"(%"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>"* noalias nocapture sret(%"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>") dereferenceable(32) %_46, %"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %stack)
          to label %bb35 unwind label %cleanup5

bb50:                                             ; preds = %bb33
  %60 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  %_78.0 = load i8*, i8** %60, align 8, !nonnull !20
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  %_78.1 = load i64, i64* %61, align 8
; invoke proc_macro2::parse::leaf_token
  invoke void @_ZN11proc_macro25parse10leaf_token17h561368ad5c786ce2E(%"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>") dereferenceable(64) %_77, i8* nonnull align 1 %_78.0, i64 %_78.1)
          to label %bb51 unwind label %cleanup5

bb51:                                             ; preds = %bb50
  %62 = getelementptr inbounds %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>", %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>"* %_77, i32 0, i32 1
  %63 = load i32, i32* %62, align 8, !range !31
  %64 = sub i32 %63, 4
  %65 = icmp eq i32 %64, 0
  %_79 = select i1 %65, i64 1, i64 0
  switch i64 %_79, label %bb53 [
    i64 0, label %bb54
    i64 1, label %bb52
  ]

bb53:                                             ; preds = %bb51
  unreachable

bb54:                                             ; preds = %bb51
  %66 = bitcast %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>"* %_77 to %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>::Ok"*
  %67 = bitcast %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>::Ok"* %66 to { { i8*, i64 }, %TokenTree }*
  %68 = bitcast { { i8*, i64 }, %TokenTree }* %67 to { i8*, i64 }*
  %69 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %68, i32 0, i32 0
  %rest.0 = load i8*, i8** %69, align 8, !nonnull !20
  %70 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %68, i32 0, i32 1
  %rest.1 = load i64, i64* %70, align 8
  %71 = bitcast %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>"* %_77 to %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>::Ok"*
  %72 = bitcast %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>::Ok"* %71 to { { i8*, i64 }, %TokenTree }*
  %73 = getelementptr inbounds { { i8*, i64 }, %TokenTree }, { { i8*, i64 }, %TokenTree }* %72, i32 0, i32 1
  %74 = bitcast %TokenTree* %tt4 to i8*
  %75 = bitcast %TokenTree* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 48, i1 false)
  %76 = bitcast %TokenTree* %_83 to i8*
  %77 = bitcast %TokenTree* %tt4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 48, i1 false)
  %78 = bitcast { { i8*, i64 }, %TokenTree }* %_76 to { i8*, i64 }*
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %78, i32 0, i32 0
  store i8* %rest.0, i8** %79, align 8
  %80 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %78, i32 0, i32 1
  store i64 %rest.1, i64* %80, align 8
  %81 = getelementptr inbounds { { i8*, i64 }, %TokenTree }, { { i8*, i64 }, %TokenTree }* %_76, i32 0, i32 1
  %82 = bitcast %TokenTree* %81 to i8*
  %83 = bitcast %TokenTree* %_83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 48, i1 false)
  %84 = bitcast { { i8*, i64 }, %TokenTree }* %_76 to { i8*, i64 }*
  %85 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %84, i32 0, i32 0
  %rest.07 = load i8*, i8** %85, align 8, !nonnull !20
  %86 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %84, i32 0, i32 1
  %rest.18 = load i64, i64* %86, align 8
  store i8 1, i8* %_95, align 1
  %87 = getelementptr inbounds { { i8*, i64 }, %TokenTree }, { { i8*, i64 }, %TokenTree }* %_76, i32 0, i32 1
  %88 = bitcast %TokenTree* %tt3 to i8*
  %89 = bitcast %TokenTree* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 48, i1 false)
; invoke proc_macro2::Span::_new_stable
  %90 = invoke i32 @_ZN11proc_macro24Span11_new_stable17h938b6d2ea5159f26E()
          to label %bb56 unwind label %cleanup9

bb52:                                             ; preds = %bb51
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  %_85.0 = load i8*, i8** %91, align 8, !nonnull !20
  %92 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  %_85.1 = load i64, i64* %92, align 8
; invoke proc_macro2::parse::lex_error
  invoke void @_ZN11proc_macro25parse9lex_error17h198ed6e315ec5345E(i8* nonnull align 1 %_85.0, i64 %_85.1)
          to label %bb55 unwind label %cleanup6

bb55:                                             ; preds = %bb52
  %93 = bitcast %"core::result::Result<fallback::TokenStream, fallback::LexError>"* %0 to {}**
  store {}* null, {}** %93, align 8
  br label %bb61

bb70:                                             ; preds = %cleanup6
  br label %bb64

cleanup6:                                         ; preds = %bb52
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  %96 = extractvalue { i8*, i32 } %94, 1
  %97 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %95, i8** %97, align 8
  %98 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %96, i32* %98, align 8
  br label %bb70

bb61:                                             ; preds = %bb19, %bb16, %bb60, %bb55
; invoke core::ptr::drop_in_place<alloc::vec::Vec<(proc_macro2::Delimiter,alloc::vec::Vec<proc_macro2::TokenTree>)>>
  invoke void @"_ZN4core3ptr122drop_in_place$LT$alloc..vec..Vec$LT$$LP$proc_macro2..Delimiter$C$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$RP$$GT$$GT$17hd2f3c047bc7be274E"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %stack)
          to label %bb62 unwind label %cleanup

bb56:                                             ; preds = %bb54
  store i32 %90, i32* %3, align 4
  %99 = bitcast %Span* %_88 to i8*
  %100 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 4 %100, i64 4, i1 false)
  %101 = bitcast %Span* %_88 to i32*
  %102 = load i32, i32* %101, align 4
; invoke proc_macro2::TokenTree::set_span
  invoke void @_ZN11proc_macro29TokenTree8set_span17h8f1b16535346a445E(%TokenTree* align 8 dereferenceable(48) %tt3, i32 %102)
          to label %bb57 unwind label %cleanup9

bb69:                                             ; preds = %cleanup9
  %103 = load i8, i8* %_95, align 1, !range !2
  %104 = trunc i8 %103 to i1
  br i1 %104, label %bb68, label %bb64

cleanup9:                                         ; preds = %bb57, %bb56, %bb54
  %105 = landingpad { i8*, i32 }
          cleanup
  %106 = extractvalue { i8*, i32 } %105, 0
  %107 = extractvalue { i8*, i32 } %105, 1
  %108 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %106, i8** %108, align 8
  %109 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %107, i32* %109, align 8
  br label %bb69

bb57:                                             ; preds = %bb56
  store i8 0, i8* %_95, align 1
  %110 = bitcast %TokenTree* %_92 to i8*
  %111 = bitcast %TokenTree* %tt3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 48, i1 false)
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h3f5781f67b14714cE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %trees, %TokenTree* noalias nocapture dereferenceable(48) %_92)
          to label %bb58 unwind label %cleanup9

bb58:                                             ; preds = %bb57
  %112 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %rest.07, i8** %112, align 8
  %113 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %rest.18, i64* %113, align 8
  store i8 0, i8* %_95, align 1
  br label %bb2

bb68:                                             ; preds = %bb69
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %tt3) #18
  br label %bb64

bb35:                                             ; preds = %bb34
  %114 = bitcast %"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %_46 to i8*
  %115 = load i8, i8* %114, align 8, !range !23
  %116 = sub i8 %115, 4
  %117 = icmp eq i8 %116, 0
  %_48 = select i1 %117, i64 0, i64 1
  switch i64 %_48, label %bb37 [
    i64 0, label %bb36
    i64 1, label %bb38
  ]

bb37:                                             ; preds = %bb35
  unreachable

bb36:                                             ; preds = %bb35
  %118 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  %_51.0 = load i8*, i8** %118, align 8, !nonnull !20
  %119 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  %_51.1 = load i64, i64* %119, align 8
; invoke proc_macro2::parse::lex_error
  invoke void @_ZN11proc_macro25parse9lex_error17h198ed6e315ec5345E(i8* nonnull align 1 %_51.0, i64 %_51.1)
          to label %bb39 unwind label %cleanup13

bb38:                                             ; preds = %bb35
  %120 = bitcast %"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>"* %_46 to %"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>::Some"*
  %121 = bitcast %"core::option::Option<(Delimiter, alloc::vec::Vec<TokenTree>)>::Some"* %120 to { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*
  %122 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %frame2 to i8*
  %123 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 32, i1 false)
  store i8 1, i8* %_98, align 1
  %124 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %frame1 to i8*
  %125 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %frame2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 32, i1 false)
  %126 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %frame1 to i8*
  %127 = load i8, i8* %126, align 8, !range !110
  store i8 %127, i8* %open_delimiter, align 1
  store i8 0, i8* %_98, align 1
  store i8 1, i8* %_97, align 1
  %128 = getelementptr inbounds { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %frame1, i32 0, i32 2
  %129 = bitcast %"alloc::vec::Vec<TokenTree>"* %outer to i8*
  %130 = bitcast %"alloc::vec::Vec<TokenTree>"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 24, i1 false)
; invoke core::cmp::PartialEq::ne
  %_54 = invoke zeroext i1 @_ZN4core3cmp9PartialEq2ne17h96e11aad982a8cb8E(i8* align 1 dereferenceable(1) %open_delimiter, i8* align 1 dereferenceable(1) %close_delimiter)
          to label %bb40 unwind label %cleanup10

bb40:                                             ; preds = %bb38
  br i1 %_54, label %bb41, label %bb43

bb74:                                             ; preds = %bb71, %bb72, %cleanup10
  %131 = load i8, i8* %_97, align 1, !range !2
  %132 = trunc i8 %131 to i1
  br i1 %132, label %bb73, label %bb76

cleanup10:                                        ; preds = %bb45, %bb44, %bb43, %bb41, %bb38
  %133 = landingpad { i8*, i32 }
          cleanup
  %134 = extractvalue { i8*, i32 } %133, 0
  %135 = extractvalue { i8*, i32 } %133, 1
  %136 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %134, i8** %136, align 8
  %137 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %135, i32* %137, align 8
  br label %bb74

bb43:                                             ; preds = %bb40
; invoke proc_macro2::parse::Cursor::advance
  %138 = invoke { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 1)
          to label %bb44 unwind label %cleanup10

bb41:                                             ; preds = %bb40
  %139 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  %_58.0 = load i8*, i8** %139, align 8, !nonnull !20
  %140 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  %_58.1 = load i64, i64* %140, align 8
; invoke proc_macro2::parse::lex_error
  invoke void @_ZN11proc_macro25parse9lex_error17h198ed6e315ec5345E(i8* nonnull align 1 %_58.0, i64 %_58.1)
          to label %bb42 unwind label %cleanup10

bb42:                                             ; preds = %bb41
  %141 = bitcast %"core::result::Result<fallback::TokenStream, fallback::LexError>"* %0 to {}**
  store {}* null, {}** %141, align 8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  invoke void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %outer)
          to label %bb59 unwind label %cleanup11

bb59:                                             ; preds = %bb42
  store i8 0, i8* %_97, align 1
  br label %bb60

bb76:                                             ; preds = %bb73, %bb74, %cleanup11
  %142 = load i8, i8* %_98, align 1, !range !2
  %143 = trunc i8 %142 to i1
  br i1 %143, label %bb75, label %bb64

cleanup11:                                        ; preds = %bb42
  %144 = landingpad { i8*, i32 }
          cleanup
  %145 = extractvalue { i8*, i32 } %144, 0
  %146 = extractvalue { i8*, i32 } %144, 1
  %147 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %145, i8** %147, align 8
  %148 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %146, i32* %148, align 8
  br label %bb76

bb60:                                             ; preds = %bb39, %bb59
  store i8 0, i8* %_98, align 1
  br label %bb61

bb44:                                             ; preds = %bb43
  %_59.0 = extractvalue { i8*, i64 } %138, 0
  %_59.1 = extractvalue { i8*, i64 } %138, 1
  %149 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %_59.0, i8** %149, align 8
  %150 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %_59.1, i64* %150, align 8
  %_62 = load i8, i8* %open_delimiter, align 1, !range !110
  store i8 0, i8* %_94, align 1
  %151 = bitcast %"alloc::vec::Vec<TokenTree>"* %_64 to i8*
  %152 = bitcast %"alloc::vec::Vec<TokenTree>"* %trees to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 24, i1 false)
; invoke <proc_macro2::fallback::TokenStream as core::convert::From<alloc::vec::Vec<proc_macro2::TokenTree>>>::from
  invoke void @"_ZN127_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..convert..From$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$$GT$4from17hd85b500083c2a678E"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %_63, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %_64)
          to label %bb45 unwind label %cleanup10

bb45:                                             ; preds = %bb44
; invoke proc_macro2::fallback::Group::new
  invoke void @_ZN11proc_macro28fallback5Group3new17h5d634dc08de01f30E(%"fallback::Group"* noalias nocapture sret(%"fallback::Group") dereferenceable(32) %g, i8 %_62, %"fallback::TokenStream"* noalias nocapture dereferenceable(24) %_63)
          to label %bb46 unwind label %cleanup10

bb46:                                             ; preds = %bb45
  store i8 1, i8* %_96, align 1
; invoke proc_macro2::fallback::Group::set_span
  invoke void @_ZN11proc_macro28fallback5Group8set_span17hd52bfa0c4013e149E(%"fallback::Group"* align 8 dereferenceable(32) %g)
          to label %bb47 unwind label %cleanup12

bb47:                                             ; preds = %bb46
  store i8 0, i8* %_97, align 1
  %153 = bitcast %"alloc::vec::Vec<TokenTree>"* %_68 to i8*
  %154 = bitcast %"alloc::vec::Vec<TokenTree>"* %outer to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 24, i1 false)
  store i8 1, i8* %_94, align 1
  %155 = bitcast %"alloc::vec::Vec<TokenTree>"* %trees to i8*
  %156 = bitcast %"alloc::vec::Vec<TokenTree>"* %_68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 24, i1 false)
  store i8 0, i8* %_96, align 1
  %157 = bitcast %"fallback::Group"* %_73 to i8*
  %158 = bitcast %"fallback::Group"* %g to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 32, i1 false)
; invoke proc_macro2::Group::_new_stable
  invoke void @_ZN11proc_macro25Group11_new_stable17hd2a5676ccafa172dE(%Group* noalias nocapture sret(%Group) dereferenceable(40) %_72, %"fallback::Group"* noalias nocapture dereferenceable(32) %_73)
          to label %bb48 unwind label %cleanup12

bb72:                                             ; preds = %cleanup12
  %159 = load i8, i8* %_96, align 1, !range !2
  %160 = trunc i8 %159 to i1
  br i1 %160, label %bb71, label %bb74

cleanup12:                                        ; preds = %bb48, %bb47, %bb46
  %161 = landingpad { i8*, i32 }
          cleanup
  %162 = extractvalue { i8*, i32 } %161, 0
  %163 = extractvalue { i8*, i32 } %161, 1
  %164 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %162, i8** %164, align 8
  %165 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %163, i32* %165, align 8
  br label %bb72

bb48:                                             ; preds = %bb47
  %166 = bitcast %TokenTree* %_71 to %"TokenTree::Group"*
  %167 = getelementptr inbounds %"TokenTree::Group", %"TokenTree::Group"* %166, i32 0, i32 1
  %168 = bitcast %Group* %167 to i8*
  %169 = bitcast %Group* %_72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 40, i1 false)
  %170 = bitcast %TokenTree* %_71 to i32*
  store i32 0, i32* %170, align 8
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h3f5781f67b14714cE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %trees, %TokenTree* noalias nocapture dereferenceable(48) %_71)
          to label %bb49 unwind label %cleanup12

bb49:                                             ; preds = %bb48
  store i8 0, i8* %_96, align 1
  store i8 0, i8* %_97, align 1
  store i8 0, i8* %_98, align 1
  br label %bb2

bb71:                                             ; preds = %bb72
; call core::ptr::drop_in_place<proc_macro2::fallback::Group>
  call void @"_ZN4core3ptr49drop_in_place$LT$proc_macro2..fallback..Group$GT$17h13f8c54853fc68c6E"(%"fallback::Group"* %g) #18
  br label %bb74

bb73:                                             ; preds = %bb74
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %outer) #18
  br label %bb76

bb75:                                             ; preds = %bb76
  %171 = getelementptr inbounds { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %frame1, i32 0, i32 2
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %171) #18
  br label %bb64

bb39:                                             ; preds = %bb36
  %172 = bitcast %"core::result::Result<fallback::TokenStream, fallback::LexError>"* %0 to {}**
  store {}* null, {}** %172, align 8
  br label %bb60

bb77:                                             ; preds = %cleanup13
  br label %bb64

cleanup13:                                        ; preds = %bb36
  %173 = landingpad { i8*, i32 }
          cleanup
  %174 = extractvalue { i8*, i32 } %173, 0
  %175 = extractvalue { i8*, i32 } %173, 1
  %176 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %174, i8** %176, align 8
  %177 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %175, i32* %177, align 8
  br label %bb77

bb26:                                             ; preds = %bb25
  %_33.0 = extractvalue { i8*, i64 } %54, 0
  %_33.1 = extractvalue { i8*, i64 } %54, 1
  %178 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %_33.0, i8** %178, align 8
  %179 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %_33.1, i64* %179, align 8
  store i8 0, i8* %_94, align 1
  %180 = bitcast %"alloc::vec::Vec<TokenTree>"* %_37 to i8*
  %181 = bitcast %"alloc::vec::Vec<TokenTree>"* %trees to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %181, i64 24, i1 false)
  %182 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %frame to i8*
  store i8 %open_delimiter14, i8* %182, align 8
  %183 = getelementptr inbounds { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %frame, i32 0, i32 2
  %184 = bitcast %"alloc::vec::Vec<TokenTree>"* %183 to i8*
  %185 = bitcast %"alloc::vec::Vec<TokenTree>"* %_37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* align 8 %185, i64 24, i1 false)
  %186 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %_40 to i8*
  %187 = bitcast { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* %frame to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %187, i64 32, i1 false)
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hf6eca3128bf369fbE"(%"alloc::vec::Vec<(Delimiter, alloc::vec::Vec<TokenTree>)>"* align 8 dereferenceable(24) %stack, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }* noalias nocapture dereferenceable(32) %_40)
          to label %bb27 unwind label %cleanup5

bb27:                                             ; preds = %bb26
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h3bd7eafdf39cd676E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %_41)
          to label %bb66 unwind label %cleanup5

bb66:                                             ; preds = %bb27
  store i8 1, i8* %_94, align 1
  %188 = bitcast %"alloc::vec::Vec<TokenTree>"* %trees to i8*
  %189 = bitcast %"alloc::vec::Vec<TokenTree>"* %_41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %189, i64 24, i1 false)
  br label %bb2

bb14:                                             ; preds = %bb11
  %_24.0 = extractvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %47, 0
  %_24.1 = extractvalue { [0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]*, i64 } %47, 1
; invoke core::slice::<impl [T]>::last
  %190 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h347b61df47be93c8E"([0 x { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }]* nonnull align 8 %_24.0, i64 %_24.1)
          to label %bb15 unwind label %cleanup5

bb15:                                             ; preds = %bb14
  store i64* %190, i64** %_22, align 8
  %191 = bitcast i64** %_22 to {}**
  %192 = load {}*, {}** %191, align 8
  %193 = icmp eq {}* %192, null
  %_26 = select i1 %193, i64 0, i64 1
  switch i64 %_26, label %bb17 [
    i64 0, label %bb18
    i64 1, label %bb16
  ]

bb17:                                             ; preds = %bb15
  unreachable

bb18:                                             ; preds = %bb15
  store i8 0, i8* %_94, align 1
  %194 = bitcast %"alloc::vec::Vec<TokenTree>"* %_28 to i8*
  %195 = bitcast %"alloc::vec::Vec<TokenTree>"* %trees to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 24, i1 false)
; invoke <proc_macro2::fallback::TokenStream as core::convert::From<alloc::vec::Vec<proc_macro2::TokenTree>>>::from
  invoke void @"_ZN127_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..convert..From$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$$GT$4from17hd85b500083c2a678E"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %_27, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %_28)
          to label %bb19 unwind label %cleanup5

bb16:                                             ; preds = %bb15
  %196 = bitcast i64** %_22 to { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }**
  %_frame = load { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }*, { i8, [7 x i8], %"alloc::vec::Vec<TokenTree>" }** %196, align 8, !nonnull !20
  %197 = bitcast %"core::result::Result<fallback::TokenStream, fallback::LexError>"* %0 to {}**
  store {}* null, {}** %197, align 8
  br label %bb61

bb19:                                             ; preds = %bb18
  %198 = bitcast %"core::result::Result<fallback::TokenStream, fallback::LexError>"* %0 to %"core::result::Result<fallback::TokenStream, fallback::LexError>::Ok"*
  %199 = bitcast %"core::result::Result<fallback::TokenStream, fallback::LexError>::Ok"* %198 to %"fallback::TokenStream"*
  %200 = bitcast %"fallback::TokenStream"* %199 to i8*
  %201 = bitcast %"fallback::TokenStream"* %_27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %201, i64 24, i1 false)
  br label %bb61

bb62:                                             ; preds = %bb61
  %202 = load i8, i8* %_94, align 1, !range !2
  %203 = trunc i8 %202 to i1
  br i1 %203, label %bb67, label %bb63

bb63:                                             ; preds = %bb67, %bb62
  store i8 0, i8* %_94, align 1
  ret void

bb67:                                             ; preds = %bb62
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %trees)
  br label %bb63

bb6:                                              ; preds = %bb5
  %204 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %rest.015, i8** %204, align 8
  %205 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %rest.116, i64* %205, align 8
  br label %bb2

bb78:                                             ; preds = %cleanup17
  br label %bb64

cleanup17:                                        ; preds = %bb5
  %206 = landingpad { i8*, i32 }
          cleanup
  %207 = extractvalue { i8*, i32 } %206, 0
  %208 = extractvalue { i8*, i32 } %206, 1
  %209 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %207, i8** %209, align 8
  %210 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %208, i32* %210, align 8
  br label %bb78

bb65:                                             ; preds = %bb79, %bb80
  %211 = bitcast { i8*, i32 }* %4 to i8**
  %212 = load i8*, i8** %211, align 8
  %213 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %214 = load i32, i32* %213, align 8
  %215 = insertvalue { i8*, i32 } undef, i8* %212, 0
  %216 = insertvalue { i8*, i32 } %215, i32 %214, 1
  resume { i8*, i32 } %216

bb79:                                             ; preds = %bb80
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %trees) #18
  br label %bb65
}

; proc_macro2::parse::lex_error
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse9lex_error17h198ed6e315ec5345E(i8* nonnull align 1 %cursor.0, i64 %cursor.1) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::parse::leaf_token
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse10leaf_token17h561368ad5c786ce2E(%"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>") dereferenceable(64) %0, i8* nonnull align 1 %input.0, i64 %input.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_31 = alloca i8, align 1
  %_30 = alloca i8, align 1
  %_29 = alloca %Ident, align 8
  %_28 = alloca %TokenTree, align 8
  %_26 = alloca { { i8*, i64 }, %TokenTree }, align 8
  %i = alloca %Ident, align 8
  %_21 = alloca %"core::result::Result<(parse::Cursor, Ident), parse::Reject>", align 8
  %_20 = alloca %Punct, align 4
  %_19 = alloca %TokenTree, align 8
  %_17 = alloca { { i8*, i64 }, %TokenTree }, align 8
  %p = alloca %Punct, align 4
  %_12 = alloca %"core::result::Result<(parse::Cursor, Punct), parse::Reject>", align 8
  %_11 = alloca %"fallback::Literal", align 8
  %_10 = alloca %Literal, align 8
  %_9 = alloca %TokenTree, align 8
  %_7 = alloca { { i8*, i64 }, %TokenTree }, align 8
  %l = alloca %"fallback::Literal", align 8
  %_2 = alloca %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>", align 8
  store i8 0, i8* %_31, align 1
  store i8 0, i8* %_30, align 1
  store i8 1, i8* %_31, align 1
; call proc_macro2::parse::literal
  call void @_ZN11proc_macro25parse7literal17h1c578926687178e3E(%"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>") dereferenceable(40) %_2, i8* nonnull align 1 %input.0, i64 %input.1)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %_2 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_4 = select i1 %4, i64 1, i64 0
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %6 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %_2 to %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"*
  %7 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"* %6 to { { i8*, i64 }, %"fallback::Literal" }*
  %8 = bitcast { { i8*, i64 }, %"fallback::Literal" }* %7 to { i8*, i64 }*
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 0
  %input.05 = load i8*, i8** %9, align 8, !nonnull !20
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 1
  %input.16 = load i64, i64* %10, align 8
  store i8 0, i8* %_31, align 1
  %11 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %_2 to %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"*
  %12 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"* %11 to { { i8*, i64 }, %"fallback::Literal" }*
  %13 = getelementptr inbounds { { i8*, i64 }, %"fallback::Literal" }, { { i8*, i64 }, %"fallback::Literal" }* %12, i32 0, i32 1
  %14 = bitcast %"fallback::Literal"* %l to i8*
  %15 = bitcast %"fallback::Literal"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
  %16 = bitcast %"fallback::Literal"* %_11 to i8*
  %17 = bitcast %"fallback::Literal"* %l to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
; invoke proc_macro2::Literal::_new_stable
  invoke void @_ZN11proc_macro27Literal11_new_stable17h3a3234ec130b995fE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %_10, %"fallback::Literal"* noalias nocapture dereferenceable(24) %_11)
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke proc_macro2::parse::punct
  invoke void @_ZN11proc_macro25parse5punct17h378e065c4d7be0f7E(%"core::result::Result<(parse::Cursor, Punct), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, Punct), parse::Reject>") dereferenceable(32) %_12, i8* nonnull align 1 %input.0, i64 %input.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %18 = getelementptr inbounds %"core::result::Result<(parse::Cursor, Punct), parse::Reject>", %"core::result::Result<(parse::Cursor, Punct), parse::Reject>"* %_12, i32 0, i32 1
  %19 = load i32, i32* %18, align 8, !range !22
  %20 = sub i32 %19, 1114112
  %21 = icmp eq i32 %20, 0
  %_14 = select i1 %21, i64 1, i64 0
  %22 = icmp eq i64 %_14, 0
  br i1 %22, label %bb6, label %bb7

bb22:                                             ; preds = %cleanup
  %23 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %_2 to {}**
  %24 = load {}*, {}** %23, align 8
  %25 = icmp eq {}* %24, null
  %_34 = select i1 %25, i64 1, i64 0
  %26 = icmp eq i64 %_34, 0
  br i1 %26, label %bb20, label %bb11

cleanup:                                          ; preds = %bb2, %bb14, %bb7, %bb4
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb22

bb6:                                              ; preds = %bb5
  %32 = bitcast %"core::result::Result<(parse::Cursor, Punct), parse::Reject>"* %_12 to %"core::result::Result<(parse::Cursor, Punct), parse::Reject>::Ok"*
  %33 = bitcast %"core::result::Result<(parse::Cursor, Punct), parse::Reject>::Ok"* %32 to { { i8*, i64 }, %Punct, [1 x i32] }*
  %34 = bitcast { { i8*, i64 }, %Punct, [1 x i32] }* %33 to { i8*, i64 }*
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %34, i32 0, i32 0
  %input.03 = load i8*, i8** %35, align 8, !nonnull !20
  %36 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %34, i32 0, i32 1
  %input.14 = load i64, i64* %36, align 8
  %37 = bitcast %"core::result::Result<(parse::Cursor, Punct), parse::Reject>"* %_12 to %"core::result::Result<(parse::Cursor, Punct), parse::Reject>::Ok"*
  %38 = bitcast %"core::result::Result<(parse::Cursor, Punct), parse::Reject>::Ok"* %37 to { { i8*, i64 }, %Punct, [1 x i32] }*
  %39 = getelementptr inbounds { { i8*, i64 }, %Punct, [1 x i32] }, { { i8*, i64 }, %Punct, [1 x i32] }* %38, i32 0, i32 1
  %40 = bitcast %Punct* %p to i8*
  %41 = bitcast %Punct* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 8 %41, i64 12, i1 false)
  %42 = bitcast %Punct* %_20 to i8*
  %43 = bitcast %Punct* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %43, i64 12, i1 false)
  %44 = bitcast %TokenTree* %_19 to %"TokenTree::Punct"*
  %45 = getelementptr inbounds %"TokenTree::Punct", %"TokenTree::Punct"* %44, i32 0, i32 1
  %46 = bitcast %Punct* %45 to i8*
  %47 = bitcast %Punct* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 12, i1 false)
  %48 = bitcast %TokenTree* %_19 to i32*
  store i32 2, i32* %48, align 8
  %49 = bitcast { { i8*, i64 }, %TokenTree }* %_17 to { i8*, i64 }*
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 0
  store i8* %input.03, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 1
  store i64 %input.14, i64* %51, align 8
  %52 = getelementptr inbounds { { i8*, i64 }, %TokenTree }, { { i8*, i64 }, %TokenTree }* %_17, i32 0, i32 1
  %53 = bitcast %TokenTree* %52 to i8*
  %54 = bitcast %TokenTree* %_19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 48, i1 false)
  %55 = bitcast %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>::Ok"*
  %56 = bitcast %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>::Ok"* %55 to { { i8*, i64 }, %TokenTree }*
  %57 = bitcast { { i8*, i64 }, %TokenTree }* %56 to i8*
  %58 = bitcast { { i8*, i64 }, %TokenTree }* %_17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 64, i1 false)
  br label %bb19

bb7:                                              ; preds = %bb5
; invoke proc_macro2::parse::ident
  invoke void @_ZN11proc_macro25parse5ident17hd7d76b3d74efc0b9E(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>") dereferenceable(56) %_21, i8* nonnull align 1 %input.0, i64 %input.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  store i8 1, i8* %_30, align 1
  %59 = getelementptr inbounds %"core::result::Result<(parse::Cursor, Ident), parse::Reject>", %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* %_21, i32 0, i32 1
  %60 = load i32, i32* %59, align 8, !range !103
  %61 = sub i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %_23 = select i1 %62, i64 1, i64 0
  %63 = icmp eq i64 %_23, 0
  br i1 %63, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %64 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* %_21 to %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Ok"*
  %65 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Ok"* %64 to { { i8*, i64 }, %Ident }*
  %66 = bitcast { { i8*, i64 }, %Ident }* %65 to { i8*, i64 }*
  %67 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %66, i32 0, i32 0
  %input.01 = load i8*, i8** %67, align 8, !nonnull !20
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %66, i32 0, i32 1
  %input.12 = load i64, i64* %68, align 8
  store i8 0, i8* %_30, align 1
  %69 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* %_21 to %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Ok"*
  %70 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Ok"* %69 to { { i8*, i64 }, %Ident }*
  %71 = getelementptr inbounds { { i8*, i64 }, %Ident }, { { i8*, i64 }, %Ident }* %70, i32 0, i32 1
  %72 = bitcast %Ident* %i to i8*
  %73 = bitcast %Ident* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 40, i1 false)
  %74 = bitcast %Ident* %_29 to i8*
  %75 = bitcast %Ident* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 40, i1 false)
  %76 = bitcast %TokenTree* %_28 to %"TokenTree::Ident"*
  %77 = getelementptr inbounds %"TokenTree::Ident", %"TokenTree::Ident"* %76, i32 0, i32 1
  %78 = bitcast %Ident* %77 to i8*
  %79 = bitcast %Ident* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 40, i1 false)
  %80 = bitcast %TokenTree* %_28 to i32*
  store i32 1, i32* %80, align 8
  %81 = bitcast { { i8*, i64 }, %TokenTree }* %_26 to { i8*, i64 }*
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 0
  store i8* %input.01, i8** %82, align 8
  %83 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 1
  store i64 %input.12, i64* %83, align 8
  %84 = getelementptr inbounds { { i8*, i64 }, %TokenTree }, { { i8*, i64 }, %TokenTree }* %_26, i32 0, i32 1
  %85 = bitcast %TokenTree* %84 to i8*
  %86 = bitcast %TokenTree* %_28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 48, i1 false)
  %87 = bitcast %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>::Ok"*
  %88 = bitcast %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>::Ok"* %87 to { { i8*, i64 }, %TokenTree }*
  %89 = bitcast { { i8*, i64 }, %TokenTree }* %88 to i8*
  %90 = bitcast { { i8*, i64 }, %TokenTree }* %_26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 64, i1 false)
  br label %bb15

bb10:                                             ; preds = %bb8
  %91 = getelementptr inbounds %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>", %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>"* %0, i32 0, i32 1
  store i32 4, i32* %91, align 8
  br label %bb15

bb15:                                             ; preds = %bb9, %bb10
  %92 = getelementptr inbounds %"core::result::Result<(parse::Cursor, Ident), parse::Reject>", %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* %_21, i32 0, i32 1
  %93 = load i32, i32* %92, align 8, !range !103
  %94 = sub i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %_32 = select i1 %95, i64 1, i64 0
  %96 = icmp eq i64 %_32, 0
  br i1 %96, label %bb13, label %bb12

bb13:                                             ; preds = %bb15
  %97 = load i8, i8* %_30, align 1, !range !2
  %98 = trunc i8 %97 to i1
  br i1 %98, label %bb14, label %bb12

bb12:                                             ; preds = %bb14, %bb13, %bb15
  store i8 0, i8* %_30, align 1
  br label %bb19

bb14:                                             ; preds = %bb13
  %99 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* %_21 to %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Ok"*
  %100 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Ok"* %99 to { { i8*, i64 }, %Ident }*
  %101 = getelementptr inbounds { { i8*, i64 }, %Ident }, { { i8*, i64 }, %Ident }* %100, i32 0, i32 1
; invoke core::ptr::drop_in_place<proc_macro2::Ident>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Ident$GT$17ha5a69e48e88af264E"(%Ident* %101)
          to label %bb12 unwind label %cleanup

bb19:                                             ; preds = %bb3, %bb6, %bb12
  %102 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %_2 to {}**
  %103 = load {}*, {}** %102, align 8
  %104 = icmp eq {}* %103, null
  %_33 = select i1 %104, i64 1, i64 0
  %105 = icmp eq i64 %_33, 0
  br i1 %105, label %bb17, label %bb16

bb3:                                              ; preds = %bb2
  %106 = bitcast %TokenTree* %_9 to %"TokenTree::Literal"*
  %107 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %106, i32 0, i32 1
  %108 = bitcast %Literal* %107 to i8*
  %109 = bitcast %Literal* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 32, i1 false)
  %110 = bitcast %TokenTree* %_9 to i32*
  store i32 3, i32* %110, align 8
  %111 = bitcast { { i8*, i64 }, %TokenTree }* %_7 to { i8*, i64 }*
  %112 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %111, i32 0, i32 0
  store i8* %input.05, i8** %112, align 8
  %113 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %111, i32 0, i32 1
  store i64 %input.16, i64* %113, align 8
  %114 = getelementptr inbounds { { i8*, i64 }, %TokenTree }, { { i8*, i64 }, %TokenTree }* %_7, i32 0, i32 1
  %115 = bitcast %TokenTree* %114 to i8*
  %116 = bitcast %TokenTree* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 48, i1 false)
  %117 = bitcast %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>::Ok"*
  %118 = bitcast %"core::result::Result<(parse::Cursor, TokenTree), parse::Reject>::Ok"* %117 to { { i8*, i64 }, %TokenTree }*
  %119 = bitcast { { i8*, i64 }, %TokenTree }* %118 to i8*
  %120 = bitcast { { i8*, i64 }, %TokenTree }* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 64, i1 false)
  br label %bb19

bb20:                                             ; preds = %bb22
  %121 = load i8, i8* %_31, align 1, !range !2
  %122 = trunc i8 %121 to i1
  br i1 %122, label %bb21, label %bb11

bb11:                                             ; preds = %bb21, %bb20, %bb22
  %123 = bitcast { i8*, i32 }* %1 to i8**
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %126 = load i32, i32* %125, align 8
  %127 = insertvalue { i8*, i32 } undef, i8* %124, 0
  %128 = insertvalue { i8*, i32 } %127, i32 %126, 1
  resume { i8*, i32 } %128

bb21:                                             ; preds = %bb20
  %129 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %_2 to %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"*
  %130 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"* %129 to { { i8*, i64 }, %"fallback::Literal" }*
  %131 = getelementptr inbounds { { i8*, i64 }, %"fallback::Literal" }, { { i8*, i64 }, %"fallback::Literal" }* %130, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  call void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17hbda93f62f7510cdeE"(%"fallback::Literal"* %131) #18
  br label %bb11

bb17:                                             ; preds = %bb19
  %132 = load i8, i8* %_31, align 1, !range !2
  %133 = trunc i8 %132 to i1
  br i1 %133, label %bb18, label %bb16

bb16:                                             ; preds = %bb18, %bb17, %bb19
  store i8 0, i8* %_31, align 1
  ret void

bb18:                                             ; preds = %bb17
  %134 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %_2 to %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"*
  %135 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"* %134 to { { i8*, i64 }, %"fallback::Literal" }*
  %136 = getelementptr inbounds { { i8*, i64 }, %"fallback::Literal" }, { { i8*, i64 }, %"fallback::Literal" }* %135, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  call void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17hbda93f62f7510cdeE"(%"fallback::Literal"* %136)
  br label %bb16
}

; proc_macro2::parse::ident
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse5ident17hd7d76b3d74efc0b9E(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>") dereferenceable(56) %0, i8* nonnull align 1 %1, i64 %2) unnamed_addr #1 {
start:
  %_7 = alloca i64*, align 8
  %_4 = alloca { i64*, i64* }, align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %2, i64* %4, align 8
; call core::slice::<impl [T]>::iter
  %5 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h648dde61b10f65cdE"([0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc571 to [0 x { [0 x i8]*, i64 }]*), i64 7)
  store { i64*, i64* } %5, { i64*, i64* }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast i64** %_7 to { i8*, i64 }**
  store { i8*, i64 }* %input, { i8*, i64 }** %6, align 8
  %7 = load i64*, i64** %_7, align 8, !nonnull !20
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
  %_2 = call zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hc77fc040b5603a94E"({ i64*, i64* }* align 8 dereferenceable(16) %_4, i64* align 8 dereferenceable(16) %7)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  %_9.0 = load i8*, i8** %8, align 8, !nonnull !20
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  %_9.1 = load i64, i64* %9, align 8
; call proc_macro2::parse::ident_any
  call void @_ZN11proc_macro25parse9ident_any17h218ecc90bf327efaE(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>") dereferenceable(56) %0, i8* nonnull align 1 %_9.0, i64 %_9.1)
  br label %bb5

bb3:                                              ; preds = %bb2
  %10 = getelementptr inbounds %"core::result::Result<(parse::Cursor, Ident), parse::Reject>", %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* %0, i32 0, i32 1
  store i32 2, i32* %10, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  ret void
}

; proc_macro2::parse::ident::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN11proc_macro25parse5ident28_$u7b$$u7b$closure$u7d$$u7d$17h46f2c6595477ff7eE"(i64** align 8 dereferenceable(8) %_1, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %prefix) unnamed_addr #0 {
start:
  %0 = bitcast i64** %_1 to { i8*, i64 }**
  %_3 = load { i8*, i64 }*, { i8*, i64 }** %0, align 8, !nonnull !20
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %prefix, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !20
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %prefix, i32 0, i32 1
  %_4.1 = load i64, i64* %2, align 8
; call proc_macro2::parse::Cursor::starts_with
  %3 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %_3, [0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %3
}

; proc_macro2::parse::ident_any
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse9ident_any17h218ecc90bf327efaE(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>") dereferenceable(56) %0, i8* nonnull align 1 %1, i64 %2) unnamed_addr #1 {
start:
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %_38 = alloca %Ident, align 8
  %_36 = alloca { { i8*, i64 }, %Ident }, align 8
  %_35 = alloca %Span, align 4
  %ident1 = alloca %Ident, align 8
  %_29 = alloca %Ident, align 8
  %_27 = alloca { { i8*, i64 }, %Ident }, align 8
  %_26 = alloca %Span, align 4
  %ident = alloca %Ident, align 8
  %val = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_16 = alloca %"core::result::Result<(parse::Cursor, &str), parse::Reject>", align 8
  %_15 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>", align 8
  %_14 = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %sym = alloca { [0 x i8]*, i64 }, align 8
  %input = alloca { i8*, i64 }, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %2, i64* %6, align 8
; call proc_macro2::parse::Cursor::starts_with
  %raw = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1709 to [0 x i8]*), i64 2)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = icmp ule i1 %raw, true
  call void @llvm.assume(i1 %7)
  %_9 = zext i1 %raw to i64
  %_11.0 = shl i64 %_9, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call proc_macro2::parse::Cursor::advance
  %8 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %_11.0)
  %rest.0 = extractvalue { i8*, i64 } %8, 0
  %rest.1 = extractvalue { i8*, i64 } %8, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call proc_macro2::parse::ident_not_raw
  call void @_ZN11proc_macro25parse13ident_not_raw17h903fae6b922b3d6eE(%"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, &str), parse::Reject>") dereferenceable(32) %_16, i8* nonnull align 1 %rest.0, i64 %rest.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h872dfb803c62b9c2E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>") dereferenceable(32) %_15, %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture dereferenceable(32) %_16)
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* %_15 to {}**
  %10 = load {}*, {}** %9, align 8
  %11 = icmp eq {}* %10, null
  %_18 = select i1 %11, i64 1, i64 0
  switch i64 %_18, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* %_15 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Continue"*
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Continue"* %12 to { { i8*, i64 }, { [0 x i8]*, i64 } }*
  %14 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %val to i8*
  %15 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 32, i1 false)
  %16 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_14 to i8*
  %17 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 32, i1 false)
  %18 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_14 to { i8*, i64 }*
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %18, i32 0, i32 0
  %rest.02 = load i8*, i8** %19, align 8, !nonnull !20
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %18, i32 0, i32 1
  %rest.13 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { { i8*, i64 }, { [0 x i8]*, i64 } }, { { i8*, i64 }, { [0 x i8]*, i64 } }* %_14, i32 0, i32 1
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 0
  %23 = load [0 x i8]*, [0 x i8]** %22, align 8, !nonnull !20
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sym, i32 0, i32 0
  store [0 x i8]* %23, [0 x i8]** %26, align 8
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sym, i32 0, i32 1
  store i64 %25, i64* %27, align 8
  %_22 = xor i1 %raw, true
  br i1 %_22, label %bb9, label %bb10

bb8:                                              ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbb6ca65419a1100fE"(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>") dereferenceable(56) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1510 to %"core::panic::location::Location"*))
  br label %bb18

bb18:                                             ; preds = %bb17, %bb14, %bb12, %bb8
  ret void

bb10:                                             ; preds = %bb6
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_30 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h25048be4cf3ce7b1E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %sym, { [0 x i8]*, i64 }* align 8 dereferenceable(16) bitcast (<{ i8*, [8 x i8] }>* @alloc546 to { [0 x i8]*, i64 }*))
  br label %bb13

bb9:                                              ; preds = %bb6
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sym, i32 0, i32 0
  %_25.0 = load [0 x i8]*, [0 x i8]** %28, align 8, !nonnull !20
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sym, i32 0, i32 1
  %_25.1 = load i64, i64* %29, align 8
; call proc_macro2::Span::call_site
  %30 = call i32 @_ZN11proc_macro24Span9call_site17h75260ddb1e6dc3b2E()
  store i32 %30, i32* %4, align 4
  %31 = bitcast %Span* %_26 to i8*
  %32 = bitcast i32* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 4, i1 false)
  br label %bb11

bb11:                                             ; preds = %bb9
  %33 = bitcast %Span* %_26 to i32*
  %34 = load i32, i32* %33, align 4
; call proc_macro2::Ident::new
  call void @_ZN11proc_macro25Ident3new17h89378d74fcb01c26E(%Ident* noalias nocapture sret(%Ident) dereferenceable(40) %ident, [0 x i8]* nonnull align 1 %_25.0, i64 %_25.1, i32 %34)
  br label %bb12

bb12:                                             ; preds = %bb11
  %35 = bitcast %Ident* %_29 to i8*
  %36 = bitcast %Ident* %ident to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 40, i1 false)
  %37 = bitcast { { i8*, i64 }, %Ident }* %_27 to { i8*, i64 }*
  %38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %37, i32 0, i32 0
  store i8* %rest.02, i8** %38, align 8
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %37, i32 0, i32 1
  store i64 %rest.13, i64* %39, align 8
  %40 = getelementptr inbounds { { i8*, i64 }, %Ident }, { { i8*, i64 }, %Ident }* %_27, i32 0, i32 1
  %41 = bitcast %Ident* %40 to i8*
  %42 = bitcast %Ident* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 40, i1 false)
  %43 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Ok"*
  %44 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Ok"* %43 to { { i8*, i64 }, %Ident }*
  %45 = bitcast { { i8*, i64 }, %Ident }* %44 to i8*
  %46 = bitcast { { i8*, i64 }, %Ident }* %_27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 56, i1 false)
  br label %bb18

bb13:                                             ; preds = %bb10
  br i1 %_30, label %bb14, label %bb15

bb15:                                             ; preds = %bb13
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sym, i32 0, i32 0
  %_34.0 = load [0 x i8]*, [0 x i8]** %47, align 8, !nonnull !20
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sym, i32 0, i32 1
  %_34.1 = load i64, i64* %48, align 8
; call proc_macro2::Span::call_site
  %49 = call i32 @_ZN11proc_macro24Span9call_site17h75260ddb1e6dc3b2E()
  store i32 %49, i32* %3, align 4
  %50 = bitcast %Span* %_35 to i8*
  %51 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 4, i1 false)
  br label %bb16

bb14:                                             ; preds = %bb13
  %52 = getelementptr inbounds %"core::result::Result<(parse::Cursor, Ident), parse::Reject>", %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* %0, i32 0, i32 1
  store i32 2, i32* %52, align 8
  br label %bb18

bb16:                                             ; preds = %bb15
  %53 = bitcast %Span* %_35 to i32*
  %54 = load i32, i32* %53, align 4
; call proc_macro2::Ident::_new_raw
  call void @_ZN11proc_macro25Ident8_new_raw17h3ddbf89fdb8e0588E(%Ident* noalias nocapture sret(%Ident) dereferenceable(40) %ident1, [0 x i8]* nonnull align 1 %_34.0, i64 %_34.1, i32 %54)
  br label %bb17

bb17:                                             ; preds = %bb16
  %55 = bitcast %Ident* %_38 to i8*
  %56 = bitcast %Ident* %ident1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 40, i1 false)
  %57 = bitcast { { i8*, i64 }, %Ident }* %_36 to { i8*, i64 }*
  %58 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %57, i32 0, i32 0
  store i8* %rest.02, i8** %58, align 8
  %59 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %57, i32 0, i32 1
  store i64 %rest.13, i64* %59, align 8
  %60 = getelementptr inbounds { { i8*, i64 }, %Ident }, { { i8*, i64 }, %Ident }* %_36, i32 0, i32 1
  %61 = bitcast %Ident* %60 to i8*
  %62 = bitcast %Ident* %_38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 40, i1 false)
  %63 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Ok"*
  %64 = bitcast %"core::result::Result<(parse::Cursor, Ident), parse::Reject>::Ok"* %63 to { { i8*, i64 }, %Ident }*
  %65 = bitcast { { i8*, i64 }, %Ident }* %64 to i8*
  %66 = bitcast { { i8*, i64 }, %Ident }* %_36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 56, i1 false)
  br label %bb18
}

; proc_macro2::parse::ident_not_raw
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse13ident_not_raw17h903fae6b922b3d6eE(%"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, &str), parse::Reject>") dereferenceable(32) %0, i8* nonnull align 1 %1, i64 %2) unnamed_addr #1 {
start:
  %_34 = alloca i64, align 8
  %_26 = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_16 = alloca { i64, i32 }, align 8
  %iter = alloca %"core::str::iter::CharIndices", align 8
  %_14 = alloca %"core::str::iter::CharIndices", align 8
  %_13 = alloca %"core::str::iter::CharIndices", align 8
  %end = alloca i64, align 8
  %_4 = alloca { i64, i32 }, align 8
  %chars = alloca %"core::str::iter::CharIndices", align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %2, i64* %4, align 8
; call proc_macro2::parse::Cursor::char_indices
  call void @_ZN11proc_macro25parse6Cursor12char_indices17h5b5acc4d3cd1d190E(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %chars, { i8*, i64 }* align 8 dereferenceable(16) %input)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %5 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  store { i64, i32 } %5, { i64, i32 }* %_4, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_4, i32 0, i32 1
  %7 = load i32, i32* %6, align 8, !range !22
  %8 = sub i32 %7, 1114112
  %9 = icmp eq i32 %8, 0
  %_6 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_6, 1
  br i1 %10, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  %ch = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_4, i32 0, i32 1
  %_10 = load i32, i32* %ch, align 4, !range !80
; call proc_macro2::fallback::is_ident_start
  %_9 = call zeroext i1 @_ZN11proc_macro28fallback14is_ident_start17hf69be4da804f0785E(i32 %_10)
  br label %bb5

bb3:                                              ; preds = %bb5, %bb2
  %11 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* %0 to {}**
  store {}* null, {}** %11, align 8
  br label %bb18

bb5:                                              ; preds = %bb4
  br i1 %_9, label %bb6, label %bb3

bb6:                                              ; preds = %bb5
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_4, i32 0, i32 1
  %ch1 = load i32, i32* %12, align 8, !range !80
; call proc_macro2::parse::Cursor::len
  %13 = call i64 @_ZN11proc_macro25parse6Cursor3len17h8a72020d0a5d0b7bE({ i8*, i64 }* align 8 dereferenceable(16) %input)
  store i64 %13, i64* %end, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::str::iter::CharIndices"* %_14 to i8*
  %15 = bitcast %"core::str::iter::CharIndices"* %chars to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h15bf28ed3a98aeccE"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %_13, %"core::str::iter::CharIndices"* noalias nocapture dereferenceable(24) %_14)
  br label %bb8

bb8:                                              ; preds = %bb7
  %16 = bitcast %"core::str::iter::CharIndices"* %iter to i8*
  %17 = bitcast %"core::str::iter::CharIndices"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb9

bb9:                                              ; preds = %bb13, %bb8
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %18 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %iter)
  store { i64, i32 } %18, { i64, i32 }* %_16, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
  %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_16, i32 0, i32 1
  %20 = load i32, i32* %19, align 8, !range !22
  %21 = sub i32 %20, 1114112
  %22 = icmp eq i32 %21, 0
  %_19 = select i1 %22, i64 0, i64 1
  switch i64 %_19, label %bb12 [
    i64 0, label %bb15
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb15:                                             ; preds = %bb14, %bb10
  %_29 = load i64, i64* %end, align 8
; call proc_macro2::parse::Cursor::advance
  %23 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %_29)
  %_27.0 = extractvalue { i8*, i64 } %23, 0
  %_27.1 = extractvalue { i8*, i64 } %23, 1
  br label %bb16

bb11:                                             ; preds = %bb10
  %24 = bitcast { i64, i32 }* %_16 to i64*
  %i = load i64, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_16, i32 0, i32 1
  %ch2 = load i32, i32* %25, align 8, !range !80
; call proc_macro2::fallback::is_ident_continue
  %_23 = call zeroext i1 @_ZN11proc_macro28fallback17is_ident_continue17h97e1ecc5a557951cE(i32 %ch2)
  br label %bb13

bb13:                                             ; preds = %bb11
  %_22 = xor i1 %_23, true
  br i1 %_22, label %bb14, label %bb9

bb14:                                             ; preds = %bb13
  store i64 %i, i64* %end, align 8
  br label %bb15

bb16:                                             ; preds = %bb15
  %26 = bitcast { i8*, i64 }* %input to { [0 x i8]*, i64 }*
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0
  %_33.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !nonnull !20
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1
  %_33.1 = load i64, i64* %28, align 8
  %_35 = load i64, i64* %end, align 8
  store i64 %_35, i64* %_34, align 8
  %29 = load i64, i64* %_34, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %30 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h92cbe302d9c6844dE"([0 x i8]* nonnull align 1 %_33.0, i64 %_33.1, i64 %29, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1512 to %"core::panic::location::Location"*))
  %_32.0 = extractvalue { [0 x i8]*, i64 } %30, 0
  %_32.1 = extractvalue { [0 x i8]*, i64 } %30, 1
  br label %bb17

bb17:                                             ; preds = %bb16
  %31 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_26 to { i8*, i64 }*
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %31, i32 0, i32 0
  store i8* %_27.0, i8** %32, align 8
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %31, i32 0, i32 1
  store i64 %_27.1, i64* %33, align 8
  %34 = getelementptr inbounds { { i8*, i64 }, { [0 x i8]*, i64 } }, { { i8*, i64 }, { [0 x i8]*, i64 } }* %_26, i32 0, i32 1
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 0
  store [0 x i8]* %_32.0, [0 x i8]** %35, align 8
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 1
  store i64 %_32.1, i64* %36, align 8
  %37 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, &str), parse::Reject>::Ok"*
  %38 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>::Ok"* %37 to { { i8*, i64 }, { [0 x i8]*, i64 } }*
  %39 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %38 to i8*
  %40 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 32, i1 false)
  br label %bb18

bb18:                                             ; preds = %bb3, %bb17
  ret void
}

; proc_macro2::parse::literal
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse7literal17h1c578926687178e3E(%"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>") dereferenceable(40) %0, i8* nonnull align 1 %1, i64 %2) unnamed_addr #1 {
start:
  %_23 = alloca i64, align 8
  %_19 = alloca %"alloc::string::String", align 8
  %_18 = alloca %"fallback::Literal", align 8
  %_16 = alloca { { i8*, i64 }, %"fallback::Literal" }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  %rest = alloca { i8*, i64 }, align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  %_5.0 = load i8*, i8** %5, align 8, !nonnull !20
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  %_5.1 = load i64, i64* %6, align 8
; call proc_macro2::parse::literal_nocapture
  %7 = call { i8*, i64 } @_ZN11proc_macro25parse17literal_nocapture17h9a5d87cd0be72523E(i8* nonnull align 1 %_5.0, i64 %_5.1)
  %_4.0 = extractvalue { i8*, i64 } %7, 0
  %_4.1 = extractvalue { i8*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %8 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb2dc13e984552c4bE"(i8* align 1 %_4.0, i64 %_4.1)
  store { i8*, i64 } %8, { i8*, i64 }* %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = bitcast { i8*, i64 }* %_3 to {}**
  %10 = load {}*, {}** %9, align 8
  %11 = icmp eq {}* %10, null
  %_6 = select i1 %11, i64 1, i64 0
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 0
  %val.0 = load i8*, i8** %12, align 8, !nonnull !20
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 1
  %val.1 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 0
  store i8* %val.0, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 1
  store i64 %val.1, i64* %15, align 8
; call proc_macro2::parse::Cursor::len
  %_11 = call i64 @_ZN11proc_macro25parse6Cursor3len17h8a72020d0a5d0b7bE({ i8*, i64 }* align 8 dereferenceable(16) %input)
  br label %bb6

bb5:                                              ; preds = %bb2
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd450955ea2cdca9aE"(%"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1514 to %"core::panic::location::Location"*))
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb6:                                              ; preds = %bb3
; call proc_macro2::parse::Cursor::len
  %_13 = call i64 @_ZN11proc_macro25parse6Cursor3len17h8a72020d0a5d0b7bE({ i8*, i64 }* align 8 dereferenceable(16) %rest)
  br label %bb7

bb7:                                              ; preds = %bb6
  %16 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_11, i64 %_13)
  %_15.0 = extractvalue { i64, i1 } %16, 0
  %_15.1 = extractvalue { i64, i1 } %16, 1
  %17 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false)
  br i1 %17, label %panic, label %bb8

bb8:                                              ; preds = %bb7
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 0
  %_17.0 = load i8*, i8** %18, align 8, !nonnull !20
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 1
  %_17.1 = load i64, i64* %19, align 8
  %20 = bitcast { i8*, i64 }* %input to { [0 x i8]*, i64 }*
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0
  %_22.0 = load [0 x i8]*, [0 x i8]** %21, align 8, !nonnull !20
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1
  %_22.1 = load i64, i64* %22, align 8
  store i64 %_15.0, i64* %_23, align 8
  %23 = load i64, i64* %_23, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %24 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h92cbe302d9c6844dE"([0 x i8]* nonnull align 1 %_22.0, i64 %_22.1, i64 %23, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1518 to %"core::panic::location::Location"*))
  %_21.0 = extractvalue { [0 x i8]*, i64 } %24, 0
  %_21.1 = extractvalue { [0 x i8]*, i64 } %24, 1
  br label %bb9

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1516 to %"core::panic::location::Location"*)) #19
  unreachable

bb9:                                              ; preds = %bb8
; call <str as alloc::string::ToString>::to_string
  call void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17h08a0e0ca46444f4dE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_19, [0 x i8]* nonnull align 1 %_21.0, i64 %_21.1)
  br label %bb10

bb10:                                             ; preds = %bb9
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_18, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_19)
  br label %bb11

bb11:                                             ; preds = %bb10
  %25 = bitcast { { i8*, i64 }, %"fallback::Literal" }* %_16 to { i8*, i64 }*
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 0
  store i8* %_17.0, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 1
  store i64 %_17.1, i64* %27, align 8
  %28 = getelementptr inbounds { { i8*, i64 }, %"fallback::Literal" }, { { i8*, i64 }, %"fallback::Literal" }* %_16, i32 0, i32 1
  %29 = bitcast %"fallback::Literal"* %28 to i8*
  %30 = bitcast %"fallback::Literal"* %_18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false)
  %31 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"*
  %32 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"* %31 to { { i8*, i64 }, %"fallback::Literal" }*
  %33 = bitcast { { i8*, i64 }, %"fallback::Literal" }* %32 to i8*
  %34 = bitcast { { i8*, i64 }, %"fallback::Literal" }* %_16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 40, i1 false)
  br label %bb12
}

; proc_macro2::parse::literal_nocapture
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse17literal_nocapture17h9a5d87cd0be72523E(i8* nonnull align 1 %input.0, i64 %input.1) unnamed_addr #1 {
start:
  %_27 = alloca { i8*, i64 }, align 8
  %_22 = alloca { i8*, i64 }, align 8
  %_17 = alloca { i8*, i64 }, align 8
  %_12 = alloca { i8*, i64 }, align 8
  %_7 = alloca { i8*, i64 }, align 8
  %_2 = alloca { i8*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
; call proc_macro2::parse::string
  %1 = call { i8*, i64 } @_ZN11proc_macro25parse6string17ha29e739418c8ea45E(i8* nonnull align 1 %input.0, i64 %input.1)
  store { i8*, i64 } %1, { i8*, i64 }* %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i8*, i64 }* %_2 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_4 = select i1 %4, i64 1, i64 0
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 0
  %ok.09 = load i8*, i8** %6, align 8, !nonnull !20
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 1
  %ok.110 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %ok.09, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %ok.110, i64* %9, align 8
  br label %bb19

bb3:                                              ; preds = %bb1
; call proc_macro2::parse::byte_string
  %10 = call { i8*, i64 } @_ZN11proc_macro25parse11byte_string17hb76feef31ead5abcE(i8* nonnull align 1 %input.0, i64 %input.1)
  store { i8*, i64 } %10, { i8*, i64 }* %_7, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %11 = bitcast { i8*, i64 }* %_7 to {}**
  %12 = load {}*, {}** %11, align 8
  %13 = icmp eq {}* %12, null
  %_9 = select i1 %13, i64 1, i64 0
  %14 = icmp eq i64 %_9, 0
  br i1 %14, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 0
  %ok.07 = load i8*, i8** %15, align 8, !nonnull !20
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 1
  %ok.18 = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %ok.07, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %ok.18, i64* %18, align 8
  br label %bb19

bb6:                                              ; preds = %bb4
; call proc_macro2::parse::byte
  %19 = call { i8*, i64 } @_ZN11proc_macro25parse4byte17h8077576e7cdf2e10E(i8* nonnull align 1 %input.0, i64 %input.1)
  store { i8*, i64 } %19, { i8*, i64 }* %_12, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  %20 = bitcast { i8*, i64 }* %_12 to {}**
  %21 = load {}*, {}** %20, align 8
  %22 = icmp eq {}* %21, null
  %_14 = select i1 %22, i64 1, i64 0
  %23 = icmp eq i64 %_14, 0
  br i1 %23, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_12, i32 0, i32 0
  %ok.05 = load i8*, i8** %24, align 8, !nonnull !20
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_12, i32 0, i32 1
  %ok.16 = load i64, i64* %25, align 8
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %ok.05, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %ok.16, i64* %27, align 8
  br label %bb19

bb9:                                              ; preds = %bb7
; call proc_macro2::parse::character
  %28 = call { i8*, i64 } @_ZN11proc_macro25parse9character17hf036a46846b371f6E(i8* nonnull align 1 %input.0, i64 %input.1)
  store { i8*, i64 } %28, { i8*, i64 }* %_17, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
  %29 = bitcast { i8*, i64 }* %_17 to {}**
  %30 = load {}*, {}** %29, align 8
  %31 = icmp eq {}* %30, null
  %_19 = select i1 %31, i64 1, i64 0
  %32 = icmp eq i64 %_19, 0
  br i1 %32, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_17, i32 0, i32 0
  %ok.03 = load i8*, i8** %33, align 8, !nonnull !20
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_17, i32 0, i32 1
  %ok.14 = load i64, i64* %34, align 8
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %ok.03, i8** %35, align 8
  %36 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %ok.14, i64* %36, align 8
  br label %bb19

bb12:                                             ; preds = %bb10
; call proc_macro2::parse::float
  %37 = call { i8*, i64 } @_ZN11proc_macro25parse5float17hb5d44cf9c5d27061E(i8* nonnull align 1 %input.0, i64 %input.1)
  store { i8*, i64 } %37, { i8*, i64 }* %_22, align 8
  br label %bb13

bb13:                                             ; preds = %bb12
  %38 = bitcast { i8*, i64 }* %_22 to {}**
  %39 = load {}*, {}** %38, align 8
  %40 = icmp eq {}* %39, null
  %_24 = select i1 %40, i64 1, i64 0
  %41 = icmp eq i64 %_24, 0
  br i1 %41, label %bb14, label %bb15

bb14:                                             ; preds = %bb13
  %42 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 0
  %ok.01 = load i8*, i8** %42, align 8, !nonnull !20
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 1
  %ok.12 = load i64, i64* %43, align 8
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %ok.01, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %ok.12, i64* %45, align 8
  br label %bb19

bb15:                                             ; preds = %bb13
; call proc_macro2::parse::int
  %46 = call { i8*, i64 } @_ZN11proc_macro25parse3int17h938ba200dcaccd92E(i8* nonnull align 1 %input.0, i64 %input.1)
  store { i8*, i64 } %46, { i8*, i64 }* %_27, align 8
  br label %bb16

bb16:                                             ; preds = %bb15
  %47 = bitcast { i8*, i64 }* %_27 to {}**
  %48 = load {}*, {}** %47, align 8
  %49 = icmp eq {}* %48, null
  %_29 = select i1 %49, i64 1, i64 0
  %50 = icmp eq i64 %_29, 0
  br i1 %50, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_27, i32 0, i32 0
  %ok.0 = load i8*, i8** %51, align 8, !nonnull !20
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_27, i32 0, i32 1
  %ok.1 = load i64, i64* %52, align 8
  %53 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %ok.0, i8** %53, align 8
  %54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %ok.1, i64* %54, align 8
  br label %bb19

bb18:                                             ; preds = %bb16
  %55 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %55, align 8
  br label %bb19

bb19:                                             ; preds = %bb2, %bb5, %bb8, %bb11, %bb14, %bb17, %bb18
  %56 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = insertvalue { i8*, i64 } undef, i8* %57, 0
  %61 = insertvalue { i8*, i64 } %60, i64 %59, 1
  ret { i8*, i64 } %61
}

; proc_macro2::parse::literal_suffix
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse14literal_suffix17h353c2b44f6f52d7eE(i8* nonnull align 1 %input.0, i64 %input.1) unnamed_addr #1 {
start:
  %_2 = alloca %"core::result::Result<(parse::Cursor, &str), parse::Reject>", align 8
  %0 = alloca { i8*, i64 }, align 8
; call proc_macro2::parse::ident_not_raw
  call void @_ZN11proc_macro25parse13ident_not_raw17h903fae6b922b3d6eE(%"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, &str), parse::Reject>") dereferenceable(32) %_2, i8* nonnull align 1 %input.0, i64 %input.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* %_2 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_4 = select i1 %3, i64 1, i64 0
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %4 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* %_2 to %"core::result::Result<(parse::Cursor, &str), parse::Reject>::Ok"*
  %5 = bitcast %"core::result::Result<(parse::Cursor, &str), parse::Reject>::Ok"* %4 to { { i8*, i64 }, { [0 x i8]*, i64 } }*
  %6 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %5 to { i8*, i64 }*
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 0
  %input.01 = load i8*, i8** %7, align 8, !nonnull !20
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 1
  %input.12 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %input.01, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %input.12, i64* %10, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %input.0, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %input.1, i64* %12, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !nonnull !20
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = insertvalue { i8*, i64 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i64 } %17, i64 %16, 1
  ret { i8*, i64 } %18
}

; proc_macro2::parse::string
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse6string17ha29e739418c8ea45E(i8* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_9 = alloca { i8*, i64 }, align 8
  %_2 = alloca { i8*, i64 }, align 8
  %2 = alloca { i8*, i64 }, align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call proc_macro2::parse::Cursor::parse
  %5 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor5parse17h695267df20f2c6e9E({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1519 to [0 x i8]*), i64 1)
  store { i8*, i64 } %5, { i8*, i64 }* %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast { i8*, i64 }* %_2 to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_6 = select i1 %8, i64 1, i64 0
  %9 = icmp eq i64 %_6, 0
  br i1 %9, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 0
  %input.01 = load i8*, i8** %10, align 8, !nonnull !20
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 1
  %input.12 = load i64, i64* %11, align 8
; call proc_macro2::parse::cooked_string
  %12 = call { i8*, i64 } @_ZN11proc_macro25parse13cooked_string17h120d2227eb9209eeE(i8* nonnull align 1 %input.01, i64 %input.12)
  store { i8*, i64 } %12, { i8*, i64 }* %2, align 8
  br label %bb7

bb3:                                              ; preds = %bb1
; call proc_macro2::parse::Cursor::parse
  %13 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor5parse17h695267df20f2c6e9E({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1520 to [0 x i8]*), i64 1)
  store { i8*, i64 } %13, { i8*, i64 }* %_9, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %14 = bitcast { i8*, i64 }* %_9 to {}**
  %15 = load {}*, {}** %14, align 8
  %16 = icmp eq {}* %15, null
  %_13 = select i1 %16, i64 1, i64 0
  %17 = icmp eq i64 %_13, 0
  br i1 %17, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_9, i32 0, i32 0
  %input.0 = load i8*, i8** %18, align 8, !nonnull !20
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_9, i32 0, i32 1
  %input.1 = load i64, i64* %19, align 8
; call proc_macro2::parse::raw_string
  %20 = call { i8*, i64 } @_ZN11proc_macro25parse10raw_string17h8294fe14c42568b2E(i8* nonnull align 1 %input.0, i64 %input.1)
  store { i8*, i64 } %20, { i8*, i64 }* %2, align 8
  br label %bb7

bb6:                                              ; preds = %bb4
  %21 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %21, align 8
  br label %bb7

bb7:                                              ; preds = %bb2, %bb5, %bb6
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = insertvalue { i8*, i64 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i64 } %26, i64 %25, 1
  ret { i8*, i64 } %27
}

; proc_macro2::parse::cooked_string
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse13cooked_string17h120d2227eb9209eeE(i8* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %ch1 = alloca i32*, align 8
  %_39 = alloca i64*, align 8
  %_33 = alloca i8, align 1
  %last = alloca i32, align 4
  %ch = alloca i32, align 4
  %_20 = alloca { i64, i32 }, align 8
  %_17 = alloca { i64, i32 }, align 8
  %_5 = alloca { i64, i32 }, align 8
  %_3 = alloca %"core::str::iter::CharIndices", align 8
  %chars = alloca %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>", align 8
  %2 = alloca { i8*, i64 }, align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call proc_macro2::parse::Cursor::char_indices
  call void @_ZN11proc_macro25parse6Cursor12char_indices17h5b5acc4d3cd1d190E(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %_3, { i8*, i64 }* align 8 dereferenceable(16) %input)
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::peekable
  call void @_ZN4core4iter6traits8iterator8Iterator8peekable17hb5d3104d4ec7e3a7E(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* noalias nocapture sret(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>") dereferenceable(40) %chars, %"core::str::iter::CharIndices"* noalias nocapture dereferenceable(24) %_3)
  br label %bb2

bb2:                                              ; preds = %bb12, %bb17, %bb19, %bb33, %bb31, %bb15, %bb15, %bb15, %bb15, %bb15, %bb15, %bb15, %bb5, %bb1
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %5 = call { i64, i32 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h326ec6dedebd3983E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars)
  store { i64, i32 } %5, { i64, i32 }* %_5, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8, !range !22
  %8 = sub i32 %7, 1114112
  %9 = icmp eq i32 %8, 0
  %_7 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_7, 1
  br i1 %10, label %bb4, label %bb35

bb4:                                              ; preds = %bb3
  %11 = bitcast { i64, i32 }* %_5 to i64*
  %i = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1
  %ch2 = load i32, i32* %12, align 8, !range !80
  switch i32 %ch2, label %bb5 [
    i32 34, label %bb6
    i32 13, label %bb10
    i32 92, label %bb13
  ]

bb35:                                             ; preds = %bb12, %bb11, %bb17, %bb19, %bb15, %bb14, %bb3
  %13 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb36

bb5:                                              ; preds = %bb4
  br label %bb2

bb6:                                              ; preds = %bb4
  %14 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 1)
  %_14.0 = extractvalue { i64, i1 } %14, 0
  %_14.1 = extractvalue { i64, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false)
  br i1 %15, label %panic, label %bb7

bb10:                                             ; preds = %bb4
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %16 = call { i64, i32 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h326ec6dedebd3983E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars)
  store { i64, i32 } %16, { i64, i32 }* %_17, align 8
  br label %bb11

bb13:                                             ; preds = %bb4
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %17 = call { i64, i32 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h326ec6dedebd3983E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars)
  store { i64, i32 } %17, { i64, i32 }* %_20, align 8
  br label %bb14

bb14:                                             ; preds = %bb13
  %18 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_20, i32 0, i32 1
  %19 = load i32, i32* %18, align 8, !range !22
  %20 = sub i32 %19, 1114112
  %21 = icmp eq i32 %20, 0
  %_22 = select i1 %21, i64 0, i64 1
  %22 = icmp eq i64 %_22, 1
  br i1 %22, label %bb15, label %bb35

bb15:                                             ; preds = %bb14
  %23 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_20, i32 0, i32 1
  %24 = load i32, i32* %23, align 8, !range !80
  switch i32 %24, label %bb35 [
    i32 120, label %bb16
    i32 110, label %bb2
    i32 114, label %bb2
    i32 116, label %bb2
    i32 92, label %bb2
    i32 39, label %bb2
    i32 34, label %bb2
    i32 48, label %bb2
    i32 117, label %bb18
    i32 10, label %bb21
    i32 13, label %bb22
  ]

bb16:                                             ; preds = %bb15
; call proc_macro2::parse::backslash_x_char
  %_24 = call zeroext i1 @_ZN11proc_macro25parse16backslash_x_char17h1cdd943f8445ff6fE(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars)
  br label %bb17

bb18:                                             ; preds = %bb15
; call proc_macro2::parse::backslash_u
  %_28 = call zeroext i1 @_ZN11proc_macro25parse11backslash_u17h2c7230bbe5498218E(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars)
  br label %bb19

bb21:                                             ; preds = %bb15
  %25 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_20, i32 0, i32 1
  %26 = load i32, i32* %25, align 8, !range !80
  store i32 %26, i32* %ch, align 4
  br label %bb20

bb22:                                             ; preds = %bb15
  %27 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_20, i32 0, i32 1
  %28 = load i32, i32* %27, align 8, !range !80
  store i32 %28, i32* %ch, align 4
  br label %bb20

bb20:                                             ; preds = %bb21, %bb22
  %29 = load i32, i32* %ch, align 4, !range !80
  store i32 %29, i32* %last, align 4
  br label %bb23

bb23:                                             ; preds = %bb34, %bb20
  %_34 = load i32, i32* %last, align 4, !range !80
  %30 = icmp eq i32 %_34, 13
  br i1 %30, label %bb25, label %bb24

bb25:                                             ; preds = %bb23
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %31 = call { i64, i32 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h326ec6dedebd3983E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars)
  %_36.0 = extractvalue { i64, i32 } %31, 0
  %_36.1 = extractvalue { i64, i32 } %31, 1
  br label %bb27

bb24:                                             ; preds = %bb23
  store i8 0, i8* %_33, align 1
  br label %bb26

bb26:                                             ; preds = %bb28, %bb24
  %32 = load i8, i8* %_33, align 1, !range !2
  %33 = trunc i8 %32 to i1
  br i1 %33, label %bb29, label %bb30

bb27:                                             ; preds = %bb25
; call core::option::Option<T>::map_or
  %_35 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$6map_or17hc86b3a60189db29dE"(i64 %_36.0, i32 %_36.1, i1 zeroext true)
  br label %bb28

bb28:                                             ; preds = %bb27
  %34 = zext i1 %_35 to i8
  store i8 %34, i8* %_33, align 1
  br label %bb26

bb30:                                             ; preds = %bb26
; call core::iter::adapters::peekable::Peekable<I>::peek
  %35 = call align 8 dereferenceable_or_null(16) i64* @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h5bcf17031e90f523E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars)
  store i64* %35, i64** %_39, align 8
  br label %bb31

bb29:                                             ; preds = %bb26
  %36 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %36, align 8
  br label %bb36

bb36:                                             ; preds = %bb9, %bb35, %bb29
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = insertvalue { i8*, i64 } undef, i8* %38, 0
  %42 = insertvalue { i8*, i64 } %41, i64 %40, 1
  ret { i8*, i64 } %42

bb31:                                             ; preds = %bb30
  %43 = bitcast i64** %_39 to {}**
  %44 = load {}*, {}** %43, align 8
  %45 = icmp eq {}* %44, null
  %_41 = select i1 %45, i64 0, i64 1
  %46 = icmp eq i64 %_41, 1
  br i1 %46, label %bb32, label %bb2

bb32:                                             ; preds = %bb31
  %47 = bitcast i64** %_39 to { i64, i32 }**
  %48 = load { i64, i32 }*, { i64, i32 }** %47, align 8, !nonnull !20
  %49 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %48, i32 0, i32 1
  store i32* %49, i32** %ch1, align 8
  %50 = load i32*, i32** %ch1, align 8, !nonnull !20
  %_45 = load i32, i32* %50, align 4, !range !80
; call core::char::methods::<impl char>::is_whitespace
  %_44 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h3d27cd8679dd9538E"(i32 %_45)
  br label %bb33

bb33:                                             ; preds = %bb32
  br i1 %_44, label %bb34, label %bb2

bb34:                                             ; preds = %bb33
  %51 = load i32*, i32** %ch1, align 8, !nonnull !20
  %_46 = load i32, i32* %51, align 4, !range !80
  store i32 %_46, i32* %last, align 4
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %52 = call { i64, i32 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h326ec6dedebd3983E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars)
  %_47.0 = extractvalue { i64, i32 } %52, 0
  %_47.1 = extractvalue { i64, i32 } %52, 1
  br label %bb23

bb19:                                             ; preds = %bb18
  %_27 = xor i1 %_28, true
  br i1 %_27, label %bb35, label %bb2

bb17:                                             ; preds = %bb16
  %_23 = xor i1 %_24, true
  br i1 %_23, label %bb35, label %bb2

bb11:                                             ; preds = %bb10
  %53 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_17, i32 0, i32 1
  %54 = load i32, i32* %53, align 8, !range !22
  %55 = sub i32 %54, 1114112
  %56 = icmp eq i32 %55, 0
  %_19 = select i1 %56, i64 0, i64 1
  %57 = icmp eq i64 %_19, 1
  br i1 %57, label %bb12, label %bb35

bb12:                                             ; preds = %bb11
  %58 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_17, i32 0, i32 1
  %59 = load i32, i32* %58, align 8, !range !80
  %60 = icmp eq i32 %59, 10
  br i1 %60, label %bb2, label %bb35

bb7:                                              ; preds = %bb6
; call proc_macro2::parse::Cursor::advance
  %61 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %_14.0)
  %input.0 = extractvalue { i8*, i64 } %61, 0
  %input.1 = extractvalue { i8*, i64 } %61, 1
  br label %bb8

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1522 to %"core::panic::location::Location"*)) #19
  unreachable

bb8:                                              ; preds = %bb7
; call proc_macro2::parse::literal_suffix
  %62 = call { i8*, i64 } @_ZN11proc_macro25parse14literal_suffix17h353c2b44f6f52d7eE(i8* nonnull align 1 %input.0, i64 %input.1)
  %_15.0 = extractvalue { i8*, i64 } %62, 0
  %_15.1 = extractvalue { i8*, i64 } %62, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %63 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_15.0, i8** %63, align 8
  %64 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_15.1, i64* %64, align 8
  br label %bb36
}

; proc_macro2::parse::cooked_string::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN11proc_macro25parse13cooked_string28_$u7b$$u7b$closure$u7d$$u7d$17hbc564fad2c9c2251E"(i64 %_2.0, i32 %_2.1) unnamed_addr #0 {
start:
  %0 = icmp ne i32 %_2.1, 10
  ret i1 %0
}

; proc_macro2::parse::byte_string
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse11byte_string17hb76feef31ead5abcE(i8* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_9 = alloca { i8*, i64 }, align 8
  %_2 = alloca { i8*, i64 }, align 8
  %2 = alloca { i8*, i64 }, align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call proc_macro2::parse::Cursor::parse
  %5 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor5parse17h695267df20f2c6e9E({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1720 to [0 x i8]*), i64 2)
  store { i8*, i64 } %5, { i8*, i64 }* %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast { i8*, i64 }* %_2 to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_6 = select i1 %8, i64 1, i64 0
  %9 = icmp eq i64 %_6, 0
  br i1 %9, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 0
  %input.01 = load i8*, i8** %10, align 8, !nonnull !20
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 1
  %input.12 = load i64, i64* %11, align 8
; call proc_macro2::parse::cooked_byte_string
  %12 = call { i8*, i64 } @_ZN11proc_macro25parse18cooked_byte_string17heec1ec98b218e406E(i8* nonnull align 1 %input.01, i64 %input.12)
  store { i8*, i64 } %12, { i8*, i64 }* %2, align 8
  br label %bb7

bb3:                                              ; preds = %bb1
; call proc_macro2::parse::Cursor::parse
  %13 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor5parse17h695267df20f2c6e9E({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1524 to [0 x i8]*), i64 2)
  store { i8*, i64 } %13, { i8*, i64 }* %_9, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %14 = bitcast { i8*, i64 }* %_9 to {}**
  %15 = load {}*, {}** %14, align 8
  %16 = icmp eq {}* %15, null
  %_13 = select i1 %16, i64 1, i64 0
  %17 = icmp eq i64 %_13, 0
  br i1 %17, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_9, i32 0, i32 0
  %input.0 = load i8*, i8** %18, align 8, !nonnull !20
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_9, i32 0, i32 1
  %input.1 = load i64, i64* %19, align 8
; call proc_macro2::parse::raw_string
  %20 = call { i8*, i64 } @_ZN11proc_macro25parse10raw_string17h8294fe14c42568b2E(i8* nonnull align 1 %input.0, i64 %input.1)
  store { i8*, i64 } %20, { i8*, i64 }* %2, align 8
  br label %bb7

bb6:                                              ; preds = %bb4
  %21 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %21, align 8
  br label %bb7

bb7:                                              ; preds = %bb2, %bb5, %bb6
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = insertvalue { i8*, i64 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i64 } %26, i64 %25, 1
  ret { i8*, i64 } %27
}

; proc_macro2::parse::cooked_byte_string
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse18cooked_byte_string17heec1ec98b218e406E(i8* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_56 = alloca %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>", align 8
  %_44 = alloca { i64, i32 }, align 8
  %_38 = alloca i8, align 1
  %chars = alloca %"core::str::iter::CharIndices", align 8
  %rest = alloca { i8*, i64 }, align 8
  %last = alloca i32, align 4
  %b1 = alloca i8, align 1
  %newline = alloca i64, align 8
  %_20 = alloca %"core::option::Option<(usize, u8)>", align 8
  %_17 = alloca %"core::option::Option<(usize, u8)>", align 8
  %b = alloca i8, align 1
  %_5 = alloca %"core::option::Option<(usize, u8)>", align 8
  %bytes = alloca %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>", align 8
  %2 = alloca { i8*, i64 }, align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call proc_macro2::parse::Cursor::bytes
  %5 = call { i8*, i8* } @_ZN11proc_macro25parse6Cursor5bytes17hb8375bf1baba45cdE({ i8*, i64 }* align 8 dereferenceable(16) %input)
  %_3.0 = extractvalue { i8*, i8* } %5, 0
  %_3.1 = extractvalue { i8*, i8* } %5, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hefecad122e98defcE(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>") dereferenceable(24) %bytes, i8* nonnull %_3.0, i8* %_3.1)
  br label %bb2

bb2:                                              ; preds = %bb11, %bb16, %bb39, %bb14, %bb14, %bb14, %bb14, %bb14, %bb14, %bb14, %bb41, %bb1
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h519dcc453b00ca96E"(%"core::option::Option<(usize, u8)>"* noalias nocapture sret(%"core::option::Option<(usize, u8)>") dereferenceable(24) %_5, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* align 8 dereferenceable(24) %bytes)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"core::option::Option<(usize, u8)>"* %_5 to i64*
  %_7 = load i64, i64* %6, align 8, !range !18
  %7 = icmp eq i64 %_7, 1
  br i1 %7, label %bb4, label %bb42

bb4:                                              ; preds = %bb3
  %8 = bitcast %"core::option::Option<(usize, u8)>"* %_5 to %"core::option::Option<(usize, u8)>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %8, i32 0, i32 1
  %10 = bitcast { i64, i8 }* %9 to i64*
  %offset = load i64, i64* %10, align 8
  %11 = bitcast %"core::option::Option<(usize, u8)>"* %_5 to %"core::option::Option<(usize, u8)>::Some"*
  %12 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %12, i32 0, i32 1
  %14 = load i8, i8* %13, align 8
  store i8 %14, i8* %b, align 1
  %15 = load i8, i8* %b, align 1
  switch i8 %15, label %bb40 [
    i8 34, label %bb5
    i8 13, label %bb9
    i8 92, label %bb12
  ]

bb42:                                             ; preds = %bb11, %bb10, %bb16, %bb14, %bb13, %bb40, %bb3
  %16 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %16, align 8
  br label %bb43

bb40:                                             ; preds = %bb4
  %_62 = load i8, i8* %b, align 1
  %_61 = icmp ult i8 %_62, -128
  br i1 %_61, label %bb41, label %bb42

bb5:                                              ; preds = %bb4
  %17 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %offset, i64 1)
  %_14.0 = extractvalue { i64, i1 } %17, 0
  %_14.1 = extractvalue { i64, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false)
  br i1 %18, label %panic5, label %bb6

bb9:                                              ; preds = %bb4
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h519dcc453b00ca96E"(%"core::option::Option<(usize, u8)>"* noalias nocapture sret(%"core::option::Option<(usize, u8)>") dereferenceable(24) %_17, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* align 8 dereferenceable(24) %bytes)
  br label %bb10

bb12:                                             ; preds = %bb4
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h519dcc453b00ca96E"(%"core::option::Option<(usize, u8)>"* noalias nocapture sret(%"core::option::Option<(usize, u8)>") dereferenceable(24) %_20, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* align 8 dereferenceable(24) %bytes)
  br label %bb13

bb41:                                             ; preds = %bb40
  %b2 = load i8, i8* %b, align 1
  br label %bb2

bb13:                                             ; preds = %bb12
  %19 = bitcast %"core::option::Option<(usize, u8)>"* %_20 to i64*
  %_22 = load i64, i64* %19, align 8, !range !18
  %20 = icmp eq i64 %_22, 1
  br i1 %20, label %bb14, label %bb42

bb14:                                             ; preds = %bb13
  %21 = bitcast %"core::option::Option<(usize, u8)>"* %_20 to %"core::option::Option<(usize, u8)>::Some"*
  %22 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %21, i32 0, i32 1
  %23 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %22, i32 0, i32 1
  %24 = load i8, i8* %23, align 8
  switch i8 %24, label %bb42 [
    i8 120, label %bb15
    i8 110, label %bb2
    i8 114, label %bb2
    i8 116, label %bb2
    i8 92, label %bb2
    i8 48, label %bb2
    i8 39, label %bb2
    i8 34, label %bb2
    i8 10, label %bb18
    i8 13, label %bb19
  ]

bb15:                                             ; preds = %bb14
; call proc_macro2::parse::backslash_x_byte
  %_24 = call zeroext i1 @_ZN11proc_macro25parse16backslash_x_byte17h92baa9685d576834E(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* align 8 dereferenceable(24) %bytes)
  br label %bb16

bb18:                                             ; preds = %bb14
  %25 = bitcast %"core::option::Option<(usize, u8)>"* %_20 to %"core::option::Option<(usize, u8)>::Some"*
  %26 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %25, i32 0, i32 1
  %27 = bitcast { i64, i8 }* %26 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %newline, align 8
  %29 = bitcast %"core::option::Option<(usize, u8)>"* %_20 to %"core::option::Option<(usize, u8)>::Some"*
  %30 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %29, i32 0, i32 1
  %31 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %30, i32 0, i32 1
  %32 = load i8, i8* %31, align 8
  store i8 %32, i8* %b1, align 1
  br label %bb17

bb19:                                             ; preds = %bb14
  %33 = bitcast %"core::option::Option<(usize, u8)>"* %_20 to %"core::option::Option<(usize, u8)>::Some"*
  %34 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %33, i32 0, i32 1
  %35 = bitcast { i64, i8 }* %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %newline, align 8
  %37 = bitcast %"core::option::Option<(usize, u8)>"* %_20 to %"core::option::Option<(usize, u8)>::Some"*
  %38 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %37, i32 0, i32 1
  %39 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %38, i32 0, i32 1
  %40 = load i8, i8* %39, align 8
  store i8 %40, i8* %b1, align 1
  br label %bb17

bb17:                                             ; preds = %bb18, %bb19
  %_30 = load i8, i8* %b1, align 1
  %41 = zext i8 %_30 to i32
  store i32 %41, i32* %last, align 4
  %_34 = load i64, i64* %newline, align 8
  %42 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_34, i64 1)
  %_35.0 = extractvalue { i64, i1 } %42, 0
  %_35.1 = extractvalue { i64, i1 } %42, 1
  %43 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false)
  br i1 %43, label %panic, label %bb20

bb20:                                             ; preds = %bb17
; call proc_macro2::parse::Cursor::advance
  %44 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %_35.0)
  store { i8*, i64 } %44, { i8*, i64 }* %rest, align 8
  br label %bb21

panic:                                            ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1526 to %"core::panic::location::Location"*)) #19
  unreachable

bb21:                                             ; preds = %bb20
; call proc_macro2::parse::Cursor::char_indices
  call void @_ZN11proc_macro25parse6Cursor12char_indices17h5b5acc4d3cd1d190E(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %chars, { i8*, i64 }* align 8 dereferenceable(16) %rest)
  br label %bb22

bb22:                                             ; preds = %bb35, %bb21
  %_39 = load i32, i32* %last, align 4, !range !80
  %45 = icmp eq i32 %_39, 13
  br i1 %45, label %bb24, label %bb23

bb24:                                             ; preds = %bb22
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %46 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  %_41.0 = extractvalue { i64, i32 } %46, 0
  %_41.1 = extractvalue { i64, i32 } %46, 1
  br label %bb26

bb23:                                             ; preds = %bb22
  store i8 0, i8* %_38, align 1
  br label %bb25

bb25:                                             ; preds = %bb27, %bb23
  %47 = load i8, i8* %_38, align 1, !range !2
  %48 = trunc i8 %47 to i1
  br i1 %48, label %bb28, label %bb29

bb26:                                             ; preds = %bb24
; call core::option::Option<T>::map_or
  %_40 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$6map_or17h5fd3ef750210296eE"(i64 %_41.0, i32 %_41.1, i1 zeroext true)
  br label %bb27

bb27:                                             ; preds = %bb26
  %49 = zext i1 %_40 to i8
  store i8 %49, i8* %_38, align 1
  br label %bb25

bb29:                                             ; preds = %bb25
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %50 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  store { i64, i32 } %50, { i64, i32 }* %_44, align 8
  br label %bb30

bb28:                                             ; preds = %bb25
  %51 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %51, align 8
  br label %bb43

bb43:                                             ; preds = %bb8, %bb42, %bb31, %bb28
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = insertvalue { i8*, i64 } undef, i8* %53, 0
  %57 = insertvalue { i8*, i64 } %56, i64 %55, 1
  ret { i8*, i64 } %57

bb30:                                             ; preds = %bb29
  %58 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_44, i32 0, i32 1
  %59 = load i32, i32* %58, align 8, !range !22
  %60 = sub i32 %59, 1114112
  %61 = icmp eq i32 %60, 0
  %_46 = select i1 %61, i64 0, i64 1
  switch i64 %_46, label %bb32 [
    i64 0, label %bb31
    i64 1, label %bb33
  ]

bb32:                                             ; preds = %bb30
  unreachable

bb31:                                             ; preds = %bb30
  %62 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %62, align 8
  br label %bb43

bb33:                                             ; preds = %bb30
  %ch = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_44, i32 0, i32 1
  %_50 = load i32, i32* %ch, align 4, !range !80
; call core::char::methods::<impl char>::is_whitespace
  %_49 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h3d27cd8679dd9538E"(i32 %_50)
  br label %bb34

bb34:                                             ; preds = %bb33
  br i1 %_49, label %bb35, label %bb36

bb36:                                             ; preds = %bb34
  %63 = bitcast { i64, i32 }* %_44 to i64*
  %offset4 = load i64, i64* %63, align 8
; call proc_macro2::parse::Cursor::advance
  %64 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %rest, i64 %offset4)
  %_53.0 = extractvalue { i8*, i64 } %64, 0
  %_53.1 = extractvalue { i8*, i64 } %64, 1
  br label %bb37

bb35:                                             ; preds = %bb34
  %65 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_44, i32 0, i32 1
  %ch3 = load i32, i32* %65, align 8, !range !80
  store i32 %ch3, i32* %last, align 4
  br label %bb22

bb37:                                             ; preds = %bb36
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %_53.0, i8** %66, align 8
  %67 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %_53.1, i64* %67, align 8
; call proc_macro2::parse::Cursor::bytes
  %68 = call { i8*, i8* } @_ZN11proc_macro25parse6Cursor5bytes17hb8375bf1baba45cdE({ i8*, i64 }* align 8 dereferenceable(16) %input)
  %_57.0 = extractvalue { i8*, i8* } %68, 0
  %_57.1 = extractvalue { i8*, i8* } %68, 1
  br label %bb38

bb38:                                             ; preds = %bb37
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hefecad122e98defcE(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>") dereferenceable(24) %_56, i8* nonnull %_57.0, i8* %_57.1)
  br label %bb39

bb39:                                             ; preds = %bb38
  %69 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* %bytes to i8*
  %70 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* %_56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 24, i1 false)
  br label %bb2

bb16:                                             ; preds = %bb15
  %_23 = xor i1 %_24, true
  br i1 %_23, label %bb42, label %bb2

bb10:                                             ; preds = %bb9
  %71 = bitcast %"core::option::Option<(usize, u8)>"* %_17 to i64*
  %_19 = load i64, i64* %71, align 8, !range !18
  %72 = icmp eq i64 %_19, 1
  br i1 %72, label %bb11, label %bb42

bb11:                                             ; preds = %bb10
  %73 = bitcast %"core::option::Option<(usize, u8)>"* %_17 to %"core::option::Option<(usize, u8)>::Some"*
  %74 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %73, i32 0, i32 1
  %75 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %74, i32 0, i32 1
  %76 = load i8, i8* %75, align 8
  %77 = icmp eq i8 %76, 10
  br i1 %77, label %bb2, label %bb42

bb6:                                              ; preds = %bb5
; call proc_macro2::parse::Cursor::advance
  %78 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %_14.0)
  %input.0 = extractvalue { i8*, i64 } %78, 0
  %input.1 = extractvalue { i8*, i64 } %78, 1
  br label %bb7

panic5:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1528 to %"core::panic::location::Location"*)) #19
  unreachable

bb7:                                              ; preds = %bb6
; call proc_macro2::parse::literal_suffix
  %79 = call { i8*, i64 } @_ZN11proc_macro25parse14literal_suffix17h353c2b44f6f52d7eE(i8* nonnull align 1 %input.0, i64 %input.1)
  %_15.0 = extractvalue { i8*, i64 } %79, 0
  %_15.1 = extractvalue { i8*, i64 } %79, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %80 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_15.0, i8** %80, align 8
  %81 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_15.1, i64* %81, align 8
  br label %bb43
}

; proc_macro2::parse::cooked_byte_string::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN11proc_macro25parse18cooked_byte_string28_$u7b$$u7b$closure$u7d$$u7d$17h5cd4a7bf9bafda53E"(i64 %_2.0, i32 %_2.1) unnamed_addr #0 {
start:
  %0 = icmp ne i32 %_2.1, 10
  ret i1 %0
}

; proc_macro2::parse::raw_string
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse10raw_string17h8294fe14c42568b2E(i8* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_43 = alloca { i64, i32 }, align 8
  %_31 = alloca i64, align 8
  %_24 = alloca i64, align 8
  %_15 = alloca { i64, i32 }, align 8
  %_8 = alloca { i64, i32 }, align 8
  %iter = alloca %"core::str::iter::CharIndices"*, align 8
  %n = alloca i64, align 8
  %chars = alloca %"core::str::iter::CharIndices", align 8
  %2 = alloca { i8*, i64 }, align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call proc_macro2::parse::Cursor::char_indices
  call void @_ZN11proc_macro25parse6Cursor12char_indices17h5b5acc4d3cd1d190E(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %chars, { i8*, i64 }* align 8 dereferenceable(16) %input)
  br label %bb1

bb1:                                              ; preds = %start
  store i64 0, i64* %n, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_5 = call align 8 dereferenceable(24) %"core::str::iter::CharIndices"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he26099cc682e909bE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  br label %bb2

bb2:                                              ; preds = %bb1
  store %"core::str::iter::CharIndices"* %_5, %"core::str::iter::CharIndices"** %iter, align 8
  br label %bb3

bb3:                                              ; preds = %bb5, %bb2
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %5 = call { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0cf5ee7912affc8eE"(%"core::str::iter::CharIndices"** align 8 dereferenceable(8) %iter)
  store { i64, i32 } %5, { i64, i32 }* %_8, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_8, i32 0, i32 1
  %7 = load i32, i32* %6, align 8, !range !22
  %8 = sub i32 %7, 1114112
  %9 = icmp eq i32 %8, 0
  %_11 = select i1 %9, i64 0, i64 1
  switch i64 %_11, label %bb6 [
    i64 0, label %bb9
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb9:                                              ; preds = %bb16, %bb24, %bb11, %bb8, %bb4
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %10 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  store { i64, i32 } %10, { i64, i32 }* %_15, align 8
  br label %bb10

bb5:                                              ; preds = %bb4
  %11 = bitcast { i64, i32 }* %_8 to i64*
  %i = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_8, i32 0, i32 1
  %ch = load i32, i32* %12, align 8, !range !80
  switch i32 %ch, label %bb7 [
    i32 34, label %bb8
    i32 35, label %bb3
  ]

bb7:                                              ; preds = %bb5
  %13 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb26

bb8:                                              ; preds = %bb5
  store i64 %i, i64* %n, align 8
  br label %bb9

bb26:                                             ; preds = %bb21, %bb25, %bb7
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = insertvalue { i8*, i64 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i64 } %18, i64 %17, 1
  ret { i8*, i64 } %19

bb10:                                             ; preds = %bb9
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_15, i32 0, i32 1
  %21 = load i32, i32* %20, align 8, !range !22
  %22 = sub i32 %21, 1114112
  %23 = icmp eq i32 %22, 0
  %_17 = select i1 %23, i64 0, i64 1
  %24 = icmp eq i64 %_17, 1
  br i1 %24, label %bb11, label %bb25

bb11:                                             ; preds = %bb10
  %25 = bitcast { i64, i32 }* %_15 to i64*
  %i1 = load i64, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_15, i32 0, i32 1
  %ch2 = load i32, i32* %26, align 8, !range !80
  switch i32 %ch2, label %bb9 [
    i32 34, label %bb12
    i32 13, label %bb22
  ]

bb25:                                             ; preds = %bb24, %bb23, %bb10
  %27 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %27, align 8
  br label %bb26

bb12:                                             ; preds = %bb11
  %28 = bitcast { i8*, i64 }* %input to { [0 x i8]*, i64 }*
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  %_23.0 = load [0 x i8]*, [0 x i8]** %29, align 8, !nonnull !20
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  %_23.1 = load i64, i64* %30, align 8
  %31 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i1, i64 1)
  %_27.0 = extractvalue { i64, i1 } %31, 0
  %_27.1 = extractvalue { i64, i1 } %31, 1
  %32 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false)
  br i1 %32, label %panic, label %bb13

bb22:                                             ; preds = %bb11
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %33 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  store { i64, i32 } %33, { i64, i32 }* %_43, align 8
  br label %bb23

bb23:                                             ; preds = %bb22
  %34 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_43, i32 0, i32 1
  %35 = load i32, i32* %34, align 8, !range !22
  %36 = sub i32 %35, 1114112
  %37 = icmp eq i32 %36, 0
  %_45 = select i1 %37, i64 0, i64 1
  %38 = icmp eq i64 %_45, 1
  br i1 %38, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_43, i32 0, i32 1
  %40 = load i32, i32* %39, align 8, !range !80
  %41 = icmp eq i32 %40, 10
  br i1 %41, label %bb9, label %bb25

bb13:                                             ; preds = %bb12
  store i64 %_27.0, i64* %_24, align 8
  %42 = load i64, i64* %_24, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %43 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17ha5dfc76fbe8f171dE"([0 x i8]* nonnull align 1 %_23.0, i64 %_23.1, i64 %42, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1532 to %"core::panic::location::Location"*))
  %_22.0 = extractvalue { [0 x i8]*, i64 } %43, 0
  %_22.1 = extractvalue { [0 x i8]*, i64 } %43, 1
  br label %bb14

panic:                                            ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1530 to %"core::panic::location::Location"*)) #19
  unreachable

bb14:                                             ; preds = %bb13
  %44 = bitcast { i8*, i64 }* %input to { [0 x i8]*, i64 }*
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %44, i32 0, i32 0
  %_30.0 = load [0 x i8]*, [0 x i8]** %45, align 8, !nonnull !20
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %44, i32 0, i32 1
  %_30.1 = load i64, i64* %46, align 8
  %_32 = load i64, i64* %n, align 8
  store i64 %_32, i64* %_31, align 8
  %47 = load i64, i64* %_31, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %48 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h92cbe302d9c6844dE"([0 x i8]* nonnull align 1 %_30.0, i64 %_30.1, i64 %47, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1534 to %"core::panic::location::Location"*))
  %_29.0 = extractvalue { [0 x i8]*, i64 } %48, 0
  %_29.1 = extractvalue { [0 x i8]*, i64 } %48, 1
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::str::<impl str>::starts_with
  %_20 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h5b1588591b62590eE"([0 x i8]* nonnull align 1 %_22.0, i64 %_22.1, [0 x i8]* nonnull align 1 %_29.0, i64 %_29.1)
  br label %bb16

bb16:                                             ; preds = %bb15
  br i1 %_20, label %bb17, label %bb9

bb17:                                             ; preds = %bb16
  %49 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i1, i64 1)
  %_38.0 = extractvalue { i64, i1 } %49, 0
  %_38.1 = extractvalue { i64, i1 } %49, 1
  %50 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false)
  br i1 %50, label %panic3, label %bb18

bb18:                                             ; preds = %bb17
  %_39 = load i64, i64* %n, align 8
  %51 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_38.0, i64 %_39)
  %_40.0 = extractvalue { i64, i1 } %51, 0
  %_40.1 = extractvalue { i64, i1 } %51, 1
  %52 = call i1 @llvm.expect.i1(i1 %_40.1, i1 false)
  br i1 %52, label %panic4, label %bb19

panic3:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1536 to %"core::panic::location::Location"*)) #19
  unreachable

bb19:                                             ; preds = %bb18
; call proc_macro2::parse::Cursor::advance
  %53 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %_40.0)
  %rest.0 = extractvalue { i8*, i64 } %53, 0
  %rest.1 = extractvalue { i8*, i64 } %53, 1
  br label %bb20

panic4:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1536 to %"core::panic::location::Location"*)) #19
  unreachable

bb20:                                             ; preds = %bb19
; call proc_macro2::parse::literal_suffix
  %54 = call { i8*, i64 } @_ZN11proc_macro25parse14literal_suffix17h353c2b44f6f52d7eE(i8* nonnull align 1 %rest.0, i64 %rest.1)
  %_41.0 = extractvalue { i8*, i64 } %54, 0
  %_41.1 = extractvalue { i8*, i64 } %54, 1
  br label %bb21

bb21:                                             ; preds = %bb20
  %55 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_41.0, i8** %55, align 8
  %56 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_41.1, i64* %56, align 8
  br label %bb26
}

; proc_macro2::parse::byte
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse4byte17h8077576e7cdf2e10E(i8* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_55 = alloca { i8*, i64 }, align 8
  %_52 = alloca { i8*, i64 }, align 8
  %_48 = alloca { i8*, i8* }, align 8
  %_36 = alloca %"core::option::Option<(usize, u8)>", align 8
  %_35 = alloca %"core::result::Result<(usize, u8), parse::Reject>", align 8
  %_34 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>", align 8
  %b = alloca { i8, i8 }, align 1
  %_22 = alloca %"core::option::Option<(usize, u8)>", align 8
  %_21 = alloca { i8, i8 }, align 1
  %_17 = alloca %"core::option::Option<(usize, u8)>", align 8
  %_16 = alloca { i8, i8 }, align 1
  %ok = alloca i8, align 1
  %bytes = alloca %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>", align 8
  %_3 = alloca { i8*, i64 }, align 8
  %input1 = alloca { i8*, i64 }, align 8
  %2 = alloca { i8*, i64 }, align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call proc_macro2::parse::Cursor::parse
  %5 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor5parse17h695267df20f2c6e9E({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1537 to [0 x i8]*), i64 2)
  %_4.0 = extractvalue { i8*, i64 } %5, 0
  %_4.1 = extractvalue { i8*, i64 } %5, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %6 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb2dc13e984552c4bE"(i8* align 1 %_4.0, i64 %_4.1)
  store { i8*, i64 } %6, { i8*, i64 }* %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %7 = bitcast { i8*, i64 }* %_3 to {}**
  %8 = load {}*, {}** %7, align 8
  %9 = icmp eq {}* %8, null
  %_8 = select i1 %9, i64 1, i64 0
  switch i64 %_8, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 0
  %val.0 = load i8*, i8** %10, align 8, !nonnull !20
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 1
  %val.1 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input1, i32 0, i32 0
  store i8* %val.0, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input1, i32 0, i32 1
  store i64 %val.1, i64* %13, align 8
; call proc_macro2::parse::Cursor::bytes
  %14 = call { i8*, i8* } @_ZN11proc_macro25parse6Cursor5bytes17hb8375bf1baba45cdE({ i8*, i64 }* align 8 dereferenceable(16) %input1)
  %_13.0 = extractvalue { i8*, i8* } %14, 0
  %_13.1 = extractvalue { i8*, i8* } %14, 1
  br label %bb6

bb5:                                              ; preds = %bb2
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %15 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h72dfb3c4b3c1bfd9E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1539 to %"core::panic::location::Location"*))
  store { i8*, i64 } %15, { i8*, i64 }* %2, align 8
  br label %bb40

bb40:                                             ; preds = %bb39, %bb38, %bb31, %bb27, %bb20, %bb5
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1
  ret { i8*, i64 } %21

bb6:                                              ; preds = %bb3
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hefecad122e98defcE(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>") dereferenceable(24) %bytes, i8* nonnull %_13.0, i8* %_13.1)
  br label %bb7

bb7:                                              ; preds = %bb6
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h519dcc453b00ca96E"(%"core::option::Option<(usize, u8)>"* noalias nocapture sret(%"core::option::Option<(usize, u8)>") dereferenceable(24) %_17, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* align 8 dereferenceable(24) %bytes)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::option::Option<T>::map
  %22 = call { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17h61f94068aab3f33aE"(%"core::option::Option<(usize, u8)>"* noalias nocapture dereferenceable(24) %_17)
  store { i8, i8 } %22, { i8, i8 }* %_16, align 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %23 = bitcast { i8, i8 }* %_16 to i8*
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = trunc i8 %24 to i1
  %_20 = zext i1 %25 to i64
  %26 = icmp eq i64 %_20, 1
  br i1 %26, label %bb11, label %bb10

bb11:                                             ; preds = %bb9
  %27 = bitcast { i8, i8 }* %_16 to %"core::option::Option<u8>::Some"*
  %28 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %27, i32 0, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 92
  br i1 %30, label %bb12, label %bb10

bb10:                                             ; preds = %bb11, %bb9
  %31 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_16, i32 0, i32 0
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = trunc i8 %32 to i1
  %34 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_16, i32 0, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %b, i32 0, i32 0
  %37 = zext i1 %33 to i8
  store i8 %37, i8* %36, align 1
  %38 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %b, i32 0, i32 1
  store i8 %35, i8* %38, align 1
; call core::option::Option<T>::is_some
  %39 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h8ac4927ea1f3ce84E"({ i8, i8 }* align 1 dereferenceable(2) %b)
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %ok, align 1
  br label %bb19

bb12:                                             ; preds = %bb11
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h519dcc453b00ca96E"(%"core::option::Option<(usize, u8)>"* noalias nocapture sret(%"core::option::Option<(usize, u8)>") dereferenceable(24) %_22, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* align 8 dereferenceable(24) %bytes)
  br label %bb13

bb19:                                             ; preds = %bb17, %bb18, %bb15, %bb10
  %41 = load i8, i8* %ok, align 1, !range !2
  %_31 = trunc i8 %41 to i1
  %_30 = xor i1 %_31, true
  br i1 %_30, label %bb20, label %bb21

bb13:                                             ; preds = %bb12
; call core::option::Option<T>::map
  %42 = call { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17h8c963428cd84d0cfE"(%"core::option::Option<(usize, u8)>"* noalias nocapture dereferenceable(24) %_22)
  store { i8, i8 } %42, { i8, i8 }* %_21, align 1
  br label %bb14

bb14:                                             ; preds = %bb13
  %43 = bitcast { i8, i8 }* %_21 to i8*
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = trunc i8 %44 to i1
  %_25 = zext i1 %45 to i64
  %46 = icmp eq i64 %_25, 1
  br i1 %46, label %bb16, label %bb15

bb16:                                             ; preds = %bb14
  %47 = bitcast { i8, i8 }* %_21 to %"core::option::Option<u8>::Some"*
  %48 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %47, i32 0, i32 1
  %49 = load i8, i8* %48, align 1
  switch i8 %49, label %bb15 [
    i8 120, label %bb17
    i8 110, label %bb18
    i8 114, label %bb18
    i8 116, label %bb18
    i8 92, label %bb18
    i8 48, label %bb18
    i8 39, label %bb18
    i8 34, label %bb18
  ]

bb15:                                             ; preds = %bb16, %bb14
  store i8 0, i8* %ok, align 1
  br label %bb19

bb17:                                             ; preds = %bb16
; call proc_macro2::parse::backslash_x_byte
  %50 = call zeroext i1 @_ZN11proc_macro25parse16backslash_x_byte17h92baa9685d576834E(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* align 8 dereferenceable(24) %bytes)
  %51 = zext i1 %50 to i8
  store i8 %51, i8* %ok, align 1
  br label %bb19

bb18:                                             ; preds = %bb16, %bb16, %bb16, %bb16, %bb16, %bb16, %bb16
  store i8 1, i8* %ok, align 1
  br label %bb19

bb21:                                             ; preds = %bb19
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h519dcc453b00ca96E"(%"core::option::Option<(usize, u8)>"* noalias nocapture sret(%"core::option::Option<(usize, u8)>") dereferenceable(24) %_36, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* align 8 dereferenceable(24) %bytes)
  br label %bb22

bb20:                                             ; preds = %bb19
  %52 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %52, align 8
  br label %bb40

bb22:                                             ; preds = %bb21
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h2d3db2e373c4f258E"(%"core::result::Result<(usize, u8), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(usize, u8), parse::Reject>") dereferenceable(24) %_35, %"core::option::Option<(usize, u8)>"* noalias nocapture dereferenceable(24) %_36)
  br label %bb23

bb23:                                             ; preds = %bb22
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h797226bcece5389aE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>") dereferenceable(24) %_34, %"core::result::Result<(usize, u8), parse::Reject>"* noalias nocapture dereferenceable(24) %_35)
  br label %bb24

bb24:                                             ; preds = %bb23
  %53 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>"* %_34 to i64*
  %_39 = load i64, i64* %53, align 8, !range !18
  switch i64 %_39, label %bb26 [
    i64 0, label %bb25
    i64 1, label %bb27
  ]

bb26:                                             ; preds = %bb24
  unreachable

bb25:                                             ; preds = %bb24
  %54 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>"* %_34 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>::Continue"*
  %55 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (usize, u8)>::Continue"* %54, i32 0, i32 1
  %56 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %55, i32 0, i32 0
  %val.02 = load i64, i64* %56, align 8
  %57 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %55, i32 0, i32 1
  %val.13 = load i8, i8* %57, align 8
; call proc_macro2::parse::Cursor::chars
  %58 = call { i8*, i8* } @_ZN11proc_macro25parse6Cursor5chars17h66a90ef9a000288fE({ i8*, i64 }* align 8 dereferenceable(16) %input1)
  store { i8*, i8* } %58, { i8*, i8* }* %_48, align 8
  br label %bb28

bb27:                                             ; preds = %bb24
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %59 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h72dfb3c4b3c1bfd9E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1541 to %"core::panic::location::Location"*))
  store { i8*, i64 } %59, { i8*, i64 }* %2, align 8
  br label %bb40

bb28:                                             ; preds = %bb25
; call core::str::iter::Chars::as_str
  %60 = call { [0 x i8]*, i64 } @_ZN4core3str4iter5Chars6as_str17h1251553d4761c223E({ i8*, i8* }* align 8 dereferenceable(16) %_48)
  %_46.0 = extractvalue { [0 x i8]*, i64 } %60, 0
  %_46.1 = extractvalue { [0 x i8]*, i64 } %60, 1
  br label %bb29

bb29:                                             ; preds = %bb28
; call core::str::<impl str>::is_char_boundary
  %_44 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h81242d51336a2898E"([0 x i8]* nonnull align 1 %_46.0, i64 %_46.1, i64 %val.02)
  br label %bb30

bb30:                                             ; preds = %bb29
  %_43 = xor i1 %_44, true
  br i1 %_43, label %bb31, label %bb32

bb32:                                             ; preds = %bb30
; call proc_macro2::parse::Cursor::advance
  %61 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input1, i64 %val.02)
  store { i8*, i64 } %61, { i8*, i64 }* %_55, align 8
  br label %bb33

bb31:                                             ; preds = %bb30
  %62 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %62, align 8
  br label %bb40

bb33:                                             ; preds = %bb32
; call proc_macro2::parse::Cursor::parse
  %63 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor5parse17h695267df20f2c6e9E({ i8*, i64 }* align 8 dereferenceable(16) %_55, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1608 to [0 x i8]*), i64 1)
  %_53.0 = extractvalue { i8*, i64 } %63, 0
  %_53.1 = extractvalue { i8*, i64 } %63, 1
  br label %bb34

bb34:                                             ; preds = %bb33
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %64 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb2dc13e984552c4bE"(i8* align 1 %_53.0, i64 %_53.1)
  store { i8*, i64 } %64, { i8*, i64 }* %_52, align 8
  br label %bb35

bb35:                                             ; preds = %bb34
  %65 = bitcast { i8*, i64 }* %_52 to {}**
  %66 = load {}*, {}** %65, align 8
  %67 = icmp eq {}* %66, null
  %_60 = select i1 %67, i64 1, i64 0
  switch i64 %_60, label %bb37 [
    i64 0, label %bb36
    i64 1, label %bb38
  ]

bb37:                                             ; preds = %bb35
  unreachable

bb36:                                             ; preds = %bb35
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_52, i32 0, i32 0
  %val.04 = load i8*, i8** %68, align 8, !nonnull !20
  %69 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_52, i32 0, i32 1
  %val.15 = load i64, i64* %69, align 8
; call proc_macro2::parse::literal_suffix
  %70 = call { i8*, i64 } @_ZN11proc_macro25parse14literal_suffix17h353c2b44f6f52d7eE(i8* nonnull align 1 %val.04, i64 %val.15)
  %_64.0 = extractvalue { i8*, i64 } %70, 0
  %_64.1 = extractvalue { i8*, i64 } %70, 1
  br label %bb39

bb38:                                             ; preds = %bb35
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %71 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h72dfb3c4b3c1bfd9E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1544 to %"core::panic::location::Location"*))
  store { i8*, i64 } %71, { i8*, i64 }* %2, align 8
  br label %bb40

bb39:                                             ; preds = %bb36
  %72 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_64.0, i8** %72, align 8
  %73 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_64.1, i64* %73, align 8
  br label %bb40
}

; proc_macro2::parse::byte::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN11proc_macro25parse4byte28_$u7b$$u7b$closure$u7d$$u7d$17h4972709292b661efE"(i64 %_2.0, i8 %_2.1) unnamed_addr #0 {
start:
  ret i8 %_2.1
}

; proc_macro2::parse::byte::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN11proc_macro25parse4byte28_$u7b$$u7b$closure$u7d$$u7d$17h72d1c01890deaba2E"(i64 %_2.0, i8 %_2.1) unnamed_addr #0 {
start:
  ret i8 %_2.1
}

; proc_macro2::parse::character
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse9character17hf036a46846b371f6E(i8* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_48 = alloca { i8*, i64 }, align 8
  %_45 = alloca { i8*, i64 }, align 8
  %_35 = alloca { i64, i32 }, align 8
  %ch = alloca i32, align 4
  %_20 = alloca i32, align 4
  %_15 = alloca i32, align 4
  %ok = alloca i8, align 1
  %chars = alloca %"core::str::iter::CharIndices", align 8
  %_3 = alloca { i8*, i64 }, align 8
  %input1 = alloca { i8*, i64 }, align 8
  %2 = alloca { i8*, i64 }, align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call proc_macro2::parse::Cursor::parse
  %5 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor5parse17h695267df20f2c6e9E({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1608 to [0 x i8]*), i64 1)
  %_4.0 = extractvalue { i8*, i64 } %5, 0
  %_4.1 = extractvalue { i8*, i64 } %5, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %6 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb2dc13e984552c4bE"(i8* align 1 %_4.0, i64 %_4.1)
  store { i8*, i64 } %6, { i8*, i64 }* %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %7 = bitcast { i8*, i64 }* %_3 to {}**
  %8 = load {}*, {}** %7, align 8
  %9 = icmp eq {}* %8, null
  %_8 = select i1 %9, i64 1, i64 0
  switch i64 %_8, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 0
  %val.0 = load i8*, i8** %10, align 8, !nonnull !20
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 1
  %val.1 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input1, i32 0, i32 0
  store i8* %val.0, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input1, i32 0, i32 1
  store i64 %val.1, i64* %13, align 8
; call proc_macro2::parse::Cursor::char_indices
  call void @_ZN11proc_macro25parse6Cursor12char_indices17h5b5acc4d3cd1d190E(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %chars, { i8*, i64 }* align 8 dereferenceable(16) %input1)
  br label %bb6

bb5:                                              ; preds = %bb2
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %14 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h72dfb3c4b3c1bfd9E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1547 to %"core::panic::location::Location"*))
  store { i8*, i64 } %14, { i8*, i64 }* %2, align 8
  br label %bb35

bb35:                                             ; preds = %bb34, %bb33, %bb27, %bb20, %bb5
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i8*, i64 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i64 } %19, i64 %18, 1
  ret { i8*, i64 } %20

bb6:                                              ; preds = %bb3
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %21 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  %_16.0 = extractvalue { i64, i32 } %21, 0
  %_16.1 = extractvalue { i64, i32 } %21, 1
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::option::Option<T>::map
  %22 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h46595accff9d4d4bE"(i64 %_16.0, i32 %_16.1), !range !22
  store i32 %22, i32* %_15, align 4
  br label %bb8

bb8:                                              ; preds = %bb7
  %23 = load i32, i32* %_15, align 4, !range !22
  %24 = sub i32 %23, 1114112
  %25 = icmp eq i32 %24, 0
  %_19 = select i1 %25, i64 0, i64 1
  %26 = icmp eq i64 %_19, 1
  br i1 %26, label %bb10, label %bb9

bb10:                                             ; preds = %bb8
  %27 = load i32, i32* %_15, align 4, !range !80
  %28 = icmp eq i32 %27, 92
  br i1 %28, label %bb11, label %bb9

bb9:                                              ; preds = %bb10, %bb8
  %29 = load i32, i32* %_15, align 4, !range !22
  store i32 %29, i32* %ch, align 4
; call core::option::Option<T>::is_some
  %30 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17ha273fb9945a5aeaaE"(i32* align 4 dereferenceable(4) %ch)
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %ok, align 1
  br label %bb19

bb11:                                             ; preds = %bb10
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %32 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  %_21.0 = extractvalue { i64, i32 } %32, 0
  %_21.1 = extractvalue { i64, i32 } %32, 1
  br label %bb12

bb19:                                             ; preds = %bb16, %bb17, %bb18, %bb14, %bb9
  %33 = load i8, i8* %ok, align 1, !range !2
  %_32 = trunc i8 %33 to i1
  %_31 = xor i1 %_32, true
  br i1 %_31, label %bb20, label %bb21

bb12:                                             ; preds = %bb11
; call core::option::Option<T>::map
  %34 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h9a4fe630b4828fafE"(i64 %_21.0, i32 %_21.1), !range !22
  store i32 %34, i32* %_20, align 4
  br label %bb13

bb13:                                             ; preds = %bb12
  %35 = load i32, i32* %_20, align 4, !range !22
  %36 = sub i32 %35, 1114112
  %37 = icmp eq i32 %36, 0
  %_24 = select i1 %37, i64 0, i64 1
  %38 = icmp eq i64 %_24, 1
  br i1 %38, label %bb15, label %bb14

bb15:                                             ; preds = %bb13
  %39 = load i32, i32* %_20, align 4, !range !80
  switch i32 %39, label %bb14 [
    i32 120, label %bb16
    i32 117, label %bb17
    i32 110, label %bb18
    i32 114, label %bb18
    i32 116, label %bb18
    i32 92, label %bb18
    i32 48, label %bb18
    i32 39, label %bb18
    i32 34, label %bb18
  ]

bb14:                                             ; preds = %bb15, %bb13
  store i8 0, i8* %ok, align 1
  br label %bb19

bb16:                                             ; preds = %bb15
; call proc_macro2::parse::backslash_x_char
  %40 = call zeroext i1 @_ZN11proc_macro25parse16backslash_x_char17h420e12e6b586036dE(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %ok, align 1
  br label %bb19

bb17:                                             ; preds = %bb15
; call proc_macro2::parse::backslash_u
  %42 = call zeroext i1 @_ZN11proc_macro25parse11backslash_u17h61700c57ac7e117aE(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %ok, align 1
  br label %bb19

bb18:                                             ; preds = %bb15, %bb15, %bb15, %bb15, %bb15, %bb15, %bb15
  store i8 1, i8* %ok, align 1
  br label %bb19

bb21:                                             ; preds = %bb19
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %44 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  %_37.0 = extractvalue { i64, i32 } %44, 0
  %_37.1 = extractvalue { i64, i32 } %44, 1
  br label %bb22

bb20:                                             ; preds = %bb19
  %45 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %45, align 8
  br label %bb35

bb22:                                             ; preds = %bb21
; call core::option::Option<T>::ok_or
  %46 = call { i64, i32 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h21df77647a4b4599E"(i64 %_37.0, i32 %_37.1)
  %_36.0 = extractvalue { i64, i32 } %46, 0
  %_36.1 = extractvalue { i64, i32 } %46, 1
  br label %bb23

bb23:                                             ; preds = %bb22
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %47 = call { i64, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h40c0b469fab2e112E"(i64 %_36.0, i32 %_36.1)
  store { i64, i32 } %47, { i64, i32 }* %_35, align 8
  br label %bb24

bb24:                                             ; preds = %bb23
  %48 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_35, i32 0, i32 1
  %49 = load i32, i32* %48, align 8, !range !22
  %50 = sub i32 %49, 1114112
  %51 = icmp eq i32 %50, 0
  %_40 = select i1 %51, i64 1, i64 0
  switch i64 %_40, label %bb26 [
    i64 0, label %bb25
    i64 1, label %bb27
  ]

bb26:                                             ; preds = %bb24
  unreachable

bb25:                                             ; preds = %bb24
  %52 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_35, i32 0, i32 0
  %val.02 = load i64, i64* %52, align 8
  %53 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_35, i32 0, i32 1
  %val.13 = load i32, i32* %53, align 8, !range !80
; call proc_macro2::parse::Cursor::advance
  %54 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input1, i64 %val.02)
  store { i8*, i64 } %54, { i8*, i64 }* %_48, align 8
  br label %bb28

bb27:                                             ; preds = %bb24
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %55 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h72dfb3c4b3c1bfd9E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1549 to %"core::panic::location::Location"*))
  store { i8*, i64 } %55, { i8*, i64 }* %2, align 8
  br label %bb35

bb28:                                             ; preds = %bb25
; call proc_macro2::parse::Cursor::parse
  %56 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor5parse17h695267df20f2c6e9E({ i8*, i64 }* align 8 dereferenceable(16) %_48, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1608 to [0 x i8]*), i64 1)
  %_46.0 = extractvalue { i8*, i64 } %56, 0
  %_46.1 = extractvalue { i8*, i64 } %56, 1
  br label %bb29

bb29:                                             ; preds = %bb28
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %57 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb2dc13e984552c4bE"(i8* align 1 %_46.0, i64 %_46.1)
  store { i8*, i64 } %57, { i8*, i64 }* %_45, align 8
  br label %bb30

bb30:                                             ; preds = %bb29
  %58 = bitcast { i8*, i64 }* %_45 to {}**
  %59 = load {}*, {}** %58, align 8
  %60 = icmp eq {}* %59, null
  %_53 = select i1 %60, i64 1, i64 0
  switch i64 %_53, label %bb32 [
    i64 0, label %bb31
    i64 1, label %bb33
  ]

bb32:                                             ; preds = %bb30
  unreachable

bb31:                                             ; preds = %bb30
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_45, i32 0, i32 0
  %val.04 = load i8*, i8** %61, align 8, !nonnull !20
  %62 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_45, i32 0, i32 1
  %val.15 = load i64, i64* %62, align 8
; call proc_macro2::parse::literal_suffix
  %63 = call { i8*, i64 } @_ZN11proc_macro25parse14literal_suffix17h353c2b44f6f52d7eE(i8* nonnull align 1 %val.04, i64 %val.15)
  %_57.0 = extractvalue { i8*, i64 } %63, 0
  %_57.1 = extractvalue { i8*, i64 } %63, 1
  br label %bb34

bb33:                                             ; preds = %bb30
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %64 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h72dfb3c4b3c1bfd9E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1552 to %"core::panic::location::Location"*))
  store { i8*, i64 } %64, { i8*, i64 }* %2, align 8
  br label %bb35

bb34:                                             ; preds = %bb31
  %65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_57.0, i8** %65, align 8
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_57.1, i64* %66, align 8
  br label %bb35
}

; proc_macro2::parse::character::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN11proc_macro25parse9character28_$u7b$$u7b$closure$u7d$$u7d$17h103b207451ec3db5E"(i64 %_2.0, i32 %_2.1) unnamed_addr #0 {
start:
  ret i32 %_2.1
}

; proc_macro2::parse::character::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN11proc_macro25parse9character28_$u7b$$u7b$closure$u7d$$u7d$17he13bf60694f3ebdfE"(i64 %_2.0, i32 %_2.1) unnamed_addr #0 {
start:
  ret i32 %_2.1
}

; proc_macro2::parse::backslash_x_char
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse16backslash_x_char17h1cdd943f8445ff6fE(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars) unnamed_addr #1 {
start:
  %_8 = alloca { i64, i32 }, align 8
  %_2 = alloca { i64, i32 }, align 8
  %0 = alloca i8, align 1
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %1 = call { i64, i32 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h326ec6dedebd3983E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars)
  store { i64, i32 } %1, { i64, i32 }* %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_2, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !range !22
  %4 = sub i32 %3, 1114112
  %5 = icmp eq i32 %4, 0
  %_4 = select i1 %5, i64 0, i64 1
  switch i64 %_4, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb19

bb4:                                              ; preds = %bb1
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_2, i32 0, i32 1
  %ch = load i32, i32* %6, align 8, !range !80
  %_6 = icmp ule i32 48, %ch
  br i1 %_6, label %bb5, label %bb6

bb6:                                              ; preds = %bb5, %bb4
  store i8 0, i8* %0, align 1
  br label %bb19

bb5:                                              ; preds = %bb4
  %_7 = icmp ule i32 %ch, 55
  br i1 %_7, label %bb7, label %bb6

bb7:                                              ; preds = %bb5
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %7 = call { i64, i32 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h326ec6dedebd3983E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars)
  store { i64, i32 } %7, { i64, i32 }* %_8, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_8, i32 0, i32 1
  %9 = load i32, i32* %8, align 8, !range !22
  %10 = sub i32 %9, 1114112
  %11 = icmp eq i32 %10, 0
  %_10 = select i1 %11, i64 0, i64 1
  switch i64 %_10, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb9:                                              ; preds = %bb8
  store i8 0, i8* %0, align 1
  br label %bb19

bb11:                                             ; preds = %bb8
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_8, i32 0, i32 1
  %ch1 = load i32, i32* %12, align 8, !range !80
  %_16 = icmp ule i32 48, %ch1
  br i1 %_16, label %bb12, label %bb13

bb13:                                             ; preds = %bb12, %bb11
  %_14 = icmp ule i32 97, %ch1
  br i1 %_14, label %bb14, label %bb15

bb12:                                             ; preds = %bb11
  %_17 = icmp ule i32 %ch1, 57
  br i1 %_17, label %bb18, label %bb13

bb18:                                             ; preds = %bb16, %bb14, %bb12
  store i8 1, i8* %0, align 1
  br label %bb19

bb15:                                             ; preds = %bb14, %bb13
  %_12 = icmp ule i32 65, %ch1
  br i1 %_12, label %bb16, label %bb17

bb14:                                             ; preds = %bb13
  %_15 = icmp ule i32 %ch1, 102
  br i1 %_15, label %bb18, label %bb15

bb17:                                             ; preds = %bb16, %bb15
  store i8 0, i8* %0, align 1
  br label %bb19

bb16:                                             ; preds = %bb15
  %_13 = icmp ule i32 %ch1, 70
  br i1 %_13, label %bb18, label %bb17

bb19:                                             ; preds = %bb2, %bb6, %bb9, %bb17, %bb18
  %13 = load i8, i8* %0, align 1, !range !2
  %14 = trunc i8 %13 to i1
  ret i1 %14
}

; proc_macro2::parse::backslash_x_char
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse16backslash_x_char17h420e12e6b586036dE(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars) unnamed_addr #1 {
start:
  %_8 = alloca { i64, i32 }, align 8
  %_2 = alloca { i64, i32 }, align 8
  %0 = alloca i8, align 1
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %1 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  store { i64, i32 } %1, { i64, i32 }* %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_2, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !range !22
  %4 = sub i32 %3, 1114112
  %5 = icmp eq i32 %4, 0
  %_4 = select i1 %5, i64 0, i64 1
  switch i64 %_4, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb19

bb4:                                              ; preds = %bb1
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_2, i32 0, i32 1
  %ch = load i32, i32* %6, align 8, !range !80
  %_6 = icmp ule i32 48, %ch
  br i1 %_6, label %bb5, label %bb6

bb6:                                              ; preds = %bb5, %bb4
  store i8 0, i8* %0, align 1
  br label %bb19

bb5:                                              ; preds = %bb4
  %_7 = icmp ule i32 %ch, 55
  br i1 %_7, label %bb7, label %bb6

bb7:                                              ; preds = %bb5
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %7 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  store { i64, i32 } %7, { i64, i32 }* %_8, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_8, i32 0, i32 1
  %9 = load i32, i32* %8, align 8, !range !22
  %10 = sub i32 %9, 1114112
  %11 = icmp eq i32 %10, 0
  %_10 = select i1 %11, i64 0, i64 1
  switch i64 %_10, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb9:                                              ; preds = %bb8
  store i8 0, i8* %0, align 1
  br label %bb19

bb11:                                             ; preds = %bb8
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_8, i32 0, i32 1
  %ch1 = load i32, i32* %12, align 8, !range !80
  %_16 = icmp ule i32 48, %ch1
  br i1 %_16, label %bb12, label %bb13

bb13:                                             ; preds = %bb12, %bb11
  %_14 = icmp ule i32 97, %ch1
  br i1 %_14, label %bb14, label %bb15

bb12:                                             ; preds = %bb11
  %_17 = icmp ule i32 %ch1, 57
  br i1 %_17, label %bb18, label %bb13

bb18:                                             ; preds = %bb16, %bb14, %bb12
  store i8 1, i8* %0, align 1
  br label %bb19

bb15:                                             ; preds = %bb14, %bb13
  %_12 = icmp ule i32 65, %ch1
  br i1 %_12, label %bb16, label %bb17

bb14:                                             ; preds = %bb13
  %_15 = icmp ule i32 %ch1, 102
  br i1 %_15, label %bb18, label %bb15

bb17:                                             ; preds = %bb16, %bb15
  store i8 0, i8* %0, align 1
  br label %bb19

bb16:                                             ; preds = %bb15
  %_13 = icmp ule i32 %ch1, 70
  br i1 %_13, label %bb18, label %bb17

bb19:                                             ; preds = %bb2, %bb6, %bb9, %bb17, %bb18
  %13 = load i8, i8* %0, align 1, !range !2
  %14 = trunc i8 %13 to i1
  ret i1 %14
}

; proc_macro2::parse::backslash_x_byte
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse16backslash_x_byte17h92baa9685d576834E(%"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* align 8 dereferenceable(24) %chars) unnamed_addr #1 {
start:
  %_12 = alloca %"core::option::Option<(usize, u8)>", align 8
  %_2 = alloca %"core::option::Option<(usize, u8)>", align 8
  %0 = alloca i8, align 1
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h519dcc453b00ca96E"(%"core::option::Option<(usize, u8)>"* noalias nocapture sret(%"core::option::Option<(usize, u8)>") dereferenceable(24) %_2, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* align 8 dereferenceable(24) %chars)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"core::option::Option<(usize, u8)>"* %_2 to i64*
  %_4 = load i64, i64* %1, align 8, !range !18
  switch i64 %_4, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb23

bb4:                                              ; preds = %bb1
  %2 = bitcast %"core::option::Option<(usize, u8)>"* %_2 to %"core::option::Option<(usize, u8)>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %3, i32 0, i32 1
  %ch = load i8, i8* %4, align 8
  %_10 = icmp ule i8 48, %ch
  br i1 %_10, label %bb5, label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %_8 = icmp ule i8 97, %ch
  br i1 %_8, label %bb7, label %bb8

bb5:                                              ; preds = %bb4
  %_11 = icmp ule i8 %ch, 57
  br i1 %_11, label %bb11, label %bb6

bb11:                                             ; preds = %bb9, %bb7, %bb5
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h519dcc453b00ca96E"(%"core::option::Option<(usize, u8)>"* noalias nocapture sret(%"core::option::Option<(usize, u8)>") dereferenceable(24) %_12, %"core::iter::adapters::enumerate::Enumerate<core::str::iter::Bytes>"* align 8 dereferenceable(24) %chars)
  br label %bb12

bb8:                                              ; preds = %bb7, %bb6
  %_6 = icmp ule i8 65, %ch
  br i1 %_6, label %bb9, label %bb10

bb7:                                              ; preds = %bb6
  %_9 = icmp ule i8 %ch, 102
  br i1 %_9, label %bb11, label %bb8

bb10:                                             ; preds = %bb9, %bb8
  store i8 0, i8* %0, align 1
  br label %bb23

bb9:                                              ; preds = %bb8
  %_7 = icmp ule i8 %ch, 70
  br i1 %_7, label %bb11, label %bb10

bb12:                                             ; preds = %bb11
  %5 = bitcast %"core::option::Option<(usize, u8)>"* %_12 to i64*
  %_14 = load i64, i64* %5, align 8, !range !18
  switch i64 %_14, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ]

bb14:                                             ; preds = %bb12
  unreachable

bb13:                                             ; preds = %bb12
  store i8 0, i8* %0, align 1
  br label %bb23

bb15:                                             ; preds = %bb12
  %6 = bitcast %"core::option::Option<(usize, u8)>"* %_12 to %"core::option::Option<(usize, u8)>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<(usize, u8)>::Some", %"core::option::Option<(usize, u8)>::Some"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %7, i32 0, i32 1
  %ch1 = load i8, i8* %8, align 8
  %_20 = icmp ule i8 48, %ch1
  br i1 %_20, label %bb16, label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %_18 = icmp ule i8 97, %ch1
  br i1 %_18, label %bb18, label %bb19

bb16:                                             ; preds = %bb15
  %_21 = icmp ule i8 %ch1, 57
  br i1 %_21, label %bb22, label %bb17

bb22:                                             ; preds = %bb20, %bb18, %bb16
  store i8 1, i8* %0, align 1
  br label %bb23

bb19:                                             ; preds = %bb18, %bb17
  %_16 = icmp ule i8 65, %ch1
  br i1 %_16, label %bb20, label %bb21

bb18:                                             ; preds = %bb17
  %_19 = icmp ule i8 %ch1, 102
  br i1 %_19, label %bb22, label %bb19

bb21:                                             ; preds = %bb20, %bb19
  store i8 0, i8* %0, align 1
  br label %bb23

bb20:                                             ; preds = %bb19
  %_17 = icmp ule i8 %ch1, 70
  br i1 %_17, label %bb22, label %bb21

bb23:                                             ; preds = %bb2, %bb10, %bb13, %bb21, %bb22
  %9 = load i8, i8* %0, align 1, !range !2
  %10 = trunc i8 %9 to i1
  ret i1 %10
}

; proc_macro2::parse::backslash_u
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse11backslash_u17h2c7230bbe5498218E(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars) unnamed_addr #1 {
start:
  %_41 = alloca i32, align 4
  %digit = alloca i8, align 1
  %_11 = alloca { i64, i32 }, align 8
  %iter = alloca %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"*, align 8
  %len = alloca i32, align 4
  %value = alloca i32, align 4
  %_2 = alloca { i64, i32 }, align 8
  %0 = alloca i8, align 1
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %1 = call { i64, i32 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h326ec6dedebd3983E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars)
  store { i64, i32 } %1, { i64, i32 }* %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_2, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !range !22
  %4 = sub i32 %3, 1114112
  %5 = icmp eq i32 %4, 0
  %_4 = select i1 %5, i64 0, i64 1
  switch i64 %_4, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb39

bb4:                                              ; preds = %bb1
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_2, i32 0, i32 1
  %ch = load i32, i32* %6, align 8, !range !80
  %7 = icmp eq i32 %ch, 123
  br i1 %7, label %bb6, label %bb5

bb6:                                              ; preds = %bb4
  store i32 0, i32* %value, align 4
  store i32 0, i32* %len, align 4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_8 = call align 8 dereferenceable(40) %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd8e8fada8bf37e3fE"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* align 8 dereferenceable(40) %chars)
  br label %bb7

bb5:                                              ; preds = %bb4
  store i8 0, i8* %0, align 1
  br label %bb39

bb39:                                             ; preds = %bb2, %bb12, %bb19, %bb31, %bb33, %bb5
  %8 = load i8, i8* %0, align 1, !range !2
  %9 = trunc i8 %8 to i1
  ret i1 %9

bb7:                                              ; preds = %bb6
  store %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"* %_8, %"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"** %iter, align 8
  br label %bb8

bb8:                                              ; preds = %bb28, %bb38, %bb7
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %10 = call { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h18a3ed321d1210caE"(%"core::iter::adapters::peekable::Peekable<core::str::iter::CharIndices>"** align 8 dereferenceable(8) %iter)
  store { i64, i32 } %10, { i64, i32 }* %_11, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_11, i32 0, i32 1
  %12 = load i32, i32* %11, align 8, !range !22
  %13 = sub i32 %12, 1114112
  %14 = icmp eq i32 %13, 0
  %_14 = select i1 %14, i64 0, i64 1
  switch i64 %_14, label %bb11 [
    i64 0, label %bb12
    i64 1, label %bb10
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb12:                                             ; preds = %bb9
  store i8 0, i8* %0, align 1
  br label %bb39

bb10:                                             ; preds = %bb9
  %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_11, i32 0, i32 1
  %ch1 = load i32, i32* %15, align 8, !range !80
  %_21 = icmp ule i32 48, %ch1
  br i1 %_21, label %bb13, label %bb14

bb14:                                             ; preds = %bb13, %bb10
  %_19 = icmp ule i32 97, %ch1
  br i1 %_19, label %bb15, label %bb16

bb13:                                             ; preds = %bb10
  %_22 = icmp ule i32 %ch1, 57
  br i1 %_22, label %bb20, label %bb14

bb20:                                             ; preds = %bb13
  %16 = icmp ule i32 %ch1, 1114111
  call void @llvm.assume(i1 %16)
  %_23 = trunc i32 %ch1 to i8
  %17 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %_23, i8 48)
  %_25.0 = extractvalue { i8, i1 } %17, 0
  %_25.1 = extractvalue { i8, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false)
  br i1 %18, label %panic, label %bb21

bb21:                                             ; preds = %bb20
  store i8 %_25.0, i8* %digit, align 1
  br label %bb32

panic:                                            ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1554 to %"core::panic::location::Location"*)) #19
  unreachable

bb32:                                             ; preds = %bb27, %bb24, %bb21
  %_43 = load i32, i32* %len, align 4
  %19 = icmp eq i32 %_43, 6
  br i1 %19, label %bb33, label %bb34

bb16:                                             ; preds = %bb15, %bb14
  %_17 = icmp ule i32 65, %ch1
  br i1 %_17, label %bb17, label %bb18

bb15:                                             ; preds = %bb14
  %_20 = icmp ule i32 %ch1, 102
  br i1 %_20, label %bb22, label %bb16

bb22:                                             ; preds = %bb15
  %20 = icmp ule i32 %ch1, 1114111
  call void @llvm.assume(i1 %20)
  %_27 = trunc i32 %ch1 to i8
  %21 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 10, i8 %_27)
  %_29.0 = extractvalue { i8, i1 } %21, 0
  %_29.1 = extractvalue { i8, i1 } %21, 1
  %22 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false)
  br i1 %22, label %panic2, label %bb23

bb23:                                             ; preds = %bb22
  %23 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %_29.0, i8 97)
  %_30.0 = extractvalue { i8, i1 } %23, 0
  %_30.1 = extractvalue { i8, i1 } %23, 1
  %24 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %24, label %panic3, label %bb24

panic2:                                           ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1556 to %"core::panic::location::Location"*)) #19
  unreachable

bb24:                                             ; preds = %bb23
  store i8 %_30.0, i8* %digit, align 1
  br label %bb32

panic3:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1556 to %"core::panic::location::Location"*)) #19
  unreachable

bb18:                                             ; preds = %bb17, %bb16
  switch i32 %ch1, label %bb19 [
    i32 95, label %bb28
    i32 125, label %bb29
  ]

bb17:                                             ; preds = %bb16
  %_18 = icmp ule i32 %ch1, 70
  br i1 %_18, label %bb25, label %bb18

bb25:                                             ; preds = %bb17
  %25 = icmp ule i32 %ch1, 1114111
  call void @llvm.assume(i1 %25)
  %_32 = trunc i32 %ch1 to i8
  %26 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 10, i8 %_32)
  %_34.0 = extractvalue { i8, i1 } %26, 0
  %_34.1 = extractvalue { i8, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false)
  br i1 %27, label %panic4, label %bb26

bb26:                                             ; preds = %bb25
  %28 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %_34.0, i8 65)
  %_35.0 = extractvalue { i8, i1 } %28, 0
  %_35.1 = extractvalue { i8, i1 } %28, 1
  %29 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false)
  br i1 %29, label %panic5, label %bb27

panic4:                                           ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1558 to %"core::panic::location::Location"*)) #19
  unreachable

bb27:                                             ; preds = %bb26
  store i8 %_35.0, i8* %digit, align 1
  br label %bb32

panic5:                                           ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1558 to %"core::panic::location::Location"*)) #19
  unreachable

bb33:                                             ; preds = %bb32
  store i8 0, i8* %0, align 1
  br label %bb39

bb34:                                             ; preds = %bb32
  %30 = load i32, i32* %value, align 4
  %31 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %30, i32 16)
  %_44.0 = extractvalue { i32, i1 } %31, 0
  %_44.1 = extractvalue { i32, i1 } %31, 1
  %32 = call i1 @llvm.expect.i1(i1 %_44.1, i1 false)
  br i1 %32, label %panic6, label %bb35

bb35:                                             ; preds = %bb34
  store i32 %_44.0, i32* %value, align 4
  %_46 = load i8, i8* %digit, align 1
; call core::convert::num::<impl core::convert::From<u8> for u32>::from
  %_45 = call i32 @"_ZN4core7convert3num63_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$u32$GT$4from17h93dadc74f1905e6bE"(i8 %_46)
  br label %bb36

panic6:                                           ; preds = %bb34
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.f to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1560 to %"core::panic::location::Location"*)) #19
  unreachable

bb36:                                             ; preds = %bb35
  %33 = load i32, i32* %value, align 4
  %34 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %33, i32 %_45)
  %_47.0 = extractvalue { i32, i1 } %34, 0
  %_47.1 = extractvalue { i32, i1 } %34, 1
  %35 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false)
  br i1 %35, label %panic7, label %bb37

bb37:                                             ; preds = %bb36
  store i32 %_47.0, i32* %value, align 4
  %36 = load i32, i32* %len, align 4
  %37 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 1)
  %_48.0 = extractvalue { i32, i1 } %37, 0
  %_48.1 = extractvalue { i32, i1 } %37, 1
  %38 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false)
  br i1 %38, label %panic8, label %bb38

panic7:                                           ; preds = %bb36
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1562 to %"core::panic::location::Location"*)) #19
  unreachable

bb38:                                             ; preds = %bb37
  store i32 %_48.0, i32* %len, align 4
  br label %bb8

panic8:                                           ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1564 to %"core::panic::location::Location"*)) #19
  unreachable

bb19:                                             ; preds = %bb28, %bb29, %bb18
  store i8 0, i8* %0, align 1
  br label %bb39

bb28:                                             ; preds = %bb18
  %_37 = load i32, i32* %len, align 4
  %_36 = icmp sgt i32 %_37, 0
  br i1 %_36, label %bb8, label %bb19

bb29:                                             ; preds = %bb18
  %_39 = load i32, i32* %len, align 4
  %_38 = icmp sgt i32 %_39, 0
  br i1 %_38, label %bb30, label %bb19

bb30:                                             ; preds = %bb29
  %_42 = load i32, i32* %value, align 4
; call core::char::convert::from_u32
  %39 = call i32 @_ZN4core4char7convert8from_u3217hceae4654701b1926E(i32 %_42), !range !22
  store i32 %39, i32* %_41, align 4
  br label %bb31

bb31:                                             ; preds = %bb30
; call core::option::Option<T>::is_some
  %40 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17ha273fb9945a5aeaaE"(i32* align 4 dereferenceable(4) %_41)
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %0, align 1
  br label %bb39
}

; proc_macro2::parse::backslash_u
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro25parse11backslash_u17h61700c57ac7e117aE(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars) unnamed_addr #1 {
start:
  %_41 = alloca i32, align 4
  %digit = alloca i8, align 1
  %_11 = alloca { i64, i32 }, align 8
  %iter = alloca %"core::str::iter::CharIndices"*, align 8
  %len = alloca i32, align 4
  %value = alloca i32, align 4
  %_2 = alloca { i64, i32 }, align 8
  %0 = alloca i8, align 1
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %1 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  store { i64, i32 } %1, { i64, i32 }* %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_2, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !range !22
  %4 = sub i32 %3, 1114112
  %5 = icmp eq i32 %4, 0
  %_4 = select i1 %5, i64 0, i64 1
  switch i64 %_4, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb39

bb4:                                              ; preds = %bb1
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_2, i32 0, i32 1
  %ch = load i32, i32* %6, align 8, !range !80
  %7 = icmp eq i32 %ch, 123
  br i1 %7, label %bb6, label %bb5

bb6:                                              ; preds = %bb4
  store i32 0, i32* %value, align 4
  store i32 0, i32* %len, align 4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_8 = call align 8 dereferenceable(24) %"core::str::iter::CharIndices"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he26099cc682e909bE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  br label %bb7

bb5:                                              ; preds = %bb4
  store i8 0, i8* %0, align 1
  br label %bb39

bb39:                                             ; preds = %bb2, %bb12, %bb19, %bb31, %bb33, %bb5
  %8 = load i8, i8* %0, align 1, !range !2
  %9 = trunc i8 %8 to i1
  ret i1 %9

bb7:                                              ; preds = %bb6
  store %"core::str::iter::CharIndices"* %_8, %"core::str::iter::CharIndices"** %iter, align 8
  br label %bb8

bb8:                                              ; preds = %bb28, %bb38, %bb7
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %10 = call { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0cf5ee7912affc8eE"(%"core::str::iter::CharIndices"** align 8 dereferenceable(8) %iter)
  store { i64, i32 } %10, { i64, i32 }* %_11, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_11, i32 0, i32 1
  %12 = load i32, i32* %11, align 8, !range !22
  %13 = sub i32 %12, 1114112
  %14 = icmp eq i32 %13, 0
  %_14 = select i1 %14, i64 0, i64 1
  switch i64 %_14, label %bb11 [
    i64 0, label %bb12
    i64 1, label %bb10
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb12:                                             ; preds = %bb9
  store i8 0, i8* %0, align 1
  br label %bb39

bb10:                                             ; preds = %bb9
  %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_11, i32 0, i32 1
  %ch1 = load i32, i32* %15, align 8, !range !80
  %_21 = icmp ule i32 48, %ch1
  br i1 %_21, label %bb13, label %bb14

bb14:                                             ; preds = %bb13, %bb10
  %_19 = icmp ule i32 97, %ch1
  br i1 %_19, label %bb15, label %bb16

bb13:                                             ; preds = %bb10
  %_22 = icmp ule i32 %ch1, 57
  br i1 %_22, label %bb20, label %bb14

bb20:                                             ; preds = %bb13
  %16 = icmp ule i32 %ch1, 1114111
  call void @llvm.assume(i1 %16)
  %_23 = trunc i32 %ch1 to i8
  %17 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %_23, i8 48)
  %_25.0 = extractvalue { i8, i1 } %17, 0
  %_25.1 = extractvalue { i8, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false)
  br i1 %18, label %panic, label %bb21

bb21:                                             ; preds = %bb20
  store i8 %_25.0, i8* %digit, align 1
  br label %bb32

panic:                                            ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1554 to %"core::panic::location::Location"*)) #19
  unreachable

bb32:                                             ; preds = %bb27, %bb24, %bb21
  %_43 = load i32, i32* %len, align 4
  %19 = icmp eq i32 %_43, 6
  br i1 %19, label %bb33, label %bb34

bb16:                                             ; preds = %bb15, %bb14
  %_17 = icmp ule i32 65, %ch1
  br i1 %_17, label %bb17, label %bb18

bb15:                                             ; preds = %bb14
  %_20 = icmp ule i32 %ch1, 102
  br i1 %_20, label %bb22, label %bb16

bb22:                                             ; preds = %bb15
  %20 = icmp ule i32 %ch1, 1114111
  call void @llvm.assume(i1 %20)
  %_27 = trunc i32 %ch1 to i8
  %21 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 10, i8 %_27)
  %_29.0 = extractvalue { i8, i1 } %21, 0
  %_29.1 = extractvalue { i8, i1 } %21, 1
  %22 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false)
  br i1 %22, label %panic2, label %bb23

bb23:                                             ; preds = %bb22
  %23 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %_29.0, i8 97)
  %_30.0 = extractvalue { i8, i1 } %23, 0
  %_30.1 = extractvalue { i8, i1 } %23, 1
  %24 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %24, label %panic3, label %bb24

panic2:                                           ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1556 to %"core::panic::location::Location"*)) #19
  unreachable

bb24:                                             ; preds = %bb23
  store i8 %_30.0, i8* %digit, align 1
  br label %bb32

panic3:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1556 to %"core::panic::location::Location"*)) #19
  unreachable

bb18:                                             ; preds = %bb17, %bb16
  switch i32 %ch1, label %bb19 [
    i32 95, label %bb28
    i32 125, label %bb29
  ]

bb17:                                             ; preds = %bb16
  %_18 = icmp ule i32 %ch1, 70
  br i1 %_18, label %bb25, label %bb18

bb25:                                             ; preds = %bb17
  %25 = icmp ule i32 %ch1, 1114111
  call void @llvm.assume(i1 %25)
  %_32 = trunc i32 %ch1 to i8
  %26 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 10, i8 %_32)
  %_34.0 = extractvalue { i8, i1 } %26, 0
  %_34.1 = extractvalue { i8, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false)
  br i1 %27, label %panic4, label %bb26

bb26:                                             ; preds = %bb25
  %28 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %_34.0, i8 65)
  %_35.0 = extractvalue { i8, i1 } %28, 0
  %_35.1 = extractvalue { i8, i1 } %28, 1
  %29 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false)
  br i1 %29, label %panic5, label %bb27

panic4:                                           ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1558 to %"core::panic::location::Location"*)) #19
  unreachable

bb27:                                             ; preds = %bb26
  store i8 %_35.0, i8* %digit, align 1
  br label %bb32

panic5:                                           ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1558 to %"core::panic::location::Location"*)) #19
  unreachable

bb33:                                             ; preds = %bb32
  store i8 0, i8* %0, align 1
  br label %bb39

bb34:                                             ; preds = %bb32
  %30 = load i32, i32* %value, align 4
  %31 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %30, i32 16)
  %_44.0 = extractvalue { i32, i1 } %31, 0
  %_44.1 = extractvalue { i32, i1 } %31, 1
  %32 = call i1 @llvm.expect.i1(i1 %_44.1, i1 false)
  br i1 %32, label %panic6, label %bb35

bb35:                                             ; preds = %bb34
  store i32 %_44.0, i32* %value, align 4
  %_46 = load i8, i8* %digit, align 1
; call core::convert::num::<impl core::convert::From<u8> for u32>::from
  %_45 = call i32 @"_ZN4core7convert3num63_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$u32$GT$4from17h93dadc74f1905e6bE"(i8 %_46)
  br label %bb36

panic6:                                           ; preds = %bb34
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.f to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1560 to %"core::panic::location::Location"*)) #19
  unreachable

bb36:                                             ; preds = %bb35
  %33 = load i32, i32* %value, align 4
  %34 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %33, i32 %_45)
  %_47.0 = extractvalue { i32, i1 } %34, 0
  %_47.1 = extractvalue { i32, i1 } %34, 1
  %35 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false)
  br i1 %35, label %panic7, label %bb37

bb37:                                             ; preds = %bb36
  store i32 %_47.0, i32* %value, align 4
  %36 = load i32, i32* %len, align 4
  %37 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 1)
  %_48.0 = extractvalue { i32, i1 } %37, 0
  %_48.1 = extractvalue { i32, i1 } %37, 1
  %38 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false)
  br i1 %38, label %panic8, label %bb38

panic7:                                           ; preds = %bb36
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1562 to %"core::panic::location::Location"*)) #19
  unreachable

bb38:                                             ; preds = %bb37
  store i32 %_48.0, i32* %len, align 4
  br label %bb8

panic8:                                           ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1564 to %"core::panic::location::Location"*)) #19
  unreachable

bb19:                                             ; preds = %bb28, %bb29, %bb18
  store i8 0, i8* %0, align 1
  br label %bb39

bb28:                                             ; preds = %bb18
  %_37 = load i32, i32* %len, align 4
  %_36 = icmp sgt i32 %_37, 0
  br i1 %_36, label %bb8, label %bb19

bb29:                                             ; preds = %bb18
  %_39 = load i32, i32* %len, align 4
  %_38 = icmp sgt i32 %_39, 0
  br i1 %_38, label %bb30, label %bb19

bb30:                                             ; preds = %bb29
  %_42 = load i32, i32* %value, align 4
; call core::char::convert::from_u32
  %39 = call i32 @_ZN4core4char7convert8from_u3217hceae4654701b1926E(i32 %_42), !range !22
  store i32 %39, i32* %_41, align 4
  br label %bb31

bb31:                                             ; preds = %bb30
; call core::option::Option<T>::is_some
  %40 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17ha273fb9945a5aeaaE"(i32* align 4 dereferenceable(4) %_41)
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %0, align 1
  br label %bb39
}

; proc_macro2::parse::float
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse5float17hb5d44cf9c5d27061E(i8* nonnull align 1 %input.0, i64 %input.1) unnamed_addr #1 {
start:
  %val = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_21 = alloca %"core::result::Result<(parse::Cursor, &str), parse::Reject>", align 8
  %_20 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>", align 8
  %_19 = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_12 = alloca { i8*, i8* }, align 8
  %_10 = alloca i32, align 4
  %_3 = alloca { i8*, i64 }, align 8
  %rest = alloca { i8*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
; call proc_macro2::parse::float_digits
  %1 = call { i8*, i64 } @_ZN11proc_macro25parse12float_digits17h4670315f941ffa16E(i8* nonnull align 1 %input.0, i64 %input.1)
  %_4.0 = extractvalue { i8*, i64 } %1, 0
  %_4.1 = extractvalue { i8*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %2 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb2dc13e984552c4bE"(i8* align 1 %_4.0, i64 %_4.1)
  store { i8*, i64 } %2, { i8*, i64 }* %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i8*, i64 }* %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_6 = select i1 %5, i64 1, i64 0
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 0
  %val.0 = load i8*, i8** %6, align 8, !nonnull !20
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 1
  %val.1 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 0
  store i8* %val.0, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 1
  store i64 %val.1, i64* %9, align 8
; call proc_macro2::parse::Cursor::chars
  %10 = call { i8*, i8* } @_ZN11proc_macro25parse6Cursor5chars17h66a90ef9a000288fE({ i8*, i64 }* align 8 dereferenceable(16) %rest)
  store { i8*, i8* } %10, { i8*, i8* }* %_12, align 8
  br label %bb6

bb5:                                              ; preds = %bb2
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %11 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h72dfb3c4b3c1bfd9E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1566 to %"core::panic::location::Location"*))
  store { i8*, i64 } %11, { i8*, i64 }* %0, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15, %bb5
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { i8*, i64 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i64 } %16, i64 %15, 1
  ret { i8*, i64 } %17

bb6:                                              ; preds = %bb3
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %18 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %_12), !range !22
  store i32 %18, i32* %_10, align 4
  br label %bb7

bb7:                                              ; preds = %bb6
  %19 = load i32, i32* %_10, align 4, !range !22
  %20 = sub i32 %19, 1114112
  %21 = icmp eq i32 %20, 0
  %_14 = select i1 %21, i64 0, i64 1
  %22 = icmp eq i64 %_14, 1
  br i1 %22, label %bb8, label %bb16

bb8:                                              ; preds = %bb7
  %ch = load i32, i32* %_10, align 4, !range !80
; call proc_macro2::fallback::is_ident_start
  %_16 = call zeroext i1 @_ZN11proc_macro28fallback14is_ident_start17hf69be4da804f0785E(i32 %ch)
  br label %bb9

bb16:                                             ; preds = %bb13, %bb9, %bb7
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 0
  %_27.0 = load i8*, i8** %23, align 8, !nonnull !20
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 1
  %_27.1 = load i64, i64* %24, align 8
; call proc_macro2::parse::word_break
  %25 = call { i8*, i64 } @_ZN11proc_macro25parse10word_break17h2b73ad6474b02b4bE(i8* nonnull align 1 %_27.0, i64 %_27.1)
  store { i8*, i64 } %25, { i8*, i64 }* %0, align 8
  br label %bb17

bb9:                                              ; preds = %bb8
  br i1 %_16, label %bb10, label %bb16

bb10:                                             ; preds = %bb9
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 0
  %_22.0 = load i8*, i8** %26, align 8, !nonnull !20
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 1
  %_22.1 = load i64, i64* %27, align 8
; call proc_macro2::parse::ident_not_raw
  call void @_ZN11proc_macro25parse13ident_not_raw17h903fae6b922b3d6eE(%"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, &str), parse::Reject>") dereferenceable(32) %_21, i8* nonnull align 1 %_22.0, i64 %_22.1)
  br label %bb11

bb11:                                             ; preds = %bb10
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h872dfb803c62b9c2E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>") dereferenceable(32) %_20, %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture dereferenceable(32) %_21)
  br label %bb12

bb12:                                             ; preds = %bb11
  %28 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* %_20 to {}**
  %29 = load {}*, {}** %28, align 8
  %30 = icmp eq {}* %29, null
  %_23 = select i1 %30, i64 1, i64 0
  switch i64 %_23, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ]

bb14:                                             ; preds = %bb12
  unreachable

bb13:                                             ; preds = %bb12
  %31 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* %_20 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Continue"*
  %32 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Continue"* %31 to { { i8*, i64 }, { [0 x i8]*, i64 } }*
  %33 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %val to i8*
  %34 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 32, i1 false)
  %35 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_19 to i8*
  %36 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 32, i1 false)
  %37 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_19 to { i8*, i64 }*
  %38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %37, i32 0, i32 0
  %_18.0 = load i8*, i8** %38, align 8, !nonnull !20
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %37, i32 0, i32 1
  %_18.1 = load i64, i64* %39, align 8
  %40 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 0
  store i8* %_18.0, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 1
  store i64 %_18.1, i64* %41, align 8
  br label %bb16

bb15:                                             ; preds = %bb12
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %42 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h72dfb3c4b3c1bfd9E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1568 to %"core::panic::location::Location"*))
  store { i8*, i64 } %42, { i8*, i64 }* %0, align 8
  br label %bb17
}

; proc_macro2::parse::float_digits
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse12float_digits17h4670315f941ffa16E(i8* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_52 = alloca i32*, align 8
  %has_exp_value = alloca i8, align 1
  %has_sign = alloca i8, align 1
  %token_before_exp = alloca { i8*, i64 }, align 8
  %_39 = alloca i8, align 1
  %_18 = alloca i32*, align 8
  %has_exp = alloca i8, align 1
  %has_dot = alloca i8, align 1
  %len = alloca i64, align 8
  %_10 = alloca i8, align 1
  %_5 = alloca i32, align 4
  %chars = alloca %"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>", align 8
  %2 = alloca { i8*, i64 }, align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call proc_macro2::parse::Cursor::chars
  %5 = call { i8*, i8* } @_ZN11proc_macro25parse6Cursor5chars17h66a90ef9a000288fE({ i8*, i64 }* align 8 dereferenceable(16) %input)
  %_3.0 = extractvalue { i8*, i8* } %5, 0
  %_3.1 = extractvalue { i8*, i8* } %5, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::peekable
  call void @_ZN4core4iter6traits8iterator8Iterator8peekable17h265198a04e813f11E(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* noalias nocapture sret(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>") dereferenceable(24) %chars, i8* nonnull %_3.0, i8* %_3.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %6 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e866656704d5661E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* align 8 dereferenceable(24) %chars), !range !22
  store i32 %6, i32* %_5, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = load i32, i32* %_5, align 4, !range !22
  %8 = sub i32 %7, 1114112
  %9 = icmp eq i32 %8, 0
  %_7 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_7, 1
  br i1 %10, label %bb5, label %bb4

bb5:                                              ; preds = %bb3
  %_12 = load i32, i32* %_5, align 4, !range !80
  %_11 = icmp uge i32 %_12, 48
  br i1 %_11, label %bb7, label %bb6

bb4:                                              ; preds = %bb8, %bb3
  %11 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %11, align 8
  br label %bb62

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_10, align 1
  br label %bb8

bb7:                                              ; preds = %bb5
  %_14 = load i32, i32* %_5, align 4, !range !80
  %_13 = icmp ule i32 %_14, 57
  %12 = zext i1 %_13 to i8
  store i8 %12, i8* %_10, align 1
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  %13 = load i8, i8* %_10, align 1, !range !2
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb9, label %bb4

bb9:                                              ; preds = %bb8
  %ch = load i32, i32* %_5, align 4, !range !80
  store i64 1, i64* %len, align 8
  store i8 0, i8* %has_dot, align 1
  store i8 0, i8* %has_exp, align 1
  br label %bb10

bb10:                                             ; preds = %bb17, %bb25, %bb9
; call core::iter::adapters::peekable::Peekable<I>::peek
  %15 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h6c6ac8e500c7bf91E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* align 8 dereferenceable(24) %chars)
  store i32* %15, i32** %_18, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  %16 = bitcast i32** %_18 to {}**
  %17 = load {}*, {}** %16, align 8
  %18 = icmp eq {}* %17, null
  %_20 = select i1 %18, i64 0, i64 1
  %19 = icmp eq i64 %_20, 1
  br i1 %19, label %bb12, label %bb29

bb12:                                             ; preds = %bb11
  %20 = load i32*, i32** %_18, align 8, !nonnull !20
  %ch1 = load i32, i32* %20, align 4, !range !80
  %_22 = icmp ule i32 48, %ch1
  br i1 %_22, label %bb13, label %bb14

bb29:                                             ; preds = %bb18, %bb28, %bb14, %bb11
  %21 = load i8, i8* %has_dot, align 1, !range !2
  %_40 = trunc i8 %21 to i1
  br i1 %_40, label %bb30, label %bb31

bb14:                                             ; preds = %bb13, %bb12
  switch i32 %ch1, label %bb29 [
    i32 95, label %bb15
    i32 46, label %bb18
    i32 101, label %bb26
    i32 69, label %bb26
  ]

bb13:                                             ; preds = %bb12
  %_23 = icmp ule i32 %ch1, 57
  br i1 %_23, label %bb15, label %bb14

bb15:                                             ; preds = %bb14, %bb13
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %_24 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e866656704d5661E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* align 8 dereferenceable(24) %chars), !range !22
  br label %bb16

bb18:                                             ; preds = %bb14
  %22 = load i8, i8* %has_dot, align 1, !range !2
  %_27 = trunc i8 %22 to i1
  br i1 %_27, label %bb29, label %bb19

bb26:                                             ; preds = %bb14, %bb14
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %_35 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e866656704d5661E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* align 8 dereferenceable(24) %chars), !range !22
  br label %bb27

bb27:                                             ; preds = %bb26
  %23 = load i64, i64* %len, align 8
  %24 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %23, i64 1)
  %_37.0 = extractvalue { i64, i1 } %24, 0
  %_37.1 = extractvalue { i64, i1 } %24, 1
  %25 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false)
  br i1 %25, label %panic, label %bb28

bb28:                                             ; preds = %bb27
  store i64 %_37.0, i64* %len, align 8
  store i8 1, i8* %has_exp, align 1
  br label %bb29

panic:                                            ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1570 to %"core::panic::location::Location"*)) #19
  unreachable

bb19:                                             ; preds = %bb18
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %_28 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e866656704d5661E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* align 8 dereferenceable(24) %chars), !range !22
  br label %bb20

bb31:                                             ; preds = %bb29
  %26 = load i8, i8* %has_exp, align 1, !range !2
  %_41 = trunc i8 %26 to i1
  %27 = zext i1 %_41 to i8
  store i8 %27, i8* %_39, align 1
  br label %bb32

bb30:                                             ; preds = %bb29
  store i8 1, i8* %_39, align 1
  br label %bb32

bb32:                                             ; preds = %bb31, %bb30
  %28 = load i8, i8* %_39, align 1, !range !2
  %29 = trunc i8 %28 to i1
  %_38 = xor i1 %29, true
  br i1 %_38, label %bb33, label %bb34

bb34:                                             ; preds = %bb32
  %30 = load i8, i8* %has_exp, align 1, !range !2
  %_42 = trunc i8 %30 to i1
  br i1 %_42, label %bb35, label %bb60

bb33:                                             ; preds = %bb32
  %31 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %31, align 8
  br label %bb62

bb62:                                             ; preds = %bb4, %bb23, %bb61, %bb48, %bb59, %bb33
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i8*, i64 } undef, i8* %33, 0
  %37 = insertvalue { i8*, i64 } %36, i64 %35, 1
  ret { i8*, i64 } %37

bb60:                                             ; preds = %bb58, %bb34
  %_73 = load i64, i64* %len, align 8
; call proc_macro2::parse::Cursor::advance
  %38 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %_73)
  %_71.0 = extractvalue { i8*, i64 } %38, 0
  %_71.1 = extractvalue { i8*, i64 } %38, 1
  br label %bb61

bb35:                                             ; preds = %bb34
  %39 = load i8, i8* %has_dot, align 1, !range !2
  %_44 = trunc i8 %39 to i1
  br i1 %_44, label %bb36, label %bb39

bb39:                                             ; preds = %bb35
  %40 = bitcast { i8*, i64 }* %token_before_exp to {}**
  store {}* null, {}** %40, align 8
  br label %bb40

bb36:                                             ; preds = %bb35
  %_48 = load i64, i64* %len, align 8
  %41 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_48, i64 1)
  %_49.0 = extractvalue { i64, i1 } %41, 0
  %_49.1 = extractvalue { i64, i1 } %41, 1
  %42 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false)
  br i1 %42, label %panic2, label %bb37

bb37:                                             ; preds = %bb36
; call proc_macro2::parse::Cursor::advance
  %43 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %_49.0)
  %_45.0 = extractvalue { i8*, i64 } %43, 0
  %_45.1 = extractvalue { i8*, i64 } %43, 1
  br label %bb38

panic2:                                           ; preds = %bb36
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1572 to %"core::panic::location::Location"*)) #19
  unreachable

bb38:                                             ; preds = %bb37
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %token_before_exp, i32 0, i32 0
  store i8* %_45.0, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %token_before_exp, i32 0, i32 1
  store i64 %_45.1, i64* %45, align 8
  br label %bb40

bb40:                                             ; preds = %bb39, %bb38
  store i8 0, i8* %has_sign, align 1
  store i8 0, i8* %has_exp_value, align 1
  br label %bb41

bb41:                                             ; preds = %bb51, %bb57, %bb54, %bb40
; call core::iter::adapters::peekable::Peekable<I>::peek
  %46 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h6c6ac8e500c7bf91E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* align 8 dereferenceable(24) %chars)
  store i32* %46, i32** %_52, align 8
  br label %bb42

bb42:                                             ; preds = %bb41
  %47 = bitcast i32** %_52 to {}**
  %48 = load {}*, {}** %47, align 8
  %49 = icmp eq {}* %48, null
  %_54 = select i1 %49, i64 0, i64 1
  %50 = icmp eq i64 %_54, 1
  br i1 %50, label %bb43, label %bb58

bb43:                                             ; preds = %bb42
  %51 = load i32*, i32** %_52, align 8, !nonnull !20
  %ch3 = load i32, i32* %51, align 4, !range !80
  switch i32 %ch3, label %bb44 [
    i32 43, label %bb46
    i32 45, label %bb46
    i32 95, label %bb55
  ]

bb58:                                             ; preds = %bb46, %bb45, %bb44, %bb42
  %52 = load i8, i8* %has_exp_value, align 1, !range !2
  %_70 = trunc i8 %52 to i1
  %_69 = xor i1 %_70, true
  br i1 %_69, label %bb59, label %bb60

bb44:                                             ; preds = %bb43
  %_56 = icmp ule i32 48, %ch3
  br i1 %_56, label %bb45, label %bb58

bb46:                                             ; preds = %bb43, %bb43
  %53 = load i8, i8* %has_exp_value, align 1, !range !2
  %_58 = trunc i8 %53 to i1
  br i1 %_58, label %bb58, label %bb47

bb55:                                             ; preds = %bb43
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %_66 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e866656704d5661E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* align 8 dereferenceable(24) %chars), !range !22
  br label %bb56

bb45:                                             ; preds = %bb44
  %_57 = icmp ule i32 %ch3, 57
  br i1 %_57, label %bb52, label %bb58

bb52:                                             ; preds = %bb45
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %_63 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e866656704d5661E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* align 8 dereferenceable(24) %chars), !range !22
  br label %bb53

bb53:                                             ; preds = %bb52
  %54 = load i64, i64* %len, align 8
  %55 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %54, i64 1)
  %_65.0 = extractvalue { i64, i1 } %55, 0
  %_65.1 = extractvalue { i64, i1 } %55, 1
  %56 = call i1 @llvm.expect.i1(i1 %_65.1, i1 false)
  br i1 %56, label %panic4, label %bb54

bb54:                                             ; preds = %bb53
  store i64 %_65.0, i64* %len, align 8
  store i8 1, i8* %has_exp_value, align 1
  br label %bb41

panic4:                                           ; preds = %bb53
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1574 to %"core::panic::location::Location"*)) #19
  unreachable

bb56:                                             ; preds = %bb55
  %57 = load i64, i64* %len, align 8
  %58 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %57, i64 1)
  %_68.0 = extractvalue { i64, i1 } %58, 0
  %_68.1 = extractvalue { i64, i1 } %58, 1
  %59 = call i1 @llvm.expect.i1(i1 %_68.1, i1 false)
  br i1 %59, label %panic5, label %bb57

bb57:                                             ; preds = %bb56
  store i64 %_68.0, i64* %len, align 8
  br label %bb41

panic5:                                           ; preds = %bb56
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1576 to %"core::panic::location::Location"*)) #19
  unreachable

bb47:                                             ; preds = %bb46
  %60 = load i8, i8* %has_sign, align 1, !range !2
  %_59 = trunc i8 %60 to i1
  br i1 %_59, label %bb48, label %bb49

bb59:                                             ; preds = %bb58
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %token_before_exp, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %token_before_exp, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %62, i8** %65, align 8
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %64, i64* %66, align 8
  br label %bb62

bb49:                                             ; preds = %bb47
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %_60 = call i32 @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e866656704d5661E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* align 8 dereferenceable(24) %chars), !range !22
  br label %bb50

bb48:                                             ; preds = %bb47
  %67 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %token_before_exp, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %token_before_exp, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %68, i8** %71, align 8
  %72 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %70, i64* %72, align 8
  br label %bb62

bb50:                                             ; preds = %bb49
  %73 = load i64, i64* %len, align 8
  %74 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %73, i64 1)
  %_62.0 = extractvalue { i64, i1 } %74, 0
  %_62.1 = extractvalue { i64, i1 } %74, 1
  %75 = call i1 @llvm.expect.i1(i1 %_62.1, i1 false)
  br i1 %75, label %panic6, label %bb51

bb51:                                             ; preds = %bb50
  store i64 %_62.0, i64* %len, align 8
  store i8 1, i8* %has_sign, align 1
  br label %bb41

panic6:                                           ; preds = %bb50
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1578 to %"core::panic::location::Location"*)) #19
  unreachable

bb61:                                             ; preds = %bb60
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_71.0, i8** %76, align 8
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_71.1, i64* %77, align 8
  br label %bb62

bb20:                                             ; preds = %bb19
; call core::iter::adapters::peekable::Peekable<I>::peek
  %_31 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h6c6ac8e500c7bf91E"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Chars>"* align 8 dereferenceable(24) %chars)
  br label %bb21

bb21:                                             ; preds = %bb20
; call core::option::Option<T>::map_or
  %_30 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$6map_or17h29e43934efe359ecE"(i32* align 4 dereferenceable_or_null(4) %_31, i1 zeroext false)
  br label %bb22

bb22:                                             ; preds = %bb21
  br i1 %_30, label %bb23, label %bb24

bb24:                                             ; preds = %bb22
  %78 = load i64, i64* %len, align 8
  %79 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %78, i64 1)
  %_34.0 = extractvalue { i64, i1 } %79, 0
  %_34.1 = extractvalue { i64, i1 } %79, 1
  %80 = call i1 @llvm.expect.i1(i1 %_34.1, i1 false)
  br i1 %80, label %panic7, label %bb25

bb23:                                             ; preds = %bb22
  %81 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %81, align 8
  br label %bb62

bb25:                                             ; preds = %bb24
  store i64 %_34.0, i64* %len, align 8
  store i8 1, i8* %has_dot, align 1
  br label %bb10

panic7:                                           ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1580 to %"core::panic::location::Location"*)) #19
  unreachable

bb16:                                             ; preds = %bb15
  %82 = load i64, i64* %len, align 8
  %83 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %82, i64 1)
  %_26.0 = extractvalue { i64, i1 } %83, 0
  %_26.1 = extractvalue { i64, i1 } %83, 1
  %84 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false)
  br i1 %84, label %panic8, label %bb17

bb17:                                             ; preds = %bb16
  store i64 %_26.0, i64* %len, align 8
  br label %bb10

panic8:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1582 to %"core::panic::location::Location"*)) #19
  unreachable
}

; proc_macro2::parse::float_digits::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN11proc_macro25parse12float_digits28_$u7b$$u7b$closure$u7d$$u7d$17h2b35ff143152d439E"(i32* align 4 dereferenceable(4) %_2) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %ch = load i32, i32* %_2, align 4, !range !80
  %1 = icmp eq i32 %ch, 46
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb2:                                              ; preds = %start
; call proc_macro2::fallback::is_ident_start
  %_5 = call zeroext i1 @_ZN11proc_macro28fallback14is_ident_start17hf69be4da804f0785E(i32 %ch)
  br label %bb4

bb4:                                              ; preds = %bb2
  %2 = zext i1 %_5 to i8
  store i8 %2, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb4
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; proc_macro2::parse::int
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse3int17h938ba200dcaccd92E(i8* nonnull align 1 %input.0, i64 %input.1) unnamed_addr #1 {
start:
  %val = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_21 = alloca %"core::result::Result<(parse::Cursor, &str), parse::Reject>", align 8
  %_20 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>", align 8
  %_19 = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_12 = alloca { i8*, i8* }, align 8
  %_10 = alloca i32, align 4
  %_3 = alloca { i8*, i64 }, align 8
  %rest = alloca { i8*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
; call proc_macro2::parse::digits
  %1 = call { i8*, i64 } @_ZN11proc_macro25parse6digits17h73b2a75a539c993eE(i8* nonnull align 1 %input.0, i64 %input.1)
  %_4.0 = extractvalue { i8*, i64 } %1, 0
  %_4.1 = extractvalue { i8*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %2 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb2dc13e984552c4bE"(i8* align 1 %_4.0, i64 %_4.1)
  store { i8*, i64 } %2, { i8*, i64 }* %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i8*, i64 }* %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_6 = select i1 %5, i64 1, i64 0
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 0
  %val.0 = load i8*, i8** %6, align 8, !nonnull !20
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 1
  %val.1 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 0
  store i8* %val.0, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 1
  store i64 %val.1, i64* %9, align 8
; call proc_macro2::parse::Cursor::chars
  %10 = call { i8*, i8* } @_ZN11proc_macro25parse6Cursor5chars17h66a90ef9a000288fE({ i8*, i64 }* align 8 dereferenceable(16) %rest)
  store { i8*, i8* } %10, { i8*, i8* }* %_12, align 8
  br label %bb6

bb5:                                              ; preds = %bb2
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %11 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h72dfb3c4b3c1bfd9E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1584 to %"core::panic::location::Location"*))
  store { i8*, i64 } %11, { i8*, i64 }* %0, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15, %bb5
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { i8*, i64 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i64 } %16, i64 %15, 1
  ret { i8*, i64 } %17

bb6:                                              ; preds = %bb3
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %18 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %_12), !range !22
  store i32 %18, i32* %_10, align 4
  br label %bb7

bb7:                                              ; preds = %bb6
  %19 = load i32, i32* %_10, align 4, !range !22
  %20 = sub i32 %19, 1114112
  %21 = icmp eq i32 %20, 0
  %_14 = select i1 %21, i64 0, i64 1
  %22 = icmp eq i64 %_14, 1
  br i1 %22, label %bb8, label %bb16

bb8:                                              ; preds = %bb7
  %ch = load i32, i32* %_10, align 4, !range !80
; call proc_macro2::fallback::is_ident_start
  %_16 = call zeroext i1 @_ZN11proc_macro28fallback14is_ident_start17hf69be4da804f0785E(i32 %ch)
  br label %bb9

bb16:                                             ; preds = %bb13, %bb9, %bb7
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 0
  %_27.0 = load i8*, i8** %23, align 8, !nonnull !20
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 1
  %_27.1 = load i64, i64* %24, align 8
; call proc_macro2::parse::word_break
  %25 = call { i8*, i64 } @_ZN11proc_macro25parse10word_break17h2b73ad6474b02b4bE(i8* nonnull align 1 %_27.0, i64 %_27.1)
  store { i8*, i64 } %25, { i8*, i64 }* %0, align 8
  br label %bb17

bb9:                                              ; preds = %bb8
  br i1 %_16, label %bb10, label %bb16

bb10:                                             ; preds = %bb9
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 0
  %_22.0 = load i8*, i8** %26, align 8, !nonnull !20
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 1
  %_22.1 = load i64, i64* %27, align 8
; call proc_macro2::parse::ident_not_raw
  call void @_ZN11proc_macro25parse13ident_not_raw17h903fae6b922b3d6eE(%"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, &str), parse::Reject>") dereferenceable(32) %_21, i8* nonnull align 1 %_22.0, i64 %_22.1)
  br label %bb11

bb11:                                             ; preds = %bb10
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h872dfb803c62b9c2E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>") dereferenceable(32) %_20, %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture dereferenceable(32) %_21)
  br label %bb12

bb12:                                             ; preds = %bb11
  %28 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* %_20 to {}**
  %29 = load {}*, {}** %28, align 8
  %30 = icmp eq {}* %29, null
  %_23 = select i1 %30, i64 1, i64 0
  switch i64 %_23, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ]

bb14:                                             ; preds = %bb12
  unreachable

bb13:                                             ; preds = %bb12
  %31 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* %_20 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Continue"*
  %32 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Continue"* %31 to { { i8*, i64 }, { [0 x i8]*, i64 } }*
  %33 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %val to i8*
  %34 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 32, i1 false)
  %35 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_19 to i8*
  %36 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 32, i1 false)
  %37 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_19 to { i8*, i64 }*
  %38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %37, i32 0, i32 0
  %_18.0 = load i8*, i8** %38, align 8, !nonnull !20
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %37, i32 0, i32 1
  %_18.1 = load i64, i64* %39, align 8
  %40 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 0
  store i8* %_18.0, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %rest, i32 0, i32 1
  store i64 %_18.1, i64* %41, align 8
  br label %bb16

bb15:                                             ; preds = %bb12
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %42 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h72dfb3c4b3c1bfd9E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1586 to %"core::panic::location::Location"*))
  store { i8*, i64 } %42, { i8*, i64 }* %0, align 8
  br label %bb17
}

; proc_macro2::parse::digits
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro25parse6digits17h73b2a75a539c993eE(i8* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_63 = alloca i8, align 1
  %_27 = alloca { i8, i8 }, align 1
  %iter = alloca { i8*, i8* }, align 8
  %empty = alloca i8, align 1
  %len = alloca i64, align 8
  %base = alloca i64, align 8
  %2 = alloca { i8*, i64 }, align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call proc_macro2::parse::Cursor::starts_with
  %_3 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1587 to [0 x i8]*), i64 2)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::parse::Cursor::starts_with
  %_9 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1588 to [0 x i8]*), i64 2)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro2::parse::Cursor::advance
  %5 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 2)
  %_7.0 = extractvalue { i8*, i64 } %5, 0
  %_7.1 = extractvalue { i8*, i64 } %5, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %_7.0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %_7.1, i64* %7, align 8
  store i64 16, i64* %base, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11, %bb7, %bb3
  store i64 0, i64* %len, align 8
  store i8 1, i8* %empty, align 1
; call proc_macro2::parse::Cursor::bytes
  %8 = call { i8*, i8* } @_ZN11proc_macro25parse6Cursor5bytes17hb8375bf1baba45cdE({ i8*, i64 }* align 8 dereferenceable(16) %input)
  %_24.0 = extractvalue { i8*, i8* } %8, 0
  %_24.1 = extractvalue { i8*, i8* } %8, 1
  br label %bb14

bb5:                                              ; preds = %bb4
  br i1 %_9, label %bb6, label %bb8

bb8:                                              ; preds = %bb5
; call proc_macro2::parse::Cursor::starts_with
  %_15 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1589 to [0 x i8]*), i64 2)
  br label %bb9

bb6:                                              ; preds = %bb5
; call proc_macro2::parse::Cursor::advance
  %9 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 2)
  %_13.0 = extractvalue { i8*, i64 } %9, 0
  %_13.1 = extractvalue { i8*, i64 } %9, 1
  br label %bb7

bb7:                                              ; preds = %bb6
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %_13.0, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %_13.1, i64* %11, align 8
  store i64 8, i64* %base, align 8
  br label %bb13

bb9:                                              ; preds = %bb8
  br i1 %_15, label %bb10, label %bb12

bb12:                                             ; preds = %bb9
  store i64 10, i64* %base, align 8
  br label %bb13

bb10:                                             ; preds = %bb9
; call proc_macro2::parse::Cursor::advance
  %12 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 2)
  %_19.0 = extractvalue { i8*, i64 } %12, 0
  %_19.1 = extractvalue { i8*, i64 } %12, 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %_19.0, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %_19.1, i64* %14, align 8
  store i64 2, i64* %base, align 8
  br label %bb13

bb14:                                             ; preds = %bb13
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %15 = call { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc62a69b3ad5a9aefE"(i8* nonnull %_24.0, i8* %_24.1)
  %_23.0 = extractvalue { i8*, i8* } %15, 0
  %_23.1 = extractvalue { i8*, i8* } %15, 1
  br label %bb15

bb15:                                             ; preds = %bb14
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 0
  store i8* %_23.0, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 1
  store i8* %_23.1, i8** %17, align 8
  br label %bb16

bb16:                                             ; preds = %bb41, %bb43, %bb15
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
  %18 = call { i8, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h962fc68cde015298E"({ i8*, i8* }* align 8 dereferenceable(16) %iter)
  store { i8, i8 } %18, { i8, i8 }* %_27, align 1
  br label %bb17

bb17:                                             ; preds = %bb16
  %19 = bitcast { i8, i8 }* %_27 to i8*
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = trunc i8 %20 to i1
  %_30 = zext i1 %21 to i64
  switch i64 %_30, label %bb19 [
    i64 0, label %bb44
    i64 1, label %bb18
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb44:                                             ; preds = %bb25, %bb34, %bb31, %bb17
  %22 = load i8, i8* %empty, align 1, !range !2
  %_69 = trunc i8 %22 to i1
  br i1 %_69, label %bb45, label %bb46

bb18:                                             ; preds = %bb17
  %23 = bitcast { i8, i8 }* %_27 to %"core::option::Option<u8>::Some"*
  %24 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %23, i32 0, i32 1
  %b = load i8, i8* %24, align 1
  %_36 = icmp ule i8 48, %b
  br i1 %_36, label %bb20, label %bb21

bb21:                                             ; preds = %bb20, %bb18
  %_34 = icmp ule i8 97, %b
  br i1 %_34, label %bb22, label %bb23

bb20:                                             ; preds = %bb18
  %_37 = icmp ule i8 %b, 57
  br i1 %_37, label %bb26, label %bb21

bb26:                                             ; preds = %bb20
  %25 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %b, i8 48)
  %_41.0 = extractvalue { i8, i1 } %25, 0
  %_41.1 = extractvalue { i8, i1 } %25, 1
  %26 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false)
  br i1 %26, label %panic, label %bb27

bb27:                                             ; preds = %bb26
  %digit = zext i8 %_41.0 to i64
  %_44 = load i64, i64* %base, align 8
  %_42 = icmp uge i64 %digit, %_44
  br i1 %_42, label %bb28, label %bb42

panic:                                            ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1591 to %"core::panic::location::Location"*)) #19
  unreachable

bb42:                                             ; preds = %bb34, %bb31, %bb27
  %27 = load i64, i64* %len, align 8
  %28 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %27, i64 1)
  %_68.0 = extractvalue { i64, i1 } %28, 0
  %_68.1 = extractvalue { i64, i1 } %28, 1
  %29 = call i1 @llvm.expect.i1(i1 %_68.1, i1 false)
  br i1 %29, label %panic5, label %bb43

bb28:                                             ; preds = %bb27
  %30 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %30, align 8
  br label %bb48

bb48:                                             ; preds = %bb47, %bb45, %bb39, %bb28
  %31 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = insertvalue { i8*, i64 } undef, i8* %32, 0
  %36 = insertvalue { i8*, i64 } %35, i64 %34, 1
  ret { i8*, i64 } %36

bb23:                                             ; preds = %bb22, %bb21
  %_32 = icmp ule i8 65, %b
  br i1 %_32, label %bb24, label %bb25

bb22:                                             ; preds = %bb21
  %_35 = icmp ule i8 %b, 102
  br i1 %_35, label %bb29, label %bb23

bb29:                                             ; preds = %bb22
  %37 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %b, i8 97)
  %_49.0 = extractvalue { i8, i1 } %37, 0
  %_49.1 = extractvalue { i8, i1 } %37, 1
  %38 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false)
  br i1 %38, label %panic1, label %bb30

bb30:                                             ; preds = %bb29
  %_46 = zext i8 %_49.0 to i64
  %39 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 10, i64 %_46)
  %_50.0 = extractvalue { i64, i1 } %39, 0
  %_50.1 = extractvalue { i64, i1 } %39, 1
  %40 = call i1 @llvm.expect.i1(i1 %_50.1, i1 false)
  br i1 %40, label %panic2, label %bb31

panic1:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1593 to %"core::panic::location::Location"*)) #19
  unreachable

bb31:                                             ; preds = %bb30
  %_53 = load i64, i64* %base, align 8
  %_51 = icmp uge i64 %_50.0, %_53
  br i1 %_51, label %bb44, label %bb42

panic2:                                           ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1595 to %"core::panic::location::Location"*)) #19
  unreachable

bb25:                                             ; preds = %bb24, %bb23
  %41 = icmp eq i8 %b, 95
  br i1 %41, label %bb35, label %bb44

bb24:                                             ; preds = %bb23
  %_33 = icmp ule i8 %b, 70
  br i1 %_33, label %bb32, label %bb25

bb32:                                             ; preds = %bb24
  %42 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %b, i8 65)
  %_58.0 = extractvalue { i8, i1 } %42, 0
  %_58.1 = extractvalue { i8, i1 } %42, 1
  %43 = call i1 @llvm.expect.i1(i1 %_58.1, i1 false)
  br i1 %43, label %panic3, label %bb33

bb33:                                             ; preds = %bb32
  %_55 = zext i8 %_58.0 to i64
  %44 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 10, i64 %_55)
  %_59.0 = extractvalue { i64, i1 } %44, 0
  %_59.1 = extractvalue { i64, i1 } %44, 1
  %45 = call i1 @llvm.expect.i1(i1 %_59.1, i1 false)
  br i1 %45, label %panic4, label %bb34

panic3:                                           ; preds = %bb32
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1597 to %"core::panic::location::Location"*)) #19
  unreachable

bb34:                                             ; preds = %bb33
  %_62 = load i64, i64* %base, align 8
  %_60 = icmp uge i64 %_59.0, %_62
  br i1 %_60, label %bb44, label %bb42

panic4:                                           ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1599 to %"core::panic::location::Location"*)) #19
  unreachable

bb43:                                             ; preds = %bb42
  store i64 %_68.0, i64* %len, align 8
  store i8 0, i8* %empty, align 1
  br label %bb16

panic5:                                           ; preds = %bb42
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1601 to %"core::panic::location::Location"*)) #19
  unreachable

bb35:                                             ; preds = %bb25
  %46 = load i8, i8* %empty, align 1, !range !2
  %_64 = trunc i8 %46 to i1
  br i1 %_64, label %bb37, label %bb36

bb36:                                             ; preds = %bb35
  store i8 0, i8* %_63, align 1
  br label %bb38

bb37:                                             ; preds = %bb35
  %_66 = load i64, i64* %base, align 8
  %_65 = icmp eq i64 %_66, 10
  %47 = zext i1 %_65 to i8
  store i8 %47, i8* %_63, align 1
  br label %bb38

bb38:                                             ; preds = %bb36, %bb37
  %48 = load i8, i8* %_63, align 1, !range !2
  %49 = trunc i8 %48 to i1
  br i1 %49, label %bb39, label %bb40

bb40:                                             ; preds = %bb38
  %50 = load i64, i64* %len, align 8
  %51 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %50, i64 1)
  %_67.0 = extractvalue { i64, i1 } %51, 0
  %_67.1 = extractvalue { i64, i1 } %51, 1
  %52 = call i1 @llvm.expect.i1(i1 %_67.1, i1 false)
  br i1 %52, label %panic6, label %bb41

bb39:                                             ; preds = %bb38
  %53 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %53, align 8
  br label %bb48

bb41:                                             ; preds = %bb40
  store i64 %_67.0, i64* %len, align 8
  br label %bb16

panic6:                                           ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1603 to %"core::panic::location::Location"*)) #19
  unreachable

bb46:                                             ; preds = %bb44
  %_72 = load i64, i64* %len, align 8
; call proc_macro2::parse::Cursor::advance
  %54 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %_72)
  %_70.0 = extractvalue { i8*, i64 } %54, 0
  %_70.1 = extractvalue { i8*, i64 } %54, 1
  br label %bb47

bb45:                                             ; preds = %bb44
  %55 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %55, align 8
  br label %bb48

bb47:                                             ; preds = %bb46
  %56 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_70.0, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_70.1, i64* %57, align 8
  br label %bb48
}

; proc_macro2::parse::punct
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse5punct17h378e065c4d7be0f7E(%"core::result::Result<(parse::Cursor, Punct), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, Punct), parse::Reject>") dereferenceable(32) %0, i8* nonnull align 1 %input.0, i64 %input.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i96, align 8
  %2 = alloca { i8*, i32 }, align 8
  %3 = alloca i96, align 8
  %_35 = alloca %Punct, align 4
  %_33 = alloca { { i8*, i64 }, %Punct, [1 x i32] }, align 8
  %_30 = alloca %"core::result::Result<(parse::Cursor, char), parse::Reject>", align 8
  %kind = alloca i8, align 1
  %_28 = alloca i8, align 1
  %_27 = alloca %Punct, align 4
  %_25 = alloca { { i8*, i64 }, %Punct, [1 x i32] }, align 8
  %val1 = alloca { { i8*, i64 }, %Ident }, align 8
  %_17 = alloca %"core::result::Result<(parse::Cursor, Ident), parse::Reject>", align 8
  %_16 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>", align 8
  %_15 = alloca { { i8*, i64 }, %Ident }, align 8
  %val = alloca { { i8*, i64 }, i32, [1 x i32] }, align 8
  %_6 = alloca %"core::result::Result<(parse::Cursor, char), parse::Reject>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>", align 8
  %_4 = alloca { { i8*, i64 }, i32, [1 x i32] }, align 8
; call proc_macro2::parse::punct_char
  call void @_ZN11proc_macro25parse10punct_char17h0335a62ee1bdd889E(%"core::result::Result<(parse::Cursor, char), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, char), parse::Reject>") dereferenceable(24) %_6, i8* nonnull align 1 %input.0, i64 %input.1)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he015db8260c73fc8E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>") dereferenceable(24) %_5, %"core::result::Result<(parse::Cursor, char), parse::Reject>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>"* %_5, i32 0, i32 1
  %5 = load i32, i32* %4, align 8, !range !22
  %6 = sub i32 %5, 1114112
  %7 = icmp eq i32 %6, 0
  %_8 = select i1 %7, i64 1, i64 0
  switch i64 %_8, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %8 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>::Continue"*
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, char)>::Continue"* %8 to { { i8*, i64 }, i32, [1 x i32] }*
  %10 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %val to i8*
  %11 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false)
  %12 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %_4 to i8*
  %13 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %_4 to { i8*, i64 }*
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %14, i32 0, i32 0
  %rest.0 = load i8*, i8** %15, align 8, !nonnull !20
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %14, i32 0, i32 1
  %rest.1 = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { { i8*, i64 }, i32, [1 x i32] }, { { i8*, i64 }, i32, [1 x i32] }* %_4, i32 0, i32 1
  %ch = load i32, i32* %17, align 8, !range !80
  %18 = icmp eq i32 %ch, 39
  br i1 %18, label %bb6, label %bb7

bb5:                                              ; preds = %bb2
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a7a491fd5874a92E"(%"core::result::Result<(parse::Cursor, Punct), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, Punct), parse::Reject>") dereferenceable(32) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1605 to %"core::panic::location::Location"*))
  br label %bb24

bb24:                                             ; preds = %bb17, %bb15, %bb13, %bb23, %bb5
  ret void

bb6:                                              ; preds = %bb3
; call proc_macro2::parse::ident_any
  call void @_ZN11proc_macro25parse9ident_any17h218ecc90bf327efaE(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, Ident), parse::Reject>") dereferenceable(56) %_17, i8* nonnull align 1 %rest.0, i64 %rest.1)
  br label %bb8

bb7:                                              ; preds = %bb3
; call proc_macro2::parse::punct_char
  call void @_ZN11proc_macro25parse10punct_char17h0335a62ee1bdd889E(%"core::result::Result<(parse::Cursor, char), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, char), parse::Reject>") dereferenceable(24) %_30, i8* nonnull align 1 %rest.0, i64 %rest.1)
  br label %bb18

bb18:                                             ; preds = %bb7
  %19 = getelementptr inbounds %"core::result::Result<(parse::Cursor, char), parse::Reject>", %"core::result::Result<(parse::Cursor, char), parse::Reject>"* %_30, i32 0, i32 1
  %20 = load i32, i32* %19, align 8, !range !22
  %21 = sub i32 %20, 1114112
  %22 = icmp eq i32 %21, 0
  %_32 = select i1 %22, i64 1, i64 0
  switch i64 %_32, label %bb20 [
    i64 0, label %bb21
    i64 1, label %bb19
  ]

bb20:                                             ; preds = %bb18
  unreachable

bb21:                                             ; preds = %bb18
  store i8 1, i8* %kind, align 1
  br label %bb22

bb19:                                             ; preds = %bb18
  store i8 0, i8* %kind, align 1
  br label %bb22

bb22:                                             ; preds = %bb21, %bb19
  %23 = load i8, i8* %kind, align 1, !range !2
  %_37 = trunc i8 %23 to i1
; call proc_macro2::Punct::new
  %24 = call i96 @_ZN11proc_macro25Punct3new17h092c0d122b5304dfE(i32 %ch, i1 zeroext %_37)
  store i96 %24, i96* %3, align 8
  %25 = bitcast %Punct* %_35 to i8*
  %26 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 8 %26, i64 12, i1 false)
  br label %bb23

bb23:                                             ; preds = %bb22
  %27 = bitcast { { i8*, i64 }, %Punct, [1 x i32] }* %_33 to { i8*, i64 }*
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %27, i32 0, i32 0
  store i8* %rest.0, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %27, i32 0, i32 1
  store i64 %rest.1, i64* %29, align 8
  %30 = getelementptr inbounds { { i8*, i64 }, %Punct, [1 x i32] }, { { i8*, i64 }, %Punct, [1 x i32] }* %_33, i32 0, i32 1
  %31 = bitcast %Punct* %30 to i8*
  %32 = bitcast %Punct* %_35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 4 %32, i64 12, i1 false)
  %33 = bitcast %"core::result::Result<(parse::Cursor, Punct), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, Punct), parse::Reject>::Ok"*
  %34 = bitcast %"core::result::Result<(parse::Cursor, Punct), parse::Reject>::Ok"* %33 to { { i8*, i64 }, %Punct, [1 x i32] }*
  %35 = bitcast { { i8*, i64 }, %Punct, [1 x i32] }* %34 to i8*
  %36 = bitcast { { i8*, i64 }, %Punct, [1 x i32] }* %_33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 32, i1 false)
  br label %bb24

bb8:                                              ; preds = %bb6
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h10b2ec07c277ddedE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>") dereferenceable(56) %_16, %"core::result::Result<(parse::Cursor, Ident), parse::Reject>"* noalias nocapture dereferenceable(56) %_17)
  br label %bb9

bb9:                                              ; preds = %bb8
  %37 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>"* %_16, i32 0, i32 1
  %38 = load i32, i32* %37, align 8, !range !103
  %39 = sub i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %_19 = select i1 %40, i64 1, i64 0
  switch i64 %_19, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb10:                                             ; preds = %bb9
  %41 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>"* %_16 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>::Continue"*
  %42 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, Ident)>::Continue"* %41 to { { i8*, i64 }, %Ident }*
  %43 = bitcast { { i8*, i64 }, %Ident }* %val1 to i8*
  %44 = bitcast { { i8*, i64 }, %Ident }* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 56, i1 false)
  %45 = bitcast { { i8*, i64 }, %Ident }* %_15 to i8*
  %46 = bitcast { { i8*, i64 }, %Ident }* %val1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 56, i1 false)
  %_14 = bitcast { { i8*, i64 }, %Ident }* %_15 to { i8*, i64 }*
; invoke proc_macro2::parse::Cursor::starts_with
  %_13 = invoke zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %_14, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1608 to [0 x i8]*), i64 1)
          to label %bb14 unwind label %cleanup

bb12:                                             ; preds = %bb9
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a7a491fd5874a92E"(%"core::result::Result<(parse::Cursor, Punct), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, Punct), parse::Reject>") dereferenceable(32) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1607 to %"core::panic::location::Location"*))
  br label %bb13

bb13:                                             ; preds = %bb12
  br label %bb24

bb14:                                             ; preds = %bb10
; call core::ptr::drop_in_place<(proc_macro2::parse::Cursor,proc_macro2::Ident)>
  call void @"_ZN4core3ptr76drop_in_place$LT$$LP$proc_macro2..parse..Cursor$C$proc_macro2..Ident$RP$$GT$17h85831b782bb2dac3E"({ { i8*, i64 }, %Ident }* %_15)
  br label %bb27

bb25:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<(proc_macro2::parse::Cursor,proc_macro2::Ident)>
  call void @"_ZN4core3ptr76drop_in_place$LT$$LP$proc_macro2..parse..Cursor$C$proc_macro2..Ident$RP$$GT$17h85831b782bb2dac3E"({ { i8*, i64 }, %Ident }* %_15) #18
  br label %bb26

cleanup:                                          ; preds = %bb10
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  %49 = extractvalue { i8*, i32 } %47, 1
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  br label %bb25

bb26:                                             ; preds = %bb25
  %52 = bitcast { i8*, i32 }* %2 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  resume { i8*, i32 } %57

bb27:                                             ; preds = %bb14
  br i1 %_13, label %bb15, label %bb16

bb16:                                             ; preds = %bb27
  store i8 1, i8* %_28, align 1
  %58 = load i8, i8* %_28, align 1, !range !2
  %59 = trunc i8 %58 to i1
; call proc_macro2::Punct::new
  %60 = call i96 @_ZN11proc_macro25Punct3new17h092c0d122b5304dfE(i32 39, i1 zeroext %59)
  store i96 %60, i96* %1, align 8
  %61 = bitcast %Punct* %_27 to i8*
  %62 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 8 %62, i64 12, i1 false)
  br label %bb17

bb15:                                             ; preds = %bb27
  %63 = getelementptr inbounds %"core::result::Result<(parse::Cursor, Punct), parse::Reject>", %"core::result::Result<(parse::Cursor, Punct), parse::Reject>"* %0, i32 0, i32 1
  store i32 1114112, i32* %63, align 8
  br label %bb24

bb17:                                             ; preds = %bb16
  %64 = bitcast { { i8*, i64 }, %Punct, [1 x i32] }* %_25 to { i8*, i64 }*
  %65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %64, i32 0, i32 0
  store i8* %rest.0, i8** %65, align 8
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %64, i32 0, i32 1
  store i64 %rest.1, i64* %66, align 8
  %67 = getelementptr inbounds { { i8*, i64 }, %Punct, [1 x i32] }, { { i8*, i64 }, %Punct, [1 x i32] }* %_25, i32 0, i32 1
  %68 = bitcast %Punct* %67 to i8*
  %69 = bitcast %Punct* %_27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 4 %69, i64 12, i1 false)
  %70 = bitcast %"core::result::Result<(parse::Cursor, Punct), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, Punct), parse::Reject>::Ok"*
  %71 = bitcast %"core::result::Result<(parse::Cursor, Punct), parse::Reject>::Ok"* %70 to { { i8*, i64 }, %Punct, [1 x i32] }*
  %72 = bitcast { { i8*, i64 }, %Punct, [1 x i32] }* %71 to i8*
  %73 = bitcast { { i8*, i64 }, %Punct, [1 x i32] }* %_25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 32, i1 false)
  br label %bb24
}

; proc_macro2::parse::punct_char
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse10punct_char17h0335a62ee1bdd889E(%"core::result::Result<(parse::Cursor, char), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, char), parse::Reject>") dereferenceable(24) %0, i8* nonnull align 1 %1, i64 %2) unnamed_addr #1 {
start:
  %_22 = alloca { { i8*, i64 }, i32, [1 x i32] }, align 8
  %_14 = alloca i32, align 4
  %chars = alloca { i8*, i8* }, align 8
  %_2 = alloca i8, align 1
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %2, i64* %4, align 8
; call proc_macro2::parse::Cursor::starts_with
  %_3 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1609 to [0 x i8]*), i64 2)
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
; call proc_macro2::parse::Cursor::starts_with
  %_7 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1610 to [0 x i8]*), i64 2)
  br label %bb5

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %5 = load i8, i8* %_2, align 1, !range !2
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb6, label %bb7

bb5:                                              ; preds = %bb2
  %7 = zext i1 %_7 to i8
  store i8 %7, i8* %_2, align 1
  br label %bb3

bb7:                                              ; preds = %bb3
; call proc_macro2::parse::Cursor::chars
  %8 = call { i8*, i8* } @_ZN11proc_macro25parse6Cursor5chars17h66a90ef9a000288fE({ i8*, i64 }* align 8 dereferenceable(16) %input)
  store { i8*, i8* } %8, { i8*, i8* }* %chars, align 8
  br label %bb8

bb6:                                              ; preds = %bb3
  %9 = getelementptr inbounds %"core::result::Result<(parse::Cursor, char), parse::Reject>", %"core::result::Result<(parse::Cursor, char), parse::Reject>"* %0, i32 0, i32 1
  store i32 1114112, i32* %9, align 8
  br label %bb18

bb18:                                             ; preds = %bb10, %bb17, %bb16, %bb6
  ret void

bb8:                                              ; preds = %bb7
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %10 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !range !22
  store i32 %10, i32* %_14, align 4
  br label %bb9

bb9:                                              ; preds = %bb8
  %11 = load i32, i32* %_14, align 4, !range !22
  %12 = sub i32 %11, 1114112
  %13 = icmp eq i32 %12, 0
  %_16 = select i1 %13, i64 0, i64 1
  switch i64 %_16, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb10:                                             ; preds = %bb9
  %14 = getelementptr inbounds %"core::result::Result<(parse::Cursor, char), parse::Reject>", %"core::result::Result<(parse::Cursor, char), parse::Reject>"* %0, i32 0, i32 1
  store i32 1114112, i32* %14, align 8
  br label %bb18

bb12:                                             ; preds = %bb9
  %ch = load i32, i32* %_14, align 4, !range !80
; call core::str::<impl str>::contains
  %_19 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17ha2412111a1423152E"([0 x i8]* nonnull align 1 bitcast (<{ [22 x i8] }>* @alloc1611 to [0 x i8]*), i64 22, i32 %ch)
  br label %bb13

bb13:                                             ; preds = %bb12
  br i1 %_19, label %bb14, label %bb17

bb17:                                             ; preds = %bb13
  %15 = getelementptr inbounds %"core::result::Result<(parse::Cursor, char), parse::Reject>", %"core::result::Result<(parse::Cursor, char), parse::Reject>"* %0, i32 0, i32 1
  store i32 1114112, i32* %15, align 8
  br label %bb18

bb14:                                             ; preds = %bb13
; call core::char::methods::<impl char>::len_utf8
  %_25 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817h820a382be7518970E"(i32 %ch)
  br label %bb15

bb15:                                             ; preds = %bb14
; call proc_macro2::parse::Cursor::advance
  %16 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %_25)
  %_23.0 = extractvalue { i8*, i64 } %16, 0
  %_23.1 = extractvalue { i8*, i64 } %16, 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %17 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %_22 to { i8*, i64 }*
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %17, i32 0, i32 0
  store i8* %_23.0, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %17, i32 0, i32 1
  store i64 %_23.1, i64* %19, align 8
  %20 = getelementptr inbounds { { i8*, i64 }, i32, [1 x i32] }, { { i8*, i64 }, i32, [1 x i32] }* %_22, i32 0, i32 1
  store i32 %ch, i32* %20, align 8
  %21 = bitcast %"core::result::Result<(parse::Cursor, char), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, char), parse::Reject>::Ok"*
  %22 = bitcast %"core::result::Result<(parse::Cursor, char), parse::Reject>::Ok"* %21 to { { i8*, i64 }, i32, [1 x i32] }*
  %23 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %22 to i8*
  %24 = bitcast { { i8*, i64 }, i32, [1 x i32] }* %_22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false)
  br label %bb18
}

; proc_macro2::parse::doc_comment
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse11doc_comment17h65f8d67917836846E(%"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>") dereferenceable(40) %0, i8* nonnull align 1 %input.0, i64 %input.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i96, align 8
  %2 = alloca i96, align 8
  %3 = alloca i96, align 8
  %4 = alloca { i8*, i32 }, align 8
  %5 = alloca i32, align 4
  %_95 = alloca i8, align 1
  %_94 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %_92 = alloca { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }, align 8
  %_91 = alloca %Span, align 4
  %_84 = alloca i64*, align 8
  %iter1 = alloca { i64*, i64* }, align 8
  %_80 = alloca %"fallback::Group", align 8
  %_79 = alloca %Group, align 8
  %_78 = alloca %TokenTree, align 8
  %_75 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %_74 = alloca %"fallback::TokenStream", align 8
  %_73 = alloca i8, align 1
  %group = alloca %"fallback::Group", align 8
  %_71 = alloca %Span, align 4
  %_64 = alloca i64*, align 8
  %iter = alloca { i64*, i64* }, align 8
  %_59 = alloca %Literal, align 8
  %_58 = alloca %TokenTree, align 8
  %_57 = alloca i8, align 1
  %_56 = alloca %Punct, align 4
  %_55 = alloca %TokenTree, align 8
  %_54 = alloca %Span, align 4
  %_51 = alloca %Ident, align 8
  %_50 = alloca %TokenTree, align 8
  %stream = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %_42 = alloca i8, align 1
  %_41 = alloca %Punct, align 4
  %_40 = alloca %TokenTree, align 8
  %_36 = alloca i8, align 1
  %_35 = alloca %Punct, align 4
  %_34 = alloca %TokenTree, align 8
  %trees = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %_23 = alloca i64, align 8
  %_16 = alloca { i64, i64 }, align 8
  %scan_for_bare_cr = alloca { [0 x i8]*, i64 }, align 8
  %span = alloca %Span, align 4
  %val = alloca { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, align 8
  %_7 = alloca %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>", align 8
  %_6 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>", align 8
  %_5 = alloca { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, align 8
  store i8 0, i8* %_95, align 1
; call proc_macro2::parse::doc_comment_contents
  call void @_ZN11proc_macro25parse20doc_comment_contents17h47f08c85bfb3f5bbE(%"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>") dereferenceable(40) %_7, i8* nonnull align 1 %input.0, i64 %input.1)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5e71673a19ec9cdaE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>") dereferenceable(40) %_6, %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* noalias nocapture dereferenceable(40) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>"* %_6, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !104
  %8 = sub i8 %7, 2
  %9 = icmp eq i8 %8, 0
  %_9 = select i1 %9, i64 1, i64 0
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>"* %_6 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>::Continue"*
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, (&str, bool))>::Continue"* %10 to { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }*
  %12 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %val to i8*
  %13 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 40, i1 false)
  %14 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_5 to i8*
  %15 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 40, i1 false)
  %16 = getelementptr inbounds { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_5, i32 0, i32 1
  %17 = bitcast { { [0 x i8]*, i64 }, i8, [7 x i8] }* %16 to { [0 x i8]*, i64 }*
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0
  %comment.0 = load [0 x i8]*, [0 x i8]** %18, align 8, !nonnull !20
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1
  %comment.1 = load i64, i64* %19, align 8
  %20 = getelementptr inbounds { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_5, i32 0, i32 1
  %21 = getelementptr inbounds { { [0 x i8]*, i64 }, i8, [7 x i8] }, { { [0 x i8]*, i64 }, i8, [7 x i8] }* %20, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !2
  %inner = trunc i8 %22 to i1
  %23 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_5 to { i8*, i64 }*
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %23, i32 0, i32 0
  %rest.0 = load i8*, i8** %24, align 8, !nonnull !20
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %23, i32 0, i32 1
  %rest.1 = load i64, i64* %25, align 8
; call proc_macro2::Span::_new_stable
  %26 = call i32 @_ZN11proc_macro24Span11_new_stable17h938b6d2ea5159f26E()
  store i32 %26, i32* %5, align 4
  %27 = bitcast %Span* %span to i8*
  %28 = bitcast i32* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 4, i1 false)
  br label %bb6

bb5:                                              ; preds = %bb2
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17haf45217a71240142E"(%"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1613 to %"core::panic::location::Location"*))
  br label %bb45

bb45:                                             ; preds = %bb13, %bb44, %bb5
  ret void

bb6:                                              ; preds = %bb3
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %scan_for_bare_cr, i32 0, i32 0
  store [0 x i8]* %comment.0, [0 x i8]** %29, align 8
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %scan_for_bare_cr, i32 0, i32 1
  store i64 %comment.1, i64* %30, align 8
  br label %bb7

bb7:                                              ; preds = %bb14, %bb6
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %scan_for_bare_cr, i32 0, i32 0
  %_17.0 = load [0 x i8]*, [0 x i8]** %31, align 8, !nonnull !20
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %scan_for_bare_cr, i32 0, i32 1
  %_17.1 = load i64, i64* %32, align 8
; call core::str::<impl str>::find
  %33 = call { i64, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17h38269b1130165281E"([0 x i8]* nonnull align 1 %_17.0, i64 %_17.1, i32 13)
  store { i64, i64 } %33, { i64, i64 }* %_16, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %34 = bitcast { i64, i64 }* %_16 to i64*
  %_18 = load i64, i64* %34, align 8, !range !18
  %35 = icmp eq i64 %_18, 1
  br i1 %35, label %bb9, label %bb15

bb9:                                              ; preds = %bb8
  %36 = bitcast { i64, i64 }* %_16 to %"core::option::Option<usize>::Some"*
  %37 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %36, i32 0, i32 1
  %cr = load i64, i64* %37, align 8
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %scan_for_bare_cr, i32 0, i32 0
  %_22.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !nonnull !20
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %scan_for_bare_cr, i32 0, i32 1
  %_22.1 = load i64, i64* %39, align 8
  %40 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %cr, i64 1)
  %_26.0 = extractvalue { i64, i1 } %40, 0
  %_26.1 = extractvalue { i64, i1 } %40, 1
  %41 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false)
  br i1 %41, label %panic, label %bb10

bb15:                                             ; preds = %bb8
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h3bd7eafdf39cd676E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %trees)
  br label %bb16

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_36, align 1
  %42 = load i8, i8* %_36, align 1, !range !2
  %43 = trunc i8 %42 to i1
; invoke proc_macro2::Punct::new
  %44 = invoke i96 @_ZN11proc_macro25Punct3new17h092c0d122b5304dfE(i32 35, i1 zeroext %43)
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
  store i96 %44, i96* %3, align 8
  %45 = bitcast %Punct* %_35 to i8*
  %46 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 8 %46, i64 12, i1 false)
  %47 = bitcast %TokenTree* %_34 to %"TokenTree::Punct"*
  %48 = getelementptr inbounds %"TokenTree::Punct", %"TokenTree::Punct"* %47, i32 0, i32 1
  %49 = bitcast %Punct* %48 to i8*
  %50 = bitcast %Punct* %_35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 12, i1 false)
  %51 = bitcast %TokenTree* %_34 to i32*
  store i32 2, i32* %51, align 8
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h3f5781f67b14714cE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %trees, %TokenTree* noalias nocapture dereferenceable(48) %_34)
          to label %bb18 unwind label %cleanup

bb48:                                             ; preds = %bb50, %bb51, %bb52, %cleanup
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %trees) #18
  br label %bb49

cleanup:                                          ; preds = %bb26, %bb22, %bb21, %bb20, %bb19, %bb17, %bb16
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = extractvalue { i8*, i32 } %52, 1
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %53, i8** %55, align 8
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %54, i32* %56, align 8
  br label %bb48

bb18:                                             ; preds = %bb17
  br i1 %inner, label %bb19, label %bb22

bb22:                                             ; preds = %bb53, %bb18
; invoke alloc::alloc::exchange_malloc
  %_48 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h9a27f765b757f92fE(i64 144, i64 8)
          to label %bb23 unwind label %cleanup

bb19:                                             ; preds = %bb18
  store i8 0, i8* %_42, align 1
  %57 = load i8, i8* %_42, align 1, !range !2
  %58 = trunc i8 %57 to i1
; invoke proc_macro2::Punct::new
  %59 = invoke i96 @_ZN11proc_macro25Punct3new17h092c0d122b5304dfE(i32 33, i1 zeroext %58)
          to label %bb20 unwind label %cleanup

bb20:                                             ; preds = %bb19
  store i96 %59, i96* %2, align 8
  %60 = bitcast %Punct* %_41 to i8*
  %61 = bitcast i96* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 8 %61, i64 12, i1 false)
  %62 = bitcast %Punct* %_41 to i96*
  %63 = load i96, i96* %62, align 4
; invoke <T as core::convert::Into<U>>::into
  invoke void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h388c60fbcabe1925E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %_40, i96 %63)
          to label %bb21 unwind label %cleanup

bb21:                                             ; preds = %bb20
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h3f5781f67b14714cE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %trees, %TokenTree* noalias nocapture dereferenceable(48) %_40)
          to label %bb53 unwind label %cleanup

bb53:                                             ; preds = %bb21
  br label %bb22

bb23:                                             ; preds = %bb22
  %_49 = bitcast i8* %_48 to [3 x %TokenTree]*
  %64 = bitcast %Span* %_54 to i8*
  %65 = bitcast %Span* %span to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %65, i64 4, i1 false)
  %66 = bitcast %Span* %_54 to i32*
  %67 = load i32, i32* %66, align 4
; invoke proc_macro2::Ident::new
  invoke void @_ZN11proc_macro25Ident3new17h89378d74fcb01c26E(%Ident* noalias nocapture sret(%Ident) dereferenceable(40) %_51, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1614 to [0 x i8]*), i64 3, i32 %67)
          to label %bb24 unwind label %cleanup2

bb24:                                             ; preds = %bb23
  %68 = bitcast %TokenTree* %_50 to %"TokenTree::Ident"*
  %69 = getelementptr inbounds %"TokenTree::Ident", %"TokenTree::Ident"* %68, i32 0, i32 1
  %70 = bitcast %Ident* %69 to i8*
  %71 = bitcast %Ident* %_51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 40, i1 false)
  %72 = bitcast %TokenTree* %_50 to i32*
  store i32 1, i32* %72, align 8
  store i8 0, i8* %_57, align 1
  %73 = load i8, i8* %_57, align 1, !range !2
  %74 = trunc i8 %73 to i1
; invoke proc_macro2::Punct::new
  %75 = invoke i96 @_ZN11proc_macro25Punct3new17h092c0d122b5304dfE(i32 61, i1 zeroext %74)
          to label %bb25 unwind label %cleanup3

bb52:                                             ; preds = %bb47, %cleanup2
  %76 = bitcast [3 x %TokenTree]* %_49 to i64*
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h22b0149e52738a52E(i64* nonnull %76) #18
  br label %bb48

cleanup2:                                         ; preds = %bb23
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = extractvalue { i8*, i32 } %77, 0
  %79 = extractvalue { i8*, i32 } %77, 1
  %80 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %78, i8** %80, align 8
  %81 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %79, i32* %81, align 8
  br label %bb52

bb25:                                             ; preds = %bb24
  store i96 %75, i96* %1, align 8
  %82 = bitcast %Punct* %_56 to i8*
  %83 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 8 %83, i64 12, i1 false)
  %84 = bitcast %TokenTree* %_55 to %"TokenTree::Punct"*
  %85 = getelementptr inbounds %"TokenTree::Punct", %"TokenTree::Punct"* %84, i32 0, i32 1
  %86 = bitcast %Punct* %85 to i8*
  %87 = bitcast %Punct* %_56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 12, i1 false)
  %88 = bitcast %TokenTree* %_55 to i32*
  store i32 2, i32* %88, align 8
; invoke proc_macro2::Literal::string
  invoke void @_ZN11proc_macro27Literal6string17h5e57c415c467d6a9E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %_59, [0 x i8]* nonnull align 1 %comment.0, i64 %comment.1)
          to label %bb26 unwind label %cleanup4

bb47:                                             ; preds = %bb46, %cleanup3
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %_50) #18
  br label %bb52

cleanup3:                                         ; preds = %bb24
  %89 = landingpad { i8*, i32 }
          cleanup
  %90 = extractvalue { i8*, i32 } %89, 0
  %91 = extractvalue { i8*, i32 } %89, 1
  %92 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %90, i8** %92, align 8
  %93 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %91, i32* %93, align 8
  br label %bb47

bb26:                                             ; preds = %bb25
  %94 = bitcast %TokenTree* %_58 to %"TokenTree::Literal"*
  %95 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %94, i32 0, i32 1
  %96 = bitcast %Literal* %95 to i8*
  %97 = bitcast %Literal* %_59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 32, i1 false)
  %98 = bitcast %TokenTree* %_58 to i32*
  store i32 3, i32* %98, align 8
  %99 = bitcast [3 x %TokenTree]* %_49 to %TokenTree*
  %100 = bitcast %TokenTree* %99 to i8*
  %101 = bitcast %TokenTree* %_50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 48, i1 false)
  %102 = getelementptr inbounds [3 x %TokenTree], [3 x %TokenTree]* %_49, i32 0, i32 1
  %103 = bitcast %TokenTree* %102 to i8*
  %104 = bitcast %TokenTree* %_55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 48, i1 false)
  %105 = getelementptr inbounds [3 x %TokenTree], [3 x %TokenTree]* %_49, i32 0, i32 2
  %106 = bitcast %TokenTree* %105 to i8*
  %107 = bitcast %TokenTree* %_58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 48, i1 false)
  %108 = bitcast [3 x %TokenTree]* %_49 to [0 x %TokenTree]*
  %109 = bitcast [0 x %TokenTree]* %108 to i64*
  %_44.0 = bitcast i64* %109 to [0 x %TokenTree]*
; invoke alloc::slice::<impl [T]>::into_vec
  invoke void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h25f49859986a86e7E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %stream, [0 x %TokenTree]* noalias nonnull align 8 %_44.0, i64 3)
          to label %bb27 unwind label %cleanup

bb46:                                             ; preds = %cleanup4
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %_55) #18
  br label %bb47

cleanup4:                                         ; preds = %bb25
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  %112 = extractvalue { i8*, i32 } %110, 1
  %113 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %111, i8** %113, align 8
  %114 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %112, i32* %114, align 8
  br label %bb46

bb27:                                             ; preds = %bb26
  store i8 1, i8* %_95, align 1
; invoke <&mut alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  %115 = invoke { i64*, i64* } @"_ZN102_$LT$$RF$mut$u20$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb29abf531ac562edE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %stream)
          to label %bb28 unwind label %cleanup5

bb28:                                             ; preds = %bb27
  %_61.0 = extractvalue { i64*, i64* } %115, 0
  %_61.1 = extractvalue { i64*, i64* } %115, 1
  %116 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 0
  store i64* %_61.0, i64** %116, align 8
  %117 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1
  store i64* %_61.1, i64** %117, align 8
  br label %bb29

bb51:                                             ; preds = %cleanup5
  %118 = load i8, i8* %_95, align 1, !range !2
  %119 = trunc i8 %118 to i1
  br i1 %119, label %bb50, label %bb48

cleanup5:                                         ; preds = %bb42, %bb40, %bb38, %bb37, %bb36, %bb35, %bb34, %bb33, %bb31, %bb29, %bb27
  %120 = landingpad { i8*, i32 }
          cleanup
  %121 = extractvalue { i8*, i32 } %120, 0
  %122 = extractvalue { i8*, i32 } %120, 1
  %123 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %121, i8** %123, align 8
  %124 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %122, i32* %124, align 8
  br label %bb51

bb29:                                             ; preds = %bb54, %bb28
; invoke <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::next
  %125 = invoke align 8 dereferenceable_or_null(48) i64* @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h318eff402406019fE"({ i64*, i64* }* align 8 dereferenceable(16) %iter)
          to label %bb30 unwind label %cleanup5

bb30:                                             ; preds = %bb29
  store i64* %125, i64** %_64, align 8
  %126 = bitcast i64** %_64 to {}**
  %127 = load {}*, {}** %126, align 8
  %128 = icmp eq {}* %127, null
  %_67 = select i1 %128, i64 0, i64 1
  switch i64 %_67, label %bb32 [
    i64 0, label %bb33
    i64 1, label %bb31
  ]

bb32:                                             ; preds = %bb30
  unreachable

bb33:                                             ; preds = %bb30
  store i8 2, i8* %_73, align 1
  store i8 0, i8* %_95, align 1
  %129 = bitcast %"alloc::vec::Vec<TokenTree>"* %_75 to i8*
  %130 = bitcast %"alloc::vec::Vec<TokenTree>"* %stream to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 24, i1 false)
; invoke <proc_macro2::fallback::TokenStream as core::convert::From<alloc::vec::Vec<proc_macro2::TokenTree>>>::from
  invoke void @"_ZN127_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..convert..From$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$$GT$4from17hd85b500083c2a678E"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %_74, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %_75)
          to label %bb34 unwind label %cleanup5

bb31:                                             ; preds = %bb30
  %131 = bitcast i64** %_64 to %TokenTree**
  %tt = load %TokenTree*, %TokenTree** %131, align 8, !nonnull !20
  %132 = bitcast %Span* %_71 to i8*
  %133 = bitcast %Span* %span to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %132, i8* align 4 %133, i64 4, i1 false)
  %134 = bitcast %Span* %_71 to i32*
  %135 = load i32, i32* %134, align 4
; invoke proc_macro2::TokenTree::set_span
  invoke void @_ZN11proc_macro29TokenTree8set_span17h8f1b16535346a445E(%TokenTree* align 8 dereferenceable(48) %tt, i32 %135)
          to label %bb54 unwind label %cleanup5

bb54:                                             ; preds = %bb31
  br label %bb29

bb34:                                             ; preds = %bb33
  %136 = load i8, i8* %_73, align 1, !range !110
; invoke proc_macro2::fallback::Group::new
  invoke void @_ZN11proc_macro28fallback5Group3new17h5d634dc08de01f30E(%"fallback::Group"* noalias nocapture sret(%"fallback::Group") dereferenceable(32) %group, i8 %136, %"fallback::TokenStream"* noalias nocapture dereferenceable(24) %_74)
          to label %bb35 unwind label %cleanup5

bb35:                                             ; preds = %bb34
  %137 = bitcast %"fallback::Group"* %_80 to i8*
  %138 = bitcast %"fallback::Group"* %group to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 32, i1 false)
; invoke proc_macro2::Group::_new_stable
  invoke void @_ZN11proc_macro25Group11_new_stable17hd2a5676ccafa172dE(%Group* noalias nocapture sret(%Group) dereferenceable(40) %_79, %"fallback::Group"* noalias nocapture dereferenceable(32) %_80)
          to label %bb36 unwind label %cleanup5

bb36:                                             ; preds = %bb35
; invoke <T as core::convert::Into<U>>::into
  invoke void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5e86063d0b748c21E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %_78, %Group* noalias nocapture dereferenceable(40) %_79)
          to label %bb37 unwind label %cleanup5

bb37:                                             ; preds = %bb36
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h3f5781f67b14714cE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %trees, %TokenTree* noalias nocapture dereferenceable(48) %_78)
          to label %bb38 unwind label %cleanup5

bb38:                                             ; preds = %bb37
; invoke <&mut alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  %139 = invoke { i64*, i64* } @"_ZN102_$LT$$RF$mut$u20$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb29abf531ac562edE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %trees)
          to label %bb39 unwind label %cleanup5

bb39:                                             ; preds = %bb38
  %_81.0 = extractvalue { i64*, i64* } %139, 0
  %_81.1 = extractvalue { i64*, i64* } %139, 1
  %140 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 0
  store i64* %_81.0, i64** %140, align 8
  %141 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 1
  store i64* %_81.1, i64** %141, align 8
  br label %bb40

bb40:                                             ; preds = %bb55, %bb39
; invoke <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::next
  %142 = invoke align 8 dereferenceable_or_null(48) i64* @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h318eff402406019fE"({ i64*, i64* }* align 8 dereferenceable(16) %iter1)
          to label %bb41 unwind label %cleanup5

bb41:                                             ; preds = %bb40
  store i64* %142, i64** %_84, align 8
  %143 = bitcast i64** %_84 to {}**
  %144 = load {}*, {}** %143, align 8
  %145 = icmp eq {}* %144, null
  %_87 = select i1 %145, i64 0, i64 1
  switch i64 %_87, label %bb43 [
    i64 0, label %bb44
    i64 1, label %bb42
  ]

bb43:                                             ; preds = %bb41
  unreachable

bb44:                                             ; preds = %bb41
  %146 = bitcast %"alloc::vec::Vec<TokenTree>"* %_94 to i8*
  %147 = bitcast %"alloc::vec::Vec<TokenTree>"* %trees to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 24, i1 false)
  %148 = bitcast { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }* %_92 to { i8*, i64 }*
  %149 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %148, i32 0, i32 0
  store i8* %rest.0, i8** %149, align 8
  %150 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %148, i32 0, i32 1
  store i64 %rest.1, i64* %150, align 8
  %151 = getelementptr inbounds { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }, { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }* %_92, i32 0, i32 1
  %152 = bitcast %"alloc::vec::Vec<TokenTree>"* %151 to i8*
  %153 = bitcast %"alloc::vec::Vec<TokenTree>"* %_94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 24, i1 false)
  %154 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>::Ok"*
  %155 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>::Ok"* %154 to { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }*
  %156 = bitcast { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }* %155 to i8*
  %157 = bitcast { { i8*, i64 }, %"alloc::vec::Vec<TokenTree>" }* %_92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 40, i1 false)
  store i8 0, i8* %_95, align 1
  br label %bb45

bb42:                                             ; preds = %bb41
  %158 = bitcast i64** %_84 to %TokenTree**
  %tt6 = load %TokenTree*, %TokenTree** %158, align 8, !nonnull !20
  %159 = bitcast %Span* %_91 to i8*
  %160 = bitcast %Span* %span to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %159, i8* align 4 %160, i64 4, i1 false)
  %161 = bitcast %Span* %_91 to i32*
  %162 = load i32, i32* %161, align 4
; invoke proc_macro2::TokenTree::set_span
  invoke void @_ZN11proc_macro29TokenTree8set_span17h8f1b16535346a445E(%TokenTree* align 8 dereferenceable(48) %tt6, i32 %162)
          to label %bb55 unwind label %cleanup5

bb55:                                             ; preds = %bb42
  br label %bb40

bb50:                                             ; preds = %bb51
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$17hcb4f090bb10e316cE"(%"alloc::vec::Vec<TokenTree>"* %stream) #18
  br label %bb48

bb49:                                             ; preds = %bb48
  %163 = bitcast { i8*, i32 }* %4 to i8**
  %164 = load i8*, i8** %163, align 8
  %165 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = insertvalue { i8*, i32 } undef, i8* %164, 0
  %168 = insertvalue { i8*, i32 } %167, i32 %166, 1
  resume { i8*, i32 } %168

bb10:                                             ; preds = %bb9
  store i64 %_26.0, i64* %_23, align 8
  %169 = load i64, i64* %_23, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %170 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17ha5dfc76fbe8f171dE"([0 x i8]* nonnull align 1 %_22.0, i64 %_22.1, i64 %169, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1618 to %"core::panic::location::Location"*))
  %_21.0 = extractvalue { [0 x i8]*, i64 } %170, 0
  %_21.1 = extractvalue { [0 x i8]*, i64 } %170, 1
  br label %bb11

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1616 to %"core::panic::location::Location"*)) #19
  unreachable

bb11:                                             ; preds = %bb10
; call core::str::<impl str>::starts_with
  %_28 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17he067b52065bc5e41E"([0 x i8]* nonnull align 1 %_21.0, i64 %_21.1, i32 10)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_27 = xor i1 %_28, true
  br i1 %_27, label %bb13, label %bb14

bb14:                                             ; preds = %bb12
  %171 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %scan_for_bare_cr, i32 0, i32 0
  store [0 x i8]* %_21.0, [0 x i8]** %171, align 8
  %172 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %scan_for_bare_cr, i32 0, i32 1
  store i64 %_21.1, i64* %172, align 8
  br label %bb7

bb13:                                             ; preds = %bb12
  %173 = bitcast %"core::result::Result<(parse::Cursor, alloc::vec::Vec<TokenTree>), parse::Reject>"* %0 to {}**
  store {}* null, {}** %173, align 8
  br label %bb45
}

; proc_macro2::parse::doc_comment_contents
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse20doc_comment_contents17h47f08c85bfb3f5bbE(%"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>") dereferenceable(40) %0, i8* nonnull align 1 %1, i64 %2) unnamed_addr #1 {
start:
  %_88 = alloca { i64, i64 }, align 8
  %_83 = alloca { { [0 x i8]*, i64 }, i8, [7 x i8] }, align 8
  %_81 = alloca { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, align 8
  %val2 = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_75 = alloca %"core::result::Result<(parse::Cursor, &str), parse::Reject>", align 8
  %_74 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>", align 8
  %_73 = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_70 = alloca i64, align 8
  %_60 = alloca i8, align 1
  %_58 = alloca { { [0 x i8]*, i64 }, i8, [7 x i8] }, align 8
  %_56 = alloca { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, align 8
  %_54 = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %input1 = alloca { i8*, i64 }, align 8
  %_37 = alloca { i64, i64 }, align 8
  %_32 = alloca { { [0 x i8]*, i64 }, i8, [7 x i8] }, align 8
  %_30 = alloca { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, align 8
  %val = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_24 = alloca %"core::result::Result<(parse::Cursor, &str), parse::Reject>", align 8
  %_23 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>", align 8
  %_22 = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_14 = alloca { { [0 x i8]*, i64 }, i8, [7 x i8] }, align 8
  %_12 = alloca { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, align 8
  %_10 = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %2, i64* %4, align 8
; call proc_macro2::parse::Cursor::starts_with
  %_2 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1619 to [0 x i8]*), i64 3)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb5

bb5:                                              ; preds = %bb1
; call proc_macro2::parse::Cursor::starts_with
  %_16 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1620 to [0 x i8]*), i64 3)
  br label %bb6

bb2:                                              ; preds = %bb1
; call proc_macro2::parse::Cursor::advance
  %5 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 3)
  %input.0 = extractvalue { i8*, i64 } %5, 0
  %input.1 = extractvalue { i8*, i64 } %5, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call proc_macro2::parse::take_until_newline_or_eof
  call void @_ZN11proc_macro25parse25take_until_newline_or_eof17h9e0f91b0e07891ebE({ { i8*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { i8*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %_10, i8* nonnull align 1 %input.0, i64 %input.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %6 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_10 to { i8*, i64 }*
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 0
  %input.03 = load i8*, i8** %7, align 8, !nonnull !20
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 1
  %input.14 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { { i8*, i64 }, { [0 x i8]*, i64 } }, { { i8*, i64 }, { [0 x i8]*, i64 } }* %_10, i32 0, i32 1
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !20
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %s.1 = load i64, i64* %11, align 8
  %12 = bitcast { { [0 x i8]*, i64 }, i8, [7 x i8] }* %_14 to { [0 x i8]*, i64 }*
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  store i64 %s.1, i64* %14, align 8
  %15 = getelementptr inbounds { { [0 x i8]*, i64 }, i8, [7 x i8] }, { { [0 x i8]*, i64 }, i8, [7 x i8] }* %_14, i32 0, i32 1
  store i8 1, i8* %15, align 8
  %16 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_12 to { i8*, i64 }*
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %16, i32 0, i32 0
  store i8* %input.03, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %16, i32 0, i32 1
  store i64 %input.14, i64* %18, align 8
  %19 = getelementptr inbounds { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_12, i32 0, i32 1
  %20 = bitcast { { [0 x i8]*, i64 }, i8, [7 x i8] }* %19 to i8*
  %21 = bitcast { { [0 x i8]*, i64 }, i8, [7 x i8] }* %_14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false)
  %22 = bitcast %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Ok"*
  %23 = bitcast %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Ok"* %22 to { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }*
  %24 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %23 to i8*
  %25 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 40, i1 false)
  br label %bb41

bb41:                                             ; preds = %bb40, %bb39, %bb36, %bb23, %bb21, %bb15, %bb12, %bb4
  ret void

bb6:                                              ; preds = %bb5
  br i1 %_16, label %bb7, label %bb16

bb16:                                             ; preds = %bb6
; call proc_macro2::parse::Cursor::starts_with
  %_42 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1627 to [0 x i8]*), i64 3)
  br label %bb17

bb7:                                              ; preds = %bb6
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  %_25.0 = load i8*, i8** %26, align 8, !nonnull !20
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  %_25.1 = load i64, i64* %27, align 8
; call proc_macro2::parse::block_comment
  call void @_ZN11proc_macro25parse13block_comment17hc8e324b812e6b33aE(%"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, &str), parse::Reject>") dereferenceable(32) %_24, i8* nonnull align 1 %_25.0, i64 %_25.1)
  br label %bb8

bb8:                                              ; preds = %bb7
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h872dfb803c62b9c2E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>") dereferenceable(32) %_23, %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture dereferenceable(32) %_24)
  br label %bb9

bb9:                                              ; preds = %bb8
  %28 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* %_23 to {}**
  %29 = load {}*, {}** %28, align 8
  %30 = icmp eq {}* %29, null
  %_26 = select i1 %30, i64 1, i64 0
  switch i64 %_26, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb10:                                             ; preds = %bb9
  %31 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* %_23 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Continue"*
  %32 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Continue"* %31 to { { i8*, i64 }, { [0 x i8]*, i64 } }*
  %33 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %val to i8*
  %34 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 32, i1 false)
  %35 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_22 to i8*
  %36 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 32, i1 false)
  %37 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_22 to { i8*, i64 }*
  %38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %37, i32 0, i32 0
  %input.05 = load i8*, i8** %38, align 8, !nonnull !20
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %37, i32 0, i32 1
  %input.16 = load i64, i64* %39, align 8
  %40 = getelementptr inbounds { { i8*, i64 }, { [0 x i8]*, i64 } }, { { i8*, i64 }, { [0 x i8]*, i64 } }* %_22, i32 0, i32 1
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %40, i32 0, i32 0
  %s.07 = load [0 x i8]*, [0 x i8]** %41, align 8, !nonnull !20
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %40, i32 0, i32 1
  %s.18 = load i64, i64* %42, align 8
; call core::str::<impl str>::len
  %_39 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %s.07, i64 %s.18)
  br label %bb13

bb12:                                             ; preds = %bb9
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3336dc0804503aa4E"(%"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1622 to %"core::panic::location::Location"*))
  br label %bb41

bb13:                                             ; preds = %bb10
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_39, i64 2)
  %_41.0 = extractvalue { i64, i1 } %43, 0
  %_41.1 = extractvalue { i64, i1 } %43, 1
  %44 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false)
  br i1 %44, label %panic, label %bb14

bb14:                                             ; preds = %bb13
  %45 = bitcast { i64, i64 }* %_37 to i64*
  store i64 3, i64* %45, align 8
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_37, i32 0, i32 1
  store i64 %_41.0, i64* %46, align 8
  %47 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_37, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_37, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %51 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hbc164f4155ccfd5dE"([0 x i8]* nonnull align 1 %s.07, i64 %s.18, i64 %48, i64 %50, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1626 to %"core::panic::location::Location"*))
  %_35.0 = extractvalue { [0 x i8]*, i64 } %51, 0
  %_35.1 = extractvalue { [0 x i8]*, i64 } %51, 1
  br label %bb15

panic:                                            ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1624 to %"core::panic::location::Location"*)) #19
  unreachable

bb15:                                             ; preds = %bb14
  %52 = bitcast { { [0 x i8]*, i64 }, i8, [7 x i8] }* %_32 to { [0 x i8]*, i64 }*
  %53 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %52, i32 0, i32 0
  store [0 x i8]* %_35.0, [0 x i8]** %53, align 8
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %52, i32 0, i32 1
  store i64 %_35.1, i64* %54, align 8
  %55 = getelementptr inbounds { { [0 x i8]*, i64 }, i8, [7 x i8] }, { { [0 x i8]*, i64 }, i8, [7 x i8] }* %_32, i32 0, i32 1
  store i8 1, i8* %55, align 8
  %56 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_30 to { i8*, i64 }*
  %57 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %56, i32 0, i32 0
  store i8* %input.05, i8** %57, align 8
  %58 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %56, i32 0, i32 1
  store i64 %input.16, i64* %58, align 8
  %59 = getelementptr inbounds { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_30, i32 0, i32 1
  %60 = bitcast { { [0 x i8]*, i64 }, i8, [7 x i8] }* %59 to i8*
  %61 = bitcast { { [0 x i8]*, i64 }, i8, [7 x i8] }* %_32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false)
  %62 = bitcast %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Ok"*
  %63 = bitcast %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Ok"* %62 to { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }*
  %64 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %63 to i8*
  %65 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 40, i1 false)
  br label %bb41

bb17:                                             ; preds = %bb16
  br i1 %_42, label %bb18, label %bb24

bb24:                                             ; preds = %bb17
; call proc_macro2::parse::Cursor::starts_with
  %_61 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %input, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1629 to [0 x i8]*), i64 3)
  br label %bb28

bb18:                                             ; preds = %bb17
; call proc_macro2::parse::Cursor::advance
  %66 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 3)
  store { i8*, i64 } %66, { i8*, i64 }* %input1, align 8
  br label %bb19

bb19:                                             ; preds = %bb18
; call proc_macro2::parse::Cursor::starts_with
  %_48 = call zeroext i1 @_ZN11proc_macro25parse6Cursor11starts_with17h9c3ca63525ef142dE({ i8*, i64 }* align 8 dereferenceable(16) %input1, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1628 to [0 x i8]*), i64 1)
  br label %bb20

bb20:                                             ; preds = %bb19
  br i1 %_48, label %bb21, label %bb22

bb22:                                             ; preds = %bb20
  %67 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input1, i32 0, i32 0
  %_55.0 = load i8*, i8** %67, align 8, !nonnull !20
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input1, i32 0, i32 1
  %_55.1 = load i64, i64* %68, align 8
; call proc_macro2::parse::take_until_newline_or_eof
  call void @_ZN11proc_macro25parse25take_until_newline_or_eof17h9e0f91b0e07891ebE({ { i8*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { i8*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %_54, i8* nonnull align 1 %_55.0, i64 %_55.1)
  br label %bb23

bb21:                                             ; preds = %bb20
  %69 = getelementptr inbounds %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>", %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* %0, i32 0, i32 1
  store i8 2, i8* %69, align 8
  br label %bb41

bb23:                                             ; preds = %bb22
  %70 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_54 to { i8*, i64 }*
  %71 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %70, i32 0, i32 0
  %input.09 = load i8*, i8** %71, align 8, !nonnull !20
  %72 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %70, i32 0, i32 1
  %input.110 = load i64, i64* %72, align 8
  %73 = getelementptr inbounds { { i8*, i64 }, { [0 x i8]*, i64 } }, { { i8*, i64 }, { [0 x i8]*, i64 } }* %_54, i32 0, i32 1
  %74 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %73, i32 0, i32 0
  %s.011 = load [0 x i8]*, [0 x i8]** %74, align 8, !nonnull !20
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %73, i32 0, i32 1
  %s.112 = load i64, i64* %75, align 8
  %76 = bitcast { { [0 x i8]*, i64 }, i8, [7 x i8] }* %_58 to { [0 x i8]*, i64 }*
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %76, i32 0, i32 0
  store [0 x i8]* %s.011, [0 x i8]** %77, align 8
  %78 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %76, i32 0, i32 1
  store i64 %s.112, i64* %78, align 8
  %79 = getelementptr inbounds { { [0 x i8]*, i64 }, i8, [7 x i8] }, { { [0 x i8]*, i64 }, i8, [7 x i8] }* %_58, i32 0, i32 1
  store i8 0, i8* %79, align 8
  %80 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_56 to { i8*, i64 }*
  %81 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %80, i32 0, i32 0
  store i8* %input.09, i8** %81, align 8
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %80, i32 0, i32 1
  store i64 %input.110, i64* %82, align 8
  %83 = getelementptr inbounds { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_56, i32 0, i32 1
  %84 = bitcast { { [0 x i8]*, i64 }, i8, [7 x i8] }* %83 to i8*
  %85 = bitcast { { [0 x i8]*, i64 }, i8, [7 x i8] }* %_58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false)
  %86 = bitcast %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Ok"*
  %87 = bitcast %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Ok"* %86 to { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }*
  %88 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %87 to i8*
  %89 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 40, i1 false)
  br label %bb41

bb28:                                             ; preds = %bb24
  br i1 %_61, label %bb26, label %bb25

bb25:                                             ; preds = %bb28
  store i8 0, i8* %_60, align 1
  br label %bb27

bb26:                                             ; preds = %bb28
  %90 = bitcast { i8*, i64 }* %input to { [0 x i8]*, i64 }*
  %91 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %90, i32 0, i32 0
  %_69.0 = load [0 x i8]*, [0 x i8]** %91, align 8, !nonnull !20
  %92 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %90, i32 0, i32 1
  %_69.1 = load i64, i64* %92, align 8
  store i64 3, i64* %_70, align 8
  %93 = load i64, i64* %_70, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %94 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17ha5dfc76fbe8f171dE"([0 x i8]* nonnull align 1 %_69.0, i64 %_69.1, i64 %93, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1631 to %"core::panic::location::Location"*))
  %_68.0 = extractvalue { [0 x i8]*, i64 } %94, 0
  %_68.1 = extractvalue { [0 x i8]*, i64 } %94, 1
  br label %bb29

bb29:                                             ; preds = %bb26
; call core::str::<impl str>::starts_with
  %_66 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17he067b52065bc5e41E"([0 x i8]* nonnull align 1 %_68.0, i64 %_68.1, i32 42)
  br label %bb30

bb30:                                             ; preds = %bb29
  %_65 = xor i1 %_66, true
  %95 = zext i1 %_65 to i8
  store i8 %95, i8* %_60, align 1
  br label %bb27

bb27:                                             ; preds = %bb25, %bb30
  %96 = load i8, i8* %_60, align 1, !range !2
  %97 = trunc i8 %96 to i1
  br i1 %97, label %bb31, label %bb40

bb40:                                             ; preds = %bb27
  %98 = getelementptr inbounds %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>", %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* %0, i32 0, i32 1
  store i8 2, i8* %98, align 8
  br label %bb41

bb31:                                             ; preds = %bb27
  %99 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  %_76.0 = load i8*, i8** %99, align 8, !nonnull !20
  %100 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  %_76.1 = load i64, i64* %100, align 8
; call proc_macro2::parse::block_comment
  call void @_ZN11proc_macro25parse13block_comment17hc8e324b812e6b33aE(%"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, &str), parse::Reject>") dereferenceable(32) %_75, i8* nonnull align 1 %_76.0, i64 %_76.1)
  br label %bb32

bb32:                                             ; preds = %bb31
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h872dfb803c62b9c2E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>") dereferenceable(32) %_74, %"core::result::Result<(parse::Cursor, &str), parse::Reject>"* noalias nocapture dereferenceable(32) %_75)
  br label %bb33

bb33:                                             ; preds = %bb32
  %101 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* %_74 to {}**
  %102 = load {}*, {}** %101, align 8
  %103 = icmp eq {}* %102, null
  %_77 = select i1 %103, i64 1, i64 0
  switch i64 %_77, label %bb35 [
    i64 0, label %bb34
    i64 1, label %bb36
  ]

bb35:                                             ; preds = %bb33
  unreachable

bb34:                                             ; preds = %bb33
  %104 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>"* %_74 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Continue"*
  %105 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, parse::Reject>, (parse::Cursor, &str)>::Continue"* %104 to { { i8*, i64 }, { [0 x i8]*, i64 } }*
  %106 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %val2 to i8*
  %107 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 32, i1 false)
  %108 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_73 to i8*
  %109 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %val2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 32, i1 false)
  %110 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_73 to { i8*, i64 }*
  %111 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %110, i32 0, i32 0
  %input.013 = load i8*, i8** %111, align 8, !nonnull !20
  %112 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %110, i32 0, i32 1
  %input.114 = load i64, i64* %112, align 8
  %113 = getelementptr inbounds { { i8*, i64 }, { [0 x i8]*, i64 } }, { { i8*, i64 }, { [0 x i8]*, i64 } }* %_73, i32 0, i32 1
  %114 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %113, i32 0, i32 0
  %s.015 = load [0 x i8]*, [0 x i8]** %114, align 8, !nonnull !20
  %115 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %113, i32 0, i32 1
  %s.116 = load i64, i64* %115, align 8
; call core::str::<impl str>::len
  %_90 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %s.015, i64 %s.116)
  br label %bb37

bb36:                                             ; preds = %bb33
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3336dc0804503aa4E"(%"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1633 to %"core::panic::location::Location"*))
  br label %bb41

bb37:                                             ; preds = %bb34
  %116 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_90, i64 2)
  %_92.0 = extractvalue { i64, i1 } %116, 0
  %_92.1 = extractvalue { i64, i1 } %116, 1
  %117 = call i1 @llvm.expect.i1(i1 %_92.1, i1 false)
  br i1 %117, label %panic17, label %bb38

bb38:                                             ; preds = %bb37
  %118 = bitcast { i64, i64 }* %_88 to i64*
  store i64 3, i64* %118, align 8
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_88, i32 0, i32 1
  store i64 %_92.0, i64* %119, align 8
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_88, i32 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_88, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %124 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hbc164f4155ccfd5dE"([0 x i8]* nonnull align 1 %s.015, i64 %s.116, i64 %121, i64 %123, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1637 to %"core::panic::location::Location"*))
  %_86.0 = extractvalue { [0 x i8]*, i64 } %124, 0
  %_86.1 = extractvalue { [0 x i8]*, i64 } %124, 1
  br label %bb39

panic17:                                          ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1635 to %"core::panic::location::Location"*)) #19
  unreachable

bb39:                                             ; preds = %bb38
  %125 = bitcast { { [0 x i8]*, i64 }, i8, [7 x i8] }* %_83 to { [0 x i8]*, i64 }*
  %126 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %125, i32 0, i32 0
  store [0 x i8]* %_86.0, [0 x i8]** %126, align 8
  %127 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %125, i32 0, i32 1
  store i64 %_86.1, i64* %127, align 8
  %128 = getelementptr inbounds { { [0 x i8]*, i64 }, i8, [7 x i8] }, { { [0 x i8]*, i64 }, i8, [7 x i8] }* %_83, i32 0, i32 1
  store i8 0, i8* %128, align 8
  %129 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_81 to { i8*, i64 }*
  %130 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %129, i32 0, i32 0
  store i8* %input.013, i8** %130, align 8
  %131 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %129, i32 0, i32 1
  store i64 %input.114, i64* %131, align 8
  %132 = getelementptr inbounds { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }, { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_81, i32 0, i32 1
  %133 = bitcast { { [0 x i8]*, i64 }, i8, [7 x i8] }* %132 to i8*
  %134 = bitcast { { [0 x i8]*, i64 }, i8, [7 x i8] }* %_83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 24, i1 false)
  %135 = bitcast %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>"* %0 to %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Ok"*
  %136 = bitcast %"core::result::Result<(parse::Cursor, (&str, bool)), parse::Reject>::Ok"* %135 to { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }*
  %137 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %136 to i8*
  %138 = bitcast { { i8*, i64 }, { { [0 x i8]*, i64 }, i8, [7 x i8] } }* %_81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 40, i1 false)
  br label %bb41
}

; proc_macro2::parse::take_until_newline_or_eof
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25parse25take_until_newline_or_eof17h9e0f91b0e07891ebE({ { i8*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { i8*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %0, i8* nonnull align 1 %1, i64 %2) unnamed_addr #1 {
start:
  %_42 = alloca i64, align 8
  %_29 = alloca i64, align 8
  %_23 = alloca i8, align 1
  %_21 = alloca i64, align 8
  %_7 = alloca { i64, i32 }, align 8
  %iter = alloca %"core::str::iter::CharIndices", align 8
  %_5 = alloca %"core::str::iter::CharIndices", align 8
  %_4 = alloca %"core::str::iter::CharIndices", align 8
  %chars = alloca %"core::str::iter::CharIndices", align 8
  %input = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %input, i32 0, i32 1
  store i64 %2, i64* %4, align 8
; call proc_macro2::parse::Cursor::char_indices
  call void @_ZN11proc_macro25parse6Cursor12char_indices17h5b5acc4d3cd1d190E(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %chars, { i8*, i64 }* align 8 dereferenceable(16) %input)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::str::iter::CharIndices"* %_5 to i8*
  %6 = bitcast %"core::str::iter::CharIndices"* %chars to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h15bf28ed3a98aeccE"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %_4, %"core::str::iter::CharIndices"* noalias nocapture dereferenceable(24) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %7 = bitcast %"core::str::iter::CharIndices"* %iter to i8*
  %8 = bitcast %"core::str::iter::CharIndices"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb14, %bb2
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %9 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11b70574caaf466fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %iter)
  store { i64, i32 } %9, { i64, i32 }* %_7, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 1
  %11 = load i32, i32* %10, align 8, !range !22
  %12 = sub i32 %11, 1114112
  %13 = icmp eq i32 %12, 0
  %_10 = select i1 %13, i64 0, i64 1
  switch i64 %_10, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
; call proc_macro2::parse::Cursor::len
  %_46 = call i64 @_ZN11proc_macro25parse6Cursor3len17h8a72020d0a5d0b7bE({ i8*, i64 }* align 8 dereferenceable(16) %input)
  br label %bb22

bb5:                                              ; preds = %bb4
  %14 = bitcast { i64, i32 }* %_7 to i64*
  %i = load i64, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 1
  %ch = load i32, i32* %15, align 8, !range !80
  %16 = icmp eq i32 %ch, 10
  br i1 %16, label %bb8, label %bb11

bb8:                                              ; preds = %bb5
; call proc_macro2::parse::Cursor::advance
  %17 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %i)
  %_14.0 = extractvalue { i8*, i64 } %17, 0
  %_14.1 = extractvalue { i8*, i64 } %17, 1
  br label %bb9

bb11:                                             ; preds = %bb5
  %18 = icmp eq i32 %ch, 13
  br i1 %18, label %bb13, label %bb12

bb13:                                             ; preds = %bb11
  %19 = bitcast { i8*, i64 }* %input to { [0 x i8]*, i64 }*
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 0
  %_28.0 = load [0 x i8]*, [0 x i8]** %20, align 8, !nonnull !20
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 1
  %_28.1 = load i64, i64* %21, align 8
  %22 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 1)
  %_32.0 = extractvalue { i64, i1 } %22, 0
  %_32.1 = extractvalue { i64, i1 } %22, 1
  %23 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false)
  br i1 %23, label %panic, label %bb15

bb12:                                             ; preds = %bb11
  store i8 0, i8* %_23, align 1
  br label %bb14

bb14:                                             ; preds = %bb17, %bb12
  %24 = load i8, i8* %_23, align 1, !range !2
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb18, label %bb3

bb15:                                             ; preds = %bb13
  store i64 %_32.0, i64* %_29, align 8
  %26 = load i64, i64* %_29, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %27 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17ha5dfc76fbe8f171dE"([0 x i8]* nonnull align 1 %_28.0, i64 %_28.1, i64 %26, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1641 to %"core::panic::location::Location"*))
  %_27.0 = extractvalue { [0 x i8]*, i64 } %27, 0
  %_27.1 = extractvalue { [0 x i8]*, i64 } %27, 1
  br label %bb16

panic:                                            ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1639 to %"core::panic::location::Location"*)) #19
  unreachable

bb16:                                             ; preds = %bb15
; call core::str::<impl str>::starts_with
  %_25 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17he067b52065bc5e41E"([0 x i8]* nonnull align 1 %_27.0, i64 %_27.1, i32 10)
  br label %bb17

bb17:                                             ; preds = %bb16
  %28 = zext i1 %_25 to i8
  store i8 %28, i8* %_23, align 1
  br label %bb14

bb18:                                             ; preds = %bb14
  %29 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 1)
  %_37.0 = extractvalue { i64, i1 } %29, 0
  %_37.1 = extractvalue { i64, i1 } %29, 1
  %30 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false)
  br i1 %30, label %panic1, label %bb19

bb19:                                             ; preds = %bb18
; call proc_macro2::parse::Cursor::advance
  %31 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %_37.0)
  %_33.0 = extractvalue { i8*, i64 } %31, 0
  %_33.1 = extractvalue { i8*, i64 } %31, 1
  br label %bb20

panic1:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1643 to %"core::panic::location::Location"*)) #19
  unreachable

bb20:                                             ; preds = %bb19
  %32 = bitcast { i8*, i64 }* %input to { [0 x i8]*, i64 }*
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0
  %_41.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !20
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1
  %_41.1 = load i64, i64* %34, align 8
  store i64 %i, i64* %_42, align 8
  %35 = load i64, i64* %_42, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %36 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h92cbe302d9c6844dE"([0 x i8]* nonnull align 1 %_41.0, i64 %_41.1, i64 %35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1645 to %"core::panic::location::Location"*))
  %_40.0 = extractvalue { [0 x i8]*, i64 } %36, 0
  %_40.1 = extractvalue { [0 x i8]*, i64 } %36, 1
  br label %bb21

bb21:                                             ; preds = %bb20
  %37 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %0 to { i8*, i64 }*
  %38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %37, i32 0, i32 0
  store i8* %_33.0, i8** %38, align 8
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %37, i32 0, i32 1
  store i64 %_33.1, i64* %39, align 8
  %40 = getelementptr inbounds { { i8*, i64 }, { [0 x i8]*, i64 } }, { { i8*, i64 }, { [0 x i8]*, i64 } }* %0, i32 0, i32 1
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %40, i32 0, i32 0
  store [0 x i8]* %_40.0, [0 x i8]** %41, align 8
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %40, i32 0, i32 1
  store i64 %_40.1, i64* %42, align 8
  br label %bb24

bb24:                                             ; preds = %bb23, %bb10, %bb21
  ret void

bb9:                                              ; preds = %bb8
  %43 = bitcast { i8*, i64 }* %input to { [0 x i8]*, i64 }*
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 0
  %_20.0 = load [0 x i8]*, [0 x i8]** %44, align 8, !nonnull !20
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 1
  %_20.1 = load i64, i64* %45, align 8
  store i64 %i, i64* %_21, align 8
  %46 = load i64, i64* %_21, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %47 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h92cbe302d9c6844dE"([0 x i8]* nonnull align 1 %_20.0, i64 %_20.1, i64 %46, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1647 to %"core::panic::location::Location"*))
  %_19.0 = extractvalue { [0 x i8]*, i64 } %47, 0
  %_19.1 = extractvalue { [0 x i8]*, i64 } %47, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %48 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %0 to { i8*, i64 }*
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %48, i32 0, i32 0
  store i8* %_14.0, i8** %49, align 8
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %48, i32 0, i32 1
  store i64 %_14.1, i64* %50, align 8
  %51 = getelementptr inbounds { { i8*, i64 }, { [0 x i8]*, i64 } }, { { i8*, i64 }, { [0 x i8]*, i64 } }* %0, i32 0, i32 1
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %51, i32 0, i32 0
  store [0 x i8]* %_19.0, [0 x i8]** %52, align 8
  %53 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %51, i32 0, i32 1
  store i64 %_19.1, i64* %53, align 8
  br label %bb24

bb22:                                             ; preds = %bb7
; call proc_macro2::parse::Cursor::advance
  %54 = call { i8*, i64 } @_ZN11proc_macro25parse6Cursor7advance17h6d2c659af8091595E({ i8*, i64 }* align 8 dereferenceable(16) %input, i64 %_46)
  %_44.0 = extractvalue { i8*, i64 } %54, 0
  %_44.1 = extractvalue { i8*, i64 } %54, 1
  br label %bb23

bb23:                                             ; preds = %bb22
  %55 = bitcast { i8*, i64 }* %input to { [0 x i8]*, i64 }*
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %55, i32 0, i32 0
  %_48.0 = load [0 x i8]*, [0 x i8]** %56, align 8, !nonnull !20
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %55, i32 0, i32 1
  %_48.1 = load i64, i64* %57, align 8
  %58 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %0 to { i8*, i64 }*
  %59 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %58, i32 0, i32 0
  store i8* %_44.0, i8** %59, align 8
  %60 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %58, i32 0, i32 1
  store i64 %_44.1, i64* %60, align 8
  %61 = getelementptr inbounds { { i8*, i64 }, { [0 x i8]*, i64 } }, { { i8*, i64 }, { [0 x i8]*, i64 } }* %0, i32 0, i32 1
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 0
  store [0 x i8]* %_48.0, [0 x i8]** %62, align 8
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 1
  store i64 %_48.1, i64* %63, align 8
  br label %bb24
}

; proc_macro2::detection::inside_proc_macro
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E() unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  %0 = alloca i8, align 1
  store i8 0, i8* %_4, align 1
  %1 = load i8, i8* %_4, align 1, !range !23
; call core::sync::atomic::AtomicUsize::load
  %_1 = call i64 @_ZN4core4sync6atomic11AtomicUsize4load17h96fd510a8ef09f55E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN11proc_macro29detection5WORKS17ha0418fd906fc1de1E to %"core::sync::atomic::AtomicUsize"*), i8 %1)
  br label %bb1

bb1:                                              ; preds = %start
  switch i64 %_1, label %bb2 [
    i64 1, label %bb3
    i64 2, label %bb4
  ]

bb2:                                              ; preds = %bb1
; call std::sync::once::Once::call_once
  call void @_ZN3std4sync4once4Once9call_once17h6d0da003c4ba75aaE(%"std::sync::once::Once"* align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN11proc_macro29detection4INIT17hdc317313d22e3022E to %"std::sync::once::Once"*))
  br label %bb5

bb3:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb6

bb4:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb6

bb5:                                              ; preds = %bb2
; call proc_macro2::detection::inside_proc_macro
  %2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  %3 = zext i1 %2 to i8
  store i8 %3, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4, %bb5
  %4 = load i8, i8* %0, align 1, !range !2
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; proc_macro2::detection::force_fallback
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro29detection14force_fallback17he69c89a362ac1a52E() unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !23
; call core::sync::atomic::AtomicUsize::store
  call void @_ZN4core4sync6atomic11AtomicUsize5store17hf0e24cb2720a6dd9E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN11proc_macro29detection5WORKS17ha0418fd906fc1de1E to %"core::sync::atomic::AtomicUsize"*), i64 1, i8 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::detection::unforce_fallback
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro29detection16unforce_fallback17h31ccd7a5ebc8c2a4E() unnamed_addr #1 {
start:
; call proc_macro2::detection::initialize
  call void @_ZN11proc_macro29detection10initialize17ha8fdcd0ae2c28965E()
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::detection::initialize
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro29detection10initialize17ha8fdcd0ae2c28965E() unnamed_addr #1 {
start:
  %_9 = alloca i8, align 1
; call proc_macro::is_available
  %available = call zeroext i1 @_ZN10proc_macro12is_available17h4e650af14b809f30E()
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp ule i1 %available, true
  call void @llvm.assume(i1 %0)
  %_6 = zext i1 %available to i64
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_6, i64 1)
  %_8.0 = extractvalue { i64, i1 } %1, 0
  %_8.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false)
  br i1 %2, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_9, align 1
  %3 = load i8, i8* %_9, align 1, !range !23
; call core::sync::atomic::AtomicUsize::store
  call void @_ZN4core4sync6atomic11AtomicUsize5store17hf0e24cb2720a6dd9E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN11proc_macro29detection5WORKS17ha0418fd906fc1de1E to %"core::sync::atomic::AtomicUsize"*), i64 %_8.0, i8 %3)
  br label %bb3

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1649 to %"core::panic::location::Location"*)) #19
  unreachable

bb3:                                              ; preds = %bb2
  ret void
}

; proc_macro2::fallback::force
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro28fallback5force17hcde9a85296d7f6c0E() unnamed_addr #1 {
start:
; call proc_macro2::detection::force_fallback
  call void @_ZN11proc_macro29detection14force_fallback17he69c89a362ac1a52E()
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::fallback::unforce
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro28fallback7unforce17h9bfa77895e82a02aE() unnamed_addr #1 {
start:
; call proc_macro2::detection::unforce_fallback
  call void @_ZN11proc_macro29detection16unforce_fallback17h31ccd7a5ebc8c2a4E()
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::fallback::LexError::span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback8LexError4span17h38bc0da87e80dff2E(%"fallback::LexError"* nonnull align 1 %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::LexError::call_site
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback8LexError9call_site17h7381aa063ea9e0a7E() unnamed_addr #1 {
start:
; call proc_macro2::fallback::Span::call_site
  call void @_ZN11proc_macro28fallback4Span9call_site17h60bcec765db6ac7eE()
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::fallback::TokenStream::new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro28fallback11TokenStream3new17h610fd3a2bc513c65E(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_1 = alloca %"alloc::vec::Vec<TokenTree>", align 8
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h3bd7eafdf39cd676E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"fallback::TokenStream"* %0 to %"alloc::vec::Vec<TokenTree>"*
  %2 = bitcast %"alloc::vec::Vec<TokenTree>"* %1 to i8*
  %3 = bitcast %"alloc::vec::Vec<TokenTree>"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; proc_macro2::fallback::TokenStream::is_empty
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro28fallback11TokenStream8is_empty17ha4bfeb57fcaed963E(%"fallback::TokenStream"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"fallback::TokenStream"* %self to %"alloc::vec::Vec<TokenTree>"*
; call alloc::vec::Vec<T,A>::len
  %_2 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h99027def3e7bafd0E"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i64 %_2, 0
  ret i1 %0
}

; proc_macro2::fallback::TokenStream::take_inner
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro28fallback11TokenStream10take_inner17ha10a0f62961ec348E(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, %"fallback::TokenStream"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_4 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %_3 = bitcast %"fallback::TokenStream"* %self to %"alloc::vec::Vec<TokenTree>"*
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h3bd7eafdf39cd676E"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::replace
  call void @_ZN4core3mem7replace17hfdc3ff23003c753dE(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %0, %"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %_3, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::fallback::TokenStream::push_token
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro28fallback11TokenStream10push_token17h51c45fa295ebd96bE(%"fallback::TokenStream"* align 8 dereferenceable(24) %self, %TokenTree* noalias nocapture dereferenceable(48) %token) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_19 = alloca i8, align 1
  %_18 = alloca i8, align 1
  %_17 = alloca i8, align 1
  %_16 = alloca %TokenTree, align 8
  %_14 = alloca %"fallback::Literal", align 8
  %literal = alloca %"fallback::Literal", align 8
  store i8 0, i8* %_18, align 1
  store i8 0, i8* %_17, align 1
  store i8 0, i8* %_19, align 1
  store i8 1, i8* %_17, align 1
  store i8 1, i8* %_18, align 1
  store i8 1, i8* %_19, align 1
  %1 = bitcast %TokenTree* %token to i32*
  %2 = load i32, i32* %1, align 8, !range !36
  %_5 = zext i32 %2 to i64
  %3 = icmp eq i64 %_5, 3
  br i1 %3, label %bb2, label %bb1

bb2:                                              ; preds = %start
  %4 = bitcast %TokenTree* %token to %"TokenTree::Literal"*
  %5 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %4, i32 0, i32 1
  %6 = bitcast %Literal* %5 to %"imp::Literal"*
  %7 = bitcast %"imp::Literal"* %6 to i32*
  %8 = load i32, i32* %7, align 8, !range !19
  %_4 = zext i32 %8 to i64
  %9 = icmp eq i64 %_4, 1
  br i1 %9, label %bb3, label %bb1

bb1:                                              ; preds = %bb5, %bb2, %start
  %_15 = bitcast %"fallback::TokenStream"* %self to %"alloc::vec::Vec<TokenTree>"*
  store i8 0, i8* %_17, align 1
  store i8 0, i8* %_18, align 1
  store i8 0, i8* %_19, align 1
  %10 = bitcast %TokenTree* %_16 to i8*
  %11 = bitcast %TokenTree* %token to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 48, i1 false)
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h3f5781f67b14714cE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %_15, %TokenTree* noalias nocapture dereferenceable(48) %_16)
          to label %bb24 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %12 = bitcast %TokenTree* %token to %"TokenTree::Literal"*
  %13 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %12, i32 0, i32 1
  %14 = bitcast %Literal* %13 to %"imp::Literal"*
  %15 = bitcast %"imp::Literal"* %14 to %"imp::Literal::Fallback"*
  %literal1 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %15, i32 0, i32 1
  %_11 = bitcast %"fallback::Literal"* %literal1 to %"alloc::string::String"*
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %16 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb4e9891ef10b3b2fE"(%"alloc::string::String"* align 8 dereferenceable(24) %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %_10.0 = extractvalue { [0 x i8]*, i64 } %16, 0
  %_10.1 = extractvalue { [0 x i8]*, i64 } %16, 1
; invoke core::str::<impl str>::starts_with
  %_8 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17he067b52065bc5e41E"([0 x i8]* nonnull align 1 %_10.0, i64 %_10.1, i32 45)
          to label %bb5 unwind label %cleanup

bb23:                                             ; preds = %cleanup
  %17 = load i8, i8* %_17, align 1, !range !2
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb22, label %bb8

cleanup:                                          ; preds = %bb1, %bb6, %bb4, %bb3
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb23

bb5:                                              ; preds = %bb4
  br i1 %_8, label %bb6, label %bb1

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_19, align 1
  %24 = bitcast %TokenTree* %token to %"TokenTree::Literal"*
  %25 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %24, i32 0, i32 1
  %26 = bitcast %Literal* %25 to %"imp::Literal"*
  %27 = bitcast %"imp::Literal"* %26 to %"imp::Literal::Fallback"*
  %28 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %27, i32 0, i32 1
  %29 = bitcast %"fallback::Literal"* %literal to i8*
  %30 = bitcast %"fallback::Literal"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false)
  %31 = bitcast %"fallback::Literal"* %_14 to i8*
  %32 = bitcast %"fallback::Literal"* %literal to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false)
; invoke proc_macro2::fallback::TokenStream::push_token::push_negative_literal
  invoke void @_ZN11proc_macro28fallback11TokenStream10push_token21push_negative_literal17h15b90331811197ffE(%"fallback::TokenStream"* align 8 dereferenceable(24) %self, %"fallback::Literal"* noalias nocapture dereferenceable(24) %_14)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb6
  br label %bb7

bb7:                                              ; preds = %bb24, %bb25
  %33 = load i8, i8* %_17, align 1, !range !2
  %34 = trunc i8 %33 to i1
  br i1 %34, label %bb15, label %bb9

bb24:                                             ; preds = %bb1
  br label %bb7

bb8:                                              ; preds = %bb18, %bb17, %bb19, %bb16, %bb21, %bb23
  %35 = bitcast { i8*, i32 }* %0 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40

bb22:                                             ; preds = %bb23
  %41 = bitcast %TokenTree* %token to i32*
  %42 = load i32, i32* %41, align 8, !range !36
  %_23 = zext i32 %42 to i64
  %43 = icmp eq i64 %_23, 3
  br i1 %43, label %bb16, label %bb21

bb16:                                             ; preds = %bb22
  %44 = load i8, i8* %_18, align 1, !range !2
  %45 = trunc i8 %44 to i1
  br i1 %45, label %bb20, label %bb8

bb21:                                             ; preds = %bb22
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %token) #18
  br label %bb8

bb20:                                             ; preds = %bb16
  %46 = bitcast %TokenTree* %token to %"TokenTree::Literal"*
  %47 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %46, i32 0, i32 1
  %48 = bitcast %Literal* %47 to %"imp::Literal"*
  %49 = bitcast %"imp::Literal"* %48 to i32*
  %50 = load i32, i32* %49, align 8, !range !19
  %_22 = zext i32 %50 to i64
  %51 = icmp eq i64 %_22, 1
  br i1 %51, label %bb17, label %bb19

bb17:                                             ; preds = %bb20
  %52 = load i8, i8* %_19, align 1, !range !2
  %53 = trunc i8 %52 to i1
  br i1 %53, label %bb18, label %bb8

bb19:                                             ; preds = %bb20
  %54 = bitcast %TokenTree* %token to %"TokenTree::Literal"*
  %55 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %54, i32 0, i32 1
  %56 = bitcast %Literal* %55 to %"imp::Literal"*
; call core::ptr::drop_in_place<proc_macro2::imp::Literal>
  call void @"_ZN4core3ptr46drop_in_place$LT$proc_macro2..imp..Literal$GT$17h1792172ac090f0a6E"(%"imp::Literal"* %56) #18
  br label %bb8

bb18:                                             ; preds = %bb17
  %57 = bitcast %TokenTree* %token to %"TokenTree::Literal"*
  %58 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %57, i32 0, i32 1
  %59 = bitcast %Literal* %58 to %"imp::Literal"*
  %60 = bitcast %"imp::Literal"* %59 to %"imp::Literal::Fallback"*
  %61 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %60, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  call void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17hbda93f62f7510cdeE"(%"fallback::Literal"* %61) #18
  br label %bb8

bb9:                                              ; preds = %bb11, %bb14, %bb7
  store i8 0, i8* %_17, align 1
  ret void

bb15:                                             ; preds = %bb7
  %62 = bitcast %TokenTree* %token to i32*
  %63 = load i32, i32* %62, align 8, !range !36
  %_21 = zext i32 %63 to i64
  %64 = icmp eq i64 %_21, 3
  br i1 %64, label %bb10, label %bb14

bb10:                                             ; preds = %bb15
  %65 = load i8, i8* %_18, align 1, !range !2
  %66 = trunc i8 %65 to i1
  br i1 %66, label %bb13, label %bb11

bb14:                                             ; preds = %bb15
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %token)
  br label %bb9

bb11:                                             ; preds = %bb12, %bb13, %bb10
  store i8 0, i8* %_18, align 1
  br label %bb9

bb13:                                             ; preds = %bb10
  %67 = bitcast %TokenTree* %token to %"TokenTree::Literal"*
  %68 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %67, i32 0, i32 1
  %69 = bitcast %Literal* %68 to %"imp::Literal"*
  %70 = bitcast %"imp::Literal"* %69 to i32*
  %71 = load i32, i32* %70, align 8, !range !19
  %_20 = zext i32 %71 to i64
  %72 = icmp eq i64 %_20, 1
  br i1 %72, label %bb11, label %bb12

bb12:                                             ; preds = %bb13
  %73 = bitcast %TokenTree* %token to %"TokenTree::Literal"*
  %74 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %73, i32 0, i32 1
  %75 = bitcast %Literal* %74 to %"imp::Literal"*
; call core::ptr::drop_in_place<proc_macro2::imp::Literal>
  call void @"_ZN4core3ptr46drop_in_place$LT$proc_macro2..imp..Literal$GT$17h1792172ac090f0a6E"(%"imp::Literal"* %75)
  br label %bb11
}

; proc_macro2::fallback::TokenStream::push_token::push_negative_literal
; Function Attrs: cold nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback11TokenStream10push_token21push_negative_literal17h15b90331811197ffE(%"fallback::TokenStream"* align 8 dereferenceable(24) %stream, %"fallback::Literal"* noalias nocapture dereferenceable(24) %literal) unnamed_addr #7 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32, align 4
  %1 = alloca i96, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_20 = alloca i8, align 1
  %_19 = alloca %"fallback::Literal", align 8
  %_18 = alloca %Literal, align 8
  %_17 = alloca %TokenTree, align 8
  %_14 = alloca %Punct, align 4
  %_13 = alloca %TokenTree, align 8
  %_9 = alloca %Span, align 4
  %_6 = alloca i8, align 1
  %punct = alloca %Punct, align 4
  store i8 0, i8* %_20, align 1
  store i8 1, i8* %_20, align 1
  %_4 = bitcast %"fallback::Literal"* %literal to %"alloc::string::String"*
; invoke alloc::string::String::remove
  %_3 = invoke i32 @_ZN5alloc6string6String6remove17hc6b023cb73596cfcE(%"alloc::string::String"* align 8 dereferenceable(24) %_4, i64 0)
          to label %bb1 unwind label %cleanup, !range !80

bb1:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
  %3 = load i8, i8* %_6, align 1, !range !2
  %4 = trunc i8 %3 to i1
; invoke proc_macro2::Punct::new
  %5 = invoke i96 @_ZN11proc_macro25Punct3new17h092c0d122b5304dfE(i32 45, i1 zeroext %4)
          to label %bb2 unwind label %cleanup

bb10:                                             ; preds = %cleanup
  %6 = load i8, i8* %_20, align 1, !range !2
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb9, label %bb8

cleanup:                                          ; preds = %bb6, %bb5, %bb4, %bb3, %bb2, %bb1, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i96 %5, i96* %1, align 8
  %13 = bitcast %Punct* %punct to i8*
  %14 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 8 %14, i64 12, i1 false)
; invoke proc_macro2::Span::_new_stable
  %15 = invoke i32 @_ZN11proc_macro24Span11_new_stable17h938b6d2ea5159f26E()
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i32 %15, i32* %0, align 4
  %16 = bitcast %Span* %_9 to i8*
  %17 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 4, i1 false)
  %18 = bitcast %Span* %_9 to i32*
  %19 = load i32, i32* %18, align 4
; invoke proc_macro2::Punct::set_span
  invoke void @_ZN11proc_macro25Punct8set_span17h15697e209dacbb5dE(%Punct* align 4 dereferenceable(12) %punct, i32 %19)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %_12 = bitcast %"fallback::TokenStream"* %stream to %"alloc::vec::Vec<TokenTree>"*
  %20 = bitcast %Punct* %_14 to i8*
  %21 = bitcast %Punct* %punct to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %21, i64 12, i1 false)
  %22 = bitcast %TokenTree* %_13 to %"TokenTree::Punct"*
  %23 = getelementptr inbounds %"TokenTree::Punct", %"TokenTree::Punct"* %22, i32 0, i32 1
  %24 = bitcast %Punct* %23 to i8*
  %25 = bitcast %Punct* %_14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 12, i1 false)
  %26 = bitcast %TokenTree* %_13 to i32*
  store i32 2, i32* %26, align 8
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h3f5781f67b14714cE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %_12, %TokenTree* noalias nocapture dereferenceable(48) %_13)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %_16 = bitcast %"fallback::TokenStream"* %stream to %"alloc::vec::Vec<TokenTree>"*
  store i8 0, i8* %_20, align 1
  %27 = bitcast %"fallback::Literal"* %_19 to i8*
  %28 = bitcast %"fallback::Literal"* %literal to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false)
; invoke proc_macro2::Literal::_new_stable
  invoke void @_ZN11proc_macro27Literal11_new_stable17h3a3234ec130b995fE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %_18, %"fallback::Literal"* noalias nocapture dereferenceable(24) %_19)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %29 = bitcast %TokenTree* %_17 to %"TokenTree::Literal"*
  %30 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %29, i32 0, i32 1
  %31 = bitcast %Literal* %30 to i8*
  %32 = bitcast %Literal* %_18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 32, i1 false)
  %33 = bitcast %TokenTree* %_17 to i32*
  store i32 3, i32* %33, align 8
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h3f5781f67b14714cE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %_16, %TokenTree* noalias nocapture dereferenceable(48) %_17)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  ret void

bb8:                                              ; preds = %bb9, %bb10
  %34 = bitcast { i8*, i32 }* %2 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  call void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17hbda93f62f7510cdeE"(%"fallback::Literal"* %literal) #18
  br label %bb8
}

; <proc_macro2::fallback::TokenStream as core::convert::From<alloc::vec::Vec<proc_macro2::TokenTree>>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN127_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..convert..From$LT$alloc..vec..Vec$LT$proc_macro2..TokenTree$GT$$GT$$GT$4from17hd85b500083c2a678E"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %0, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %inner) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %1 = bitcast %"alloc::vec::Vec<TokenTree>"* %_2 to i8*
  %2 = bitcast %"alloc::vec::Vec<TokenTree>"* %inner to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"fallback::TokenStream"* %0 to %"alloc::vec::Vec<TokenTree>"*
  %4 = bitcast %"alloc::vec::Vec<TokenTree>"* %3 to i8*
  %5 = bitcast %"alloc::vec::Vec<TokenTree>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  ret void
}

; <proc_macro2::fallback::TokenStream as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN76_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf225ef0badb83821E"(%"fallback::TokenStream"* align 8 dereferenceable(24) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_15 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %group4 = alloca %"fallback::Group", align 8
  %group3 = alloca %"fallback::Group", align 8
  %group2 = alloca %"fallback::Group", align 8
  %group1 = alloca %Group, align 8
  %group = alloca %"imp::Group", align 8
  %token = alloca %TokenTree, align 8
  %_2 = alloca %"core::option::Option<TokenTree>", align 8
  store i8 0, i8* %_17, align 1
  br label %bb1

bb1:                                              ; preds = %bb22, %bb20, %start
  %_3 = bitcast %"fallback::TokenStream"* %self to %"alloc::vec::Vec<TokenTree>"*
; call alloc::vec::Vec<T,A>::pop
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h01a6e8a18c8181a2E"(%"core::option::Option<TokenTree>"* noalias nocapture sret(%"core::option::Option<TokenTree>") dereferenceable(48) %_2, %"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::option::Option<TokenTree>"* %_2 to i32*
  %2 = load i32, i32* %1, align 8, !range !31
  %3 = sub i32 %2, 4
  %4 = icmp eq i32 %3, 0
  %_4 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_4, 1
  br i1 %5, label %bb3, label %bb11

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_17, align 1
  %6 = bitcast %"core::option::Option<TokenTree>"* %_2 to %"core::option::Option<TokenTree>::Some"*
  %7 = bitcast %"core::option::Option<TokenTree>::Some"* %6 to %TokenTree*
  %8 = bitcast %TokenTree* %token to i8*
  %9 = bitcast %TokenTree* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 48, i1 false)
  %10 = bitcast %TokenTree* %token to i32*
  %11 = load i32, i32* %10, align 8, !range !36
  %_7 = zext i32 %11 to i64
  %12 = icmp eq i64 %_7, 0
  br i1 %12, label %bb4, label %bb13

bb11:                                             ; preds = %bb2
; call core::ptr::drop_in_place<core::option::Option<proc_macro2::TokenTree>>
  call void @"_ZN4core3ptr71drop_in_place$LT$core..option..Option$LT$proc_macro2..TokenTree$GT$$GT$17h8c6a5948268c77d1E"(%"core::option::Option<TokenTree>"* %_2)
  br label %bb12

bb12:                                             ; preds = %bb11
  ret void

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_17, align 1
  %13 = bitcast %TokenTree* %token to %"TokenTree::Group"*
  %14 = getelementptr inbounds %"TokenTree::Group", %"TokenTree::Group"* %13, i32 0, i32 1
  %15 = bitcast %Group* %group1 to i8*
  %16 = bitcast %Group* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 40, i1 false)
  %17 = bitcast %Group* %group1 to %"imp::Group"*
  %18 = bitcast %"imp::Group"* %group to i8*
  %19 = bitcast %"imp::Group"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 40, i1 false)
  %20 = bitcast %"imp::Group"* %group to i32*
  %21 = load i32, i32* %20, align 8, !range !19
  %_10 = zext i32 %21 to i64
  switch i64 %_10, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb13:                                             ; preds = %bb17, %bb5, %bb3
  %22 = bitcast %TokenTree* %token to i32*
  %23 = load i32, i32* %22, align 8, !range !36
  %_21 = zext i32 %23 to i64
  %24 = icmp eq i64 %_21, 0
  br i1 %24, label %bb23, label %bb25

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %25 = bitcast %"imp::Group"* %group to i32*
  %26 = load i32, i32* %25, align 8, !range !19
  %_18 = zext i32 %26 to i64
  %27 = icmp eq i64 %_18, 1
  br i1 %27, label %bb13, label %bb17

bb7:                                              ; preds = %bb4
  %28 = bitcast %"imp::Group"* %group to %"imp::Group::Fallback"*
  %29 = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %28, i32 0, i32 1
  %30 = bitcast %"fallback::Group"* %group3 to i8*
  %31 = bitcast %"fallback::Group"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 32, i1 false)
  %32 = bitcast %"fallback::Group"* %group2 to i8*
  %33 = bitcast %"fallback::Group"* %group3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 32, i1 false)
  %34 = bitcast %"fallback::Group"* %group4 to i8*
  %35 = bitcast %"fallback::Group"* %group2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 32, i1 false)
  %_14 = bitcast %"fallback::TokenStream"* %self to %"alloc::vec::Vec<TokenTree>"*
  %_16 = bitcast %"fallback::Group"* %group4 to %"fallback::TokenStream"*
; invoke proc_macro2::fallback::TokenStream::take_inner
  invoke void @_ZN11proc_macro28fallback11TokenStream10take_inner17ha10a0f62961ec348E(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %_15, %"fallback::TokenStream"* align 8 dereferenceable(24) %_16)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend
  invoke void @"_ZN93_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$T$GT$$GT$6extend17h460c1a988d14b96bE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %_14, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %_15)
          to label %bb9 unwind label %cleanup

bb14:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<proc_macro2::fallback::Group>
  call void @"_ZN4core3ptr49drop_in_place$LT$proc_macro2..fallback..Group$GT$17h13f8c54853fc68c6E"(%"fallback::Group"* %group4) #18
  br label %bb27

cleanup:                                          ; preds = %bb8, %bb7
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  %38 = extractvalue { i8*, i32 } %36, 1
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %38, i32* %40, align 8
  br label %bb14

bb9:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<proc_macro2::fallback::Group>
  invoke void @"_ZN4core3ptr49drop_in_place$LT$proc_macro2..fallback..Group$GT$17h13f8c54853fc68c6E"(%"fallback::Group"* %group4)
          to label %bb10 unwind label %cleanup5

bb27:                                             ; preds = %cleanup5, %bb14
  %41 = bitcast %"imp::Group"* %group to i32*
  %42 = load i32, i32* %41, align 8, !range !19
  %_22 = zext i32 %42 to i64
  %43 = icmp eq i64 %_22, 1
  br i1 %43, label %bb15, label %bb26

bb10:                                             ; preds = %bb9
  %44 = bitcast %"imp::Group"* %group to i32*
  %45 = load i32, i32* %44, align 8, !range !19
  %_19 = zext i32 %45 to i64
  %46 = icmp eq i64 %_19, 1
  br i1 %46, label %bb18, label %bb19

cleanup5:                                         ; preds = %bb9
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  %49 = extractvalue { i8*, i32 } %47, 1
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  br label %bb27

bb15:                                             ; preds = %cleanup6, %bb26, %bb27
  %52 = bitcast %TokenTree* %token to i32*
  %53 = load i32, i32* %52, align 8, !range !36
  %_23 = zext i32 %53 to i64
  %54 = icmp eq i64 %_23, 0
  br i1 %54, label %bb16, label %bb28

bb26:                                             ; preds = %bb27
; call core::ptr::drop_in_place<proc_macro2::imp::Group>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17h7901ac00c8dfa1c6E"(%"imp::Group"* %group) #18
  br label %bb15

bb18:                                             ; preds = %bb19, %bb10
  %55 = bitcast %TokenTree* %token to i32*
  %56 = load i32, i32* %55, align 8, !range !36
  %_20 = zext i32 %56 to i64
  %57 = icmp eq i64 %_20, 0
  br i1 %57, label %bb20, label %bb21

bb19:                                             ; preds = %bb10
; invoke core::ptr::drop_in_place<proc_macro2::imp::Group>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17h7901ac00c8dfa1c6E"(%"imp::Group"* %group)
          to label %bb18 unwind label %cleanup6

cleanup6:                                         ; preds = %bb17, %bb19
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  %60 = extractvalue { i8*, i32 } %58, 1
  %61 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %59, i8** %61, align 8
  %62 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %60, i32* %62, align 8
  br label %bb15

bb20:                                             ; preds = %bb21, %bb18
  store i8 0, i8* %_17, align 1
  br label %bb1

bb21:                                             ; preds = %bb18
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %token)
  br label %bb20

bb17:                                             ; preds = %bb5
; invoke core::ptr::drop_in_place<proc_macro2::imp::Group>
  invoke void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17h7901ac00c8dfa1c6E"(%"imp::Group"* %group)
          to label %bb13 unwind label %cleanup6

bb16:                                             ; preds = %bb28, %bb15
  %63 = bitcast { i8*, i32 }* %0 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = insertvalue { i8*, i32 } undef, i8* %64, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  resume { i8*, i32 } %68

bb28:                                             ; preds = %bb15
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %token) #18
  br label %bb16

bb23:                                             ; preds = %bb13
  %69 = load i8, i8* %_17, align 1, !range !2
  %70 = trunc i8 %69 to i1
  br i1 %70, label %bb24, label %bb22

bb25:                                             ; preds = %bb13
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %token)
  br label %bb22

bb22:                                             ; preds = %bb24, %bb23, %bb25
  store i8 0, i8* %_17, align 1
  br label %bb1

bb24:                                             ; preds = %bb23
  %71 = bitcast %TokenTree* %token to %"TokenTree::Group"*
  %72 = getelementptr inbounds %"TokenTree::Group", %"TokenTree::Group"* %71, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::Group>
  call void @"_ZN4core3ptr39drop_in_place$LT$proc_macro2..Group$GT$17h63f66057fccbef96E"(%Group* %72)
  br label %bb22
}

; proc_macro2::fallback::get_cursor
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN11proc_macro28fallback10get_cursor17h078ee36a419ad0afE([0 x i8]* nonnull align 1 %src.0, i64 %src.1) unnamed_addr #1 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %src.1, i64* %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !20
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; <proc_macro2::fallback::TokenStream as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
define void @"_ZN81_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h9ca650c494097a50E"(%"core::result::Result<fallback::TokenStream, fallback::LexError>"* noalias nocapture sret(%"core::result::Result<fallback::TokenStream, fallback::LexError>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %src.0, i64 %src.1) unnamed_addr #1 {
start:
; call proc_macro2::fallback::get_cursor
  %1 = call { i8*, i64 } @_ZN11proc_macro28fallback10get_cursor17h078ee36a419ad0afE([0 x i8]* nonnull align 1 %src.0, i64 %src.1)
  %cursor.0 = extractvalue { i8*, i64 } %1, 0
  %cursor.1 = extractvalue { i8*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::parse::token_stream
  call void @_ZN11proc_macro25parse12token_stream17hd1563f0d6fe85b4cE(%"core::result::Result<fallback::TokenStream, fallback::LexError>"* noalias nocapture sret(%"core::result::Result<fallback::TokenStream, fallback::LexError>") dereferenceable(24) %0, i8* nonnull align 1 %cursor.0, i64 %cursor.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <proc_macro2::fallback::LexError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$proc_macro2..fallback..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17h1aa012f5546e8c0dE"(%"fallback::LexError"* nonnull align 1 %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
; call core::fmt::Formatter::write_str
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [37 x i8] }>* @alloc1650 to [0 x i8]*), i64 37)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <proc_macro2::fallback::TokenStream as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17hb9480eefce8a5abeE"(%"fallback::TokenStream"* align 8 dereferenceable(24) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_48 = alloca i8, align 1
  %_37 = alloca i8, align 1
  %_36 = alloca i8, align 1
  %_24 = alloca %"core::fmt::Arguments", align 8
  %_21 = alloca i8, align 1
  %_17 = alloca i8, align 1
  %_11 = alloca { i64, i64* }, align 8
  %iter = alloca %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>", align 8
  %_5 = alloca %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>", align 8
  %_4 = alloca %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>", align 8
  %joint = alloca i8, align 1
  %0 = alloca i8, align 1
  store i8 0, i8* %joint, align 1
  %_9 = bitcast %"fallback::TokenStream"* %self to %"alloc::vec::Vec<TokenTree>"*
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { [0 x %TokenTree]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc5702eb1e52cbebdE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %_9)
  %_8.0 = extractvalue { [0 x %TokenTree]*, i64 } %1, 0
  %_8.1 = extractvalue { [0 x %TokenTree]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %2 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb44ce95d4c3f27c9E"([0 x %TokenTree]* nonnull align 8 %_8.0, i64 %_8.1)
  %_6.0 = extractvalue { i64*, i64* } %2, 0
  %_6.1 = extractvalue { i64*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h4c5ec0b4ac9d9853E(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>") dereferenceable(24) %_5, i64* nonnull %_6.0, i64* %_6.1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h731f515ea4aa7c37E"(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* noalias nocapture sret(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>") dereferenceable(24) %_4, %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %iter to i8*
  %4 = bitcast %"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb28, %bb4
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  %5 = call { i64, i64* } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he5ea92e7434567e0E"(%"core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<TokenTree>>"* align 8 dereferenceable(24) %iter)
  store { i64, i64* } %5, { i64, i64* }* %_11, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %6 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_11, i32 0, i32 1
  %7 = bitcast i64** %6 to {}**
  %8 = load {}*, {}** %7, align 8
  %9 = icmp eq {}* %8, null
  %_14 = select i1 %9, i64 0, i64 1
  switch i64 %_14, label %bb8 [
    i64 0, label %bb9
    i64 1, label %bb7
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb9:                                              ; preds = %bb6
  store i8 0, i8* %0, align 1
  br label %bb31

bb7:                                              ; preds = %bb6
  %10 = bitcast { i64, i64* }* %_11 to i64*
  %i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_11, i32 0, i32 1
  %12 = bitcast i64** %11 to %TokenTree**
  %tt = load %TokenTree*, %TokenTree** %12, align 8, !nonnull !20
  %13 = icmp eq i64 %i, 0
  br i1 %13, label %bb10, label %bb11

bb10:                                             ; preds = %bb7
  store i8 0, i8* %_17, align 1
  br label %bb12

bb11:                                             ; preds = %bb7
  %14 = load i8, i8* %joint, align 1, !range !2
  %_20 = trunc i8 %14 to i1
  %_19 = xor i1 %_20, true
  %15 = zext i1 %_19 to i8
  store i8 %15, i8* %_17, align 1
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %16 = load i8, i8* %_17, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb13, label %bb19

bb19:                                             ; preds = %bb16, %bb12
  store i8 0, i8* %joint, align 1
  %18 = bitcast %TokenTree* %tt to i32*
  %19 = load i32, i32* %18, align 8, !range !36
  %_38 = zext i32 %19 to i64
  switch i64 %_38, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb23
    i64 2, label %bb24
    i64 3, label %bb20
  ]

bb13:                                             ; preds = %bb12
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_24, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc581 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc954 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::fmt::Formatter::write_fmt
  %_22 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_24)
  br label %bb15

bb15:                                             ; preds = %bb14
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %20 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h28751eac51608096E"(i1 zeroext %_22)
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %_21, align 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %22 = load i8, i8* %_21, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %_32 = zext i1 %23 to i64
  switch i64 %_32, label %bb17 [
    i64 0, label %bb19
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb16
  unreachable

bb18:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %24 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3a4a0e51c2cc4f45E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1652 to %"core::panic::location::Location"*))
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %0, align 1
  br label %bb31

bb31:                                             ; preds = %bb9, %bb30, %bb18
  %26 = load i8, i8* %0, align 1, !range !2
  %27 = trunc i8 %26 to i1
  ret i1 %27

bb21:                                             ; preds = %bb19
  unreachable

bb22:                                             ; preds = %bb19
  %28 = bitcast %TokenTree* %tt to %"TokenTree::Group"*
  %tt4 = getelementptr inbounds %"TokenTree::Group", %"TokenTree::Group"* %28, i32 0, i32 1
; call <proc_macro2::Group as core::fmt::Display>::fmt
  %29 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Group$u20$as$u20$core..fmt..Display$GT$3fmt17hf834a8ca6ebb63c9E"(%Group* align 8 dereferenceable(40) %tt4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %_37, align 1
  br label %bb27

bb23:                                             ; preds = %bb19
  %31 = bitcast %TokenTree* %tt to %"TokenTree::Ident"*
  %tt3 = getelementptr inbounds %"TokenTree::Ident", %"TokenTree::Ident"* %31, i32 0, i32 1
; call <proc_macro2::Ident as core::fmt::Display>::fmt
  %32 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5ff20e04791d3aaaE"(%Ident* align 8 dereferenceable(40) %tt3, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %33 = zext i1 %32 to i8
  store i8 %33, i8* %_37, align 1
  br label %bb27

bb24:                                             ; preds = %bb19
  %34 = bitcast %TokenTree* %tt to %"TokenTree::Punct"*
  %tt2 = getelementptr inbounds %"TokenTree::Punct", %"TokenTree::Punct"* %34, i32 0, i32 1
; call proc_macro2::Punct::spacing
  %35 = call zeroext i1 @_ZN11proc_macro25Punct7spacing17hf8673d476566377bE(%Punct* align 4 dereferenceable(12) %tt2)
  %36 = zext i1 %35 to i8
  store i8 %36, i8* %_48, align 1
  br label %bb25

bb20:                                             ; preds = %bb19
  %37 = bitcast %TokenTree* %tt to %"TokenTree::Literal"*
  %tt1 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %37, i32 0, i32 1
; call <proc_macro2::Literal as core::fmt::Display>::fmt
  %38 = call zeroext i1 @"_ZN59_$LT$proc_macro2..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17h8b0228aa6b51d9e3E"(%Literal* align 8 dereferenceable(32) %tt1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %_37, align 1
  br label %bb27

bb27:                                             ; preds = %bb22, %bb23, %bb26, %bb20
  %40 = load i8, i8* %_37, align 1, !range !2
  %41 = trunc i8 %40 to i1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %42 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h28751eac51608096E"(i1 zeroext %41)
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %_36, align 1
  br label %bb28

bb25:                                             ; preds = %bb24
; call <proc_macro2::Spacing as core::cmp::PartialEq>::eq
  %_46 = call zeroext i1 @"_ZN61_$LT$proc_macro2..Spacing$u20$as$u20$core..cmp..PartialEq$GT$2eq17h6e21c444909d1856E"(i8* align 1 dereferenceable(1) %_48, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc613, i32 0, i32 0, i32 0))
  br label %bb26

bb26:                                             ; preds = %bb25
  %44 = zext i1 %_46 to i8
  store i8 %44, i8* %joint, align 1
; call <proc_macro2::Punct as core::fmt::Display>::fmt
  %45 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Punct$u20$as$u20$core..fmt..Display$GT$3fmt17h3aa9033debc70d27E"(%Punct* align 4 dereferenceable(12) %tt2, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %_37, align 1
  br label %bb27

bb28:                                             ; preds = %bb27
  %47 = load i8, i8* %_36, align 1, !range !2
  %48 = trunc i8 %47 to i1
  %_56 = zext i1 %48 to i64
  switch i64 %_56, label %bb29 [
    i64 0, label %bb5
    i64 1, label %bb30
  ]

bb29:                                             ; preds = %bb28
  unreachable

bb30:                                             ; preds = %bb28
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %49 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3a4a0e51c2cc4f45E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1654 to %"core::panic::location::Location"*))
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %0, align 1
  br label %bb31
}

; <proc_macro2::fallback::TokenStream as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN71_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17h2e9cf8adb599825aE"(%"fallback::TokenStream"* align 8 dereferenceable(24) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_17 = alloca %"fallback::TokenStream", align 8
  %_15 = alloca %"core::fmt::builders::DebugList", align 8
  %_3 = alloca i8, align 1
  %1 = alloca i8, align 1
; call core::fmt::Formatter::write_str
  %_4 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [12 x i8] }>* @alloc1655 to [0 x i8]*), i64 12)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %2 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h28751eac51608096E"(i1 zeroext %_4)
  %3 = zext i1 %2 to i8
  store i8 %3, i8* %_3, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = load i8, i8* %_3, align 1, !range !2
  %5 = trunc i8 %4 to i1
  %_8 = zext i1 %5 to i64
  switch i64 %_8, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
; call core::fmt::Formatter::debug_list
  %6 = call i128 @_ZN4core3fmt9Formatter10debug_list17hea40b725812e3b83E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  store i128 %6, i128* %0, align 8
  %7 = bitcast %"core::fmt::builders::DebugList"* %_15 to i8*
  %8 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  br label %bb6

bb5:                                              ; preds = %bb2
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %9 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3a4a0e51c2cc4f45E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1657 to %"core::panic::location::Location"*))
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb5
  %11 = load i8, i8* %1, align 1, !range !2
  %12 = trunc i8 %11 to i1
  ret i1 %12

bb6:                                              ; preds = %bb3
; call <proc_macro2::fallback::TokenStream as core::clone::Clone>::clone
  call void @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17h2d6924a7f0e690bcE"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %_17, %"fallback::TokenStream"* align 8 dereferenceable(24) %self)
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::fmt::builders::DebugList::entries
  %_13 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17h4090912470ff62d2E(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16) %_15, %"fallback::TokenStream"* noalias nocapture dereferenceable(24) %_17)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::fmt::builders::DebugList::finish
  %13 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17hf48e4debbea8211aE(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16) %_13)
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %1, align 1
  br label %bb9
}

; <proc_macro2::fallback::TokenStream as core::convert::From<proc_macro::TokenStream>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN105_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenStream$GT$$GT$4from17he7e5e88e5d24d675E"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %0, i32 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca %"alloc::string::String", align 8
  %_2 = alloca %"core::result::Result<fallback::TokenStream, fallback::LexError>", align 8
  %3 = alloca i32, align 4
  %inner = alloca %"proc_macro::TokenStream", align 4
  store i32 %1, i32* %3, align 4
  %4 = bitcast %"proc_macro::TokenStream"* %inner to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
; invoke <proc_macro::TokenStream as alloc::string::ToString>::to_string
  invoke void @"_ZN67_$LT$proc_macro..TokenStream$u20$as$u20$alloc..string..ToString$GT$9to_string17h27788e1a21ffba95E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_6, %"proc_macro::TokenStream"* align 4 dereferenceable(4) %inner)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %6 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb4e9891ef10b3b2fE"(%"alloc::string::String"* align 8 dereferenceable(24) %_6)
          to label %bb2 unwind label %cleanup1

bb8:                                              ; preds = %bb7, %cleanup
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %inner) #18
  br label %bb9

cleanup:                                          ; preds = %bb4, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb8

bb2:                                              ; preds = %bb1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %6, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %6, 1
; invoke core::str::<impl str>::parse
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h934c7f9f25233c78E"(%"core::result::Result<fallback::TokenStream, fallback::LexError>"* noalias nocapture sret(%"core::result::Result<fallback::TokenStream, fallback::LexError>") dereferenceable(24) %_2, [0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
          to label %bb3 unwind label %cleanup1

bb7:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_6) #18
  br label %bb8

cleanup1:                                         ; preds = %bb3, %bb2, %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h6acc701f3b473f22E"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %0, %"core::result::Result<fallback::TokenStream, fallback::LexError>"* noalias nocapture dereferenceable(24) %_2, [0 x i8]* nonnull align 1 bitcast (<{ [34 x i8] }>* @alloc1658 to [0 x i8]*), i64 34, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1660 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup1

bb4:                                              ; preds = %bb3
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_6)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %inner)
  br label %bb6

bb9:                                              ; preds = %bb8
  %17 = bitcast { i8*, i32 }* %2 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

bb6:                                              ; preds = %bb5
  ret void
}

; proc_macro2::fallback::<impl core::convert::From<proc_macro2::fallback::TokenStream> for proc_macro::TokenStream>::from
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN11proc_macro28fallback115_$LT$impl$u20$core..convert..From$LT$proc_macro2..fallback..TokenStream$GT$$u20$for$u20$proc_macro..TokenStream$GT$4from17h32d09876fa0b7bafE"(%"fallback::TokenStream"* noalias nocapture dereferenceable(24) %inner) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca %"alloc::string::String", align 8
  %_2 = alloca %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>", align 4
  %3 = alloca %"proc_macro::TokenStream", align 4
; invoke <T as alloc::string::ToString>::to_string
  invoke void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h1b0f56fe27d86521E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_6, %"fallback::TokenStream"* align 8 dereferenceable(24) %inner)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %4 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb4e9891ef10b3b2fE"(%"alloc::string::String"* align 8 dereferenceable(24) %_6)
          to label %bb2 unwind label %cleanup1

bb8:                                              ; preds = %bb7, %cleanup
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h8ea3f1fe2253e242E"(%"fallback::TokenStream"* %inner) #18
  br label %bb9

cleanup:                                          ; preds = %bb4, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb8

bb2:                                              ; preds = %bb1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %4, 1
; invoke core::str::<impl str>::parse
  %10 = invoke i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h96bf1284bafc9ddeE"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
          to label %bb3 unwind label %cleanup1

bb7:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_6) #18
  br label %bb8

cleanup1:                                         ; preds = %bb3, %bb2, %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  store i32 %10, i32* %1, align 4
  %16 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %_2 to i8*
  %17 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 4, i1 false)
  %18 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %_2 to i32*
  %19 = load i32, i32* %18, align 4
; invoke core::result::Result<T,E>::expect
  %20 = invoke i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h4a70ddbccc88da25E"(i32 %19, [0 x i8]* nonnull align 1 bitcast (<{ [34 x i8] }>* @alloc1661 to [0 x i8]*), i64 34, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1663 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup1

bb4:                                              ; preds = %bb3
  store i32 %20, i32* %0, align 4
  %21 = bitcast %"proc_macro::TokenStream"* %3 to i8*
  %22 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 4, i1 false)
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_6)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h8ea3f1fe2253e242E"(%"fallback::TokenStream"* %inner)
  br label %bb6

bb9:                                              ; preds = %bb8
  %23 = bitcast { i8*, i32 }* %2 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb6:                                              ; preds = %bb5
  %29 = bitcast %"proc_macro::TokenStream"* %3 to i32*
  %30 = load i32, i32* %29, align 4
  ret i32 %30
}

; <proc_macro2::fallback::TokenStream as core::convert::From<proc_macro2::TokenTree>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN104_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro2..TokenTree$GT$$GT$4from17h5f2087de38ea7a90E"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %stream, %TokenTree* noalias nocapture dereferenceable(48) %tree) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_5 = alloca i8, align 1
  %_4 = alloca %TokenTree, align 8
  store i8 0, i8* %_5, align 1
  store i8 1, i8* %_5, align 1
; invoke proc_macro2::fallback::TokenStream::new
  invoke void @_ZN11proc_macro28fallback11TokenStream3new17h610fd3a2bc513c65E(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %stream)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_5, align 1
  %1 = bitcast %TokenTree* %_4 to i8*
  %2 = bitcast %TokenTree* %tree to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false)
; invoke proc_macro2::fallback::TokenStream::push_token
  invoke void @_ZN11proc_macro28fallback11TokenStream10push_token17h51c45fa295ebd96bE(%"fallback::TokenStream"* align 8 dereferenceable(24) %stream, %TokenTree* noalias nocapture dereferenceable(48) %_4)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %3 = load i8, i8* %_5, align 1, !range !2
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h8ea3f1fe2253e242E"(%"fallback::TokenStream"* %stream) #18
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb5:                                              ; preds = %bb6
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %tree) #18
  br label %bb4
}

; <proc_macro2::fallback::TokenStream as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN96_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h647f703566f6b801E"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* noalias nocapture sret(%"alloc::vec::into_iter::IntoIter<TokenTree>") dereferenceable(32) %0, %"fallback::TokenStream"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"alloc::vec::Vec<TokenTree>", align 8
; invoke proc_macro2::fallback::TokenStream::take_inner
  invoke void @_ZN11proc_macro28fallback11TokenStream10take_inner17ha10a0f62961ec348E(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %_2, %"fallback::TokenStream"* align 8 dereferenceable(24) %self)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h17c2034c0e9acd21E"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* noalias nocapture sret(%"alloc::vec::into_iter::IntoIter<TokenTree>") dereferenceable(32) %0, %"alloc::vec::Vec<TokenTree>"* noalias nocapture dereferenceable(24) %_2)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h8ea3f1fe2253e242E"(%"fallback::TokenStream"* %self) #18
  br label %bb5

cleanup:                                          ; preds = %bb1, %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h8ea3f1fe2253e242E"(%"fallback::TokenStream"* %self)
  br label %bb3

bb5:                                              ; preds = %bb4
  %7 = bitcast { i8*, i32 }* %1 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1
  resume { i8*, i32 } %12

bb3:                                              ; preds = %bb2
  ret void
}

; proc_macro2::fallback::SourceFile::path
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback10SourceFile4path17h9d9cd7d33b11c8faE(%"std::path::PathBuf"* noalias nocapture sret(%"std::path::PathBuf") dereferenceable(24) %0, %"fallback::SourceFile"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"fallback::SourceFile"* %self to %"std::path::PathBuf"*
; call <std::path::PathBuf as core::clone::Clone>::clone
  call void @"_ZN57_$LT$std..path..PathBuf$u20$as$u20$core..clone..Clone$GT$5clone17h2c4b8125d2966649E"(%"std::path::PathBuf"* noalias nocapture sret(%"std::path::PathBuf") dereferenceable(24) %0, %"std::path::PathBuf"* align 8 dereferenceable(24) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::fallback::SourceFile::is_real
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro28fallback10SourceFile7is_real17h484947330ace7704E(%"fallback::SourceFile"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  ret i1 false
}

; <proc_macro2::fallback::SourceFile as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$proc_macro2..fallback..SourceFile$u20$as$u20$core..fmt..Debug$GT$3fmt17h3f539e7e233e272dE"(%"fallback::SourceFile"* align 8 dereferenceable(24) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca i128, align 8
  %_24 = alloca i8, align 1
  %_17 = alloca %"std::path::PathBuf", align 8
  %_8 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %2 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [10 x i8] }>* @alloc1664 to [0 x i8]*), i64 10)
  store i128 %2, i128* %1, align 8
  %3 = bitcast %"core::fmt::builders::DebugStruct"* %_8 to i8*
  %4 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::SourceFile::path
  call void @_ZN11proc_macro28fallback10SourceFile4path17h9d9cd7d33b11c8faE(%"std::path::PathBuf"* noalias nocapture sret(%"std::path::PathBuf") dereferenceable(24) %_17, %"fallback::SourceFile"* align 8 dereferenceable(24) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_14.0 = bitcast %"std::path::PathBuf"* %_17 to {}*
; invoke core::fmt::builders::DebugStruct::field
  %_6 = invoke align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_8, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1665 to [0 x i8]*), i64 4, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.g to [3 x i64]*))
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke proc_macro2::fallback::SourceFile::is_real
  %5 = invoke zeroext i1 @_ZN11proc_macro28fallback10SourceFile7is_real17h484947330ace7704E(%"fallback::SourceFile"* align 8 dereferenceable(24) %self)
          to label %bb4 unwind label %cleanup

bb8:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::path::PathBuf>
  call void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hae66e9d6f0635f16E"(%"std::path::PathBuf"* %_17) #18
  br label %bb9

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %bb2
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb8

bb4:                                              ; preds = %bb3
  %11 = zext i1 %5 to i8
  store i8 %11, i8* %_24, align 1
  %_21.0 = bitcast i8* %_24 to {}*
; invoke core::fmt::builders::DebugStruct::field
  %_4 = invoke align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1669 to [0 x i8]*), i64 7, {}* nonnull align 1 %_21.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.h to [3 x i64]*))
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke core::fmt::builders::DebugStruct::finish
  %12 = invoke zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; call core::ptr::drop_in_place<std::path::PathBuf>
  call void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17hae66e9d6f0635f16E"(%"std::path::PathBuf"* %_17)
  br label %bb7

bb9:                                              ; preds = %bb8
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb7:                                              ; preds = %bb6
  ret i1 %12
}

; proc_macro2::fallback::Span::call_site
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback4Span9call_site17h60bcec765db6ac7eE() unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Span::mixed_site
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback4Span10mixed_site17hd6f739960fcfc4fbE() unnamed_addr #1 {
start:
; call proc_macro2::fallback::Span::call_site
  call void @_ZN11proc_macro28fallback4Span9call_site17h60bcec765db6ac7eE()
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::fallback::Span::resolved_at
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback4Span11resolved_at17h3c96c1be4c60b898E(%"fallback::Span"* nonnull align 1 %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Span::located_at
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback4Span10located_at17h4c00794e59e70d97E(%"fallback::Span"* nonnull align 1 %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Span::join
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro28fallback4Span4join17h4dc391a68449f65bE(%"fallback::Span"* nonnull align 1 %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  store i8 1, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; proc_macro2::fallback::Span::first_byte
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback4Span10first_byte17he3109c8a97e98e55E() unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Span::last_byte
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback4Span9last_byte17h0a9e98944b026a5aE() unnamed_addr #1 {
start:
  ret void
}

; <proc_macro2::fallback::Span as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN64_$LT$proc_macro2..fallback..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h6a5a61c96466b4eaE"(%"fallback::Span"* nonnull align 1 %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc701 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc954 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_fmt
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; proc_macro2::fallback::debug_span_field_if_nontrivial
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback30debug_span_field_if_nontrivial17h3d448a6ca34870b3E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Group::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Group3new17h5d634dc08de01f30E(%"fallback::Group"* noalias nocapture sret(%"fallback::Group") dereferenceable(32) %0, i8 %delimiter, %"fallback::TokenStream"* noalias nocapture dereferenceable(24) %stream) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca %"fallback::TokenStream", align 8
  %2 = bitcast %"fallback::TokenStream"* %_4 to i8*
  %3 = bitcast %"fallback::TokenStream"* %stream to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
; invoke proc_macro2::fallback::Span::call_site
  invoke void @_ZN11proc_macro28fallback4Span9call_site17h60bcec765db6ac7eE()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds %"fallback::Group", %"fallback::Group"* %0, i32 0, i32 2
  store i8 %delimiter, i8* %4, align 8
  %5 = bitcast %"fallback::Group"* %0 to %"fallback::TokenStream"*
  %6 = bitcast %"fallback::TokenStream"* %5 to i8*
  %7 = bitcast %"fallback::TokenStream"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  ret void

bb2:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h8ea3f1fe2253e242E"(%"fallback::TokenStream"* %_4) #18
  br label %bb3

cleanup:                                          ; preds = %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %13 = bitcast { i8*, i32 }* %1 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18
}

; proc_macro2::fallback::Group::delimiter
; Function Attrs: nonlazybind uwtable
define internal i8 @_ZN11proc_macro28fallback5Group9delimiter17h6eb1742cea310186E(%"fallback::Group"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"fallback::Group", %"fallback::Group"* %self, i32 0, i32 2
  %1 = load i8, i8* %0, align 8, !range !110
  ret i8 %1
}

; proc_macro2::fallback::Group::stream
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Group6stream17hd909cea5a729838fE(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %0, %"fallback::Group"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"fallback::Group"* %self to %"fallback::TokenStream"*
; call <proc_macro2::fallback::TokenStream as core::clone::Clone>::clone
  call void @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17h2d6924a7f0e690bcE"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %0, %"fallback::TokenStream"* align 8 dereferenceable(24) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::fallback::Group::span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Group4span17h235b32464e525cbfE(%"fallback::Group"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Group::span_open
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Group9span_open17h47fa92f8d4d33854E(%"fallback::Group"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
; call proc_macro2::fallback::Span::first_byte
  call void @_ZN11proc_macro28fallback4Span10first_byte17he3109c8a97e98e55E()
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::fallback::Group::span_close
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Group10span_close17h3556fee4cb7f5744E(%"fallback::Group"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
; call proc_macro2::fallback::Span::last_byte
  call void @_ZN11proc_macro28fallback4Span9last_byte17h0a9e98944b026a5aE()
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::fallback::Group::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Group8set_span17hd52bfa0c4013e149E(%"fallback::Group"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  ret void
}

; <proc_macro2::fallback::Group as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Group$u20$as$u20$core..fmt..Display$GT$3fmt17hccaf41902afeba06E"(%"fallback::Group"* align 8 dereferenceable(32) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_40 = alloca i8, align 1
  %_31 = alloca i8, align 1
  %_24 = alloca i8, align 1
  %_15 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %_5 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds %"fallback::Group", %"fallback::Group"* %self, i32 0, i32 2
  %2 = load i8, i8* %1, align 8, !range !110
  %_6 = zext i8 %2 to i64
  switch i64 %_6, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_5 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1679 to [0 x i8]*), [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 1, i64* %5, align 8
  %6 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_5, i32 0, i32 1
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1680 to [0 x i8]*), [0 x i8]** %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 1
  store i64 1, i64* %8, align 8
  br label %bb6

bb4:                                              ; preds = %start
  %9 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_5 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [2 x i8] }>* @alloc1677 to [0 x i8]*), [0 x i8]** %10, align 8
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  store i64 2, i64* %11, align 8
  %12 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_5, i32 0, i32 1
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1678 to [0 x i8]*), [0 x i8]** %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  store i64 1, i64* %14, align 8
  br label %bb6

bb5:                                              ; preds = %start
  %15 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_5 to { [0 x i8]*, i64 }*
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1675 to [0 x i8]*), [0 x i8]** %16, align 8
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1
  store i64 1, i64* %17, align 8
  %18 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_5, i32 0, i32 1
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %18, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1676 to [0 x i8]*), [0 x i8]** %19, align 8
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %18, i32 0, i32 1
  store i64 1, i64* %20, align 8
  br label %bb6

bb1:                                              ; preds = %start
  %21 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_5 to { [0 x i8]*, i64 }*
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 0
  store [0 x i8]* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0), [0 x i8]** %22, align 8
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 1
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_5, i32 0, i32 1
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 0
  store [0 x i8]* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc954, i32 0, i32 0), [0 x i8]** %25, align 8
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 1
  store i64 0, i64* %26, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4, %bb5, %bb1
  %27 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_5 to { [0 x i8]*, i64 }*
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 0
  %open.0 = load [0 x i8]*, [0 x i8]** %28, align 8, !nonnull !20
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 1
  %open.1 = load i64, i64* %29, align 8
  %30 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_5, i32 0, i32 1
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %30, i32 0, i32 0
  %close.0 = load [0 x i8]*, [0 x i8]** %31, align 8, !nonnull !20
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %30, i32 0, i32 1
  %close.1 = load i64, i64* %32, align 8
; call core::fmt::Formatter::write_str
  %_8 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 %open.0, i64 %open.1)
  br label %bb7

bb7:                                              ; preds = %bb6
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %33 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h28751eac51608096E"(i1 zeroext %_8)
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %_7, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %35 = load i8, i8* %_7, align 1, !range !2
  %36 = trunc i8 %35 to i1
  %_11 = zext i1 %36 to i64
  switch i64 %_11, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb9:                                              ; preds = %bb8
  %_18 = bitcast %"fallback::Group"* %self to %"fallback::TokenStream"*
; call <proc_macro2::fallback::TokenStream as core::fmt::Display>::fmt
  %_16 = call zeroext i1 @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17hb9480eefce8a5abeE"(%"fallback::TokenStream"* align 8 dereferenceable(24) %_18, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb12

bb11:                                             ; preds = %bb8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %37 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3a4a0e51c2cc4f45E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1682 to %"core::panic::location::Location"*))
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %0, align 1
  br label %bb33

bb33:                                             ; preds = %bb30, %bb32, %bb26, %bb16, %bb11
  %39 = load i8, i8* %0, align 1, !range !2
  %40 = trunc i8 %39 to i1
  ret i1 %40

bb12:                                             ; preds = %bb9
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %41 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h28751eac51608096E"(i1 zeroext %_16)
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %_15, align 1
  br label %bb13

bb13:                                             ; preds = %bb12
  %43 = load i8, i8* %_15, align 1, !range !2
  %44 = trunc i8 %43 to i1
  %_20 = zext i1 %44 to i64
  switch i64 %_20, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ]

bb15:                                             ; preds = %bb13
  unreachable

bb14:                                             ; preds = %bb13
  %_26 = getelementptr inbounds %"fallback::Group", %"fallback::Group"* %self, i32 0, i32 2
; call <proc_macro2::Delimiter as core::cmp::PartialEq>::eq
  %_25 = call zeroext i1 @"_ZN63_$LT$proc_macro2..Delimiter$u20$as$u20$core..cmp..PartialEq$GT$2eq17h5a400777d5a6ecc3E"(i8* align 1 dereferenceable(1) %_26, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc613, i32 0, i32 0, i32 0))
  br label %bb20

bb16:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %45 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3a4a0e51c2cc4f45E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1684 to %"core::panic::location::Location"*))
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %0, align 1
  br label %bb33

bb20:                                             ; preds = %bb14
  br i1 %_25, label %bb18, label %bb17

bb17:                                             ; preds = %bb20
  store i8 0, i8* %_24, align 1
  br label %bb19

bb18:                                             ; preds = %bb20
  %47 = bitcast %"fallback::Group"* %self to %"fallback::TokenStream"*
  %_30 = bitcast %"fallback::TokenStream"* %47 to %"alloc::vec::Vec<TokenTree>"*
; call alloc::vec::Vec<T,A>::is_empty
  %_29 = call zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h4ac0660ba2c838eaE"(%"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %_30)
  br label %bb21

bb21:                                             ; preds = %bb18
  %_28 = xor i1 %_29, true
  %48 = zext i1 %_28 to i8
  store i8 %48, i8* %_24, align 1
  br label %bb19

bb19:                                             ; preds = %bb17, %bb21
  %49 = load i8, i8* %_24, align 1, !range !2
  %50 = trunc i8 %49 to i1
  br i1 %50, label %bb22, label %bb27

bb27:                                             ; preds = %bb24, %bb19
; call core::fmt::Formatter::write_str
  %_41 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 %close.0, i64 %close.1)
  br label %bb28

bb22:                                             ; preds = %bb19
; call core::fmt::Formatter::write_str
  %_32 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1685 to [0 x i8]*), i64 1)
  br label %bb23

bb23:                                             ; preds = %bb22
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %51 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h28751eac51608096E"(i1 zeroext %_32)
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %_31, align 1
  br label %bb24

bb24:                                             ; preds = %bb23
  %53 = load i8, i8* %_31, align 1, !range !2
  %54 = trunc i8 %53 to i1
  %_36 = zext i1 %54 to i64
  switch i64 %_36, label %bb25 [
    i64 0, label %bb27
    i64 1, label %bb26
  ]

bb25:                                             ; preds = %bb24
  unreachable

bb26:                                             ; preds = %bb24
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %55 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3a4a0e51c2cc4f45E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1687 to %"core::panic::location::Location"*))
  %56 = zext i1 %55 to i8
  store i8 %56, i8* %0, align 1
  br label %bb33

bb28:                                             ; preds = %bb27
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %57 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h28751eac51608096E"(i1 zeroext %_41)
  %58 = zext i1 %57 to i8
  store i8 %58, i8* %_40, align 1
  br label %bb29

bb29:                                             ; preds = %bb28
  %59 = load i8, i8* %_40, align 1, !range !2
  %60 = trunc i8 %59 to i1
  %_44 = zext i1 %60 to i64
  switch i64 %_44, label %bb31 [
    i64 0, label %bb30
    i64 1, label %bb32
  ]

bb31:                                             ; preds = %bb29
  unreachable

bb30:                                             ; preds = %bb29
  store i8 0, i8* %0, align 1
  br label %bb33

bb32:                                             ; preds = %bb29
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %61 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3a4a0e51c2cc4f45E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1689 to %"core::panic::location::Location"*))
  %62 = zext i1 %61 to i8
  store i8 %62, i8* %0, align 1
  br label %bb33
}

; <proc_macro2::fallback::Group as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN65_$LT$proc_macro2..fallback..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17h6428ad6cc5ada678E"(%"fallback::Group"* align 8 dereferenceable(32) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %debug = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1690 to [0 x i8]*), i64 5)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %debug to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %_13 = getelementptr inbounds %"fallback::Group", %"fallback::Group"* %self, i32 0, i32 2
  %_11.0 = bitcast i8* %_13 to {}*
; call core::fmt::builders::DebugStruct::field
  %_7 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug, [0 x i8]* nonnull align 1 bitcast (<{ [9 x i8] }>* @alloc1691 to [0 x i8]*), i64 9, {}* nonnull align 1 %_11.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.i to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  %_20 = bitcast %"fallback::Group"* %self to %"fallback::TokenStream"*
  %_18.0 = bitcast %"fallback::TokenStream"* %_20 to {}*
; call core::fmt::builders::DebugStruct::field
  %_14 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1695 to [0 x i8]*), i64 6, {}* nonnull align 1 %_18.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.j to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
; call proc_macro2::fallback::debug_span_field_if_nontrivial
  call void @_ZN11proc_macro28fallback30debug_span_field_if_nontrivial17h3d448a6ca34870b3E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret i1 %4
}

; proc_macro2::fallback::Ident::_new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Ident4_new17hfd08281407569c74E(%"fallback::Ident"* noalias nocapture sret(%"fallback::Ident") dereferenceable(32) %0, [0 x i8]* nonnull align 1 %string.0, i64 %string.1, i1 zeroext %raw) unnamed_addr #1 {
start:
  %_6 = alloca %"alloc::string::String", align 8
; call proc_macro2::fallback::validate_ident
  call void @_ZN11proc_macro28fallback14validate_ident17h085b116394b13f06E([0 x i8]* nonnull align 1 %string.0, i64 %string.1)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hab0586ae0da4fc4eE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_6, [0 x i8]* nonnull align 1 %string.0, i64 %string.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"fallback::Ident"* %0 to %"alloc::string::String"*
  %2 = bitcast %"alloc::string::String"* %1 to i8*
  %3 = bitcast %"alloc::string::String"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = getelementptr inbounds %"fallback::Ident", %"fallback::Ident"* %0, i32 0, i32 2
  %5 = zext i1 %raw to i8
  store i8 %5, i8* %4, align 8
  ret void
}

; proc_macro2::fallback::Ident::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Ident3new17hc6950873cc226316E(%"fallback::Ident"* noalias nocapture sret(%"fallback::Ident") dereferenceable(32) %0, [0 x i8]* nonnull align 1 %string.0, i64 %string.1) unnamed_addr #1 {
start:
; call proc_macro2::fallback::Ident::_new
  call void @_ZN11proc_macro28fallback5Ident4_new17hfd08281407569c74E(%"fallback::Ident"* noalias nocapture sret(%"fallback::Ident") dereferenceable(32) %0, [0 x i8]* nonnull align 1 %string.0, i64 %string.1, i1 zeroext false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::fallback::Ident::new_raw
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Ident7new_raw17hd4a901771a372f40E(%"fallback::Ident"* noalias nocapture sret(%"fallback::Ident") dereferenceable(32) %0, [0 x i8]* nonnull align 1 %string.0, i64 %string.1) unnamed_addr #1 {
start:
; call proc_macro2::fallback::Ident::_new
  call void @_ZN11proc_macro28fallback5Ident4_new17hfd08281407569c74E(%"fallback::Ident"* noalias nocapture sret(%"fallback::Ident") dereferenceable(32) %0, [0 x i8]* nonnull align 1 %string.0, i64 %string.1, i1 zeroext true)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::fallback::Ident::span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Ident4span17h14e8afddfe5743fdE(%"fallback::Ident"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Ident::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback5Ident8set_span17ha949967e60c43a52E(%"fallback::Ident"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::is_ident_start
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro28fallback14is_ident_start17hf69be4da804f0785E(i32 %c) unnamed_addr #1 {
start:
  %_16 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_4 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_5 = icmp ule i32 97, %c
  br i1 %_5, label %bb11, label %bb10

bb10:                                             ; preds = %start
  store i8 0, i8* %_4, align 1
  br label %bb12

bb11:                                             ; preds = %start
  %_7 = icmp ule i32 %c, 122
  %1 = zext i1 %_7 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %2 = load i8, i8* %_4, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb7, label %bb8

bb8:                                              ; preds = %bb12
  %_10 = icmp ule i32 65, %c
  br i1 %_10, label %bb14, label %bb13

bb7:                                              ; preds = %bb12
  store i8 1, i8* %_3, align 1
  br label %bb9

bb9:                                              ; preds = %bb15, %bb7
  %4 = load i8, i8* %_3, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb4, label %bb5

bb13:                                             ; preds = %bb8
  store i8 0, i8* %_9, align 1
  br label %bb15

bb14:                                             ; preds = %bb8
  %_12 = icmp ule i32 %c, 90
  %6 = zext i1 %_12 to i8
  store i8 %6, i8* %_9, align 1
  br label %bb15

bb15:                                             ; preds = %bb13, %bb14
  %7 = load i8, i8* %_9, align 1, !range !2
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %_3, align 1
  br label %bb9

bb5:                                              ; preds = %bb9
  %_14 = icmp eq i32 %c, 95
  %10 = zext i1 %_14 to i8
  store i8 %10, i8* %_2, align 1
  br label %bb6

bb4:                                              ; preds = %bb9
  store i8 1, i8* %_2, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %11 = load i8, i8* %_2, align 1, !range !2
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb1, label %bb2

bb2:                                              ; preds = %bb6
  %_17 = icmp ugt i32 %c, 127
  br i1 %_17, label %bb17, label %bb16

bb1:                                              ; preds = %bb6
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb18, %bb1
  %13 = load i8, i8* %0, align 1, !range !2
  %14 = trunc i8 %13 to i1
  ret i1 %14

bb16:                                             ; preds = %bb2
  store i8 0, i8* %_16, align 1
  br label %bb18

bb17:                                             ; preds = %bb2
; call <char as unicode_xid::UnicodeXID>::is_xid_start
  %_19 = call zeroext i1 @"_ZN48_$LT$char$u20$as$u20$unicode_xid..UnicodeXID$GT$12is_xid_start17h63cfbc89b0a85bccE"(i32 %c)
  br label %bb19

bb19:                                             ; preds = %bb17
  %15 = zext i1 %_19 to i8
  store i8 %15, i8* %_16, align 1
  br label %bb18

bb18:                                             ; preds = %bb16, %bb19
  %16 = load i8, i8* %_16, align 1, !range !2
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %0, align 1
  br label %bb3
}

; proc_macro2::fallback::is_ident_continue
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro28fallback17is_ident_continue17h97e1ecc5a557951cE(i32 %c) unnamed_addr #1 {
start:
  %_22 = alloca i8, align 1
  %_17 = alloca i8, align 1
  %_10 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %_4 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_6 = icmp ule i32 97, %c
  br i1 %_6, label %bb14, label %bb13

bb13:                                             ; preds = %start
  store i8 0, i8* %_5, align 1
  br label %bb15

bb14:                                             ; preds = %start
  %_8 = icmp ule i32 %c, 122
  %1 = zext i1 %_8 to i8
  store i8 %1, i8* %_5, align 1
  br label %bb15

bb15:                                             ; preds = %bb13, %bb14
  %2 = load i8, i8* %_5, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb10, label %bb11

bb11:                                             ; preds = %bb15
  %_11 = icmp ule i32 65, %c
  br i1 %_11, label %bb17, label %bb16

bb10:                                             ; preds = %bb15
  store i8 1, i8* %_4, align 1
  br label %bb12

bb12:                                             ; preds = %bb18, %bb10
  %4 = load i8, i8* %_4, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb7, label %bb8

bb16:                                             ; preds = %bb11
  store i8 0, i8* %_10, align 1
  br label %bb18

bb17:                                             ; preds = %bb11
  %_13 = icmp ule i32 %c, 90
  %6 = zext i1 %_13 to i8
  store i8 %6, i8* %_10, align 1
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  %7 = load i8, i8* %_10, align 1, !range !2
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %_4, align 1
  br label %bb12

bb8:                                              ; preds = %bb12
  %_15 = icmp eq i32 %c, 95
  %10 = zext i1 %_15 to i8
  store i8 %10, i8* %_3, align 1
  br label %bb9

bb7:                                              ; preds = %bb12
  store i8 1, i8* %_3, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %11 = load i8, i8* %_3, align 1, !range !2
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb4, label %bb5

bb5:                                              ; preds = %bb9
  %_18 = icmp ule i32 48, %c
  br i1 %_18, label %bb20, label %bb19

bb4:                                              ; preds = %bb9
  store i8 1, i8* %_2, align 1
  br label %bb6

bb6:                                              ; preds = %bb21, %bb4
  %13 = load i8, i8* %_2, align 1, !range !2
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb1, label %bb2

bb19:                                             ; preds = %bb5
  store i8 0, i8* %_17, align 1
  br label %bb21

bb20:                                             ; preds = %bb5
  %_20 = icmp ule i32 %c, 57
  %15 = zext i1 %_20 to i8
  store i8 %15, i8* %_17, align 1
  br label %bb21

bb21:                                             ; preds = %bb19, %bb20
  %16 = load i8, i8* %_17, align 1, !range !2
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %_2, align 1
  br label %bb6

bb2:                                              ; preds = %bb6
  %_23 = icmp ugt i32 %c, 127
  br i1 %_23, label %bb23, label %bb22

bb1:                                              ; preds = %bb6
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb24, %bb1
  %19 = load i8, i8* %0, align 1, !range !2
  %20 = trunc i8 %19 to i1
  ret i1 %20

bb22:                                             ; preds = %bb2
  store i8 0, i8* %_22, align 1
  br label %bb24

bb23:                                             ; preds = %bb2
; call <char as unicode_xid::UnicodeXID>::is_xid_continue
  %_25 = call zeroext i1 @"_ZN48_$LT$char$u20$as$u20$unicode_xid..UnicodeXID$GT$15is_xid_continue17he9972a10f0f934dfE"(i32 %c)
  br label %bb25

bb25:                                             ; preds = %bb23
  %21 = zext i1 %_25 to i8
  store i8 %21, i8* %_22, align 1
  br label %bb24

bb24:                                             ; preds = %bb22, %bb25
  %22 = load i8, i8* %_22, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %0, align 1
  br label %bb3
}

; proc_macro2::fallback::validate_ident
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback14validate_ident17h085b116394b13f06E([0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_21 = alloca i64*, align 8
  %_20 = alloca [1 x { i8*, i64* }], align 8
  %_13 = alloca %"core::fmt::Arguments", align 8
  %_7 = alloca { i8*, i8* }, align 8
  %string = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string, i32 0, i32 0
  %validate.0 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !20
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string, i32 0, i32 1
  %validate.1 = load i64, i64* %5, align 8
; call core::str::<impl str>::is_empty
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h6888ad1662ab9a20E"([0 x i8]* nonnull align 1 %validate.0, i64 %validate.1)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
; call core::str::<impl str>::bytes
  %6 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h3f2cdf005d447438E"([0 x i8]* nonnull align 1 %validate.0, i64 %validate.1)
  store { i8*, i8* } %6, { i8*, i8* }* %_7, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17he0a282308de06f91E([0 x i8]* nonnull align 1 bitcast (<{ [51 x i8] }>* @alloc1699 to [0 x i8]*), i64 51, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1701 to %"core::panic::location::Location"*)) #19
  unreachable

bb4:                                              ; preds = %bb3
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::all
  %_5 = call zeroext i1 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3all17h996fd7b0da908df3E"({ i8*, i8* }* align 8 dereferenceable(16) %_7)
  br label %bb5

bb5:                                              ; preds = %bb4
  br i1 %_5, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
; call proc_macro2::fallback::validate_ident::ident_ok
  %_11 = call zeroext i1 @_ZN11proc_macro28fallback14validate_ident8ident_ok17hba0a14d923888775E([0 x i8]* nonnull align 1 %validate.0, i64 %validate.1)
  br label %bb8

bb6:                                              ; preds = %bb5
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17he0a282308de06f91E([0 x i8]* nonnull align 1 bitcast (<{ [45 x i8] }>* @alloc1702 to [0 x i8]*), i64 45, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1704 to %"core::panic::location::Location"*)) #19
  unreachable

bb8:                                              ; preds = %bb7
  %_10 = xor i1 %_11, true
  br i1 %_10, label %bb9, label %bb12

bb12:                                             ; preds = %bb8
  ret void

bb9:                                              ; preds = %bb8
  %7 = bitcast i64** %_21 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %string, { [0 x i8]*, i64 }** %7, align 8
  %_args = load i64*, i64** %_21, align 8, !nonnull !20
  %_25 = bitcast i64* %_args to { [0 x i8]*, i64 }*
; call core::fmt::ArgumentV1::new
  %8 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h9420cf8c14623dbaE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_25, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6affa780ef239c9eE")
  %_24.0 = extractvalue { i8*, i64* } %8, 0
  %_24.1 = extractvalue { i8*, i64* } %8, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %9 = bitcast [1 x { i8*, i64* }]* %_20 to { i8*, i64* }*
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 0
  store i8* %_24.0, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 1
  store i64* %_24.1, i64** %11, align 8
  %_17.0 = bitcast [1 x { i8*, i64* }]* %_20 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_13, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc359 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_17.0, i64 1)
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1706 to %"core::panic::location::Location"*)) #19
  unreachable
}

; proc_macro2::fallback::validate_ident::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN11proc_macro28fallback14validate_ident28_$u7b$$u7b$closure$u7d$$u7d$17h2149b127399abbc4E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:67]"* nonnull align 1 %_1, i8 %digit) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_3 = icmp uge i8 %digit, 48
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb2:                                              ; preds = %start
  %_5 = icmp ule i8 %digit, 57
  %1 = zext i1 %_5 to i8
  store i8 %1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, i8* %0, align 1, !range !2
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; proc_macro2::fallback::validate_ident::ident_ok
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro28fallback14validate_ident8ident_ok17hba0a14d923888775E([0 x i8]* nonnull align 1 %string.0, i64 %string.1) unnamed_addr #1 {
start:
  %_13 = alloca i32, align 4
  %iter = alloca { i8*, i8* }, align 8
  %chars = alloca { i8*, i8* }, align 8
  %0 = alloca i8, align 1
; call core::str::<impl str>::chars
  %1 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h6f889b924c1c660fE"([0 x i8]* nonnull align 1 %string.0, i64 %string.1)
  store { i8*, i8* } %1, { i8*, i8* }* %chars, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !range !22
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::unwrap
  %first = call i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hb66cd30b4af554e3E"(i32 %_5, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1708 to %"core::panic::location::Location"*)), !range !80
  br label %bb3

bb3:                                              ; preds = %bb2
; call proc_macro2::fallback::is_ident_start
  %_8 = call zeroext i1 @_ZN11proc_macro28fallback14is_ident_start17hf69be4da804f0785E(i32 %first)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_7 = xor i1 %_8, true
  br i1 %_7, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %chars, i32 0, i32 0
  %_11.0 = load i8*, i8** %2, align 8, !nonnull !20
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %chars, i32 0, i32 1
  %_11.1 = load i8*, i8** %3, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %4 = call { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h52f97a0f2c6bbd30E"(i8* nonnull %_11.0, i8* %_11.1)
  %_10.0 = extractvalue { i8*, i8* } %4, 0
  %_10.1 = extractvalue { i8*, i8* } %4, 1
  br label %bb7

bb5:                                              ; preds = %bb4
  store i8 0, i8* %0, align 1
  br label %bb15

bb15:                                             ; preds = %bb12, %bb14, %bb5
  %5 = load i8, i8* %0, align 1, !range !2
  %6 = trunc i8 %5 to i1
  ret i1 %6

bb7:                                              ; preds = %bb6
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 0
  store i8* %_10.0, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 1
  store i8* %_10.1, i8** %8, align 8
  br label %bb8

bb8:                                              ; preds = %bb13, %bb7
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %9 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %iter), !range !22
  store i32 %9, i32* %_13, align 4
  br label %bb9

bb9:                                              ; preds = %bb8
  %10 = load i32, i32* %_13, align 4, !range !22
  %11 = sub i32 %10, 1114112
  %12 = icmp eq i32 %11, 0
  %_16 = select i1 %12, i64 0, i64 1
  switch i64 %_16, label %bb11 [
    i64 0, label %bb12
    i64 1, label %bb10
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb12:                                             ; preds = %bb9
  store i8 1, i8* %0, align 1
  br label %bb15

bb10:                                             ; preds = %bb9
  %ch = load i32, i32* %_13, align 4, !range !80
; call proc_macro2::fallback::is_ident_continue
  %_19 = call zeroext i1 @_ZN11proc_macro28fallback17is_ident_continue17h97e1ecc5a557951cE(i32 %ch)
  br label %bb13

bb13:                                             ; preds = %bb10
  %_18 = xor i1 %_19, true
  br i1 %_18, label %bb14, label %bb8

bb14:                                             ; preds = %bb13
  store i8 0, i8* %0, align 1
  br label %bb15
}

; <proc_macro2::fallback::Ident as core::cmp::PartialEq>::eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN69_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..cmp..PartialEq$GT$2eq17hb3459ecfa27e2f25E"(%"fallback::Ident"* align 8 dereferenceable(32) %self, %"fallback::Ident"* align 8 dereferenceable(32) %other) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_4 = bitcast %"fallback::Ident"* %self to %"alloc::string::String"*
  %_5 = bitcast %"fallback::Ident"* %other to %"alloc::string::String"*
; call <alloc::string::String as core::cmp::PartialEq>::eq
  %_3 = call zeroext i1 @"_ZN62_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$GT$2eq17h95af6a925cb85c16E"(%"alloc::string::String"* align 8 dereferenceable(24) %_4, %"alloc::string::String"* align 8 dereferenceable(24) %_5)
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %bb4
  store i8 0, i8* %0, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %1 = getelementptr inbounds %"fallback::Ident", %"fallback::Ident"* %self, i32 0, i32 2
  %2 = load i8, i8* %1, align 8, !range !2
  %_7 = trunc i8 %2 to i1
  %3 = getelementptr inbounds %"fallback::Ident", %"fallback::Ident"* %other, i32 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %_8 = trunc i8 %4 to i1
  %_6 = icmp eq i1 %_7, %_8
  %5 = zext i1 %_6 to i8
  store i8 %5, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %6 = load i8, i8* %0, align 1, !range !2
  %7 = trunc i8 %6 to i1
  ret i1 %7
}

; <proc_macro2::fallback::Ident as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h26ed2cfa0936d048E"(%"fallback::Ident"* align 8 dereferenceable(32) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds %"fallback::Ident", %"fallback::Ident"* %self, i32 0, i32 2
  %2 = load i8, i8* %1, align 8, !range !2
  %_3 = trunc i8 %2 to i1
  br i1 %_3, label %bb1, label %bb6

bb6:                                              ; preds = %bb3, %start
  %_14 = bitcast %"fallback::Ident"* %self to %"alloc::string::String"*
; call <alloc::string::String as core::fmt::Display>::fmt
  %3 = call zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h2b6a6f1c2c9388a1E"(%"alloc::string::String"* align 8 dereferenceable(24) %_14, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %0, align 1
  br label %bb7

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1709 to [0 x i8]*), i64 2)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %5 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h28751eac51608096E"(i1 zeroext %_5)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = load i8, i8* %_4, align 1, !range !2
  %8 = trunc i8 %7 to i1
  %_9 = zext i1 %8 to i64
  switch i64 %_9, label %bb4 [
    i64 0, label %bb6
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb3
  unreachable

bb5:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %9 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3a4a0e51c2cc4f45E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1711 to %"core::panic::location::Location"*))
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %11 = load i8, i8* %0, align 1, !range !2
  %12 = trunc i8 %11 to i1
  ret i1 %12
}

; <proc_macro2::fallback::Ident as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN65_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17h889fb07ea6680e3cE"(%"fallback::Ident"* align 8 dereferenceable(32) %0, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_20 = alloca i64*, align 8
  %_19 = alloca [1 x { i8*, i64* }], align 8
  %_12 = alloca %"core::fmt::Arguments", align 8
  %debug = alloca %"core::fmt::builders::DebugTuple", align 8
  %self = alloca %"fallback::Ident"*, align 8
  store %"fallback::Ident"* %0, %"fallback::Ident"** %self, align 8
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %debug, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1760 to [0 x i8]*), i64 5)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast i64** %_20 to %"fallback::Ident"***
  store %"fallback::Ident"** %self, %"fallback::Ident"*** %1, align 8
  %_args = load i64*, i64** %_20, align 8, !nonnull !20
  %_24 = bitcast i64* %_args to %"fallback::Ident"**
; call core::fmt::ArgumentV1::new
  %2 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hdee05b1b3b7d8679E(%"fallback::Ident"** align 8 dereferenceable(8) %_24, i1 (%"fallback::Ident"**, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hcf01ed8bccab3e19E")
  %_23.0 = extractvalue { i8*, i64* } %2, 0
  %_23.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast [1 x { i8*, i64* }]* %_19 to { i8*, i64* }*
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_23.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_23.1, i64** %5, align 8
  %_16.0 = bitcast [1 x { i8*, i64* }]* %_19 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_12, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc635 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_16.0, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_9.0 = bitcast %"core::fmt::Arguments"* %_12 to {}*
; call core::fmt::builders::DebugTuple::field
  %_7 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %debug, {}* nonnull align 1 %_9.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.k to [3 x i64]*))
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::fmt::builders::DebugTuple::finish
  %6 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %debug)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret i1 %6
}

; proc_macro2::fallback::Literal::_new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %repr) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"alloc::string::String", align 8
  %2 = bitcast %"alloc::string::String"* %_2 to i8*
  %3 = bitcast %"alloc::string::String"* %repr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
; invoke proc_macro2::fallback::Span::call_site
  invoke void @_ZN11proc_macro28fallback4Span9call_site17h60bcec765db6ac7eE()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %4 = bitcast %"fallback::Literal"* %0 to %"alloc::string::String"*
  %5 = bitcast %"alloc::string::String"* %4 to i8*
  %6 = bitcast %"alloc::string::String"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  ret void

bb2:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_2) #18
  br label %bb3

cleanup:                                          ; preds = %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %12 = bitcast { i8*, i32 }* %1 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

; proc_macro2::fallback::Literal::from_str_unchecked
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal18from_str_unchecked17h5f4bd390d7d6773bE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %repr.0, i64 %repr.1) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::string::String", align 8
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hab0586ae0da4fc4eE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_2, [0 x i8]* nonnull align 1 %repr.0, i64 %repr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::fallback::Literal::f32_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14f32_unsuffixed17h1e5e42ae5a638900E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, float %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_13 = alloca %"alloc::string::String", align 8
  %s = alloca %"alloc::string::String", align 8
  %f = alloca float, align 4
  store float %1, float* %f, align 4
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hb773b8474d27ceb8E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %s, float* align 4 dereferenceable(4) %f)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %3 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb4e9891ef10b3b2fE"(%"alloc::string::String"* align 8 dereferenceable(24) %s)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_7.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %3, 1
; invoke core::str::<impl str>::contains
  %_5 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17ha2412111a1423152E"([0 x i8]* nonnull align 1 %_7.0, i64 %_7.1, i32 46)
          to label %bb3 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %4 = load i8, i8* %_14, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb8, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb2, %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb9

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb5

bb5:                                              ; preds = %bb10, %bb3
  store i8 0, i8* %_14, align 1
  %11 = bitcast %"alloc::string::String"* %_13 to i8*
  %12 = bitcast %"alloc::string::String"* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
; invoke proc_macro2::fallback::Literal::_new
  invoke void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_13)
          to label %bb6 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17h8bcb7dfa0493c639E(%"alloc::string::String"* align 8 dereferenceable(24) %s, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1717 to [0 x i8]*), i64 2)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb4
  br label %bb5

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_14, align 1
  ret void

bb7:                                              ; preds = %bb8, %bb9
  %13 = bitcast { i8*, i32 }* %2 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb8:                                              ; preds = %bb9
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %s) #18
  br label %bb7
}

; proc_macro2::fallback::Literal::f64_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14f64_unsuffixed17hb384b3512cf2d064E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, double %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_13 = alloca %"alloc::string::String", align 8
  %s = alloca %"alloc::string::String", align 8
  %f = alloca double, align 8
  store double %1, double* %f, align 8
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h2ff02d88f514a953E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %s, double* align 8 dereferenceable(8) %f)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %3 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb4e9891ef10b3b2fE"(%"alloc::string::String"* align 8 dereferenceable(24) %s)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_7.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %3, 1
; invoke core::str::<impl str>::contains
  %_5 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17ha2412111a1423152E"([0 x i8]* nonnull align 1 %_7.0, i64 %_7.1, i32 46)
          to label %bb3 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %4 = load i8, i8* %_14, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb8, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb2, %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb9

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb5

bb5:                                              ; preds = %bb10, %bb3
  store i8 0, i8* %_14, align 1
  %11 = bitcast %"alloc::string::String"* %_13 to i8*
  %12 = bitcast %"alloc::string::String"* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
; invoke proc_macro2::fallback::Literal::_new
  invoke void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_13)
          to label %bb6 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17h8bcb7dfa0493c639E(%"alloc::string::String"* align 8 dereferenceable(24) %s, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1717 to [0 x i8]*), i64 2)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb4
  br label %bb5

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_14, align 1
  ret void

bb7:                                              ; preds = %bb8, %bb9
  %13 = bitcast { i8*, i32 }* %2 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb8:                                              ; preds = %bb9
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %s) #18
  br label %bb7
}

; proc_macro2::fallback::Literal::string
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal6string17h6d24058751dc67f9E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %t.0, i64 %t.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_29 = alloca i8, align 1
  %_28 = alloca %"alloc::string::String", align 8
  %_24 = alloca %"core::char::EscapeDebug", align 8
  %_13 = alloca i32, align 4
  %iter = alloca { i8*, i8* }, align 8
  %repr = alloca %"alloc::string::String", align 8
  store i8 0, i8* %_29, align 1
; call core::str::<impl str>::len
  %_4 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %t.0, i64 %t.1)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_4, i64 2)
  %_6.0 = extractvalue { i64, i1 } %2, 0
  %_6.1 = extractvalue { i64, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false)
  br i1 %3, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_29, align 1
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17hddc02b7ab7666e98E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %repr, i64 %_6.0)
  br label %bb3

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1719 to %"core::panic::location::Location"*)) #19
  unreachable

bb3:                                              ; preds = %bb2
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %repr, i32 34)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke core::str::<impl str>::chars
  %4 = invoke { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h6f889b924c1c660fE"([0 x i8]* nonnull align 1 %t.0, i64 %t.1)
          to label %bb5 unwind label %cleanup

bb19:                                             ; preds = %cleanup
  %5 = load i8, i8* %_29, align 1, !range !2
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb18, label %bb17

cleanup:                                          ; preds = %bb15, %bb11, %bb12, %bb14, %bb13, %bb7, %bb5, %bb4, %bb3
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb19

bb5:                                              ; preds = %bb4
  %_10.0 = extractvalue { i8*, i8* } %4, 0
  %_10.1 = extractvalue { i8*, i8* } %4, 1
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %12 = invoke { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h52f97a0f2c6bbd30E"(i8* nonnull %_10.0, i8* %_10.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_9.0 = extractvalue { i8*, i8* } %12, 0
  %_9.1 = extractvalue { i8*, i8* } %12, 1
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 0
  store i8* %_9.0, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 1
  store i8* %_9.1, i8** %14, align 8
  br label %bb7

bb7:                                              ; preds = %bb20, %bb21, %bb6
; invoke <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %15 = invoke i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7bf66cdec77cda86E"({ i8*, i8* }* align 8 dereferenceable(16) %iter)
          to label %bb8 unwind label %cleanup, !range !22

bb8:                                              ; preds = %bb7
  store i32 %15, i32* %_13, align 4
  %16 = load i32, i32* %_13, align 4, !range !22
  %17 = sub i32 %16, 1114112
  %18 = icmp eq i32 %17, 0
  %_16 = select i1 %18, i64 0, i64 1
  switch i64 %_16, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb11:                                             ; preds = %bb8
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %repr, i32 34)
          to label %bb15 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %c = load i32, i32* %_13, align 4, !range !80
  %19 = icmp eq i32 %c, 39
  br i1 %19, label %bb12, label %bb13

bb12:                                             ; preds = %bb9
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %repr, i32 %c)
          to label %bb20 unwind label %cleanup

bb13:                                             ; preds = %bb9
; invoke core::char::methods::<impl char>::escape_debug
  invoke void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12escape_debug17h186301ed539dee87E"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %_24, i32 %c)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
; invoke <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  invoke void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hcebc65437f07884dE"(%"alloc::string::String"* align 8 dereferenceable(24) %repr, %"core::char::EscapeDebug"* noalias nocapture dereferenceable(24) %_24)
          to label %bb21 unwind label %cleanup

bb21:                                             ; preds = %bb14
  br label %bb7

bb20:                                             ; preds = %bb12
  br label %bb7

bb15:                                             ; preds = %bb11
  store i8 0, i8* %_29, align 1
  %20 = bitcast %"alloc::string::String"* %_28 to i8*
  %21 = bitcast %"alloc::string::String"* %repr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false)
; invoke proc_macro2::fallback::Literal::_new
  invoke void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_28)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_29, align 1
  ret void

bb17:                                             ; preds = %bb18, %bb19
  %22 = bitcast { i8*, i32 }* %1 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb18:                                             ; preds = %bb19
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %repr) #18
  br label %bb17
}

; proc_macro2::fallback::Literal::character
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal9character17h494e76d44fba9debE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i32 %t) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_16 = alloca i8, align 1
  %_15 = alloca %"alloc::string::String", align 8
  %_11 = alloca %"core::char::EscapeDebug", align 8
  %repr = alloca %"alloc::string::String", align 8
  store i8 0, i8* %_16, align 1
  store i8 1, i8* %_16, align 1
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hdc000d0843cea0ddE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %repr)
  br label %bb1

bb1:                                              ; preds = %start
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %repr, i32 39)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %2 = icmp eq i32 %t, 34
  br i1 %2, label %bb3, label %bb4

bb11:                                             ; preds = %cleanup
  %3 = load i8, i8* %_16, align 1, !range !2
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb10, label %bb9

cleanup:                                          ; preds = %bb7, %bb6, %bb3, %bb5, %bb4, %bb1
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb11

bb3:                                              ; preds = %bb2
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %repr, i32 %t)
          to label %bb12 unwind label %cleanup

bb4:                                              ; preds = %bb2
; invoke core::char::methods::<impl char>::escape_debug
  invoke void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12escape_debug17h186301ed539dee87E"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %_11, i32 %t)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  invoke void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hcebc65437f07884dE"(%"alloc::string::String"* align 8 dereferenceable(24) %repr, %"core::char::EscapeDebug"* noalias nocapture dereferenceable(24) %_11)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb5
  br label %bb6

bb6:                                              ; preds = %bb12, %bb13
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %repr, i32 39)
          to label %bb7 unwind label %cleanup

bb12:                                             ; preds = %bb3
  br label %bb6

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_16, align 1
  %10 = bitcast %"alloc::string::String"* %_15 to i8*
  %11 = bitcast %"alloc::string::String"* %repr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false)
; invoke proc_macro2::fallback::Literal::_new
  invoke void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_15)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_16, align 1
  ret void

bb9:                                              ; preds = %bb10, %bb11
  %12 = bitcast { i8*, i32 }* %1 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17

bb10:                                             ; preds = %bb11
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %repr) #18
  br label %bb9
}

; proc_macro2::fallback::Literal::byte_string
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal11byte_string17h4f4db71ce3cd2e54E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %bytes.0, i64 %bytes.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_67 = alloca i8, align 1
  %_64 = alloca %"alloc::string::String", align 8
  %_52 = alloca i64*, align 8
  %_51 = alloca [1 x { i8*, i64* }], align 8
  %_44 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_42 = alloca %"alloc::string::String", align 8
  %b = alloca i8*, align 8
  %_9 = alloca i8*, align 8
  %iter = alloca { i8*, i8* }, align 8
  %escaped = alloca %"alloc::string::String", align 8
  store i8 0, i8* %_67, align 1
  store i8 1, i8* %_67, align 1
; call <str as alloc::string::ToString>::to_string
  call void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17h08a0e0ca46444f4dE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %escaped, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1720 to [0 x i8]*), i64 2)
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %2 = invoke { i8*, i8* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h50aa6608fa5bace2E"([0 x i8]* nonnull align 1 %bytes.0, i64 %bytes.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_5.0 = extractvalue { i8*, i8* } %2, 0
  %_5.1 = extractvalue { i8*, i8* } %2, 1
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 0
  store i8* %_5.0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 1
  store i8* %_5.1, i8** %4, align 8
  br label %bb3

bb29:                                             ; preds = %bb26, %cleanup
  %5 = load i8, i8* %_67, align 1, !range !2
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb28, label %bb27

cleanup:                                          ; preds = %bb24, %bb7, %bb11, %bb12, %bb13, %bb14, %bb15, %bb16, %bb23, %bb20, %bb19, %bb10, %bb17, %bb3, %bb1
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb29

bb3:                                              ; preds = %bb30, %bb31, %bb32, %bb33, %bb34, %bb35, %bb23, %bb36, %bb2
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %12 = invoke align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6c4bacd36189c2a1E"({ i8*, i8* }* align 8 dereferenceable(16) %iter)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  store i8* %12, i8** %_9, align 8
  %13 = bitcast i8** %_9 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_12 = select i1 %15, i64 0, i64 1
  switch i64 %_12, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %escaped, i32 34)
          to label %bb24 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %16 = load i8*, i8** %_9, align 8, !nonnull !20
  store i8* %16, i8** %b, align 8
  %17 = load i8*, i8** %b, align 8, !nonnull !20
  %18 = load i8, i8* %17, align 1
  switch i8 %18, label %bb8 [
    i8 0, label %bb11
    i8 9, label %bb12
    i8 10, label %bb13
    i8 13, label %bb14
    i8 34, label %bb15
    i8 92, label %bb16
  ]

bb8:                                              ; preds = %bb5
  %19 = load i8*, i8** %b, align 8, !nonnull !20
  %20 = load i8, i8* %19, align 1
  %_14 = icmp ule i8 32, %20
  br i1 %_14, label %bb9, label %bb10

bb11:                                             ; preds = %bb5
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17h8bcb7dfa0493c639E(%"alloc::string::String"* align 8 dereferenceable(24) %escaped, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1726 to [0 x i8]*), i64 2)
          to label %bb30 unwind label %cleanup

bb12:                                             ; preds = %bb5
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17h8bcb7dfa0493c639E(%"alloc::string::String"* align 8 dereferenceable(24) %escaped, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1725 to [0 x i8]*), i64 2)
          to label %bb31 unwind label %cleanup

bb13:                                             ; preds = %bb5
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17h8bcb7dfa0493c639E(%"alloc::string::String"* align 8 dereferenceable(24) %escaped, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1724 to [0 x i8]*), i64 2)
          to label %bb32 unwind label %cleanup

bb14:                                             ; preds = %bb5
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17h8bcb7dfa0493c639E(%"alloc::string::String"* align 8 dereferenceable(24) %escaped, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1723 to [0 x i8]*), i64 2)
          to label %bb33 unwind label %cleanup

bb15:                                             ; preds = %bb5
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17h8bcb7dfa0493c639E(%"alloc::string::String"* align 8 dereferenceable(24) %escaped, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1722 to [0 x i8]*), i64 2)
          to label %bb34 unwind label %cleanup

bb16:                                             ; preds = %bb5
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17h8bcb7dfa0493c639E(%"alloc::string::String"* align 8 dereferenceable(24) %escaped, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1721 to [0 x i8]*), i64 2)
          to label %bb35 unwind label %cleanup

bb10:                                             ; preds = %bb9, %bb8
  %21 = bitcast i64** %_52 to i8***
  store i8** %b, i8*** %21, align 8
  %_args = load i64*, i64** %_52, align 8, !nonnull !20
  %_56 = bitcast i64* %_args to i8**
; invoke core::fmt::ArgumentV1::new
  %22 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h9482ddc84991e93cE(i8** align 8 dereferenceable(8) %_56, i1 (i8**, %"core::fmt::Formatter"*)* nonnull @"_ZN45_$LT$$RF$T$u20$as$u20$core..fmt..UpperHex$GT$3fmt17h80414fb368787636E")
          to label %bb18 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %23 = load i8*, i8** %b, align 8, !nonnull !20
  %24 = load i8, i8* %23, align 1
  %_15 = icmp ule i8 %24, 126
  br i1 %_15, label %bb17, label %bb10

bb17:                                             ; preds = %bb9
  %25 = load i8*, i8** %b, align 8, !nonnull !20
  %_36 = load i8, i8* %25, align 1
  %_35 = zext i8 %_36 to i32
; invoke alloc::string::String::push
  invoke void @_ZN5alloc6string6String4push17h08ab3d2a99983060E(%"alloc::string::String"* align 8 dereferenceable(24) %escaped, i32 %_35)
          to label %bb36 unwind label %cleanup

bb36:                                             ; preds = %bb17
  br label %bb3

bb18:                                             ; preds = %bb10
  %_55.0 = extractvalue { i8*, i64* } %22, 0
  %_55.1 = extractvalue { i8*, i64* } %22, 1
  %26 = bitcast [1 x { i8*, i64* }]* %_51 to { i8*, i64* }*
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %26, i32 0, i32 0
  store i8* %_55.0, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %26, i32 0, i32 1
  store i64* %_55.1, i64** %28, align 8
  %_48.0 = bitcast [1 x { i8*, i64* }]* %_51 to [0 x { i8*, i64* }]*
  br label %bb19

bb19:                                             ; preds = %bb18
; invoke core::fmt::Arguments::new_v1_formatted
  invoke void @_ZN4core3fmt9Arguments16new_v1_formatted17h96eaec9a9eff626eE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_44, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1002 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_48.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc1023 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
          to label %bb20 unwind label %cleanup

bb20:                                             ; preds = %bb19
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_44)
          to label %bb21 unwind label %cleanup

bb21:                                             ; preds = %bb20
  %29 = bitcast %"alloc::string::String"* %_42 to i8*
  %30 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false)
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %31 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb4e9891ef10b3b2fE"(%"alloc::string::String"* align 8 dereferenceable(24) %_42)
          to label %bb22 unwind label %cleanup1

bb22:                                             ; preds = %bb21
  %_39.0 = extractvalue { [0 x i8]*, i64 } %31, 0
  %_39.1 = extractvalue { [0 x i8]*, i64 } %31, 1
; invoke alloc::string::String::push_str
  invoke void @_ZN5alloc6string6String8push_str17h8bcb7dfa0493c639E(%"alloc::string::String"* align 8 dereferenceable(24) %escaped, [0 x i8]* nonnull align 1 %_39.0, i64 %_39.1)
          to label %bb23 unwind label %cleanup1

bb26:                                             ; preds = %cleanup1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_42) #18
  br label %bb29

cleanup1:                                         ; preds = %bb22, %bb21
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  %34 = extractvalue { i8*, i32 } %32, 1
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %34, i32* %36, align 8
  br label %bb26

bb23:                                             ; preds = %bb22
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_42)
          to label %bb3 unwind label %cleanup

bb35:                                             ; preds = %bb16
  br label %bb3

bb34:                                             ; preds = %bb15
  br label %bb3

bb33:                                             ; preds = %bb14
  br label %bb3

bb32:                                             ; preds = %bb13
  br label %bb3

bb31:                                             ; preds = %bb12
  br label %bb3

bb30:                                             ; preds = %bb11
  br label %bb3

bb24:                                             ; preds = %bb7
  store i8 0, i8* %_67, align 1
  %37 = bitcast %"alloc::string::String"* %_64 to i8*
  %38 = bitcast %"alloc::string::String"* %escaped to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false)
; invoke proc_macro2::fallback::Literal::_new
  invoke void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_64)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
  store i8 0, i8* %_67, align 1
  ret void

bb27:                                             ; preds = %bb28, %bb29
  %39 = bitcast { i8*, i32 }* %1 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = insertvalue { i8*, i32 } undef, i8* %40, 0
  %44 = insertvalue { i8*, i32 } %43, i32 %42, 1
  resume { i8*, i32 } %44

bb28:                                             ; preds = %bb29
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %escaped) #18
  br label %bb27
}

; proc_macro2::fallback::Literal::span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal4span17h312a07386963716cE(%"fallback::Literal"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  ret void
}

; proc_macro2::fallback::Literal::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal8set_span17h11a6a6a6fe1126b0E(%"fallback::Literal"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  ret void
}

; <proc_macro2::fallback::Literal as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h6849f3b1e256a6cbE"(%"core::result::Result<fallback::Literal, fallback::LexError>"* noalias nocapture sret(%"core::result::Result<fallback::Literal, fallback::LexError>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_32 = alloca i8, align 1
  %_30 = alloca %"fallback::Literal", align 8
  %literal = alloca %"fallback::Literal", align 8
  %_17 = alloca %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>", align 8
  %_9 = alloca i64, align 8
  %repr = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  store i8 0, i8* %_32, align 1
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !20
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 1
  %_3.1 = load i64, i64* %7, align 8
; call core::str::<impl str>::starts_with
  %negative = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17he067b52065bc5e41E"([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1, i32 45)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %negative, label %bb2, label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 0
  %_16.0 = load [0 x i8]*, [0 x i8]** %8, align 8, !nonnull !20
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 1
  %_16.1 = load i64, i64* %9, align 8
; call proc_macro2::fallback::get_cursor
  %10 = call { i8*, i64 } @_ZN11proc_macro28fallback10get_cursor17h078ee36a419ad0afE([0 x i8]* nonnull align 1 %_16.0, i64 %_16.1)
  %cursor.0 = extractvalue { i8*, i64 } %10, 0
  %cursor.1 = extractvalue { i8*, i64 } %10, 1
  br label %bb8

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 0
  %_8.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !nonnull !20
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 1
  %_8.1 = load i64, i64* %12, align 8
  store i64 1, i64* %_9, align 8
  %13 = load i64, i64* %_9, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %14 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17ha5dfc76fbe8f171dE"([0 x i8]* nonnull align 1 %_8.0, i64 %_8.1, i64 %13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1728 to %"core::panic::location::Location"*))
  %_7.0 = extractvalue { [0 x i8]*, i64 } %14, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %14, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 0
  store [0 x i8]* %_7.0, [0 x i8]** %15, align 8
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 1
  store i64 %_7.1, i64* %16, align 8
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 0
  %_12.0 = load [0 x i8]*, [0 x i8]** %17, align 8, !nonnull !20
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 1
  %_12.1 = load i64, i64* %18, align 8
; call core::str::<impl str>::starts_with
  %_11 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h359f1f5daab71f3aE"([0 x i8]* nonnull align 1 %_12.0, i64 %_12.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = xor i1 %_11, true
  br i1 %_10, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
; call proc_macro2::fallback::LexError::call_site
  call void @_ZN11proc_macro28fallback8LexError9call_site17h7381aa063ea9e0a7E()
  br label %bb6

bb6:                                              ; preds = %bb5
  %19 = bitcast %"core::result::Result<fallback::Literal, fallback::LexError>"* %0 to {}**
  store {}* null, {}** %19, align 8
  br label %bb18

bb18:                                             ; preds = %bb17, %bb15, %bb6
  ret void

bb8:                                              ; preds = %bb7
  store i8 1, i8* %_32, align 1
; call proc_macro2::parse::literal
  call void @_ZN11proc_macro25parse7literal17h1c578926687178e3E(%"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* noalias nocapture sret(%"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>") dereferenceable(40) %_17, i8* nonnull align 1 %cursor.0, i64 %cursor.1)
  br label %bb9

bb9:                                              ; preds = %bb8
  %20 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %_17 to {}**
  %21 = load {}*, {}** %20, align 8
  %22 = icmp eq {}* %21, null
  %_19 = select i1 %22, i64 1, i64 0
  %23 = icmp eq i64 %_19, 0
  br i1 %23, label %bb10, label %bb24

bb10:                                             ; preds = %bb9
  %24 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %_17 to %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"*
  %25 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"* %24 to { { i8*, i64 }, %"fallback::Literal" }*
  %26 = bitcast { { i8*, i64 }, %"fallback::Literal" }* %25 to { i8*, i64 }*
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %26, i32 0, i32 0
  %_rest.0 = load i8*, i8** %27, align 8, !nonnull !20
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %26, i32 0, i32 1
  %_rest.1 = load i64, i64* %28, align 8
  store i8 0, i8* %_32, align 1
  %29 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %_17 to %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"*
  %30 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"* %29 to { { i8*, i64 }, %"fallback::Literal" }*
  %31 = getelementptr inbounds { { i8*, i64 }, %"fallback::Literal" }, { { i8*, i64 }, %"fallback::Literal" }* %30, i32 0, i32 1
  %32 = bitcast %"fallback::Literal"* %literal to i8*
  %33 = bitcast %"fallback::Literal"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false)
  %_24 = bitcast %"fallback::Literal"* %literal to %"alloc::string::String"*
; invoke alloc::string::String::len
  %_23 = invoke i64 @_ZN5alloc6string6String3len17h4d2826c01d4b820dE(%"alloc::string::String"* align 8 dereferenceable(24) %_24)
          to label %bb11 unwind label %cleanup

bb24:                                             ; preds = %bb16, %bb9
  %34 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %_17 to {}**
  %35 = load {}*, {}** %34, align 8
  %36 = icmp eq {}* %35, null
  %_33 = select i1 %36, i64 1, i64 0
  %37 = icmp eq i64 %_33, 0
  br i1 %37, label %bb22, label %bb21

bb11:                                             ; preds = %bb10
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 0
  %_26.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !nonnull !20
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %repr, i32 0, i32 1
  %_26.1 = load i64, i64* %39, align 8
; invoke core::str::<impl str>::len
  %_25 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h016b7310a2545bc4E"([0 x i8]* nonnull align 1 %_26.0, i64 %_26.1)
          to label %bb12 unwind label %cleanup

bb19:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  call void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17hbda93f62f7510cdeE"(%"fallback::Literal"* %literal) #18
  br label %bb20

cleanup:                                          ; preds = %bb14, %bb11, %bb10
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  %42 = extractvalue { i8*, i32 } %40, 1
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %42, i32* %44, align 8
  br label %bb19

bb12:                                             ; preds = %bb11
  %_22 = icmp eq i64 %_23, %_25
  br i1 %_22, label %bb13, label %bb16

bb16:                                             ; preds = %bb12
; call core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  call void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17hbda93f62f7510cdeE"(%"fallback::Literal"* %literal)
  br label %bb24

bb13:                                             ; preds = %bb12
  br i1 %negative, label %bb14, label %bb15

bb15:                                             ; preds = %bb25, %bb13
  %45 = bitcast %"fallback::Literal"* %_30 to i8*
  %46 = bitcast %"fallback::Literal"* %literal to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false)
  %47 = bitcast %"core::result::Result<fallback::Literal, fallback::LexError>"* %0 to %"core::result::Result<fallback::Literal, fallback::LexError>::Ok"*
  %48 = bitcast %"core::result::Result<fallback::Literal, fallback::LexError>::Ok"* %47 to %"fallback::Literal"*
  %49 = bitcast %"fallback::Literal"* %48 to i8*
  %50 = bitcast %"fallback::Literal"* %_30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false)
  store i8 0, i8* %_32, align 1
  br label %bb18

bb14:                                             ; preds = %bb13
  %_29 = bitcast %"fallback::Literal"* %literal to %"alloc::string::String"*
; invoke alloc::string::String::insert
  invoke void @_ZN5alloc6string6String6insert17h8de987893be43f28E(%"alloc::string::String"* align 8 dereferenceable(24) %_29, i64 0, i32 45)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb14
  br label %bb15

bb20:                                             ; preds = %bb19
  %51 = bitcast { i8*, i32 }* %3 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = insertvalue { i8*, i32 } undef, i8* %52, 0
  %56 = insertvalue { i8*, i32 } %55, i32 %54, 1
  resume { i8*, i32 } %56

bb22:                                             ; preds = %bb24
  %57 = load i8, i8* %_32, align 1, !range !2
  %58 = trunc i8 %57 to i1
  br i1 %58, label %bb23, label %bb21

bb21:                                             ; preds = %bb23, %bb22, %bb24
  store i8 0, i8* %_32, align 1
; call proc_macro2::fallback::LexError::call_site
  call void @_ZN11proc_macro28fallback8LexError9call_site17h7381aa063ea9e0a7E()
  br label %bb17

bb23:                                             ; preds = %bb22
  %59 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>"* %_17 to %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"*
  %60 = bitcast %"core::result::Result<(parse::Cursor, fallback::Literal), parse::Reject>::Ok"* %59 to { { i8*, i64 }, %"fallback::Literal" }*
  %61 = getelementptr inbounds { { i8*, i64 }, %"fallback::Literal" }, { { i8*, i64 }, %"fallback::Literal" }* %60, i32 0, i32 1
; call core::ptr::drop_in_place<proc_macro2::fallback::Literal>
  call void @"_ZN4core3ptr51drop_in_place$LT$proc_macro2..fallback..Literal$GT$17hbda93f62f7510cdeE"(%"fallback::Literal"* %61)
  br label %bb21

bb17:                                             ; preds = %bb21
  %62 = bitcast %"core::result::Result<fallback::Literal, fallback::LexError>"* %0 to {}**
  store {}* null, {}** %62, align 8
  br label %bb18
}

; <proc_macro2::fallback::Literal as core::str::traits::FromStr>::from_str::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN77_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str28_$u7b$$u7b$closure$u7d$$u7d$17h2760f224f566527fE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:64]"* nonnull align 1 %_1, i32 %0) unnamed_addr #0 {
start:
  %ch = alloca i32, align 4
  store i32 %0, i32* %ch, align 4
; call core::char::methods::<impl char>::is_ascii_digit
  %1 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$14is_ascii_digit17h3779a102f304fbaeE"(i32* align 4 dereferenceable(4) %ch)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; <proc_macro2::fallback::Literal as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN69_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17hf10053e550caaa62E"(%"fallback::Literal"* align 8 dereferenceable(24) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = bitcast %"fallback::Literal"* %self to %"alloc::string::String"*
; call <alloc::string::String as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h2b6a6f1c2c9388a1E"(%"alloc::string::String"* align 8 dereferenceable(24) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <proc_macro2::fallback::Literal as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17hb10f1b8a1b9ed681E"(%"fallback::Literal"* align 8 dereferenceable(24) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_22 = alloca i64*, align 8
  %_21 = alloca [1 x { i8*, i64* }], align 8
  %_14 = alloca %"core::fmt::Arguments", align 8
  %debug = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1729 to [0 x i8]*), i64 7)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %debug to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %_23 = bitcast %"fallback::Literal"* %self to %"alloc::string::String"*
  %4 = bitcast i64** %_22 to %"alloc::string::String"**
  store %"alloc::string::String"* %_23, %"alloc::string::String"** %4, align 8
  %_args = load i64*, i64** %_22, align 8, !nonnull !20
  %_26 = bitcast i64* %_args to %"alloc::string::String"*
; call core::fmt::ArgumentV1::new
  %5 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h76ad21a0b460a28fE(%"alloc::string::String"* align 8 dereferenceable(24) %_26, i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)* nonnull @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h2b6a6f1c2c9388a1E")
  %_25.0 = extractvalue { i8*, i64* } %5, 0
  %_25.1 = extractvalue { i8*, i64* } %5, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = bitcast [1 x { i8*, i64* }]* %_21 to { i8*, i64* }*
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %6, i32 0, i32 0
  store i8* %_25.0, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %6, i32 0, i32 1
  store i64* %_25.1, i64** %8, align 8
  %_18.0 = bitcast [1 x { i8*, i64* }]* %_21 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_14, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc635 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_18.0, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_11.0 = bitcast %"core::fmt::Arguments"* %_14 to {}*
; call core::fmt::builders::DebugStruct::field
  %_7 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1730 to [0 x i8]*), i64 3, {}* nonnull align 1 %_11.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.k to [3 x i64]*))
  br label %bb4

bb4:                                              ; preds = %bb3
; call proc_macro2::fallback::debug_span_field_if_nontrivial
  call void @_ZN11proc_macro28fallback30debug_span_field_if_nontrivial17h3d448a6ca34870b3E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::fmt::builders::DebugStruct::finish
  %9 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug)
  br label %bb6

bb6:                                              ; preds = %bb5
  ret i1 %9
}

; proc_macro2::imp::LexError::Compiler
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro23imp8LexError8Compiler17h73e5a86b110ee91aE() unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast i8* %0 to %"imp::LexError::Compiler"*
  %2 = getelementptr inbounds %"imp::LexError::Compiler", %"imp::LexError::Compiler"* %1, i32 0, i32 1
  store i8 0, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; proc_macro2::imp::LexError::call_site
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro23imp8LexError9call_site17h8561d5eb7e6e9d55E() unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
; call proc_macro2::fallback::Span::call_site
  call void @_ZN11proc_macro28fallback4Span9call_site17h60bcec765db6ac7eE()
  br label %bb1

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; proc_macro2::imp::mismatch
; Function Attrs: noreturn nonlazybind uwtable
define void @_ZN11proc_macro23imp8mismatch17haa8ba9ba33e455c9E() unnamed_addr #8 {
start:
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17he0a282308de06f91E([0 x i8]* nonnull align 1 bitcast (<{ [23 x i8] }>* @alloc1731 to [0 x i8]*), i64 23, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1733 to %"core::panic::location::Location"*)) #19
  unreachable
}

; proc_macro2::imp::DeferredTokenStream::new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro23imp19DeferredTokenStream3new17h92eb4ad95da03661E(%"imp::DeferredTokenStream"* noalias nocapture sret(%"imp::DeferredTokenStream") dereferenceable(32) %0, i32 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_3 = alloca %"alloc::vec::Vec<proc_macro::TokenTree>", align 8
  %_2 = alloca %"proc_macro::TokenStream", align 4
  %3 = alloca i32, align 4
  %stream = alloca %"proc_macro::TokenStream", align 4
  store i32 %1, i32* %3, align 4
  %4 = bitcast %"proc_macro::TokenStream"* %stream to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %"proc_macro::TokenStream"* %_2 to i8*
  %7 = bitcast %"proc_macro::TokenStream"* %stream to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h9651a10911b2153fE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<proc_macro::TokenTree>") dereferenceable(24) %_3)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds %"imp::DeferredTokenStream", %"imp::DeferredTokenStream"* %0, i32 0, i32 1
  %9 = bitcast %"proc_macro::TokenStream"* %8 to i8*
  %10 = bitcast %"proc_macro::TokenStream"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %10, i64 4, i1 false)
  %11 = bitcast %"imp::DeferredTokenStream"* %0 to %"alloc::vec::Vec<proc_macro::TokenTree>"*
  %12 = bitcast %"alloc::vec::Vec<proc_macro::TokenTree>"* %11 to i8*
  %13 = bitcast %"alloc::vec::Vec<proc_macro::TokenTree>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  ret void

bb2:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %_2) #18
  br label %bb3

cleanup:                                          ; preds = %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %19 = bitcast { i8*, i32 }* %2 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; proc_macro2::imp::DeferredTokenStream::is_empty
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro23imp19DeferredTokenStream8is_empty17h535a8da33cd50169E(%"imp::DeferredTokenStream"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_3 = getelementptr inbounds %"imp::DeferredTokenStream", %"imp::DeferredTokenStream"* %self, i32 0, i32 1
; call proc_macro::TokenStream::is_empty
  %_2 = call zeroext i1 @_ZN10proc_macro11TokenStream8is_empty17h1229e5f92743618eE(%"proc_macro::TokenStream"* align 4 dereferenceable(4) %_3)
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb1

bb1:                                              ; preds = %bb4
  store i8 0, i8* %0, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %_5 = bitcast %"imp::DeferredTokenStream"* %self to %"alloc::vec::Vec<proc_macro::TokenTree>"*
; call alloc::vec::Vec<T,A>::is_empty
  %_4 = call zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h0a621e06143c71e8E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %_5)
  br label %bb5

bb5:                                              ; preds = %bb2
  %1 = zext i1 %_4 to i8
  store i8 %1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb5
  %2 = load i8, i8* %0, align 1, !range !2
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; proc_macro2::imp::DeferredTokenStream::evaluate_now
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro23imp19DeferredTokenStream12evaluate_now17h5ddf75d894a208e8E(%"imp::DeferredTokenStream"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_7 = alloca %"alloc::vec::drain::Drain<proc_macro::TokenTree>", align 8
  %_4 = bitcast %"imp::DeferredTokenStream"* %self to %"alloc::vec::Vec<proc_macro::TokenTree>"*
; call alloc::vec::Vec<T,A>::is_empty
  %_3 = call zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h0a621e06143c71e8E"(%"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb2:                                              ; preds = %bb1
  %_6 = getelementptr inbounds %"imp::DeferredTokenStream", %"imp::DeferredTokenStream"* %self, i32 0, i32 1
  %_8 = bitcast %"imp::DeferredTokenStream"* %self to %"alloc::vec::Vec<proc_macro::TokenTree>"*
; call alloc::vec::Vec<T,A>::drain
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17hf7fc01d54ea30cd9E"(%"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::drain::Drain<proc_macro::TokenTree>") dereferenceable(40) %_7, %"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %_8)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <proc_macro::TokenStream as core::iter::traits::collect::Extend<proc_macro::TokenTree>>::extend
  call void @"_ZN108_$LT$proc_macro..TokenStream$u20$as$u20$core..iter..traits..collect..Extend$LT$proc_macro..TokenTree$GT$$GT$6extend17h4204688729e44108E"(%"proc_macro::TokenStream"* align 4 dereferenceable(4) %_6, %"alloc::vec::drain::Drain<proc_macro::TokenTree>"* noalias nocapture dereferenceable(40) %_7)
  br label %bb4
}

; proc_macro2::imp::DeferredTokenStream::into_token_stream
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h4c1d1dbef48cadebE(%"imp::DeferredTokenStream"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca %"proc_macro::TokenStream", align 4
; invoke proc_macro2::imp::DeferredTokenStream::evaluate_now
  invoke void @_ZN11proc_macro23imp19DeferredTokenStream12evaluate_now17h5ddf75d894a208e8E(%"imp::DeferredTokenStream"* align 8 dereferenceable(32) %self)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"imp::DeferredTokenStream", %"imp::DeferredTokenStream"* %self, i32 0, i32 1
  %3 = bitcast %"proc_macro::TokenStream"* %1 to i8*
  %4 = bitcast %"proc_macro::TokenStream"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 4, i1 false)
  %5 = bitcast %"imp::DeferredTokenStream"* %self to %"alloc::vec::Vec<proc_macro::TokenTree>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<proc_macro::TokenTree>>
  call void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$proc_macro..TokenTree$GT$$GT$17h11ec50d681298b2eE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* %5)
  br label %bb4

bb2:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<proc_macro2::imp::DeferredTokenStream>
  call void @"_ZN4core3ptr58drop_in_place$LT$proc_macro2..imp..DeferredTokenStream$GT$17h8f57e1d1862dffcfE"(%"imp::DeferredTokenStream"* %self) #18
  br label %bb3

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %11 = bitcast { i8*, i32 }* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb4:                                              ; preds = %bb1
  %17 = bitcast %"proc_macro::TokenStream"* %1 to i32*
  %18 = load i32, i32* %17, align 4
  ret i32 %18
}

; proc_macro2::imp::TokenStream::new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro23imp11TokenStream3new17h3dc36b1df7db0ee0E(%"imp::TokenStream"* noalias nocapture sret(%"imp::TokenStream") dereferenceable(40) %0) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_4 = alloca %"fallback::TokenStream", align 8
  %_3 = alloca %"proc_macro::TokenStream", align 4
  %_2 = alloca %"imp::DeferredTokenStream", align 8
; call proc_macro2::detection::inside_proc_macro
  %_1 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_1, label %bb2, label %bb5

bb5:                                              ; preds = %bb1
; call proc_macro2::fallback::TokenStream::new
  call void @_ZN11proc_macro28fallback11TokenStream3new17h610fd3a2bc513c65E(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %_4)
  br label %bb6

bb2:                                              ; preds = %bb1
; call proc_macro::TokenStream::new
  %2 = call i32 @_ZN10proc_macro11TokenStream3new17hb86dfb25bf941996E()
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::TokenStream"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"proc_macro::TokenStream"* %_3 to i32*
  %6 = load i32, i32* %5, align 4
; call proc_macro2::imp::DeferredTokenStream::new
  call void @_ZN11proc_macro23imp19DeferredTokenStream3new17h92eb4ad95da03661E(%"imp::DeferredTokenStream"* noalias nocapture sret(%"imp::DeferredTokenStream") dereferenceable(32) %_2, i32 %6)
  br label %bb4

bb4:                                              ; preds = %bb3
  %7 = bitcast %"imp::TokenStream"* %0 to %"imp::TokenStream::Compiler"*
  %8 = getelementptr inbounds %"imp::TokenStream::Compiler", %"imp::TokenStream::Compiler"* %7, i32 0, i32 1
  %9 = bitcast %"imp::DeferredTokenStream"* %8 to i8*
  %10 = bitcast %"imp::DeferredTokenStream"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 32, i1 false)
  %11 = bitcast %"imp::TokenStream"* %0 to i64*
  store i64 0, i64* %11, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4
  ret void

bb6:                                              ; preds = %bb5
  %12 = bitcast %"imp::TokenStream"* %0 to %"imp::TokenStream::Fallback"*
  %13 = getelementptr inbounds %"imp::TokenStream::Fallback", %"imp::TokenStream::Fallback"* %12, i32 0, i32 1
  %14 = bitcast %"fallback::TokenStream"* %13 to i8*
  %15 = bitcast %"fallback::TokenStream"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
  %16 = bitcast %"imp::TokenStream"* %0 to i64*
  store i64 1, i64* %16, align 8
  br label %bb7
}

; proc_macro2::imp::TokenStream::is_empty
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN11proc_macro23imp11TokenStream8is_empty17h0bb7f81dbe0dd7eeE(%"imp::TokenStream"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"imp::TokenStream"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !18
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"imp::TokenStream"* %self to %"imp::TokenStream::Compiler"*
  %tts1 = getelementptr inbounds %"imp::TokenStream::Compiler", %"imp::TokenStream::Compiler"* %2, i32 0, i32 1
; call proc_macro2::imp::DeferredTokenStream::is_empty
  %3 = call zeroext i1 @_ZN11proc_macro23imp19DeferredTokenStream8is_empty17h535a8da33cd50169E(%"imp::DeferredTokenStream"* align 8 dereferenceable(32) %tts1)
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"imp::TokenStream"* %self to %"imp::TokenStream::Fallback"*
  %tts = getelementptr inbounds %"imp::TokenStream::Fallback", %"imp::TokenStream::Fallback"* %5, i32 0, i32 1
; call proc_macro2::fallback::TokenStream::is_empty
  %6 = call zeroext i1 @_ZN11proc_macro28fallback11TokenStream8is_empty17ha4bfeb57fcaed963E(%"fallback::TokenStream"* align 8 dereferenceable(24) %tts)
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %8 = load i8, i8* %0, align 1, !range !2
  %9 = trunc i8 %8 to i1
  ret i1 %9
}

; proc_macro2::imp::TokenStream::unwrap_nightly
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro23imp11TokenStream14unwrap_nightly17ha5b7a7364088c44cE(%"imp::TokenStream"* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32, align 4
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca %"imp::DeferredTokenStream", align 8
  %s = alloca %"imp::DeferredTokenStream", align 8
  %2 = alloca %"proc_macro::TokenStream", align 4
  %3 = bitcast %"imp::TokenStream"* %self to i64*
  %_2 = load i64, i64* %3, align 8, !range !18
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::TokenStream"* %self to %"imp::TokenStream::Compiler"*
  %5 = getelementptr inbounds %"imp::TokenStream::Compiler", %"imp::TokenStream::Compiler"* %4, i32 0, i32 1
  %6 = bitcast %"imp::DeferredTokenStream"* %s to i8*
  %7 = bitcast %"imp::DeferredTokenStream"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false)
  %8 = bitcast %"imp::DeferredTokenStream"* %_4 to i8*
  %9 = bitcast %"imp::DeferredTokenStream"* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
; invoke proc_macro2::imp::DeferredTokenStream::into_token_stream
  %10 = invoke i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h4c1d1dbef48cadebE(%"imp::DeferredTokenStream"* noalias nocapture dereferenceable(32) %_4)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke proc_macro2::imp::mismatch
  invoke void @_ZN11proc_macro23imp8mismatch17haa8ba9ba33e455c9E() #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb9:                                              ; preds = %cleanup
  %11 = bitcast %"imp::TokenStream"* %self to i64*
  %_6 = load i64, i64* %11, align 8, !range !18
  %12 = icmp eq i64 %_6, 0
  br i1 %12, label %bb5, label %bb8

cleanup:                                          ; preds = %bb3, %bb1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
  store i32 %10, i32* %0, align 4
  %18 = bitcast %"proc_macro::TokenStream"* %2 to i8*
  %19 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 4, i1 false)
  %20 = bitcast %"imp::TokenStream"* %self to i64*
  %_5 = load i64, i64* %20, align 8, !range !18
  %21 = icmp eq i64 %_5, 0
  br i1 %21, label %bb6, label %bb7

bb5:                                              ; preds = %bb8, %bb9
  %22 = bitcast { i8*, i32 }* %1 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb8:                                              ; preds = %bb9
; call core::ptr::drop_in_place<proc_macro2::imp::TokenStream>
  call void @"_ZN4core3ptr50drop_in_place$LT$proc_macro2..imp..TokenStream$GT$17h3e867c88d655ed3aE"(%"imp::TokenStream"* %self) #18
  br label %bb5

bb6:                                              ; preds = %bb7, %bb4
  %28 = bitcast %"proc_macro::TokenStream"* %2 to i32*
  %29 = load i32, i32* %28, align 4
  ret i32 %29

bb7:                                              ; preds = %bb4
; call core::ptr::drop_in_place<proc_macro2::imp::TokenStream>
  call void @"_ZN4core3ptr50drop_in_place$LT$proc_macro2..imp..TokenStream$GT$17h3e867c88d655ed3aE"(%"imp::TokenStream"* %self)
  br label %bb6
}

; proc_macro2::imp::TokenStream::unwrap_stable
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro23imp11TokenStream13unwrap_stable17h1489a87ed233ab45E(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %0, %"imp::TokenStream"* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %s = alloca %"fallback::TokenStream", align 8
  %2 = bitcast %"imp::TokenStream"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !18
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; invoke proc_macro2::imp::mismatch
  invoke void @_ZN11proc_macro23imp8mismatch17haa8ba9ba33e455c9E() #19
          to label %unreachable unwind label %cleanup

bb1:                                              ; preds = %start
  %3 = bitcast %"imp::TokenStream"* %self to %"imp::TokenStream::Fallback"*
  %4 = getelementptr inbounds %"imp::TokenStream::Fallback", %"imp::TokenStream::Fallback"* %3, i32 0, i32 1
  %5 = bitcast %"fallback::TokenStream"* %s to i8*
  %6 = bitcast %"fallback::TokenStream"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = bitcast %"fallback::TokenStream"* %0 to i8*
  %8 = bitcast %"fallback::TokenStream"* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast %"imp::TokenStream"* %self to i64*
  %_4 = load i64, i64* %9, align 8, !range !18
  %10 = icmp eq i64 %_4, 1
  br i1 %10, label %bb5, label %bb6

bb5:                                              ; preds = %bb6, %bb1
  ret void

bb6:                                              ; preds = %bb1
; call core::ptr::drop_in_place<proc_macro2::imp::TokenStream>
  call void @"_ZN4core3ptr50drop_in_place$LT$proc_macro2..imp..TokenStream$GT$17h3e867c88d655ed3aE"(%"imp::TokenStream"* %self)
  br label %bb5

unreachable:                                      ; preds = %bb3
  unreachable

bb8:                                              ; preds = %cleanup
  %11 = bitcast %"imp::TokenStream"* %self to i64*
  %_5 = load i64, i64* %11, align 8, !range !18
  %12 = icmp eq i64 %_5, 1
  br i1 %12, label %bb4, label %bb7

cleanup:                                          ; preds = %bb3
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb8

bb4:                                              ; preds = %bb7, %bb8
  %18 = bitcast { i8*, i32 }* %1 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb7:                                              ; preds = %bb8
; call core::ptr::drop_in_place<proc_macro2::imp::TokenStream>
  call void @"_ZN4core3ptr50drop_in_place$LT$proc_macro2..imp..TokenStream$GT$17h3e867c88d655ed3aE"(%"imp::TokenStream"* %self) #18
  br label %bb4
}

; <proc_macro2::imp::TokenStream as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
define void @"_ZN76_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h87b277d9d722a913E"(%"core::result::Result<imp::TokenStream, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::TokenStream, imp::LexError>") dereferenceable(48) %0, [0 x i8]* nonnull align 1 %src.0, i64 %src.1) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %val1 = alloca %"fallback::TokenStream", align 8
  %_16 = alloca %"core::result::Result<fallback::TokenStream, fallback::LexError>", align 8
  %_15 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>", align 8
  %_14 = alloca %"fallback::TokenStream", align 8
  %_13 = alloca %"imp::TokenStream", align 8
  %val = alloca %"proc_macro::TokenStream", align 4
  %_7 = alloca %"core::result::Result<proc_macro::TokenStream, imp::LexError>", align 4
  %_6 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>", align 4
  %_5 = alloca %"proc_macro::TokenStream", align 4
  %_4 = alloca %"imp::DeferredTokenStream", align 8
  %_3 = alloca %"imp::TokenStream", align 8
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb10

bb10:                                             ; preds = %bb1
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h934c7f9f25233c78E"(%"core::result::Result<fallback::TokenStream, fallback::LexError>"* noalias nocapture sret(%"core::result::Result<fallback::TokenStream, fallback::LexError>") dereferenceable(24) %_16, [0 x i8]* nonnull align 1 %src.0, i64 %src.1)
  br label %bb11

bb2:                                              ; preds = %bb1
; call proc_macro2::imp::proc_macro_parse
  %3 = call i64 @_ZN11proc_macro23imp16proc_macro_parse17h3967e977eb12f6feE([0 x i8]* nonnull align 1 %src.0, i64 %src.1)
  store i64 %3, i64* %2, align 8
  %4 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %_7 to i8*
  %5 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 8, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %_7 to i64*
  %7 = load i64, i64* %6, align 4
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %8 = call i64 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h15ce75f009833eeaE"(i64 %7)
  store i64 %8, i64* %1, align 8
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>"* %_6 to i8*
  %10 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 8 %10, i64 8, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb3
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>"* %_6 to i8*
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = trunc i8 %12 to i1
  %_9 = zext i1 %13 to i64
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>"* %_6 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Continue"*
  %15 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Continue"* %14, i32 0, i32 1
  %16 = bitcast %"proc_macro::TokenStream"* %val to i8*
  %17 = bitcast %"proc_macro::TokenStream"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 4, i1 false)
  %18 = bitcast %"proc_macro::TokenStream"* %_5 to i8*
  %19 = bitcast %"proc_macro::TokenStream"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 4, i1 false)
  %20 = bitcast %"proc_macro::TokenStream"* %_5 to i32*
  %21 = load i32, i32* %20, align 4
; call proc_macro2::imp::DeferredTokenStream::new
  call void @_ZN11proc_macro23imp19DeferredTokenStream3new17h92eb4ad95da03661E(%"imp::DeferredTokenStream"* noalias nocapture sret(%"imp::DeferredTokenStream") dereferenceable(32) %_4, i32 %21)
  br label %bb9

bb7:                                              ; preds = %bb4
  %22 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>"* %_6 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Break"*
  %23 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, imp::LexError>, proc_macro::TokenStream>::Break"* %22, i32 0, i32 1
  %24 = load i8, i8* %23, align 1, !range !2
  %residual = trunc i8 %24 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h9ce96231fac9cb64E"(%"core::result::Result<imp::TokenStream, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::TokenStream, imp::LexError>") dereferenceable(48) %0, i1 zeroext %residual, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1735 to %"core::panic::location::Location"*))
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb17

bb17:                                             ; preds = %bb13, %bb16, %bb9, %bb8
  ret void

bb9:                                              ; preds = %bb5
  %25 = bitcast %"imp::TokenStream"* %_3 to %"imp::TokenStream::Compiler"*
  %26 = getelementptr inbounds %"imp::TokenStream::Compiler", %"imp::TokenStream::Compiler"* %25, i32 0, i32 1
  %27 = bitcast %"imp::DeferredTokenStream"* %26 to i8*
  %28 = bitcast %"imp::DeferredTokenStream"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 32, i1 false)
  %29 = bitcast %"imp::TokenStream"* %_3 to i64*
  store i64 0, i64* %29, align 8
  %30 = bitcast %"core::result::Result<imp::TokenStream, imp::LexError>"* %0 to %"core::result::Result<imp::TokenStream, imp::LexError>::Ok"*
  %31 = getelementptr inbounds %"core::result::Result<imp::TokenStream, imp::LexError>::Ok", %"core::result::Result<imp::TokenStream, imp::LexError>::Ok"* %30, i32 0, i32 1
  %32 = bitcast %"imp::TokenStream"* %31 to i8*
  %33 = bitcast %"imp::TokenStream"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 40, i1 false)
  %34 = bitcast %"core::result::Result<imp::TokenStream, imp::LexError>"* %0 to i8*
  store i8 0, i8* %34, align 8
  br label %bb17

bb11:                                             ; preds = %bb10
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb731ae330c9f3770E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>") dereferenceable(24) %_15, %"core::result::Result<fallback::TokenStream, fallback::LexError>"* noalias nocapture dereferenceable(24) %_16)
  br label %bb12

bb12:                                             ; preds = %bb11
  %35 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>"* %_15 to {}**
  %36 = load {}*, {}** %35, align 8
  %37 = icmp eq {}* %36, null
  %_18 = select i1 %37, i64 1, i64 0
  switch i64 %_18, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ]

bb14:                                             ; preds = %bb12
  unreachable

bb13:                                             ; preds = %bb12
  %38 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>"* %_15 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>::Continue"*
  %39 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::TokenStream>::Continue"* %38 to %"fallback::TokenStream"*
  %40 = bitcast %"fallback::TokenStream"* %val1 to i8*
  %41 = bitcast %"fallback::TokenStream"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false)
  %42 = bitcast %"fallback::TokenStream"* %_14 to i8*
  %43 = bitcast %"fallback::TokenStream"* %val1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false)
  %44 = bitcast %"imp::TokenStream"* %_13 to %"imp::TokenStream::Fallback"*
  %45 = getelementptr inbounds %"imp::TokenStream::Fallback", %"imp::TokenStream::Fallback"* %44, i32 0, i32 1
  %46 = bitcast %"fallback::TokenStream"* %45 to i8*
  %47 = bitcast %"fallback::TokenStream"* %_14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false)
  %48 = bitcast %"imp::TokenStream"* %_13 to i64*
  store i64 1, i64* %48, align 8
  %49 = bitcast %"core::result::Result<imp::TokenStream, imp::LexError>"* %0 to %"core::result::Result<imp::TokenStream, imp::LexError>::Ok"*
  %50 = getelementptr inbounds %"core::result::Result<imp::TokenStream, imp::LexError>::Ok", %"core::result::Result<imp::TokenStream, imp::LexError>::Ok"* %49, i32 0, i32 1
  %51 = bitcast %"imp::TokenStream"* %50 to i8*
  %52 = bitcast %"imp::TokenStream"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 40, i1 false)
  %53 = bitcast %"core::result::Result<imp::TokenStream, imp::LexError>"* %0 to i8*
  store i8 0, i8* %53, align 8
  br label %bb17

bb15:                                             ; preds = %bb12
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h83926ac799697eaaE"(%"core::result::Result<imp::TokenStream, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::TokenStream, imp::LexError>") dereferenceable(48) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1737 to %"core::panic::location::Location"*))
  br label %bb16

bb16:                                             ; preds = %bb15
  br label %bb17
}

; proc_macro2::imp::proc_macro_parse
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN11proc_macro23imp16proc_macro_parse17h3967e977eb12f6feE([0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %2 = alloca i64, align 8
  %_5 = alloca %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>", align 8
  %_3 = alloca i64*, align 8
  %result = alloca %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>", align 8
  %3 = alloca %"core::result::Result<proc_macro::TokenStream, imp::LexError>", align 4
  %src = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = bitcast i64** %_3 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %src, { [0 x i8]*, i64 }** %6, align 8
  %7 = load i64*, i64** %_3, align 8, !nonnull !20
; call std::panic::catch_unwind
  call void @_ZN3std5panic12catch_unwind17hc4328dbb745a1d0eE(%"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* noalias nocapture sret(%"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>") dereferenceable(24) %result, i64* align 8 dereferenceable(16) %7)
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* %_5 to i8*
  %9 = bitcast %"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
; call core::result::Result<T,E>::unwrap_or_else
  %10 = call i64 @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17hd9821730f10abefaE"(%"core::result::Result<core::result::Result<proc_macro::TokenStream, imp::LexError>, alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>"* noalias nocapture dereferenceable(24) %_5)
  store i64 %10, i64* %2, align 8
  %11 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %3 to i8*
  %12 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 8 %12, i64 8, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %13 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %3 to i64*
  %14 = load i64, i64* %13, align 4
  ret i64 %14
}

; proc_macro2::imp::proc_macro_parse::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN11proc_macro23imp16proc_macro_parse28_$u7b$$u7b$closure$u7d$$u7d$17hd069dffc287c9e0aE"(i64* align 8 dereferenceable(16) %_1) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i32, align 4
  %_2 = alloca %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>", align 4
  %2 = alloca %"core::result::Result<proc_macro::TokenStream, imp::LexError>", align 4
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }*
  %4 = bitcast i64* %_1 to { [0 x i8]*, i64 }*
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !20
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  %_3.1 = load i64, i64* %6, align 8
; call core::str::<impl str>::parse
  %7 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h96bf1284bafc9ddeE"([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1)
  store i32 %7, i32* %1, align 4
  %8 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %_2 to i8*
  %9 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %10 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %_2 to i32*
  %11 = load i32, i32* %10, align 4
; call core::result::Result<T,E>::map_err
  %12 = call i64 @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h8c773e230b45d246E"(i32 %11)
  store i64 %12, i64* %0, align 8
  %13 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %2 to i8*
  %14 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 8 %14, i64 8, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %15 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %2 to i64*
  %16 = load i64, i64* %15, align 4
  ret i64 %16
}

; proc_macro2::imp::proc_macro_parse::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN11proc_macro23imp16proc_macro_parse28_$u7b$$u7b$closure$u7d$$u7d$17hae33c21e834b28efE"({}* noalias nonnull align 1 %0, [3 x i64]* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %3 = alloca %"core::result::Result<proc_macro::TokenStream, imp::LexError>", align 4
  %_2 = alloca { {}*, [3 x i64]* }, align 8
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_2, i32 0, i32 0
  store {}* %0, {}** %4, align 8
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_2, i32 0, i32 1
  store [3 x i64]* %1, [3 x i64]** %5, align 8
; invoke proc_macro2::imp::LexError::call_site
  %_3 = invoke zeroext i1 @_ZN11proc_macro23imp8LexError9call_site17h8561d5eb7e6e9d55E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %6 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %3 to %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Err", %"core::result::Result<proc_macro::TokenStream, imp::LexError>::Err"* %6, i32 0, i32 1
  %8 = zext i1 %_3 to i8
  store i8 %8, i8* %7, align 1
  %9 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %3 to i8*
  store i8 1, i8* %9, align 4
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h857be11e154f62f4E"({ {}*, [3 x i64]* }* %_2)
  br label %bb2

bb3:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h857be11e154f62f4E"({ {}*, [3 x i64]* }* %_2) #18
  br label %bb4

cleanup:                                          ; preds = %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %15 = bitcast { i8*, i32 }* %2 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb2:                                              ; preds = %bb1
  %21 = bitcast %"core::result::Result<proc_macro::TokenStream, imp::LexError>"* %3 to i64*
  %22 = load i64, i64* %21, align 4
  ret i64 %22
}

; <proc_macro2::imp::TokenStream as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN68_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17h5b4076e9011cfc43E"(%"imp::TokenStream"* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca i32, align 4
  %_8 = alloca %"imp::DeferredTokenStream", align 8
  %_7 = alloca %"proc_macro::TokenStream", align 4
  %2 = alloca i8, align 1
  %3 = bitcast %"imp::TokenStream"* %self to i64*
  %_3 = load i64, i64* %3, align 8, !range !18
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::TokenStream"* %self to %"imp::TokenStream::Compiler"*
  %tts1 = getelementptr inbounds %"imp::TokenStream::Compiler", %"imp::TokenStream::Compiler"* %4, i32 0, i32 1
; call <proc_macro2::imp::DeferredTokenStream as core::clone::Clone>::clone
  call void @"_ZN76_$LT$proc_macro2..imp..DeferredTokenStream$u20$as$u20$core..clone..Clone$GT$5clone17hae49955a5d939d21E"(%"imp::DeferredTokenStream"* noalias nocapture sret(%"imp::DeferredTokenStream") dereferenceable(32) %_8, %"imp::DeferredTokenStream"* align 8 dereferenceable(32) %tts1)
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"imp::TokenStream"* %self to %"imp::TokenStream::Fallback"*
  %tts = getelementptr inbounds %"imp::TokenStream::Fallback", %"imp::TokenStream::Fallback"* %5, i32 0, i32 1
; call <proc_macro2::fallback::TokenStream as core::fmt::Display>::fmt
  %6 = call zeroext i1 @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17hb9480eefce8a5abeE"(%"fallback::TokenStream"* align 8 dereferenceable(24) %tts, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %2, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb1
  %8 = load i8, i8* %2, align 1, !range !2
  %9 = trunc i8 %8 to i1
  ret i1 %9

bb4:                                              ; preds = %bb3
; call proc_macro2::imp::DeferredTokenStream::into_token_stream
  %10 = call i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h4c1d1dbef48cadebE(%"imp::DeferredTokenStream"* noalias nocapture dereferenceable(32) %_8)
  store i32 %10, i32* %1, align 4
  %11 = bitcast %"proc_macro::TokenStream"* %_7 to i8*
  %12 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
; invoke <proc_macro::TokenStream as core::fmt::Display>::fmt
  %13 = invoke zeroext i1 @"_ZN62_$LT$proc_macro..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17h00142ea792643486E"(%"proc_macro::TokenStream"* align 4 dereferenceable(4) %_7, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %_7)
  br label %bb7

bb8:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %_7) #18
  br label %bb9

cleanup:                                          ; preds = %bb5
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb8

bb9:                                              ; preds = %bb8
  %20 = bitcast { i8*, i32 }* %0 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  resume { i8*, i32 } %25
}

; <proc_macro2::imp::TokenStream as core::convert::From<proc_macro::TokenStream>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN100_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenStream$GT$$GT$4from17hc4891675c0f7b4feE"(%"imp::TokenStream"* noalias nocapture sret(%"imp::TokenStream") dereferenceable(40) %0, i32 %1) unnamed_addr #1 {
start:
  %_3 = alloca %"proc_macro::TokenStream", align 4
  %_2 = alloca %"imp::DeferredTokenStream", align 8
  %2 = alloca i32, align 4
  %inner = alloca %"proc_macro::TokenStream", align 4
  store i32 %1, i32* %2, align 4
  %3 = bitcast %"proc_macro::TokenStream"* %inner to i8*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %5 = bitcast %"proc_macro::TokenStream"* %_3 to i8*
  %6 = bitcast %"proc_macro::TokenStream"* %inner to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  %7 = bitcast %"proc_macro::TokenStream"* %_3 to i32*
  %8 = load i32, i32* %7, align 4
; call proc_macro2::imp::DeferredTokenStream::new
  call void @_ZN11proc_macro23imp19DeferredTokenStream3new17h92eb4ad95da03661E(%"imp::DeferredTokenStream"* noalias nocapture sret(%"imp::DeferredTokenStream") dereferenceable(32) %_2, i32 %8)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"imp::TokenStream"* %0 to %"imp::TokenStream::Compiler"*
  %10 = getelementptr inbounds %"imp::TokenStream::Compiler", %"imp::TokenStream::Compiler"* %9, i32 0, i32 1
  %11 = bitcast %"imp::DeferredTokenStream"* %10 to i8*
  %12 = bitcast %"imp::DeferredTokenStream"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false)
  %13 = bitcast %"imp::TokenStream"* %0 to i64*
  store i64 0, i64* %13, align 8
  ret void
}

; proc_macro2::imp::<impl core::convert::From<proc_macro2::imp::TokenStream> for proc_macro::TokenStream>::from
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN11proc_macro23imp110_$LT$impl$u20$core..convert..From$LT$proc_macro2..imp..TokenStream$GT$$u20$for$u20$proc_macro..TokenStream$GT$4from17hfdf94ac7e2e97a7bE"(%"imp::TokenStream"* noalias nocapture dereferenceable(40) %inner) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca { i8*, i32 }, align 8
  %_10 = alloca %"alloc::string::String", align 8
  %_6 = alloca %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>", align 4
  %inner2 = alloca %"fallback::TokenStream", align 8
  %_4 = alloca %"imp::DeferredTokenStream", align 8
  %inner1 = alloca %"imp::DeferredTokenStream", align 8
  %4 = alloca %"proc_macro::TokenStream", align 4
  %5 = bitcast %"imp::TokenStream"* %inner to i64*
  %_2 = load i64, i64* %5, align 8, !range !18
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast %"imp::TokenStream"* %inner to %"imp::TokenStream::Compiler"*
  %7 = getelementptr inbounds %"imp::TokenStream::Compiler", %"imp::TokenStream::Compiler"* %6, i32 0, i32 1
  %8 = bitcast %"imp::DeferredTokenStream"* %inner1 to i8*
  %9 = bitcast %"imp::DeferredTokenStream"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  %10 = bitcast %"imp::DeferredTokenStream"* %_4 to i8*
  %11 = bitcast %"imp::DeferredTokenStream"* %inner1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false)
; call proc_macro2::imp::DeferredTokenStream::into_token_stream
  %12 = call i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h4c1d1dbef48cadebE(%"imp::DeferredTokenStream"* noalias nocapture dereferenceable(32) %_4)
  store i32 %12, i32* %0, align 4
  %13 = bitcast %"proc_macro::TokenStream"* %4 to i8*
  %14 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 4, i1 false)
  br label %bb11

bb1:                                              ; preds = %start
  %15 = bitcast %"imp::TokenStream"* %inner to %"imp::TokenStream::Fallback"*
  %16 = getelementptr inbounds %"imp::TokenStream::Fallback", %"imp::TokenStream::Fallback"* %15, i32 0, i32 1
  %17 = bitcast %"fallback::TokenStream"* %inner2 to i8*
  %18 = bitcast %"fallback::TokenStream"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
; invoke <T as alloc::string::ToString>::to_string
  invoke void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h1b0f56fe27d86521E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_10, %"fallback::TokenStream"* align 8 dereferenceable(24) %inner2)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %19 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb4e9891ef10b3b2fE"(%"alloc::string::String"* align 8 dereferenceable(24) %_10)
          to label %bb5 unwind label %cleanup3

bb10:                                             ; preds = %bb9, %cleanup
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h8ea3f1fe2253e242E"(%"fallback::TokenStream"* %inner2) #18
  br label %bb12

cleanup:                                          ; preds = %bb7, %bb1
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb10

bb5:                                              ; preds = %bb4
  %_8.0 = extractvalue { [0 x i8]*, i64 } %19, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %19, 1
; invoke core::str::<impl str>::parse
  %25 = invoke i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h96bf1284bafc9ddeE"([0 x i8]* nonnull align 1 %_8.0, i64 %_8.1)
          to label %bb6 unwind label %cleanup3

bb9:                                              ; preds = %cleanup3
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_10) #18
  br label %bb10

cleanup3:                                         ; preds = %bb6, %bb5, %bb4
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  %28 = extractvalue { i8*, i32 } %26, 1
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %27, i8** %29, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %28, i32* %30, align 8
  br label %bb9

bb6:                                              ; preds = %bb5
  store i32 %25, i32* %2, align 4
  %31 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %_6 to i8*
  %32 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 4, i1 false)
  %33 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %_6 to i32*
  %34 = load i32, i32* %33, align 4
; invoke core::result::Result<T,E>::unwrap
  %35 = invoke i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h116a095dcf4e3f12E"(i32 %34, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1739 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup3

bb7:                                              ; preds = %bb6
  store i32 %35, i32* %1, align 4
  %36 = bitcast %"proc_macro::TokenStream"* %4 to i8*
  %37 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 4, i1 false)
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_10)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h8ea3f1fe2253e242E"(%"fallback::TokenStream"* %inner2)
  br label %bb11

bb12:                                             ; preds = %bb10
  %38 = bitcast { i8*, i32 }* %3 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = insertvalue { i8*, i32 } undef, i8* %39, 0
  %43 = insertvalue { i8*, i32 } %42, i32 %41, 1
  resume { i8*, i32 } %43

bb11:                                             ; preds = %bb3, %bb8
  %44 = bitcast %"proc_macro::TokenStream"* %4 to i32*
  %45 = load i32, i32* %44, align 4
  ret i32 %45
}

; <proc_macro2::imp::TokenStream as core::convert::From<proc_macro2::fallback::TokenStream>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..TokenStream$GT$$GT$4from17hd43f769525d26fffE"(%"imp::TokenStream"* noalias nocapture sret(%"imp::TokenStream") dereferenceable(40) %0, %"fallback::TokenStream"* noalias nocapture dereferenceable(24) %inner) unnamed_addr #1 {
start:
  %_2 = alloca %"fallback::TokenStream", align 8
  %1 = bitcast %"fallback::TokenStream"* %_2 to i8*
  %2 = bitcast %"fallback::TokenStream"* %inner to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"imp::TokenStream"* %0 to %"imp::TokenStream::Fallback"*
  %4 = getelementptr inbounds %"imp::TokenStream::Fallback", %"imp::TokenStream::Fallback"* %3, i32 0, i32 1
  %5 = bitcast %"fallback::TokenStream"* %4 to i8*
  %6 = bitcast %"fallback::TokenStream"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = bitcast %"imp::TokenStream"* %0 to i64*
  store i64 1, i64* %7, align 8
  ret void
}

; proc_macro2::imp::into_compiler_token
; Function Attrs: nonlazybind uwtable
define i64 @_ZN11proc_macro23imp19into_compiler_token17h368fd4a54b3bd84dE(%TokenTree* noalias nocapture dereferenceable(48) %token) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %_27 = alloca %"imp::Literal", align 8
  %_26 = alloca %"proc_macro::Literal", align 4
  %tt3 = alloca %Literal, align 8
  %_24 = alloca %"imp::Ident", align 8
  %_23 = alloca %"proc_macro::Ident", align 4
  %tt2 = alloca %Ident, align 8
  %_21 = alloca %"proc_macro::Punct", align 4
  %_19 = alloca %Span, align 4
  %_18 = alloca %"imp::Span", align 4
  %_17 = alloca %"proc_macro::Span", align 4
  %punct = alloca %"proc_macro::Punct", align 4
  %_8 = alloca i8, align 1
  %spacing = alloca i8, align 1
  %tt1 = alloca %Punct, align 4
  %_5 = alloca %"imp::Group", align 8
  %_4 = alloca %"proc_macro::Group", align 4
  %tt = alloca %Group, align 8
  %10 = alloca %"proc_macro::TokenTree", align 4
  %11 = bitcast %TokenTree* %token to i32*
  %12 = load i32, i32* %11, align 8, !range !36
  %_2 = zext i32 %12 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb16
    i64 2, label %bb5
    i64 3, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %13 = bitcast %TokenTree* %token to %"TokenTree::Group"*
  %14 = getelementptr inbounds %"TokenTree::Group", %"TokenTree::Group"* %13, i32 0, i32 1
  %15 = bitcast %Group* %tt to i8*
  %16 = bitcast %Group* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 40, i1 false)
  %17 = bitcast %Group* %tt to %"imp::Group"*
  %18 = bitcast %"imp::Group"* %_5 to i8*
  %19 = bitcast %"imp::Group"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 40, i1 false)
; call proc_macro2::imp::Group::unwrap_nightly
  %20 = call i32 @_ZN11proc_macro23imp5Group14unwrap_nightly17h3c72bd47776ce556E(%"imp::Group"* noalias nocapture dereferenceable(40) %_5)
  store i32 %20, i32* %1, align 4
  %21 = bitcast %"proc_macro::Group"* %_4 to i8*
  %22 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 4, i1 false)
  br label %bb4

bb16:                                             ; preds = %start
  %23 = bitcast %TokenTree* %token to %"TokenTree::Ident"*
  %24 = getelementptr inbounds %"TokenTree::Ident", %"TokenTree::Ident"* %23, i32 0, i32 1
  %25 = bitcast %Ident* %tt2 to i8*
  %26 = bitcast %Ident* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 40, i1 false)
  %27 = bitcast %Ident* %tt2 to %"imp::Ident"*
  %28 = bitcast %"imp::Ident"* %_24 to i8*
  %29 = bitcast %"imp::Ident"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 40, i1 false)
; call proc_macro2::imp::Ident::unwrap_nightly
  %30 = call i32 @_ZN11proc_macro23imp5Ident14unwrap_nightly17hd1b1e8b73e0e8ff5E(%"imp::Ident"* noalias nocapture dereferenceable(40) %_24)
  store i32 %30, i32* %3, align 4
  %31 = bitcast %"proc_macro::Ident"* %_23 to i8*
  %32 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 4, i1 false)
  br label %bb17

bb5:                                              ; preds = %start
  %33 = bitcast %TokenTree* %token to %"TokenTree::Punct"*
  %34 = getelementptr inbounds %"TokenTree::Punct", %"TokenTree::Punct"* %33, i32 0, i32 1
  %35 = bitcast %Punct* %tt1 to i8*
  %36 = bitcast %Punct* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 12, i1 false)
; call proc_macro2::Punct::spacing
  %37 = call zeroext i1 @_ZN11proc_macro25Punct7spacing17hf8673d476566377bE(%Punct* align 4 dereferenceable(12) %tt1)
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %_8, align 1
  br label %bb6

bb1:                                              ; preds = %start
  %39 = bitcast %TokenTree* %token to %"TokenTree::Literal"*
  %40 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %39, i32 0, i32 1
  %41 = bitcast %Literal* %tt3 to i8*
  %42 = bitcast %Literal* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 32, i1 false)
  %43 = bitcast %Literal* %tt3 to %"imp::Literal"*
  %44 = bitcast %"imp::Literal"* %_27 to i8*
  %45 = bitcast %"imp::Literal"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 32, i1 false)
; call proc_macro2::imp::Literal::unwrap_nightly
  %46 = call i32 @_ZN11proc_macro23imp7Literal14unwrap_nightly17h6ee22c82881665d5E(%"imp::Literal"* noalias nocapture dereferenceable(32) %_27)
  store i32 %46, i32* %9, align 4
  %47 = bitcast %"proc_macro::Literal"* %_26 to i8*
  %48 = bitcast i32* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %48, i64 4, i1 false)
  br label %bb18

bb18:                                             ; preds = %bb1
  %49 = bitcast %"proc_macro::Literal"* %_26 to i32*
  %50 = load i32, i32* %49, align 4
; call <T as core::convert::Into<U>>::into
  %51 = call i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h37a9804b13a2baf9E"(i32 %50)
  store i64 %51, i64* %8, align 8
  %52 = bitcast %"proc_macro::TokenTree"* %10 to i8*
  %53 = bitcast i64* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 8 %53, i64 8, i1 false)
  br label %bb19

bb19:                                             ; preds = %bb4, %bb17, %bb15, %bb18
  %54 = bitcast %"proc_macro::TokenTree"* %10 to i64*
  %55 = load i64, i64* %54, align 4
  ret i64 %55

bb6:                                              ; preds = %bb5
  %56 = load i8, i8* %_8, align 1, !range !2
  %57 = trunc i8 %56 to i1
  %_10 = zext i1 %57 to i64
  switch i64 %_10, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb7:                                              ; preds = %bb6
  store i8 0, i8* %spacing, align 1
  br label %bb10

bb9:                                              ; preds = %bb6
  store i8 1, i8* %spacing, align 1
  br label %bb10

bb10:                                             ; preds = %bb7, %bb9
; call proc_macro2::Punct::as_char
  %_12 = call i32 @_ZN11proc_macro25Punct7as_char17h636cf22e76dea1e9E(%Punct* align 4 dereferenceable(12) %tt1), !range !80
  br label %bb11

bb11:                                             ; preds = %bb10
  %58 = load i8, i8* %spacing, align 1, !range !2
  %_14 = trunc i8 %58 to i1
; call proc_macro::Punct::new
  %59 = call i32 @_ZN10proc_macro5Punct3new17hb8e8ba25a4f60587E(i32 %_12, i1 zeroext %_14)
  store i32 %59, i32* %7, align 4
  %60 = bitcast %"proc_macro::Punct"* %punct to i8*
  %61 = bitcast i32* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 4, i1 false)
  br label %bb12

bb12:                                             ; preds = %bb11
; call proc_macro2::Punct::span
  %62 = call i32 @_ZN11proc_macro25Punct4span17h64991fb5a2b1854aE(%Punct* align 4 dereferenceable(12) %tt1)
  store i32 %62, i32* %6, align 4
  %63 = bitcast %Span* %_19 to i8*
  %64 = bitcast i32* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 4, i1 false)
  br label %bb13

bb13:                                             ; preds = %bb12
  %65 = bitcast %Span* %_19 to %"imp::Span"*
  %66 = bitcast %"imp::Span"* %_18 to i8*
  %67 = bitcast %"imp::Span"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 4, i1 false)
  %68 = bitcast %"imp::Span"* %_18 to i32*
  %69 = load i32, i32* %68, align 4
; call proc_macro2::imp::Span::unwrap_nightly
  %70 = call i32 @_ZN11proc_macro23imp4Span14unwrap_nightly17h6eb0484e575fcbb5E(i32 %69)
  store i32 %70, i32* %5, align 4
  %71 = bitcast %"proc_macro::Span"* %_17 to i8*
  %72 = bitcast i32* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 4, i1 false)
  br label %bb14

bb14:                                             ; preds = %bb13
  %73 = bitcast %"proc_macro::Span"* %_17 to i32*
  %74 = load i32, i32* %73, align 4
; call proc_macro::Punct::set_span
  call void @_ZN10proc_macro5Punct8set_span17h887e72ca090ea4b9E(%"proc_macro::Punct"* align 4 dereferenceable(4) %punct, i32 %74)
  br label %bb15

bb15:                                             ; preds = %bb14
  %75 = bitcast %"proc_macro::Punct"* %_21 to i8*
  %76 = bitcast %"proc_macro::Punct"* %punct to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 4, i1 false)
  %77 = bitcast %"proc_macro::Punct"* %_21 to i32*
  %78 = load i32, i32* %77, align 4
; call <T as core::convert::Into<U>>::into
  %79 = call i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h2fd22c8a997389bfE"(i32 %78)
  store i64 %79, i64* %4, align 8
  %80 = bitcast %"proc_macro::TokenTree"* %10 to i8*
  %81 = bitcast i64* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 8 %81, i64 8, i1 false)
  br label %bb19

bb17:                                             ; preds = %bb16
  %82 = bitcast %"proc_macro::Ident"* %_23 to i32*
  %83 = load i32, i32* %82, align 4
; call <T as core::convert::Into<U>>::into
  %84 = call i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h562c3ea49e2ed430E"(i32 %83)
  store i64 %84, i64* %2, align 8
  %85 = bitcast %"proc_macro::TokenTree"* %10 to i8*
  %86 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 8 %86, i64 8, i1 false)
  br label %bb19

bb4:                                              ; preds = %bb3
  %87 = bitcast %"proc_macro::Group"* %_4 to i32*
  %88 = load i32, i32* %87, align 4
; call <T as core::convert::Into<U>>::into
  %89 = call i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4ada3002c3319531E"(i32 %88)
  store i64 %89, i64* %0, align 8
  %90 = bitcast %"proc_macro::TokenTree"* %10 to i8*
  %91 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* align 8 %91, i64 8, i1 false)
  br label %bb19
}

; <proc_macro2::imp::TokenStream as core::convert::From<proc_macro2::TokenTree>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN99_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro2..TokenTree$GT$$GT$4from17hcc6ec8741931276eE"(%"imp::TokenStream"* noalias nocapture sret(%"imp::TokenStream") dereferenceable(40) %0, %TokenTree* noalias nocapture dereferenceable(48) %token) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_8 = alloca %TokenTree, align 8
  %_7 = alloca %"fallback::TokenStream", align 8
  %_6 = alloca %TokenTree, align 8
  %_5 = alloca %"proc_macro::TokenTree", align 4
  %_4 = alloca %"proc_macro::TokenStream", align 4
  %_3 = alloca %"imp::DeferredTokenStream", align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
; invoke proc_macro2::detection::inside_proc_macro
  %_2 = invoke zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb11:                                             ; preds = %cleanup
  %4 = load i8, i8* %_9, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb10, label %bb9

cleanup:                                          ; preds = %bb6, %bb4, %bb3, %bb2, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb11

bb6:                                              ; preds = %bb1
  store i8 0, i8* %_9, align 1
  %11 = bitcast %TokenTree* %_8 to i8*
  %12 = bitcast %TokenTree* %token to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 48, i1 false)
; invoke <T as core::convert::Into<U>>::into
  invoke void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5724af1066b10069E"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %_7, %TokenTree* noalias nocapture dereferenceable(48) %_8)
          to label %bb7 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_9, align 1
  %13 = bitcast %TokenTree* %_6 to i8*
  %14 = bitcast %TokenTree* %token to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 48, i1 false)
; invoke proc_macro2::imp::into_compiler_token
  %15 = invoke i64 @_ZN11proc_macro23imp19into_compiler_token17h368fd4a54b3bd84dE(%TokenTree* noalias nocapture dereferenceable(48) %_6)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 %15, i64* %2, align 8
  %16 = bitcast %"proc_macro::TokenTree"* %_5 to i8*
  %17 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 8 %17, i64 8, i1 false)
  %18 = bitcast %"proc_macro::TokenTree"* %_5 to i64*
  %19 = load i64, i64* %18, align 4
; invoke <T as core::convert::Into<U>>::into
  %20 = invoke i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h9b6183a2ec4c5ff2E"(i64 %19)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  store i32 %20, i32* %1, align 4
  %21 = bitcast %"proc_macro::TokenStream"* %_4 to i8*
  %22 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 4, i1 false)
  %23 = bitcast %"proc_macro::TokenStream"* %_4 to i32*
  %24 = load i32, i32* %23, align 4
; invoke proc_macro2::imp::DeferredTokenStream::new
  invoke void @_ZN11proc_macro23imp19DeferredTokenStream3new17h92eb4ad95da03661E(%"imp::DeferredTokenStream"* noalias nocapture sret(%"imp::DeferredTokenStream") dereferenceable(32) %_3, i32 %24)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %25 = bitcast %"imp::TokenStream"* %0 to %"imp::TokenStream::Compiler"*
  %26 = getelementptr inbounds %"imp::TokenStream::Compiler", %"imp::TokenStream::Compiler"* %25, i32 0, i32 1
  %27 = bitcast %"imp::DeferredTokenStream"* %26 to i8*
  %28 = bitcast %"imp::DeferredTokenStream"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 32, i1 false)
  %29 = bitcast %"imp::TokenStream"* %0 to i64*
  store i64 0, i64* %29, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb5
  ret void

bb7:                                              ; preds = %bb6
  %30 = bitcast %"imp::TokenStream"* %0 to %"imp::TokenStream::Fallback"*
  %31 = getelementptr inbounds %"imp::TokenStream::Fallback", %"imp::TokenStream::Fallback"* %30, i32 0, i32 1
  %32 = bitcast %"fallback::TokenStream"* %31 to i8*
  %33 = bitcast %"fallback::TokenStream"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false)
  %34 = bitcast %"imp::TokenStream"* %0 to i64*
  store i64 1, i64* %34, align 8
  br label %bb8

bb9:                                              ; preds = %bb10, %bb11
  %35 = bitcast { i8*, i32 }* %3 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40

bb10:                                             ; preds = %bb11
; call core::ptr::drop_in_place<proc_macro2::TokenTree>
  call void @"_ZN4core3ptr43drop_in_place$LT$proc_macro2..TokenTree$GT$17hfdd6d4f4cefd2ec4E"(%TokenTree* %token) #18
  br label %bb9
}

; <proc_macro2::imp::TokenStream as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17h79c6732039919a0eE"(%"imp::TokenStream"* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca i32, align 4
  %_8 = alloca %"imp::DeferredTokenStream", align 8
  %_7 = alloca %"proc_macro::TokenStream", align 4
  %2 = alloca i8, align 1
  %3 = bitcast %"imp::TokenStream"* %self to i64*
  %_3 = load i64, i64* %3, align 8, !range !18
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::TokenStream"* %self to %"imp::TokenStream::Compiler"*
  %tts1 = getelementptr inbounds %"imp::TokenStream::Compiler", %"imp::TokenStream::Compiler"* %4, i32 0, i32 1
; call <proc_macro2::imp::DeferredTokenStream as core::clone::Clone>::clone
  call void @"_ZN76_$LT$proc_macro2..imp..DeferredTokenStream$u20$as$u20$core..clone..Clone$GT$5clone17hae49955a5d939d21E"(%"imp::DeferredTokenStream"* noalias nocapture sret(%"imp::DeferredTokenStream") dereferenceable(32) %_8, %"imp::DeferredTokenStream"* align 8 dereferenceable(32) %tts1)
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"imp::TokenStream"* %self to %"imp::TokenStream::Fallback"*
  %tts = getelementptr inbounds %"imp::TokenStream::Fallback", %"imp::TokenStream::Fallback"* %5, i32 0, i32 1
; call <proc_macro2::fallback::TokenStream as core::fmt::Debug>::fmt
  %6 = call zeroext i1 @"_ZN71_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17h2e9cf8adb599825aE"(%"fallback::TokenStream"* align 8 dereferenceable(24) %tts, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %2, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb1
  %8 = load i8, i8* %2, align 1, !range !2
  %9 = trunc i8 %8 to i1
  ret i1 %9

bb4:                                              ; preds = %bb3
; call proc_macro2::imp::DeferredTokenStream::into_token_stream
  %10 = call i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h4c1d1dbef48cadebE(%"imp::DeferredTokenStream"* noalias nocapture dereferenceable(32) %_8)
  store i32 %10, i32* %1, align 4
  %11 = bitcast %"proc_macro::TokenStream"* %_7 to i8*
  %12 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
; invoke <proc_macro::TokenStream as core::fmt::Debug>::fmt
  %13 = invoke zeroext i1 @"_ZN60_$LT$proc_macro..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17he8a3cc73666ac3b8E"(%"proc_macro::TokenStream"* align 4 dereferenceable(4) %_7, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %_7)
  br label %bb7

bb8:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %_7) #18
  br label %bb9

cleanup:                                          ; preds = %bb5
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb8

bb9:                                              ; preds = %bb8
  %20 = bitcast { i8*, i32 }* %0 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  resume { i8*, i32 } %25
}

; proc_macro2::imp::LexError::span
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp8LexError4span17h5f2558f66f709df8E(i8* align 1 dereferenceable(1) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca %"imp::Span", align 4
  %2 = load i8, i8* %self, align 1, !range !2
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call proc_macro2::imp::Span::call_site
  %4 = call i32 @_ZN11proc_macro23imp4Span9call_site17hb7aa409b99319790E()
  store i32 %4, i32* %0, align 4
  %5 = bitcast %"imp::Span"* %1 to i8*
  %6 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  br label %bb5

bb1:                                              ; preds = %start
  %7 = bitcast i8* %self to %"imp::LexError::Fallback"*
  %e = getelementptr inbounds %"imp::LexError::Fallback", %"imp::LexError::Fallback"* %7, i32 0, i32 1
; call proc_macro2::fallback::LexError::span
  call void @_ZN11proc_macro28fallback8LexError4span17h38bc0da87e80dff2E(%"fallback::LexError"* nonnull align 1 %e)
  br label %bb4

bb4:                                              ; preds = %bb1
  %8 = bitcast %"imp::Span"* %1 to i32*
  store i32 0, i32* %8, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %9 = bitcast %"imp::Span"* %1 to i32*
  %10 = load i32, i32* %9, align 4
  ret i32 %10
}

; <proc_macro2::imp::LexError as core::convert::From<proc_macro::LexError>>::from
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN94_$LT$proc_macro2..imp..LexError$u20$as$u20$core..convert..From$LT$proc_macro..LexError$GT$$GT$4from17ha5d4f7514820a95cE"() unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  store i8 0, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; <proc_macro2::imp::LexError as core::convert::From<proc_macro2::fallback::LexError>>::from
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN105_$LT$proc_macro2..imp..LexError$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..LexError$GT$$GT$4from17h656cb523871d4b0eE"() unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  store i8 1, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; <proc_macro2::imp::LexError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN63_$LT$proc_macro2..imp..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17hc4421a6fad2f0cbcE"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = load i8, i8* %self, align 1, !range !2
  %2 = trunc i8 %1 to i1
  %_3 = zext i1 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast i8* %self to %"imp::LexError::Compiler"*
  %e1 = getelementptr inbounds %"imp::LexError::Compiler", %"imp::LexError::Compiler"* %3, i32 0, i32 1
; call <proc_macro::LexError as core::fmt::Debug>::fmt
  %4 = call zeroext i1 @"_ZN57_$LT$proc_macro..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17h1c1fe93c83b7c8a2E"(%"proc_macro::LexError"* nonnull align 1 %e1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %6 = bitcast i8* %self to %"imp::LexError::Fallback"*
  %e = getelementptr inbounds %"imp::LexError::Fallback", %"imp::LexError::Fallback"* %6, i32 0, i32 1
; call <proc_macro2::fallback::LexError as core::fmt::Debug>::fmt
  %7 = call zeroext i1 @"_ZN68_$LT$proc_macro2..fallback..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17he9b7cf47a7ee122bE"(%"fallback::LexError"* nonnull align 1 %e, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8, i8* %0, align 1, !range !2
  %10 = trunc i8 %9 to i1
  ret i1 %10
}

; <proc_macro2::imp::LexError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN65_$LT$proc_macro2..imp..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17h2e971f66a99e7cc8E"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = load i8, i8* %self, align 1, !range !2
  %2 = trunc i8 %1 to i1
  %_3 = zext i1 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast i8* %self to %"imp::LexError::Compiler"*
  %e1 = getelementptr inbounds %"imp::LexError::Compiler", %"imp::LexError::Compiler"* %3, i32 0, i32 1
; call <proc_macro::LexError as core::fmt::Display>::fmt
  %4 = call zeroext i1 @"_ZN59_$LT$proc_macro..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17h35dad958264b5065E"(%"proc_macro::LexError"* nonnull align 1 %e1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %6 = bitcast i8* %self to %"imp::LexError::Fallback"*
  %e = getelementptr inbounds %"imp::LexError::Fallback", %"imp::LexError::Fallback"* %6, i32 0, i32 1
; call <proc_macro2::fallback::LexError as core::fmt::Display>::fmt
  %7 = call zeroext i1 @"_ZN70_$LT$proc_macro2..fallback..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17h1aa012f5546e8c0dE"(%"fallback::LexError"* nonnull align 1 %e, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8, i8* %0, align 1, !range !2
  %10 = trunc i8 %9 to i1
  ret i1 %10
}

; <proc_macro2::imp::TokenStream as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN91_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb2f556f95dc321e5E"(%"imp::TokenTreeIter"* noalias nocapture sret(%"imp::TokenTreeIter") dereferenceable(40) %0, %"imp::TokenStream"* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %_9 = alloca %"fallback::TokenStream", align 8
  %_8 = alloca %"alloc::vec::into_iter::IntoIter<TokenTree>", align 8
  %tts1 = alloca %"fallback::TokenStream", align 8
  %_6 = alloca %"imp::DeferredTokenStream", align 8
  %_5 = alloca %"proc_macro::TokenStream", align 4
  %_4 = alloca %"proc_macro::token_stream::IntoIter", align 4
  %tts = alloca %"imp::DeferredTokenStream", align 8
  %3 = bitcast %"imp::TokenStream"* %self to i64*
  %_2 = load i64, i64* %3, align 8, !range !18
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::TokenStream"* %self to %"imp::TokenStream::Compiler"*
  %5 = getelementptr inbounds %"imp::TokenStream::Compiler", %"imp::TokenStream::Compiler"* %4, i32 0, i32 1
  %6 = bitcast %"imp::DeferredTokenStream"* %tts to i8*
  %7 = bitcast %"imp::DeferredTokenStream"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false)
  %8 = bitcast %"imp::DeferredTokenStream"* %_6 to i8*
  %9 = bitcast %"imp::DeferredTokenStream"* %tts to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
; call proc_macro2::imp::DeferredTokenStream::into_token_stream
  %10 = call i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h4c1d1dbef48cadebE(%"imp::DeferredTokenStream"* noalias nocapture dereferenceable(32) %_6)
  store i32 %10, i32* %2, align 4
  %11 = bitcast %"proc_macro::TokenStream"* %_5 to i8*
  %12 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %13 = bitcast %"imp::TokenStream"* %self to %"imp::TokenStream::Fallback"*
  %14 = getelementptr inbounds %"imp::TokenStream::Fallback", %"imp::TokenStream::Fallback"* %13, i32 0, i32 1
  %15 = bitcast %"fallback::TokenStream"* %tts1 to i8*
  %16 = bitcast %"fallback::TokenStream"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  %17 = bitcast %"fallback::TokenStream"* %_9 to i8*
  %18 = bitcast %"fallback::TokenStream"* %tts1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
; call <proc_macro2::fallback::TokenStream as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN96_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h647f703566f6b801E"(%"alloc::vec::into_iter::IntoIter<TokenTree>"* noalias nocapture sret(%"alloc::vec::into_iter::IntoIter<TokenTree>") dereferenceable(32) %_8, %"fallback::TokenStream"* noalias nocapture dereferenceable(24) %_9)
  br label %bb6

bb6:                                              ; preds = %bb1
  %19 = bitcast %"imp::TokenTreeIter"* %0 to %"imp::TokenTreeIter::Fallback"*
  %20 = getelementptr inbounds %"imp::TokenTreeIter::Fallback", %"imp::TokenTreeIter::Fallback"* %19, i32 0, i32 1
  %21 = bitcast %"alloc::vec::into_iter::IntoIter<TokenTree>"* %20 to i8*
  %22 = bitcast %"alloc::vec::into_iter::IntoIter<TokenTree>"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false)
  %23 = bitcast %"imp::TokenTreeIter"* %0 to i32*
  store i32 1, i32* %23, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  ret void

bb4:                                              ; preds = %bb3
  %24 = bitcast %"proc_macro::TokenStream"* %_5 to i32*
  %25 = load i32, i32* %24, align 4
; call proc_macro::token_stream::<impl core::iter::traits::collect::IntoIterator for proc_macro::TokenStream>::into_iter
  %26 = call i32 @"_ZN10proc_macro12token_stream95_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$proc_macro..TokenStream$GT$9into_iter17h17e6056c22875a88E"(i32 %25)
  store i32 %26, i32* %1, align 4
  %27 = bitcast %"proc_macro::token_stream::IntoIter"* %_4 to i8*
  %28 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 4, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
  %29 = bitcast %"imp::TokenTreeIter"* %0 to %"imp::TokenTreeIter::Compiler"*
  %30 = getelementptr inbounds %"imp::TokenTreeIter::Compiler", %"imp::TokenTreeIter::Compiler"* %29, i32 0, i32 1
  %31 = bitcast %"proc_macro::token_stream::IntoIter"* %30 to i8*
  %32 = bitcast %"proc_macro::token_stream::IntoIter"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 4, i1 false)
  %33 = bitcast %"imp::TokenTreeIter"* %0 to i32*
  store i32 0, i32* %33, align 8
  br label %bb7
}

; <proc_macro2::imp::TokenTreeIter as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define void @"_ZN90_$LT$proc_macro2..imp..TokenTreeIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0e068c0a24231c4fE"(%"core::option::Option<TokenTree>"* noalias nocapture sret(%"core::option::Option<TokenTree>") dereferenceable(48) %0, %"imp::TokenTreeIter"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i96, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %_43 = alloca %"proc_macro::Literal", align 4
  %_42 = alloca %"imp::Literal", align 8
  %_41 = alloca %Literal, align 8
  %l = alloca %"proc_macro::Literal", align 4
  %_39 = alloca %"proc_macro::Ident", align 4
  %_38 = alloca %"imp::Ident", align 8
  %_37 = alloca %Ident, align 8
  %s = alloca %"proc_macro::Ident", align 4
  %_35 = alloca %Punct, align 4
  %_33 = alloca %"proc_macro::Span", align 4
  %_32 = alloca %"imp::Span", align 4
  %_31 = alloca %Span, align 4
  %o = alloca %Punct, align 4
  %_22 = alloca i8, align 1
  %spacing = alloca i8, align 1
  %tt1 = alloca %"proc_macro::Punct", align 4
  %_19 = alloca %"proc_macro::Group", align 4
  %_18 = alloca %"imp::Group", align 8
  %_17 = alloca %Group, align 8
  %tt = alloca %"proc_macro::Group", align 4
  %_14 = alloca %TokenTree, align 8
  %val = alloca %"proc_macro::TokenTree", align 4
  %_6 = alloca %"core::option::Option<proc_macro::TokenTree>", align 4
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>", align 4
  %token = alloca %"proc_macro::TokenTree", align 4
  %6 = bitcast %"imp::TokenTreeIter"* %self to i32*
  %7 = load i32, i32* %6, align 8, !range !19
  %_3 = zext i32 %7 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast %"imp::TokenTreeIter"* %self to %"imp::TokenTreeIter::Compiler"*
  %iter2 = getelementptr inbounds %"imp::TokenTreeIter::Compiler", %"imp::TokenTreeIter::Compiler"* %8, i32 0, i32 1
; call <proc_macro::token_stream::IntoIter as core::iter::traits::iterator::Iterator>::next
  %9 = call i64 @"_ZN93_$LT$proc_macro..token_stream..IntoIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4e33bccb4bdf9f32E"(%"proc_macro::token_stream::IntoIter"* align 4 dereferenceable(4) %iter2)
  store i64 %9, i64* %5, align 8
  %10 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_6 to i8*
  %11 = bitcast i64* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 8 %11, i64 8, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %12 = bitcast %"imp::TokenTreeIter"* %self to %"imp::TokenTreeIter::Fallback"*
  %iter = getelementptr inbounds %"imp::TokenTreeIter::Fallback", %"imp::TokenTreeIter::Fallback"* %12, i32 0, i32 1
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h70a5125afbb54fe8E"(%"core::option::Option<TokenTree>"* noalias nocapture sret(%"core::option::Option<TokenTree>") dereferenceable(48) %0, %"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %iter)
  br label %bb29

bb29:                                             ; preds = %bb9, %bb1
  br label %bb30

bb4:                                              ; preds = %bb3
  %13 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_6 to i64*
  %14 = load i64, i64* %13, align 4
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %15 = call i64 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he4599fd3f2004516E"(i64 %14)
  store i64 %15, i64* %4, align 8
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>"* %_5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 8 %17, i64 8, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>"* %_5 to i32*
  %19 = load i32, i32* %18, align 4, !range !31
  %20 = sub i32 %19, 4
  %21 = icmp eq i32 %20, 0
  %_8 = select i1 %21, i64 1, i64 0
  switch i64 %_8, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  %22 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>"* %_5 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>::Continue"*
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::TokenTree>::Continue"* %22 to %"proc_macro::TokenTree"*
  %24 = bitcast %"proc_macro::TokenTree"* %val to i8*
  %25 = bitcast %"proc_macro::TokenTree"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 8, i1 false)
  %26 = bitcast %"proc_macro::TokenTree"* %token to i8*
  %27 = bitcast %"proc_macro::TokenTree"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 8, i1 false)
  %28 = bitcast %"proc_macro::TokenTree"* %token to i32*
  %29 = load i32, i32* %28, align 4, !range !36
  %_15 = zext i32 %29 to i64
  switch i64 %_15, label %bb11 [
    i64 0, label %bb12
    i64 1, label %bb25
    i64 2, label %bb14
    i64 3, label %bb10
  ]

bb8:                                              ; preds = %bb5
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  call void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h01f1ed782db96195E"(%"core::option::Option<TokenTree>"* noalias nocapture sret(%"core::option::Option<TokenTree>") dereferenceable(48) %0)
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb29

bb30:                                             ; preds = %bb28, %bb29
  ret void

bb11:                                             ; preds = %bb6
  unreachable

bb12:                                             ; preds = %bb6
  %30 = bitcast %"proc_macro::TokenTree"* %token to %"proc_macro::TokenTree::Group"*
  %31 = getelementptr inbounds %"proc_macro::TokenTree::Group", %"proc_macro::TokenTree::Group"* %30, i32 0, i32 1
  %32 = bitcast %"proc_macro::Group"* %tt to i8*
  %33 = bitcast %"proc_macro::Group"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 4, i1 false)
  %34 = bitcast %"proc_macro::Group"* %_19 to i8*
  %35 = bitcast %"proc_macro::Group"* %tt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 4, i1 false)
  %36 = bitcast %"imp::Group"* %_18 to %"imp::Group::Compiler"*
  %37 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %36, i32 0, i32 1
  %38 = bitcast %"proc_macro::Group"* %37 to i8*
  %39 = bitcast %"proc_macro::Group"* %_19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %39, i64 4, i1 false)
  %40 = bitcast %"imp::Group"* %_18 to i32*
  store i32 0, i32* %40, align 8
; call proc_macro2::Group::_new
  call void @_ZN11proc_macro25Group4_new17hed0998337e9e21e8E(%Group* noalias nocapture sret(%Group) dereferenceable(40) %_17, %"imp::Group"* noalias nocapture dereferenceable(40) %_18)
  br label %bb13

bb25:                                             ; preds = %bb6
  %41 = bitcast %"proc_macro::TokenTree"* %token to %"proc_macro::TokenTree::Ident"*
  %42 = getelementptr inbounds %"proc_macro::TokenTree::Ident", %"proc_macro::TokenTree::Ident"* %41, i32 0, i32 1
  %43 = bitcast %"proc_macro::Ident"* %s to i8*
  %44 = bitcast %"proc_macro::Ident"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %44, i64 4, i1 false)
  %45 = bitcast %"proc_macro::Ident"* %_39 to i8*
  %46 = bitcast %"proc_macro::Ident"* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64 4, i1 false)
  %47 = bitcast %"imp::Ident"* %_38 to %"imp::Ident::Compiler"*
  %48 = getelementptr inbounds %"imp::Ident::Compiler", %"imp::Ident::Compiler"* %47, i32 0, i32 1
  %49 = bitcast %"proc_macro::Ident"* %48 to i8*
  %50 = bitcast %"proc_macro::Ident"* %_39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 4, i1 false)
  %51 = bitcast %"imp::Ident"* %_38 to i32*
  store i32 0, i32* %51, align 8
; call proc_macro2::Ident::_new
  call void @_ZN11proc_macro25Ident4_new17h4efc395750c74d09E(%Ident* noalias nocapture sret(%Ident) dereferenceable(40) %_37, %"imp::Ident"* noalias nocapture dereferenceable(40) %_38)
  br label %bb26

bb14:                                             ; preds = %bb6
  %52 = bitcast %"proc_macro::TokenTree"* %token to %"proc_macro::TokenTree::Punct"*
  %53 = getelementptr inbounds %"proc_macro::TokenTree::Punct", %"proc_macro::TokenTree::Punct"* %52, i32 0, i32 1
  %54 = bitcast %"proc_macro::Punct"* %tt1 to i8*
  %55 = bitcast %"proc_macro::Punct"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %55, i64 4, i1 false)
; call proc_macro::Punct::spacing
  %56 = call zeroext i1 @_ZN10proc_macro5Punct7spacing17h27f2e8c6d514e336E(%"proc_macro::Punct"* align 4 dereferenceable(4) %tt1)
  %57 = zext i1 %56 to i8
  store i8 %57, i8* %_22, align 1
  br label %bb15

bb10:                                             ; preds = %bb6
  %58 = bitcast %"proc_macro::TokenTree"* %token to %"proc_macro::TokenTree::Literal"*
  %59 = getelementptr inbounds %"proc_macro::TokenTree::Literal", %"proc_macro::TokenTree::Literal"* %58, i32 0, i32 1
  %60 = bitcast %"proc_macro::Literal"* %l to i8*
  %61 = bitcast %"proc_macro::Literal"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 4, i1 false)
  %62 = bitcast %"proc_macro::Literal"* %_43 to i8*
  %63 = bitcast %"proc_macro::Literal"* %l to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 4, i1 false)
  %64 = bitcast %"imp::Literal"* %_42 to %"imp::Literal::Compiler"*
  %65 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %64, i32 0, i32 1
  %66 = bitcast %"proc_macro::Literal"* %65 to i8*
  %67 = bitcast %"proc_macro::Literal"* %_43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 4, i1 false)
  %68 = bitcast %"imp::Literal"* %_42 to i32*
  store i32 0, i32* %68, align 8
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %_41, %"imp::Literal"* noalias nocapture dereferenceable(32) %_42)
  br label %bb27

bb27:                                             ; preds = %bb10
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he191eaa88bc0bebeE"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %_14, %Literal* noalias nocapture dereferenceable(32) %_41)
  br label %bb28

bb28:                                             ; preds = %bb13, %bb26, %bb24, %bb27
  %69 = bitcast %"core::option::Option<TokenTree>"* %0 to %"core::option::Option<TokenTree>::Some"*
  %70 = bitcast %"core::option::Option<TokenTree>::Some"* %69 to %TokenTree*
  %71 = bitcast %TokenTree* %70 to i8*
  %72 = bitcast %TokenTree* %_14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 48, i1 false)
  br label %bb30

bb15:                                             ; preds = %bb14
  %73 = load i8, i8* %_22, align 1, !range !2
  %74 = trunc i8 %73 to i1
  %_24 = zext i1 %74 to i64
  switch i64 %_24, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb15
  unreachable

bb16:                                             ; preds = %bb15
  store i8 0, i8* %spacing, align 1
  br label %bb19

bb18:                                             ; preds = %bb15
  store i8 1, i8* %spacing, align 1
  br label %bb19

bb19:                                             ; preds = %bb16, %bb18
; call proc_macro::Punct::as_char
  %_26 = call i32 @_ZN10proc_macro5Punct7as_char17h7c7339ebc627c3cfE(%"proc_macro::Punct"* align 4 dereferenceable(4) %tt1), !range !80
  br label %bb20

bb20:                                             ; preds = %bb19
  %75 = load i8, i8* %spacing, align 1, !range !2
  %_28 = trunc i8 %75 to i1
; call proc_macro2::Punct::new
  %76 = call i96 @_ZN11proc_macro25Punct3new17h092c0d122b5304dfE(i32 %_26, i1 zeroext %_28)
  store i96 %76, i96* %3, align 8
  %77 = bitcast %Punct* %o to i8*
  %78 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 8 %78, i64 12, i1 false)
  br label %bb21

bb21:                                             ; preds = %bb20
; call proc_macro::Punct::span
  %79 = call i32 @_ZN10proc_macro5Punct4span17h6f604745e323d964E(%"proc_macro::Punct"* align 4 dereferenceable(4) %tt1)
  store i32 %79, i32* %2, align 4
  %80 = bitcast %"proc_macro::Span"* %_33 to i8*
  %81 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 4, i1 false)
  br label %bb22

bb22:                                             ; preds = %bb21
  %82 = bitcast %"imp::Span"* %_32 to %"imp::Span::Compiler"*
  %83 = bitcast %"imp::Span::Compiler"* %82 to %"proc_macro::Span"*
  %84 = bitcast %"proc_macro::Span"* %83 to i8*
  %85 = bitcast %"proc_macro::Span"* %_33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %85, i64 4, i1 false)
  %86 = bitcast %"imp::Span"* %_32 to i32*
  %87 = load i32, i32* %86, align 4
; call proc_macro2::Span::_new
  %88 = call i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %87)
  store i32 %88, i32* %1, align 4
  %89 = bitcast %Span* %_31 to i8*
  %90 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %90, i64 4, i1 false)
  br label %bb23

bb23:                                             ; preds = %bb22
  %91 = bitcast %Span* %_31 to i32*
  %92 = load i32, i32* %91, align 4
; call proc_macro2::Punct::set_span
  call void @_ZN11proc_macro25Punct8set_span17h15697e209dacbb5dE(%Punct* align 4 dereferenceable(12) %o, i32 %92)
  br label %bb24

bb24:                                             ; preds = %bb23
  %93 = bitcast %Punct* %_35 to i8*
  %94 = bitcast %Punct* %o to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 12, i1 false)
  %95 = bitcast %Punct* %_35 to i96*
  %96 = load i96, i96* %95, align 4
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h388c60fbcabe1925E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %_14, i96 %96)
  br label %bb28

bb26:                                             ; preds = %bb25
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h780f9290d002de92E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %_14, %Ident* noalias nocapture dereferenceable(40) %_37)
  br label %bb28

bb13:                                             ; preds = %bb12
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5e86063d0b748c21E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %_14, %Group* noalias nocapture dereferenceable(40) %_17)
  br label %bb28
}

; <proc_macro2::imp::TokenTreeIter as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nonlazybind uwtable
define void @"_ZN90_$LT$proc_macro2..imp..TokenTreeIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hc5f538d43e33a203E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"imp::TokenTreeIter"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"imp::TokenTreeIter"* %self to i32*
  %2 = load i32, i32* %1, align 8, !range !19
  %_2 = zext i32 %2 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"imp::TokenTreeIter"* %self to %"imp::TokenTreeIter::Compiler"*
  %tts1 = getelementptr inbounds %"imp::TokenTreeIter::Compiler", %"imp::TokenTreeIter::Compiler"* %3, i32 0, i32 1
; call core::iter::traits::iterator::Iterator::size_hint
  call void @_ZN4core4iter6traits8iterator8Iterator9size_hint17hda17a0e4a2da2cb6E({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"proc_macro::token_stream::IntoIter"* align 4 dereferenceable(4) %tts1)
  br label %bb4

bb1:                                              ; preds = %start
  %4 = bitcast %"imp::TokenTreeIter"* %self to %"imp::TokenTreeIter::Fallback"*
  %tts = getelementptr inbounds %"imp::TokenTreeIter::Fallback", %"imp::TokenTreeIter::Fallback"* %4, i32 0, i32 1
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hb88b0ce347d580e0E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"alloc::vec::into_iter::IntoIter<TokenTree>"* align 8 dereferenceable(32) %tts)
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <proc_macro2::imp::TokenTreeIter as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN68_$LT$proc_macro2..imp..TokenTreeIter$u20$as$u20$core..fmt..Debug$GT$3fmt17h0134321866a55ee6E"(%"imp::TokenTreeIter"* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc1740 to [0 x i8]*), i64 13)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; proc_macro2::imp::Span::call_site
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp4Span9call_site17hb7aa409b99319790E() unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_2 = alloca %"proc_macro::Span", align 4
  %1 = alloca %"imp::Span", align 4
; call proc_macro2::detection::inside_proc_macro
  %_1 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_1, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Span::call_site
  call void @_ZN11proc_macro28fallback4Span9call_site17h60bcec765db6ac7eE()
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Span::call_site
  %2 = call i32 @_ZN10proc_macro4Span9call_site17h8f35768e00c066b6E()
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"proc_macro::Span"* %_2 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Span"* %1 to %"imp::Span::Compiler"*
  %6 = bitcast %"imp::Span::Compiler"* %5 to %"proc_macro::Span"*
  %7 = bitcast %"proc_macro::Span"* %6 to i8*
  %8 = bitcast %"proc_macro::Span"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %9 = bitcast %"imp::Span"* %1 to i32*
  %10 = load i32, i32* %9, align 4
  ret i32 %10

bb5:                                              ; preds = %bb4
  %11 = bitcast %"imp::Span"* %1 to i32*
  store i32 0, i32* %11, align 4
  br label %bb6
}

; proc_macro2::imp::Span::mixed_site
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp4Span10mixed_site17hf6d22675b5d03d42E() unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_2 = alloca %"proc_macro::Span", align 4
  %1 = alloca %"imp::Span", align 4
; call proc_macro2::detection::inside_proc_macro
  %_1 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_1, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Span::mixed_site
  call void @_ZN11proc_macro28fallback4Span10mixed_site17hd6f739960fcfc4fbE()
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Span::mixed_site
  %2 = call i32 @_ZN10proc_macro4Span10mixed_site17h3b581ceeeee3f89eE()
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"proc_macro::Span"* %_2 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Span"* %1 to %"imp::Span::Compiler"*
  %6 = bitcast %"imp::Span::Compiler"* %5 to %"proc_macro::Span"*
  %7 = bitcast %"proc_macro::Span"* %6 to i8*
  %8 = bitcast %"proc_macro::Span"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %9 = bitcast %"imp::Span"* %1 to i32*
  %10 = load i32, i32* %9, align 4
  ret i32 %10

bb5:                                              ; preds = %bb4
  %11 = bitcast %"imp::Span"* %1 to i32*
  store i32 0, i32* %11, align 4
  br label %bb6
}

; proc_macro2::imp::Span::resolved_at
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp4Span11resolved_at17h4f15eb9b4752c558E(%"imp::Span"* align 4 dereferenceable(4) %self, i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_13 = alloca %"proc_macro::Span", align 4
  %_11 = alloca %"proc_macro::Span", align 4
  %b = alloca %"proc_macro::Span", align 4
  %_5 = alloca %"imp::Span", align 4
  %_3 = alloca { %"imp::Span"*, %"imp::Span", [1 x i32] }, align 8
  %2 = alloca %"imp::Span", align 4
  %3 = alloca i32, align 4
  %other = alloca %"imp::Span", align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %"imp::Span"* %other to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %"imp::Span"* %_5 to i8*
  %7 = bitcast %"imp::Span"* %other to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Span"**
  store %"imp::Span"* %self, %"imp::Span"** %8, align 8
  %9 = getelementptr inbounds { %"imp::Span"*, %"imp::Span", [1 x i32] }, { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %10 = bitcast %"imp::Span"* %9 to i8*
  %11 = bitcast %"imp::Span"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 4, i1 false)
  %12 = bitcast { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Span"**
  %13 = load %"imp::Span"*, %"imp::Span"** %12, align 8, !nonnull !20
  %14 = bitcast %"imp::Span"* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  %_8 = select i1 %16, i64 1, i64 0
  switch i64 %_8, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %bb1, %bb3, %start
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17haa8ba9ba33e455c9E() #19
  unreachable

bb1:                                              ; preds = %start
  %17 = getelementptr inbounds { %"imp::Span"*, %"imp::Span", [1 x i32] }, { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %18 = bitcast %"imp::Span"* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  %_6 = select i1 %20, i64 1, i64 0
  %21 = icmp eq i64 %_6, 0
  br i1 %21, label %bb4, label %bb2

bb3:                                              ; preds = %start
  %22 = getelementptr inbounds { %"imp::Span"*, %"imp::Span", [1 x i32] }, { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %23 = bitcast %"imp::Span"* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  %_7 = select i1 %25, i64 1, i64 0
  %26 = icmp eq i64 %_7, 1
  br i1 %26, label %bb6, label %bb2

bb6:                                              ; preds = %bb3
  %27 = bitcast { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Span"**
  %28 = load %"imp::Span"*, %"imp::Span"** %27, align 8, !nonnull !20
  %29 = bitcast %"imp::Span"* %28 to %"imp::Span::Fallback"*
  %a = bitcast %"imp::Span::Fallback"* %29 to %"fallback::Span"*
; call proc_macro2::fallback::Span::resolved_at
  call void @_ZN11proc_macro28fallback4Span11resolved_at17h3c96c1be4c60b898E(%"fallback::Span"* nonnull align 1 %a)
  br label %bb7

bb7:                                              ; preds = %bb6
  %30 = bitcast %"imp::Span"* %2 to i32*
  store i32 0, i32* %30, align 4
  br label %bb8

bb8:                                              ; preds = %bb5, %bb7
  %31 = bitcast %"imp::Span"* %2 to i32*
  %32 = load i32, i32* %31, align 4
  ret i32 %32

bb4:                                              ; preds = %bb1
  %33 = bitcast { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Span"**
  %34 = load %"imp::Span"*, %"imp::Span"** %33, align 8, !nonnull !20
  %35 = bitcast %"imp::Span"* %34 to %"imp::Span::Compiler"*
  %a1 = bitcast %"imp::Span::Compiler"* %35 to %"proc_macro::Span"*
  %36 = getelementptr inbounds { %"imp::Span"*, %"imp::Span", [1 x i32] }, { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %37 = bitcast %"imp::Span"* %36 to %"imp::Span::Compiler"*
  %38 = bitcast %"imp::Span::Compiler"* %37 to %"proc_macro::Span"*
  %39 = bitcast %"proc_macro::Span"* %b to i8*
  %40 = bitcast %"proc_macro::Span"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 8 %40, i64 4, i1 false)
  %41 = bitcast %"proc_macro::Span"* %_13 to i8*
  %42 = bitcast %"proc_macro::Span"* %b to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %42, i64 4, i1 false)
  %43 = bitcast %"proc_macro::Span"* %_13 to i32*
  %44 = load i32, i32* %43, align 4
; call proc_macro::Span::resolved_at
  %45 = call i32 @_ZN10proc_macro4Span11resolved_at17h888482c32505fc5aE(%"proc_macro::Span"* align 4 dereferenceable(4) %a1, i32 %44)
  store i32 %45, i32* %1, align 4
  %46 = bitcast %"proc_macro::Span"* %_11 to i8*
  %47 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 4, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
  %48 = bitcast %"imp::Span"* %2 to %"imp::Span::Compiler"*
  %49 = bitcast %"imp::Span::Compiler"* %48 to %"proc_macro::Span"*
  %50 = bitcast %"proc_macro::Span"* %49 to i8*
  %51 = bitcast %"proc_macro::Span"* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 4, i1 false)
  br label %bb8
}

; proc_macro2::imp::Span::located_at
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp4Span10located_at17h9dcc8f2b36805512E(%"imp::Span"* align 4 dereferenceable(4) %self, i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_13 = alloca %"proc_macro::Span", align 4
  %_11 = alloca %"proc_macro::Span", align 4
  %b = alloca %"proc_macro::Span", align 4
  %_5 = alloca %"imp::Span", align 4
  %_3 = alloca { %"imp::Span"*, %"imp::Span", [1 x i32] }, align 8
  %2 = alloca %"imp::Span", align 4
  %3 = alloca i32, align 4
  %other = alloca %"imp::Span", align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %"imp::Span"* %other to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %"imp::Span"* %_5 to i8*
  %7 = bitcast %"imp::Span"* %other to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Span"**
  store %"imp::Span"* %self, %"imp::Span"** %8, align 8
  %9 = getelementptr inbounds { %"imp::Span"*, %"imp::Span", [1 x i32] }, { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %10 = bitcast %"imp::Span"* %9 to i8*
  %11 = bitcast %"imp::Span"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 4, i1 false)
  %12 = bitcast { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Span"**
  %13 = load %"imp::Span"*, %"imp::Span"** %12, align 8, !nonnull !20
  %14 = bitcast %"imp::Span"* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  %_8 = select i1 %16, i64 1, i64 0
  switch i64 %_8, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %bb1, %bb3, %start
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17haa8ba9ba33e455c9E() #19
  unreachable

bb1:                                              ; preds = %start
  %17 = getelementptr inbounds { %"imp::Span"*, %"imp::Span", [1 x i32] }, { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %18 = bitcast %"imp::Span"* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  %_6 = select i1 %20, i64 1, i64 0
  %21 = icmp eq i64 %_6, 0
  br i1 %21, label %bb4, label %bb2

bb3:                                              ; preds = %start
  %22 = getelementptr inbounds { %"imp::Span"*, %"imp::Span", [1 x i32] }, { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %23 = bitcast %"imp::Span"* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  %_7 = select i1 %25, i64 1, i64 0
  %26 = icmp eq i64 %_7, 1
  br i1 %26, label %bb6, label %bb2

bb6:                                              ; preds = %bb3
  %27 = bitcast { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Span"**
  %28 = load %"imp::Span"*, %"imp::Span"** %27, align 8, !nonnull !20
  %29 = bitcast %"imp::Span"* %28 to %"imp::Span::Fallback"*
  %a = bitcast %"imp::Span::Fallback"* %29 to %"fallback::Span"*
; call proc_macro2::fallback::Span::located_at
  call void @_ZN11proc_macro28fallback4Span10located_at17h4c00794e59e70d97E(%"fallback::Span"* nonnull align 1 %a)
  br label %bb7

bb7:                                              ; preds = %bb6
  %30 = bitcast %"imp::Span"* %2 to i32*
  store i32 0, i32* %30, align 4
  br label %bb8

bb8:                                              ; preds = %bb5, %bb7
  %31 = bitcast %"imp::Span"* %2 to i32*
  %32 = load i32, i32* %31, align 4
  ret i32 %32

bb4:                                              ; preds = %bb1
  %33 = bitcast { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Span"**
  %34 = load %"imp::Span"*, %"imp::Span"** %33, align 8, !nonnull !20
  %35 = bitcast %"imp::Span"* %34 to %"imp::Span::Compiler"*
  %a1 = bitcast %"imp::Span::Compiler"* %35 to %"proc_macro::Span"*
  %36 = getelementptr inbounds { %"imp::Span"*, %"imp::Span", [1 x i32] }, { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %37 = bitcast %"imp::Span"* %36 to %"imp::Span::Compiler"*
  %38 = bitcast %"imp::Span::Compiler"* %37 to %"proc_macro::Span"*
  %39 = bitcast %"proc_macro::Span"* %b to i8*
  %40 = bitcast %"proc_macro::Span"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 8 %40, i64 4, i1 false)
  %41 = bitcast %"proc_macro::Span"* %_13 to i8*
  %42 = bitcast %"proc_macro::Span"* %b to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %42, i64 4, i1 false)
  %43 = bitcast %"proc_macro::Span"* %_13 to i32*
  %44 = load i32, i32* %43, align 4
; call proc_macro::Span::located_at
  %45 = call i32 @_ZN10proc_macro4Span10located_at17hd6875c223a1aa322E(%"proc_macro::Span"* align 4 dereferenceable(4) %a1, i32 %44)
  store i32 %45, i32* %1, align 4
  %46 = bitcast %"proc_macro::Span"* %_11 to i8*
  %47 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 4, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
  %48 = bitcast %"imp::Span"* %2 to %"imp::Span::Compiler"*
  %49 = bitcast %"imp::Span::Compiler"* %48 to %"proc_macro::Span"*
  %50 = bitcast %"proc_macro::Span"* %49 to i8*
  %51 = bitcast %"proc_macro::Span"* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 4, i1 false)
  br label %bb8
}

; proc_macro2::imp::Span::unwrap
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp4Span6unwrap17he9f2a63e730b52ceE(i32 %0) unnamed_addr #1 {
start:
  %s = alloca %"proc_macro::Span", align 4
  %1 = alloca i32, align 4
  %self = alloca %"imp::Span", align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %"imp::Span"* %self to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %4 = bitcast %"imp::Span"* %self to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %_2 = select i1 %6, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast %"imp::Span"* %self to %"imp::Span::Compiler"*
  %8 = bitcast %"imp::Span::Compiler"* %7 to %"proc_macro::Span"*
  %9 = bitcast %"proc_macro::Span"* %s to i8*
  %10 = bitcast %"proc_macro::Span"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  %11 = bitcast %"proc_macro::Span"* %s to i32*
  %12 = load i32, i32* %11, align 4
  ret i32 %12

bb1:                                              ; preds = %start
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17he0a282308de06f91E([0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1741 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1743 to %"core::panic::location::Location"*)) #19
  unreachable
}

; proc_macro2::imp::Span::join
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN11proc_macro23imp4Span4join17hfac4fbb10e3bff63E(%"imp::Span"* align 4 dereferenceable(4) %self, i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %_31 = alloca %"imp::Span", align 4
  %_23 = alloca i8, align 1
  %val = alloca %"proc_macro::Span", align 4
  %_16 = alloca %"proc_macro::Span", align 4
  %_14 = alloca %"core::option::Option<proc_macro::Span>", align 4
  %_13 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>", align 4
  %_12 = alloca %"proc_macro::Span", align 4
  %b = alloca %"proc_macro::Span", align 4
  %_6 = alloca %"imp::Span", align 4
  %_4 = alloca { %"imp::Span"*, %"imp::Span", [1 x i32] }, align 8
  %ret = alloca %"imp::Span", align 4
  %5 = alloca %"core::option::Option<imp::Span>", align 4
  %6 = alloca i32, align 4
  %other = alloca %"imp::Span", align 4
  store i32 %0, i32* %6, align 4
  %7 = bitcast %"imp::Span"* %other to i8*
  %8 = bitcast i32* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Span"* %_6 to i8*
  %10 = bitcast %"imp::Span"* %other to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  %11 = bitcast { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_4 to %"imp::Span"**
  store %"imp::Span"* %self, %"imp::Span"** %11, align 8
  %12 = getelementptr inbounds { %"imp::Span"*, %"imp::Span", [1 x i32] }, { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_4, i32 0, i32 1
  %13 = bitcast %"imp::Span"* %12 to i8*
  %14 = bitcast %"imp::Span"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 4 %14, i64 4, i1 false)
  %15 = bitcast { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_4 to %"imp::Span"**
  %16 = load %"imp::Span"*, %"imp::Span"** %15, align 8, !nonnull !20
  %17 = bitcast %"imp::Span"* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  %_9 = select i1 %19, i64 1, i64 0
  switch i64 %_9, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %bb1, %bb3, %start
  %20 = bitcast %"core::option::Option<imp::Span>"* %5 to i32*
  store i32 0, i32* %20, align 4
  br label %bb17

bb1:                                              ; preds = %start
  %21 = getelementptr inbounds { %"imp::Span"*, %"imp::Span", [1 x i32] }, { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_4, i32 0, i32 1
  %22 = bitcast %"imp::Span"* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  %_7 = select i1 %24, i64 1, i64 0
  %25 = icmp eq i64 %_7, 0
  br i1 %25, label %bb4, label %bb2

bb3:                                              ; preds = %start
  %26 = getelementptr inbounds { %"imp::Span"*, %"imp::Span", [1 x i32] }, { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_4, i32 0, i32 1
  %27 = bitcast %"imp::Span"* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  %_8 = select i1 %29, i64 1, i64 0
  %30 = icmp eq i64 %_8, 1
  br i1 %30, label %bb10, label %bb2

bb10:                                             ; preds = %bb3
  %31 = bitcast { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_4 to %"imp::Span"**
  %32 = load %"imp::Span"*, %"imp::Span"** %31, align 8, !nonnull !20
  %33 = bitcast %"imp::Span"* %32 to %"imp::Span::Fallback"*
  %a = bitcast %"imp::Span::Fallback"* %33 to %"fallback::Span"*
; call proc_macro2::fallback::Span::join
  %_24 = call zeroext i1 @_ZN11proc_macro28fallback4Span4join17h4dc391a68449f65bE(%"fallback::Span"* nonnull align 1 %a)
  br label %bb11

bb11:                                             ; preds = %bb10
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %34 = call zeroext i1 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6e6c9e7e8b8a2470E"(i1 zeroext %_24)
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %_23, align 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %36 = load i8, i8* %_23, align 1, !range !2
  %37 = trunc i8 %36 to i1
  %_27 = zext i1 %37 to i64
  switch i64 %_27, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ]

bb14:                                             ; preds = %bb12
  unreachable

bb13:                                             ; preds = %bb12
  %38 = bitcast %"imp::Span"* %ret to i32*
  store i32 0, i32* %38, align 4
  br label %bb16

bb15:                                             ; preds = %bb12
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %39 = call i64 @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h6674b621e735188bE"()
  store i64 %39, i64* %4, align 8
  %40 = bitcast %"core::option::Option<imp::Span>"* %5 to i8*
  %41 = bitcast i64* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 8 %41, i64 8, i1 false)
  br label %bb17

bb17:                                             ; preds = %bb16, %bb9, %bb2, %bb15
  %42 = bitcast %"core::option::Option<imp::Span>"* %5 to i64*
  %43 = load i64, i64* %42, align 4
  ret i64 %43

bb16:                                             ; preds = %bb7, %bb13
  %44 = bitcast %"imp::Span"* %_31 to i8*
  %45 = bitcast %"imp::Span"* %ret to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 %45, i64 4, i1 false)
  %46 = bitcast %"core::option::Option<imp::Span>"* %5 to %"core::option::Option<imp::Span>::Some"*
  %47 = getelementptr inbounds %"core::option::Option<imp::Span>::Some", %"core::option::Option<imp::Span>::Some"* %46, i32 0, i32 1
  %48 = bitcast %"imp::Span"* %47 to i8*
  %49 = bitcast %"imp::Span"* %_31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %49, i64 4, i1 false)
  %50 = bitcast %"core::option::Option<imp::Span>"* %5 to i32*
  store i32 1, i32* %50, align 4
  br label %bb17

bb4:                                              ; preds = %bb1
  %51 = bitcast { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_4 to %"imp::Span"**
  %52 = load %"imp::Span"*, %"imp::Span"** %51, align 8, !nonnull !20
  %53 = bitcast %"imp::Span"* %52 to %"imp::Span::Compiler"*
  %a1 = bitcast %"imp::Span::Compiler"* %53 to %"proc_macro::Span"*
  %54 = getelementptr inbounds { %"imp::Span"*, %"imp::Span", [1 x i32] }, { %"imp::Span"*, %"imp::Span", [1 x i32] }* %_4, i32 0, i32 1
  %55 = bitcast %"imp::Span"* %54 to %"imp::Span::Compiler"*
  %56 = bitcast %"imp::Span::Compiler"* %55 to %"proc_macro::Span"*
  %57 = bitcast %"proc_macro::Span"* %b to i8*
  %58 = bitcast %"proc_macro::Span"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 8 %58, i64 4, i1 false)
  %59 = bitcast %"proc_macro::Span"* %_16 to i8*
  %60 = bitcast %"proc_macro::Span"* %b to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %60, i64 4, i1 false)
  %61 = bitcast %"proc_macro::Span"* %_16 to i32*
  %62 = load i32, i32* %61, align 4
; call proc_macro::Span::join
  %63 = call i32 @_ZN10proc_macro4Span4join17h855778f307875718E(%"proc_macro::Span"* align 4 dereferenceable(4) %a1, i32 %62)
  store i32 %63, i32* %3, align 4
  %64 = bitcast %"core::option::Option<proc_macro::Span>"* %_14 to i8*
  %65 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %65, i64 4, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
  %66 = bitcast %"core::option::Option<proc_macro::Span>"* %_14 to i32*
  %67 = load i32, i32* %66, align 4
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %68 = call i32 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd871516878da4d70E"(i32 %67)
  store i32 %68, i32* %2, align 4
  %69 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>"* %_13 to i8*
  %70 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 4, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb5
  %71 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>"* %_13 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  %_17 = select i1 %73, i64 1, i64 0
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb7:                                              ; preds = %bb6
  %74 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>"* %_13 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>::Continue"*
  %75 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, proc_macro::Span>::Continue"* %74 to %"proc_macro::Span"*
  %76 = bitcast %"proc_macro::Span"* %val to i8*
  %77 = bitcast %"proc_macro::Span"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 4, i1 false)
  %78 = bitcast %"proc_macro::Span"* %_12 to i8*
  %79 = bitcast %"proc_macro::Span"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 4, i1 false)
  %80 = bitcast %"imp::Span"* %ret to %"imp::Span::Compiler"*
  %81 = bitcast %"imp::Span::Compiler"* %80 to %"proc_macro::Span"*
  %82 = bitcast %"proc_macro::Span"* %81 to i8*
  %83 = bitcast %"proc_macro::Span"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 4, i1 false)
  br label %bb16

bb9:                                              ; preds = %bb6
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %84 = call i64 @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h6674b621e735188bE"()
  store i64 %84, i64* %1, align 8
  %85 = bitcast %"core::option::Option<imp::Span>"* %5 to i8*
  %86 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 8 %86, i64 8, i1 false)
  br label %bb17
}

; proc_macro2::imp::Span::unwrap_nightly
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp4Span14unwrap_nightly17h6eb0484e575fcbb5E(i32 %0) unnamed_addr #1 {
start:
  %s = alloca %"proc_macro::Span", align 4
  %1 = alloca i32, align 4
  %self = alloca %"imp::Span", align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %"imp::Span"* %self to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %4 = bitcast %"imp::Span"* %self to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %_2 = select i1 %6, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast %"imp::Span"* %self to %"imp::Span::Compiler"*
  %8 = bitcast %"imp::Span::Compiler"* %7 to %"proc_macro::Span"*
  %9 = bitcast %"proc_macro::Span"* %s to i8*
  %10 = bitcast %"proc_macro::Span"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  %11 = bitcast %"proc_macro::Span"* %s to i32*
  %12 = load i32, i32* %11, align 4
  ret i32 %12

bb1:                                              ; preds = %start
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17haa8ba9ba33e455c9E() #19
  unreachable
}

; proc_macro2::imp::<impl core::convert::From<proc_macro::Span> for proc_macro2::Span>::from
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN11proc_macro23imp91_$LT$impl$u20$core..convert..From$LT$proc_macro..Span$GT$$u20$for$u20$proc_macro2..Span$GT$4from17h87dff16b9988b4e9E"(i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_3 = alloca %"proc_macro::Span", align 4
  %_2 = alloca %"imp::Span", align 4
  %2 = alloca %Span, align 4
  %3 = alloca i32, align 4
  %proc_span = alloca %"proc_macro::Span", align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %"proc_macro::Span"* %proc_span to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %"proc_macro::Span"* %_3 to i8*
  %7 = bitcast %"proc_macro::Span"* %proc_span to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"imp::Span"* %_2 to %"imp::Span::Compiler"*
  %9 = bitcast %"imp::Span::Compiler"* %8 to %"proc_macro::Span"*
  %10 = bitcast %"proc_macro::Span"* %9 to i8*
  %11 = bitcast %"proc_macro::Span"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 4, i1 false)
  %12 = bitcast %"imp::Span"* %_2 to i32*
  %13 = load i32, i32* %12, align 4
; call proc_macro2::Span::_new
  %14 = call i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %13)
  store i32 %14, i32* %1, align 4
  %15 = bitcast %Span* %2 to i8*
  %16 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %17 = bitcast %Span* %2 to i32*
  %18 = load i32, i32* %17, align 4
  ret i32 %18
}

; <proc_macro2::imp::Span as core::convert::From<proc_macro2::fallback::Span>>::from
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN97_$LT$proc_macro2..imp..Span$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..Span$GT$$GT$4from17h4a633cdf721bfa1bE"() unnamed_addr #1 {
start:
  %0 = alloca %"imp::Span", align 4
  %1 = bitcast %"imp::Span"* %0 to i32*
  store i32 0, i32* %1, align 4
  %2 = bitcast %"imp::Span"* %0 to i32*
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; <proc_macro2::imp::Span as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN59_$LT$proc_macro2..imp..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h37da5355c5f7b84cE"(%"imp::Span"* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"imp::Span"* %self to i32*
  %2 = load i32, i32* %1, align 4
  %3 = icmp eq i32 %2, 0
  %_3 = select i1 %3, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::Span"* %self to %"imp::Span::Compiler"*
  %s1 = bitcast %"imp::Span::Compiler"* %4 to %"proc_macro::Span"*
; call <proc_macro::Span as core::fmt::Debug>::fmt
  %5 = call zeroext i1 @"_ZN53_$LT$proc_macro..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h4a2bef59b8a813bcE"(%"proc_macro::Span"* align 4 dereferenceable(4) %s1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"imp::Span"* %self to %"imp::Span::Fallback"*
  %s = bitcast %"imp::Span::Fallback"* %7 to %"fallback::Span"*
; call <proc_macro2::fallback::Span as core::fmt::Debug>::fmt
  %8 = call zeroext i1 @"_ZN64_$LT$proc_macro2..fallback..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h6a5a61c96466b4eaE"(%"fallback::Span"* nonnull align 1 %s, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %10 = load i8, i8* %0, align 1, !range !2
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

; proc_macro2::imp::debug_span_field_if_nontrivial
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp30debug_span_field_if_nontrivial17h42388b918ecfeeceE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug, i32 %0) unnamed_addr #1 {
start:
  %s = alloca %"proc_macro::Span", align 4
  %1 = alloca i32, align 4
  %span = alloca %"imp::Span", align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %"imp::Span"* %span to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %4 = bitcast %"imp::Span"* %span to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %_3 = select i1 %6, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast %"imp::Span"* %span to %"imp::Span::Compiler"*
  %8 = bitcast %"imp::Span::Compiler"* %7 to %"proc_macro::Span"*
  %9 = bitcast %"proc_macro::Span"* %s to i8*
  %10 = bitcast %"proc_macro::Span"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  %_9.0 = bitcast %"proc_macro::Span"* %s to {}*
; call core::fmt::builders::DebugStruct::field
  %_5 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1784 to [0 x i8]*), i64 4, {}* nonnull align 1 %_9.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.l to [3 x i64]*))
  br label %bb4

bb1:                                              ; preds = %start
; call proc_macro2::fallback::debug_span_field_if_nontrivial
  call void @_ZN11proc_macro28fallback30debug_span_field_if_nontrivial17h3d448a6ca34870b3E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug)
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; proc_macro2::imp::Group::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Group3new17h6daeb2ca6cbded67E(%"imp::Group"* noalias nocapture sret(%"imp::Group") dereferenceable(40) %0, i8 %1, %"imp::TokenStream"* noalias nocapture dereferenceable(40) %stream) unnamed_addr #1 {
start:
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %_14 = alloca %"fallback::TokenStream", align 8
  %_12 = alloca %"fallback::Group", align 8
  %stream2 = alloca %"fallback::TokenStream", align 8
  %_10 = alloca %"imp::DeferredTokenStream", align 8
  %_9 = alloca %"proc_macro::TokenStream", align 4
  %_7 = alloca %"proc_macro::Group", align 4
  %delimiter1 = alloca i8, align 1
  %tts = alloca %"imp::DeferredTokenStream", align 8
  %delimiter = alloca i8, align 1
  store i8 %1, i8* %delimiter, align 1
  %4 = bitcast %"imp::TokenStream"* %stream to i64*
  %_3 = load i64, i64* %4, align 8, !range !18
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast %"imp::TokenStream"* %stream to %"imp::TokenStream::Compiler"*
  %6 = getelementptr inbounds %"imp::TokenStream::Compiler", %"imp::TokenStream::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"imp::DeferredTokenStream"* %tts to i8*
  %8 = bitcast %"imp::DeferredTokenStream"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false)
  %9 = load i8, i8* %delimiter, align 1, !range !110
  %_6 = zext i8 %9 to i64
  switch i64 %_6, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb8
    i64 2, label %bb7
    i64 3, label %bb4
  ]

bb1:                                              ; preds = %start
  %10 = bitcast %"imp::TokenStream"* %stream to %"imp::TokenStream::Fallback"*
  %11 = getelementptr inbounds %"imp::TokenStream::Fallback", %"imp::TokenStream::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::TokenStream"* %stream2 to i8*
  %13 = bitcast %"fallback::TokenStream"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %_13 = load i8, i8* %delimiter, align 1, !range !110
  %14 = bitcast %"fallback::TokenStream"* %_14 to i8*
  %15 = bitcast %"fallback::TokenStream"* %stream2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
; call proc_macro2::fallback::Group::new
  call void @_ZN11proc_macro28fallback5Group3new17h5d634dc08de01f30E(%"fallback::Group"* noalias nocapture sret(%"fallback::Group") dereferenceable(32) %_12, i8 %_13, %"fallback::TokenStream"* noalias nocapture dereferenceable(24) %_14)
  br label %bb12

bb12:                                             ; preds = %bb1
  %16 = bitcast %"imp::Group"* %0 to %"imp::Group::Fallback"*
  %17 = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %16, i32 0, i32 1
  %18 = bitcast %"fallback::Group"* %17 to i8*
  %19 = bitcast %"fallback::Group"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false)
  %20 = bitcast %"imp::Group"* %0 to i32*
  store i32 1, i32* %20, align 8
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  ret void

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  store i8 0, i8* %delimiter1, align 1
  br label %bb9

bb8:                                              ; preds = %bb3
  store i8 1, i8* %delimiter1, align 1
  br label %bb9

bb7:                                              ; preds = %bb3
  store i8 2, i8* %delimiter1, align 1
  br label %bb9

bb4:                                              ; preds = %bb3
  store i8 3, i8* %delimiter1, align 1
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8, %bb7, %bb4
  %_8 = load i8, i8* %delimiter1, align 1, !range !110
  %21 = bitcast %"imp::DeferredTokenStream"* %_10 to i8*
  %22 = bitcast %"imp::DeferredTokenStream"* %tts to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false)
; call proc_macro2::imp::DeferredTokenStream::into_token_stream
  %23 = call i32 @_ZN11proc_macro23imp19DeferredTokenStream17into_token_stream17h4c1d1dbef48cadebE(%"imp::DeferredTokenStream"* noalias nocapture dereferenceable(32) %_10)
  store i32 %23, i32* %3, align 4
  %24 = bitcast %"proc_macro::TokenStream"* %_9 to i8*
  %25 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 4, i1 false)
  br label %bb10

bb10:                                             ; preds = %bb9
  %26 = bitcast %"proc_macro::TokenStream"* %_9 to i32*
  %27 = load i32, i32* %26, align 4
; call proc_macro::Group::new
  %28 = call i32 @_ZN10proc_macro5Group3new17h69b4b255a97ecb5eE(i8 %_8, i32 %27)
  store i32 %28, i32* %2, align 4
  %29 = bitcast %"proc_macro::Group"* %_7 to i8*
  %30 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 4, i1 false)
  br label %bb11

bb11:                                             ; preds = %bb10
  %31 = bitcast %"imp::Group"* %0 to %"imp::Group::Compiler"*
  %32 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %31, i32 0, i32 1
  %33 = bitcast %"proc_macro::Group"* %32 to i8*
  %34 = bitcast %"proc_macro::Group"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %34, i64 4, i1 false)
  %35 = bitcast %"imp::Group"* %0 to i32*
  store i32 0, i32* %35, align 8
  br label %bb13
}

; proc_macro2::imp::Group::delimiter
; Function Attrs: nonlazybind uwtable
define internal i8 @_ZN11proc_macro23imp5Group9delimiter17h043473f229a040edE(%"imp::Group"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  %0 = alloca i8, align 1
  %1 = bitcast %"imp::Group"* %self to i32*
  %2 = load i32, i32* %1, align 8, !range !19
  %_2 = zext i32 %2 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"imp::Group"* %self to %"imp::Group::Compiler"*
  %g1 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %3, i32 0, i32 1
; call proc_macro::Group::delimiter
  %4 = call i8 @_ZN10proc_macro5Group9delimiter17h0da45f5dbbcb075dE(%"proc_macro::Group"* align 4 dereferenceable(4) %g1), !range !110
  store i8 %4, i8* %_4, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"imp::Group"* %self to %"imp::Group::Fallback"*
  %g = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %5, i32 0, i32 1
; call proc_macro2::fallback::Group::delimiter
  %6 = call i8 @_ZN11proc_macro28fallback5Group9delimiter17h6eb1742cea310186E(%"fallback::Group"* align 8 dereferenceable(32) %g), !range !110
  store i8 %6, i8* %0, align 1
  br label %bb10

bb10:                                             ; preds = %bb7, %bb9, %bb8, %bb5, %bb1
  %7 = load i8, i8* %0, align 1, !range !110
  ret i8 %7

bb4:                                              ; preds = %bb3
  %8 = load i8, i8* %_4, align 1, !range !110
  %_6 = zext i8 %8 to i64
  switch i64 %_6, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb9
    i64 2, label %bb8
    i64 3, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  store i8 0, i8* %0, align 1
  br label %bb10

bb9:                                              ; preds = %bb4
  store i8 1, i8* %0, align 1
  br label %bb10

bb8:                                              ; preds = %bb4
  store i8 2, i8* %0, align 1
  br label %bb10

bb5:                                              ; preds = %bb4
  store i8 3, i8* %0, align 1
  br label %bb10
}

; proc_macro2::imp::Group::stream
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Group6stream17h63178d8540692d42E(%"imp::TokenStream"* noalias nocapture sret(%"imp::TokenStream") dereferenceable(40) %0, %"imp::Group"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_8 = alloca %"fallback::TokenStream", align 8
  %_5 = alloca %"proc_macro::TokenStream", align 4
  %_4 = alloca %"imp::DeferredTokenStream", align 8
  %2 = bitcast %"imp::Group"* %self to i32*
  %3 = load i32, i32* %2, align 8, !range !19
  %_2 = zext i32 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::Group"* %self to %"imp::Group::Compiler"*
  %g1 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %4, i32 0, i32 1
; call proc_macro::Group::stream
  %5 = call i32 @_ZN10proc_macro5Group6stream17h60792dd3f4ce5d3aE(%"proc_macro::Group"* align 4 dereferenceable(4) %g1)
  store i32 %5, i32* %1, align 4
  %6 = bitcast %"proc_macro::TokenStream"* %_5 to i8*
  %7 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %8 = bitcast %"imp::Group"* %self to %"imp::Group::Fallback"*
  %g = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %8, i32 0, i32 1
; call proc_macro2::fallback::Group::stream
  call void @_ZN11proc_macro28fallback5Group6stream17hd909cea5a729838fE(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %_8, %"fallback::Group"* align 8 dereferenceable(32) %g)
  br label %bb6

bb6:                                              ; preds = %bb1
  %9 = bitcast %"imp::TokenStream"* %0 to %"imp::TokenStream::Fallback"*
  %10 = getelementptr inbounds %"imp::TokenStream::Fallback", %"imp::TokenStream::Fallback"* %9, i32 0, i32 1
  %11 = bitcast %"fallback::TokenStream"* %10 to i8*
  %12 = bitcast %"fallback::TokenStream"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  %13 = bitcast %"imp::TokenStream"* %0 to i64*
  store i64 1, i64* %13, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  ret void

bb4:                                              ; preds = %bb3
  %14 = bitcast %"proc_macro::TokenStream"* %_5 to i32*
  %15 = load i32, i32* %14, align 4
; call proc_macro2::imp::DeferredTokenStream::new
  call void @_ZN11proc_macro23imp19DeferredTokenStream3new17h92eb4ad95da03661E(%"imp::DeferredTokenStream"* noalias nocapture sret(%"imp::DeferredTokenStream") dereferenceable(32) %_4, i32 %15)
  br label %bb5

bb5:                                              ; preds = %bb4
  %16 = bitcast %"imp::TokenStream"* %0 to %"imp::TokenStream::Compiler"*
  %17 = getelementptr inbounds %"imp::TokenStream::Compiler", %"imp::TokenStream::Compiler"* %16, i32 0, i32 1
  %18 = bitcast %"imp::DeferredTokenStream"* %17 to i8*
  %19 = bitcast %"imp::DeferredTokenStream"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false)
  %20 = bitcast %"imp::TokenStream"* %0 to i64*
  store i64 0, i64* %20, align 8
  br label %bb7
}

; proc_macro2::imp::Group::span
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp5Group4span17ha753403edfa3ffcdE(%"imp::Group"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_4 = alloca %"proc_macro::Span", align 4
  %1 = alloca %"imp::Span", align 4
  %2 = bitcast %"imp::Group"* %self to i32*
  %3 = load i32, i32* %2, align 8, !range !19
  %_2 = zext i32 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::Group"* %self to %"imp::Group::Compiler"*
  %g1 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %4, i32 0, i32 1
; call proc_macro::Group::span
  %5 = call i32 @_ZN10proc_macro5Group4span17h7f3a63eda480fa3dE(%"proc_macro::Group"* align 4 dereferenceable(4) %g1)
  store i32 %5, i32* %0, align 4
  %6 = bitcast %"proc_macro::Span"* %_4 to i8*
  %7 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %8 = bitcast %"imp::Group"* %self to %"imp::Group::Fallback"*
  %g = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %8, i32 0, i32 1
; call proc_macro2::fallback::Group::span
  call void @_ZN11proc_macro28fallback5Group4span17h235b32464e525cbfE(%"fallback::Group"* align 8 dereferenceable(32) %g)
  br label %bb5

bb5:                                              ; preds = %bb1
  %9 = bitcast %"imp::Span"* %1 to i32*
  store i32 0, i32* %9, align 4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %10 = bitcast %"imp::Span"* %1 to i32*
  %11 = load i32, i32* %10, align 4
  ret i32 %11

bb4:                                              ; preds = %bb3
  %12 = bitcast %"imp::Span"* %1 to %"imp::Span::Compiler"*
  %13 = bitcast %"imp::Span::Compiler"* %12 to %"proc_macro::Span"*
  %14 = bitcast %"proc_macro::Span"* %13 to i8*
  %15 = bitcast %"proc_macro::Span"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 4, i1 false)
  br label %bb6
}

; proc_macro2::imp::Group::span_open
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp5Group9span_open17h5e21800e49b99d75E(%"imp::Group"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_4 = alloca %"proc_macro::Span", align 4
  %1 = alloca %"imp::Span", align 4
  %2 = bitcast %"imp::Group"* %self to i32*
  %3 = load i32, i32* %2, align 8, !range !19
  %_2 = zext i32 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::Group"* %self to %"imp::Group::Compiler"*
  %g1 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %4, i32 0, i32 1
; call proc_macro::Group::span_open
  %5 = call i32 @_ZN10proc_macro5Group9span_open17he74e1e6f854caeefE(%"proc_macro::Group"* align 4 dereferenceable(4) %g1)
  store i32 %5, i32* %0, align 4
  %6 = bitcast %"proc_macro::Span"* %_4 to i8*
  %7 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %8 = bitcast %"imp::Group"* %self to %"imp::Group::Fallback"*
  %g = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %8, i32 0, i32 1
; call proc_macro2::fallback::Group::span_open
  call void @_ZN11proc_macro28fallback5Group9span_open17h47fa92f8d4d33854E(%"fallback::Group"* align 8 dereferenceable(32) %g)
  br label %bb5

bb5:                                              ; preds = %bb1
  %9 = bitcast %"imp::Span"* %1 to i32*
  store i32 0, i32* %9, align 4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %10 = bitcast %"imp::Span"* %1 to i32*
  %11 = load i32, i32* %10, align 4
  ret i32 %11

bb4:                                              ; preds = %bb3
  %12 = bitcast %"imp::Span"* %1 to %"imp::Span::Compiler"*
  %13 = bitcast %"imp::Span::Compiler"* %12 to %"proc_macro::Span"*
  %14 = bitcast %"proc_macro::Span"* %13 to i8*
  %15 = bitcast %"proc_macro::Span"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 4, i1 false)
  br label %bb6
}

; proc_macro2::imp::Group::span_close
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp5Group10span_close17hce037c7e4e111471E(%"imp::Group"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_4 = alloca %"proc_macro::Span", align 4
  %1 = alloca %"imp::Span", align 4
  %2 = bitcast %"imp::Group"* %self to i32*
  %3 = load i32, i32* %2, align 8, !range !19
  %_2 = zext i32 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::Group"* %self to %"imp::Group::Compiler"*
  %g1 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %4, i32 0, i32 1
; call proc_macro::Group::span_close
  %5 = call i32 @_ZN10proc_macro5Group10span_close17h3ecedfe62881b810E(%"proc_macro::Group"* align 4 dereferenceable(4) %g1)
  store i32 %5, i32* %0, align 4
  %6 = bitcast %"proc_macro::Span"* %_4 to i8*
  %7 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %8 = bitcast %"imp::Group"* %self to %"imp::Group::Fallback"*
  %g = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %8, i32 0, i32 1
; call proc_macro2::fallback::Group::span_close
  call void @_ZN11proc_macro28fallback5Group10span_close17h3556fee4cb7f5744E(%"fallback::Group"* align 8 dereferenceable(32) %g)
  br label %bb5

bb5:                                              ; preds = %bb1
  %9 = bitcast %"imp::Span"* %1 to i32*
  store i32 0, i32* %9, align 4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %10 = bitcast %"imp::Span"* %1 to i32*
  %11 = load i32, i32* %10, align 4
  ret i32 %11

bb4:                                              ; preds = %bb3
  %12 = bitcast %"imp::Span"* %1 to %"imp::Span::Compiler"*
  %13 = bitcast %"imp::Span::Compiler"* %12 to %"proc_macro::Span"*
  %14 = bitcast %"proc_macro::Span"* %13 to i8*
  %15 = bitcast %"proc_macro::Span"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 4, i1 false)
  br label %bb6
}

; proc_macro2::imp::Group::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Group8set_span17hc1a428b96cbaefb3E(%"imp::Group"* align 8 dereferenceable(40) %self, i32 %0) unnamed_addr #1 {
start:
  %_12 = alloca %"proc_macro::Span", align 4
  %s = alloca %"proc_macro::Span", align 4
  %_5 = alloca %"imp::Span", align 4
  %_3 = alloca { %"imp::Group"*, %"imp::Span", [1 x i32] }, align 8
  %1 = alloca i32, align 4
  %span = alloca %"imp::Span", align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %"imp::Span"* %span to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %4 = bitcast %"imp::Span"* %_5 to i8*
  %5 = bitcast %"imp::Span"* %span to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast { %"imp::Group"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Group"**
  store %"imp::Group"* %self, %"imp::Group"** %6, align 8
  %7 = getelementptr inbounds { %"imp::Group"*, %"imp::Span", [1 x i32] }, { %"imp::Group"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %8 = bitcast %"imp::Span"* %7 to i8*
  %9 = bitcast %"imp::Span"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %9, i64 4, i1 false)
  %10 = bitcast { %"imp::Group"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Group"**
  %11 = load %"imp::Group"*, %"imp::Group"** %10, align 8, !nonnull !20
  %12 = bitcast %"imp::Group"* %11 to i32*
  %13 = load i32, i32* %12, align 8, !range !19
  %_8 = zext i32 %13 to i64
  switch i64 %_8, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %bb1, %bb3, %start
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17haa8ba9ba33e455c9E() #19
  unreachable

bb1:                                              ; preds = %start
  %14 = getelementptr inbounds { %"imp::Group"*, %"imp::Span", [1 x i32] }, { %"imp::Group"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %15 = bitcast %"imp::Span"* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %_6 = select i1 %17, i64 1, i64 0
  %18 = icmp eq i64 %_6, 0
  br i1 %18, label %bb4, label %bb2

bb3:                                              ; preds = %start
  %19 = getelementptr inbounds { %"imp::Group"*, %"imp::Span", [1 x i32] }, { %"imp::Group"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %20 = bitcast %"imp::Span"* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  %_7 = select i1 %22, i64 1, i64 0
  %23 = icmp eq i64 %_7, 1
  br i1 %23, label %bb5, label %bb2

bb5:                                              ; preds = %bb3
  %24 = bitcast { %"imp::Group"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Group"**
  %25 = load %"imp::Group"*, %"imp::Group"** %24, align 8, !nonnull !20
  %26 = bitcast %"imp::Group"* %25 to %"imp::Group::Fallback"*
  %g = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %26, i32 0, i32 1
; call proc_macro2::fallback::Group::set_span
  call void @_ZN11proc_macro28fallback5Group8set_span17hd52bfa0c4013e149E(%"fallback::Group"* align 8 dereferenceable(32) %g)
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  ret void

bb4:                                              ; preds = %bb1
  %27 = bitcast { %"imp::Group"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Group"**
  %28 = load %"imp::Group"*, %"imp::Group"** %27, align 8, !nonnull !20
  %29 = bitcast %"imp::Group"* %28 to %"imp::Group::Compiler"*
  %g1 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %29, i32 0, i32 1
  %30 = getelementptr inbounds { %"imp::Group"*, %"imp::Span", [1 x i32] }, { %"imp::Group"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %31 = bitcast %"imp::Span"* %30 to %"imp::Span::Compiler"*
  %32 = bitcast %"imp::Span::Compiler"* %31 to %"proc_macro::Span"*
  %33 = bitcast %"proc_macro::Span"* %s to i8*
  %34 = bitcast %"proc_macro::Span"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 8 %34, i64 4, i1 false)
  %35 = bitcast %"proc_macro::Span"* %_12 to i8*
  %36 = bitcast %"proc_macro::Span"* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 4, i1 false)
  %37 = bitcast %"proc_macro::Span"* %_12 to i32*
  %38 = load i32, i32* %37, align 4
; call proc_macro::Group::set_span
  call void @_ZN10proc_macro5Group8set_span17hdc97a54424de7f5dE(%"proc_macro::Group"* align 4 dereferenceable(4) %g1, i32 %38)
  br label %bb6
}

; proc_macro2::imp::Group::unwrap_nightly
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp5Group14unwrap_nightly17h3c72bd47776ce556E(%"imp::Group"* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %g = alloca %"proc_macro::Group", align 4
  %1 = alloca %"proc_macro::Group", align 4
  %2 = bitcast %"imp::Group"* %self to i32*
  %3 = load i32, i32* %2, align 8, !range !19
  %_2 = zext i32 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::Group"* %self to %"imp::Group::Compiler"*
  %5 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %4, i32 0, i32 1
  %6 = bitcast %"proc_macro::Group"* %g to i8*
  %7 = bitcast %"proc_macro::Group"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::Group"* %1 to i8*
  %9 = bitcast %"proc_macro::Group"* %g to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 4, i1 false)
  %10 = bitcast %"imp::Group"* %self to i32*
  %11 = load i32, i32* %10, align 8, !range !19
  %_4 = zext i32 %11 to i64
  %12 = icmp eq i64 %_4, 0
  br i1 %12, label %bb5, label %bb6

bb1:                                              ; preds = %start
; invoke proc_macro2::imp::mismatch
  invoke void @_ZN11proc_macro23imp8mismatch17haa8ba9ba33e455c9E() #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb8:                                              ; preds = %cleanup
  %13 = bitcast %"imp::Group"* %self to i32*
  %14 = load i32, i32* %13, align 8, !range !19
  %_5 = zext i32 %14 to i64
  %15 = icmp eq i64 %_5, 0
  br i1 %15, label %bb4, label %bb7

cleanup:                                          ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb8

bb4:                                              ; preds = %bb7, %bb8
  %21 = bitcast { i8*, i32 }* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26

bb7:                                              ; preds = %bb8
; call core::ptr::drop_in_place<proc_macro2::imp::Group>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17h7901ac00c8dfa1c6E"(%"imp::Group"* %self) #18
  br label %bb4

bb5:                                              ; preds = %bb6, %bb3
  %27 = bitcast %"proc_macro::Group"* %1 to i32*
  %28 = load i32, i32* %27, align 4
  ret i32 %28

bb6:                                              ; preds = %bb3
; call core::ptr::drop_in_place<proc_macro2::imp::Group>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Group$GT$17h7901ac00c8dfa1c6E"(%"imp::Group"* %self)
  br label %bb5
}

; <proc_macro2::imp::Group as core::convert::From<proc_macro2::fallback::Group>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN99_$LT$proc_macro2..imp..Group$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..Group$GT$$GT$4from17h62b3a580825fde05E"(%"imp::Group"* noalias nocapture sret(%"imp::Group") dereferenceable(40) %0, %"fallback::Group"* noalias nocapture dereferenceable(32) %g) unnamed_addr #1 {
start:
  %_2 = alloca %"fallback::Group", align 8
  %1 = bitcast %"fallback::Group"* %_2 to i8*
  %2 = bitcast %"fallback::Group"* %g to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  %3 = bitcast %"imp::Group"* %0 to %"imp::Group::Fallback"*
  %4 = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %3, i32 0, i32 1
  %5 = bitcast %"fallback::Group"* %4 to i8*
  %6 = bitcast %"fallback::Group"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false)
  %7 = bitcast %"imp::Group"* %0 to i32*
  store i32 1, i32* %7, align 8
  ret void
}

; <proc_macro2::imp::Group as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN62_$LT$proc_macro2..imp..Group$u20$as$u20$core..fmt..Display$GT$3fmt17h381a02208c42ed3bE"(%"imp::Group"* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"imp::Group"* %self to i32*
  %2 = load i32, i32* %1, align 8, !range !19
  %_3 = zext i32 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"imp::Group"* %self to %"imp::Group::Compiler"*
  %group1 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %3, i32 0, i32 1
; call <proc_macro::Group as core::fmt::Display>::fmt
  %4 = call zeroext i1 @"_ZN56_$LT$proc_macro..Group$u20$as$u20$core..fmt..Display$GT$3fmt17h9f5156d91bb38058E"(%"proc_macro::Group"* align 4 dereferenceable(4) %group1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Group"* %self to %"imp::Group::Fallback"*
  %group = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %6, i32 0, i32 1
; call <proc_macro2::fallback::Group as core::fmt::Display>::fmt
  %7 = call zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Group$u20$as$u20$core..fmt..Display$GT$3fmt17hccaf41902afeba06E"(%"fallback::Group"* align 8 dereferenceable(32) %group, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8, i8* %0, align 1, !range !2
  %10 = trunc i8 %9 to i1
  ret i1 %10
}

; <proc_macro2::imp::Group as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN60_$LT$proc_macro2..imp..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17h75cce883bdcf8666E"(%"imp::Group"* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"imp::Group"* %self to i32*
  %2 = load i32, i32* %1, align 8, !range !19
  %_3 = zext i32 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"imp::Group"* %self to %"imp::Group::Compiler"*
  %group1 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %3, i32 0, i32 1
; call <proc_macro::Group as core::fmt::Debug>::fmt
  %4 = call zeroext i1 @"_ZN54_$LT$proc_macro..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17h6cdf725a56ef3f90E"(%"proc_macro::Group"* align 4 dereferenceable(4) %group1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Group"* %self to %"imp::Group::Fallback"*
  %group = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %6, i32 0, i32 1
; call <proc_macro2::fallback::Group as core::fmt::Debug>::fmt
  %7 = call zeroext i1 @"_ZN65_$LT$proc_macro2..fallback..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17h6428ad6cc5ada678E"(%"fallback::Group"* align 8 dereferenceable(32) %group, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8, i8* %0, align 1, !range !2
  %10 = trunc i8 %9 to i1
  ret i1 %10
}

; proc_macro2::imp::Ident::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Ident3new17hb6422152e59789bdE(%"imp::Ident"* noalias nocapture sret(%"imp::Ident") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %string.0, i64 %string.1, i32 %1) unnamed_addr #1 {
start:
  %2 = alloca i32, align 4
  %_9 = alloca %"fallback::Ident", align 8
  %_7 = alloca %"proc_macro::Span", align 4
  %_5 = alloca %"proc_macro::Ident", align 4
  %s = alloca %"proc_macro::Span", align 4
  %3 = alloca i32, align 4
  %span = alloca %"imp::Span", align 4
  store i32 %1, i32* %3, align 4
  %4 = bitcast %"imp::Span"* %span to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %"imp::Span"* %span to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %_3 = select i1 %8, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast %"imp::Span"* %span to %"imp::Span::Compiler"*
  %10 = bitcast %"imp::Span::Compiler"* %9 to %"proc_macro::Span"*
  %11 = bitcast %"proc_macro::Span"* %s to i8*
  %12 = bitcast %"proc_macro::Span"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  %13 = bitcast %"proc_macro::Span"* %_7 to i8*
  %14 = bitcast %"proc_macro::Span"* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 4, i1 false)
  %15 = bitcast %"proc_macro::Span"* %_7 to i32*
  %16 = load i32, i32* %15, align 4
; call proc_macro::Ident::new
  %17 = call i32 @_ZN10proc_macro5Ident3new17h28fbe3a09d7325b9E([0 x i8]* nonnull align 1 %string.0, i64 %string.1, i32 %16)
  store i32 %17, i32* %2, align 4
  %18 = bitcast %"proc_macro::Ident"* %_5 to i8*
  %19 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 4, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Ident::new
  call void @_ZN11proc_macro28fallback5Ident3new17hc6950873cc226316E(%"fallback::Ident"* noalias nocapture sret(%"fallback::Ident") dereferenceable(32) %_9, [0 x i8]* nonnull align 1 %string.0, i64 %string.1)
  br label %bb5

bb5:                                              ; preds = %bb1
  %20 = bitcast %"imp::Ident"* %0 to %"imp::Ident::Fallback"*
  %21 = getelementptr inbounds %"imp::Ident::Fallback", %"imp::Ident::Fallback"* %20, i32 0, i32 1
  %22 = bitcast %"fallback::Ident"* %21 to i8*
  %23 = bitcast %"fallback::Ident"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false)
  %24 = bitcast %"imp::Ident"* %0 to i32*
  store i32 1, i32* %24, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  ret void

bb4:                                              ; preds = %bb3
  %25 = bitcast %"imp::Ident"* %0 to %"imp::Ident::Compiler"*
  %26 = getelementptr inbounds %"imp::Ident::Compiler", %"imp::Ident::Compiler"* %25, i32 0, i32 1
  %27 = bitcast %"proc_macro::Ident"* %26 to i8*
  %28 = bitcast %"proc_macro::Ident"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 4, i1 false)
  %29 = bitcast %"imp::Ident"* %0 to i32*
  store i32 0, i32* %29, align 8
  br label %bb6
}

; proc_macro2::imp::Ident::new_raw
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Ident7new_raw17hde54892950bc12e4E(%"imp::Ident"* noalias nocapture sret(%"imp::Ident") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %string.0, i64 %string.1, i32 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %_21 = alloca %"fallback::Ident", align 8
  %_19 = alloca %"proc_macro::Ident", align 4
  %_18 = alloca %"proc_macro::Span", align 4
  %i = alloca %"proc_macro::Ident", align 4
  %_12 = alloca %"proc_macro::TokenStream", align 4
  %_11 = alloca %"proc_macro::token_stream::IntoIter", align 4
  %_9 = alloca %"core::option::Option<proc_macro::TokenTree>", align 4
  %ident = alloca %"proc_macro::Ident", align 4
  %_6 = alloca %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>", align 4
  %p = alloca %"proc_macro::TokenStream", align 4
  %s = alloca %"proc_macro::Span", align 4
  %7 = alloca i32, align 4
  %span = alloca %"imp::Span", align 4
  store i32 %1, i32* %7, align 4
  %8 = bitcast %"imp::Span"* %span to i8*
  %9 = bitcast i32* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 4, i1 false)
  %10 = bitcast %"imp::Span"* %span to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %_3 = select i1 %12, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %13 = bitcast %"imp::Span"* %span to %"imp::Span::Compiler"*
  %14 = bitcast %"imp::Span::Compiler"* %13 to %"proc_macro::Span"*
  %15 = bitcast %"proc_macro::Span"* %s to i8*
  %16 = bitcast %"proc_macro::Span"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 4, i1 false)
; call core::str::<impl str>::parse
  %17 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h96bf1284bafc9ddeE"([0 x i8]* nonnull align 1 %string.0, i64 %string.1)
  store i32 %17, i32* %6, align 4
  %18 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %_6 to i8*
  %19 = bitcast i32* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 4, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Ident::new_raw
  call void @_ZN11proc_macro28fallback5Ident7new_raw17hd4a901771a372f40E(%"fallback::Ident"* noalias nocapture sret(%"fallback::Ident") dereferenceable(32) %_21, [0 x i8]* nonnull align 1 %string.0, i64 %string.1)
  br label %bb13

bb13:                                             ; preds = %bb1
  %20 = bitcast %"imp::Ident"* %0 to %"imp::Ident::Fallback"*
  %21 = getelementptr inbounds %"imp::Ident::Fallback", %"imp::Ident::Fallback"* %20, i32 0, i32 1
  %22 = bitcast %"fallback::Ident"* %21 to i8*
  %23 = bitcast %"fallback::Ident"* %_21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false)
  %24 = bitcast %"imp::Ident"* %0 to i32*
  store i32 1, i32* %24, align 8
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  ret void

bb4:                                              ; preds = %bb3
  %25 = bitcast %"core::result::Result<proc_macro::TokenStream, proc_macro::LexError>"* %_6 to i32*
  %26 = load i32, i32* %25, align 4
; call core::result::Result<T,E>::unwrap
  %27 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h116a095dcf4e3f12E"(i32 %26, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1749 to %"core::panic::location::Location"*))
  store i32 %27, i32* %5, align 4
  %28 = bitcast %"proc_macro::TokenStream"* %p to i8*
  %29 = bitcast i32* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 4, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
  %30 = bitcast %"proc_macro::TokenStream"* %_12 to i8*
  %31 = bitcast %"proc_macro::TokenStream"* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 %31, i64 4, i1 false)
  %32 = bitcast %"proc_macro::TokenStream"* %_12 to i32*
  %33 = load i32, i32* %32, align 4
; call proc_macro::token_stream::<impl core::iter::traits::collect::IntoIterator for proc_macro::TokenStream>::into_iter
  %34 = call i32 @"_ZN10proc_macro12token_stream95_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$proc_macro..TokenStream$GT$9into_iter17h17e6056c22875a88E"(i32 %33)
  store i32 %34, i32* %4, align 4
  %35 = bitcast %"proc_macro::token_stream::IntoIter"* %_11 to i8*
  %36 = bitcast i32* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 4, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb5
; invoke <proc_macro::token_stream::IntoIter as core::iter::traits::iterator::Iterator>::next
  %37 = invoke i64 @"_ZN93_$LT$proc_macro..token_stream..IntoIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4e33bccb4bdf9f32E"(%"proc_macro::token_stream::IntoIter"* align 4 dereferenceable(4) %_11)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  store i64 %37, i64* %2, align 8
  %38 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_9 to i8*
  %39 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 8 %39, i64 8, i1 false)
  %40 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_9 to i32*
  %41 = load i32, i32* %40, align 4, !range !31
  %42 = sub i32 %41, 4
  %43 = icmp eq i32 %42, 0
  %_14 = select i1 %43, i64 0, i64 1
  %44 = icmp eq i64 %_14, 1
  br i1 %44, label %bb9, label %bb8

bb15:                                             ; preds = %bb21, %bb20, %bb22, %cleanup
; call core::ptr::drop_in_place<proc_macro::token_stream::IntoIter>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..token_stream..IntoIter$GT$17h5922e4ebf79848ccE"(%"proc_macro::token_stream::IntoIter"* %_11) #18
  br label %bb16

cleanup:                                          ; preds = %bb19, %bb6
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  %47 = extractvalue { i8*, i32 } %45, 1
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %46, i8** %48, align 8
  %49 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %47, i32* %49, align 8
  br label %bb15

bb9:                                              ; preds = %bb7
  %50 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_9 to %"core::option::Option<proc_macro::TokenTree>::Some"*
  %51 = bitcast %"core::option::Option<proc_macro::TokenTree>::Some"* %50 to %"proc_macro::TokenTree"*
  %52 = bitcast %"proc_macro::TokenTree"* %51 to i32*
  %53 = load i32, i32* %52, align 4, !range !36
  %_13 = zext i32 %53 to i64
  %54 = icmp eq i64 %_13, 1
  br i1 %54, label %bb10, label %bb8

bb8:                                              ; preds = %bb9, %bb7
; invoke std::panicking::begin_panic
  invoke void @_ZN3std9panicking11begin_panic17he0a282308de06f91E([0 x i8]* nonnull align 1 bitcast (<{ [14 x i8] }>* @alloc1750 to [0 x i8]*), i64 14, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1752 to %"core::panic::location::Location"*)) #19
          to label %unreachable unwind label %cleanup1

bb10:                                             ; preds = %bb9
  %55 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_9 to %"core::option::Option<proc_macro::TokenTree>::Some"*
  %56 = bitcast %"core::option::Option<proc_macro::TokenTree>::Some"* %55 to %"proc_macro::TokenTree"*
  %57 = bitcast %"proc_macro::TokenTree"* %56 to %"proc_macro::TokenTree::Ident"*
  %58 = getelementptr inbounds %"proc_macro::TokenTree::Ident", %"proc_macro::TokenTree::Ident"* %57, i32 0, i32 1
  %59 = bitcast %"proc_macro::Ident"* %i to i8*
  %60 = bitcast %"proc_macro::Ident"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %60, i64 4, i1 false)
  %61 = bitcast %"proc_macro::Span"* %_18 to i8*
  %62 = bitcast %"proc_macro::Span"* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 4, i1 false)
  %63 = bitcast %"proc_macro::Span"* %_18 to i32*
  %64 = load i32, i32* %63, align 4
; invoke proc_macro::Ident::set_span
  invoke void @_ZN10proc_macro5Ident8set_span17h921b6e509e58a60fE(%"proc_macro::Ident"* align 4 dereferenceable(4) %i, i32 %64)
          to label %bb11 unwind label %cleanup1

unreachable:                                      ; preds = %bb8
  unreachable

bb22:                                             ; preds = %cleanup1
  %65 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_9 to i32*
  %66 = load i32, i32* %65, align 4, !range !31
  %67 = sub i32 %66, 4
  %68 = icmp eq i32 %67, 0
  %_27 = select i1 %68, i64 0, i64 1
  %69 = icmp eq i64 %_27, 1
  br i1 %69, label %bb20, label %bb15

cleanup1:                                         ; preds = %bb10, %bb8
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  %72 = extractvalue { i8*, i32 } %70, 1
  %73 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %71, i8** %73, align 8
  %74 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %72, i32* %74, align 8
  br label %bb22

bb11:                                             ; preds = %bb10
  %75 = bitcast %"proc_macro::Ident"* %ident to i8*
  %76 = bitcast %"proc_macro::Ident"* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 4, i1 false)
  %77 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_9 to i32*
  %78 = load i32, i32* %77, align 4, !range !31
  %79 = sub i32 %78, 4
  %80 = icmp eq i32 %79, 0
  %_25 = select i1 %80, i64 0, i64 1
  %81 = icmp eq i64 %_25, 1
  br i1 %81, label %bb18, label %bb17

bb20:                                             ; preds = %bb22
  %82 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_9 to %"core::option::Option<proc_macro::TokenTree>::Some"*
  %83 = bitcast %"core::option::Option<proc_macro::TokenTree>::Some"* %82 to %"proc_macro::TokenTree"*
  %84 = bitcast %"proc_macro::TokenTree"* %83 to i32*
  %85 = load i32, i32* %84, align 4, !range !36
  %_26 = zext i32 %85 to i64
  %86 = icmp eq i64 %_26, 1
  br i1 %86, label %bb15, label %bb21

bb21:                                             ; preds = %bb20
  %87 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_9 to %"core::option::Option<proc_macro::TokenTree>::Some"*
  %88 = bitcast %"core::option::Option<proc_macro::TokenTree>::Some"* %87 to %"proc_macro::TokenTree"*
; call core::ptr::drop_in_place<proc_macro::TokenTree>
  call void @"_ZN4core3ptr42drop_in_place$LT$proc_macro..TokenTree$GT$17h590df432ff1e94c3E"(%"proc_macro::TokenTree"* %88) #18
  br label %bb15

bb18:                                             ; preds = %bb11
  %89 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_9 to %"core::option::Option<proc_macro::TokenTree>::Some"*
  %90 = bitcast %"core::option::Option<proc_macro::TokenTree>::Some"* %89 to %"proc_macro::TokenTree"*
  %91 = bitcast %"proc_macro::TokenTree"* %90 to i32*
  %92 = load i32, i32* %91, align 4, !range !36
  %_24 = zext i32 %92 to i64
  %93 = icmp eq i64 %_24, 1
  br i1 %93, label %bb17, label %bb19

bb17:                                             ; preds = %bb19, %bb18, %bb11
; call core::ptr::drop_in_place<proc_macro::token_stream::IntoIter>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro..token_stream..IntoIter$GT$17h5922e4ebf79848ccE"(%"proc_macro::token_stream::IntoIter"* %_11)
  br label %bb12

bb19:                                             ; preds = %bb18
  %94 = bitcast %"core::option::Option<proc_macro::TokenTree>"* %_9 to %"core::option::Option<proc_macro::TokenTree>::Some"*
  %95 = bitcast %"core::option::Option<proc_macro::TokenTree>::Some"* %94 to %"proc_macro::TokenTree"*
; invoke core::ptr::drop_in_place<proc_macro::TokenTree>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$proc_macro..TokenTree$GT$17h590df432ff1e94c3E"(%"proc_macro::TokenTree"* %95)
          to label %bb17 unwind label %cleanup

bb16:                                             ; preds = %bb15
  %96 = bitcast { i8*, i32 }* %3 to i8**
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = insertvalue { i8*, i32 } undef, i8* %97, 0
  %101 = insertvalue { i8*, i32 } %100, i32 %99, 1
  resume { i8*, i32 } %101

bb12:                                             ; preds = %bb17
  %102 = bitcast %"proc_macro::Ident"* %_19 to i8*
  %103 = bitcast %"proc_macro::Ident"* %ident to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 4, i1 false)
  %104 = bitcast %"imp::Ident"* %0 to %"imp::Ident::Compiler"*
  %105 = getelementptr inbounds %"imp::Ident::Compiler", %"imp::Ident::Compiler"* %104, i32 0, i32 1
  %106 = bitcast %"proc_macro::Ident"* %105 to i8*
  %107 = bitcast %"proc_macro::Ident"* %_19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 4, i1 false)
  %108 = bitcast %"imp::Ident"* %0 to i32*
  store i32 0, i32* %108, align 8
  br label %bb14
}

; proc_macro2::imp::Ident::span
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp5Ident4span17ha37ca1ab777b590dE(%"imp::Ident"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_4 = alloca %"proc_macro::Span", align 4
  %1 = alloca %"imp::Span", align 4
  %2 = bitcast %"imp::Ident"* %self to i32*
  %3 = load i32, i32* %2, align 8, !range !19
  %_2 = zext i32 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::Ident"* %self to %"imp::Ident::Compiler"*
  %t1 = getelementptr inbounds %"imp::Ident::Compiler", %"imp::Ident::Compiler"* %4, i32 0, i32 1
; call proc_macro::Ident::span
  %5 = call i32 @_ZN10proc_macro5Ident4span17h958da9c9c1543b13E(%"proc_macro::Ident"* align 4 dereferenceable(4) %t1)
  store i32 %5, i32* %0, align 4
  %6 = bitcast %"proc_macro::Span"* %_4 to i8*
  %7 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %8 = bitcast %"imp::Ident"* %self to %"imp::Ident::Fallback"*
  %t = getelementptr inbounds %"imp::Ident::Fallback", %"imp::Ident::Fallback"* %8, i32 0, i32 1
; call proc_macro2::fallback::Ident::span
  call void @_ZN11proc_macro28fallback5Ident4span17h14e8afddfe5743fdE(%"fallback::Ident"* align 8 dereferenceable(32) %t)
  br label %bb5

bb5:                                              ; preds = %bb1
  %9 = bitcast %"imp::Span"* %1 to i32*
  store i32 0, i32* %9, align 4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %10 = bitcast %"imp::Span"* %1 to i32*
  %11 = load i32, i32* %10, align 4
  ret i32 %11

bb4:                                              ; preds = %bb3
  %12 = bitcast %"imp::Span"* %1 to %"imp::Span::Compiler"*
  %13 = bitcast %"imp::Span::Compiler"* %12 to %"proc_macro::Span"*
  %14 = bitcast %"proc_macro::Span"* %13 to i8*
  %15 = bitcast %"proc_macro::Span"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 4, i1 false)
  br label %bb6
}

; proc_macro2::imp::Ident::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp5Ident8set_span17h31718304230e0ce6E(%"imp::Ident"* align 8 dereferenceable(40) %self, i32 %0) unnamed_addr #1 {
start:
  %_12 = alloca %"proc_macro::Span", align 4
  %s = alloca %"proc_macro::Span", align 4
  %_5 = alloca %"imp::Span", align 4
  %_3 = alloca { %"imp::Ident"*, %"imp::Span", [1 x i32] }, align 8
  %1 = alloca i32, align 4
  %span = alloca %"imp::Span", align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %"imp::Span"* %span to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %4 = bitcast %"imp::Span"* %_5 to i8*
  %5 = bitcast %"imp::Span"* %span to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast { %"imp::Ident"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Ident"**
  store %"imp::Ident"* %self, %"imp::Ident"** %6, align 8
  %7 = getelementptr inbounds { %"imp::Ident"*, %"imp::Span", [1 x i32] }, { %"imp::Ident"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %8 = bitcast %"imp::Span"* %7 to i8*
  %9 = bitcast %"imp::Span"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %9, i64 4, i1 false)
  %10 = bitcast { %"imp::Ident"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Ident"**
  %11 = load %"imp::Ident"*, %"imp::Ident"** %10, align 8, !nonnull !20
  %12 = bitcast %"imp::Ident"* %11 to i32*
  %13 = load i32, i32* %12, align 8, !range !19
  %_8 = zext i32 %13 to i64
  switch i64 %_8, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %bb1, %bb3, %start
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17haa8ba9ba33e455c9E() #19
  unreachable

bb1:                                              ; preds = %start
  %14 = getelementptr inbounds { %"imp::Ident"*, %"imp::Span", [1 x i32] }, { %"imp::Ident"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %15 = bitcast %"imp::Span"* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %_6 = select i1 %17, i64 1, i64 0
  %18 = icmp eq i64 %_6, 0
  br i1 %18, label %bb4, label %bb2

bb3:                                              ; preds = %start
  %19 = getelementptr inbounds { %"imp::Ident"*, %"imp::Span", [1 x i32] }, { %"imp::Ident"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %20 = bitcast %"imp::Span"* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  %_7 = select i1 %22, i64 1, i64 0
  %23 = icmp eq i64 %_7, 1
  br i1 %23, label %bb5, label %bb2

bb5:                                              ; preds = %bb3
  %24 = bitcast { %"imp::Ident"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Ident"**
  %25 = load %"imp::Ident"*, %"imp::Ident"** %24, align 8, !nonnull !20
  %26 = bitcast %"imp::Ident"* %25 to %"imp::Ident::Fallback"*
  %t = getelementptr inbounds %"imp::Ident::Fallback", %"imp::Ident::Fallback"* %26, i32 0, i32 1
; call proc_macro2::fallback::Ident::set_span
  call void @_ZN11proc_macro28fallback5Ident8set_span17ha949967e60c43a52E(%"fallback::Ident"* align 8 dereferenceable(32) %t)
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  ret void

bb4:                                              ; preds = %bb1
  %27 = bitcast { %"imp::Ident"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Ident"**
  %28 = load %"imp::Ident"*, %"imp::Ident"** %27, align 8, !nonnull !20
  %29 = bitcast %"imp::Ident"* %28 to %"imp::Ident::Compiler"*
  %t1 = getelementptr inbounds %"imp::Ident::Compiler", %"imp::Ident::Compiler"* %29, i32 0, i32 1
  %30 = getelementptr inbounds { %"imp::Ident"*, %"imp::Span", [1 x i32] }, { %"imp::Ident"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %31 = bitcast %"imp::Span"* %30 to %"imp::Span::Compiler"*
  %32 = bitcast %"imp::Span::Compiler"* %31 to %"proc_macro::Span"*
  %33 = bitcast %"proc_macro::Span"* %s to i8*
  %34 = bitcast %"proc_macro::Span"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 8 %34, i64 4, i1 false)
  %35 = bitcast %"proc_macro::Span"* %_12 to i8*
  %36 = bitcast %"proc_macro::Span"* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 4, i1 false)
  %37 = bitcast %"proc_macro::Span"* %_12 to i32*
  %38 = load i32, i32* %37, align 4
; call proc_macro::Ident::set_span
  call void @_ZN10proc_macro5Ident8set_span17h921b6e509e58a60fE(%"proc_macro::Ident"* align 4 dereferenceable(4) %t1, i32 %38)
  br label %bb6
}

; proc_macro2::imp::Ident::unwrap_nightly
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp5Ident14unwrap_nightly17hd1b1e8b73e0e8ff5E(%"imp::Ident"* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %s = alloca %"proc_macro::Ident", align 4
  %1 = alloca %"proc_macro::Ident", align 4
  %2 = bitcast %"imp::Ident"* %self to i32*
  %3 = load i32, i32* %2, align 8, !range !19
  %_2 = zext i32 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::Ident"* %self to %"imp::Ident::Compiler"*
  %5 = getelementptr inbounds %"imp::Ident::Compiler", %"imp::Ident::Compiler"* %4, i32 0, i32 1
  %6 = bitcast %"proc_macro::Ident"* %s to i8*
  %7 = bitcast %"proc_macro::Ident"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::Ident"* %1 to i8*
  %9 = bitcast %"proc_macro::Ident"* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 4, i1 false)
  %10 = bitcast %"imp::Ident"* %self to i32*
  %11 = load i32, i32* %10, align 8, !range !19
  %_4 = zext i32 %11 to i64
  %12 = icmp eq i64 %_4, 0
  br i1 %12, label %bb5, label %bb6

bb1:                                              ; preds = %start
; invoke proc_macro2::imp::mismatch
  invoke void @_ZN11proc_macro23imp8mismatch17haa8ba9ba33e455c9E() #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb8:                                              ; preds = %cleanup
  %13 = bitcast %"imp::Ident"* %self to i32*
  %14 = load i32, i32* %13, align 8, !range !19
  %_5 = zext i32 %14 to i64
  %15 = icmp eq i64 %_5, 0
  br i1 %15, label %bb4, label %bb7

cleanup:                                          ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb8

bb4:                                              ; preds = %bb7, %bb8
  %21 = bitcast { i8*, i32 }* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26

bb7:                                              ; preds = %bb8
; call core::ptr::drop_in_place<proc_macro2::imp::Ident>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Ident$GT$17h63dd89cad702d684E"(%"imp::Ident"* %self) #18
  br label %bb4

bb5:                                              ; preds = %bb6, %bb3
  %27 = bitcast %"proc_macro::Ident"* %1 to i32*
  %28 = load i32, i32* %27, align 4
  ret i32 %28

bb6:                                              ; preds = %bb3
; call core::ptr::drop_in_place<proc_macro2::imp::Ident>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Ident$GT$17h63dd89cad702d684E"(%"imp::Ident"* %self)
  br label %bb5
}

; <proc_macro2::imp::Ident as core::cmp::PartialEq>::eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN64_$LT$proc_macro2..imp..Ident$u20$as$u20$core..cmp..PartialEq$GT$2eq17h68fa95bc410be580E"(%"imp::Ident"* align 8 dereferenceable(40) %self, %"imp::Ident"* align 8 dereferenceable(40) %other) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %o = alloca %"fallback::Ident"*, align 8
  %t = alloca %"fallback::Ident"*, align 8
  %_15 = alloca %"alloc::string::String", align 8
  %_12 = alloca %"alloc::string::String", align 8
  %_3 = alloca { i64*, i64* }, align 8
  %1 = alloca i8, align 1
  %2 = bitcast { i64*, i64* }* %_3 to %"imp::Ident"**
  store %"imp::Ident"* %self, %"imp::Ident"** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_3, i32 0, i32 1
  %4 = bitcast i64** %3 to %"imp::Ident"**
  store %"imp::Ident"* %other, %"imp::Ident"** %4, align 8
  %5 = bitcast { i64*, i64* }* %_3 to %"imp::Ident"**
  %6 = load %"imp::Ident"*, %"imp::Ident"** %5, align 8, !nonnull !20
  %7 = bitcast %"imp::Ident"* %6 to i32*
  %8 = load i32, i32* %7, align 8, !range !19
  %_8 = zext i32 %8 to i64
  switch i64 %_8, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %bb1, %bb3, %start
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17haa8ba9ba33e455c9E() #19
  unreachable

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_3, i32 0, i32 1
  %10 = bitcast i64** %9 to %"imp::Ident"**
  %11 = load %"imp::Ident"*, %"imp::Ident"** %10, align 8, !nonnull !20
  %12 = bitcast %"imp::Ident"* %11 to i32*
  %13 = load i32, i32* %12, align 8, !range !19
  %_6 = zext i32 %13 to i64
  %14 = icmp eq i64 %_6, 0
  br i1 %14, label %bb4, label %bb2

bb3:                                              ; preds = %start
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_3, i32 0, i32 1
  %16 = bitcast i64** %15 to %"imp::Ident"**
  %17 = load %"imp::Ident"*, %"imp::Ident"** %16, align 8, !nonnull !20
  %18 = bitcast %"imp::Ident"* %17 to i32*
  %19 = load i32, i32* %18, align 8, !range !19
  %_7 = zext i32 %19 to i64
  %20 = icmp eq i64 %_7, 1
  br i1 %20, label %bb9, label %bb2

bb9:                                              ; preds = %bb3
  %21 = bitcast { i64*, i64* }* %_3 to %"imp::Ident"**
  %22 = load %"imp::Ident"*, %"imp::Ident"** %21, align 8, !nonnull !20
  %23 = bitcast %"imp::Ident"* %22 to %"imp::Ident::Fallback"*
  %24 = getelementptr inbounds %"imp::Ident::Fallback", %"imp::Ident::Fallback"* %23, i32 0, i32 1
  store %"fallback::Ident"* %24, %"fallback::Ident"** %t, align 8
  %25 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_3, i32 0, i32 1
  %26 = bitcast i64** %25 to %"imp::Ident"**
  %27 = load %"imp::Ident"*, %"imp::Ident"** %26, align 8, !nonnull !20
  %28 = bitcast %"imp::Ident"* %27 to %"imp::Ident::Fallback"*
  %29 = getelementptr inbounds %"imp::Ident::Fallback", %"imp::Ident::Fallback"* %28, i32 0, i32 1
  store %"fallback::Ident"* %29, %"fallback::Ident"** %o, align 8
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %30 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h2f91869674e547ceE"(%"fallback::Ident"** align 8 dereferenceable(8) %t, %"fallback::Ident"** align 8 dereferenceable(8) %o)
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %1, align 1
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %32 = load i8, i8* %1, align 1, !range !2
  %33 = trunc i8 %32 to i1
  ret i1 %33

bb4:                                              ; preds = %bb1
  %34 = bitcast { i64*, i64* }* %_3 to %"imp::Ident"**
  %35 = load %"imp::Ident"*, %"imp::Ident"** %34, align 8, !nonnull !20
  %36 = bitcast %"imp::Ident"* %35 to %"imp::Ident::Compiler"*
  %t1 = getelementptr inbounds %"imp::Ident::Compiler", %"imp::Ident::Compiler"* %36, i32 0, i32 1
  %37 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_3, i32 0, i32 1
  %38 = bitcast i64** %37 to %"imp::Ident"**
  %39 = load %"imp::Ident"*, %"imp::Ident"** %38, align 8, !nonnull !20
  %40 = bitcast %"imp::Ident"* %39 to %"imp::Ident::Compiler"*
  %o2 = getelementptr inbounds %"imp::Ident::Compiler", %"imp::Ident::Compiler"* %40, i32 0, i32 1
; call <proc_macro::Ident as alloc::string::ToString>::to_string
  call void @"_ZN61_$LT$proc_macro..Ident$u20$as$u20$alloc..string..ToString$GT$9to_string17h65507f84774ff815E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_12, %"proc_macro::Ident"* align 4 dereferenceable(4) %t1)
  br label %bb5

bb5:                                              ; preds = %bb4
; invoke <proc_macro::Ident as alloc::string::ToString>::to_string
  invoke void @"_ZN61_$LT$proc_macro..Ident$u20$as$u20$alloc..string..ToString$GT$9to_string17h65507f84774ff815E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_15, %"proc_macro::Ident"* align 4 dereferenceable(4) %o2)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <alloc::string::String as core::cmp::PartialEq>::eq
  %41 = invoke zeroext i1 @"_ZN62_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$GT$2eq17h95af6a925cb85c16E"(%"alloc::string::String"* align 8 dereferenceable(24) %_12, %"alloc::string::String"* align 8 dereferenceable(24) %_15)
          to label %bb7 unwind label %cleanup3

bb12:                                             ; preds = %bb11, %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_12) #18
  br label %bb13

cleanup:                                          ; preds = %bb7, %bb5
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  %44 = extractvalue { i8*, i32 } %42, 1
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %43, i8** %45, align 8
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %44, i32* %46, align 8
  br label %bb12

bb7:                                              ; preds = %bb6
  %47 = zext i1 %41 to i8
  store i8 %47, i8* %1, align 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_15)
          to label %bb8 unwind label %cleanup

bb11:                                             ; preds = %cleanup3
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_15) #18
  br label %bb12

cleanup3:                                         ; preds = %bb6
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  %50 = extractvalue { i8*, i32 } %48, 1
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %49, i8** %51, align 8
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %50, i32* %52, align 8
  br label %bb11

bb8:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_12)
  br label %bb10

bb13:                                             ; preds = %bb12
  %53 = bitcast { i8*, i32 }* %0 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %58 = insertvalue { i8*, i32 } %57, i32 %56, 1
  resume { i8*, i32 } %58
}

; <proc_macro2::imp::Ident as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN62_$LT$proc_macro2..imp..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h67ff08a35953d9faE"(%"imp::Ident"* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"imp::Ident"* %self to i32*
  %2 = load i32, i32* %1, align 8, !range !19
  %_3 = zext i32 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"imp::Ident"* %self to %"imp::Ident::Compiler"*
  %t1 = getelementptr inbounds %"imp::Ident::Compiler", %"imp::Ident::Compiler"* %3, i32 0, i32 1
; call <proc_macro::Ident as core::fmt::Display>::fmt
  %4 = call zeroext i1 @"_ZN56_$LT$proc_macro..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h77a64d54ae4dcafeE"(%"proc_macro::Ident"* align 4 dereferenceable(4) %t1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Ident"* %self to %"imp::Ident::Fallback"*
  %t = getelementptr inbounds %"imp::Ident::Fallback", %"imp::Ident::Fallback"* %6, i32 0, i32 1
; call <proc_macro2::fallback::Ident as core::fmt::Display>::fmt
  %7 = call zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h26ed2cfa0936d048E"(%"fallback::Ident"* align 8 dereferenceable(32) %t, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8, i8* %0, align 1, !range !2
  %10 = trunc i8 %9 to i1
  ret i1 %10
}

; <proc_macro2::imp::Ident as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN60_$LT$proc_macro2..imp..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17h9983e09fe8a23b16E"(%"imp::Ident"* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"imp::Ident"* %self to i32*
  %2 = load i32, i32* %1, align 8, !range !19
  %_3 = zext i32 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"imp::Ident"* %self to %"imp::Ident::Compiler"*
  %t1 = getelementptr inbounds %"imp::Ident::Compiler", %"imp::Ident::Compiler"* %3, i32 0, i32 1
; call <proc_macro::Ident as core::fmt::Debug>::fmt
  %4 = call zeroext i1 @"_ZN54_$LT$proc_macro..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17h3427d50d0e75cb29E"(%"proc_macro::Ident"* align 4 dereferenceable(4) %t1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Ident"* %self to %"imp::Ident::Fallback"*
  %t = getelementptr inbounds %"imp::Ident::Fallback", %"imp::Ident::Fallback"* %6, i32 0, i32 1
; call <proc_macro2::fallback::Ident as core::fmt::Debug>::fmt
  %7 = call zeroext i1 @"_ZN65_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17h889fb07ea6680e3cE"(%"fallback::Ident"* align 8 dereferenceable(32) %t, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8, i8* %0, align 1, !range !2
  %10 = trunc i8 %9 to i1
  ret i1 %10
}

; proc_macro2::imp::Literal::from_str_unchecked
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal18from_str_unchecked17hc08e8061b5add76fE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, [0 x i8]* nonnull align 1 %repr.0, i64 %repr.1) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %_8 = alloca %"fallback::Literal", align 8
  %_4 = alloca %"core::result::Result<proc_macro::Literal, imp::LexError>", align 4
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb5

bb5:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::from_str_unchecked
  call void @_ZN11proc_macro28fallback7Literal18from_str_unchecked17h5f4bd390d7d6773bE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_8, [0 x i8]* nonnull align 1 %repr.0, i64 %repr.1)
  br label %bb6

bb2:                                              ; preds = %bb1
; call proc_macro2::imp::compiler_literal_from_str
  %3 = call i64 @_ZN11proc_macro23imp25compiler_literal_from_str17h15ba38c0cacb10f6E([0 x i8]* nonnull align 1 %repr.0, i64 %repr.1)
  store i64 %3, i64* %2, align 8
  %4 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %_4 to i8*
  %5 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 8, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %_4 to i64*
  %7 = load i64, i64* %6, align 4
; call core::result::Result<T,E>::expect
  %8 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9201bcd6a96bf516E"(i64 %7, [0 x i8]* nonnull align 1 bitcast (<{ [15 x i8] }>* @alloc1753 to [0 x i8]*), i64 15, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1755 to %"core::panic::location::Location"*))
  store i32 %8, i32* %1, align 4
  %9 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %10 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb3
  %11 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %12 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %11, i32 0, i32 1
  %13 = bitcast %"proc_macro::Literal"* %12 to i8*
  %14 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 4, i1 false)
  %15 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %15, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4
  ret void

bb6:                                              ; preds = %bb5
  %16 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %17 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %16, i32 0, i32 1
  %18 = bitcast %"fallback::Literal"* %17 to i8*
  %19 = bitcast %"fallback::Literal"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false)
  %20 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %20, align 8
  br label %bb7
}

; proc_macro2::imp::Literal::f32_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14f32_unsuffixed17h11fa82c2edcdacacE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, float %f) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::f32_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14f32_unsuffixed17h1e5e42ae5a638900E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, float %f)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::f32_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal14f32_unsuffixed17h9a4bcd1ac056d118E(float %f)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::f64_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14f64_unsuffixed17h6a38049638a48eb6E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, double %f) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::f64_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14f64_unsuffixed17hb384b3512cf2d064E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, double %f)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::f64_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal14f64_unsuffixed17h77debfc282302848E(double %f)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::string
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal6string17haa91dc3881e9097bE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, [0 x i8]* nonnull align 1 %t.0, i64 %t.1) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::string
  call void @_ZN11proc_macro28fallback7Literal6string17h6d24058751dc67f9E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, [0 x i8]* nonnull align 1 %t.0, i64 %t.1)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::string
  %2 = call i32 @_ZN10proc_macro7Literal6string17h2dc94e4ca9a7d96eE([0 x i8]* nonnull align 1 %t.0, i64 %t.1)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::character
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal9character17h8450716491bc954bE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i32 %t) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::character
  call void @_ZN11proc_macro28fallback7Literal9character17h494e76d44fba9debE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i32 %t)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::character
  %2 = call i32 @_ZN10proc_macro7Literal9character17h16634002c527754cE(i32 %t)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::byte_string
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal11byte_string17h3ceba4c380b77808E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, [0 x i8]* nonnull align 1 %bytes.0, i64 %bytes.1) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::byte_string
  call void @_ZN11proc_macro28fallback7Literal11byte_string17h4f4db71ce3cd2e54E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, [0 x i8]* nonnull align 1 %bytes.0, i64 %bytes.1)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::byte_string
  %2 = call i32 @_ZN10proc_macro7Literal11byte_string17hdce440a70dc5ad25E([0 x i8]* nonnull align 1 %bytes.0, i64 %bytes.1)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::span
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp7Literal4span17h89419d39bb0a6d02E(%"imp::Literal"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_4 = alloca %"proc_macro::Span", align 4
  %1 = alloca %"imp::Span", align 4
  %2 = bitcast %"imp::Literal"* %self to i32*
  %3 = load i32, i32* %2, align 8, !range !19
  %_2 = zext i32 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::Literal"* %self to %"imp::Literal::Compiler"*
  %lit1 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %4, i32 0, i32 1
; call proc_macro::Literal::span
  %5 = call i32 @_ZN10proc_macro7Literal4span17h3ecec0a3331494b4E(%"proc_macro::Literal"* align 4 dereferenceable(4) %lit1)
  store i32 %5, i32* %0, align 4
  %6 = bitcast %"proc_macro::Span"* %_4 to i8*
  %7 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %8 = bitcast %"imp::Literal"* %self to %"imp::Literal::Fallback"*
  %lit = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %8, i32 0, i32 1
; call proc_macro2::fallback::Literal::span
  call void @_ZN11proc_macro28fallback7Literal4span17h312a07386963716cE(%"fallback::Literal"* align 8 dereferenceable(24) %lit)
  br label %bb5

bb5:                                              ; preds = %bb1
  %9 = bitcast %"imp::Span"* %1 to i32*
  store i32 0, i32* %9, align 4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %10 = bitcast %"imp::Span"* %1 to i32*
  %11 = load i32, i32* %10, align 4
  ret i32 %11

bb4:                                              ; preds = %bb3
  %12 = bitcast %"imp::Span"* %1 to %"imp::Span::Compiler"*
  %13 = bitcast %"imp::Span::Compiler"* %12 to %"proc_macro::Span"*
  %14 = bitcast %"proc_macro::Span"* %13 to i8*
  %15 = bitcast %"proc_macro::Span"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 4, i1 false)
  br label %bb6
}

; proc_macro2::imp::Literal::set_span
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal8set_span17heaa958967ac24204E(%"imp::Literal"* align 8 dereferenceable(32) %self, i32 %0) unnamed_addr #1 {
start:
  %_12 = alloca %"proc_macro::Span", align 4
  %s = alloca %"proc_macro::Span", align 4
  %_5 = alloca %"imp::Span", align 4
  %_3 = alloca { %"imp::Literal"*, %"imp::Span", [1 x i32] }, align 8
  %1 = alloca i32, align 4
  %span = alloca %"imp::Span", align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %"imp::Span"* %span to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %4 = bitcast %"imp::Span"* %_5 to i8*
  %5 = bitcast %"imp::Span"* %span to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast { %"imp::Literal"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Literal"**
  store %"imp::Literal"* %self, %"imp::Literal"** %6, align 8
  %7 = getelementptr inbounds { %"imp::Literal"*, %"imp::Span", [1 x i32] }, { %"imp::Literal"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %8 = bitcast %"imp::Span"* %7 to i8*
  %9 = bitcast %"imp::Span"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %9, i64 4, i1 false)
  %10 = bitcast { %"imp::Literal"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Literal"**
  %11 = load %"imp::Literal"*, %"imp::Literal"** %10, align 8, !nonnull !20
  %12 = bitcast %"imp::Literal"* %11 to i32*
  %13 = load i32, i32* %12, align 8, !range !19
  %_8 = zext i32 %13 to i64
  switch i64 %_8, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %bb1, %bb3, %start
; call proc_macro2::imp::mismatch
  call void @_ZN11proc_macro23imp8mismatch17haa8ba9ba33e455c9E() #19
  unreachable

bb1:                                              ; preds = %start
  %14 = getelementptr inbounds { %"imp::Literal"*, %"imp::Span", [1 x i32] }, { %"imp::Literal"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %15 = bitcast %"imp::Span"* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %_6 = select i1 %17, i64 1, i64 0
  %18 = icmp eq i64 %_6, 0
  br i1 %18, label %bb4, label %bb2

bb3:                                              ; preds = %start
  %19 = getelementptr inbounds { %"imp::Literal"*, %"imp::Span", [1 x i32] }, { %"imp::Literal"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %20 = bitcast %"imp::Span"* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  %_7 = select i1 %22, i64 1, i64 0
  %23 = icmp eq i64 %_7, 1
  br i1 %23, label %bb5, label %bb2

bb5:                                              ; preds = %bb3
  %24 = bitcast { %"imp::Literal"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Literal"**
  %25 = load %"imp::Literal"*, %"imp::Literal"** %24, align 8, !nonnull !20
  %26 = bitcast %"imp::Literal"* %25 to %"imp::Literal::Fallback"*
  %lit = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %26, i32 0, i32 1
; call proc_macro2::fallback::Literal::set_span
  call void @_ZN11proc_macro28fallback7Literal8set_span17h11a6a6a6fe1126b0E(%"fallback::Literal"* align 8 dereferenceable(24) %lit)
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  ret void

bb4:                                              ; preds = %bb1
  %27 = bitcast { %"imp::Literal"*, %"imp::Span", [1 x i32] }* %_3 to %"imp::Literal"**
  %28 = load %"imp::Literal"*, %"imp::Literal"** %27, align 8, !nonnull !20
  %29 = bitcast %"imp::Literal"* %28 to %"imp::Literal::Compiler"*
  %lit1 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %29, i32 0, i32 1
  %30 = getelementptr inbounds { %"imp::Literal"*, %"imp::Span", [1 x i32] }, { %"imp::Literal"*, %"imp::Span", [1 x i32] }* %_3, i32 0, i32 1
  %31 = bitcast %"imp::Span"* %30 to %"imp::Span::Compiler"*
  %32 = bitcast %"imp::Span::Compiler"* %31 to %"proc_macro::Span"*
  %33 = bitcast %"proc_macro::Span"* %s to i8*
  %34 = bitcast %"proc_macro::Span"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 8 %34, i64 4, i1 false)
  %35 = bitcast %"proc_macro::Span"* %_12 to i8*
  %36 = bitcast %"proc_macro::Span"* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 4, i1 false)
  %37 = bitcast %"proc_macro::Span"* %_12 to i32*
  %38 = load i32, i32* %37, align 4
; call proc_macro::Literal::set_span
  call void @_ZN10proc_macro7Literal8set_span17h1dda1719833b54d8E(%"proc_macro::Literal"* align 4 dereferenceable(4) %lit1, i32 %38)
  br label %bb6
}

; proc_macro2::imp::Literal::unwrap_nightly
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro23imp7Literal14unwrap_nightly17h6ee22c82881665d5E(%"imp::Literal"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %s = alloca %"proc_macro::Literal", align 4
  %1 = alloca %"proc_macro::Literal", align 4
  %2 = bitcast %"imp::Literal"* %self to i32*
  %3 = load i32, i32* %2, align 8, !range !19
  %_2 = zext i32 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"imp::Literal"* %self to %"imp::Literal::Compiler"*
  %5 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %4, i32 0, i32 1
  %6 = bitcast %"proc_macro::Literal"* %s to i8*
  %7 = bitcast %"proc_macro::Literal"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"proc_macro::Literal"* %1 to i8*
  %9 = bitcast %"proc_macro::Literal"* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 4, i1 false)
  %10 = bitcast %"imp::Literal"* %self to i32*
  %11 = load i32, i32* %10, align 8, !range !19
  %_4 = zext i32 %11 to i64
  %12 = icmp eq i64 %_4, 0
  br i1 %12, label %bb5, label %bb6

bb1:                                              ; preds = %start
; invoke proc_macro2::imp::mismatch
  invoke void @_ZN11proc_macro23imp8mismatch17haa8ba9ba33e455c9E() #19
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb8:                                              ; preds = %cleanup
  %13 = bitcast %"imp::Literal"* %self to i32*
  %14 = load i32, i32* %13, align 8, !range !19
  %_5 = zext i32 %14 to i64
  %15 = icmp eq i64 %_5, 0
  br i1 %15, label %bb4, label %bb7

cleanup:                                          ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb8

bb4:                                              ; preds = %bb7, %bb8
  %21 = bitcast { i8*, i32 }* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26

bb7:                                              ; preds = %bb8
; call core::ptr::drop_in_place<proc_macro2::imp::Literal>
  call void @"_ZN4core3ptr46drop_in_place$LT$proc_macro2..imp..Literal$GT$17h1792172ac090f0a6E"(%"imp::Literal"* %self) #18
  br label %bb4

bb5:                                              ; preds = %bb6, %bb3
  %27 = bitcast %"proc_macro::Literal"* %1 to i32*
  %28 = load i32, i32* %27, align 4
  ret i32 %28

bb6:                                              ; preds = %bb3
; call core::ptr::drop_in_place<proc_macro2::imp::Literal>
  call void @"_ZN4core3ptr46drop_in_place$LT$proc_macro2..imp..Literal$GT$17h1792172ac090f0a6E"(%"imp::Literal"* %self)
  br label %bb5
}

; <proc_macro2::imp::Literal as core::convert::From<proc_macro2::fallback::Literal>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN103_$LT$proc_macro2..imp..Literal$u20$as$u20$core..convert..From$LT$proc_macro2..fallback..Literal$GT$$GT$4from17ha04af699e9b451f8E"(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, %"fallback::Literal"* noalias nocapture dereferenceable(24) %s) unnamed_addr #1 {
start:
  %_2 = alloca %"fallback::Literal", align 8
  %1 = bitcast %"fallback::Literal"* %_2 to i8*
  %2 = bitcast %"fallback::Literal"* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %4 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %3, i32 0, i32 1
  %5 = bitcast %"fallback::Literal"* %4 to i8*
  %6 = bitcast %"fallback::Literal"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %7, align 8
  ret void
}

; <proc_macro2::imp::Literal as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
define void @"_ZN72_$LT$proc_macro2..imp..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17he36a51a38e0881edE"(%"core::result::Result<imp::Literal, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::Literal, imp::LexError>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %repr.0, i64 %repr.1) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %_14 = alloca %"fallback::Literal", align 8
  %_13 = alloca %"imp::Literal", align 8
  %val = alloca %"fallback::Literal", align 8
  %_7 = alloca %"core::result::Result<fallback::Literal, fallback::LexError>", align 8
  %_6 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>", align 8
  %literal = alloca %"fallback::Literal", align 8
  %_3 = alloca %"core::result::Result<proc_macro::Literal, imp::LexError>", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call <proc_macro2::fallback::Literal as core::str::traits::FromStr>::from_str
  call void @"_ZN77_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h6849f3b1e256a6cbE"(%"core::result::Result<fallback::Literal, fallback::LexError>"* noalias nocapture sret(%"core::result::Result<fallback::Literal, fallback::LexError>") dereferenceable(24) %_7, [0 x i8]* nonnull align 1 %repr.0, i64 %repr.1)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro2::imp::compiler_literal_from_str
  %2 = call i64 @_ZN11proc_macro23imp25compiler_literal_from_str17h15ba38c0cacb10f6E([0 x i8]* nonnull align 1 %repr.0, i64 %repr.1)
  store i64 %2, i64* %1, align 8
  %3 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %_3 to i8*
  %4 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %_3 to i64*
  %6 = load i64, i64* %5, align 4
; call core::result::Result<T,E>::map
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hfcf89ed8136ec4d8E"(%"core::result::Result<imp::Literal, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::Literal, imp::LexError>") dereferenceable(40) %0, i64 %6)
  br label %bb11

bb11:                                             ; preds = %bb7, %bb10, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd79bca939fffd5e5E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>") dereferenceable(24) %_6, %"core::result::Result<fallback::Literal, fallback::LexError>"* noalias nocapture dereferenceable(24) %_7)
  br label %bb6

bb6:                                              ; preds = %bb5
  %7 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>"* %_6 to {}**
  %8 = load {}*, {}** %7, align 8
  %9 = icmp eq {}* %8, null
  %_9 = select i1 %9, i64 1, i64 0
  switch i64 %_9, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb7:                                              ; preds = %bb6
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>"* %_6 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>::Continue"*
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, fallback::LexError>, fallback::Literal>::Continue"* %10 to %"fallback::Literal"*
  %12 = bitcast %"fallback::Literal"* %val to i8*
  %13 = bitcast %"fallback::Literal"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"fallback::Literal"* %literal to i8*
  %15 = bitcast %"fallback::Literal"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
  %16 = bitcast %"fallback::Literal"* %_14 to i8*
  %17 = bitcast %"fallback::Literal"* %literal to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  %18 = bitcast %"imp::Literal"* %_13 to %"imp::Literal::Fallback"*
  %19 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %18, i32 0, i32 1
  %20 = bitcast %"fallback::Literal"* %19 to i8*
  %21 = bitcast %"fallback::Literal"* %_14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false)
  %22 = bitcast %"imp::Literal"* %_13 to i32*
  store i32 1, i32* %22, align 8
  %23 = bitcast %"core::result::Result<imp::Literal, imp::LexError>"* %0 to %"core::result::Result<imp::Literal, imp::LexError>::Ok"*
  %24 = getelementptr inbounds %"core::result::Result<imp::Literal, imp::LexError>::Ok", %"core::result::Result<imp::Literal, imp::LexError>::Ok"* %23, i32 0, i32 1
  %25 = bitcast %"imp::Literal"* %24 to i8*
  %26 = bitcast %"imp::Literal"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 32, i1 false)
  %27 = bitcast %"core::result::Result<imp::Literal, imp::LexError>"* %0 to i8*
  store i8 0, i8* %27, align 8
  br label %bb11

bb9:                                              ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h598450d9038a5217E"(%"core::result::Result<imp::Literal, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::Literal, imp::LexError>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1757 to %"core::panic::location::Location"*))
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb11
}

; proc_macro2::imp::compiler_literal_from_str
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN11proc_macro23imp25compiler_literal_from_str17h15ba38c0cacb10f6E([0 x i8]* nonnull align 1 %repr.0, i64 %repr.1) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i32, align 4
  %_2 = alloca %"core::result::Result<proc_macro::Literal, proc_macro::LexError>", align 4
  %2 = alloca %"core::result::Result<proc_macro::Literal, imp::LexError>", align 4
; call <proc_macro::Literal as core::str::traits::FromStr>::from_str
  %3 = call i32 @"_ZN66_$LT$proc_macro..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17hc6c2abaec9c0caaaE"([0 x i8]* nonnull align 1 %repr.0, i64 %repr.1)
  store i32 %3, i32* %1, align 4
  %4 = bitcast %"core::result::Result<proc_macro::Literal, proc_macro::LexError>"* %_2 to i8*
  %5 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast %"core::result::Result<proc_macro::Literal, proc_macro::LexError>"* %_2 to i32*
  %7 = load i32, i32* %6, align 4
; call core::result::Result<T,E>::map_err
  %8 = call i64 @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4b7ddfd9a119aca3E"(i32 %7)
  store i64 %8, i64* %0, align 8
  %9 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %2 to i8*
  %10 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 8 %10, i64 8, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast %"core::result::Result<proc_macro::Literal, imp::LexError>"* %2 to i64*
  %12 = load i64, i64* %11, align 4
  ret i64 %12
}

; <proc_macro2::imp::Literal as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN64_$LT$proc_macro2..imp..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17hab48c838f5c6f0a1E"(%"imp::Literal"* align 8 dereferenceable(32) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"imp::Literal"* %self to i32*
  %2 = load i32, i32* %1, align 8, !range !19
  %_3 = zext i32 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"imp::Literal"* %self to %"imp::Literal::Compiler"*
  %t1 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %3, i32 0, i32 1
; call <proc_macro::Literal as core::fmt::Display>::fmt
  %4 = call zeroext i1 @"_ZN58_$LT$proc_macro..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17h7b41f517aebbc16aE"(%"proc_macro::Literal"* align 4 dereferenceable(4) %t1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Literal"* %self to %"imp::Literal::Fallback"*
  %t = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %6, i32 0, i32 1
; call <proc_macro2::fallback::Literal as core::fmt::Display>::fmt
  %7 = call zeroext i1 @"_ZN69_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17hf10053e550caaa62E"(%"fallback::Literal"* align 8 dereferenceable(24) %t, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8, i8* %0, align 1, !range !2
  %10 = trunc i8 %9 to i1
  ret i1 %10
}

; <proc_macro2::imp::Literal as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN62_$LT$proc_macro2..imp..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h78aaa0dfc2beeb65E"(%"imp::Literal"* align 8 dereferenceable(32) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"imp::Literal"* %self to i32*
  %2 = load i32, i32* %1, align 8, !range !19
  %_3 = zext i32 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"imp::Literal"* %self to %"imp::Literal::Compiler"*
  %t1 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %3, i32 0, i32 1
; call <proc_macro::Literal as core::fmt::Debug>::fmt
  %4 = call zeroext i1 @"_ZN56_$LT$proc_macro..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h9d5b78878a56f494E"(%"proc_macro::Literal"* align 4 dereferenceable(4) %t1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Literal"* %self to %"imp::Literal::Fallback"*
  %t = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %6, i32 0, i32 1
; call <proc_macro2::fallback::Literal as core::fmt::Debug>::fmt
  %7 = call zeroext i1 @"_ZN67_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17hb10f1b8a1b9ed681E"(%"fallback::Literal"* align 8 dereferenceable(24) %t, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8, i8* %0, align 1, !range !2
  %10 = trunc i8 %9 to i1
  ret i1 %10
}

; proc_macro2::TokenStream::_new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro211TokenStream4_new17hd52b5c958b80889aE(%TokenStream* noalias nocapture sret(%TokenStream) dereferenceable(40) %0, %"imp::TokenStream"* noalias nocapture dereferenceable(40) %inner) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::TokenStream", align 8
  %1 = bitcast %"imp::TokenStream"* %_2 to i8*
  %2 = bitcast %"imp::TokenStream"* %inner to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  %3 = bitcast %TokenStream* %0 to %"imp::TokenStream"*
  %4 = bitcast %"imp::TokenStream"* %3 to i8*
  %5 = bitcast %"imp::TokenStream"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false)
  ret void
}

; proc_macro2::TokenStream::new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro211TokenStream3new17hd6bc4857004b217aE(%TokenStream* noalias nocapture sret(%TokenStream) dereferenceable(40) %0) unnamed_addr #1 {
start:
  %_1 = alloca %"imp::TokenStream", align 8
; call proc_macro2::imp::TokenStream::new
  call void @_ZN11proc_macro23imp11TokenStream3new17h3dc36b1df7db0ee0E(%"imp::TokenStream"* noalias nocapture sret(%"imp::TokenStream") dereferenceable(40) %_1)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::TokenStream::_new
  call void @_ZN11proc_macro211TokenStream4_new17hd52b5c958b80889aE(%TokenStream* noalias nocapture sret(%TokenStream) dereferenceable(40) %0, %"imp::TokenStream"* noalias nocapture dereferenceable(40) %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::TokenStream::is_empty
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN11proc_macro211TokenStream8is_empty17ha8c9079a7849a178E(%TokenStream* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %TokenStream* %self to %"imp::TokenStream"*
; call proc_macro2::imp::TokenStream::is_empty
  %0 = call zeroext i1 @_ZN11proc_macro23imp11TokenStream8is_empty17h0bb7f81dbe0dd7eeE(%"imp::TokenStream"* align 8 dereferenceable(40) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <proc_macro2::TokenStream as core::default::Default>::default
; Function Attrs: nonlazybind uwtable
define void @"_ZN67_$LT$proc_macro2..TokenStream$u20$as$u20$core..default..Default$GT$7default17h13915f7da0c35cadE"(%TokenStream* noalias nocapture sret(%TokenStream) dereferenceable(40) %0) unnamed_addr #1 {
start:
; call proc_macro2::TokenStream::new
  call void @_ZN11proc_macro211TokenStream3new17hd6bc4857004b217aE(%TokenStream* noalias nocapture sret(%TokenStream) dereferenceable(40) %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <proc_macro2::TokenStream as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
define void @"_ZN71_$LT$proc_macro2..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17hf454bc818ebf827cE"(%"core::result::Result<TokenStream, LexError>"* noalias nocapture sret(%"core::result::Result<TokenStream, LexError>") dereferenceable(48) %0, [0 x i8]* nonnull align 1 %src.0, i64 %src.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_13 = alloca %"imp::TokenStream", align 8
  %_12 = alloca %TokenStream, align 8
  %val = alloca %"imp::TokenStream", align 8
  %_5 = alloca %"core::result::Result<imp::TokenStream, imp::LexError>", align 8
  %_4 = alloca %"core::result::Result<imp::TokenStream, LexError>", align 8
  %_3 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>", align 8
  %e = alloca %"imp::TokenStream", align 8
  store i8 0, i8* %_14, align 1
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h39ac1c872f7ab429E"(%"core::result::Result<imp::TokenStream, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::TokenStream, imp::LexError>") dereferenceable(48) %_5, [0 x i8]* nonnull align 1 %src.0, i64 %src.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4a1dd4bf806dc6d9E"(%"core::result::Result<imp::TokenStream, LexError>"* noalias nocapture sret(%"core::result::Result<imp::TokenStream, LexError>") dereferenceable(48) %_4, %"core::result::Result<imp::TokenStream, imp::LexError>"* noalias nocapture dereferenceable(48) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6a4058ab03d358aaE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>") dereferenceable(48) %_3, %"core::result::Result<imp::TokenStream, LexError>"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>"* %_3 to i8*
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = trunc i8 %3 to i1
  %_8 = zext i1 %4 to i64
  switch i64 %_8, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %5 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>"* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Continue"* %5, i32 0, i32 1
  %7 = bitcast %"imp::TokenStream"* %val to i8*
  %8 = bitcast %"imp::TokenStream"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 40, i1 false)
  store i8 1, i8* %_14, align 1
  %9 = bitcast %"imp::TokenStream"* %e to i8*
  %10 = bitcast %"imp::TokenStream"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 40, i1 false)
  store i8 0, i8* %_14, align 1
  %11 = bitcast %"imp::TokenStream"* %_13 to i8*
  %12 = bitcast %"imp::TokenStream"* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 40, i1 false)
; invoke proc_macro2::TokenStream::_new
  invoke void @_ZN11proc_macro211TokenStream4_new17hd52b5c958b80889aE(%TokenStream* noalias nocapture sret(%TokenStream) dereferenceable(40) %_12, %"imp::TokenStream"* noalias nocapture dereferenceable(40) %_13)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>"* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Break"*
  %14 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, LexError>, imp::TokenStream>::Break"* %13, i32 0, i32 1
  %15 = load i8, i8* %14, align 1, !range !2
  %residual = trunc i8 %15 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3495ee785fded742E"(%"core::result::Result<TokenStream, LexError>"* noalias nocapture sret(%"core::result::Result<TokenStream, LexError>") dereferenceable(48) %0, i1 zeroext %residual, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1759 to %"core::panic::location::Location"*))
  br label %bb7

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_14, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  ret void

bb8:                                              ; preds = %bb4
  %16 = bitcast %"core::result::Result<TokenStream, LexError>"* %0 to %"core::result::Result<TokenStream, LexError>::Ok"*
  %17 = getelementptr inbounds %"core::result::Result<TokenStream, LexError>::Ok", %"core::result::Result<TokenStream, LexError>::Ok"* %16, i32 0, i32 1
  %18 = bitcast %TokenStream* %17 to i8*
  %19 = bitcast %TokenStream* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 40, i1 false)
  %20 = bitcast %"core::result::Result<TokenStream, LexError>"* %0 to i8*
  store i8 0, i8* %20, align 8
  store i8 0, i8* %_14, align 1
  br label %bb9

bb12:                                             ; preds = %cleanup
  %21 = load i8, i8* %_14, align 1, !range !2
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb12

bb10:                                             ; preds = %bb11, %bb12
  %28 = bitcast { i8*, i32 }* %1 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb11:                                             ; preds = %bb12
; call core::ptr::drop_in_place<proc_macro2::imp::TokenStream>
  call void @"_ZN4core3ptr50drop_in_place$LT$proc_macro2..imp..TokenStream$GT$17h3e867c88d655ed3aE"(%"imp::TokenStream"* %e) #18
  br label %bb10
}

; <proc_macro2::TokenStream as core::str::traits::FromStr>::from_str::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN71_$LT$proc_macro2..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str28_$u7b$$u7b$closure$u7d$$u7d$17h68248873f4891c69E"(i1 zeroext %e) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = zext i1 %e to i8
  store i8 %1, i8* %0, align 1
  %2 = load i8, i8* %0, align 1, !range !2
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; <proc_macro2::TokenStream as core::convert::From<proc_macro::TokenStream>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN95_$LT$proc_macro2..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenStream$GT$$GT$4from17h0e503313267ab021E"(%TokenStream* noalias nocapture sret(%TokenStream) dereferenceable(40) %0, i32 %1) unnamed_addr #1 {
start:
  %_3 = alloca %"proc_macro::TokenStream", align 4
  %_2 = alloca %"imp::TokenStream", align 8
  %2 = alloca i32, align 4
  %inner = alloca %"proc_macro::TokenStream", align 4
  store i32 %1, i32* %2, align 4
  %3 = bitcast %"proc_macro::TokenStream"* %inner to i8*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %5 = bitcast %"proc_macro::TokenStream"* %_3 to i8*
  %6 = bitcast %"proc_macro::TokenStream"* %inner to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  %7 = bitcast %"proc_macro::TokenStream"* %_3 to i32*
  %8 = load i32, i32* %7, align 4
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hd57029033d51eaa8E"(%"imp::TokenStream"* noalias nocapture sret(%"imp::TokenStream") dereferenceable(40) %_2, i32 %8)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::TokenStream::_new
  call void @_ZN11proc_macro211TokenStream4_new17hd52b5c958b80889aE(%TokenStream* noalias nocapture sret(%TokenStream) dereferenceable(40) %0, %"imp::TokenStream"* noalias nocapture dereferenceable(40) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::<impl core::convert::From<proc_macro2::TokenStream> for proc_macro::TokenStream>::from
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN11proc_macro2105_$LT$impl$u20$core..convert..From$LT$proc_macro2..TokenStream$GT$$u20$for$u20$proc_macro..TokenStream$GT$4from17h63e134b8f78ba633E"(%TokenStream* noalias nocapture dereferenceable(40) %inner) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_2 = alloca %"imp::TokenStream", align 8
  %1 = alloca %"proc_macro::TokenStream", align 4
  %2 = bitcast %TokenStream* %inner to %"imp::TokenStream"*
  %3 = bitcast %"imp::TokenStream"* %_2 to i8*
  %4 = bitcast %"imp::TokenStream"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
; call <T as core::convert::Into<U>>::into
  %5 = call i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf29e00f20e32edaeE"(%"imp::TokenStream"* noalias nocapture dereferenceable(40) %_2)
  store i32 %5, i32* %0, align 4
  %6 = bitcast %"proc_macro::TokenStream"* %1 to i8*
  %7 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"proc_macro::TokenStream"* %1 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; <proc_macro2::TokenStream as core::convert::From<proc_macro2::TokenTree>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN94_$LT$proc_macro2..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro2..TokenTree$GT$$GT$4from17h8040034e93fc6714E"(%TokenStream* noalias nocapture sret(%TokenStream) dereferenceable(40) %0, %TokenTree* noalias nocapture dereferenceable(48) %token) unnamed_addr #1 {
start:
  %_3 = alloca %TokenTree, align 8
  %_2 = alloca %"imp::TokenStream", align 8
  %1 = bitcast %TokenTree* %_3 to i8*
  %2 = bitcast %TokenTree* %token to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false)
; call <proc_macro2::imp::TokenStream as core::convert::From<proc_macro2::TokenTree>>::from
  call void @"_ZN99_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro2..TokenTree$GT$$GT$4from17hcc6ec8741931276eE"(%"imp::TokenStream"* noalias nocapture sret(%"imp::TokenStream") dereferenceable(40) %_2, %TokenTree* noalias nocapture dereferenceable(48) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::TokenStream::_new
  call void @_ZN11proc_macro211TokenStream4_new17hd52b5c958b80889aE(%TokenStream* noalias nocapture sret(%TokenStream) dereferenceable(40) %0, %"imp::TokenStream"* noalias nocapture dereferenceable(40) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <proc_macro2::TokenStream as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN63_$LT$proc_macro2..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17hf552d3dd24f2deb6E"(%TokenStream* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = bitcast %TokenStream* %self to %"imp::TokenStream"*
; call <proc_macro2::imp::TokenStream as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN68_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17h5b4076e9011cfc43E"(%"imp::TokenStream"* align 8 dereferenceable(40) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <proc_macro2::TokenStream as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN61_$LT$proc_macro2..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17hfc2ccefbca82d260E"(%TokenStream* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = bitcast %TokenStream* %self to %"imp::TokenStream"*
; call <proc_macro2::imp::TokenStream as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN66_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17h79c6732039919a0eE"(%"imp::TokenStream"* align 8 dereferenceable(40) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; proc_macro2::LexError::span
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro28LexError4span17h153329d1601455bdE(i8* align 1 dereferenceable(1) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %_2 = alloca %"imp::Span", align 4
  %2 = alloca %Span, align 4
; call proc_macro2::imp::LexError::span
  %3 = call i32 @_ZN11proc_macro23imp8LexError4span17h5f2558f66f709df8E(i8* align 1 dereferenceable(1) %self)
  store i32 %3, i32* %1, align 4
  %4 = bitcast %"imp::Span"* %_2 to i8*
  %5 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Span"* %_2 to i32*
  %7 = load i32, i32* %6, align 4
; call proc_macro2::Span::_new
  %8 = call i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %7)
  store i32 %8, i32* %0, align 4
  %9 = bitcast %Span* %2 to i8*
  %10 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast %Span* %2 to i32*
  %12 = load i32, i32* %11, align 4
  ret i32 %12
}

; <proc_macro2::LexError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN58_$LT$proc_macro2..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17h1d1d486abc338469E"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
; call <proc_macro2::imp::LexError as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN63_$LT$proc_macro2..imp..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17hc4421a6fad2f0cbcE"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <proc_macro2::LexError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN60_$LT$proc_macro2..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17h32158aca6894a8b9E"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
; call <proc_macro2::imp::LexError as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN65_$LT$proc_macro2..imp..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17h2e971f66a99e7cc8E"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; proc_macro2::Span::_new
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %0) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Span", align 4
  %1 = alloca %Span, align 4
  %2 = alloca i32, align 4
  %inner = alloca %"imp::Span", align 4
  store i32 %0, i32* %2, align 4
  %3 = bitcast %"imp::Span"* %inner to i8*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %5 = bitcast %"imp::Span"* %_2 to i8*
  %6 = bitcast %"imp::Span"* %inner to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  %7 = bitcast %Span* %1 to %"imp::Span"*
  %8 = bitcast %"imp::Span"* %7 to i8*
  %9 = bitcast %"imp::Span"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 4, i1 false)
  %10 = bitcast %Span* %1 to i32*
  %11 = load i32, i32* %10, align 4
  ret i32 %11
}

; proc_macro2::Span::_new_stable
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN11proc_macro24Span11_new_stable17h938b6d2ea5159f26E() unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_2 = alloca %"imp::Span", align 4
  %1 = alloca %Span, align 4
; call <T as core::convert::Into<U>>::into
  %2 = call i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h91a9e43fbbd0eeaaE"()
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"imp::Span"* %_2 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %Span* %1 to %"imp::Span"*
  %6 = bitcast %"imp::Span"* %5 to i8*
  %7 = bitcast %"imp::Span"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %Span* %1 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; proc_macro2::Span::call_site
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span9call_site17h75260ddb1e6dc3b2E() unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %_1 = alloca %"imp::Span", align 4
  %2 = alloca %Span, align 4
; call proc_macro2::imp::Span::call_site
  %3 = call i32 @_ZN11proc_macro23imp4Span9call_site17hb7aa409b99319790E()
  store i32 %3, i32* %1, align 4
  %4 = bitcast %"imp::Span"* %_1 to i8*
  %5 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Span"* %_1 to i32*
  %7 = load i32, i32* %6, align 4
; call proc_macro2::Span::_new
  %8 = call i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %7)
  store i32 %8, i32* %0, align 4
  %9 = bitcast %Span* %2 to i8*
  %10 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast %Span* %2 to i32*
  %12 = load i32, i32* %11, align 4
  ret i32 %12
}

; proc_macro2::Span::mixed_site
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span10mixed_site17hf7ae68dc6ea439cfE() unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %_1 = alloca %"imp::Span", align 4
  %2 = alloca %Span, align 4
; call proc_macro2::imp::Span::mixed_site
  %3 = call i32 @_ZN11proc_macro23imp4Span10mixed_site17hf6d22675b5d03d42E()
  store i32 %3, i32* %1, align 4
  %4 = bitcast %"imp::Span"* %_1 to i8*
  %5 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Span"* %_1 to i32*
  %7 = load i32, i32* %6, align 4
; call proc_macro2::Span::_new
  %8 = call i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %7)
  store i32 %8, i32* %0, align 4
  %9 = bitcast %Span* %2 to i8*
  %10 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast %Span* %2 to i32*
  %12 = load i32, i32* %11, align 4
  ret i32 %12
}

; proc_macro2::Span::resolved_at
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span11resolved_at17h151be302a131691dE(%Span* align 4 dereferenceable(4) %self, i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %_5 = alloca %"imp::Span", align 4
  %_3 = alloca %"imp::Span", align 4
  %3 = alloca %Span, align 4
  %4 = alloca i32, align 4
  %other = alloca %Span, align 4
  store i32 %0, i32* %4, align 4
  %5 = bitcast %Span* %other to i8*
  %6 = bitcast i32* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  %_4 = bitcast %Span* %self to %"imp::Span"*
  %7 = bitcast %Span* %other to %"imp::Span"*
  %8 = bitcast %"imp::Span"* %_5 to i8*
  %9 = bitcast %"imp::Span"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 4, i1 false)
  %10 = bitcast %"imp::Span"* %_5 to i32*
  %11 = load i32, i32* %10, align 4
; call proc_macro2::imp::Span::resolved_at
  %12 = call i32 @_ZN11proc_macro23imp4Span11resolved_at17h4f15eb9b4752c558E(%"imp::Span"* align 4 dereferenceable(4) %_4, i32 %11)
  store i32 %12, i32* %2, align 4
  %13 = bitcast %"imp::Span"* %_3 to i8*
  %14 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %15 = bitcast %"imp::Span"* %_3 to i32*
  %16 = load i32, i32* %15, align 4
; call proc_macro2::Span::_new
  %17 = call i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %16)
  store i32 %17, i32* %1, align 4
  %18 = bitcast %Span* %3 to i8*
  %19 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 4, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %20 = bitcast %Span* %3 to i32*
  %21 = load i32, i32* %20, align 4
  ret i32 %21
}

; proc_macro2::Span::located_at
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span10located_at17h8308898037129be9E(%Span* align 4 dereferenceable(4) %self, i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %_5 = alloca %"imp::Span", align 4
  %_3 = alloca %"imp::Span", align 4
  %3 = alloca %Span, align 4
  %4 = alloca i32, align 4
  %other = alloca %Span, align 4
  store i32 %0, i32* %4, align 4
  %5 = bitcast %Span* %other to i8*
  %6 = bitcast i32* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  %_4 = bitcast %Span* %self to %"imp::Span"*
  %7 = bitcast %Span* %other to %"imp::Span"*
  %8 = bitcast %"imp::Span"* %_5 to i8*
  %9 = bitcast %"imp::Span"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 4, i1 false)
  %10 = bitcast %"imp::Span"* %_5 to i32*
  %11 = load i32, i32* %10, align 4
; call proc_macro2::imp::Span::located_at
  %12 = call i32 @_ZN11proc_macro23imp4Span10located_at17h9dcc8f2b36805512E(%"imp::Span"* align 4 dereferenceable(4) %_4, i32 %11)
  store i32 %12, i32* %2, align 4
  %13 = bitcast %"imp::Span"* %_3 to i8*
  %14 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %15 = bitcast %"imp::Span"* %_3 to i32*
  %16 = load i32, i32* %15, align 4
; call proc_macro2::Span::_new
  %17 = call i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %16)
  store i32 %17, i32* %1, align 4
  %18 = bitcast %Span* %3 to i8*
  %19 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 4, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %20 = bitcast %Span* %3 to i32*
  %21 = load i32, i32* %20, align 4
  ret i32 %21
}

; proc_macro2::Span::unwrap
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span6unwrap17h7fd66918d7e5ab5aE(i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_2 = alloca %"imp::Span", align 4
  %2 = alloca %"proc_macro::Span", align 4
  %3 = alloca i32, align 4
  %self = alloca %Span, align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %Span* %self to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %Span* %self to %"imp::Span"*
  %7 = bitcast %"imp::Span"* %_2 to i8*
  %8 = bitcast %"imp::Span"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Span"* %_2 to i32*
  %10 = load i32, i32* %9, align 4
; call proc_macro2::imp::Span::unwrap
  %11 = call i32 @_ZN11proc_macro23imp4Span6unwrap17he9f2a63e730b52ceE(i32 %10)
  store i32 %11, i32* %1, align 4
  %12 = bitcast %"proc_macro::Span"* %2 to i8*
  %13 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %14 = bitcast %"proc_macro::Span"* %2 to i32*
  %15 = load i32, i32* %14, align 4
  ret i32 %15
}

; proc_macro2::Span::unstable
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro24Span8unstable17hcd990b1749ffe316E(i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_2 = alloca %Span, align 4
  %2 = alloca %"proc_macro::Span", align 4
  %3 = alloca i32, align 4
  %self = alloca %Span, align 4
  store i32 %0, i32* %3, align 4
  %4 = bitcast %Span* %self to i8*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = bitcast %Span* %_2 to i8*
  %7 = bitcast %Span* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %Span* %_2 to i32*
  %9 = load i32, i32* %8, align 4
; call proc_macro2::Span::unwrap
  %10 = call i32 @_ZN11proc_macro24Span6unwrap17h7fd66918d7e5ab5aE(i32 %9)
  store i32 %10, i32* %1, align 4
  %11 = bitcast %"proc_macro::Span"* %2 to i8*
  %12 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %13 = bitcast %"proc_macro::Span"* %2 to i32*
  %14 = load i32, i32* %13, align 4
  ret i32 %14
}

; proc_macro2::Span::join
; Function Attrs: nonlazybind uwtable
define i64 @_ZN11proc_macro24Span4join17h2382be31dbf9a5bcE(%Span* align 4 dereferenceable(4) %self, i32 %0) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %_5 = alloca %"imp::Span", align 4
  %_3 = alloca %"core::option::Option<imp::Span>", align 4
  %3 = alloca %"core::option::Option<Span>", align 4
  %4 = alloca i32, align 4
  %other = alloca %Span, align 4
  store i32 %0, i32* %4, align 4
  %5 = bitcast %Span* %other to i8*
  %6 = bitcast i32* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  %_4 = bitcast %Span* %self to %"imp::Span"*
  %7 = bitcast %Span* %other to %"imp::Span"*
  %8 = bitcast %"imp::Span"* %_5 to i8*
  %9 = bitcast %"imp::Span"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 4, i1 false)
  %10 = bitcast %"imp::Span"* %_5 to i32*
  %11 = load i32, i32* %10, align 4
; call proc_macro2::imp::Span::join
  %12 = call i64 @_ZN11proc_macro23imp4Span4join17hfac4fbb10e3bff63E(%"imp::Span"* align 4 dereferenceable(4) %_4, i32 %11)
  store i64 %12, i64* %2, align 8
  %13 = bitcast %"core::option::Option<imp::Span>"* %_3 to i8*
  %14 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 8 %14, i64 8, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %15 = bitcast %"core::option::Option<imp::Span>"* %_3 to i64*
  %16 = load i64, i64* %15, align 4
; call core::option::Option<T>::map
  %17 = call i64 @"_ZN4core6option15Option$LT$T$GT$3map17h891251b0cd99f271E"(i64 %16)
  store i64 %17, i64* %1, align 8
  %18 = bitcast %"core::option::Option<Span>"* %3 to i8*
  %19 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 8 %19, i64 8, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %20 = bitcast %"core::option::Option<Span>"* %3 to i64*
  %21 = load i64, i64* %20, align 4
  ret i64 %21
}

; <proc_macro2::Span as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN54_$LT$proc_macro2..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h81ace1ab54edb832E"(%Span* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = bitcast %Span* %self to %"imp::Span"*
; call <proc_macro2::imp::Span as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN59_$LT$proc_macro2..imp..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h37da5355c5f7b84cE"(%"imp::Span"* align 4 dereferenceable(4) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; proc_macro2::TokenTree::span
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro29TokenTree4span17h1d47d8b0859a82fdE(%TokenTree* align 8 dereferenceable(48) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %Span, align 4
  %5 = bitcast %TokenTree* %self to i32*
  %6 = load i32, i32* %5, align 8, !range !36
  %_2 = zext i32 %6 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast %TokenTree* %self to %"TokenTree::Group"*
  %t3 = getelementptr inbounds %"TokenTree::Group", %"TokenTree::Group"* %7, i32 0, i32 1
; call proc_macro2::Group::span
  %8 = call i32 @_ZN11proc_macro25Group4span17h361f217216c98c05E(%Group* align 8 dereferenceable(40) %t3)
  store i32 %8, i32* %0, align 4
  %9 = bitcast %Span* %4 to i8*
  %10 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  br label %bb6

bb4:                                              ; preds = %start
  %11 = bitcast %TokenTree* %self to %"TokenTree::Ident"*
  %t2 = getelementptr inbounds %"TokenTree::Ident", %"TokenTree::Ident"* %11, i32 0, i32 1
; call proc_macro2::Ident::span
  %12 = call i32 @_ZN11proc_macro25Ident4span17h143d311679df55cfE(%Ident* align 8 dereferenceable(40) %t2)
  store i32 %12, i32* %1, align 4
  %13 = bitcast %Span* %4 to i8*
  %14 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 4, i1 false)
  br label %bb6

bb5:                                              ; preds = %start
  %15 = bitcast %TokenTree* %self to %"TokenTree::Punct"*
  %t1 = getelementptr inbounds %"TokenTree::Punct", %"TokenTree::Punct"* %15, i32 0, i32 1
; call proc_macro2::Punct::span
  %16 = call i32 @_ZN11proc_macro25Punct4span17h64991fb5a2b1854aE(%Punct* align 4 dereferenceable(12) %t1)
  store i32 %16, i32* %2, align 4
  %17 = bitcast %Span* %4 to i8*
  %18 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 4, i1 false)
  br label %bb6

bb1:                                              ; preds = %start
  %19 = bitcast %TokenTree* %self to %"TokenTree::Literal"*
  %t = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %19, i32 0, i32 1
; call proc_macro2::Literal::span
  %20 = call i32 @_ZN11proc_macro27Literal4span17h3bb75016a0eeb289E(%Literal* align 8 dereferenceable(32) %t)
  store i32 %20, i32* %3, align 4
  %21 = bitcast %Span* %4 to i8*
  %22 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 4, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4, %bb5, %bb1
  %23 = bitcast %Span* %4 to i32*
  %24 = load i32, i32* %23, align 4
  ret i32 %24
}

; proc_macro2::TokenTree::set_span
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro29TokenTree8set_span17h8f1b16535346a445E(%TokenTree* align 8 dereferenceable(48) %self, i32 %0) unnamed_addr #1 {
start:
  %_15 = alloca %Span, align 4
  %_12 = alloca %Span, align 4
  %_9 = alloca %Span, align 4
  %_6 = alloca %Span, align 4
  %1 = alloca i32, align 4
  %span = alloca %Span, align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %Span* %span to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %4 = bitcast %TokenTree* %self to i32*
  %5 = load i32, i32* %4, align 8, !range !36
  %_3 = zext i32 %5 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast %TokenTree* %self to %"TokenTree::Group"*
  %t3 = getelementptr inbounds %"TokenTree::Group", %"TokenTree::Group"* %6, i32 0, i32 1
  %7 = bitcast %Span* %_6 to i8*
  %8 = bitcast %Span* %span to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %Span* %_6 to i32*
  %10 = load i32, i32* %9, align 4
; call proc_macro2::Group::set_span
  call void @_ZN11proc_macro25Group8set_span17h476e7c8d76537f5cE(%Group* align 8 dereferenceable(40) %t3, i32 %10)
  br label %bb6

bb4:                                              ; preds = %start
  %11 = bitcast %TokenTree* %self to %"TokenTree::Ident"*
  %t2 = getelementptr inbounds %"TokenTree::Ident", %"TokenTree::Ident"* %11, i32 0, i32 1
  %12 = bitcast %Span* %_9 to i8*
  %13 = bitcast %Span* %span to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 4, i1 false)
  %14 = bitcast %Span* %_9 to i32*
  %15 = load i32, i32* %14, align 4
; call proc_macro2::Ident::set_span
  call void @_ZN11proc_macro25Ident8set_span17h216c0b155a6d6467E(%Ident* align 8 dereferenceable(40) %t2, i32 %15)
  br label %bb6

bb5:                                              ; preds = %start
  %16 = bitcast %TokenTree* %self to %"TokenTree::Punct"*
  %t1 = getelementptr inbounds %"TokenTree::Punct", %"TokenTree::Punct"* %16, i32 0, i32 1
  %17 = bitcast %Span* %_12 to i8*
  %18 = bitcast %Span* %span to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 4, i1 false)
  %19 = bitcast %Span* %_12 to i32*
  %20 = load i32, i32* %19, align 4
; call proc_macro2::Punct::set_span
  call void @_ZN11proc_macro25Punct8set_span17h15697e209dacbb5dE(%Punct* align 4 dereferenceable(12) %t1, i32 %20)
  br label %bb6

bb1:                                              ; preds = %start
  %21 = bitcast %TokenTree* %self to %"TokenTree::Literal"*
  %t = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %21, i32 0, i32 1
  %22 = bitcast %Span* %_15 to i8*
  %23 = bitcast %Span* %span to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 4, i1 false)
  %24 = bitcast %Span* %_15 to i32*
  %25 = load i32, i32* %24, align 4
; call proc_macro2::Literal::set_span
  call void @_ZN11proc_macro27Literal8set_span17hbfc8ce39d700af29E(%Literal* align 8 dereferenceable(32) %t, i32 %25)
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4, %bb5, %bb1
  ret void
}

; <proc_macro2::TokenTree as core::convert::From<proc_macro2::Group>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN88_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Group$GT$$GT$4from17hbf12835379981fc1E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, %Group* noalias nocapture dereferenceable(40) %g) unnamed_addr #1 {
start:
  %_2 = alloca %Group, align 8
  %1 = bitcast %Group* %_2 to i8*
  %2 = bitcast %Group* %g to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  %3 = bitcast %TokenTree* %0 to %"TokenTree::Group"*
  %4 = getelementptr inbounds %"TokenTree::Group", %"TokenTree::Group"* %3, i32 0, i32 1
  %5 = bitcast %Group* %4 to i8*
  %6 = bitcast %Group* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false)
  %7 = bitcast %TokenTree* %0 to i32*
  store i32 0, i32* %7, align 8
  ret void
}

; <proc_macro2::TokenTree as core::convert::From<proc_macro2::Ident>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN88_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Ident$GT$$GT$4from17h1f5e714bdb1c155eE"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, %Ident* noalias nocapture dereferenceable(40) %g) unnamed_addr #1 {
start:
  %_2 = alloca %Ident, align 8
  %1 = bitcast %Ident* %_2 to i8*
  %2 = bitcast %Ident* %g to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  %3 = bitcast %TokenTree* %0 to %"TokenTree::Ident"*
  %4 = getelementptr inbounds %"TokenTree::Ident", %"TokenTree::Ident"* %3, i32 0, i32 1
  %5 = bitcast %Ident* %4 to i8*
  %6 = bitcast %Ident* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false)
  %7 = bitcast %TokenTree* %0 to i32*
  store i32 1, i32* %7, align 8
  ret void
}

; <proc_macro2::TokenTree as core::convert::From<proc_macro2::Punct>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN88_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Punct$GT$$GT$4from17hfcf751fd0b875a47E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, i96 %1) unnamed_addr #1 {
start:
  %_2 = alloca %Punct, align 4
  %2 = alloca i96, align 8
  %g = alloca %Punct, align 4
  store i96 %1, i96* %2, align 8
  %3 = bitcast %Punct* %g to i8*
  %4 = bitcast i96* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 12, i1 false)
  %5 = bitcast %Punct* %_2 to i8*
  %6 = bitcast %Punct* %g to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 12, i1 false)
  %7 = bitcast %TokenTree* %0 to %"TokenTree::Punct"*
  %8 = getelementptr inbounds %"TokenTree::Punct", %"TokenTree::Punct"* %7, i32 0, i32 1
  %9 = bitcast %Punct* %8 to i8*
  %10 = bitcast %Punct* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 12, i1 false)
  %11 = bitcast %TokenTree* %0 to i32*
  store i32 2, i32* %11, align 8
  ret void
}

; <proc_macro2::TokenTree as core::convert::From<proc_macro2::Literal>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN90_$LT$proc_macro2..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro2..Literal$GT$$GT$4from17h548874ce824b8d3dE"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, %Literal* noalias nocapture dereferenceable(32) %g) unnamed_addr #1 {
start:
  %_2 = alloca %Literal, align 8
  %1 = bitcast %Literal* %_2 to i8*
  %2 = bitcast %Literal* %g to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  %3 = bitcast %TokenTree* %0 to %"TokenTree::Literal"*
  %4 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %3, i32 0, i32 1
  %5 = bitcast %Literal* %4 to i8*
  %6 = bitcast %Literal* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false)
  %7 = bitcast %TokenTree* %0 to i32*
  store i32 3, i32* %7, align 8
  ret void
}

; <proc_macro2::TokenTree as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN61_$LT$proc_macro2..TokenTree$u20$as$u20$core..fmt..Display$GT$3fmt17h35b07ad9d574a651E"(%TokenTree* align 8 dereferenceable(48) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %TokenTree* %self to i32*
  %2 = load i32, i32* %1, align 8, !range !36
  %_3 = zext i32 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %TokenTree* %self to %"TokenTree::Group"*
  %t3 = getelementptr inbounds %"TokenTree::Group", %"TokenTree::Group"* %3, i32 0, i32 1
; call <proc_macro2::Group as core::fmt::Display>::fmt
  %4 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Group$u20$as$u20$core..fmt..Display$GT$3fmt17hf834a8ca6ebb63c9E"(%Group* align 8 dereferenceable(40) %t3, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %0, align 1
  br label %bb6

bb4:                                              ; preds = %start
  %6 = bitcast %TokenTree* %self to %"TokenTree::Ident"*
  %t2 = getelementptr inbounds %"TokenTree::Ident", %"TokenTree::Ident"* %6, i32 0, i32 1
; call <proc_macro2::Ident as core::fmt::Display>::fmt
  %7 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5ff20e04791d3aaaE"(%Ident* align 8 dereferenceable(40) %t2, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb6

bb5:                                              ; preds = %start
  %9 = bitcast %TokenTree* %self to %"TokenTree::Punct"*
  %t1 = getelementptr inbounds %"TokenTree::Punct", %"TokenTree::Punct"* %9, i32 0, i32 1
; call <proc_macro2::Punct as core::fmt::Display>::fmt
  %10 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Punct$u20$as$u20$core..fmt..Display$GT$3fmt17h3aa9033debc70d27E"(%Punct* align 4 dereferenceable(12) %t1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %0, align 1
  br label %bb6

bb1:                                              ; preds = %start
  %12 = bitcast %TokenTree* %self to %"TokenTree::Literal"*
  %t = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %12, i32 0, i32 1
; call <proc_macro2::Literal as core::fmt::Display>::fmt
  %13 = call zeroext i1 @"_ZN59_$LT$proc_macro2..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17h8b0228aa6b51d9e3E"(%Literal* align 8 dereferenceable(32) %t, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4, %bb5, %bb1
  %15 = load i8, i8* %0, align 1, !range !2
  %16 = trunc i8 %15 to i1
  ret i1 %16
}

; <proc_macro2::TokenTree as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN59_$LT$proc_macro2..TokenTree$u20$as$u20$core..fmt..Debug$GT$3fmt17h36ba499e07833fcfE"(%TokenTree* align 8 dereferenceable(48) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i128, align 8
  %_37 = alloca %Span, align 4
  %_36 = alloca %"imp::Span", align 4
  %_27 = alloca i64*, align 8
  %_26 = alloca [1 x { i8*, i64* }], align 8
  %_19 = alloca %"core::fmt::Arguments", align 8
  %debug = alloca %"core::fmt::builders::DebugStruct", align 8
  %t = alloca %Ident*, align 8
  %2 = alloca i8, align 1
  %3 = bitcast %TokenTree* %self to i32*
  %4 = load i32, i32* %3, align 8, !range !36
  %_3 = zext i32 %4 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb11
    i64 3, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast %TokenTree* %self to %"TokenTree::Group"*
  %t3 = getelementptr inbounds %"TokenTree::Group", %"TokenTree::Group"* %5, i32 0, i32 1
; call <proc_macro2::Group as core::fmt::Debug>::fmt
  %6 = call zeroext i1 @"_ZN55_$LT$proc_macro2..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17h33196de9094939d1E"(%Group* align 8 dereferenceable(40) %t3, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %2, align 1
  br label %bb12

bb4:                                              ; preds = %start
  %8 = bitcast %TokenTree* %self to %"TokenTree::Ident"*
  %9 = getelementptr inbounds %"TokenTree::Ident", %"TokenTree::Ident"* %8, i32 0, i32 1
  store %Ident* %9, %Ident** %t, align 8
; call core::fmt::Formatter::debug_struct
  %10 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1760 to [0 x i8]*), i64 5)
  store i128 %10, i128* %1, align 8
  %11 = bitcast %"core::fmt::builders::DebugStruct"* %debug to i8*
  %12 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  br label %bb5

bb11:                                             ; preds = %start
  %13 = bitcast %TokenTree* %self to %"TokenTree::Punct"*
  %t2 = getelementptr inbounds %"TokenTree::Punct", %"TokenTree::Punct"* %13, i32 0, i32 1
; call <proc_macro2::Punct as core::fmt::Debug>::fmt
  %14 = call zeroext i1 @"_ZN55_$LT$proc_macro2..Punct$u20$as$u20$core..fmt..Debug$GT$3fmt17h02e6a0c55a2b7f32E"(%Punct* align 4 dereferenceable(12) %t2, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %2, align 1
  br label %bb12

bb1:                                              ; preds = %start
  %16 = bitcast %TokenTree* %self to %"TokenTree::Literal"*
  %t1 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %16, i32 0, i32 1
; call <proc_macro2::Literal as core::fmt::Debug>::fmt
  %17 = call zeroext i1 @"_ZN57_$LT$proc_macro2..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h4bbfbdf83e485605E"(%Literal* align 8 dereferenceable(32) %t1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %2, align 1
  br label %bb12

bb12:                                             ; preds = %bb3, %bb10, %bb11, %bb1
  %19 = load i8, i8* %2, align 1, !range !2
  %20 = trunc i8 %19 to i1
  ret i1 %20

bb5:                                              ; preds = %bb4
  %21 = bitcast i64** %_27 to %Ident***
  store %Ident** %t, %Ident*** %21, align 8
  %_args = load i64*, i64** %_27, align 8, !nonnull !20
  %_31 = bitcast i64* %_args to %Ident**
; call core::fmt::ArgumentV1::new
  %22 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h9af6061c940ee60eE(%Ident** align 8 dereferenceable(8) %_31, i1 (%Ident**, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h62f1d62ca1ca43d7E")
  %_30.0 = extractvalue { i8*, i64* } %22, 0
  %_30.1 = extractvalue { i8*, i64* } %22, 1
  br label %bb6

bb6:                                              ; preds = %bb5
  %23 = bitcast [1 x { i8*, i64* }]* %_26 to { i8*, i64* }*
  %24 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %23, i32 0, i32 0
  store i8* %_30.0, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %23, i32 0, i32 1
  store i64* %_30.1, i64** %25, align 8
  %_23.0 = bitcast [1 x { i8*, i64* }]* %_26 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_19, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc635 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_23.0, i64 1)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_16.0 = bitcast %"core::fmt::Arguments"* %_19 to {}*
; call core::fmt::builders::DebugStruct::field
  %_12 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1761 to [0 x i8]*), i64 3, {}* nonnull align 1 %_16.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.k to [3 x i64]*))
  br label %bb8

bb8:                                              ; preds = %bb7
  %_38 = load %Ident*, %Ident** %t, align 8, !nonnull !20
; call proc_macro2::Ident::span
  %26 = call i32 @_ZN11proc_macro25Ident4span17h143d311679df55cfE(%Ident* align 8 dereferenceable(40) %_38)
  store i32 %26, i32* %0, align 4
  %27 = bitcast %Span* %_37 to i8*
  %28 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 4, i1 false)
  br label %bb9

bb9:                                              ; preds = %bb8
  %29 = bitcast %Span* %_37 to %"imp::Span"*
  %30 = bitcast %"imp::Span"* %_36 to i8*
  %31 = bitcast %"imp::Span"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 %31, i64 4, i1 false)
  %32 = bitcast %"imp::Span"* %_36 to i32*
  %33 = load i32, i32* %32, align 4
; call proc_macro2::imp::debug_span_field_if_nontrivial
  call void @_ZN11proc_macro23imp30debug_span_field_if_nontrivial17h42388b918ecfeeceE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug, i32 %33)
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::fmt::builders::DebugStruct::finish
  %34 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug)
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %2, align 1
  br label %bb12
}

; proc_macro2::Group::_new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25Group4_new17hed0998337e9e21e8E(%Group* noalias nocapture sret(%Group) dereferenceable(40) %0, %"imp::Group"* noalias nocapture dereferenceable(40) %inner) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Group", align 8
  %1 = bitcast %"imp::Group"* %_2 to i8*
  %2 = bitcast %"imp::Group"* %inner to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  %3 = bitcast %Group* %0 to %"imp::Group"*
  %4 = bitcast %"imp::Group"* %3 to i8*
  %5 = bitcast %"imp::Group"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false)
  ret void
}

; proc_macro2::Group::_new_stable
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25Group11_new_stable17hd2a5676ccafa172dE(%Group* noalias nocapture sret(%Group) dereferenceable(40) %0, %"fallback::Group"* noalias nocapture dereferenceable(32) %inner) unnamed_addr #1 {
start:
  %_3 = alloca %"fallback::Group", align 8
  %_2 = alloca %"imp::Group", align 8
  %1 = bitcast %"fallback::Group"* %_3 to i8*
  %2 = bitcast %"fallback::Group"* %inner to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h42656985eb2ccbdeE"(%"imp::Group"* noalias nocapture sret(%"imp::Group") dereferenceable(40) %_2, %"fallback::Group"* noalias nocapture dereferenceable(32) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast %Group* %0 to %"imp::Group"*
  %4 = bitcast %"imp::Group"* %3 to i8*
  %5 = bitcast %"imp::Group"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false)
  ret void
}

; proc_macro2::Group::new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Group3new17h181ee7056dff8094E(%Group* noalias nocapture sret(%Group) dereferenceable(40) %0, i8 %delimiter, %TokenStream* noalias nocapture dereferenceable(40) %stream) unnamed_addr #1 {
start:
  %_5 = alloca %"imp::TokenStream", align 8
  %_3 = alloca %"imp::Group", align 8
  %1 = bitcast %TokenStream* %stream to %"imp::TokenStream"*
  %2 = bitcast %"imp::TokenStream"* %_5 to i8*
  %3 = bitcast %"imp::TokenStream"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 40, i1 false)
; call proc_macro2::imp::Group::new
  call void @_ZN11proc_macro23imp5Group3new17h6daeb2ca6cbded67E(%"imp::Group"* noalias nocapture sret(%"imp::Group") dereferenceable(40) %_3, i8 %delimiter, %"imp::TokenStream"* noalias nocapture dereferenceable(40) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %Group* %0 to %"imp::Group"*
  %5 = bitcast %"imp::Group"* %4 to i8*
  %6 = bitcast %"imp::Group"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false)
  ret void
}

; proc_macro2::Group::delimiter
; Function Attrs: nonlazybind uwtable
define i8 @_ZN11proc_macro25Group9delimiter17hb957451dace26511E(%Group* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %Group* %self to %"imp::Group"*
; call proc_macro2::imp::Group::delimiter
  %0 = call i8 @_ZN11proc_macro23imp5Group9delimiter17h043473f229a040edE(%"imp::Group"* align 8 dereferenceable(40) %_2), !range !110
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %0
}

; proc_macro2::Group::stream
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Group6stream17h38465763149d42f1E(%TokenStream* noalias nocapture sret(%TokenStream) dereferenceable(40) %0, %Group* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::TokenStream", align 8
  %_3 = bitcast %Group* %self to %"imp::Group"*
; call proc_macro2::imp::Group::stream
  call void @_ZN11proc_macro23imp5Group6stream17h63178d8540692d42E(%"imp::TokenStream"* noalias nocapture sret(%"imp::TokenStream") dereferenceable(40) %_2, %"imp::Group"* align 8 dereferenceable(40) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::TokenStream::_new
  call void @_ZN11proc_macro211TokenStream4_new17hd52b5c958b80889aE(%TokenStream* noalias nocapture sret(%TokenStream) dereferenceable(40) %0, %"imp::TokenStream"* noalias nocapture dereferenceable(40) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Group::span
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25Group4span17h361f217216c98c05E(%Group* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %_2 = alloca %"imp::Span", align 4
  %2 = alloca %Span, align 4
  %_3 = bitcast %Group* %self to %"imp::Group"*
; call proc_macro2::imp::Group::span
  %3 = call i32 @_ZN11proc_macro23imp5Group4span17ha753403edfa3ffcdE(%"imp::Group"* align 8 dereferenceable(40) %_3)
  store i32 %3, i32* %1, align 4
  %4 = bitcast %"imp::Span"* %_2 to i8*
  %5 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Span"* %_2 to i32*
  %7 = load i32, i32* %6, align 4
; call proc_macro2::Span::_new
  %8 = call i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %7)
  store i32 %8, i32* %0, align 4
  %9 = bitcast %Span* %2 to i8*
  %10 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast %Span* %2 to i32*
  %12 = load i32, i32* %11, align 4
  ret i32 %12
}

; proc_macro2::Group::span_open
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25Group9span_open17hb2206e6f25b1fc50E(%Group* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %_2 = alloca %"imp::Span", align 4
  %2 = alloca %Span, align 4
  %_3 = bitcast %Group* %self to %"imp::Group"*
; call proc_macro2::imp::Group::span_open
  %3 = call i32 @_ZN11proc_macro23imp5Group9span_open17h5e21800e49b99d75E(%"imp::Group"* align 8 dereferenceable(40) %_3)
  store i32 %3, i32* %1, align 4
  %4 = bitcast %"imp::Span"* %_2 to i8*
  %5 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Span"* %_2 to i32*
  %7 = load i32, i32* %6, align 4
; call proc_macro2::Span::_new
  %8 = call i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %7)
  store i32 %8, i32* %0, align 4
  %9 = bitcast %Span* %2 to i8*
  %10 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast %Span* %2 to i32*
  %12 = load i32, i32* %11, align 4
  ret i32 %12
}

; proc_macro2::Group::span_close
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25Group10span_close17h7c9d8963538e3988E(%Group* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %_2 = alloca %"imp::Span", align 4
  %2 = alloca %Span, align 4
  %_3 = bitcast %Group* %self to %"imp::Group"*
; call proc_macro2::imp::Group::span_close
  %3 = call i32 @_ZN11proc_macro23imp5Group10span_close17hce037c7e4e111471E(%"imp::Group"* align 8 dereferenceable(40) %_3)
  store i32 %3, i32* %1, align 4
  %4 = bitcast %"imp::Span"* %_2 to i8*
  %5 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Span"* %_2 to i32*
  %7 = load i32, i32* %6, align 4
; call proc_macro2::Span::_new
  %8 = call i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %7)
  store i32 %8, i32* %0, align 4
  %9 = bitcast %Span* %2 to i8*
  %10 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast %Span* %2 to i32*
  %12 = load i32, i32* %11, align 4
  ret i32 %12
}

; proc_macro2::Group::set_span
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Group8set_span17h476e7c8d76537f5cE(%Group* align 8 dereferenceable(40) %self, i32 %0) unnamed_addr #1 {
start:
  %_5 = alloca %"imp::Span", align 4
  %1 = alloca i32, align 4
  %span = alloca %Span, align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %Span* %span to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %_4 = bitcast %Group* %self to %"imp::Group"*
  %4 = bitcast %Span* %span to %"imp::Span"*
  %5 = bitcast %"imp::Span"* %_5 to i8*
  %6 = bitcast %"imp::Span"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  %7 = bitcast %"imp::Span"* %_5 to i32*
  %8 = load i32, i32* %7, align 4
; call proc_macro2::imp::Group::set_span
  call void @_ZN11proc_macro23imp5Group8set_span17hc1a428b96cbaefb3E(%"imp::Group"* align 8 dereferenceable(40) %_4, i32 %8)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <proc_macro2::Group as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN57_$LT$proc_macro2..Group$u20$as$u20$core..fmt..Display$GT$3fmt17hf834a8ca6ebb63c9E"(%Group* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter) unnamed_addr #1 {
start:
  %_4 = bitcast %Group* %self to %"imp::Group"*
; call <proc_macro2::imp::Group as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN62_$LT$proc_macro2..imp..Group$u20$as$u20$core..fmt..Display$GT$3fmt17h381a02208c42ed3bE"(%"imp::Group"* align 8 dereferenceable(40) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <proc_macro2::Group as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN55_$LT$proc_macro2..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17h33196de9094939d1E"(%Group* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter) unnamed_addr #1 {
start:
  %_4 = bitcast %Group* %self to %"imp::Group"*
; call <proc_macro2::imp::Group as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN60_$LT$proc_macro2..imp..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17h75cce883bdcf8666E"(%"imp::Group"* align 8 dereferenceable(40) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; proc_macro2::Punct::new
; Function Attrs: nonlazybind uwtable
define i96 @_ZN11proc_macro25Punct3new17h092c0d122b5304dfE(i32 %ch, i1 zeroext %spacing) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_5 = alloca %Span, align 4
  %1 = alloca %Punct, align 4
; call proc_macro2::Span::call_site
  %2 = call i32 @_ZN11proc_macro24Span9call_site17h75260ddb1e6dc3b2E()
  store i32 %2, i32* %0, align 4
  %3 = bitcast %Span* %_5 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %Punct* %1 to i32*
  store i32 %ch, i32* %5, align 4
  %6 = getelementptr inbounds %Punct, %Punct* %1, i32 0, i32 2
  %7 = zext i1 %spacing to i8
  store i8 %7, i8* %6, align 4
  %8 = getelementptr inbounds %Punct, %Punct* %1, i32 0, i32 1
  %9 = bitcast %Span* %8 to i8*
  %10 = bitcast %Span* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  %11 = bitcast %Punct* %1 to i96*
  %12 = load i96, i96* %11, align 4
  ret i96 %12
}

; proc_macro2::Punct::as_char
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25Punct7as_char17h636cf22e76dea1e9E(%Punct* align 4 dereferenceable(12) %self) unnamed_addr #1 {
start:
  %0 = bitcast %Punct* %self to i32*
  %1 = load i32, i32* %0, align 4, !range !80
  ret i32 %1
}

; proc_macro2::Punct::spacing
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN11proc_macro25Punct7spacing17hf8673d476566377bE(%Punct* align 4 dereferenceable(12) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %Punct, %Punct* %self, i32 0, i32 2
  %1 = load i8, i8* %0, align 4, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; proc_macro2::Punct::span
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25Punct4span17h64991fb5a2b1854aE(%Punct* align 4 dereferenceable(12) %self) unnamed_addr #1 {
start:
  %0 = alloca %Span, align 4
  %1 = getelementptr inbounds %Punct, %Punct* %self, i32 0, i32 1
  %2 = bitcast %Span* %0 to i8*
  %3 = bitcast %Span* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %4 = bitcast %Span* %0 to i32*
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; proc_macro2::Punct::set_span
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Punct8set_span17h15697e209dacbb5dE(%Punct* align 4 dereferenceable(12) %self, i32 %0) unnamed_addr #1 {
start:
  %_3 = alloca %Span, align 4
  %1 = alloca i32, align 4
  %span = alloca %Span, align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %Span* %span to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %4 = bitcast %Span* %_3 to i8*
  %5 = bitcast %Span* %span to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  %6 = getelementptr inbounds %Punct, %Punct* %self, i32 0, i32 1
  %7 = bitcast %Span* %6 to i8*
  %8 = bitcast %Span* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  ret void
}

; <proc_macro2::Punct as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN57_$LT$proc_macro2..Punct$u20$as$u20$core..fmt..Display$GT$3fmt17h3aa9033debc70d27E"(%Punct* align 4 dereferenceable(12) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = bitcast %Punct* %self to i32*
; call <char as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h011d980131b3c87bE"(i32* align 4 dereferenceable(4) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <proc_macro2::Punct as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN55_$LT$proc_macro2..Punct$u20$as$u20$core..fmt..Debug$GT$3fmt17h02e6a0c55a2b7f32E"(%Punct* align 4 dereferenceable(12) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_24 = alloca %"imp::Span", align 4
  %debug = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1762 to [0 x i8]*), i64 5)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %debug to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %_13 = bitcast %Punct* %self to i32*
  %_11.0 = bitcast i32* %_13 to {}*
; call core::fmt::builders::DebugStruct::field
  %_7 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1763 to [0 x i8]*), i64 4, {}* nonnull align 1 %_11.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.m to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  %_20 = getelementptr inbounds %Punct, %Punct* %self, i32 0, i32 2
  %_18.0 = bitcast i8* %_20 to {}*
; call core::fmt::builders::DebugStruct::field
  %_14 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1767 to [0 x i8]*), i64 7, {}* nonnull align 1 %_18.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.n to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = getelementptr inbounds %Punct, %Punct* %self, i32 0, i32 1
  %5 = bitcast %Span* %4 to %"imp::Span"*
  %6 = bitcast %"imp::Span"* %_24 to i8*
  %7 = bitcast %"imp::Span"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"imp::Span"* %_24 to i32*
  %9 = load i32, i32* %8, align 4
; call proc_macro2::imp::debug_span_field_if_nontrivial
  call void @_ZN11proc_macro23imp30debug_span_field_if_nontrivial17h42388b918ecfeeceE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug, i32 %9)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::fmt::builders::DebugStruct::finish
  %10 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %debug)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret i1 %10
}

; proc_macro2::Ident::_new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25Ident4_new17h4efc395750c74d09E(%Ident* noalias nocapture sret(%Ident) dereferenceable(40) %0, %"imp::Ident"* noalias nocapture dereferenceable(40) %inner) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Ident", align 8
  %1 = bitcast %"imp::Ident"* %_2 to i8*
  %2 = bitcast %"imp::Ident"* %inner to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  %3 = bitcast %Ident* %0 to %"imp::Ident"*
  %4 = bitcast %"imp::Ident"* %3 to i8*
  %5 = bitcast %"imp::Ident"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false)
  ret void
}

; proc_macro2::Ident::new
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Ident3new17h89378d74fcb01c26E(%Ident* noalias nocapture sret(%Ident) dereferenceable(40) %0, [0 x i8]* nonnull align 1 %string.0, i64 %string.1, i32 %1) unnamed_addr #1 {
start:
  %_5 = alloca %"imp::Span", align 4
  %_3 = alloca %"imp::Ident", align 8
  %2 = alloca i32, align 4
  %span = alloca %Span, align 4
  store i32 %1, i32* %2, align 4
  %3 = bitcast %Span* %span to i8*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %5 = bitcast %Span* %span to %"imp::Span"*
  %6 = bitcast %"imp::Span"* %_5 to i8*
  %7 = bitcast %"imp::Span"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"imp::Span"* %_5 to i32*
  %9 = load i32, i32* %8, align 4
; call proc_macro2::imp::Ident::new
  call void @_ZN11proc_macro23imp5Ident3new17hb6422152e59789bdE(%"imp::Ident"* noalias nocapture sret(%"imp::Ident") dereferenceable(40) %_3, [0 x i8]* nonnull align 1 %string.0, i64 %string.1, i32 %9)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Ident::_new
  call void @_ZN11proc_macro25Ident4_new17h4efc395750c74d09E(%Ident* noalias nocapture sret(%Ident) dereferenceable(40) %0, %"imp::Ident"* noalias nocapture dereferenceable(40) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Ident::_new_raw
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro25Ident8_new_raw17h3ddbf89fdb8e0588E(%Ident* noalias nocapture sret(%Ident) dereferenceable(40) %0, [0 x i8]* nonnull align 1 %string.0, i64 %string.1, i32 %1) unnamed_addr #1 {
start:
  %_5 = alloca %"imp::Span", align 4
  %_3 = alloca %"imp::Ident", align 8
  %2 = alloca i32, align 4
  %span = alloca %Span, align 4
  store i32 %1, i32* %2, align 4
  %3 = bitcast %Span* %span to i8*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %5 = bitcast %Span* %span to %"imp::Span"*
  %6 = bitcast %"imp::Span"* %_5 to i8*
  %7 = bitcast %"imp::Span"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"imp::Span"* %_5 to i32*
  %9 = load i32, i32* %8, align 4
; call proc_macro2::imp::Ident::new_raw
  call void @_ZN11proc_macro23imp5Ident7new_raw17hde54892950bc12e4E(%"imp::Ident"* noalias nocapture sret(%"imp::Ident") dereferenceable(40) %_3, [0 x i8]* nonnull align 1 %string.0, i64 %string.1, i32 %9)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Ident::_new
  call void @_ZN11proc_macro25Ident4_new17h4efc395750c74d09E(%Ident* noalias nocapture sret(%Ident) dereferenceable(40) %0, %"imp::Ident"* noalias nocapture dereferenceable(40) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Ident::span
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro25Ident4span17h143d311679df55cfE(%Ident* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %_2 = alloca %"imp::Span", align 4
  %2 = alloca %Span, align 4
  %_3 = bitcast %Ident* %self to %"imp::Ident"*
; call proc_macro2::imp::Ident::span
  %3 = call i32 @_ZN11proc_macro23imp5Ident4span17ha37ca1ab777b590dE(%"imp::Ident"* align 8 dereferenceable(40) %_3)
  store i32 %3, i32* %1, align 4
  %4 = bitcast %"imp::Span"* %_2 to i8*
  %5 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Span"* %_2 to i32*
  %7 = load i32, i32* %6, align 4
; call proc_macro2::Span::_new
  %8 = call i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %7)
  store i32 %8, i32* %0, align 4
  %9 = bitcast %Span* %2 to i8*
  %10 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast %Span* %2 to i32*
  %12 = load i32, i32* %11, align 4
  ret i32 %12
}

; proc_macro2::Ident::set_span
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro25Ident8set_span17h216c0b155a6d6467E(%Ident* align 8 dereferenceable(40) %self, i32 %0) unnamed_addr #1 {
start:
  %_5 = alloca %"imp::Span", align 4
  %1 = alloca i32, align 4
  %span = alloca %Span, align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %Span* %span to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %_4 = bitcast %Ident* %self to %"imp::Ident"*
  %4 = bitcast %Span* %span to %"imp::Span"*
  %5 = bitcast %"imp::Span"* %_5 to i8*
  %6 = bitcast %"imp::Span"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  %7 = bitcast %"imp::Span"* %_5 to i32*
  %8 = load i32, i32* %7, align 4
; call proc_macro2::imp::Ident::set_span
  call void @_ZN11proc_macro23imp5Ident8set_span17h31718304230e0ce6E(%"imp::Ident"* align 8 dereferenceable(40) %_4, i32 %8)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <proc_macro2::Ident as core::cmp::PartialEq>::eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN59_$LT$proc_macro2..Ident$u20$as$u20$core..cmp..PartialEq$GT$2eq17he4f29bb62f1ec65cE"(%Ident* align 8 dereferenceable(40) %self, %Ident* align 8 dereferenceable(40) %other) unnamed_addr #1 {
start:
  %_3 = bitcast %Ident* %self to %"imp::Ident"*
  %_4 = bitcast %Ident* %other to %"imp::Ident"*
; call <proc_macro2::imp::Ident as core::cmp::PartialEq>::eq
  %0 = call zeroext i1 @"_ZN64_$LT$proc_macro2..imp..Ident$u20$as$u20$core..cmp..PartialEq$GT$2eq17h68fa95bc410be580E"(%"imp::Ident"* align 8 dereferenceable(40) %_3, %"imp::Ident"* align 8 dereferenceable(40) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <proc_macro2::Ident as core::cmp::PartialOrd>::partial_cmp
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN60_$LT$proc_macro2..Ident$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17ha790cf61069d0f12E"(%Ident* align 8 dereferenceable(40) %self, %Ident* align 8 dereferenceable(40) %other) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
; call <proc_macro2::Ident as core::cmp::Ord>::cmp
  %_3 = call i8 @"_ZN53_$LT$proc_macro2..Ident$u20$as$u20$core..cmp..Ord$GT$3cmp17h390a5817201aa936E"(%Ident* align 8 dereferenceable(40) %self, %Ident* align 8 dereferenceable(40) %other), !range !30
  br label %bb1

bb1:                                              ; preds = %start
  store i8 %_3, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !111
  ret i8 %1
}

; <proc_macro2::Ident as core::cmp::Ord>::cmp
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN53_$LT$proc_macro2..Ident$u20$as$u20$core..cmp..Ord$GT$3cmp17h390a5817201aa936E"(%Ident* align 8 dereferenceable(40) %self, %Ident* align 8 dereferenceable(40) %other) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_8 = alloca %"alloc::string::String", align 8
  %_4 = alloca %"alloc::string::String", align 8
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hece733d43658e347E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_4, %Ident* align 8 dereferenceable(40) %self)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <T as alloc::string::ToString>::to_string
  invoke void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hece733d43658e347E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_8, %Ident* align 8 dereferenceable(40) %other)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <alloc::string::String as core::cmp::Ord>::cmp
  %1 = invoke i8 @"_ZN56_$LT$alloc..string..String$u20$as$u20$core..cmp..Ord$GT$3cmp17ha531ae584e4c2137E"(%"alloc::string::String"* align 8 dereferenceable(24) %_4, %"alloc::string::String"* align 8 dereferenceable(24) %_8)
          to label %bb3 unwind label %cleanup1, !range !30

bb7:                                              ; preds = %bb6, %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_4) #18
  br label %bb8

cleanup:                                          ; preds = %bb3, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_8)
          to label %bb4 unwind label %cleanup

bb6:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_8) #18
  br label %bb7

cleanup1:                                         ; preds = %bb2
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb6

bb4:                                              ; preds = %bb3
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_4)
  br label %bb5

bb8:                                              ; preds = %bb7
  %12 = bitcast { i8*, i32 }* %0 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17

bb5:                                              ; preds = %bb4
  ret i8 %1
}

; <proc_macro2::Ident as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h5ff20e04791d3aaaE"(%Ident* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = bitcast %Ident* %self to %"imp::Ident"*
; call <proc_macro2::imp::Ident as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN62_$LT$proc_macro2..imp..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h67ff08a35953d9faE"(%"imp::Ident"* align 8 dereferenceable(40) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <proc_macro2::Ident as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN55_$LT$proc_macro2..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17h1b93ea7f6d481935E"(%Ident* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = bitcast %Ident* %self to %"imp::Ident"*
; call <proc_macro2::imp::Ident as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN60_$LT$proc_macro2..imp..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17h9983e09fe8a23b16E"(%"imp::Ident"* align 8 dereferenceable(40) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; proc_macro2::Literal::_new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %inner) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
  %1 = bitcast %"imp::Literal"* %_2 to i8*
  %2 = bitcast %"imp::Literal"* %inner to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  %3 = bitcast %Literal* %0 to %"imp::Literal"*
  %4 = bitcast %"imp::Literal"* %3 to i8*
  %5 = bitcast %"imp::Literal"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false)
  ret void
}

; proc_macro2::Literal::_new_stable
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro27Literal11_new_stable17h3a3234ec130b995fE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"fallback::Literal"* noalias nocapture dereferenceable(24) %inner) unnamed_addr #1 {
start:
  %_3 = alloca %"fallback::Literal", align 8
  %_2 = alloca %"imp::Literal", align 8
  %1 = bitcast %"fallback::Literal"* %_3 to i8*
  %2 = bitcast %"fallback::Literal"* %inner to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h87ea74df22a0430cE"(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, %"fallback::Literal"* noalias nocapture dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast %Literal* %0 to %"imp::Literal"*
  %4 = bitcast %"imp::Literal"* %3 to i8*
  %5 = bitcast %"imp::Literal"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false)
  ret void
}

; proc_macro2::Literal::f64_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14f64_unsuffixed17h63d6618e3b3f1b8fE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, double %f) unnamed_addr #1 {
start:
  %_5 = alloca %"imp::Literal", align 8
; call core::f64::<impl f64>::is_finite
  %_3 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9is_finite17h3df526ab68d5c3bdE"(double %f)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
; call proc_macro2::imp::Literal::f64_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14f64_unsuffixed17h6a38049638a48eb6E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_5, double %f)
  br label %bb4

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [31 x i8] }>* @alloc1780 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1773 to %"core::panic::location::Location"*)) #19
  unreachable

bb4:                                              ; preds = %bb3
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_5)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret void
}

; proc_macro2::Literal::f64_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12f64_suffixed17h32d2642755b5a185E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, double %f) unnamed_addr #1 {
start:
  %_5 = alloca %"imp::Literal", align 8
; call core::f64::<impl f64>::is_finite
  %_3 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9is_finite17h3df526ab68d5c3bdE"(double %f)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
; call proc_macro2::imp::Literal::f64_suffixed
  call void @_ZN11proc_macro23imp7Literal12f64_suffixed17h85fdd27bafda93d4E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_5, double %f)
  br label %bb4

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [31 x i8] }>* @alloc1780 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1776 to %"core::panic::location::Location"*)) #19
  unreachable

bb4:                                              ; preds = %bb3
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_5)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret void
}

; proc_macro2::Literal::f32_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14f32_unsuffixed17h62ac7d07de00c217E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, float %f) unnamed_addr #1 {
start:
  %_5 = alloca %"imp::Literal", align 8
; call core::f32::<impl f32>::is_finite
  %_3 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9is_finite17h6a17ff44aab97c5aE"(float %f)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
; call proc_macro2::imp::Literal::f32_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14f32_unsuffixed17h11fa82c2edcdacacE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_5, float %f)
  br label %bb4

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [31 x i8] }>* @alloc1780 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1779 to %"core::panic::location::Location"*)) #19
  unreachable

bb4:                                              ; preds = %bb3
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_5)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret void
}

; proc_macro2::Literal::f32_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12f32_suffixed17h2ff52f583d5a8529E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, float %f) unnamed_addr #1 {
start:
  %_5 = alloca %"imp::Literal", align 8
; call core::f32::<impl f32>::is_finite
  %_3 = call zeroext i1 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$9is_finite17h6a17ff44aab97c5aE"(float %f)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
; call proc_macro2::imp::Literal::f32_suffixed
  call void @_ZN11proc_macro23imp7Literal12f32_suffixed17h3a054298c45b19ffE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_5, float %f)
  br label %bb4

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [31 x i8] }>* @alloc1780 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1782 to %"core::panic::location::Location"*)) #19
  unreachable

bb4:                                              ; preds = %bb3
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_5)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret void
}

; proc_macro2::Literal::string
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal6string17h5e57c415c467d6a9E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, [0 x i8]* nonnull align 1 %string.0, i64 %string.1) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::string
  call void @_ZN11proc_macro23imp7Literal6string17haa91dc3881e9097bE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, [0 x i8]* nonnull align 1 %string.0, i64 %string.1)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::character
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal9character17h0b4798c21daab6e7E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i32 %ch) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::character
  call void @_ZN11proc_macro23imp7Literal9character17h8450716491bc954bE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i32 %ch)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::byte_string
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal11byte_string17h01679f719d92d6adE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::byte_string
  call void @_ZN11proc_macro23imp7Literal11byte_string17h3ceba4c380b77808E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::span
; Function Attrs: nonlazybind uwtable
define i32 @_ZN11proc_macro27Literal4span17h3bb75016a0eeb289E(%Literal* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %_2 = alloca %"imp::Span", align 4
  %2 = alloca %Span, align 4
  %_3 = bitcast %Literal* %self to %"imp::Literal"*
; call proc_macro2::imp::Literal::span
  %3 = call i32 @_ZN11proc_macro23imp7Literal4span17h89419d39bb0a6d02E(%"imp::Literal"* align 8 dereferenceable(32) %_3)
  store i32 %3, i32* %1, align 4
  %4 = bitcast %"imp::Span"* %_2 to i8*
  %5 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast %"imp::Span"* %_2 to i32*
  %7 = load i32, i32* %6, align 4
; call proc_macro2::Span::_new
  %8 = call i32 @_ZN11proc_macro24Span4_new17h807fc8e5bdb39598E(i32 %7)
  store i32 %8, i32* %0, align 4
  %9 = bitcast %Span* %2 to i8*
  %10 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast %Span* %2 to i32*
  %12 = load i32, i32* %11, align 4
  ret i32 %12
}

; proc_macro2::Literal::set_span
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal8set_span17hbfc8ce39d700af29E(%Literal* align 8 dereferenceable(32) %self, i32 %0) unnamed_addr #1 {
start:
  %_5 = alloca %"imp::Span", align 4
  %1 = alloca i32, align 4
  %span = alloca %Span, align 4
  store i32 %0, i32* %1, align 4
  %2 = bitcast %Span* %span to i8*
  %3 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false)
  %_4 = bitcast %Literal* %self to %"imp::Literal"*
  %4 = bitcast %Span* %span to %"imp::Span"*
  %5 = bitcast %"imp::Span"* %_5 to i8*
  %6 = bitcast %"imp::Span"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 4, i1 false)
  %7 = bitcast %"imp::Span"* %_5 to i32*
  %8 = load i32, i32* %7, align 4
; call proc_macro2::imp::Literal::set_span
  call void @_ZN11proc_macro23imp7Literal8set_span17heaa958967ac24204E(%"imp::Literal"* align 8 dereferenceable(32) %_4, i32 %8)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; proc_macro2::Literal::from_str_unchecked
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal18from_str_unchecked17h1c33c2e77995ced4E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, [0 x i8]* nonnull align 1 %repr.0, i64 %repr.1) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::from_str_unchecked
  call void @_ZN11proc_macro23imp7Literal18from_str_unchecked17hc08e8061b5add76fE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, [0 x i8]* nonnull align 1 %repr.0, i64 %repr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <proc_macro2::Literal as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
define void @"_ZN67_$LT$proc_macro2..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h5790e6fee579dae0E"(%"core::result::Result<Literal, LexError>"* noalias nocapture sret(%"core::result::Result<Literal, LexError>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %repr.0, i64 %repr.1) unnamed_addr #1 {
start:
  %_3 = alloca %"core::result::Result<imp::Literal, imp::LexError>", align 8
  %_2 = alloca %"core::result::Result<Literal, imp::LexError>", align 8
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h55ffe21b3051e736E"(%"core::result::Result<imp::Literal, imp::LexError>"* noalias nocapture sret(%"core::result::Result<imp::Literal, imp::LexError>") dereferenceable(40) %_3, [0 x i8]* nonnull align 1 %repr.0, i64 %repr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::map
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h753498bdb8479530E"(%"core::result::Result<Literal, imp::LexError>"* noalias nocapture sret(%"core::result::Result<Literal, imp::LexError>") dereferenceable(40) %_2, %"core::result::Result<imp::Literal, imp::LexError>"* noalias nocapture dereferenceable(40) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h039f54c1b0d2cbcaE"(%"core::result::Result<Literal, LexError>"* noalias nocapture sret(%"core::result::Result<Literal, LexError>") dereferenceable(40) %0, %"core::result::Result<Literal, imp::LexError>"* noalias nocapture dereferenceable(40) %_2)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <proc_macro2::Literal as core::str::traits::FromStr>::from_str::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN67_$LT$proc_macro2..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str28_$u7b$$u7b$closure$u7d$$u7d$17h11381dd69e547d93E"(i1 zeroext %inner) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = zext i1 %inner to i8
  store i8 %1, i8* %0, align 1
  %2 = load i8, i8* %0, align 1, !range !2
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; <proc_macro2::Literal as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN57_$LT$proc_macro2..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h4bbfbdf83e485605E"(%Literal* align 8 dereferenceable(32) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = bitcast %Literal* %self to %"imp::Literal"*
; call <proc_macro2::imp::Literal as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN62_$LT$proc_macro2..imp..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h78aaa0dfc2beeb65E"(%"imp::Literal"* align 8 dereferenceable(32) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <proc_macro2::Literal as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN59_$LT$proc_macro2..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17h8b0228aa6b51d9e3E"(%Literal* align 8 dereferenceable(32) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = bitcast %Literal* %self to %"imp::Literal"*
; call <proc_macro2::imp::Literal as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN64_$LT$proc_macro2..imp..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17hab48c838f5c6f0a1E"(%"imp::Literal"* align 8 dereferenceable(32) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <proc_macro2::token_stream::IntoIter as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define void @"_ZN94_$LT$proc_macro2..token_stream..IntoIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haf085812e3b82644E"(%"core::option::Option<TokenTree>"* noalias nocapture sret(%"core::option::Option<TokenTree>") dereferenceable(48) %0, %"token_stream::IntoIter"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"token_stream::IntoIter"* %self to %"imp::TokenTreeIter"*
; call <proc_macro2::imp::TokenTreeIter as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN90_$LT$proc_macro2..imp..TokenTreeIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0e068c0a24231c4fE"(%"core::option::Option<TokenTree>"* noalias nocapture sret(%"core::option::Option<TokenTree>") dereferenceable(48) %0, %"imp::TokenTreeIter"* align 8 dereferenceable(40) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <proc_macro2::token_stream::IntoIter as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN72_$LT$proc_macro2..token_stream..IntoIter$u20$as$u20$core..fmt..Debug$GT$3fmt17hfd2e9ea126315db0E"(%"token_stream::IntoIter"* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = bitcast %"token_stream::IntoIter"* %self to %"imp::TokenTreeIter"*
; call <proc_macro2::imp::TokenTreeIter as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN68_$LT$proc_macro2..imp..TokenTreeIter$u20$as$u20$core..fmt..Debug$GT$3fmt17h0134321866a55ee6E"(%"imp::TokenTreeIter"* align 8 dereferenceable(40) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; proc_macro2::token_stream::<impl core::iter::traits::collect::IntoIterator for proc_macro2::TokenStream>::into_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN11proc_macro212token_stream96_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$proc_macro2..TokenStream$GT$9into_iter17h50069e6e5209a914E"(%"token_stream::IntoIter"* noalias nocapture sret(%"token_stream::IntoIter") dereferenceable(40) %0, %TokenStream* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"imp::TokenStream", align 8
  %_2 = alloca %"imp::TokenTreeIter", align 8
  %1 = bitcast %TokenStream* %self to %"imp::TokenStream"*
  %2 = bitcast %"imp::TokenStream"* %_3 to i8*
  %3 = bitcast %"imp::TokenStream"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 40, i1 false)
; call <proc_macro2::imp::TokenStream as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN91_$LT$proc_macro2..imp..TokenStream$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb2f556f95dc321e5E"(%"imp::TokenTreeIter"* noalias nocapture sret(%"imp::TokenTreeIter") dereferenceable(40) %_2, %"imp::TokenStream"* noalias nocapture dereferenceable(40) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"token_stream::IntoIter"* %0 to %"imp::TokenTreeIter"*
  %5 = bitcast %"imp::TokenTreeIter"* %4 to i8*
  %6 = bitcast %"imp::TokenTreeIter"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false)
  ret void
}

; <proc_macro2::fallback::TokenStream as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17h2d6924a7f0e690bcE"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %0, %"fallback::TokenStream"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_3 = alloca %"alloc::vec::Vec<TokenTree>", align 8
  %__self_0_0 = bitcast %"fallback::TokenStream"* %self to %"alloc::vec::Vec<TokenTree>"*
; call <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
  call void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h7e20692ae7b54d4fE"(%"alloc::vec::Vec<TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<TokenTree>") dereferenceable(24) %_3, %"alloc::vec::Vec<TokenTree>"* align 8 dereferenceable(24) %__self_0_0)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"fallback::TokenStream"* %0 to %"alloc::vec::Vec<TokenTree>"*
  %2 = bitcast %"alloc::vec::Vec<TokenTree>"* %1 to i8*
  %3 = bitcast %"alloc::vec::Vec<TokenTree>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; <proc_macro2::fallback::LexError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN68_$LT$proc_macro2..fallback..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17he9b7cf47a7ee122bE"(%"fallback::LexError"* nonnull align 1 %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_16 = alloca %"fallback::Span"*, align 8
  %_5 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast %"fallback::LexError"* %self to %"fallback::Span"*
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc1783 to [0 x i8]*), i64 8)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_5 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store %"fallback::Span"* %__self_0_0, %"fallback::Span"** %_16, align 8
  %_13.0 = bitcast %"fallback::Span"** %_16 to {}*
; call core::fmt::builders::DebugStruct::field
  %_9 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1784 to [0 x i8]*), i64 4, {}* nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.o to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %4
}

; <proc_macro2::fallback::LineColumn as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$proc_macro2..fallback..LineColumn$u20$as$u20$core..fmt..Debug$GT$3fmt17h9ced980bf8bb095aE"({ i64, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_25 = alloca i64*, align 8
  %_17 = alloca i64*, align 8
  %_6 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast { i64, i64 }* %self to i64*
  %__self_0_1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [10 x i8] }>* @alloc1788 to [0 x i8]*), i64 10)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_6 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store i64* %__self_0_0, i64** %_17, align 8
  %_14.0 = bitcast i64** %_17 to {}*
; call core::fmt::builders::DebugStruct::field
  %_10 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1789 to [0 x i8]*), i64 4, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.c to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64* %__self_0_1, i64** %_25, align 8
  %_22.0 = bitcast i64** %_25 to {}*
; call core::fmt::builders::DebugStruct::field
  %_18 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1790 to [0 x i8]*), i64 6, {}* nonnull align 1 %_22.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.c to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i1 %4
}

; <proc_macro2::fallback::Span as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN66_$LT$proc_macro2..fallback..Span$u20$as$u20$core..clone..Clone$GT$5clone17h3985df68172485b7E"(%"fallback::Span"* nonnull align 1 %self) unnamed_addr #0 {
start:
  ret void
}

; <proc_macro2::fallback::Group as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN67_$LT$proc_macro2..fallback..Group$u20$as$u20$core..clone..Clone$GT$5clone17hd2652f8f4287193bE"(%"fallback::Group"* noalias nocapture sret(%"fallback::Group") dereferenceable(32) %0, %"fallback::Group"* align 8 dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_8 = alloca %"fallback::TokenStream", align 8
  %__self_0_0 = getelementptr inbounds %"fallback::Group", %"fallback::Group"* %self, i32 0, i32 2
  %__self_0_1 = bitcast %"fallback::Group"* %self to %"fallback::TokenStream"*
  %__self_0_2 = bitcast %"fallback::Group"* %self to %"fallback::Span"*
; call <proc_macro2::Delimiter as core::clone::Clone>::clone
  %_5 = call i8 @"_ZN61_$LT$proc_macro2..Delimiter$u20$as$u20$core..clone..Clone$GT$5clone17h81894d70e99b048dE"(i8* align 1 dereferenceable(1) %__self_0_0), !range !110
  br label %bb1

bb1:                                              ; preds = %start
; call <proc_macro2::fallback::TokenStream as core::clone::Clone>::clone
  call void @"_ZN73_$LT$proc_macro2..fallback..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17h2d6924a7f0e690bcE"(%"fallback::TokenStream"* noalias nocapture sret(%"fallback::TokenStream") dereferenceable(24) %_8, %"fallback::TokenStream"* align 8 dereferenceable(24) %__self_0_1)
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke <proc_macro2::fallback::Span as core::clone::Clone>::clone
  invoke void @"_ZN66_$LT$proc_macro2..fallback..Span$u20$as$u20$core..clone..Clone$GT$5clone17h3985df68172485b7E"(%"fallback::Span"* nonnull align 1 %__self_0_2)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %2 = getelementptr inbounds %"fallback::Group", %"fallback::Group"* %0, i32 0, i32 2
  store i8 %_5, i8* %2, align 8
  %3 = bitcast %"fallback::Group"* %0 to %"fallback::TokenStream"*
  %4 = bitcast %"fallback::TokenStream"* %3 to i8*
  %5 = bitcast %"fallback::TokenStream"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  ret void

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<proc_macro2::fallback::TokenStream>
  call void @"_ZN4core3ptr55drop_in_place$LT$proc_macro2..fallback..TokenStream$GT$17h8ea3f1fe2253e242E"(%"fallback::TokenStream"* %_8) #18
  br label %bb5

cleanup:                                          ; preds = %bb2
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %1 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; <proc_macro2::fallback::Ident as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN67_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h2ced550e7cb70d9bE"(%"fallback::Ident"* noalias nocapture sret(%"fallback::Ident") dereferenceable(32) %0, %"fallback::Ident"* align 8 dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_5 = alloca %"alloc::string::String", align 8
  %__self_0_0 = bitcast %"fallback::Ident"* %self to %"alloc::string::String"*
  %__self_0_1 = bitcast %"fallback::Ident"* %self to %"fallback::Span"*
  %__self_0_2 = getelementptr inbounds %"fallback::Ident", %"fallback::Ident"* %self, i32 0, i32 2
; call <alloc::string::String as core::clone::Clone>::clone
  call void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17h4086b7622568c55eE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_5, %"alloc::string::String"* align 8 dereferenceable(24) %__self_0_0)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <proc_macro2::fallback::Span as core::clone::Clone>::clone
  invoke void @"_ZN66_$LT$proc_macro2..fallback..Span$u20$as$u20$core..clone..Clone$GT$5clone17h3985df68172485b7E"(%"fallback::Span"* nonnull align 1 %__self_0_1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::clone::impls::<impl core::clone::Clone for bool>::clone
  %_11 = invoke zeroext i1 @"_ZN4core5clone5impls53_$LT$impl$u20$core..clone..Clone$u20$for$u20$bool$GT$5clone17h5799fac79982198eE"(i8* align 1 dereferenceable(1) %__self_0_2)
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_5) #18
  br label %bb5

cleanup:                                          ; preds = %bb2, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %7 = bitcast %"fallback::Ident"* %0 to %"alloc::string::String"*
  %8 = bitcast %"alloc::string::String"* %7 to i8*
  %9 = bitcast %"alloc::string::String"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  %10 = getelementptr inbounds %"fallback::Ident", %"fallback::Ident"* %0, i32 0, i32 2
  %11 = zext i1 %_11 to i8
  store i8 %11, i8* %10, align 8
  ret void

bb5:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %1 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

; <proc_macro2::fallback::Literal as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..clone..Clone$GT$5clone17hc15915580090f47eE"(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"fallback::Literal"* align 8 dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca %"alloc::string::String", align 8
  %__self_0_0 = bitcast %"fallback::Literal"* %self to %"alloc::string::String"*
  %__self_0_1 = bitcast %"fallback::Literal"* %self to %"fallback::Span"*
; call <alloc::string::String as core::clone::Clone>::clone
  call void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17h4086b7622568c55eE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_4, %"alloc::string::String"* align 8 dereferenceable(24) %__self_0_0)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <proc_macro2::fallback::Span as core::clone::Clone>::clone
  invoke void @"_ZN66_$LT$proc_macro2..fallback..Span$u20$as$u20$core..clone..Clone$GT$5clone17h3985df68172485b7E"(%"fallback::Span"* nonnull align 1 %__self_0_1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %2 = bitcast %"fallback::Literal"* %0 to %"alloc::string::String"*
  %3 = bitcast %"alloc::string::String"* %2 to i8*
  %4 = bitcast %"alloc::string::String"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  ret void

bb3:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h2009586665427d00E"(%"alloc::string::String"* %_4) #18
  br label %bb4

cleanup:                                          ; preds = %bb1
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %10 = bitcast { i8*, i32 }* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15
}

; proc_macro2::fallback::Literal::u8_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal11u8_suffixed17h13eeb8e7b590d1d5E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i8 %1) unnamed_addr #1 {
start:
  %_12 = alloca i8*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i8, align 1
  store i8 %1, i8* %n, align 1
  store i8* %n, i8** %_12, align 8
  %_args = load i8*, i8** %_12, align 8, !nonnull !20
; call core::fmt::ArgumentV1::new
  %2 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hf34519ccf236690fE(i8* align 1 dereferenceable(1) %_args, i1 (i8*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17ha60d145af3203aeeE")
  %_15.0 = extractvalue { i8*, i64* } %2, 0
  %_15.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_15.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_15.1, i64** %5, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1054 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"alloc::string::String"* %_2 to i8*
  %7 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::u16_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12u16_suffixed17h5e079d53737db646E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i16 %1) unnamed_addr #1 {
start:
  %_12 = alloca i16*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i16, align 2
  store i16 %1, i16* %n, align 2
  store i16* %n, i16** %_12, align 8
  %_args = load i16*, i16** %_12, align 8, !nonnull !20
; call core::fmt::ArgumentV1::new
  %2 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h5255efb528208bbeE(i16* align 2 dereferenceable(2) %_args, i1 (i16*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u16$GT$3fmt17hb1ab876e21a62ebbE")
  %_15.0 = extractvalue { i8*, i64* } %2, 0
  %_15.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_15.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_15.1, i64** %5, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1067 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"alloc::string::String"* %_2 to i8*
  %7 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::u32_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12u32_suffixed17hf11377a9b98a9654E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i32 %1) unnamed_addr #1 {
start:
  %_12 = alloca i32*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i32, align 4
  store i32 %1, i32* %n, align 4
  store i32* %n, i32** %_12, align 8
  %_args = load i32*, i32** %_12, align 8, !nonnull !20
; call core::fmt::ArgumentV1::new
  %2 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h6979be01fdacff4fE(i32* align 4 dereferenceable(4) %_args, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h143e132e8c82669cE")
  %_15.0 = extractvalue { i8*, i64* } %2, 0
  %_15.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_15.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_15.1, i64** %5, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1080 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"alloc::string::String"* %_2 to i8*
  %7 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::u64_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12u64_suffixed17h5d4d0d9614f61576E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i64 %1) unnamed_addr #1 {
start:
  %_12 = alloca i64*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i64, align 8
  store i64 %1, i64* %n, align 8
  store i64* %n, i64** %_12, align 8
  %_args = load i64*, i64** %_12, align 8, !nonnull !20
; call core::fmt::ArgumentV1::new
  %2 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h3077d2933dc22190E(i64* align 8 dereferenceable(8) %_args, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hc0f7594e99de2828E")
  %_15.0 = extractvalue { i8*, i64* } %2, 0
  %_15.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_15.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_15.1, i64** %5, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1093 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"alloc::string::String"* %_2 to i8*
  %7 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::u128_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal13u128_suffixed17hc24d25665c2e082dE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i128 %1) unnamed_addr #1 {
start:
  %_12 = alloca i64*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i128, align 8
  store i128 %1, i128* %n, align 8
  %2 = bitcast i64** %_12 to i128**
  store i128* %n, i128** %2, align 8
  %_args = load i64*, i64** %_12, align 8, !nonnull !20
  %_16 = bitcast i64* %_args to i128*
; call core::fmt::ArgumentV1::new
  %3 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h5af4dca2cfcf14b2E(i128* align 8 dereferenceable(16) %_16, i1 (i128*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..Display$u20$for$u20$u128$GT$3fmt17h60917929869bc44cE")
  %_15.0 = extractvalue { i8*, i64* } %3, 0
  %_15.1 = extractvalue { i8*, i64* } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %4, i32 0, i32 0
  store i8* %_15.0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %4, i32 0, i32 1
  store i64* %_15.1, i64** %6, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1106 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = bitcast %"alloc::string::String"* %_2 to i8*
  %8 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::usize_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14usize_suffixed17h52c45b57d823539fE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i64 %1) unnamed_addr #1 {
start:
  %_12 = alloca i64*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i64, align 8
  store i64 %1, i64* %n, align 8
  store i64* %n, i64** %_12, align 8
  %_args = load i64*, i64** %_12, align 8, !nonnull !20
; call core::fmt::ArgumentV1::new
  %2 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hfc87138be8c493f2E(i64* align 8 dereferenceable(8) %_args, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE")
  %_15.0 = extractvalue { i8*, i64* } %2, 0
  %_15.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_15.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_15.1, i64** %5, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1119 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"alloc::string::String"* %_2 to i8*
  %7 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::i8_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal11i8_suffixed17h3be2149cf975d8ceE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i8 %1) unnamed_addr #1 {
start:
  %_12 = alloca i8*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i8, align 1
  store i8 %1, i8* %n, align 1
  store i8* %n, i8** %_12, align 8
  %_args = load i8*, i8** %_12, align 8, !nonnull !20
; call core::fmt::ArgumentV1::new
  %2 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h34cab7ee437631f3E(i8* align 1 dereferenceable(1) %_args, i1 (i8*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$i8$GT$3fmt17hfa31404d86d00df8E")
  %_15.0 = extractvalue { i8*, i64* } %2, 0
  %_15.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_15.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_15.1, i64** %5, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1132 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"alloc::string::String"* %_2 to i8*
  %7 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::i16_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12i16_suffixed17h620c7bfeb3427596E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i16 %1) unnamed_addr #1 {
start:
  %_12 = alloca i16*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i16, align 2
  store i16 %1, i16* %n, align 2
  store i16* %n, i16** %_12, align 8
  %_args = load i16*, i16** %_12, align 8, !nonnull !20
; call core::fmt::ArgumentV1::new
  %2 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17ha274dde9db218663E(i16* align 2 dereferenceable(2) %_args, i1 (i16*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i16$GT$3fmt17ha06c35c1e7aaace7E")
  %_15.0 = extractvalue { i8*, i64* } %2, 0
  %_15.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_15.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_15.1, i64** %5, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1145 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"alloc::string::String"* %_2 to i8*
  %7 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::i32_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12i32_suffixed17hab1314ad3d8ca212E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i32 %1) unnamed_addr #1 {
start:
  %_12 = alloca i32*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i32, align 4
  store i32 %1, i32* %n, align 4
  store i32* %n, i32** %_12, align 8
  %_args = load i32*, i32** %_12, align 8, !nonnull !20
; call core::fmt::ArgumentV1::new
  %2 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17habf5741534d52963E(i32* align 4 dereferenceable(4) %_args, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_15.0 = extractvalue { i8*, i64* } %2, 0
  %_15.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_15.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_15.1, i64** %5, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1158 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"alloc::string::String"* %_2 to i8*
  %7 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::i64_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12i64_suffixed17hd512b05de39acd49E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i64 %1) unnamed_addr #1 {
start:
  %_12 = alloca i64*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i64, align 8
  store i64 %1, i64* %n, align 8
  store i64* %n, i64** %_12, align 8
  %_args = load i64*, i64** %_12, align 8, !nonnull !20
; call core::fmt::ArgumentV1::new
  %2 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hf24e40afeedc69b6E(i64* align 8 dereferenceable(8) %_args, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h5c41694b747c6f84E")
  %_15.0 = extractvalue { i8*, i64* } %2, 0
  %_15.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_15.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_15.1, i64** %5, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1171 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"alloc::string::String"* %_2 to i8*
  %7 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::i128_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal13i128_suffixed17hf4ed9a1a3b313ae2E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i128 %1) unnamed_addr #1 {
start:
  %_12 = alloca i64*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i128, align 8
  store i128 %1, i128* %n, align 8
  %2 = bitcast i64** %_12 to i128**
  store i128* %n, i128** %2, align 8
  %_args = load i64*, i64** %_12, align 8, !nonnull !20
  %_16 = bitcast i64* %_args to i128*
; call core::fmt::ArgumentV1::new
  %3 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hdfa545861fa2bdadE(i128* align 8 dereferenceable(16) %_16, i1 (i128*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..Display$u20$for$u20$i128$GT$3fmt17h8cbb3606ac433127E")
  %_15.0 = extractvalue { i8*, i64* } %3, 0
  %_15.1 = extractvalue { i8*, i64* } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %4, i32 0, i32 0
  store i8* %_15.0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %4, i32 0, i32 1
  store i64* %_15.1, i64** %6, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1184 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = bitcast %"alloc::string::String"* %_2 to i8*
  %8 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::isize_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14isize_suffixed17hcd98e1d0990130eeE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i64 %1) unnamed_addr #1 {
start:
  %_12 = alloca i64*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i64, align 8
  store i64 %1, i64* %n, align 8
  store i64* %n, i64** %_12, align 8
  %_args = load i64*, i64** %_12, align 8, !nonnull !20
; call core::fmt::ArgumentV1::new
  %2 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h9db212a163446998E(i64* align 8 dereferenceable(8) %_args, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$isize$GT$3fmt17h21a09cd501ba5453E")
  %_15.0 = extractvalue { i8*, i64* } %2, 0
  %_15.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_15.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_15.1, i64** %5, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1197 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"alloc::string::String"* %_2 to i8*
  %7 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::f32_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12f32_suffixed17heab8ab29853bb7b5E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, float %1) unnamed_addr #1 {
start:
  %_12 = alloca i32*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca float, align 4
  store float %1, float* %n, align 4
  %2 = bitcast i32** %_12 to float**
  store float* %n, float** %2, align 8
  %_args = load i32*, i32** %_12, align 8, !nonnull !20
  %_16 = bitcast i32* %_args to float*
; call core::fmt::ArgumentV1::new
  %3 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hdca5efe8d2d1670cE(float* align 4 dereferenceable(4) %_16, i1 (float*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f32$GT$3fmt17hc227dd5d11708e7cE")
  %_15.0 = extractvalue { i8*, i64* } %3, 0
  %_15.1 = extractvalue { i8*, i64* } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %4, i32 0, i32 0
  store i8* %_15.0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %4, i32 0, i32 1
  store i64* %_15.1, i64** %6, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc980 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = bitcast %"alloc::string::String"* %_2 to i8*
  %8 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::f64_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal12f64_suffixed17h2cb91c3dd542f272E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, double %1) unnamed_addr #1 {
start:
  %_12 = alloca i64*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca double, align 8
  store double %1, double* %n, align 8
  %2 = bitcast i64** %_12 to double**
  store double* %n, double** %2, align 8
  %_args = load i64*, i64** %_12, align 8, !nonnull !20
  %_16 = bitcast i64* %_args to double*
; call core::fmt::ArgumentV1::new
  %3 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc8d3ad37cdbcbd2aE(double* align 8 dereferenceable(8) %_16, i1 (double*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f64$GT$3fmt17hf952995d1c1d8ef9E")
  %_15.0 = extractvalue { i8*, i64* } %3, 0
  %_15.1 = extractvalue { i8*, i64* } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %4, i32 0, i32 0
  store i8* %_15.0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %4, i32 0, i32 1
  store i64* %_15.1, i64** %6, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hffa388c3d043697fE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc955 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = bitcast %"alloc::string::String"* %_2 to i8*
  %8 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; proc_macro2::fallback::Literal::u8_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal13u8_unsuffixed17h4fe54903d9f9e5a7E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i8 %1) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i8, align 1
  store i8 %1, i8* %n, align 1
; call <u8 as alloc::string::ToString>::to_string
  call void @"_ZN46_$LT$u8$u20$as$u20$alloc..string..ToString$GT$9to_string17hc8109cd93321e1ebE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_2, i8* align 1 dereferenceable(1) %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::fallback::Literal::u16_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14u16_unsuffixed17h0a587f2f8a27c8d4E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i16 %1) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i16, align 2
  store i16 %1, i16* %n, align 2
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h27ff7da8335f0d1bE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_2, i16* align 2 dereferenceable(2) %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::fallback::Literal::u32_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14u32_unsuffixed17h7ba9ac3e2a9baa80E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i32 %1) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i32, align 4
  store i32 %1, i32* %n, align 4
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h354f13bd570768bcE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_2, i32* align 4 dereferenceable(4) %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::fallback::Literal::u64_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14u64_unsuffixed17hb9eba888952833e1E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i64 %1) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i64, align 8
  store i64 %1, i64* %n, align 8
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hd59a54fcb3b241b5E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_2, i64* align 8 dereferenceable(8) %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::fallback::Literal::u128_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal15u128_unsuffixed17h05081b2d206d5609E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i128 %1) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i128, align 8
  store i128 %1, i128* %n, align 8
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h93260b07fd8aaa8eE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_2, i128* align 8 dereferenceable(16) %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::fallback::Literal::usize_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal16usize_unsuffixed17he5245d2d77439f04E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i64 %1) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i64, align 8
  store i64 %1, i64* %n, align 8
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hab2f83e73ee933d1E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_2, i64* align 8 dereferenceable(8) %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::fallback::Literal::i8_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal13i8_unsuffixed17h725e881eac5fbcd0E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i8 %1) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i8, align 1
  store i8 %1, i8* %n, align 1
; call <i8 as alloc::string::ToString>::to_string
  call void @"_ZN46_$LT$i8$u20$as$u20$alloc..string..ToString$GT$9to_string17h71f6f4dc6e368fe4E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_2, i8* align 1 dereferenceable(1) %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::fallback::Literal::i16_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14i16_unsuffixed17h5a2bf1eac38b3325E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i16 %1) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i16, align 2
  store i16 %1, i16* %n, align 2
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hc14660f755d6c2f3E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_2, i16* align 2 dereferenceable(2) %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::fallback::Literal::i32_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14i32_unsuffixed17hf4129127e3ea2accE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i32 %1) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i32, align 4
  store i32 %1, i32* %n, align 4
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h3be4f34a0fc9cf89E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_2, i32* align 4 dereferenceable(4) %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::fallback::Literal::i64_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal14i64_unsuffixed17h16a3d56b17262518E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i64 %1) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i64, align 8
  store i64 %1, i64* %n, align 8
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h8821984e9d6fbcb0E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_2, i64* align 8 dereferenceable(8) %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::fallback::Literal::i128_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal15i128_unsuffixed17h642f354dd5fbaabfE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i128 %1) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i128, align 8
  store i128 %1, i128* %n, align 8
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h5ec82e89413bd9a8E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_2, i128* align 8 dereferenceable(16) %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::fallback::Literal::isize_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro28fallback7Literal16isize_unsuffixed17hc2c378ad97707d81E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, i64 %1) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  %n = alloca i64, align 8
  store i64 %1, i64* %n, align 8
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h07bfc4e3cf0b8fd1E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_2, i64* align 8 dereferenceable(8) %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::fallback::Literal::_new
  call void @_ZN11proc_macro28fallback7Literal4_new17h782de979c9c11e7aE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <proc_macro2::imp::DeferredTokenStream as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN76_$LT$proc_macro2..imp..DeferredTokenStream$u20$as$u20$core..clone..Clone$GT$5clone17hae49955a5d939d21E"(%"imp::DeferredTokenStream"* noalias nocapture sret(%"imp::DeferredTokenStream") dereferenceable(32) %0, %"imp::DeferredTokenStream"* align 8 dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %2 = alloca i32, align 4
  %_7 = alloca %"alloc::vec::Vec<proc_macro::TokenTree>", align 8
  %_4 = alloca %"proc_macro::TokenStream", align 4
  %__self_0_0 = getelementptr inbounds %"imp::DeferredTokenStream", %"imp::DeferredTokenStream"* %self, i32 0, i32 1
  %__self_0_1 = bitcast %"imp::DeferredTokenStream"* %self to %"alloc::vec::Vec<proc_macro::TokenTree>"*
; call <proc_macro::TokenStream as core::clone::Clone>::clone
  %3 = call i32 @"_ZN62_$LT$proc_macro..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17h653f1efbbaf9802dE"(%"proc_macro::TokenStream"* align 4 dereferenceable(4) %__self_0_0)
  store i32 %3, i32* %2, align 4
  %4 = bitcast %"proc_macro::TokenStream"* %_4 to i8*
  %5 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
  invoke void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h366cad49e43ca07fE"(%"alloc::vec::Vec<proc_macro::TokenTree>"* noalias nocapture sret(%"alloc::vec::Vec<proc_macro::TokenTree>") dereferenceable(24) %_7, %"alloc::vec::Vec<proc_macro::TokenTree>"* align 8 dereferenceable(24) %__self_0_1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %6 = getelementptr inbounds %"imp::DeferredTokenStream", %"imp::DeferredTokenStream"* %0, i32 0, i32 1
  %7 = bitcast %"proc_macro::TokenStream"* %6 to i8*
  %8 = bitcast %"proc_macro::TokenStream"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::DeferredTokenStream"* %0 to %"alloc::vec::Vec<proc_macro::TokenTree>"*
  %10 = bitcast %"alloc::vec::Vec<proc_macro::TokenTree>"* %9 to i8*
  %11 = bitcast %"alloc::vec::Vec<proc_macro::TokenTree>"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false)
  ret void

bb3:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<proc_macro::TokenStream>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro..TokenStream$GT$17h13bbe0af145081bcE"(%"proc_macro::TokenStream"* %_4) #18
  br label %bb4

cleanup:                                          ; preds = %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %17 = bitcast { i8*, i32 }* %1 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; <proc_macro2::imp::Group as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN62_$LT$proc_macro2..imp..Group$u20$as$u20$core..clone..Clone$GT$5clone17hb6d676c23bbfdaf7E"(%"imp::Group"* noalias nocapture sret(%"imp::Group") dereferenceable(40) %0, %"imp::Group"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %1 = alloca i32, align 4
  %_10 = alloca %"fallback::Group", align 8
  %_6 = alloca %"proc_macro::Group", align 4
  %_2 = alloca i64*, align 8
  %2 = bitcast i64** %_2 to %"imp::Group"**
  store %"imp::Group"* %self, %"imp::Group"** %2, align 8
  %3 = bitcast i64** %_2 to %"imp::Group"**
  %4 = load %"imp::Group"*, %"imp::Group"** %3, align 8, !nonnull !20
  %5 = bitcast %"imp::Group"* %4 to i32*
  %6 = load i32, i32* %5, align 8, !range !19
  %_4 = zext i32 %6 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast i64** %_2 to %"imp::Group"**
  %8 = load %"imp::Group"*, %"imp::Group"** %7, align 8, !nonnull !20
  %9 = bitcast %"imp::Group"* %8 to %"imp::Group::Compiler"*
  %__self_01 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %9, i32 0, i32 1
; call <proc_macro::Group as core::clone::Clone>::clone
  %10 = call i32 @"_ZN56_$LT$proc_macro..Group$u20$as$u20$core..clone..Clone$GT$5clone17he1c3dc9b0d6e1fceE"(%"proc_macro::Group"* align 4 dereferenceable(4) %__self_01)
  store i32 %10, i32* %1, align 4
  %11 = bitcast %"proc_macro::Group"* %_6 to i8*
  %12 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %13 = bitcast i64** %_2 to %"imp::Group"**
  %14 = load %"imp::Group"*, %"imp::Group"** %13, align 8, !nonnull !20
  %15 = bitcast %"imp::Group"* %14 to %"imp::Group::Fallback"*
  %__self_0 = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %15, i32 0, i32 1
; call <proc_macro2::fallback::Group as core::clone::Clone>::clone
  call void @"_ZN67_$LT$proc_macro2..fallback..Group$u20$as$u20$core..clone..Clone$GT$5clone17hd2652f8f4287193bE"(%"fallback::Group"* noalias nocapture sret(%"fallback::Group") dereferenceable(32) %_10, %"fallback::Group"* align 8 dereferenceable(32) %__self_0)
  br label %bb5

bb5:                                              ; preds = %bb1
  %16 = bitcast %"imp::Group"* %0 to %"imp::Group::Fallback"*
  %17 = getelementptr inbounds %"imp::Group::Fallback", %"imp::Group::Fallback"* %16, i32 0, i32 1
  %18 = bitcast %"fallback::Group"* %17 to i8*
  %19 = bitcast %"fallback::Group"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false)
  %20 = bitcast %"imp::Group"* %0 to i32*
  store i32 1, i32* %20, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  ret void

bb4:                                              ; preds = %bb3
  %21 = bitcast %"imp::Group"* %0 to %"imp::Group::Compiler"*
  %22 = getelementptr inbounds %"imp::Group::Compiler", %"imp::Group::Compiler"* %21, i32 0, i32 1
  %23 = bitcast %"proc_macro::Group"* %22 to i8*
  %24 = bitcast %"proc_macro::Group"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 4, i1 false)
  %25 = bitcast %"imp::Group"* %0 to i32*
  store i32 0, i32* %25, align 8
  br label %bb6
}

; <proc_macro2::imp::Ident as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN62_$LT$proc_macro2..imp..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h233beb309a445443E"(%"imp::Ident"* noalias nocapture sret(%"imp::Ident") dereferenceable(40) %0, %"imp::Ident"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %1 = alloca i32, align 4
  %_10 = alloca %"fallback::Ident", align 8
  %_6 = alloca %"proc_macro::Ident", align 4
  %_2 = alloca i64*, align 8
  %2 = bitcast i64** %_2 to %"imp::Ident"**
  store %"imp::Ident"* %self, %"imp::Ident"** %2, align 8
  %3 = bitcast i64** %_2 to %"imp::Ident"**
  %4 = load %"imp::Ident"*, %"imp::Ident"** %3, align 8, !nonnull !20
  %5 = bitcast %"imp::Ident"* %4 to i32*
  %6 = load i32, i32* %5, align 8, !range !19
  %_4 = zext i32 %6 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast i64** %_2 to %"imp::Ident"**
  %8 = load %"imp::Ident"*, %"imp::Ident"** %7, align 8, !nonnull !20
  %9 = bitcast %"imp::Ident"* %8 to %"imp::Ident::Compiler"*
  %__self_01 = getelementptr inbounds %"imp::Ident::Compiler", %"imp::Ident::Compiler"* %9, i32 0, i32 1
; call <proc_macro::Ident as core::clone::Clone>::clone
  %10 = call i32 @"_ZN56_$LT$proc_macro..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h8f7b72947ebd0f02E"(%"proc_macro::Ident"* align 4 dereferenceable(4) %__self_01)
  store i32 %10, i32* %1, align 4
  %11 = bitcast %"proc_macro::Ident"* %_6 to i8*
  %12 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %13 = bitcast i64** %_2 to %"imp::Ident"**
  %14 = load %"imp::Ident"*, %"imp::Ident"** %13, align 8, !nonnull !20
  %15 = bitcast %"imp::Ident"* %14 to %"imp::Ident::Fallback"*
  %__self_0 = getelementptr inbounds %"imp::Ident::Fallback", %"imp::Ident::Fallback"* %15, i32 0, i32 1
; call <proc_macro2::fallback::Ident as core::clone::Clone>::clone
  call void @"_ZN67_$LT$proc_macro2..fallback..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h2ced550e7cb70d9bE"(%"fallback::Ident"* noalias nocapture sret(%"fallback::Ident") dereferenceable(32) %_10, %"fallback::Ident"* align 8 dereferenceable(32) %__self_0)
  br label %bb5

bb5:                                              ; preds = %bb1
  %16 = bitcast %"imp::Ident"* %0 to %"imp::Ident::Fallback"*
  %17 = getelementptr inbounds %"imp::Ident::Fallback", %"imp::Ident::Fallback"* %16, i32 0, i32 1
  %18 = bitcast %"fallback::Ident"* %17 to i8*
  %19 = bitcast %"fallback::Ident"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false)
  %20 = bitcast %"imp::Ident"* %0 to i32*
  store i32 1, i32* %20, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  ret void

bb4:                                              ; preds = %bb3
  %21 = bitcast %"imp::Ident"* %0 to %"imp::Ident::Compiler"*
  %22 = getelementptr inbounds %"imp::Ident::Compiler", %"imp::Ident::Compiler"* %21, i32 0, i32 1
  %23 = bitcast %"proc_macro::Ident"* %22 to i8*
  %24 = bitcast %"proc_macro::Ident"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 4, i1 false)
  %25 = bitcast %"imp::Ident"* %0 to i32*
  store i32 0, i32* %25, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::Compiler
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal8Compiler17haccb6d08c7aa7969E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i32 %1) unnamed_addr #0 {
start:
  %2 = alloca i32, align 4
  %_1 = alloca %"proc_macro::Literal", align 4
  store i32 %1, i32* %2, align 4
  %3 = bitcast %"proc_macro::Literal"* %_1 to i8*
  %4 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  ret void
}

; <proc_macro2::imp::Literal as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN64_$LT$proc_macro2..imp..Literal$u20$as$u20$core..clone..Clone$GT$5clone17h1adc963be10b0385E"(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, %"imp::Literal"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %1 = alloca i32, align 4
  %_10 = alloca %"fallback::Literal", align 8
  %_6 = alloca %"proc_macro::Literal", align 4
  %_2 = alloca i64*, align 8
  %2 = bitcast i64** %_2 to %"imp::Literal"**
  store %"imp::Literal"* %self, %"imp::Literal"** %2, align 8
  %3 = bitcast i64** %_2 to %"imp::Literal"**
  %4 = load %"imp::Literal"*, %"imp::Literal"** %3, align 8, !nonnull !20
  %5 = bitcast %"imp::Literal"* %4 to i32*
  %6 = load i32, i32* %5, align 8, !range !19
  %_4 = zext i32 %6 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast i64** %_2 to %"imp::Literal"**
  %8 = load %"imp::Literal"*, %"imp::Literal"** %7, align 8, !nonnull !20
  %9 = bitcast %"imp::Literal"* %8 to %"imp::Literal::Compiler"*
  %__self_01 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %9, i32 0, i32 1
; call <proc_macro::Literal as core::clone::Clone>::clone
  %10 = call i32 @"_ZN58_$LT$proc_macro..Literal$u20$as$u20$core..clone..Clone$GT$5clone17ha4effe94ca93fcc6E"(%"proc_macro::Literal"* align 4 dereferenceable(4) %__self_01)
  store i32 %10, i32* %1, align 4
  %11 = bitcast %"proc_macro::Literal"* %_6 to i8*
  %12 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 4, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %13 = bitcast i64** %_2 to %"imp::Literal"**
  %14 = load %"imp::Literal"*, %"imp::Literal"** %13, align 8, !nonnull !20
  %15 = bitcast %"imp::Literal"* %14 to %"imp::Literal::Fallback"*
  %__self_0 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %15, i32 0, i32 1
; call <proc_macro2::fallback::Literal as core::clone::Clone>::clone
  call void @"_ZN69_$LT$proc_macro2..fallback..Literal$u20$as$u20$core..clone..Clone$GT$5clone17hc15915580090f47eE"(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_10, %"fallback::Literal"* align 8 dereferenceable(24) %__self_0)
  br label %bb5

bb5:                                              ; preds = %bb1
  %16 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %17 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %16, i32 0, i32 1
  %18 = bitcast %"fallback::Literal"* %17 to i8*
  %19 = bitcast %"fallback::Literal"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false)
  %20 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %20, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  ret void

bb4:                                              ; preds = %bb3
  %21 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %22 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %21, i32 0, i32 1
  %23 = bitcast %"proc_macro::Literal"* %22 to i8*
  %24 = bitcast %"proc_macro::Literal"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 4, i1 false)
  %25 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %25, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::u8_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal11u8_suffixed17hcefa7b12d134c8bbE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i8 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::u8_suffixed
  call void @_ZN11proc_macro28fallback7Literal11u8_suffixed17h13eeb8e7b590d1d5E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i8 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::u8_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal11u8_suffixed17h3e44ce24821d248cE(i8 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::u16_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12u16_suffixed17h8e9f40151dd9fda9E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i16 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::u16_suffixed
  call void @_ZN11proc_macro28fallback7Literal12u16_suffixed17h5e079d53737db646E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i16 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::u16_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal12u16_suffixed17h3b8f235e5e09672bE(i16 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::u32_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12u32_suffixed17h1a0e91f481e67bcbE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i32 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::u32_suffixed
  call void @_ZN11proc_macro28fallback7Literal12u32_suffixed17hf11377a9b98a9654E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i32 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::u32_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal12u32_suffixed17h3886949d111e057dE(i32 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::u64_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12u64_suffixed17hc17cb897f4c9f060E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::u64_suffixed
  call void @_ZN11proc_macro28fallback7Literal12u64_suffixed17h5d4d0d9614f61576E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i64 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::u64_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal12u64_suffixed17h78d2118a98426025E(i64 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::u128_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal13u128_suffixed17hea17150ddd2a74a4E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i128 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::u128_suffixed
  call void @_ZN11proc_macro28fallback7Literal13u128_suffixed17hc24d25665c2e082dE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i128 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::u128_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal13u128_suffixed17h257a475d22a1062eE(i128 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::usize_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14usize_suffixed17h80403dec78257cb5E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::usize_suffixed
  call void @_ZN11proc_macro28fallback7Literal14usize_suffixed17h52c45b57d823539fE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i64 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::usize_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal14usize_suffixed17h37cb1d83232c712bE(i64 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::i8_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal11i8_suffixed17h29ea9e76d91cdb29E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i8 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::i8_suffixed
  call void @_ZN11proc_macro28fallback7Literal11i8_suffixed17h3be2149cf975d8ceE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i8 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::i8_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal11i8_suffixed17hf97d5c99b52ae5f5E(i8 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::i16_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12i16_suffixed17h282c0f3f56805892E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i16 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::i16_suffixed
  call void @_ZN11proc_macro28fallback7Literal12i16_suffixed17h620c7bfeb3427596E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i16 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::i16_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal12i16_suffixed17h52d6fe036629a48aE(i16 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::i32_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12i32_suffixed17hfb6aa8307679610eE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i32 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::i32_suffixed
  call void @_ZN11proc_macro28fallback7Literal12i32_suffixed17hab1314ad3d8ca212E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i32 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::i32_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal12i32_suffixed17hf546e0ef6e878a5dE(i32 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::i64_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12i64_suffixed17h93ab9e110630f31fE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::i64_suffixed
  call void @_ZN11proc_macro28fallback7Literal12i64_suffixed17hd512b05de39acd49E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i64 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::i64_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal12i64_suffixed17h4f0f70c76a903c44E(i64 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::i128_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal13i128_suffixed17h4319c2604d090c14E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i128 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::i128_suffixed
  call void @_ZN11proc_macro28fallback7Literal13i128_suffixed17hf4ed9a1a3b313ae2E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i128 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::i128_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal13i128_suffixed17h145ab8984066e370E(i128 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::isize_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14isize_suffixed17h6feded904305e0ccE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::isize_suffixed
  call void @_ZN11proc_macro28fallback7Literal14isize_suffixed17hcd98e1d0990130eeE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i64 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::isize_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal14isize_suffixed17h5aab7dc1ce629100E(i64 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::f32_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12f32_suffixed17h3a054298c45b19ffE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, float %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::f32_suffixed
  call void @_ZN11proc_macro28fallback7Literal12f32_suffixed17heab8ab29853bb7b5E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, float %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::f32_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal12f32_suffixed17he0327d7cb70af9c6E(float %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::f64_suffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal12f64_suffixed17h85fdd27bafda93d4E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, double %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::f64_suffixed
  call void @_ZN11proc_macro28fallback7Literal12f64_suffixed17h2cb91c3dd542f272E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, double %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::f64_suffixed
  %2 = call i32 @_ZN10proc_macro7Literal12f64_suffixed17hf761ae4a5c8e23efE(double %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::u8_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal13u8_unsuffixed17h9c97de1e2fe258afE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i8 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::u8_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal13u8_unsuffixed17h4fe54903d9f9e5a7E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i8 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::u8_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal13u8_unsuffixed17hc9562e04f545cf0aE(i8 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::u16_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14u16_unsuffixed17h39b4dd0b6bb13301E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i16 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::u16_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14u16_unsuffixed17h0a587f2f8a27c8d4E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i16 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::u16_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal14u16_unsuffixed17h7de766b55b295d57E(i16 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::u32_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14u32_unsuffixed17h26d1bac706e69c54E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i32 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::u32_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14u32_unsuffixed17h7ba9ac3e2a9baa80E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i32 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::u32_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal14u32_unsuffixed17h2b636be954110e60E(i32 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::u64_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14u64_unsuffixed17hb86ba867db764586E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::u64_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14u64_unsuffixed17hb9eba888952833e1E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i64 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::u64_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal14u64_unsuffixed17h5f5661e9d1e2eb50E(i64 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::u128_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal15u128_unsuffixed17h4f3fb1752dbf24e5E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i128 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::u128_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal15u128_unsuffixed17h05081b2d206d5609E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i128 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::u128_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal15u128_unsuffixed17h3b2c0d872314b501E(i128 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::usize_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal16usize_unsuffixed17ha12c38b13ce94ee1E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::usize_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal16usize_unsuffixed17he5245d2d77439f04E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i64 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::usize_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal16usize_unsuffixed17ha222d7c188f006aaE(i64 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::i8_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal13i8_unsuffixed17hbbe15e2caec7c4adE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i8 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::i8_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal13i8_unsuffixed17h725e881eac5fbcd0E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i8 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::i8_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal13i8_unsuffixed17h8df51d7c9f7fcdf8E(i8 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::i16_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14i16_unsuffixed17h77355a647a126e35E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i16 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::i16_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14i16_unsuffixed17h5a2bf1eac38b3325E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i16 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::i16_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal14i16_unsuffixed17h6d6b0a46a0895b40E(i16 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::i32_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14i32_unsuffixed17h62a4c4b28a2644b2E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i32 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::i32_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14i32_unsuffixed17hf4129127e3ea2accE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i32 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::i32_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal14i32_unsuffixed17h4f6ca09140b7e3afE(i32 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::i64_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal14i64_unsuffixed17h2915c393fad551dcE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::i64_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal14i64_unsuffixed17h16a3d56b17262518E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i64 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::i64_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal14i64_unsuffixed17h2e7fd3aa957a5227E(i64 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::i128_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal15i128_unsuffixed17hb1daf5b93f9716d8E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i128 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::i128_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal15i128_unsuffixed17h642f354dd5fbaabfE(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i128 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::i128_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal15i128_unsuffixed17h295315385a9a7338E(i128 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; proc_macro2::imp::Literal::isize_unsuffixed
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11proc_macro23imp7Literal16isize_unsuffixed17h7f6e49f061c65addE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_5 = alloca %"fallback::Literal", align 8
  %_3 = alloca %"proc_macro::Literal", align 4
; call proc_macro2::detection::inside_proc_macro
  %_2 = call zeroext i1 @_ZN11proc_macro29detection17inside_proc_macro17h4550577673cfc1e3E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call proc_macro2::fallback::Literal::isize_unsuffixed
  call void @_ZN11proc_macro28fallback7Literal16isize_unsuffixed17hc2c378ad97707d81E(%"fallback::Literal"* noalias nocapture sret(%"fallback::Literal") dereferenceable(24) %_5, i64 %n)
  br label %bb5

bb2:                                              ; preds = %bb1
; call proc_macro::Literal::isize_unsuffixed
  %2 = call i32 @_ZN10proc_macro7Literal16isize_unsuffixed17hccd066b2f87b4b1eE(i64 %n)
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"proc_macro::Literal"* %_3 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Compiler"*
  %6 = getelementptr inbounds %"imp::Literal::Compiler", %"imp::Literal::Compiler"* %5, i32 0, i32 1
  %7 = bitcast %"proc_macro::Literal"* %6 to i8*
  %8 = bitcast %"proc_macro::Literal"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false)
  %9 = bitcast %"imp::Literal"* %0 to i32*
  store i32 0, i32* %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = bitcast %"imp::Literal"* %0 to %"imp::Literal::Fallback"*
  %11 = getelementptr inbounds %"imp::Literal::Fallback", %"imp::Literal::Fallback"* %10, i32 0, i32 1
  %12 = bitcast %"fallback::Literal"* %11 to i8*
  %13 = bitcast %"fallback::Literal"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"imp::Literal"* %0 to i32*
  store i32 1, i32* %14, align 8
  br label %bb6
}

; <proc_macro2::Span as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN56_$LT$proc_macro2..Span$u20$as$u20$core..clone..Clone$GT$5clone17h7f1cf1d810c27349E"(%Span* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca %Span, align 4
  %1 = bitcast %Span* %0 to i8*
  %2 = bitcast %Span* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 4, i1 false)
  %3 = bitcast %Span* %0 to i32*
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; <proc_macro2::TokenTree as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN61_$LT$proc_macro2..TokenTree$u20$as$u20$core..clone..Clone$GT$5clone17hc5480cc3261eb639E"(%TokenTree* noalias nocapture sret(%TokenTree) dereferenceable(48) %0, %TokenTree* align 8 dereferenceable(48) %self) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_18 = alloca %Literal, align 8
  %_14 = alloca %Punct, align 4
  %_10 = alloca %Ident, align 8
  %_6 = alloca %Group, align 8
  %_2 = alloca i64*, align 8
  %2 = bitcast i64** %_2 to %TokenTree**
  store %TokenTree* %self, %TokenTree** %2, align 8
  %3 = bitcast i64** %_2 to %TokenTree**
  %4 = load %TokenTree*, %TokenTree** %3, align 8, !nonnull !20
  %5 = bitcast %TokenTree* %4 to i32*
  %6 = load i32, i32* %5, align 8, !range !36
  %_4 = zext i32 %6 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
    i64 2, label %bb7
    i64 3, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast i64** %_2 to %TokenTree**
  %8 = load %TokenTree*, %TokenTree** %7, align 8, !nonnull !20
  %9 = bitcast %TokenTree* %8 to %"TokenTree::Group"*
  %__self_03 = getelementptr inbounds %"TokenTree::Group", %"TokenTree::Group"* %9, i32 0, i32 1
; call <proc_macro2::Group as core::clone::Clone>::clone
  call void @"_ZN57_$LT$proc_macro2..Group$u20$as$u20$core..clone..Clone$GT$5clone17ha74edd2a0963243eE"(%Group* noalias nocapture sret(%Group) dereferenceable(40) %_6, %Group* align 8 dereferenceable(40) %__self_03)
  br label %bb4

bb5:                                              ; preds = %start
  %10 = bitcast i64** %_2 to %TokenTree**
  %11 = load %TokenTree*, %TokenTree** %10, align 8, !nonnull !20
  %12 = bitcast %TokenTree* %11 to %"TokenTree::Ident"*
  %__self_02 = getelementptr inbounds %"TokenTree::Ident", %"TokenTree::Ident"* %12, i32 0, i32 1
; call <proc_macro2::Ident as core::clone::Clone>::clone
  call void @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..clone..Clone$GT$5clone17hc179e4df82953c54E"(%Ident* noalias nocapture sret(%Ident) dereferenceable(40) %_10, %Ident* align 8 dereferenceable(40) %__self_02)
  br label %bb6

bb7:                                              ; preds = %start
  %13 = bitcast i64** %_2 to %TokenTree**
  %14 = load %TokenTree*, %TokenTree** %13, align 8, !nonnull !20
  %15 = bitcast %TokenTree* %14 to %"TokenTree::Punct"*
  %__self_01 = getelementptr inbounds %"TokenTree::Punct", %"TokenTree::Punct"* %15, i32 0, i32 1
; call <proc_macro2::Punct as core::clone::Clone>::clone
  %16 = call i96 @"_ZN57_$LT$proc_macro2..Punct$u20$as$u20$core..clone..Clone$GT$5clone17h2b23c34b9d9177d3E"(%Punct* align 4 dereferenceable(12) %__self_01)
  store i96 %16, i96* %1, align 8
  %17 = bitcast %Punct* %_14 to i8*
  %18 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 8 %18, i64 12, i1 false)
  br label %bb8

bb1:                                              ; preds = %start
  %19 = bitcast i64** %_2 to %TokenTree**
  %20 = load %TokenTree*, %TokenTree** %19, align 8, !nonnull !20
  %21 = bitcast %TokenTree* %20 to %"TokenTree::Literal"*
  %__self_0 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %21, i32 0, i32 1
; call <proc_macro2::Literal as core::clone::Clone>::clone
  call void @"_ZN59_$LT$proc_macro2..Literal$u20$as$u20$core..clone..Clone$GT$5clone17hd0a4f8f894f0c533E"(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %_18, %Literal* align 8 dereferenceable(32) %__self_0)
  br label %bb9

bb9:                                              ; preds = %bb1
  %22 = bitcast %TokenTree* %0 to %"TokenTree::Literal"*
  %23 = getelementptr inbounds %"TokenTree::Literal", %"TokenTree::Literal"* %22, i32 0, i32 1
  %24 = bitcast %Literal* %23 to i8*
  %25 = bitcast %Literal* %_18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false)
  %26 = bitcast %TokenTree* %0 to i32*
  store i32 3, i32* %26, align 8
  br label %bb10

bb10:                                             ; preds = %bb4, %bb6, %bb8, %bb9
  ret void

bb8:                                              ; preds = %bb7
  %27 = bitcast %TokenTree* %0 to %"TokenTree::Punct"*
  %28 = getelementptr inbounds %"TokenTree::Punct", %"TokenTree::Punct"* %27, i32 0, i32 1
  %29 = bitcast %Punct* %28 to i8*
  %30 = bitcast %Punct* %_14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 12, i1 false)
  %31 = bitcast %TokenTree* %0 to i32*
  store i32 2, i32* %31, align 8
  br label %bb10

bb6:                                              ; preds = %bb5
  %32 = bitcast %TokenTree* %0 to %"TokenTree::Ident"*
  %33 = getelementptr inbounds %"TokenTree::Ident", %"TokenTree::Ident"* %32, i32 0, i32 1
  %34 = bitcast %Ident* %33 to i8*
  %35 = bitcast %Ident* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 40, i1 false)
  %36 = bitcast %TokenTree* %0 to i32*
  store i32 1, i32* %36, align 8
  br label %bb10

bb4:                                              ; preds = %bb3
  %37 = bitcast %TokenTree* %0 to %"TokenTree::Group"*
  %38 = getelementptr inbounds %"TokenTree::Group", %"TokenTree::Group"* %37, i32 0, i32 1
  %39 = bitcast %Group* %38 to i8*
  %40 = bitcast %Group* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 40, i1 false)
  %41 = bitcast %TokenTree* %0 to i32*
  store i32 0, i32* %41, align 8
  br label %bb10
}

; <proc_macro2::Group as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN57_$LT$proc_macro2..Group$u20$as$u20$core..clone..Clone$GT$5clone17ha74edd2a0963243eE"(%Group* noalias nocapture sret(%Group) dereferenceable(40) %0, %Group* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_3 = alloca %"imp::Group", align 8
  %__self_0_0 = bitcast %Group* %self to %"imp::Group"*
; call <proc_macro2::imp::Group as core::clone::Clone>::clone
  call void @"_ZN62_$LT$proc_macro2..imp..Group$u20$as$u20$core..clone..Clone$GT$5clone17hb6d676c23bbfdaf7E"(%"imp::Group"* noalias nocapture sret(%"imp::Group") dereferenceable(40) %_3, %"imp::Group"* align 8 dereferenceable(40) %__self_0_0)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %Group* %0 to %"imp::Group"*
  %2 = bitcast %"imp::Group"* %1 to i8*
  %3 = bitcast %"imp::Group"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 40, i1 false)
  ret void
}

; <proc_macro2::Delimiter as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN61_$LT$proc_macro2..Delimiter$u20$as$u20$core..clone..Clone$GT$5clone17h81894d70e99b048dE"(i8* align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
  %0 = load i8, i8* %self, align 1, !range !110
  ret i8 %0
}

; <proc_macro2::Delimiter as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN59_$LT$proc_macro2..Delimiter$u20$as$u20$core..fmt..Debug$GT$3fmt17h18ef1df274a76aa5E"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_3 = alloca i8*, align 8
  %0 = alloca i8, align 1
  store i8* %self, i8** %_3, align 8
  %1 = load i8*, i8** %_3, align 8, !nonnull !20
  %2 = load i8, i8* %1, align 1, !range !110
  %_5 = zext i8 %2 to i64
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %3 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc1794 to [0 x i8]*), i64 11)
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %0, align 1
  br label %bb6

bb4:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %5 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1793 to [0 x i8]*), i64 5)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb6

bb5:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %7 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1792 to [0 x i8]*), i64 7)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb6

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %9 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1791 to [0 x i8]*), i64 4)
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4, %bb5, %bb1
  %11 = load i8, i8* %0, align 1, !range !2
  %12 = trunc i8 %11 to i1
  ret i1 %12
}

; <proc_macro2::Delimiter as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN63_$LT$proc_macro2..Delimiter$u20$as$u20$core..cmp..PartialEq$GT$2eq17h5a400777d5a6ecc3E"(i8* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = load i8, i8* %self, align 1, !range !110
  %__self_vi = zext i8 %1 to i64
  %2 = load i8, i8* %other, align 1, !range !110
  %__arg_1_vi = zext i8 %2 to i64
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; <proc_macro2::Punct as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN57_$LT$proc_macro2..Punct$u20$as$u20$core..clone..Clone$GT$5clone17h2b23c34b9d9177d3E"(%Punct* align 4 dereferenceable(12) %self) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_11 = alloca %Span, align 4
  %1 = alloca %Punct, align 4
  %__self_0_0 = bitcast %Punct* %self to i32*
  %__self_0_1 = getelementptr inbounds %Punct, %Punct* %self, i32 0, i32 2
  %__self_0_2 = getelementptr inbounds %Punct, %Punct* %self, i32 0, i32 1
; call core::clone::impls::<impl core::clone::Clone for char>::clone
  %_5 = call i32 @"_ZN4core5clone5impls53_$LT$impl$u20$core..clone..Clone$u20$for$u20$char$GT$5clone17h65bc3a15aebc30feE"(i32* align 4 dereferenceable(4) %__self_0_0), !range !80
  br label %bb1

bb1:                                              ; preds = %start
; call <proc_macro2::Spacing as core::clone::Clone>::clone
  %_8 = call zeroext i1 @"_ZN59_$LT$proc_macro2..Spacing$u20$as$u20$core..clone..Clone$GT$5clone17h17c509139ec4df03E"(i8* align 1 dereferenceable(1) %__self_0_1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <proc_macro2::Span as core::clone::Clone>::clone
  %2 = call i32 @"_ZN56_$LT$proc_macro2..Span$u20$as$u20$core..clone..Clone$GT$5clone17h7f1cf1d810c27349E"(%Span* align 4 dereferenceable(4) %__self_0_2)
  store i32 %2, i32* %0, align 4
  %3 = bitcast %Span* %_11 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast %Punct* %1 to i32*
  store i32 %_5, i32* %5, align 4
  %6 = getelementptr inbounds %Punct, %Punct* %1, i32 0, i32 2
  %7 = zext i1 %_8 to i8
  store i8 %7, i8* %6, align 4
  %8 = getelementptr inbounds %Punct, %Punct* %1, i32 0, i32 1
  %9 = bitcast %Span* %8 to i8*
  %10 = bitcast %Span* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  %11 = bitcast %Punct* %1 to i96*
  %12 = load i96, i96* %11, align 4
  ret i96 %12
}

; <proc_macro2::Spacing as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN59_$LT$proc_macro2..Spacing$u20$as$u20$core..clone..Clone$GT$5clone17h17c509139ec4df03E"(i8* align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
  %0 = load i8, i8* %self, align 1, !range !2
  %1 = trunc i8 %0 to i1
  ret i1 %1
}

; <proc_macro2::Spacing as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN57_$LT$proc_macro2..Spacing$u20$as$u20$core..fmt..Debug$GT$3fmt17h2295d0d8d8975e10E"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_3 = alloca i8*, align 8
  %0 = alloca i8, align 1
  store i8* %self, i8** %_3, align 8
  %1 = load i8*, i8** %_3, align 8, !nonnull !20
  %2 = load i8, i8* %1, align 1, !range !2
  %3 = trunc i8 %2 to i1
  %_5 = zext i1 %3 to i64
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %4 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1796 to [0 x i8]*), i64 5)
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %6 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1795 to [0 x i8]*), i64 5)
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %8 = load i8, i8* %0, align 1, !range !2
  %9 = trunc i8 %8 to i1
  ret i1 %9
}

; <proc_macro2::Spacing as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN61_$LT$proc_macro2..Spacing$u20$as$u20$core..cmp..PartialEq$GT$2eq17h6e21c444909d1856E"(i8* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = load i8, i8* %self, align 1, !range !2
  %2 = trunc i8 %1 to i1
  %__self_vi = zext i1 %2 to i64
  %3 = load i8, i8* %other, align 1, !range !2
  %4 = trunc i8 %3 to i1
  %__arg_1_vi = zext i1 %4 to i64
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, i8* %0, align 1, !range !2
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; <proc_macro2::Ident as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN57_$LT$proc_macro2..Ident$u20$as$u20$core..clone..Clone$GT$5clone17hc179e4df82953c54E"(%Ident* noalias nocapture sret(%Ident) dereferenceable(40) %0, %Ident* align 8 dereferenceable(40) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca %"imp::Ident", align 8
  %__self_0_0 = bitcast %Ident* %self to %"imp::Ident"*
  %__self_0_1 = bitcast %Ident* %self to %"core::marker::PhantomData<marker::ProcMacroAutoTraits>"*
; call <proc_macro2::imp::Ident as core::clone::Clone>::clone
  call void @"_ZN62_$LT$proc_macro2..imp..Ident$u20$as$u20$core..clone..Clone$GT$5clone17h233beb309a445443E"(%"imp::Ident"* noalias nocapture sret(%"imp::Ident") dereferenceable(40) %_4, %"imp::Ident"* align 8 dereferenceable(40) %__self_0_0)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <core::marker::PhantomData<T> as core::clone::Clone>::clone
  invoke void @"_ZN73_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h1aa66f5ea2e69dacE"(%"core::marker::PhantomData<marker::ProcMacroAutoTraits>"* nonnull align 1 %__self_0_1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %2 = bitcast %Ident* %0 to %"imp::Ident"*
  %3 = bitcast %"imp::Ident"* %2 to i8*
  %4 = bitcast %"imp::Ident"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret void

bb3:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<proc_macro2::imp::Ident>
  call void @"_ZN4core3ptr44drop_in_place$LT$proc_macro2..imp..Ident$GT$17h63dd89cad702d684E"(%"imp::Ident"* %_4) #18
  br label %bb4

cleanup:                                          ; preds = %bb1
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %10 = bitcast { i8*, i32 }* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15
}

; <proc_macro2::Literal as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN59_$LT$proc_macro2..Literal$u20$as$u20$core..clone..Clone$GT$5clone17hd0a4f8f894f0c533E"(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %Literal* align 8 dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca %"imp::Literal", align 8
  %__self_0_0 = bitcast %Literal* %self to %"imp::Literal"*
  %__self_0_1 = bitcast %Literal* %self to %"core::marker::PhantomData<marker::ProcMacroAutoTraits>"*
; call <proc_macro2::imp::Literal as core::clone::Clone>::clone
  call void @"_ZN64_$LT$proc_macro2..imp..Literal$u20$as$u20$core..clone..Clone$GT$5clone17h1adc963be10b0385E"(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_4, %"imp::Literal"* align 8 dereferenceable(32) %__self_0_0)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <core::marker::PhantomData<T> as core::clone::Clone>::clone
  invoke void @"_ZN73_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h1aa66f5ea2e69dacE"(%"core::marker::PhantomData<marker::ProcMacroAutoTraits>"* nonnull align 1 %__self_0_1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %2 = bitcast %Literal* %0 to %"imp::Literal"*
  %3 = bitcast %"imp::Literal"* %2 to i8*
  %4 = bitcast %"imp::Literal"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  ret void

bb3:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<proc_macro2::imp::Literal>
  call void @"_ZN4core3ptr46drop_in_place$LT$proc_macro2..imp..Literal$GT$17h1792172ac090f0a6E"(%"imp::Literal"* %_4) #18
  br label %bb4

cleanup:                                          ; preds = %bb1
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %10 = bitcast { i8*, i32 }* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15
}

; proc_macro2::Literal::u8_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal11u8_suffixed17heeddcd79d60b8348E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i8 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::u8_suffixed
  call void @_ZN11proc_macro23imp7Literal11u8_suffixed17hcefa7b12d134c8bbE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i8 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::u16_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12u16_suffixed17h6068fcf32aeef9eeE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i16 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::u16_suffixed
  call void @_ZN11proc_macro23imp7Literal12u16_suffixed17h8e9f40151dd9fda9E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i16 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::u32_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12u32_suffixed17hf4c77a8c367f5a83E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i32 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::u32_suffixed
  call void @_ZN11proc_macro23imp7Literal12u32_suffixed17h1a0e91f481e67bcbE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i32 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::u64_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12u64_suffixed17h377a452826ff242aE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::u64_suffixed
  call void @_ZN11proc_macro23imp7Literal12u64_suffixed17hc17cb897f4c9f060E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i64 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::u128_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal13u128_suffixed17h9a2321d304fc2038E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i128 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::u128_suffixed
  call void @_ZN11proc_macro23imp7Literal13u128_suffixed17hea17150ddd2a74a4E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i128 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::usize_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14usize_suffixed17hca0a1f8194a3ad87E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::usize_suffixed
  call void @_ZN11proc_macro23imp7Literal14usize_suffixed17h80403dec78257cb5E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i64 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::i8_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal11i8_suffixed17hd15cdc3447523b67E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i8 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::i8_suffixed
  call void @_ZN11proc_macro23imp7Literal11i8_suffixed17h29ea9e76d91cdb29E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i8 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::i16_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12i16_suffixed17hbaa9cb6b02254bb8E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i16 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::i16_suffixed
  call void @_ZN11proc_macro23imp7Literal12i16_suffixed17h282c0f3f56805892E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i16 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::i32_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12i32_suffixed17ha5dfd375dc3c9612E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i32 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::i32_suffixed
  call void @_ZN11proc_macro23imp7Literal12i32_suffixed17hfb6aa8307679610eE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i32 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::i64_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal12i64_suffixed17h57f46eaaf34a55e8E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::i64_suffixed
  call void @_ZN11proc_macro23imp7Literal12i64_suffixed17h93ab9e110630f31fE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i64 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::i128_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal13i128_suffixed17h8479aeb443c13b1aE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i128 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::i128_suffixed
  call void @_ZN11proc_macro23imp7Literal13i128_suffixed17h4319c2604d090c14E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i128 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::isize_suffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14isize_suffixed17h961645934a54290fE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::isize_suffixed
  call void @_ZN11proc_macro23imp7Literal14isize_suffixed17h6feded904305e0ccE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i64 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::u8_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal13u8_unsuffixed17h2b2933fab546a495E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i8 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::u8_unsuffixed
  call void @_ZN11proc_macro23imp7Literal13u8_unsuffixed17h9c97de1e2fe258afE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i8 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::u16_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14u16_unsuffixed17hab60ed006c48b516E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i16 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::u16_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14u16_unsuffixed17h39b4dd0b6bb13301E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i16 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::u32_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14u32_unsuffixed17hf1955647d87aeef2E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i32 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::u32_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14u32_unsuffixed17h26d1bac706e69c54E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i32 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::u64_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14u64_unsuffixed17h14cc40e8b9093ae2E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::u64_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14u64_unsuffixed17hb86ba867db764586E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i64 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::u128_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal15u128_unsuffixed17h6cfd269c0e482d3bE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i128 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::u128_unsuffixed
  call void @_ZN11proc_macro23imp7Literal15u128_unsuffixed17h4f3fb1752dbf24e5E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i128 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::usize_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal16usize_unsuffixed17hc5dc1ceb6b468143E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::usize_unsuffixed
  call void @_ZN11proc_macro23imp7Literal16usize_unsuffixed17ha12c38b13ce94ee1E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i64 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::i8_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal13i8_unsuffixed17h84f642283629d996E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i8 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::i8_unsuffixed
  call void @_ZN11proc_macro23imp7Literal13i8_unsuffixed17hbbe15e2caec7c4adE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i8 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::i16_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14i16_unsuffixed17hce4928da71d3737cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i16 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::i16_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14i16_unsuffixed17h77355a647a126e35E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i16 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::i32_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14i32_unsuffixed17hd8d72792bcb98caeE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i32 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::i32_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14i32_unsuffixed17h62a4c4b28a2644b2E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i32 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::i64_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal14i64_unsuffixed17ha9372279c3964143E(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::i64_unsuffixed
  call void @_ZN11proc_macro23imp7Literal14i64_unsuffixed17h2915c393fad551dcE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i64 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::i128_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal15i128_unsuffixed17hbbacf8fc9d65c27dE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i128 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::i128_unsuffixed
  call void @_ZN11proc_macro23imp7Literal15i128_unsuffixed17hb1daf5b93f9716d8E(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i128 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; proc_macro2::Literal::isize_unsuffixed
; Function Attrs: nonlazybind uwtable
define void @_ZN11proc_macro27Literal16isize_unsuffixed17he05ba9726e04236eE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, i64 %n) unnamed_addr #1 {
start:
  %_2 = alloca %"imp::Literal", align 8
; call proc_macro2::imp::Literal::isize_unsuffixed
  call void @_ZN11proc_macro23imp7Literal16isize_unsuffixed17h7f6e49f061c65addE(%"imp::Literal"* noalias nocapture sret(%"imp::Literal") dereferenceable(32) %_2, i64 %n)
  br label %bb1

bb1:                                              ; preds = %start
; call proc_macro2::Literal::_new
  call void @_ZN11proc_macro27Literal4_new17h7febf44779704e4cE(%Literal* noalias nocapture sret(%Literal) dereferenceable(32) %0, %"imp::Literal"* noalias nocapture dereferenceable(32) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #9

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #10

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #11

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; proc_macro::TokenStream::new
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro11TokenStream3new17hb86dfb25bf941996E() unnamed_addr #1

; proc_macro::bridge::client::TokenStreamBuilder::new
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro6bridge6client18TokenStreamBuilder3new17h304fc462cd436c20E() unnamed_addr #1

; proc_macro::bridge::client::TokenStreamBuilder::build
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro6bridge6client18TokenStreamBuilder5build17ha4d9293c16140d01E(i32) unnamed_addr #1

; proc_macro::bridge::client::TokenStreamBuilder::push
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro6bridge6client18TokenStreamBuilder4push17h78632d61250d2ab6E(%"proc_macro::bridge::client::TokenStreamBuilder"* align 4 dereferenceable(4), i32) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; std::sync::once::Once::call_inner
; Function Attrs: cold nonlazybind uwtable
declare void @_ZN3std4sync4once4Once10call_inner17h9cbe709b601a3566E(%"std::sync::once::Once"* align 8 dereferenceable(8), i1 zeroext, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #7

; core::panic::location::Location::caller
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(24) %"core::panic::location::Location"* @_ZN4core5panic8location8Location6caller17h66ab9d009774583dE(%"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #1

; std::panicking::rust_panic_with_hook
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN3std9panicking20rust_panic_with_hook17h7a6b21c56a75680aE({}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), i64* align 8 dereferenceable_or_null(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #8

; Function Attrs: nonlazybind
define internal i32 @__rust_try(void (i8*)* nonnull %0, i8* %1, void (i8*, i8*)* nonnull %2) unnamed_addr #13 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
entry-block:
  invoke void %0(i8* %1)
          to label %then unwind label %catch

then:                                             ; preds = %entry-block
  ret i32 0

catch:                                            ; preds = %entry-block
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  call void %2(i8* %1, i8* %4)
  ret i32 1
}

; std::panicking::try::cleanup
; Function Attrs: cold nonlazybind uwtable
declare { {}*, [3 x i64]* } @_ZN3std9panicking3try7cleanup17h40bd3b401a1044daE(i8*) unnamed_addr #7

; <bool as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17he384601f74d7151bE"(i8* align 1 dereferenceable(1), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <str as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17hec7dec34a2bb4d4fE"([0 x i8]* nonnull align 1, i64, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17hae1e0652414f7084E"(i8* align 1 dereferenceable(1), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$isize$GT$3fmt17h21a09cd501ba5453E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u16$GT$3fmt17hb1ab876e21a62ebbE"(i16* align 2 dereferenceable(2), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::float::<impl core::fmt::Display for f64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f64$GT$3fmt17hf952995d1c1d8ef9E"(double* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h143e132e8c82669cE"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::Display for i128>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..Display$u20$for$u20$i128$GT$3fmt17h8cbb3606ac433127E"(i128* align 8 dereferenceable(16), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for i64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h5c41694b747c6f84E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::Display for u128>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..Display$u20$for$u20$u128$GT$3fmt17h60917929869bc44cE"(i128* align 8 dereferenceable(16), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::float::<impl core::fmt::Display for f32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt5float52_$LT$impl$u20$core..fmt..Display$u20$for$u20$f32$GT$3fmt17hc227dd5d11708e7cE"(float* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for i16>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i16$GT$3fmt17ha06c35c1e7aaace7E"(i16* align 2 dereferenceable(2), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hc0f7594e99de2828E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; unicode_xid::tables::derived_property::XID_Start
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN11unicode_xid6tables16derived_property9XID_Start17h3d292a03d341d242E(i32) unnamed_addr #1

; unicode_xid::tables::derived_property::XID_Continue
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN11unicode_xid6tables16derived_property12XID_Continue17h1ec9d9e64434c87aE(i32) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @memcmp(i8*, i8*, i64) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #14

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #9

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17hc1ea778f34506390E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h15400e4abae8bbbeE"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9143b4968b3afd78E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17ha63680436de3943cE"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::write
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt5write17h0200d27bf417ad61E({}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #1

; core::fmt::builders::DebugList::entry
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(16) %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17hfd5de0649c122df2E(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #10

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #10

; <proc_macro::TokenStream as core::convert::From<proc_macro::TokenTree>>::from
; Function Attrs: nonlazybind uwtable
declare i32 @"_ZN92_$LT$proc_macro..TokenStream$u20$as$u20$core..convert..From$LT$proc_macro..TokenTree$GT$$GT$4from17h9a352173d3b4519dE"(i64) unnamed_addr #1

; <proc_macro::bridge::client::Group as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN75_$LT$proc_macro..bridge..client..Group$u20$as$u20$core..ops..drop..Drop$GT$4drop17h36494f41192a028bE"(%"proc_macro::bridge::client::Group"* align 4 dereferenceable(4)) unnamed_addr #1

; <proc_macro::bridge::client::Literal as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN77_$LT$proc_macro..bridge..client..Literal$u20$as$u20$core..ops..drop..Drop$GT$4drop17hea974dcff523ffe2E"(%"proc_macro::bridge::client::Literal"* align 4 dereferenceable(4)) unnamed_addr #1

; <proc_macro::bridge::client::TokenStream as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN81_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8664478b0655338fE"(%"proc_macro::bridge::client::TokenStream"* align 4 dereferenceable(4)) unnamed_addr #1

; <proc_macro::bridge::client::TokenStreamIter as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN85_$LT$proc_macro..bridge..client..TokenStreamIter$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha3e79c7adb56b7bcE"(%"proc_macro::bridge::client::TokenStreamIter"* align 4 dereferenceable(4)) unnamed_addr #1

; <proc_macro::bridge::client::TokenStreamBuilder as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN88_$LT$proc_macro..bridge..client..TokenStreamBuilder$u20$as$u20$core..ops..drop..Drop$GT$4drop17h305394f802690d8cE"(%"proc_macro::bridge::client::TokenStreamBuilder"* align 4 dereferenceable(4)) unnamed_addr #1

; <proc_macro::TokenStream as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
declare i32 @"_ZN70_$LT$proc_macro..TokenStream$u20$as$u20$core..str..traits..FromStr$GT$8from_str17h4d9e6fdb02ba8545E"([0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::str::slice_error_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core3str16slice_error_fail17ha499ccf9a8f75ce3E([0 x i8]* nonnull align 1, i64, i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17hef35279af1b2dff0E"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #15

; core::unicode::unicode_data::white_space::lookup
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17h3d79e61de93a9ceeE(i32) unnamed_addr #1

; core::unicode::printable::is_printable
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core7unicode9printable12is_printable17h838e0e5b00b65dc0E(i32) unnamed_addr #1

; core::unicode::unicode_data::grapheme_extend::lookup
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core7unicode12unicode_data15grapheme_extend6lookup17hd79b3282daeb95c7E(i32) unnamed_addr #1

; <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
declare i32 @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h27e5bcc26268a1b2E"(%"core::char::EscapeDebug"* align 8 dereferenceable(24)) unnamed_addr #1

; core::slice::index::slice_start_index_overflow_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index31slice_start_index_overflow_fail17hab4b04de8721a1a3E(%"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; core::slice::index::slice_end_index_overflow_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index29slice_end_index_overflow_fail17h1088041795c895c8E(%"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; core::slice::memchr::memchr_general_case
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17h3d12d97f424848f5E(i8, [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; <core::fmt::Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17ha6e04a2ac8dde238E"(%"core::fmt::Error"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; <proc_macro::LexError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN57_$LT$proc_macro..LexError$u20$as$u20$core..fmt..Debug$GT$3fmt17h1c1fe93c83b7c8a2E"(%"proc_macro::LexError"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::panicking::assert_failed_inner
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN4core9panicking19assert_failed_inner17h90ea89642d218837E(i8, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #8

; <proc_macro::TokenTree as core::convert::From<proc_macro::Punct>>::from
; Function Attrs: nonlazybind uwtable
declare i64 @"_ZN86_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Punct$GT$$GT$4from17h6ed6fdb17fde94c0E"(i32) unnamed_addr #1

; <proc_macro::TokenTree as core::convert::From<proc_macro::Literal>>::from
; Function Attrs: nonlazybind uwtable
declare i64 @"_ZN88_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Literal$GT$$GT$4from17hb7eb961715b9a0d0E"(i32) unnamed_addr #1

; <proc_macro::TokenTree as core::convert::From<proc_macro::Group>>::from
; Function Attrs: nonlazybind uwtable
declare i64 @"_ZN86_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Group$GT$$GT$4from17ha5a0a33f019de1dbE"(i32) unnamed_addr #1

; <proc_macro::TokenTree as core::convert::From<proc_macro::Ident>>::from
; Function Attrs: nonlazybind uwtable
declare i64 @"_ZN86_$LT$proc_macro..TokenTree$u20$as$u20$core..convert..From$LT$proc_macro..Ident$GT$$GT$4from17hcabfe1a867fde07fE"(i32) unnamed_addr #1

; core::str::pattern::StrSearcher::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str7pattern11StrSearcher3new17h95d68a0534dab867E(%"core::str::pattern::StrSearcher"* noalias nocapture sret(%"core::str::pattern::StrSearcher") dereferenceable(104), [0 x i8]* nonnull align 1, i64, [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; <proc_macro::bridge::client::Group as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
declare i32 @"_ZN72_$LT$proc_macro..bridge..client..Group$u20$as$u20$core..clone..Clone$GT$5clone17h9f6dcf87757fd27aE"(%"proc_macro::bridge::client::Group"* align 4 dereferenceable(4)) unnamed_addr #1

; <proc_macro::bridge::client::Literal as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
declare i32 @"_ZN74_$LT$proc_macro..bridge..client..Literal$u20$as$u20$core..clone..Clone$GT$5clone17hbf992a04f63ee438E"(%"proc_macro::bridge::client::Literal"* align 4 dereferenceable(4)) unnamed_addr #1

; Function Attrs: nounwind nonlazybind uwtable
declare i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #16

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nounwind nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h2740986bd2451aa0E(i64, i64) unnamed_addr #17

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #16

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #16

; Function Attrs: nounwind nonlazybind uwtable
declare i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #16

; alloc::string::String::insert_bytes
; Function Attrs: nonlazybind uwtable
declare void @_ZN5alloc6string6String12insert_bytes17hf57fda4a43928e12E(%"alloc::string::String"* align 8 dereferenceable(24), i64, [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17ha72cd8fd7333b22dE() unnamed_addr #8

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h4fb653153270e40aE"([0 x i8]* nonnull align 1, i64, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <proc_macro::bridge::client::TokenStream as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
declare i32 @"_ZN78_$LT$proc_macro..bridge..client..TokenStream$u20$as$u20$core..clone..Clone$GT$5clone17h3ebb46c6a4556a55E"(%"proc_macro::bridge::client::TokenStream"* align 4 dereferenceable(4)) unnamed_addr #1

; core::fmt::Formatter::debug_tuple
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24), %"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugTuple::field
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::builders::DebugTuple::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nonlazybind uwtable
declare void @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h1298e3b9a969e420E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24), %"core::char::EscapeDebug"* align 8 dereferenceable(24)) unnamed_addr #1

; std::process::abort
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN3std7process5abort17h2f11b1d32ad057eaE() unnamed_addr #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #10

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #10

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #10

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i8, i1 } @llvm.usub.with.overflow.i8(i8, i8) #10

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i8, i1 } @llvm.uadd.with.overflow.i8(i8, i8) #10

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #10

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #10

; proc_macro::is_available
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN10proc_macro12is_available17h4e650af14b809f30E() unnamed_addr #1

; core::fmt::Formatter::write_fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #1

; core::fmt::Formatter::debug_list
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN4core3fmt9Formatter10debug_list17hea40b725812e3b83E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::builders::DebugList::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17hf48e4debbea8211aE(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16)) unnamed_addr #1

; <proc_macro::TokenStream as alloc::string::ToString>::to_string
; Function Attrs: nonlazybind uwtable
declare void @"_ZN67_$LT$proc_macro..TokenStream$u20$as$u20$alloc..string..ToString$GT$9to_string17h27788e1a21ffba95E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24), %"proc_macro::TokenStream"* align 4 dereferenceable(4)) unnamed_addr #1

; core::fmt::Formatter::debug_struct
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; <std::path::PathBuf as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN55_$LT$std..path..PathBuf$u20$as$u20$core..fmt..Debug$GT$3fmt17hcfa0fbe26a64b5d6E"(%"std::path::PathBuf"* align 8 dereferenceable(24), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::builders::DebugStruct::field
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16), [0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::builders::DebugStruct::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16)) unnamed_addr #1

; <core::fmt::Arguments as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN57_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Debug$GT$3fmt17h10772d8fa0341540E"(%"core::fmt::Arguments"* align 8 dereferenceable(48), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; alloc::fmt::format
; Function Attrs: nonlazybind uwtable
declare void @_ZN5alloc3fmt6format17hcd0bdb8070c69bf3E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #1

; proc_macro::TokenStream::is_empty
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN10proc_macro11TokenStream8is_empty17h1229e5f92743618eE(%"proc_macro::TokenStream"* align 4 dereferenceable(4)) unnamed_addr #1

; <proc_macro::TokenStream as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN62_$LT$proc_macro..TokenStream$u20$as$u20$core..fmt..Display$GT$3fmt17h00142ea792643486E"(%"proc_macro::TokenStream"* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; proc_macro::Punct::new
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro5Punct3new17hb8e8ba25a4f60587E(i32, i1 zeroext) unnamed_addr #1

; proc_macro::Punct::set_span
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro5Punct8set_span17h887e72ca090ea4b9E(%"proc_macro::Punct"* align 4 dereferenceable(4), i32) unnamed_addr #1

; <proc_macro::TokenStream as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN60_$LT$proc_macro..TokenStream$u20$as$u20$core..fmt..Debug$GT$3fmt17he8a3cc73666ac3b8E"(%"proc_macro::TokenStream"* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <proc_macro::LexError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN59_$LT$proc_macro..LexError$u20$as$u20$core..fmt..Display$GT$3fmt17h35dad958264b5065E"(%"proc_macro::LexError"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; proc_macro::token_stream::<impl core::iter::traits::collect::IntoIterator for proc_macro::TokenStream>::into_iter
; Function Attrs: nonlazybind uwtable
declare i32 @"_ZN10proc_macro12token_stream95_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$proc_macro..TokenStream$GT$9into_iter17h17e6056c22875a88E"(i32) unnamed_addr #1

; <proc_macro::token_stream::IntoIter as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
declare i64 @"_ZN93_$LT$proc_macro..token_stream..IntoIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4e33bccb4bdf9f32E"(%"proc_macro::token_stream::IntoIter"* align 4 dereferenceable(4)) unnamed_addr #1

; proc_macro::Punct::spacing
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN10proc_macro5Punct7spacing17h27f2e8c6d514e336E(%"proc_macro::Punct"* align 4 dereferenceable(4)) unnamed_addr #1

; proc_macro::Punct::as_char
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro5Punct7as_char17h7c7339ebc627c3cfE(%"proc_macro::Punct"* align 4 dereferenceable(4)) unnamed_addr #1

; proc_macro::Punct::span
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro5Punct4span17h6f604745e323d964E(%"proc_macro::Punct"* align 4 dereferenceable(4)) unnamed_addr #1

; proc_macro::Span::call_site
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro4Span9call_site17h8f35768e00c066b6E() unnamed_addr #1

; proc_macro::Span::mixed_site
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro4Span10mixed_site17h3b581ceeeee3f89eE() unnamed_addr #1

; proc_macro::Span::resolved_at
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro4Span11resolved_at17h888482c32505fc5aE(%"proc_macro::Span"* align 4 dereferenceable(4), i32) unnamed_addr #1

; proc_macro::Span::located_at
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro4Span10located_at17hd6875c223a1aa322E(%"proc_macro::Span"* align 4 dereferenceable(4), i32) unnamed_addr #1

; proc_macro::Span::join
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro4Span4join17h855778f307875718E(%"proc_macro::Span"* align 4 dereferenceable(4), i32) unnamed_addr #1

; <proc_macro::Span as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN53_$LT$proc_macro..Span$u20$as$u20$core..fmt..Debug$GT$3fmt17h4a2bef59b8a813bcE"(%"proc_macro::Span"* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; proc_macro::Group::new
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro5Group3new17h69b4b255a97ecb5eE(i8, i32) unnamed_addr #1

; proc_macro::Group::delimiter
; Function Attrs: nonlazybind uwtable
declare i8 @_ZN10proc_macro5Group9delimiter17h0da45f5dbbcb075dE(%"proc_macro::Group"* align 4 dereferenceable(4)) unnamed_addr #1

; proc_macro::Group::stream
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro5Group6stream17h60792dd3f4ce5d3aE(%"proc_macro::Group"* align 4 dereferenceable(4)) unnamed_addr #1

; proc_macro::Group::span
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro5Group4span17h7f3a63eda480fa3dE(%"proc_macro::Group"* align 4 dereferenceable(4)) unnamed_addr #1

; proc_macro::Group::span_open
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro5Group9span_open17he74e1e6f854caeefE(%"proc_macro::Group"* align 4 dereferenceable(4)) unnamed_addr #1

; proc_macro::Group::span_close
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro5Group10span_close17h3ecedfe62881b810E(%"proc_macro::Group"* align 4 dereferenceable(4)) unnamed_addr #1

; proc_macro::Group::set_span
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro5Group8set_span17hdc97a54424de7f5dE(%"proc_macro::Group"* align 4 dereferenceable(4), i32) unnamed_addr #1

; <proc_macro::Group as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN56_$LT$proc_macro..Group$u20$as$u20$core..fmt..Display$GT$3fmt17h9f5156d91bb38058E"(%"proc_macro::Group"* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <proc_macro::Group as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN54_$LT$proc_macro..Group$u20$as$u20$core..fmt..Debug$GT$3fmt17h6cdf725a56ef3f90E"(%"proc_macro::Group"* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; proc_macro::Ident::new
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro5Ident3new17h28fbe3a09d7325b9E([0 x i8]* nonnull align 1, i64, i32) unnamed_addr #1

; proc_macro::Ident::set_span
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro5Ident8set_span17h921b6e509e58a60fE(%"proc_macro::Ident"* align 4 dereferenceable(4), i32) unnamed_addr #1

; proc_macro::Ident::span
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro5Ident4span17h958da9c9c1543b13E(%"proc_macro::Ident"* align 4 dereferenceable(4)) unnamed_addr #1

; <proc_macro::Ident as alloc::string::ToString>::to_string
; Function Attrs: nonlazybind uwtable
declare void @"_ZN61_$LT$proc_macro..Ident$u20$as$u20$alloc..string..ToString$GT$9to_string17h65507f84774ff815E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24), %"proc_macro::Ident"* align 4 dereferenceable(4)) unnamed_addr #1

; <proc_macro::Ident as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN56_$LT$proc_macro..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h77a64d54ae4dcafeE"(%"proc_macro::Ident"* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <proc_macro::Ident as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN54_$LT$proc_macro..Ident$u20$as$u20$core..fmt..Debug$GT$3fmt17h3427d50d0e75cb29E"(%"proc_macro::Ident"* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; proc_macro::Literal::f32_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal14f32_unsuffixed17h9a4bcd1ac056d118E(float) unnamed_addr #1

; proc_macro::Literal::f64_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal14f64_unsuffixed17h77debfc282302848E(double) unnamed_addr #1

; proc_macro::Literal::string
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal6string17h2dc94e4ca9a7d96eE([0 x i8]* nonnull align 1, i64) unnamed_addr #1

; proc_macro::Literal::character
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal9character17h16634002c527754cE(i32) unnamed_addr #1

; proc_macro::Literal::byte_string
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal11byte_string17hdce440a70dc5ad25E([0 x i8]* nonnull align 1, i64) unnamed_addr #1

; proc_macro::Literal::span
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal4span17h3ecec0a3331494b4E(%"proc_macro::Literal"* align 4 dereferenceable(4)) unnamed_addr #1

; proc_macro::Literal::set_span
; Function Attrs: nonlazybind uwtable
declare void @_ZN10proc_macro7Literal8set_span17h1dda1719833b54d8E(%"proc_macro::Literal"* align 4 dereferenceable(4), i32) unnamed_addr #1

; <proc_macro::Literal as core::str::traits::FromStr>::from_str
; Function Attrs: nonlazybind uwtable
declare i32 @"_ZN66_$LT$proc_macro..Literal$u20$as$u20$core..str..traits..FromStr$GT$8from_str17hc6c2abaec9c0caaaE"([0 x i8]* nonnull align 1, i64) unnamed_addr #1

; <proc_macro::Literal as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN58_$LT$proc_macro..Literal$u20$as$u20$core..fmt..Display$GT$3fmt17h7b41f517aebbc16aE"(%"proc_macro::Literal"* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <proc_macro::Literal as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN56_$LT$proc_macro..Literal$u20$as$u20$core..fmt..Debug$GT$3fmt17h9d5b78878a56f494E"(%"proc_macro::Literal"* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <char as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h011d980131b3c87bE"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <char as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h791749a8d25a7b93E"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <alloc::string::String as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
declare void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17h4086b7622568c55eE"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24), %"alloc::string::String"* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17ha60d145af3203aeeE"(i8* align 1 dereferenceable(1), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for i8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$i8$GT$3fmt17hfa31404d86d00df8E"(i8* align 1 dereferenceable(1), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; proc_macro::Literal::u8_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal11u8_suffixed17h3e44ce24821d248cE(i8) unnamed_addr #1

; proc_macro::Literal::u16_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal12u16_suffixed17h3b8f235e5e09672bE(i16) unnamed_addr #1

; proc_macro::Literal::u32_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal12u32_suffixed17h3886949d111e057dE(i32) unnamed_addr #1

; proc_macro::Literal::u64_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal12u64_suffixed17h78d2118a98426025E(i64) unnamed_addr #1

; proc_macro::Literal::u128_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal13u128_suffixed17h257a475d22a1062eE(i128) unnamed_addr #1

; proc_macro::Literal::usize_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal14usize_suffixed17h37cb1d83232c712bE(i64) unnamed_addr #1

; proc_macro::Literal::i8_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal11i8_suffixed17hf97d5c99b52ae5f5E(i8) unnamed_addr #1

; proc_macro::Literal::i16_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal12i16_suffixed17h52d6fe036629a48aE(i16) unnamed_addr #1

; proc_macro::Literal::i32_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal12i32_suffixed17hf546e0ef6e878a5dE(i32) unnamed_addr #1

; proc_macro::Literal::i64_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal12i64_suffixed17h4f0f70c76a903c44E(i64) unnamed_addr #1

; proc_macro::Literal::i128_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal13i128_suffixed17h145ab8984066e370E(i128) unnamed_addr #1

; proc_macro::Literal::isize_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal14isize_suffixed17h5aab7dc1ce629100E(i64) unnamed_addr #1

; proc_macro::Literal::f32_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal12f32_suffixed17he0327d7cb70af9c6E(float) unnamed_addr #1

; proc_macro::Literal::f64_suffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal12f64_suffixed17hf761ae4a5c8e23efE(double) unnamed_addr #1

; proc_macro::Literal::u8_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal13u8_unsuffixed17hc9562e04f545cf0aE(i8) unnamed_addr #1

; proc_macro::Literal::u16_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal14u16_unsuffixed17h7de766b55b295d57E(i16) unnamed_addr #1

; proc_macro::Literal::u32_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal14u32_unsuffixed17h2b636be954110e60E(i32) unnamed_addr #1

; proc_macro::Literal::u64_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal14u64_unsuffixed17h5f5661e9d1e2eb50E(i64) unnamed_addr #1

; proc_macro::Literal::u128_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal15u128_unsuffixed17h3b2c0d872314b501E(i128) unnamed_addr #1

; proc_macro::Literal::usize_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal16usize_unsuffixed17ha222d7c188f006aaE(i64) unnamed_addr #1

; proc_macro::Literal::i8_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal13i8_unsuffixed17h8df51d7c9f7fcdf8E(i8) unnamed_addr #1

; proc_macro::Literal::i16_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal14i16_unsuffixed17h6d6b0a46a0895b40E(i16) unnamed_addr #1

; proc_macro::Literal::i32_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal14i32_unsuffixed17h4f6ca09140b7e3afE(i32) unnamed_addr #1

; proc_macro::Literal::i64_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal14i64_unsuffixed17h2e7fd3aa957a5227E(i64) unnamed_addr #1

; proc_macro::Literal::i128_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal15i128_unsuffixed17h295315385a9a7338E(i128) unnamed_addr #1

; proc_macro::Literal::isize_unsuffixed
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN10proc_macro7Literal16isize_unsuffixed17hccd066b2f87b4b1eE(i64) unnamed_addr #1

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #15

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { inlinehint noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #6 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #7 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #8 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #9 = { argmemonly nofree nounwind willreturn }
attributes #10 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #11 = { nofree nosync nounwind readnone willreturn }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { nonlazybind "target-cpu"="x86-64" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #16 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #17 = { cold noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #18 = { noinline }
attributes #19 = { noreturn }
attributes #20 = { nounwind }
attributes #21 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 7, !"PIC Level", i32 2}
!1 = !{i32 2, !"RtLibUseGOT", i32 1}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4core3mem6zeroed17h5290e3740f758bbaE: argument 0"}
!5 = distinct !{!5, !"_ZN4core3mem6zeroed17h5290e3740f758bbaE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h971f5af89337ec67E: argument 0"}
!8 = distinct !{!8, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h971f5af89337ec67E"}
!9 = !{!10}
!10 = distinct !{!10, !8, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h971f5af89337ec67E: %self"}
!11 = !{!7, !4}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h91835eba74cf3df2E: argument 0"}
!14 = distinct !{!14, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h91835eba74cf3df2E"}
!15 = !{!16}
!16 = distinct !{!16, !14, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h91835eba74cf3df2E: %slot"}
!17 = !{!13, !16}
!18 = !{i64 0, i64 2}
!19 = !{i32 0, i32 2}
!20 = !{}
!21 = !{i32 0, i32 1114114}
!22 = !{i32 0, i32 1114113}
!23 = !{i8 0, i8 5}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h14384709dfe9db03E: %slot.0"}
!26 = distinct !{!26, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h14384709dfe9db03E"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h4b354bcb661c530fE: %value.0"}
!29 = distinct !{!29, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h4b354bcb661c530fE"}
!30 = !{i8 -1, i8 2}
!31 = !{i32 0, i32 5}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h20f9c818dd386de0E: argument 0"}
!34 = distinct !{!34, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h20f9c818dd386de0E"}
!35 = !{i64 1, i64 0}
!36 = !{i32 0, i32 4}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h215f304d398c215cE: argument 0"}
!39 = distinct !{!39, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h215f304d398c215cE"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hfe92f06d2407cbd0E: argument 0"}
!42 = distinct !{!42, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hfe92f06d2407cbd0E"}
!43 = !{!44}
!44 = distinct !{!44, !42, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hfe92f06d2407cbd0E: %self"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h64254c59f7f65abcE: argument 0"}
!47 = distinct !{!47, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h64254c59f7f65abcE"}
!48 = !{!49}
!49 = distinct !{!49, !47, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h64254c59f7f65abcE: %slot"}
!50 = !{!46, !49}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h20f9c818dd386de0E: argument 0"}
!53 = distinct !{!53, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h20f9c818dd386de0E"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h971f5af89337ec67E: argument 0"}
!56 = distinct !{!56, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h971f5af89337ec67E"}
!57 = !{!58}
!58 = distinct !{!58, !56, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h971f5af89337ec67E: %self"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h91835eba74cf3df2E: argument 0"}
!61 = distinct !{!61, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h91835eba74cf3df2E"}
!62 = !{!63}
!63 = distinct !{!63, !61, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h91835eba74cf3df2E: %slot"}
!64 = !{!60, !63}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h4dfdb2998276933cE: argument 0"}
!67 = distinct !{!67, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h4dfdb2998276933cE"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h4b5c4ce107b5fb3dE: argument 0"}
!70 = distinct !{!70, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h4b5c4ce107b5fb3dE"}
!71 = !{!72}
!72 = distinct !{!72, !70, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h4b5c4ce107b5fb3dE: %self"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h085ab94825f31451E: argument 0"}
!75 = distinct !{!75, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h085ab94825f31451E"}
!76 = !{!77}
!77 = distinct !{!77, !75, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h085ab94825f31451E: %slot"}
!78 = !{!74, !77}
!79 = !{i64 0, i64 3}
!80 = !{i32 0, i32 1114112}
!81 = !{i32 3318753}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$5write17h54ac953682d2a90eE: %val"}
!84 = distinct !{!84, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$5write17h54ac953682d2a90eE"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$3new17h375566aaf01e2850E: argument 0"}
!87 = distinct !{!87, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$3new17h375566aaf01e2850E"}
!88 = !{!89}
!89 = distinct !{!89, !87, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$3new17h375566aaf01e2850E: %val"}
!90 = !{!86, !83}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h8e4e7cc0d0295b1bE: argument 0"}
!93 = distinct !{!93, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h8e4e7cc0d0295b1bE"}
!94 = !{!95}
!95 = distinct !{!95, !93, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h8e4e7cc0d0295b1bE: %value"}
!96 = !{!89, !83}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h4b354bcb661c530fE: %value.0"}
!99 = distinct !{!99, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h4b354bcb661c530fE"}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h17de86cb3ee01a4bE: %value.0"}
!102 = distinct !{!102, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h17de86cb3ee01a4bE"}
!103 = !{i32 0, i32 3}
!104 = !{i8 0, i8 3}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h26fe7851af5e0621E: argument 0"}
!107 = distinct !{!107, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h26fe7851af5e0621E"}
!108 = !{!109}
!109 = distinct !{!109, !107, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h26fe7851af5e0621E: %value"}
!110 = !{i8 0, i8 4}
!111 = !{i8 -1, i8 3}
