; ModuleID = 'rand.4eb9dea0-cgu.0'
source_filename = "rand.4eb9dea0-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:115:49: 115:58]" = type {}
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:111:48: 111:57]" = type {}
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65]" = type {}
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66].1" = type {}
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]" = type {}
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:138:47: 138:56]" = type {}
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:174:42: 174:51]" = type {}
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65].0" = type {}
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]" = type {}
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66]" = type {}
%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>" = type { { i32*, i32* }, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>", i64, i64, i64 }
%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>" = type { { i32*, i8* }, { i32, i32 } }
%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>" = type { { i32*, i32* }, { i32*, i32* }, i64, i64, i64 }
%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>" = type { { i64*, i64* }, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>", i64, i64, i64 }
%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>" = type { { i64*, i8* }, { i64, i64 } }
%"core::option::Option<u64>::Some" = type { [1 x i64], i64 }
%"core::option::Option<u32>::Some" = type { [1 x i32], i32 }
%"core::option::Option<core::iter::sources::repeat::Repeat<u32>>::Some" = type { [1 x i32], i32 }
%"core::option::Option<core::iter::sources::repeat::Repeat<u64>>::Some" = type { [1 x i64], i64 }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u32>::Continue" = type { [1 x i32], i32 }
%"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::alloc::AllocError" = type {}
%"core::result::Result<jitter::JitterRng, jitter::TimerError>" = type { i8, [2119 x i8] }
%"core::result::Result<jitter::JitterRng, jitter::TimerError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<alloc::rc::Rc<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>, std::thread::local::AccessError>::Err" = type { %"std::thread::local::AccessError" }
%"std::thread::local::AccessError" = type {}
%"[closure@std::panicking::begin_panic<&str>::{closure#0}]" = type { { [0 x i8]*, i64 }, %"core::panic::location::Location"* }
%"core::result::Result<std::fs::File, std::io::error::Error>" = type { i32, [5 x i32] }
%"std::fs::OpenOptions" = type { %"std::sys::unix::fs::OpenOptions" }
%"std::sys::unix::fs::OpenOptions" = type { i32, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }
%"std::path::Path" = type { %"std::ffi::os_str::OsStr" }
%"std::ffi::os_str::OsStr" = type { %"std::sys::unix::os_str::Slice" }
%"std::sys::unix::os_str::Slice" = type { [0 x i8] }
%"std::io::error::Error" = type { %"std::io::error::Repr" }
%"std::io::error::Repr" = type { i8, [15 x i8] }
%"core::result::Result<usize, std::io::error::Error>" = type { i64, [2 x i64] }
%"core::result::Result<(), std::io::error::Error>" = type { i8, [15 x i8] }
%"core::result::Result<usize, std::io::error::Error>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, std::io::error::Error>::Err" = type { [1 x i64], %"std::io::error::Error" }
%"core::result::Result<(), std::io::error::Error>::Err" = type { %"std::io::error::Error" }
%"std::io::readbuf::ReadBuf" = type { { [0 x i8]*, i64 }, i64, i64 }
%"std::io::error::Repr::Os" = type { [1 x i32], i32 }
%"core::option::Option<i32>::Some" = type { [1 x i32], i32 }
%"std::io::error::Repr::Simple" = type { [1 x i8], i8 }
%"std::io::error::Repr::SimpleMessage" = type { [1 x i8], i8, [6 x i8], { [0 x i8]*, i64 }* }
%"std::io::error::Repr::Custom" = type { [1 x i64], %"std::io::error::Custom"* }
%"std::io::error::Custom" = type { { {}*, [3 x i64]* }, i8, [7 x i8] }
%"std::sync::once::Once" = type { %"core::marker::PhantomData<*const std::sync::once::Waiter>", %"core::sync::atomic::AtomicUsize" }
%"core::marker::PhantomData<*const std::sync::once::Waiter>" = type {}
%"core::sync::atomic::AtomicUsize" = type { i64 }
%"core::option::Option<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/os.rs:157:27: 167:10]>::Some" = type { [1 x i8], %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/os.rs:157:27: 167:10]" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/os.rs:157:27: 167:10]" = type {}
%"alloc::string::String" = type { %"alloc::vec::Vec<u8>" }
%"alloc::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError" = type { %"alloc::string::String" }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"distributions::gamma::ChiSquared" = type { %"distributions::gamma::ChiSquaredRepr" }
%"distributions::gamma::ChiSquaredRepr" = type { i64, [4 x i64] }
%"distributions::gamma::GammaLargeShape" = type { double, double, double }
%ThreadRngReseeder = type {}
%"distributions::gamma::Gamma" = type { %"distributions::gamma::GammaRepr" }
%"distributions::gamma::GammaRepr" = type { i64, [4 x i64] }
%"prng::isaac64::Isaac64Rng" = type { i64, [256 x i64], [256 x i64], i64, i64, i64 }
%StdRng = type { %"prng::isaac64::Isaac64Rng" }
%"distributions::gamma::GammaSmallShape" = type { double, %"distributions::gamma::GammaLargeShape" }
%"core::fmt::builders::DebugList" = type { %"core::fmt::builders::DebugInner" }
%"core::fmt::builders::DebugInner" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"core::fmt::Opaque" = type {}
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>" = type { i64, i64, %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>" }
%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>" = type { i64, %"core::cell::UnsafeCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>" }
%"core::cell::UnsafeCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>" = type { %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>" }
%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>" = type { %ThreadRngReseeder, %StdRng, i64, i64 }
%"core::option::Option<usize>::Some" = type { [1 x i64], i64 }
%"<core::cell::RefCell<T> as core::fmt::Debug>::fmt::BorrowedPlaceholder" = type {}
%"core::cell::BorrowMutError" = type {}
%"alloc::alloc::Global" = type {}
%"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>" = type { [0 x i8] }
%"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[core::num::wrapping::Wrapping<u32>]>" = type { [2 x i64] }
%"core::sync::atomic::AtomicBool" = type { i8 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue" = type { [1 x i64], i64 }
%"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::result::Result<usize, core::alloc::layout::LayoutError>::Err" = type { [8 x i8], %"core::alloc::layout::LayoutError" }
%"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<&alloc::rc::Rc<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>, std::thread::local::AccessError>::Err" = type { %"std::thread::local::AccessError" }
%"core::result::Result<os::OsRng, std::io::error::Error>" = type { i32, [5 x i32] }
%"core::result::Result<os::imp::OsRng, std::io::error::Error>" = type { i32, [5 x i32] }
%"core::result::Result<os::imp::OsRng, std::io::error::Error>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<os::imp::OsRng, std::io::error::Error>::Err" = type { [1 x i64], %"std::io::error::Error" }
%"core::result::Result<os::OsRng, std::io::error::Error>::Err" = type { [1 x i64], %"std::io::error::Error" }
%"core::result::Result<os::OsRng, std::io::error::Error>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<core::time::Duration, std::time::SystemTimeError>" = type { i64, [2 x i64] }
%"core::result::Result<core::time::Duration, std::time::SystemTimeError>::Ok" = type { [1 x i64], { i64, i32 } }
%"core::result::Result<core::time::Duration, std::time::SystemTimeError>::Err" = type { [1 x i64], { i64, i32 } }
%"core::result::Result<(), alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { {}*, [2 x i64] }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::fmt::builders::DebugStruct" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err" = type { %"std::thread::local::AccessError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &alloc::rc::Rc<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>>::Break" = type { %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err" }
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break" = type { %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>" = type { i8, [7 x i8] }
%"core::result::Result<u32, jitter::TimerError>" = type { i8, [7 x i8] }
%"core::result::Result<u32, jitter::TimerError>::Ok" = type { [1 x i32], i32 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Continue" = type { [1 x i32], i32 }
%"core::result::Result<u32, jitter::TimerError>::Err" = type { [1 x i8], i8 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Break" = type { [1 x i8], i8 }
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break" = type { [8 x i8], %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/xorshift.rs:80:34: 80:45]" = type {}
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/xorshift.rs:69:34: 69:45]" = type {}
%"distributions::gamma::GammaRepr::One" = type { [1 x i64], double }
%"distributions::gamma::GammaRepr::Small" = type { [1 x i64], %"distributions::gamma::GammaSmallShape" }
%"distributions::gamma::GammaRepr::Large" = type { [1 x i64], %"distributions::gamma::GammaLargeShape" }
%"distributions::gamma::ChiSquaredRepr::DoFAnythingElse" = type { %"distributions::gamma::Gamma" }
%"distributions::gamma::FisherF" = type { %"distributions::gamma::ChiSquared", %"distributions::gamma::ChiSquared", double }
%"distributions::gamma::StudentT" = type { %"distributions::gamma::ChiSquared", double }
%"jitter::JitterRng" = type { i64, i64 ()*, i64, i64, i64, i64, i32, { i32, i32 }, [2048 x i8], [4 x i8] }
%"core::result::Result<jitter::JitterRng, jitter::TimerError>::Ok" = type { [1 x i64], %"jitter::JitterRng" }
%"core::result::Result<std::fs::File, std::io::error::Error>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<std::fs::File, std::io::error::Error>::Err" = type { [1 x i64], %"std::io::error::Error" }
%"prng::chacha::ChaChaRng" = type { i64, [16 x i32], [16 x i32] }
%"prng::isaac::IsaacRng" = type { i32, [256 x i32], [256 x i32], i32, i32, i32 }
%"prng::xorshift::XorShiftRng" = type { i32, i32, i32, i32 }
%"core::result::Result<StdRng, std::io::error::Error>" = type { i64, [516 x i64] }
%"core::result::Result<StdRng, std::io::error::Error>::Err" = type { [1 x i64], %"std::io::error::Error" }
%"core::result::Result<StdRng, std::io::error::Error>::Ok" = type { [1 x i64], %StdRng }
%"distributions::range::Range<f32>" = type { float, float, float }
%"distributions::range::Range<f64>" = type { double, double, double }
%"core::fmt::builders::DebugTuple" = type { %"core::fmt::Formatter"*, i64, i8, i8, [6 x i8] }
%"reseeding::ReseedWithDefault" = type {}
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@alloc796 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"#" }>, align 1
@alloc1106 = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/std/src/io/mod.rs" }>, align 1
@alloc1107 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [73 x i8] }>, <{ [73 x i8] }>* @alloc1106, i32 0, i32 0, i32 0), [16 x i8] c"I\00\00\00\00\00\00\00\C9\01\00\00\1C\00\00\00" }>, align 8
@alloc777 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"failed to fill whole buffer" }>, align 1
@alloc778 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [27 x i8] }>, <{ [27 x i8] }>* @alloc777, i32 0, i32 0, i32 0), [8 x i8] c"\1B\00\00\00\00\00\00\00" }>, align 8
@alloc1108 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"failed to fill buffer" }>, align 1
@alloc1109 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/std/src/io/readbuf.rs" }>, align 1
@alloc1110 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc1109, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00G\00\00\006\00\00\00" }>, align 8
@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, [0 x i8] }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr156drop_in_place$LT$std..sync..once..Once..call_once$LT$rand..os..imp..is_getrandom_available..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hb0e56e8fb8995f39E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (void (i8**, { i64, i8 }*)* @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h579554b603f20520E" to i8*), i8* bitcast (void (i8**, { i64, i8 }*)* @"_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h40f9cc8155445544E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1115 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/std/src/sync/once.rs" }>, align 1
@alloc1116 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1115, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\06\01\00\002\00\00\00" }>, align 8
@alloc1121 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"*)* @"_ZN4core3ptr226drop_in_place$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$..from..StringError$GT$17h226016f358ba055dE" to i8*), [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"*, %"core::fmt::Formatter"*)* @"_ZN244_$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17hb5d8af6bd0a453ceE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"*)* @"_ZN4core3ptr226drop_in_place$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$..from..StringError$GT$17h226016f358ba055dE" to i8*), [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"*, %"core::fmt::Formatter"*)* @"_ZN242_$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Debug$GT$3fmt17h29a54fd3ab5fd913E" to i8*), i8* bitcast (i1 (%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"*, %"core::fmt::Formatter"*)* @"_ZN244_$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17hb5d8af6bd0a453ceE" to i8*), i8* bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @alloc1121 to i8*), i8* bitcast ({ i8*, i8* } (%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"*)* @_ZN3std5error5Error6source17h233b16b0f98709eaE to i8*), i8* bitcast (i64 (%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"*)* @_ZN3std5error5Error7type_id17h2636c351fde84807E to i8*), i8* bitcast (i64* (%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"*)* @_ZN3std5error5Error9backtrace17h7350d31df4f13af5E to i8*), i8* bitcast ({ [0 x i8]*, i64 } (%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"*)* @"_ZN243_$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$..from..StringError$u20$as$u20$std..error..Error$GT$11description17h07ab6b39188cf65eE" to i8*), i8* bitcast ({ i8*, i8* } (%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"*)* @_ZN3std5error5Error5cause17hacf870909057fb2dE to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1128 = private unnamed_addr constant <{ [70 x i8] }> <{ [70 x i8] c"cannot access a Thread Local Storage value during or after destruction" }>, align 1
@alloc1131 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/std/src/thread/local.rs" }>, align 1
@alloc1130 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1131, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\84\01\00\00\1A\00\00\00" }>, align 8
@alloc1132 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1131, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\9B\01\00\00 \00\00\00" }>, align 8
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, [0 x i8] }> <{ i8* bitcast (void ({ i8*, i64 }*)* @"_ZN4core3ptr77drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$$RF$str$GT$$GT$17h4e7605da7da25334E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast ({ {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h6a1c9b962f42a283E" to i8*), i8* bitcast ({ {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h4ebac7f6baae0f7fE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i32**)* @"_ZN4core3ptr65drop_in_place$LT$$RF$core..num..wrapping..Wrapping$LT$u32$GT$$GT$17ha0ac89b907160a6bE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i32**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc29129110a091f7dE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1140 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc1141 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/fmt/mod.rs" }>, align 1
@alloc1142 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1141, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00k\01\00\00\0D\00\00\00" }>, align 8
@alloc1145 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/num/mod.rs" }>, align 1
@alloc1144 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1145, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\D9\00\00\00\05\00\00\00" }>, align 8
@str.4 = internal constant [31 x i8] c"attempt to negate with overflow"
@alloc1146 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1145, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00>\03\00\00\05\00\00\00" }>, align 8
@str.5 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc1147 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/ptr/mod.rs" }>, align 1
@alloc1148 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1147, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\BE\02\00\00\0D\00\00\00" }>, align 8
@alloc1149 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"already borrowed" }>, align 1
@alloc1156 = private unnamed_addr constant <{ [49 x i8] }> <{ [49 x i8] c"there is no such thing as an acquire/release load" }>, align 1
@alloc1162 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/sync/atomic.rs" }>, align 1
@alloc1152 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1162, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00?\09\00\00\17\00\00\00" }>, align 8
@alloc1157 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"there is no such thing as a release load" }>, align 1
@alloc1155 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1162, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00>\09\00\00\18\00\00\00" }>, align 8
@alloc1164 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"there is no such thing as an acquire/release store" }>, align 1
@alloc1160 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1162, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\001\09\00\00\17\00\00\00" }>, align 8
@alloc1165 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"there is no such thing as an acquire store" }>, align 1
@alloc1163 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1162, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\000\09\00\00\18\00\00\00" }>, align 8
@alloc1166 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/alloc/layout.rs" }>, align 1
@alloc1167 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc1166, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\98\01\00\00\1A\00\00\00" }>, align 8
@alloc1168 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/array/mod.rs" }>, align 1
@alloc1169 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc1168, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00\00\01\00\00\1B\00\00\00" }>, align 8
@alloc1170 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@alloc1171 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/slice/mod.rs" }>, align 1
@alloc1172 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc1171, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00\FF\05\00\00\09\00\00\00" }>, align 8
@alloc1173 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@vtable.6 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"core::cell::BorrowMutError"*)* @"_ZN4core3ptr47drop_in_place$LT$core..cell..BorrowMutError$GT$17h061eed3ecc477953E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::cell::BorrowMutError"*, %"core::fmt::Formatter"*)* @"_ZN63_$LT$core..cell..BorrowMutError$u20$as$u20$core..fmt..Debug$GT$3fmt17h177290280eb54e06E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.7 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::thread::local::AccessError"*)* @"_ZN4core3ptr52drop_in_place$LT$std..thread..local..AccessError$GT$17hd6b29150b4622252E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::thread::local::AccessError"*, %"core::fmt::Formatter"*)* @"_ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17haa218a8af6b40cc9E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1184 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.8 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64, i32 }*)* @"_ZN4core3ptr47drop_in_place$LT$std..time..SystemTimeError$GT$17h9ceadd68c1b979b8E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64, i32 }*, %"core::fmt::Formatter"*)* @"_ZN63_$LT$std..time..SystemTimeError$u20$as$u20$core..fmt..Debug$GT$3fmt17h3b3d11e142a1fb4cE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.9 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::io::error::Error"*)* @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::io::error::Error"*, %"core::fmt::Formatter"*)* @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h7ced4ac19d2a5261E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc909 = private unnamed_addr constant <{ [0 x i8] }> zeroinitializer, align 8
@alloc1188 = private unnamed_addr constant <{ [74 x i8] }> <{ [74 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/alloc/src/alloc.rs" }>, align 1
@alloc1189 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc1188, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\AA\00\00\00\1B\00\00\00" }>, align 8
@alloc1190 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/alloc/src/raw_vec.rs" }>, align 1
@alloc1191 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1190, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00m\01\00\00\09\00\00\00" }>, align 8
@str.a = internal constant [25 x i8] c"attempt to divide by zero"
@alloc1197 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"RefCell" }>, align 1
@alloc1198 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"value" }>, align 1
@vtable.b = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"<core::cell::RefCell<T> as core::fmt::Debug>::fmt::BorrowedPlaceholder"*)* @"_ZN4core3ptr111drop_in_place$LT$$LT$core..cell..RefCell$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$..fmt..BorrowedPlaceholder$GT$17h26c807ce39865c75E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"<core::cell::RefCell<T> as core::fmt::Debug>::fmt::BorrowedPlaceholder"*, %"core::fmt::Formatter"*)* @"_ZN127_$LT$$LT$core..cell..RefCell$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$..fmt..BorrowedPlaceholder$u20$as$u20$core..fmt..Debug$GT$3fmt17h96fd1f71a812ece1E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.c = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64*, i64* }*)* @"_ZN4core3ptr119drop_in_place$LT$core..cell..Ref$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$17h196ab9f6961dbb4dE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i64* }*, %"core::fmt::Formatter"*)* @"_ZN61_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h298401b814982640E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.d = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ [0 x i8]*, i64 }*)* @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17ha9cb31a3bb53a9d7E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i64 ({ [0 x i8]*, i64 }*)* @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17hb115dffdb29605deE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1205 = private unnamed_addr constant <{ [33 x i8] }> <{ [33 x i8] c"Gamma::new called with shape <= 0" }>, align 1
@alloc1221 = private unnamed_addr constant <{ [94 x i8] }> <{ [94 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/distributions/gamma.rs" }>, align 1
@alloc1207 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc1221, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00f\00\00\00\09\00\00\00" }>, align 8
@alloc1208 = private unnamed_addr constant <{ [33 x i8] }> <{ [33 x i8] c"Gamma::new called with scale <= 0" }>, align 1
@alloc1210 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc1221, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00g\00\00\00\09\00\00\00" }>, align 8
@alloc1211 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"ChiSquared::new called with `k` < 0" }>, align 1
@alloc1213 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc1221, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\DD\00\00\00\0D\00\00\00" }>, align 8
@alloc1214 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"FisherF::new called with `m < 0`" }>, align 1
@alloc1216 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc1221, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\0F\01\00\00\09\00\00\00" }>, align 8
@alloc1217 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"FisherF::new called with `n < 0`" }>, align 1
@alloc1219 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc1221, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\10\01\00\00\09\00\00\00" }>, align 8
@alloc1220 = private unnamed_addr constant <{ [34 x i8] }> <{ [34 x i8] c"StudentT::new called with `n <= 0`" }>, align 1
@alloc1222 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc1221, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\008\01\00\00\09\00\00\00" }>, align 8
@alloc1223 = private unnamed_addr constant <{ [34 x i8] }> <{ [34 x i8] c"Exp::new called with `lambda` <= 0" }>, align 1
@alloc1224 = private unnamed_addr constant <{ [100 x i8] }> <{ [100 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/distributions/exponential.rs" }>, align 1
@alloc1225 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [100 x i8] }>, <{ [100 x i8] }>* @alloc1224, i32 0, i32 0, i32 0), [16 x i8] c"d\00\00\00\00\00\00\00U\00\00\00\09\00\00\00" }>, align 8
@_ZN4rand13distributions15ziggurat_tables10ZIG_NORM_X17h8ae99360e39d4caaE = constant <{ [2056 x i8] }> <{ [2056 x i8] c"\98D\16x;I\0F@3\AD\09\82\B4;\0D@\95\F9x8\1F\98\0B@\8Cq\94x\DC\8F\0A@\DFP@\01\EE\CB\09@\1A=o\94\E0.\09@\12t\AA\BF\0F\AB\08@\C6\E9)\05\039\08@\C3\C5\D6\F4-\D4\07@[\FD\08V\95y\07@\D7p_\F0('\07@\96\D8\09\8Dk\DB\06@\ED\DB\9F\BE@\95\06@\DF`\00{\CES\06@\0F\14\86\CFi\16\06@\93\C6:$\8A\DC\05@B\83q\8B\C0\A5\05@Z\D9J\A9\B1q\05@Ys:R\11@\05@1\A1\E9S\9F\10\05@\CC}\CD\0D%\E3\04@\CCNk\9Ds\B7\04@=8\9Cub\8D\04@t.\A7D\CEd\04@\D1RT\15\98=\04@\F6\D9\B9\9C\A4\17\04@q\E8`\AA\DB\F2\03@\83\F8\16\B3'\CF\03@\B8|\AEpu\AC\03@\A94V\92\B3\8A\03@\C1\9B3z\D2i\03@\06\06\AE\05\C4I\03@\E9\97h^{*\03@\17\A2V\D2\EC\0B\03@\02l\A9\B1\0D\EE\02@\88\CE\961\D4\D0\02@'\FD)S7\B4\02@1\01w\CD.\98\02@\CBK\A8\FA\B2|\02@bKv\C7\BCa\02@\8B\8E\AC\A4EG\02@;\C6ozG-\02@\B3\BE\04\9D\BC\13\02@\18\CB\E2\C2\9F\FA\01@6\A0\E4\FB\EB\E1\01@w\98q\A9\9C\C9\01@W!\7Fw\AD\B1\01@Z\DDNV\1A\9A\01@\F5\03\D2t\DF\82\01@n\E0\9D;\F9k\01@\9D\1F`HdU\01@\B5\FA\C3i\1D?\01@dN\BB\9B!)\01@Va \04n\13\01@\B2\90\A6\EF\FF\FD\00@uV\11\CF\D4\E8\00@\F9-\AA4\EA\D3\00@\F7\C4\EE\D1=\BF\00@Z\B1qu\CD\AA\00@\D0\92\E8\08\97\96\00@y\1Ec\8F\98\82\00@\B0\16\A7#\D0n\00@\AC\A3\AD\F6;[\00@\DB\E5>N\DAG\00@\A6\F2\A8\83\A94\00@)\B9\8F\02\A8!\00@=\90\D3G\D4\0E\00@g\D5\18\C1Y\F8\FF?\AE\C6/\D2`\D3\FF?\B4\01q\18\BB\AE\FF?Dv\89\04f\8A\FF?\F6\DF\C8 _f\FF?\C7+\B7\0F\A4B\FF?F1\C2\8A2\1F\FF?\9B\CA\01a\08\FC\FE?\F7\84\10v#\D9\FE?\90L\F7\C0\81\B6\FE?\\\9C*K!\94\FE?A\DB\97/\00r\FE?o\AE\C1\99\1CP\FE?\A7#\EA\C4t.\FE?\98\AEI\FB\06\0D\FE?~\0AR\95\D1\EB\FD? %\FC\F8\D2\CA\FD?MJ \99\09\AA\FD?M\D7\D7\F4s\89\FD?\94\CC\E7\96\10i\FD?\81\A13\15\DEH\FD?#\CA7\10\DB(\FD?9j\8B2\06\09\FD?\CA\BAh0^\E9\FC?\EA\B0;\C7\E1\C9\FC?\CD|6\BD\8F\AA\FC?\00\80\EB\E0f\8B\FC?\B5`\EC\08fl\FC?\93\E6m\13\8CM\FC?iS\F0\E5\D7.\FC?\A2\EF\EBlH\10\FC?J\87\81\9B\DC\F1\FB?.\99.k\93\D3\FB?\BE\FD\84\DBk\B5\FB?Q\CF\E5\F1d\97\FB?\01a?\B9}y\FB?\A1\14\CEA\B5[\FB?a\E3\DF\A0\0A>\FB?~o\9A\F0| \FB?\00x\C3O\0B\03\FB?\DE\89\8B\E1\B4\E5\FA?6\CCZ\CDx\C8\FA?1\C7\9F>V\AB\FA?&\07\A0dL\8E\FA?M\7FJrZq\FA?\EF\90\0B\9E\7FT\FA?\81\9D\A2!\BB7\FA?u\0B\F99\0C\1B\FA?\EA\A6\FA&r\FE\F9?mHo+\EC\E1\F9?C\AD\D5\8Cy\C5\F9?\92m?\93\19\A9\F9?\BF\FD-\89\CB\8C\F9?6\A9p\BB\8Ep\F9?\8Cu\03ybT\F9?\B8\DD\EE\12F8\F9?\BCU(\DC8\1C\F9?\BC\87s):\00\F9?\0A<DQI\E4\F8?5\DE\A0\ABe\C8\F8?\92\91\05\92\8E\AC\F8?1\C8G_\C3\90\F8?~Ozo\03u\F8?(\C6\D1\1FNY\F8?2o\89\CE\A2=\F8?EV\C8\DA\00\22\F8?\9E\B9\86\A4g\06\F8?\15\AEs\8C\D6\EA\F7?\D9\F1\DA\F3L\CF\F7?\94\E2\8A<\CA\B3\F7?\CB\8B\BA\C8M\98\F7?-\C2\EF\FA\D6|\F7?\AD@\E55ea\F7?\13\BCp\DC\F7E\F7?\A6\E1hQ\8E*\F7?s5\8B\F7'\0F\F7?\83\C4a1\C4\F3\F6?(\9F(ab\D8\F6?6\0F\B3\E8\01\BD\F6?\CF}P)\A2\A1\F6?\F7\FB\B0\83B\86\F6?\D3`\C9W\E2j\F6?\0C\F0\B6\04\81O\F6?Az\A2\E8\1D4\F6?\FF\E8\A2`\B8\18\F6?\0F'\9F\C8O\FD\F5?EU/{\E3\E1\F5?H;}\D1r\C6\F5?\FB\E2##\FD\AA\F5?LL\0E\C6\81\8F\F5?D&U\0E\00t\F5?%y\1BNwX\F5?=,j\D5\E6<\F5?\D8P\0A\F2M!\F5?m\1A^\EF\AB\05\F5?\9Cj8\16\00\EA\F4?\FD\D5\B2\ACI\CE\F4?\06\05\02\F6\87\B2\F4?^RH2\BA\96\F4?\EA\85f\9E\DFz\F4?\93\89\CAs\F7^\F4?Z\F2;\E8\00C\F4?\915\A6-\FB&\F4?$_\E0q\E5\0A\F4?\AC\1Ar\DE\BE\EE\F3?\80\DDU\98\86\D2\F3?\17\FC\B7\BF;\B6\F3?\E9p\B2o\DD\99\F3?]\16\05\BEj}\F3?4\10\CA\BA\E2`\F3?j\1B&pDD\F3?_u\F4\E1\8E'\F3?i\04n\0D\C1\0A\F3?\7Fd\CB\E8\D9\ED\F2?\A1r\E1b\D8\D0\F2?\80\E8\B7b\BB\B3\F2?\17\90\19\C7\81\96\F2?\CD\8B\1Df*y\F2?\99#\A9\0C\B4[\F2?\07z\E9}\1D>\F2?\17}\C4re \F2?\10V@\99\8A\02\F2?\DC\88\E0\93\8B\E4\F1?\B3\DE\F7\F8f\C6\F1?\A3 \EEQ\1B\A8\F1?~\8Cx\1A\A7\89\F1?\91\D1\C3\BF\08k\F1?\D8A\8E\9F>L\F1?t\BF0\07G-\F1?\BD\C4\942 \0E\F1?M\B6\15K\C8\EE\F0?myKf=\CF\F0?\06\0D\BC\84}\AF\F0?\FD\9Eq\90\86\8F\F0?\F9Ir[Vo\F0?\D4N\16\9E\EAN\F0?Y79\F5@.\F0?\89\DBA\E0V\0D\F0?\91y\F9}S\D8\EF?+ \87\9Em\95\EF?\88<\D8T\F6Q\EF?\95\A5\EF\84\E7\0D\EF?\95\C3\F8\BD:\C9\EE?\08\ADy3\E9\83\EE?-)\D2\B5\EB=\EE?\8D\AE\F0\A9:\F7\ED?\EE\ED\22\00\CE\AF\ED?\0DQ\E3)\9Dg\ED?\F7\E5\7F\0E\9F\1E\ED?\CAQq\FE\C9\D4\EC?\0Bc1\A5\13\8A\EC?\E0rX\F9p>\EC?;\A2\BE*\D6\F1\EB?0\BBQ\8E6\A4\EB?\DA\91A\87\84U\EB?\D5\7F\12m\B1\05\EB?\BA$\0Fn\AD\B4\EA?\F5\D6vmgb\EA?\98\AB\A3\DC\CC\0E\EA?;\C47\8E\C9\B9\E9?\18\18+\82Gc\E9?\A8\C2M\A9.\0B\E9?,cz\9Ed\B1\E8?#\F0AS\CCU\E8?\97\D3E\ADE\F8\E7?\F0\00\B2\10\AD\98\E7?\B6\C6E\D3\DA6\E7?s\CA\FE\91\A2\D2\E6?~7\A2a\D2k\E6?\9B/\D8\CF1\02\E6?\C9s\06\A7\80\95\E5?\1Cl\19bu%\E5?\8D\89<6\BB\B1\E4?\0A\17\FE\8D\EF9\E4?\06\1C\A1\C1\9E\BD\E3?\ED\E9U\C0?<\E3?0\1Bb8.\B5\E2?jEx\8F\A2'\E2?\0AE?\97\A6\92\E1?NK\00;\05\F5\E0?.\83\8C'2M\E0?\A6\07H-H2\DF? 1oZ/\AC\DD?\93\8D2/M\00\DC?\9E8F.\0C#\DA?\C5\FA'\E8\FC\01\D8?P\E5:8\B9|\D5?i\0A <\AFP\D2?\18\99\D6\E3\0B\8D\CB?\00\00\00\00\00\00\00\00" }>, align 8
@_ZN4rand13distributions15ziggurat_tables10ZIG_NORM_F17h1ed82281bdebdd1cE = constant <{ [2056 x i8] }> <{ [2056 x i8] c"!\1E\0Do\94J??\0F\F7\B9\B6\05\A6T?D\D6\C1C\9F_e?\D7\D9\B0\03\1F\8Ap?X\F6\0C\D9\A8\9Ev?G\BD\EC\F8`\E1|?\0Bf\95)\92\A5\81?\9F\12\1BB\96\EB\84?\CA\F3\8D\0D\04A\88?\DC\EBO'\8D\A4\8B?\96FsO*\15\8F?gk`4\03I\91?2\A0\AB\8D8\0D\93?f\F9\FB\F2\EA\D6\94?\87\0F\0C\F4\DA\A5\96?#\18\01\B6\D1y\98?BJ#N\9FR\9A?\A9n\CD\83\190\9C?d\F9\82\DB\1A\12\9E?,\1A\19\D7\81\F8\9F?\0F\BE\96.\98\F1\A0?\92\AC\1F\9F\05\E9\A1?O:>\E8|\E2\A2?i8\99\CE\F2\DD\A3?\F2t\11\0E]\DB\A4?i\FF\F2<\B2\DA\A5?\00&\99\B3\E9\DB\A6?\C9\80\AFw\FB\DE\A7?u\13i*\E0\E3\A8?X\B7)\F9\90\EA\A9?\97\C58\90\07\F3\AA?\91\94(\0F>\FD\AB?\0A`\AE\FE.\09\AD?|\C4\B2G\D5\16\AE?\83\E5l+,&\AF?o\221\9E\97\1B\B0?1\D6\15,\ED\A4\B0?\E6Y\F2\D0\14/\B1?\08\CE\97\BE\0C\BA\B1?`T\DDD\D3E\B2?(z\9B\CFf\D2\B2?\D0\89\D9\E4\C5_\B3?<\E8&#\EF\ED\B3?#r\1B@\E1|\B4?\17~\FA\06\9B\0C\B5?k\BBtW\1B\9D\B5?E\A4\85$a.\B6?\E7\A3isk\C0\B6?\7Fm\AAZ9S\B7?MN?\01\CA\E6\B7?>\89\BF\9D\1C{\B8?\13\04\A5u0\10\B9?\FE\C0\9D\DC\04\A6\B9?\F5\CA\EA3\99<\BA?(a\CB\E9\EC\D3\BA?\B7O\F3x\FFk\BB?,\80\0Bh\D0\04\BC?\BD\E6;I_\9E\BC?1\07\BE\B9\AB8\BD?\82`wa\B5\D3\BD?\EA\1F\9B\F2{o\BE?g\8BR)\FF\0B\BF?2\A2k\CB>\A9\BF?\88\BE\06T\9D#\C0?=\02\B9K\F9r\C0?\D1MR=\B3\C2\C0?4\B4\A2\1D\CB\12\C1?Ct\A8\E5@c\C1?\8A\C5u\92\14\B4\C1?\E5\85\18%F\05\C2?\D2\A9\83\A2\D5V\C2?\A6Sz\13\C3\A8\C2?cx|\84\0E\FB\C2?\FA\FA\B4\05\B8M\C3?\D4(\E9\AA\BF\A0\C3?\10\84i\8B%\F4\C3?\B4\C9\03\C2\E9G\C4?\8E#\F6l\0C\9C\C4?\A4v\E3\AD\8D\F0\C4?\9D\C0\C8\A9mE\C5?\\w\F3\88\AC\9A\C5?o\DF\F8vJ\F0\C5?\9CN\AE\A2GF\C6?\E8P\22>\A4\9C\C6?/\A7\96~`\F3\C6?Q\17{\9C|J\C7?e\06i\D3\F8\A1\C7?P\D6\1Fb\D5\F9\C7?\B0\00\82\8A\12R\C8?s\E9\92\91\B0\AA\C8?%du\BF\AF\03\C9?\88\E7j_\10]\C9?ck\D3\BF\D2\B6\C9?\F1\EC-2\F7\10\CA?\DF\96\19\0B~k\CA?\1B\8AW\A2g\C6\CA?\05E\CDR\B4!\CB?+\A7\87zd}\CB?\DE\8F\BEzx\D9\CB?A\16\D9\B7\F05\CC?\10Zr\99\CD\92\CC?K\EC^\8A\0F\F0\CC?\92\CF\B2\F8\B6M\CD?\15\10\C8U\C4\AB\CD?_\F3E\168\0A\CE?\89\C0(\B2\12i\CE?\C2!\CA\A4T\C8\CE?* \EAl\FE'\CF?k\BB\B8\8C\10\88\CF?\D8\1E\E0\89\8B\E8\CF?\F9\BA\C7\F6\B7$\D0?I1C\22_U\D0?\9B\8B\90\8F;\86\D0?6\8C\B2\88M\B7\D0?\1AT\87Y\95\E8\D0?uo\CFO\13\1A\D1?\B8:5\BB\C7K\D1?9\A2T\ED\B2}\D1?\A1>\C39\D5\AF\D1?k\D0\18\F6.\E2\D1?\F7\1C\F8y\C0\14\D2?\E8/\18\1F\8AG\D2?\85\03NA\8Cz\D2?N\93\96>\C7\AD\D2?\E5[!w;\E1\D2?\BEK[M\E9\14\D3??(\FA%\D1H\D3?,k\08h\F3|\D3?w\9C\F1|P\B1\D3?\BB,\8F\D0\E8\E5\D3?\15\D55\D1\BC\1A\D4?\17\81\C3\EF\CCO\D4?\0D\C8\AD\9F\19\85\D4?\FE\FA\10W\A3\BA\D4?\13\CD\BF\8Ej\F0\D4?\94\9CS\C2o&\D5?\D1b=p\B3\\\D5?\BCQ\D7\196\93\D5?q&wC\F8\C9\D5?(8\81t\FA\00\D6?\ABK|7=8\D6?\AF3&\1A\C1o\D6?'G\89\AD\86\A7\D6?\EC\B6\12\86\8E\DF\D6?\CD\CC\A9;\D9\17\D7?\AF\1E\C8igP\D7?\F3\C0\92\AF9\89\D7?\00\84\F4\AFP\C2\D7?\ADI\B9\11\AD\FB\D7?\C5\7F\AA\7FO5\D8?\F4\CD\AC\A88o\D8?\1C\06\DF?i\A9\D8?\03g\BA\FC\E1\E3\D8?`B4\9B\A3\1E\D9?;\18\E1\DB\AEY\D9?\D3:\19\84\04\95\D9?S\0F\1F^\A5\D0\D9?\1E\01G9\92\0C\DA?\9E>!\EA\CBH\DA?DX\A5JS\85\DA?\D7\DB_:)\C2\DA?\06\08\A2\9EN\FF\DA?\FC\B5\B3b\C4<\DB?\D0\98\07x\8Bz\DB?\CD\F4q\D6\A4\B8\DB?\DE\F2a|\11\F7\DB?\0F\B7\1Do\D25\DC?\B2c\01\BB\E8t\DC?\CB5\C1sU\B4\DC?\8E\EA\AE\B4\19\F4\DC?B\A1\02\A164\DD?\9Cp'd\ADt\DD?\C8\EA\0B2\7F\B5\DD?\D2\CFvG\AD\F6\DD?\073`\EA88\DE?\07]Oj#z\DE?Y\BA\BD n\BC\DE?b,\7Fq\1A\FF\DE?\90\190\CB)B\DF?=\A1\A9\A7\9D\85\DF?\F1_|\8Cw\C9\DF?\DE\1C\B9\85\DC\06\E0?9\D5\8B\E11)\E0?5\93\A6\AF\BCK\E0?8\91\F0\CC}n\E0?\81\B3\99\1Dv\91\E0?\B10q\8D\A6\B4\E0?\AA\9AA\10\10\D8\E0?(\B22\A2\B3\FB\E0?\\y1H\92\1F\E1?\D3\04_\10\ADC\E1?*\96\86\12\05h\E1?\BD\99\9Bp\9B\8C\E1?\A1/@Wq\B1\E1? \F9T\FE\87\D6\E1?\02\F7\92\A9\E0\FB\E1?\04Z0\A9|!\E2?\CC>\91Z]G\E2?qi\05)\84m\E2?\DB2\94\8E\F2\93\E2?W\FC\D7\14\AA\BA\E2?I\A4\EAU\AC\E1\E2?\9F\A2d\FD\FA\08\E3?A\A5p\C9\970\E3?W\BD\F5\8B\84X\E3?\ADn\DA+\C3\80\E3?W<c\A6U\A9\E3?f\A2\AF\10>\D2\E3?\C7\CDX\99~\FB\E3?\B3\D35\8A\19%\E4?\DD\ABIJ\11O\E4?\14\C7\DF_hy\E4?#\CB\DCr!\A4\E4?\1E\C9IO?\CF\E4?\832!\E8\C4\FA\E4?\BB\EAeZ\B5&\E5?\03\1E\8E\F0\13S\E5?0\0FM&\E4\7F\E5?\1C\E0\C8\AC)\AD\E5?\FE\84Ko\E8\DA\E5?\0A\AE\80\98$\09\E6?\DF\95U\98\E27\E6?\1Eo\93*'g\E6?k\C9Q^\F7\96\E6?%\EBc\9EX\C7\E6?\FB\0D\EB\BAP\F8\E6?\A7\02@\F4\E5)\E7?\8Dpq\07\1F\\\E7?\C9K\A1<\03\8F\E7?'\06\9Dw\9A\C2\E7?\95\83!K\ED\F6\E7?UsW\0F\05,\E8?\D6c8\FC\EBa\E8?\9A\89\BBH\AD\98\E8?\DC\B8\E6OU\D0\E8?R#2\BD\F1\08\E9?R0\1C\C2\91B\E9?\145bWF}\E9?c\C5$\8D\22\B9\E9?\99\E3e\EE;\F6\E9?\0Cx\F6\FD\AA4\EA?\83\98Q\D5\8Bt\EA?\C6\F9z\F1\FE\B5\EA?\13\C4m?*\F9\EA?\DA\BF5\82:>\EB?@\E0\90:e\85\EB?\8D\D0\E2N\EB\CE\EB?G\B9\EF\D9\1C\1B\EC?\B8\82\AA\CE^j\EC?\02F\A8\A83\BD\EC?\89B\A2xI\14\ED?\12\FAX\06\92p\ED?\F95\06\A7o\D3\ED?\B2k)\E0\11?\EE?-Zn[T\B7\EE?e\02|\C9jD\EF?\00\00\00\00\00\00\F0?" }>, align 8
@_ZN4rand13distributions15ziggurat_tables9ZIG_EXP_X17h89300bbec8abc7eeE = constant <{ [2056 x i8] }> <{ [2056 x i8] c"\C3]\BF\94\ECd!@\83\BB~)\D9\C9\1E@\FCq\DAQ\9E\C3\1B@\85{H\0D\DC\E9\19@\19\ED\F2\E6\9F\93\18@/\C6\EA\D6P\87\17@r\BFKmg\AA\16@\D2\13s\E1z\EE\15@\F5s\CF<\D8J\15@\D0QG\CD\D7\B9\14@a\13\E4f\977\14@`\B8\C8\C7N\C1\13@]\F7\CC'\EET\13@\F0\11D\8A\E3\F0\12@\A5\AAI\AE\F5\93\12@\9F\91Y\B6+=\12@|\FA\C9\A0\BC\EB\11@\D6\C2\B3\BC\03\9F\11@*DugxV\11@\A6\92C\03\A8\11\11@\A0H]x1\D0\10@N\A5\CB\CD\C1\91\10@\EF\8E\F5\8B\11V\10@.\ECb\B3\E2\1C\10@\E6\C6\F6C\FE\CB\0F@\A7\F7\91\97nb\0F@J\EAPg\C2\FC\0E@\C1\83\F3*\AF\9A\0E@`\09\19n\F2;\0E@\9F\F1N\AFP\E0\0D@\EC;\ECo\94\87\0D@\C58'k\8D1\0D@\7F\A9\F2\EC\0F\DE\0C@\F3\C8\C8B\F4\8C\0C@\A6\E0\C2A\16>\0C@v\EFK\DET\F1\0B@]\DAv\D2\91\A6\0B@\0E\EA\91P\B1]\0B@\08\B6\03\C0\99\16\0B@\C3E\D8\823\D1\0A@\E8\86\AD\C2h\8D\0A@:L\E8C%K\0A@w\F1I>V\0A\0A@\E9\D9$:\EA\CA\09@\D7\1A\8D\F1\D0\8C\09@\0D*\FC4\FBO\09@Cu\F3\D2Z\14\09@\956;\82\E2\D9\08@\AA[i\CE\85\A0\08@Ash\069h\08@\C3\BE\C0,\F10\08@\12\14n\E9\A3\FA\07@\D3v\14}G\C5\07@\F9qk\B5\D2\90\07@\C3q\BD\E2<]\07@\18\D2\\\CE}*\07@\07%\F4\B1\8D\F8\06@\1E{\9A/e\C7\06@\EEH\97J\FD\96\06@1\F4\C3`Og\06@\93.{$U8\06@w\18\08\97\08\0A\06@\9C\BD\88\03d\DC\05@\06\E18\FAa\AF\05@`D\1BL\FD\82\05@Y\A7\F8\061W\05@\B1\AA\ACq\F8+\05@\08\95\B9\08O\01\05@'\B1\1C{0\D7\04@L\A1]\A7\98\AD\04@2\94\D3\98\83\84\04@,\C9\1B\85\ED[\04@\F8B\BD\C9\D23\04@\AD\EE\F5\E9/\0C\04@\CF\DE\AD\8C\01\E5\03@\83\8B\8DzD\BE\03@CQ4\9C\F5\97\03@V\A8\8C\F8\11r\03@e\C9;\B3\96L\03@\CF\A7*\0B\81'\03@dY&Y\CE\02\03@p-\96\0E|\DE\02@P\DBE\B4\87\BA\02@+SB\E9\EE\96\02@\A6\DA\C7a\AFs\02@\BA;@\E6\C6P\02@P\E5OR3.\02@\A2\F4\F0\93\F2\0B\02@q3\9B\AA\02\EA\01@[*x\A6a\C8\01@!x\A2\A7\0D\A7\01@\9E\AEo\DD\04\86\01@\C1\04\C4\85Ee\01@,:o\EC\CDD\01@K\15\92j\9C$\01@\CF\EF\0Bf\AF\04\01@\B8\CF\EFP\05\E5\00@p\94\00\A9\9C\C5\00@\1A\C83\F7s\A6\00@\0F\AD:\CF\89\87\00@\DB&\11\CF\DCh\00@\A3$\92\9EkJ\00@\1B9\11\EF4,\00@\D5\11\F9z7\0E\00@\D9\09\DD\0A\E4\E0\FF?\E6\E1\EF\B3\C6\A5\FF?\D1^Q\98\14k\FF?\81\BC\A0n\CB0\FF?i\91[\FC\E8\F6\FE?zvJ\15k\BD\FE?\81#\F4\9AO\84\FE?T\A4\16|\94K\FE?\9DP&\B47\13\FE?\815\D2J7\DB\FD?\0C\A5\8DS\91\A3\FD?\01\A4\1E\EDCl\FD?\B0\F20AM5\FD?\82q\ED\83\AB\FE\FC?n\A5\95\F3\\\C8\FC?\FE##\D8_\92\FC?\A7\B1\EA\82\B2\\\FC?/\E0BNS'\FC?\87\FD-\9D@\F2\FB?\12&\07\DBx\BD\FB?\B7O2{\FA\88\FB?C%\CF\F8\C3T\FB?\B6\8Bn\D6\D3 \FB?\00\AD\CA\9D(\ED\FA?{e\81\DF\C0\B9\FA?\10\F3\D02\9B\86\FA?\91\C6V5\B6S\FA?.Y\D0\8A\10!\FA?R\E9\DD\DC\A8\EE\F9?^\03\C7\DA}\BC\F9?\F5\BB@9\8E\8A\F9?\8B\825\B2\D8X\F9?\E2s\8E\04\\'\F9?\14\15\FE\F3\16\F6\F8?\95`\CCH\08\C5\F8?U\0F\A4\CF.\94\F8?\E8\08aY\89c\F8?+\E6\DF\BA\163\F8?xr\CE\CC\D5\02\F8?\F9\17}k\C5\D2\F7?\0C$\B1v\E4\A2\F7?1\D1w\D11s\F7?\1D\04\FAa\ACC\F7?\FC\A9P\11S\14\F7?\09\A6Y\CB$\E5\F6?\E1<\8D~ \B6\F6?\F0\EB\D3\1BE\87\F6?\8E\9B\\\96\91X\F6?/\1As\E3\04*\F6?(\CFV\FA\9D\FB\F5?6\93\11\D4[\CD\F5?\FA\9CNk=\9F\F5?'o1\BCAq\F5?\F9\B5,\C4gC\F5?\FC\00\D9\81\AE\15\F5?\EBE\CB\F4\14\E8\F4?\A5\18k\1D\9A\BA\F4?\C4\83\C8\FC<\8D\F4?\A7lq\94\FC_\F4?\D0lF\E6\D72\F4?\C4\09O\F4\CD\05\F4?n3\8D\C0\DD\D8\F3?\FC\EF\CFL\06\AC\F3?\EF\1A\85\9AF\7F\F3?\A0\1B\8A\AA\9DR\F3?\11v\FB|\0A&\F3? \17\03\11\8C\F9\F2?];\A5d!\CD\F2?\A9\CD\8Bt\C9\A0\F2?\9F\18\D0;\83t\F2?)\A3\C2\B3MH\F2?\04\0E\B1\D3'\1C\F2?\E0\C4\A9\90\10\F0\F1?\81R=\DD\06\C4\F1?\94#=\A9\09\98\F1?\F9\7Fw\E1\17l\F1?\BC}po0@\F1?\13\AC\179R\14\F1?d/z |\E8\F0?5\01q\03\AD\BC\F0?p\00K\BB\E3\90\F0?\F5vr\1C\1Fe\F0?_\B1\0D\F6]9\F0?\D6<\9A\11\9F\0D\F0?\9C\A9\04e\C2\C3\EF?\B0\FEW+Fl\EF?\99\94\02\E2\C6\14\EF?]\1B\E2\E5A\BD\EE?>\10\CF\83\B4e\EE?\F81|\F7\1B\0E\EE?P\90Bju\B6\ED?\87k\D8\F1\BD^\ED?\F4\E6\F0\8E\F2\06\ED?\D4Z\C2+\10\AF\EC?\98\D2p\9A\13W\EC?\92\FEY\93\F9\FE\EB?\83\8F?\B3\BE\A6\EB?\95\97Ly_N\EB?\C2$\F2D\D8\F5\EA?[\D2\96S%\9D\EA?D\88\14\BEBD\EA?\B8\03\FFu,\EB\E9?2\13\ADB\DE\91\E9?=\A2\FD\BDS8\E9?#\C5\D0P\88\DE\E8?\E5\E1+/w\84\E8?\93\D5\FES\1B*\E8?l\81~|o\CF\E7?my\07#nt\E7?\B5\90yy\11\19\E7?>\A9\FAbS\BD\E6?\DAh\0Cm-a\E6?\C8.\DD\C7\98\04\E6?\F6\BE\B8=\8E\A7\E5?Gox)\06J\E5?\8D\0B\CDk\F8\EB\E4?\0C\E75_\\\8D\E4?Bgp\CA(.\E4?\9Ab!\D1S\CE\E3?\FB\81m\E2\D2m\E3?E\DA&\A5\9A\0C\E3?\04h#\E1\9E\AA\E2?(\FF8e\D2G\E2?\E1I>\E9&\E4\E1?\9B\DFK\EB\8C\7F\E1?\AA\F5I\87\F3\19\E1?\F7\80\9BGH\B3\E0?Suj\EDvK\E0?\012h]\D2\C4\DF?\A3O_\CF\0C\F0\DE?Rs\F1xf\18\DE?-|\F1M\A2=\DD?\7F?\8C\D7{_\DC?\B9\A3\DD\DD\A5}\DB?\F8Q]\BE\C8\97\DA?\C77\22U\80\AD\D9?c`\D3TY\BE\D8?\0E\D0\17\DA\CD\C9\D7?\B2+\A7\F0@\CF\D6?\B7J\02\9D\F8\CD\D5?\16\FE\0B\C6\15\C5\D4?\BDn=\FE\88\B3\D3?%&\DA\90\02\98\D2?b\F6\D6$\DBp\D1?-\\\C6I\F0;\D0?{\BDm\B7\D8\EC\CD?\AE\B7y\EF\D18\CB?^z\C2\FB\90P\C8?N*J\E5\E6\22\C5?\8E\8D[\A95\93\C1?\C6L[I\B2\D6\BA?\8F@]\8B\9DX\B0?\00\00\00\00\00\00\00\00" }>, align 8
@_ZN4rand13distributions15ziggurat_tables9ZIG_EXP_F17he3164b46baf6c090E = constant <{ [2056 x i8] }> <{ [2056 x i8] c";\05\9D\F5\D3\E5%?O\0B\9F2\1C\C3=?\B4\FC\8D\F7\0A\B2O?(>\0CT\B5+Y?&\A3\E1\A8k\94a?\FF\FE\A1\F3\88\D8f?\11K\CD\81\B3Xl?E@Wi=\07q?\01#\E3\CE\97\FAs?'6\EC7\9F\04w?;H\97\D4\E9#z?\CD]t\FAQW}?\FB\D7_)\F2N\80?rv\B3\EDi\FB\81?coQ\C1\B8\B0\83?\CC\16\E4\0B\93n\85?\F7t\AA\E6\B64\87?\BB\A7\8Fh\EA\02\89?-\C9BU\FA\D8\8A?Z'n\14\B9\B6\8C?\CE\C7\89\DE\FD\9B\8E?\EE\02\1E\09RD\90?]_rTE>\91?0:\B9\E1\C9;\92?\82]1%\D2<\93?\BD\F0\87\CEQA\94?P\02\AB\A6=I\95?w@\A2r\8BT\96?\96\FC\87\DA1c\97?h\99\ECS(u\98?I*\13\0Fg\8A\99?\9CN\92\E6\E6\A2\9A?qX\FAP\A1\BE\9B?\0F\1B3T\90\DD\9C?mtQz\AE\FF\9D?\95\98\AF\C7\F6$\9F?\F0\FA\0DY\B2&\A0?T\D6|\0Cz\BC\A0?\A5\B3\19\9F\D0S\A1?\D7\12\F3_\B4\EC\A1?\0F\C0V\C9#\87\A2?\B1\14?~\1D#\A3?\01\19\FFG\A0\C0\A3?\1Bk&\14\AB_\A4?\EE\C5\96\F2<\00\A5?\CD\D2\C5\13U\A2\A5?C\A0&\C7\F2E\A6?S\AF\B6y\15\EB\A6?\A0\08\AB\B4\BC\91\A7?m9:\1C\E89\A8?nw\80n\97\E3\A8?M|{\82\CA\8E\A9?8\F1\1BG\81;\AA?\83\80j\C2\BB\E9\AA?\84\D9\BE\10z\99\AB?\E8!\07d\BCJ\AC?Iy\1E\03\83\FD\AC?\10X1I\CE\B1\AD?\E7\B2.\A5\9Eg\AE?8\E8D\99\F4\1E\AF?|\96i\BA\D0\D7\AF?\1A\C8\F5\D7\19I\B0??\1B\87\19\0F\A7\B0?S\CAV\87\C8\05\B1?\95Su\8FFe\B1?B\A3o\A8\89\C5\B1?\8D\9D,Q\92&\B2?q\05\CE\10a\88\B2?\D1\8D\94v\F6\EA\B2?\18\E7\C6\19SN\B3?\9F\9F\9B\99w\B2\B3?\0F\B1%\9Dd\17\B4?\\\98C\D3\1A}\B4?)\D9\90\F2\9A\E3\B4?7\D0Y\B9\E5J\B5?@\BB\91\ED\FB\B2\B5?\F8\DE\CA\\\DE\1B\B6?!\B60\DC\8D\85\B6?\B8\16\84H\0B\F0\B6?!<\19\86W[\B7?\F5\A6\D7\80s\C7\B7?\BB\C4;,`4\B8?=SZ\83\1E\A2\B8?\BAt\E5\88\AF\10\B9?pk3G\14\80\B9?(\F4F\D0M\F0\B9?\B68\D9=]a\BA?cTe\B1C\D3\BA?Fe5T\02F\BB?\8C&qW\9A\B9\BB?\AD\10.\F4\0C.\BC?V\FD\80k[\A3\BC?\D5M\91\06\87\19\BD?\96\93\AD\16\91\90\BD?\F8\BAa\F5z\08\BE?\C9\B9\8E\04F\81\BE?9\C3\83\AE\F3\FA\BE?\12\04\19f\85u\BF?\8B\EA\CB\A6\FC\F0\BF?\04\7Fnz\AD6\C0?\BF\A5\B7\EEPu\C0?/\B6T{i\B4\C0?\1F\17\EC\EF\F7\F3\C0?.q\C9 \FD3\C1?w\AE\F0\E6yt\C1?e\D61 o\B5\C1?c\CA=\AF\DD\F6\C1?v\E8\BB{\C68\C2?>\99`r*{\C2?2\CF\04\85\0A\BE\C2?l}\BE\AAg\01\C3?\AD\0C\FA\DFBE\C3?\C7\D5\94&\9D\89\C3?\03\A9\F8\85w\CE\C3?\97j8\0B\D3\13\C4?\C3\CC-\C9\B0Y\C4?\930\98\D8\11\A0\C4?\F7\B6<X\F7\E6\C4?F\8C\07mb.\C5?\F1x.BTv\C5?\B2\C2T\09\CE\BE\C5?.j\B0\FA\D0\07\C6?\A9\D10U^Q\C6?&\DA\A6^w\9B\C6?\E9\84\EEc\1D\E6\C6?8(\1A\B9Q1\C7?\FDF\9F\B9\15}\C7?\AD\1B\85\C8j\C9\C7?\E4\E7\94PR\16\C8?\F8\1A\8C\C4\CDc\C8?\D3bP\9F\DE\B1\C8?x\BB%d\86\00\C9?\9F\92\E6\9E\C6O\C9?!\16>\E4\A0\9F\C9?\10\C5\E4\D1\16\F0\C9?\BA\\\DF\0E*A\CA?G<\C0K\DC\92\CA?\0A[\EBB/\E5\CA?<\EF\DC\B8$8\CB?\A3\E4r|\BE\8B\CB?3D9g\FE\DF\CB?\EC\AF\B9]\E64\CC?\FF\17\CEOx\8A\CC?\9B\D0\F68\B6\E0\CC?\FA1\B4 \A27\CD?\B6\EE\E3\1A>\8F\CD?7O\22H\8C\E7\CD?\A4\83/\D6\8E@\CE?\EF@Y\00H\9A\CE?\98\E0\E8\0F\BA\F4\CE?{>\96\\\E7O\CF?Q\93\FFL\D2\AB\CF?iG\93\AB>\04\D0?+|y\80\F52\D0?\D1\90]\F0\0Eb\D0?\12>\E9N\8C\91\D0?2S\8F\F8n\C1\D0?k\A6\D9R\B8\F1\D0?\B9\9F\BA\CCi\22\D1?\EE\91\E2\DE\84S\D1?\81\19\19\0C\0B\85\D1?Y\BC\9A\E1\FD\B6\D1?\DA\09{\F7^\E9\D1?\FF~\0B\F1/\1C\D2?\FDvG}rO\D2?(vEW(\83\D2?c\22\AEFS\B7\D2?qB9 \F5\EB\D2?6$1\C6\0F!\D3?\DD\D0\FC(\A5V\D3?\EF}\B1G\B7\8C\D3?\85\B2\AB0H\C3\D3?O\A10\02Z\FA\D3?\E2A\18\EB\EE1\D4?\EF\BE\80+\09j\D4?\D4\DA\8B\15\AB\A2\D4? \F9&\0E\D7\DB\D4?\F7\89\DE\8D\8F\15\D5?\E9\A3\BD!\D7O\D5?\F1\A9:l\B0\8A\D5?o\EE1&\1E\C6\D5?yX\EF\1F#\02\D6?\E7'HB\C2>\D6?\A1\0D\C6\8F\FE{\D6?\9F\E9\E4%\DB\B9\D6?\A1\9Ed>[\F8\D6?\EE\8D\B00\827\D7?\E7r^sSw\D7?\22\80\C6\9D\D2\B7\D7?]\CE\B6i\03\F9\D7?=aD\B5\E9:\D8?\90?\BC\84\89}\D8?>]\B7\04\E7\C0\D8?\09]T\8C\06\05\D9?\15\81\9A\9F\ECI\D9?\AD{\09\F2\9D\8F\D9?\977Zi\1F\D6\D9?\F9!u v\1D\DA?E\01\A3j\A7e\DA?\EB\F6\FD\D6\B8\AE\DA?e\EF(4\B0\F8\DA?u\80T\94\93C\DB?\8E\0B\99Qi\8F\DB?\BB\EE\AE\128\DC\DB?\88\A5\0E\D0\06*\DC?f\FB\83\D9\DCx\DC?\98\E0@\DC\C1\C8\DC?\11\1A~\E9\BD\19\DD?\80\ED\B9}\D9k\DD?\12!\A7\88\1D\BF\DD?\028\E1u\93\13\DE?W\D3}6Ei\DE?\96\9D\96K=\C0\DE?SB\EB\D1\86\18\DF?\00\C6\BF\8E-r\DF?|E!\FE=\CD\DF?'\F3`\B1\E2\14\E0?Ke\D2\EB\E8C\E0?\80;\EE1\B9s\E0?-\D0T\88[\A4\E0?.\1E+\81\D8\D5\E0?\90\C3\1CJ9\08\E1?\9F\163\BC\87;\E1?\F2o\CEm\CEo\E1?);\1E\C7\18\A5\E1?\8D{\87\19s\DB\E1?\CC>\81\BA\EA\12\E2?\A6P\8C\22\8EK\E2?\C02\11\11m\85\E2?'O\1F\B6\98\C0\E2?a\DAE\E3#\FD\E2?\1Bc\0EE#;\E3?\DC\DD\08\A7\ADz\E3?\16\D1\E1D\DC\BB\E3?\82\8B\B1+\CB\FE\E3?(\E1\A8\AF\99C\E4?l\E0\8E\FBj\8A\E4?\B2\F8Q\C1f\D3\E4?\9E\89x\15\BA\1E\E5?w\87\DA\82\98l\E5?y\ACLi=\BD\E5?j\AF\A7\C1\ED\10\E6?\0A\\Om\FAg\E6?\CA\18\84I\C3\C2\E6?gK\A9[\BB!\E7?\83\D4\09\9Bn\85\E7?+1$-\8A\EE\E7?\BD\C5\06x\E8]\E8?5\D2\D3v\A3\D4\E8??\AAU\C41T\E9?\A1mU\15\97\DE\E9?\EE\FAb\A5\BAv\EA?2\7F\E6\0E\0F!\EB?1{\EB{\00\E5\EB?\FC\FF\81P\A6\D0\EC?G\11\88\E5E\05\EE?\00\00\00\00\00\00\F0?" }>, align 8
@alloc668 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"JitterRng {}" }>, align 1
@alloc669 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc668, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc1226 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc1291 = private unnamed_addr constant <{ [81 x i8] }> <{ [81 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/jitter.rs" }>, align 1
@alloc1228 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00d\00\00\00,\00\00\00" }>, align 8
@alloc1229 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"too many stuck results" }>, align 1
@alloc1230 = private unnamed_addr constant <{ [31 x i8] }> <{ [31 x i8] c"time delta variations too small" }>, align 1
@alloc1231 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"timer not monotonic" }>, align 1
@alloc1232 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"coarse timer" }>, align 1
@alloc1233 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"no timer available" }>, align 1
@alloc675 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc909, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer }>, align 8
@_ZN4rand6jitter13JITTER_ROUNDS17hf298d2a202458bf3E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@alloc1235 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\88\00\00\00\16\00\00\00" }>, align 8
@alloc1236 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"assertion failed: rounds > 0" }>, align 1
@alloc1238 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\BC\00\00\00\09\00\00\00" }>, align 8
@alloc1240 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\D3\00\00\00\16\00\00\00" }>, align 8
@str.e = internal constant [28 x i8] c"attempt to add with overflow"
@alloc1242 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\D3\00\00\00\15\00\00\00" }>, align 8
@str.f = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc1244 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\D4\00\00\00\14\00\00\00" }>, align 8
@str.g = internal constant [35 x i8] c"attempt to shift left with overflow"
@alloc1246 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\D7\00\00\00\14\00\00\00" }>, align 8
@str.h = internal constant [36 x i8] c"attempt to shift right with overflow"
@alloc1248 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\EB\00\00\00'\00\00\00" }>, align 8
@alloc1250 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\EB\00\00\00\1F\00\00\00" }>, align 8
@alloc1252 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00%\01\00\00\19\00\00\00" }>, align 8
@alloc1254 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00-\01\00\00\16\00\00\00" }>, align 8
@alloc1256 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00-\01\00\00\15\00\00\00" }>, align 8
@alloc1258 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\001\01\00\00\17\00\00\00" }>, align 8
@alloc1260 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\002\01\00\00\0D\00\00\00" }>, align 8
@alloc1262 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00B\01\00\00\16\00\00\00" }>, align 8
@alloc1264 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00C\01\00\00\16\00\00\00" }>, align 8
@alloc1266 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\98\01\00\00\19\00\00\00" }>, align 8
@alloc1268 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\E6\01\00\00$\00\00\00" }>, align 8
@alloc1270 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\E9\01\00\00\22\00\00\00" }>, align 8
@alloc1272 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\ED\01\00\00\10\00\00\00" }>, align 8
@str.i = internal constant [48 x i8] c"attempt to calculate the remainder with overflow"
@alloc1274 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\ED\01\00\00%\00\00\00" }>, align 8
@alloc1276 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\F2\01\00\00\1A\00\00\00" }>, align 8
@alloc1278 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\F2\01\00\00\0D\00\00\00" }>, align 8
@alloc1280 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\001\02\00\00\1E\00\00\00" }>, align 8
@alloc1282 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\001\02\00\00\0C\00\00\00" }>, align 8
@alloc1284 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00.\02\00\00\22\00\00\00" }>, align 8
@alloc940 = private unnamed_addr constant <{ [16 x i8] }> zeroinitializer, align 8
@alloc1286 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\9F\02\00\00@\00\00\00" }>, align 8
@alloc1288 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\E5\02\00\00\0F\00\00\00" }>, align 8
@alloc1290 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\EC\02\00\00#\00\00\00" }>, align 8
@alloc1292 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1291, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\EC\02\00\00\12\00\00\00" }>, align 8
@alloc809 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"OsRng {}" }>, align 1
@alloc810 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc809, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00" }>, align 8
@alloc1297 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/os.rs" }>, align 1
@alloc1294 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc1297, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00\82\00\00\00)\00\00\00" }>, align 8
@alloc1296 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc1297, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00\8B\00\00\00\11\00\00\00" }>, align 8
@alloc798 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"unexpected getrandom error: " }>, align 1
@alloc799 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [28 x i8] }>, <{ [28 x i8] }>* @alloc798, i32 0, i32 0, i32 0), [8 x i8] c"\1C\00\00\00\00\00\00\00" }>, align 8
@alloc1298 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc1297, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00\88\00\00\00\15\00\00\00" }>, align 8
@alloc769 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"\01\00\00\00&\00\00\00" }>, align 4
@_ZN4rand2os3imp22is_getrandom_available7CHECKER17h6034d13e6a5db85cE = internal global <{ [8 x i8] }> zeroinitializer, align 8
@_ZN4rand2os3imp22is_getrandom_available9AVAILABLE17h700982aff39333e5E = internal global <{ [1 x i8] }> zeroinitializer, align 1
@alloc1299 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"/dev/urandom" }>, align 1
@vtable.j = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, [0 x i8] }> <{ i8* bitcast (void ({}*)* @"_ZN4core3ptr56drop_in_place$LT$rand..os..imp..getrandom_fill_bytes$GT$17h6136ee67b65527a5E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (void ({}*, [0 x i8]*, i64)* @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17haa0c9a6238cb5ae0E" to i8*), i8* bitcast (void ({}*, [0 x i8]*, i64)* @_ZN4core3ops8function5FnMut8call_mut17hca73c82c8fc5b0c5E to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.k = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, [0 x i8] }> <{ i8* bitcast (void (i32*)* @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17h28eca9aef3520b31E" to i8*), [16 x i8] c"\04\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", i8* bitcast (void (%"core::result::Result<usize, std::io::error::Error>"*, i32*, [0 x i8]*, i64)* @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$4read17h8c6e561e46003d97E" to i8*), i8* bitcast (void (%"core::result::Result<usize, std::io::error::Error>"*, i32*, [0 x { i8*, i64 }]*, i64)* @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$13read_vectored17h1e55279996b5e795E" to i8*), i8* bitcast (i1 (i32*)* @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$16is_read_vectored17h0a489ce00fd1ef53E" to i8*), i8* bitcast (void (%"core::result::Result<usize, std::io::error::Error>"*, i32*, %"alloc::vec::Vec<u8>"*)* @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$11read_to_end17h5b1c90334f46fb49E" to i8*), i8* bitcast (void (%"core::result::Result<usize, std::io::error::Error>"*, i32*, %"alloc::string::String"*)* @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$14read_to_string17h8996e8efff93a2afE" to i8*), i8* bitcast (i128 (i32*, [0 x i8]*, i64)* @_ZN3std2io4Read10read_exact17he9d4b678eb630786E to i8*), i8* bitcast (i128 (i32*, %"std::io::readbuf::ReadBuf"*)* @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$8read_buf17h67693fd0a7d35dc7E" to i8*), i8* bitcast (i128 (i32*, %"std::io::readbuf::ReadBuf"*)* @_ZN3std2io4Read14read_buf_exact17h00a1662aaeec9edcE to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1320 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/read.rs" }>, align 1
@alloc1315 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1320, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\005\00\00\00*\00\00\00" }>, align 8
@alloc1317 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1320, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00;\00\00\00*\00\00\00" }>, align 8
@alloc1319 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1320, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00@\00\00\00#\00\00\00" }>, align 8
@alloc1321 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1320, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00I\00\00\00\1D\00\00\00" }>, align 8
@alloc1322 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"end of file reached" }>, align 1
@alloc1325 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/reseeding.rs" }>, align 1
@alloc1324 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1325, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00@\00\00\00\09\00\00\00" }>, align 8
@alloc1326 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1325, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00F\00\00\00\09\00\00\00" }>, align 8
@_ZN4rand4prng6chacha5EMPTY17h5548ea89ae5abf81E = internal constant <{ [136 x i8] }> <{ [136 x i8] c"\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc1339 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/chacha.rs" }>, align 1
@alloc1328 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1339, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00O\00\00\00\15\00\00\00" }>, align 8
@alloc1330 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1339, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00O\00\00\00!\00\00\00" }>, align 8
@alloc1332 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1339, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00O\00\00\00\09\00\00\00" }>, align 8
@alloc841 = private unnamed_addr constant <{ [32 x i8] }> zeroinitializer, align 4
@alloc1334 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1339, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\A2\00\00\00!\00\00\00" }>, align 8
@alloc1336 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1339, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\A2\00\00\00\18\00\00\00" }>, align 8
@alloc1338 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1339, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\A2\00\00\00\0D\00\00\00" }>, align 8
@alloc838 = private unnamed_addr constant <{ [4 x i8] }> zeroinitializer, align 4
@alloc1340 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc1339, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00\CF\00\00\00\18\00\00\00" }>, align 8
@_ZN4rand4prng5isaac5EMPTY17he612dcaf0f3ce96fE = constant <{ [2064 x i8] }> zeroinitializer, align 4
@alloc1393 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs" }>, align 1
@alloc1342 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00p\00\00\00\0D\00\00\00" }>, align 8
@alloc1344 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00q\00\00\00\0D\00\00\00" }>, align 8
@alloc1346 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00u\00\00\00\11\00\00\00" }>, align 8
@alloc1348 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00u\00\00\00+\00\00\00" }>, align 8
@alloc1350 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00u\00\00\00\22\00\00\00" }>, align 8
@alloc1352 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00v\00\00\00\1A\00\00\00" }>, align 8
@alloc1354 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00v\00\00\00\11\00\00\00" }>, align 8
@alloc1356 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00v\00\00\00+\00\00\00" }>, align 8
@alloc1358 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00v\00\00\00\22\00\00\00" }>, align 8
@alloc1360 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00w\00\00\00\1A\00\00\00" }>, align 8
@alloc1362 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00w\00\00\00\11\00\00\00" }>, align 8
@alloc1364 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00w\00\00\00+\00\00\00" }>, align 8
@alloc1366 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00w\00\00\00\22\00\00\00" }>, align 8
@alloc1368 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00x\00\00\00\1A\00\00\00" }>, align 8
@alloc1370 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00x\00\00\00\11\00\00\00" }>, align 8
@alloc1372 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00x\00\00\00+\00\00\00" }>, align 8
@alloc1374 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00x\00\00\00\22\00\00\00" }>, align 8
@alloc1376 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00s\00\00\005\00\00\00" }>, align 8
@alloc1378 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\AF\00\00\00\1B\00\00\00" }>, align 8
@alloc1380 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\AF\00\00\00\11\00\00\00" }>, align 8
@alloc1382 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\B0\00\00\00\1B\00\00\00" }>, align 8
@alloc1384 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\B0\00\00\00\11\00\00\00" }>, align 8
@alloc1386 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\B1\00\00\00\1B\00\00\00" }>, align 8
@alloc1388 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\B1\00\00\00\11\00\00\00" }>, align 8
@alloc1390 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\B2\00\00\00\1B\00\00\00" }>, align 8
@alloc1392 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\B2\00\00\00\11\00\00\00" }>, align 8
@alloc1394 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc1393, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\AE\00\00\00.\00\00\00" }>, align 8
@alloc861 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"IsaacRng {}" }>, align 1
@alloc862 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [11 x i8] }>, <{ [11 x i8] }>* @alloc861, i32 0, i32 0, i32 0), [8 x i8] c"\0B\00\00\00\00\00\00\00" }>, align 8
@_ZN4rand4prng7isaac648EMPTY_6417h39ef84dbe350a844E = constant <{ [4128 x i8] }> zeroinitializer, align 8
@alloc1446 = private unnamed_addr constant <{ [87 x i8] }> <{ [87 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs" }>, align 1
@alloc1396 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00l\00\00\00\0D\00\00\00" }>, align 8
@alloc1398 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00m\00\00\00\0D\00\00\00" }>, align 8
@alloc1400 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00q\00\00\00\11\00\00\00" }>, align 8
@alloc1402 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00q\00\00\00+\00\00\00" }>, align 8
@alloc1404 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00q\00\00\00\22\00\00\00" }>, align 8
@alloc1406 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00r\00\00\00\1A\00\00\00" }>, align 8
@alloc1408 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00r\00\00\00\11\00\00\00" }>, align 8
@alloc1410 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00r\00\00\00+\00\00\00" }>, align 8
@alloc1412 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00r\00\00\00\22\00\00\00" }>, align 8
@alloc1414 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00s\00\00\00\1A\00\00\00" }>, align 8
@alloc1416 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00s\00\00\00\11\00\00\00" }>, align 8
@alloc1418 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00s\00\00\00+\00\00\00" }>, align 8
@alloc1420 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00s\00\00\00\22\00\00\00" }>, align 8
@alloc1422 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00t\00\00\00\1A\00\00\00" }>, align 8
@alloc1424 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00t\00\00\00\11\00\00\00" }>, align 8
@alloc1426 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00t\00\00\00+\00\00\00" }>, align 8
@alloc1428 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00t\00\00\00\22\00\00\00" }>, align 8
@alloc1430 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00o\00\00\004\00\00\00" }>, align 8
@alloc882 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"\00\00\00\00\00\00\00\00\80\00\00\00\00\00\00\00\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc1432 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\B0\00\00\00\11\00\00\00" }>, align 8
@alloc1434 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\B1\00\00\00\11\00\00\00" }>, align 8
@alloc1436 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\B2\00\00\00\11\00\00\00" }>, align 8
@alloc1438 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\B3\00\00\00\11\00\00\00" }>, align 8
@alloc1440 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\8A\00\00\003\00\00\00" }>, align 8
@alloc1442 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\D0\00\00\00\09\00\00\00" }>, align 8
@alloc1443 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"assertion failed: self.cnt < RAND_SIZE_64" }>, align 1
@alloc1445 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\D4\00\00\00\09\00\00\00" }>, align 8
@alloc1447 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [87 x i8] }>, <{ [87 x i8] }>* @alloc1446, i32 0, i32 0, i32 0), [16 x i8] c"W\00\00\00\00\00\00\00\D5\00\00\00\09\00\00\00" }>, align 8
@alloc906 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"Isaac64Rng {}" }>, align 1
@alloc907 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc906, i32 0, i32 0, i32 0), [8 x i8] c"\0D\00\00\00\00\00\00\00" }>, align 8
@alloc1448 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"XorShiftRng.reseed called with an all zero seed." }>, align 1
@alloc1452 = private unnamed_addr constant <{ [88 x i8] }> <{ [88 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/xorshift.rs" }>, align 1
@alloc1450 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1452, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00E\00\00\00\09\00\00\00" }>, align 8
@alloc1451 = private unnamed_addr constant <{ [52 x i8] }> <{ [52 x i8] c"XorShiftRng::from_seed called with an all zero seed." }>, align 1
@alloc1453 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1452, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00P\00\00\00\09\00\00\00" }>, align 8
@alloc637 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"No entropy available: " }>, align 1
@alloc638 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc637, i32 0, i32 0, i32 0), [8 x i8] c"\16\00\00\00\00\00\00\00" }>, align 8
@alloc1566 = private unnamed_addr constant <{ [78 x i8] }> <{ [78 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/lib.rs" }>, align 1
@alloc1455 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc1566, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00X\03\00\00\17\00\00\00" }>, align 8
@alloc934 = private unnamed_addr constant <{ i8*, [0 x i8] }> <{ i8* bitcast (i64* ()* @_ZN4rand10thread_rng14THREAD_RNG_KEY7__getit17hc00ab9b25dd2aa88E to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1457 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc1566, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00\88\03\00\00\12\00\00\00" }>, align 8
@alloc1459 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc1566, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00\8C\03\00\00\12\00\00\00" }>, align 8
@alloc1460 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Gamma" }>, align 1
@alloc1488 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"repr" }>, align 1
@vtable.l = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"distributions::gamma::GammaRepr"**)* @"_ZN4core3ptr62drop_in_place$LT$$RF$rand..distributions..gamma..GammaRepr$GT$17h46a16d33f281306fE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"distributions::gamma::GammaRepr"**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hdff20c6afa3e0607E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1465 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Small" }>, align 1
@vtable.m = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"distributions::gamma::GammaSmallShape"**)* @"_ZN4core3ptr68drop_in_place$LT$$RF$rand..distributions..gamma..GammaSmallShape$GT$17h8fb4cc848dfc58f8E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"distributions::gamma::GammaSmallShape"**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hcc921a479e795c1bE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1469 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"One" }>, align 1
@vtable.n = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (double**)* @"_ZN4core3ptr62drop_in_place$LT$$RF$rand..distributions..exponential..Exp$GT$17hec6ef83ec15461f6E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (double**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2f7872ed31fe0083E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1473 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Large" }>, align 1
@vtable.o = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"distributions::gamma::GammaLargeShape"**)* @"_ZN4core3ptr68drop_in_place$LT$$RF$rand..distributions..gamma..GammaLargeShape$GT$17h129bc0bb6cd9f809E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"distributions::gamma::GammaLargeShape"**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6e02f346cddab66aE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1477 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"GammaSmallShape" }>, align 1
@alloc1478 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"inv_shape" }>, align 1
@vtable.p = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (double**)* @"_ZN4core3ptr28drop_in_place$LT$$RF$f64$GT$17h51377cf01b9bbcf6E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (double**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbdd825b866c503e3E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1482 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"large_shape" }>, align 1
@alloc1483 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"GammaLargeShape" }>, align 1
@alloc1484 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"scale" }>, align 1
@alloc1485 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"c" }>, align 1
@alloc1486 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"d" }>, align 1
@alloc1487 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"ChiSquared" }>, align 1
@vtable.q = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"distributions::gamma::ChiSquaredRepr"**)* @"_ZN4core3ptr67drop_in_place$LT$$RF$rand..distributions..gamma..ChiSquaredRepr$GT$17h3387b24d287e376bE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"distributions::gamma::ChiSquaredRepr"**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5dc49f733896504aE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1492 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"DoFAnythingElse" }>, align 1
@vtable.r = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"distributions::gamma::Gamma"**)* @"_ZN4core3ptr58drop_in_place$LT$$RF$rand..distributions..gamma..Gamma$GT$17hfa1143599b5e5cabE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"distributions::gamma::Gamma"**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha96d6760f60a7bffE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1496 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"DoFExactlyOne" }>, align 1
@alloc1497 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"FisherF" }>, align 1
@alloc1498 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"numer" }>, align 1
@vtable.s = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"distributions::gamma::ChiSquared"**)* @"_ZN4core3ptr63drop_in_place$LT$$RF$rand..distributions..gamma..ChiSquared$GT$17h6580fdd1816fec02E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"distributions::gamma::ChiSquared"**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h189ac6e10ac0a023E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1502 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"denom" }>, align 1
@alloc1503 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"dof_ratio" }>, align 1
@alloc1504 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"StudentT" }>, align 1
@alloc1505 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"chi" }>, align 1
@alloc1506 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"dof" }>, align 1
@alloc1507 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"StandardNormal" }>, align 1
@alloc1508 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Normal" }>, align 1
@alloc1509 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"mean" }>, align 1
@alloc1510 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"std_dev" }>, align 1
@alloc1511 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"LogNormal" }>, align 1
@alloc1512 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"norm" }>, align 1
@vtable.t = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ double, double }**)* @"_ZN4core3ptr60drop_in_place$LT$$RF$rand..distributions..normal..Normal$GT$17hbf403dc875bd88a1E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ double, double }**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb01f8090d69dd651E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1516 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"Exp1" }>, align 1
@alloc1517 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Exp" }>, align 1
@alloc1518 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"lambda_inverse" }>, align 1
@alloc1519 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"__Nonexhaustive" }>, align 1
@alloc1520 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"TooManyStuck" }>, align 1
@alloc1521 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"TinyVariantions" }>, align 1
@alloc1522 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"NotMonotonic" }>, align 1
@alloc1523 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"CoarseTimer" }>, align 1
@alloc1524 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"NoTimer" }>, align 1
@alloc1525 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"ReseedingRng" }>, align 1
@alloc1562 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"rng" }>, align 1
@vtable.u = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%StdRng**)* @"_ZN4core3ptr37drop_in_place$LT$$RF$rand..StdRng$GT$17hb1481b2e57bad7cfE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%StdRng**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbbbab2763082f55aE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1530 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"generation_threshold" }>, align 1
@vtable.v = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17hffa374538cc5a6beE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h00d9453dc7aff6e8E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1534 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"bytes_generated" }>, align 1
@alloc1535 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"reseeder" }>, align 1
@vtable.w = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%ThreadRngReseeder**)* @"_ZN4core3ptr48drop_in_place$LT$$RF$rand..ThreadRngReseeder$GT$17hcaadf191f80f25a4E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%ThreadRngReseeder**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7f52d666ee8dddd4E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1539 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"ReseedWithDefault" }>, align 1
@alloc1540 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"ChaChaRng" }>, align 1
@alloc1541 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"buffer" }>, align 1
@vtable.x = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ([16 x i32]**)* @"_ZN4core3ptr87drop_in_place$LT$$RF$$u5b$core..num..wrapping..Wrapping$LT$u32$GT$$u3b$$u20$16$u5d$$GT$17h5b4d62aa55b0b860E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ([16 x i32]**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h71ad1710f627c26eE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1545 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"state" }>, align 1
@alloc1546 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"index" }>, align 1
@vtable.y = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h67cf4fcd996a8c9dE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1b9a1a74863cd8c9E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1550 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"XorShiftRng" }>, align 1
@alloc1551 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"x" }>, align 1
@alloc1552 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"y" }>, align 1
@alloc1553 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"z" }>, align 1
@alloc1554 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"w" }>, align 1
@alloc1555 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"StdRng" }>, align 1
@vtable.z = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"prng::isaac64::Isaac64Rng"**)* @"_ZN4core3ptr56drop_in_place$LT$$RF$rand..prng..isaac64..Isaac64Rng$GT$17hdf426bbd8308b514E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"prng::isaac64::Isaac64Rng"**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hac6563e992250100E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1560 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"ThreadRngReseeder" }>, align 1
@alloc1561 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"ThreadRng" }>, align 1
@vtable.A = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64***)* @"_ZN4core3ptr148drop_in_place$LT$$RF$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$17h5143702427724202E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64***, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h58405a89b209a413E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1567 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc1566, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00z\03\00\00\17\00\00\00" }>, align 8
@_ZN4rand10thread_rng14THREAD_RNG_KEY7__getit5__KEY17hda0a62dff6e4f619E = internal thread_local global <{ [16 x i8] }> zeroinitializer, align 8

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h10ca8d350b6a0c2fE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %0 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he2654a3736e2490fE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i64, i64 } %0, 0
  %_2.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast { i64, i64 }* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:115:49: 115:58]"*
; call core::option::Option<T>::map
  %1 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h3ce8ea38f314e9f9E"(i64 %_2.0, i64 %_2.1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:115:49: 115:58]"* nonnull align 1 %_4)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h31810d285db1ade4E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %0 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he2654a3736e2490fE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i64, i64 } %0, 0
  %_2.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast { i64, i64 }* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:111:48: 111:57]"*
; call core::option::Option<T>::map
  %1 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h10d7c2d13520f40eE"(i64 %_2.0, i64 %_2.1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:111:48: 111:57]"* nonnull align 1 %_4)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h41d855100ca56b80E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %0 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he2654a3736e2490fE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i64, i64 } %0, 0
  %_2.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast { i64, i64 }* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65]"*
; call core::option::Option<T>::map
  %1 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h42aeba01e6574540E"(i64 %_2.0, i64 %_2.1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65]"* nonnull align 1 %_4)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h539c4dd51d360816E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %0 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he2654a3736e2490fE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i64, i64 } %0, 0
  %_2.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast { i64, i64 }* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66].1"*
; call core::option::Option<T>::map
  %1 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17he061e19e1246df61E"(i64 %_2.0, i64 %_2.1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66].1"* nonnull align 1 %_4)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6c46c496b0d21dddE"({ i32*, i32* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 4 dereferenceable_or_null(4) i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h813e6f657494751eE"({ i32*, i32* }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast { i32*, i32* }* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]"*
; call core::option::Option<T>::map
  %0 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17h048971d86effa10dE"(i32* align 4 dereferenceable_or_null(4) %_2, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]"* nonnull align 1 %_4)
  %1 = extractvalue { i32, i32 } %0, 0
  %2 = extractvalue { i32, i32 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { i32, i32 } undef, i32 %1, 0
  %4 = insertvalue { i32, i32 } %3, i32 %2, 1
  ret { i32, i32 } %4
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7ac46c034fa24ffbE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %0 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he2654a3736e2490fE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i64, i64 } %0, 0
  %_2.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast { i64, i64 }* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:138:47: 138:56]"*
; call core::option::Option<T>::map
  %1 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h2de86e896cef421fE"(i64 %_2.0, i64 %_2.1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:138:47: 138:56]"* nonnull align 1 %_4)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hbf3b3d13b98f8a73E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %0 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he2654a3736e2490fE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i64, i64 } %0, 0
  %_2.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast { i64, i64 }* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:174:42: 174:51]"*
; call core::option::Option<T>::map
  %1 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h38a6e9411ac9e090E"(i64 %_2.0, i64 %_2.1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:174:42: 174:51]"* nonnull align 1 %_4)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc3faa7d451a919d2E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %0 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he2654a3736e2490fE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i64, i64 } %0, 0
  %_2.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast { i64, i64 }* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65].0"*
; call core::option::Option<T>::map
  %1 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc2529b5f9beaacfaE"(i64 %_2.0, i64 %_2.1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65].0"* nonnull align 1 %_4)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd8aaa56823ac174cE"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 8 dereferenceable_or_null(8) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50b2180b0df75ba8E"({ i64*, i64* }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast { i64*, i64* }* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]"*
; call core::option::Option<T>::map
  %0 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h67316ad2f248d0b1E"(i64* align 8 dereferenceable_or_null(8) %_2, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]"* nonnull align 1 %_4)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf00063fa9ca0a039E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %0 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he2654a3736e2490fE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i64, i64 } %0, 0
  %_2.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast { i64, i64 }* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66]"*
; call core::option::Option<T>::map
  %1 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hfb35fc9edd4f2908E"(i64 %_2.0, i64 %_2.1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66]"* nonnull align 1 %_4)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32 } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1fb8f0f618b2266fE"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* align 8 dereferenceable(64) %self) unnamed_addr #0 {
start:
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
  %0 = call { i32*, i32 } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17hf9810064999ac0ffE"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* align 8 dereferenceable(64) %self)
  %1 = extractvalue { i32*, i32 } %0, 0
  %2 = extractvalue { i32*, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i32*, i32 } undef, i32* %1, 0
  %4 = insertvalue { i32*, i32 } %3, i32 %2, 1
  ret { i32*, i32 } %4
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i8* } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h55d04ecf563557c2E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* align 8 dereferenceable(56) %self) unnamed_addr #0 {
start:
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
  %0 = call { i32*, i8* } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17hbadc28d9b2360bf8E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* align 8 dereferenceable(56) %self)
  %1 = extractvalue { i32*, i8* } %0, 0
  %2 = extractvalue { i32*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i32*, i8* } undef, i32* %1, 0
  %4 = insertvalue { i32*, i8* } %3, i8* %2, 1
  ret { i32*, i8* } %4
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64 } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7098389353327248E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* align 8 dereferenceable(72) %self) unnamed_addr #0 {
start:
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
  %0 = call { i64*, i64 } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17hf3aa6b6d6477fa57E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* align 8 dereferenceable(72) %self)
  %1 = extractvalue { i64*, i64 } %0, 0
  %2 = extractvalue { i64*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64 } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64 } %3, i64 %2, 1
  ret { i64*, i64 } %4
}

; <core::iter::sources::repeat::Repeat<A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN103_$LT$core..iter..sources..repeat..Repeat$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h43fe59b6e98f445bE"(i64* align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
; call core::clone::impls::<impl core::clone::Clone for u64>::clone
  %_2 = call i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u64$GT$5clone17h42031b8a38370fe3E"(i64* align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to %"core::option::Option<u64>::Some"*
  %2 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %1, i32 0, i32 1
  store i64 %_2, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !range !2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; <core::iter::sources::repeat::Repeat<A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN103_$LT$core..iter..sources..repeat..Repeat$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hea4b44e5b31f8e4aE"(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = alloca { i32, i32 }, align 4
; call core::clone::impls::<impl core::clone::Clone for u32>::clone
  %_2 = call i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u32$GT$5clone17h3587b46fc781e72cE"(i32* align 4 dereferenceable(4) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*
  %2 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %1, i32 0, i32 1
  store i32 %_2, i32* %2, align 4
  %3 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4, !range !3
  %6 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = insertvalue { i32, i32 } undef, i32 %5, 0
  %9 = insertvalue { i32, i32 } %8, i32 %7, 1
  ret { i32, i32 } %9
}

; <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN106_$LT$core..iter..adapters..chain..Chain$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5c78bb11d041476bE"(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_16 = alloca i8, align 1
  %_15 = alloca i8, align 1
  %_8 = alloca { i32*, i8* }, align 8
  %_5 = alloca { i32, i32 }, align 4
  %_2 = alloca { i32, i32 }, align 4
  %1 = alloca { i32, i32 }, align 4
  store i8 0, i8* %_15, align 1
  store i8 0, i8* %_16, align 1
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %self to { i32*, i8* }*
  %3 = bitcast { i32*, i8* }* %2 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_3 = select i1 %5, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 1, i8* %_16, align 1
  %6 = bitcast { i32, i32 }* %_2 to i32*
  store i32 0, i32* %6, align 4
  br label %bb8

bb3:                                              ; preds = %start
  %7 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %self to { i32*, i8* }*
  %iter = bitcast { i32*, i8* }* %7 to { i32*, i32* }*
  store i8 1, i8* %_15, align 1
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %8 = call { i32, i32 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6c46c496b0d21dddE"({ i32*, i32* }* align 8 dereferenceable(16) %iter)
  store { i32, i32 } %8, { i32, i32 }* %_5, align 4
  br label %bb4

bb4:                                              ; preds = %bb3
  %9 = bitcast { i32, i32 }* %_5 to i32*
  %10 = load i32, i32* %9, align 4, !range !3
  %_7 = zext i32 %10 to i64
  %11 = icmp eq i64 %_7, 0
  br i1 %11, label %bb6, label %bb5

bb6:                                              ; preds = %bb4
  %12 = bitcast { i32*, i8* }* %_8 to {}**
  store {}* null, {}** %12, align 8
  br label %bb19

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_15, align 1
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_5, i32 0, i32 0
  %item.0 = load i32, i32* %13, align 4, !range !3
  %14 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_5, i32 0, i32 1
  %item.1 = load i32, i32* %14, align 4
  store i8 1, i8* %_16, align 1
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_2, i32 0, i32 0
  store i32 %item.0, i32* %15, align 4
  %16 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_2, i32 0, i32 1
  store i32 %item.1, i32* %16, align 4
  br label %bb21

bb21:                                             ; preds = %bb19, %bb5
  %17 = load i8, i8* %_15, align 1, !range !4
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb20, label %bb7

bb19:                                             ; preds = %bb6
  %19 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %self to { i32*, i8* }*
  %20 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %_8, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %_8, i32 0, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %19, i32 0, i32 0
  store i32* %21, i32** %24, align 8
  %25 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %19, i32 0, i32 1
  store i8* %23, i8** %25, align 8
  store i8 1, i8* %_16, align 1
  %26 = bitcast { i32, i32 }* %_2 to i32*
  store i32 0, i32* %26, align 4
  br label %bb21

bb18:                                             ; No predecessors!
  %27 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %self to { i32*, i8* }*
  %28 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %_8, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %_8, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %27, i32 0, i32 0
  store i32* %29, i32** %32, align 8
  %33 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %27, i32 0, i32 1
  store i8* %31, i8** %33, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb18
  %34 = bitcast { i8*, i32 }* %0 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb7:                                              ; preds = %bb20, %bb21
  store i8 0, i8* %_15, align 1
  br label %bb8

bb20:                                             ; preds = %bb21
  br label %bb7

bb8:                                              ; preds = %bb1, %bb7
  %40 = bitcast { i32, i32 }* %_2 to i32*
  %41 = load i32, i32* %40, align 4, !range !3
  %_10 = zext i32 %41 to i64
  %42 = icmp eq i64 %_10, 0
  br i1 %42, label %bb10, label %bb9

bb10:                                             ; preds = %bb8
  %43 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>", %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %self, i32 0, i32 1
  %44 = bitcast { i32, i32 }* %43 to i32*
  %45 = load i32, i32* %44, align 8, !range !3
  %_11 = zext i32 %45 to i64
  switch i64 %_11, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb9:                                              ; preds = %bb8
  store i8 0, i8* %_16, align 1
  %46 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_2, i32 0, i32 0
  %item.01 = load i32, i32* %46, align 4, !range !3
  %47 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_2, i32 0, i32 1
  %item.12 = load i32, i32* %47, align 4
  %48 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 0
  store i32 %item.01, i32* %48, align 4
  %49 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1
  store i32 %item.12, i32* %49, align 4
  br label %bb23

bb23:                                             ; preds = %bb11, %bb14, %bb9
  %50 = load i8, i8* %_16, align 1, !range !4
  %51 = trunc i8 %50 to i1
  br i1 %51, label %bb22, label %bb15

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %52 = bitcast { i32, i32 }* %1 to i32*
  store i32 0, i32* %52, align 4
  br label %bb23

bb13:                                             ; preds = %bb10
  %53 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>", %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %self, i32 0, i32 1
  %54 = bitcast { i32, i32 }* %53 to %"core::option::Option<core::iter::sources::repeat::Repeat<u32>>::Some"*
  %iter3 = getelementptr inbounds %"core::option::Option<core::iter::sources::repeat::Repeat<u32>>::Some", %"core::option::Option<core::iter::sources::repeat::Repeat<u32>>::Some"* %54, i32 0, i32 1
; invoke <core::iter::sources::repeat::Repeat<A> as core::iter::traits::iterator::Iterator>::next
  %55 = invoke { i32, i32 } @"_ZN103_$LT$core..iter..sources..repeat..Repeat$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hea4b44e5b31f8e4aE"(i32* align 4 dereferenceable(4) %iter3)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  store { i32, i32 } %55, { i32, i32 }* %1, align 4
  br label %bb23

bb16:                                             ; preds = %cleanup
  br label %bb17

cleanup:                                          ; preds = %bb13
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  %58 = extractvalue { i8*, i32 } %56, 1
  %59 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %58, i32* %60, align 8
  br label %bb16

bb15:                                             ; preds = %bb22, %bb23
  store i8 0, i8* %_16, align 1
  %61 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 0
  %62 = load i32, i32* %61, align 4, !range !3
  %63 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = insertvalue { i32, i32 } undef, i32 %62, 0
  %66 = insertvalue { i32, i32 } %65, i32 %64, 1
  ret { i32, i32 } %66

bb22:                                             ; preds = %bb23
  br label %bb15
}

; <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN106_$LT$core..iter..adapters..chain..Chain$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h99621c91a85a39daE"(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* align 8 dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_16 = alloca i8, align 1
  %_15 = alloca i8, align 1
  %_8 = alloca { i64*, i8* }, align 8
  %_5 = alloca { i64, i64 }, align 8
  %_2 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_15, align 1
  store i8 0, i8* %_16, align 1
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %self to { i64*, i8* }*
  %3 = bitcast { i64*, i8* }* %2 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_3 = select i1 %5, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 1, i8* %_16, align 1
  %6 = bitcast { i64, i64 }* %_2 to i64*
  store i64 0, i64* %6, align 8
  br label %bb8

bb3:                                              ; preds = %start
  %7 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %self to { i64*, i8* }*
  %iter = bitcast { i64*, i8* }* %7 to { i64*, i64* }*
  store i8 1, i8* %_15, align 1
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %8 = call { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd8aaa56823ac174cE"({ i64*, i64* }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %8, { i64, i64 }* %_5, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %9 = bitcast { i64, i64 }* %_5 to i64*
  %_7 = load i64, i64* %9, align 8, !range !2
  %10 = icmp eq i64 %_7, 0
  br i1 %10, label %bb6, label %bb5

bb6:                                              ; preds = %bb4
  %11 = bitcast { i64*, i8* }* %_8 to {}**
  store {}* null, {}** %11, align 8
  br label %bb19

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_15, align 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %item.0 = load i64, i64* %12, align 8, !range !2
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %item.1 = load i64, i64* %13, align 8
  store i8 1, i8* %_16, align 1
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0
  store i64 %item.0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1
  store i64 %item.1, i64* %15, align 8
  br label %bb21

bb21:                                             ; preds = %bb19, %bb5
  %16 = load i8, i8* %_15, align 1, !range !4
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb20, label %bb7

bb19:                                             ; preds = %bb6
  %18 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %self to { i64*, i8* }*
  %19 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %_8, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %_8, i32 0, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %18, i32 0, i32 0
  store i64* %20, i64** %23, align 8
  %24 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %18, i32 0, i32 1
  store i8* %22, i8** %24, align 8
  store i8 1, i8* %_16, align 1
  %25 = bitcast { i64, i64 }* %_2 to i64*
  store i64 0, i64* %25, align 8
  br label %bb21

bb18:                                             ; No predecessors!
  %26 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %self to { i64*, i8* }*
  %27 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %_8, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %_8, i32 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %26, i32 0, i32 0
  store i64* %28, i64** %31, align 8
  %32 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %26, i32 0, i32 1
  store i8* %30, i8** %32, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb18
  %33 = bitcast { i8*, i32 }* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

bb7:                                              ; preds = %bb20, %bb21
  store i8 0, i8* %_15, align 1
  br label %bb8

bb20:                                             ; preds = %bb21
  br label %bb7

bb8:                                              ; preds = %bb1, %bb7
  %39 = bitcast { i64, i64 }* %_2 to i64*
  %_10 = load i64, i64* %39, align 8, !range !2
  %40 = icmp eq i64 %_10, 0
  br i1 %40, label %bb10, label %bb9

bb10:                                             ; preds = %bb8
  %41 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>", %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %self, i32 0, i32 1
  %42 = bitcast { i64, i64 }* %41 to i64*
  %_11 = load i64, i64* %42, align 8, !range !2
  switch i64 %_11, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb9:                                              ; preds = %bb8
  store i8 0, i8* %_16, align 1
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0
  %item.01 = load i64, i64* %43, align 8, !range !2
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1
  %item.12 = load i64, i64* %44, align 8
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  store i64 %item.01, i64* %45, align 8
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 %item.12, i64* %46, align 8
  br label %bb23

bb23:                                             ; preds = %bb11, %bb14, %bb9
  %47 = load i8, i8* %_16, align 1, !range !4
  %48 = trunc i8 %47 to i1
  br i1 %48, label %bb22, label %bb15

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %49 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %49, align 8
  br label %bb23

bb13:                                             ; preds = %bb10
  %50 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>", %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %self, i32 0, i32 1
  %51 = bitcast { i64, i64 }* %50 to %"core::option::Option<core::iter::sources::repeat::Repeat<u64>>::Some"*
  %iter3 = getelementptr inbounds %"core::option::Option<core::iter::sources::repeat::Repeat<u64>>::Some", %"core::option::Option<core::iter::sources::repeat::Repeat<u64>>::Some"* %51, i32 0, i32 1
; invoke <core::iter::sources::repeat::Repeat<A> as core::iter::traits::iterator::Iterator>::next
  %52 = invoke { i64, i64 } @"_ZN103_$LT$core..iter..sources..repeat..Repeat$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h43fe59b6e98f445bE"(i64* align 8 dereferenceable(8) %iter3)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  store { i64, i64 } %52, { i64, i64 }* %1, align 8
  br label %bb23

bb16:                                             ; preds = %cleanup
  br label %bb17

cleanup:                                          ; preds = %bb13
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %55, i32* %57, align 8
  br label %bb16

bb15:                                             ; preds = %bb22, %bb23
  store i8 0, i8* %_16, align 1
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %59 = load i64, i64* %58, align 8, !range !2
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = insertvalue { i64, i64 } undef, i64 %59, 0
  %63 = insertvalue { i64, i64 } %62, i64 %61, 1
  ret { i64, i64 } %63

bb22:                                             ; preds = %bb23
  br label %bb15
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h844f79f04eae422fE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb757973abf033026E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_4, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h4e1d21ffa8db218eE(i8* %2, i64 %_7)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hbb63d45b048f6576E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h4b076e79315b7f73E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_4, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h472ae3fefddecc24E(i8* %2, i64 %_7)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h0bfe4d6d8cb5351eE"(i64 %self.0, i64 %self.1, [0 x i32]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = bitcast [0 x i32]* %slice.0 to i32*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i32, i32* %1, i64 %self.0
  store i32* %2, i32** %0, align 8
  %_3.i = load i32*, i32** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x i32]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hc8b63ca4d761e8d9E(i32* %_3.i, i64 %_7)
  %4 = extractvalue { [0 x i32]*, i64 } %3, 0
  %5 = extractvalue { [0 x i32]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %4, 0
  %7 = insertvalue { [0 x i32]*, i64 } %6, i64 %5, 1
  ret { [0 x i32]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7916f2e980090bccE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = bitcast [0 x i8]* %slice.0 to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, i8* %1, i64 %self.0
  store i8* %2, i8** %0, align 8
  %_3.i = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h4520bf7c57878365E(i8* %_3.i, i64 %_7)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h972c5404ca8e50e2E"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_3 = icmp ugt i64 %self.0, %self.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_8 = icmp ugt i64 %self.1, %slice.1
  br i1 %_8, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h844f79f04eae422fE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_15.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_15.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_15.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_15.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17ha6c49e6f1268df51E"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_3 = icmp ugt i64 %self.0, %self.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_8 = icmp ugt i64 %self.1, %slice.1
  br i1 %_8, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hbb63d45b048f6576E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_15.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_15.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_15.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_15.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h628fc2ec86f30067E"(i64 %self.0, i64 %self.1, [0 x i32]* nonnull align 4 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_4 = icmp ugt i64 %self.0, %self.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1
  br i1 %_9, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h0bfe4d6d8cb5351eE"(i64 %self.0, i64 %self.1, [0 x i32]* %slice.0, i64 %slice.1)
  %_18.0 = extractvalue { [0 x i32]*, i64 } %1, 0
  %_18.1 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_18.0, 0
  %3 = insertvalue { [0 x i32]*, i64 } %2, i64 %_18.1, 1
  ret { [0 x i32]*, i64 } %3
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h60be4cb6409d06c4E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_3 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %self, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %7 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17ha6c49e6f1268df51E"(i64 %4, i64 %6, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %8 = extractvalue { [0 x i8]*, i64 } %7, 0
  %9 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1
  ret { [0 x i8]*, i64 } %11
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17haa61ceb8c00f1a83E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
; call core::ptr::metadata::metadata
  %0 = call i64 @_ZN4core3ptr8metadata8metadata17h92b3035e94977a45E([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_3 to i64*
  store i64 %self, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %7 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7916f2e980090bccE"(i64 %4, i64 %6, [0 x i8]* %slice.0, i64 %slice.1)
  %8 = extractvalue { [0 x i8]*, i64 } %7, 0
  %9 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1
  ret { [0 x i8]*, i64 } %11
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4f11031d6b5b9e9dE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_4 = icmp ugt i64 %self, %slice.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17haa61ceb8c00f1a83E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb3

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17hfc14514b4a7e8b02E(i64 %self, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
  unreachable

bb3:                                              ; preds = %bb2
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_13.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_13.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h21afc4d9f07913a5E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>") dereferenceable(72) %0, i64* nonnull %a.0, i64* %a.1, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture dereferenceable(32) %b) unnamed_addr #1 {
start:
  %_4 = alloca %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>", align 8
  %1 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %_4 to i8*
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %b to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  %3 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* %0 to { i64*, i64* }*
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 0
  store i64* %a.0, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 1
  store i64* %a.1, i64** %5, align 8
  %6 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* %0, i32 0, i32 1
  %7 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %6 to i8*
  %8 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false)
  %9 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* %0, i32 0, i32 2
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* %0, i32 0, i32 3
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* %0, i32 0, i32 4
  store i64 0, i64* %11, align 8
  ret void
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h7c558ac7de84bb56E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>") dereferenceable(56) %0, i32* nonnull %1, i32* %2, i32* nonnull %3, i32* %4) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %5 = alloca { i8*, i32 }, align 8
  %b = alloca { i32*, i32* }, align 8
  %a = alloca { i32*, i32* }, align 8
  %6 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %a, i32 0, i32 0
  store i32* %1, i32** %6, align 8
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %a, i32 0, i32 1
  store i32* %2, i32** %7, align 8
  %8 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %b, i32 0, i32 0
  store i32* %3, i32** %8, align 8
  %9 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %b, i32 0, i32 1
  store i32* %4, i32** %9, align 8
; invoke core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %a_len = invoke i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h3d3e9afb1a27387dE({ i32*, i32* }* align 8 dereferenceable(16) %a)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %_7 = invoke i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h66a63a0890f0cec9E({ i32*, i32* }* align 8 dereferenceable(16) %b)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb2, %bb1, %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
; invoke core::cmp::min
  %len = invoke i64 @_ZN4core3cmp3min17h8b3b6792a89714daE(i64 %a_len, i64 %_7)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %15 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %a, i32 0, i32 0
  %_9.0 = load i32*, i32** %15, align 8, !nonnull !5
  %16 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %a, i32 0, i32 1
  %_9.1 = load i32*, i32** %16, align 8
  %17 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %b, i32 0, i32 0
  %_10.0 = load i32*, i32** %17, align 8, !nonnull !5
  %18 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %b, i32 0, i32 1
  %_10.1 = load i32*, i32** %18, align 8
  %19 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %0 to { i32*, i32* }*
  %20 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %19, i32 0, i32 0
  store i32* %_9.0, i32** %20, align 8
  %21 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %19, i32 0, i32 1
  store i32* %_9.1, i32** %21, align 8
  %22 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %0, i32 0, i32 1
  %23 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %22, i32 0, i32 0
  store i32* %_10.0, i32** %23, align 8
  %24 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %22, i32 0, i32 1
  store i32* %_10.1, i32** %24, align 8
  %25 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %0, i32 0, i32 2
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %0, i32 0, i32 3
  store i64 %len, i64* %26, align 8
  %27 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %0, i32 0, i32 4
  store i64 %a_len, i64* %27, align 8
  ret void

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb5
  %28 = bitcast { i8*, i32 }* %5 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17he0a45cdc9f224568E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>") dereferenceable(64) %0, i32* nonnull %a.0, i32* %a.1, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture dereferenceable(24) %b) unnamed_addr #1 {
start:
  %_4 = alloca %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>", align 8
  %1 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %_4 to i8*
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %b to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* %0 to { i32*, i32* }*
  %4 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 0
  store i32* %a.0, i32** %4, align 8
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 1
  store i32* %a.1, i32** %5, align 8
  %6 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* %0, i32 0, i32 1
  %7 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %6 to i8*
  %8 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* %0, i32 0, i32 2
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* %0, i32 0, i32 3
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* %0, i32 0, i32 4
  store i64 0, i64* %11, align 8
  ret void
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i8* } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17hbadc28d9b2360bf8E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* align 8 dereferenceable(56) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_6 = alloca { i32*, i32* }, align 8
  %1 = alloca { i32*, i8* }, align 8
  %2 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self, i32 0, i32 2
  %_3 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self, i32 0, i32 3
  %_4 = load i64, i64* %3, align 8
  %_2 = icmp ult i64 %_3, %_4
  br i1 %_2, label %bb1, label %bb4

bb4:                                              ; preds = %start
  br i1 false, label %bb6, label %bb5

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self, i32 0, i32 2
  %i = load i64, i64* %4, align 8
  %5 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self, i32 0, i32 2
  %6 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  store i64 %8, i64* %5, align 8
  %_8 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self to { i32*, i32* }*
; call <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_7 = call align 4 dereferenceable(4) i32* @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h944bee99869e0288E"({ i32*, i32* }* align 8 dereferenceable(16) %_8, i64 %i)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self, i32 0, i32 1
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_10 = invoke align 4 dereferenceable(4) i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17hf51e6826ba568fd7E"({ i32*, i32* }* align 8 dereferenceable(16) %_11, i64 %i)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %9 = bitcast { i32*, i32* }* %_6 to i32**
  store i32* %_7, i32** %9, align 8
  %10 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_6, i32 0, i32 1
  store i32* %_10, i32** %10, align 8
  %11 = bitcast { i32*, i8* }* %1 to { i32*, i32* }*
  %12 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_6, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8, !nonnull !5
  %14 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_6, i32 0, i32 1
  %15 = load i32*, i32** %14, align 8, !nonnull !5
  %16 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %11, i32 0, i32 0
  store i32* %13, i32** %16, align 8
  %17 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %11, i32 0, i32 1
  store i32* %15, i32** %17, align 8
  br label %bb13

bb14:                                             ; preds = %cleanup
  br label %bb15

cleanup:                                          ; preds = %bb2
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb14

bb15:                                             ; preds = %bb14
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb13:                                             ; preds = %bb12, %bb3
  %29 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %1, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %1, i32 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = insertvalue { i32*, i8* } undef, i32* %30, 0
  %34 = insertvalue { i32*, i8* } %33, i8* %32, 1
  ret { i32*, i8* } %34

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_13, align 1
  br label %bb7

bb6:                                              ; preds = %bb4
  %35 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self, i32 0, i32 2
  %_15 = load i64, i64* %35, align 8
  %36 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self, i32 0, i32 4
  %_16 = load i64, i64* %36, align 8
  %_14 = icmp ult i64 %_15, %_16
  %37 = zext i1 %_14 to i8
  store i8 %37, i8* %_13, align 1
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  %38 = load i8, i8* %_13, align 1, !range !4
  %39 = trunc i8 %38 to i1
  br i1 %39, label %bb8, label %bb11

bb11:                                             ; preds = %bb7
  %40 = bitcast { i32*, i8* }* %1 to {}**
  store {}* null, {}** %40, align 8
  br label %bb12

bb8:                                              ; preds = %bb7
  %41 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self, i32 0, i32 2
  %i1 = load i64, i64* %41, align 8
  %42 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self, i32 0, i32 2
  %43 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self, i32 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self, i32 0, i32 3
  %47 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self, i32 0, i32 3
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %46, align 8
  %_19 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self to { i32*, i32* }*
; call <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_18 = call align 4 dereferenceable(4) i32* @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h944bee99869e0288E"({ i32*, i32* }* align 8 dereferenceable(16) %_19, i64 %i1)
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb10

bb10:                                             ; preds = %bb9
  %50 = bitcast { i32*, i8* }* %1 to {}**
  store {}* null, {}** %50, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  br label %bb13
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64 } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17hf3aa6b6d6477fa57E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* align 8 dereferenceable(72) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca { i64*, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
  %_3 = alloca i64*, align 8
  %1 = alloca { i64*, i64 }, align 8
  %_5 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* %self to { i64*, i64* }*
; call <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::next
  %_4 = call align 8 dereferenceable_or_null(8) i64* @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h639e37cde791d7cdE"({ i64*, i64* }* align 8 dereferenceable(16) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %2 = call align 8 dereferenceable_or_null(8) i64* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4be3883a619f1cb7E"(i64* align 8 dereferenceable_or_null(8) %_4)
  store i64* %2, i64** %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64** %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_6 = select i1 %5, i64 1, i64 0
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %val = load i64*, i64** %_3, align 8, !nonnull !5
  %_13 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* %self, i32 0, i32 1
; invoke <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next
  %6 = invoke { i64, i64 } @"_ZN106_$LT$core..iter..adapters..chain..Chain$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h99621c91a85a39daE"(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* align 8 dereferenceable(32) %_13)
          to label %bb7 unwind label %cleanup

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %7 = call { i64*, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h94f76cd94537a2efE"()
  store { i64*, i64 } %7, { i64*, i64 }* %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb13

bb13:                                             ; preds = %bb12, %bb6
  br label %bb14

bb7:                                              ; preds = %bb3
  %_12.0 = extractvalue { i64, i64 } %6, 0
  %_12.1 = extractvalue { i64, i64 } %6, 1
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %8 = invoke { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h13e2e561e249fef8E"(i64 %_12.0, i64 %_12.1)
          to label %bb8 unwind label %cleanup

bb15:                                             ; preds = %cleanup
  br label %bb16

cleanup:                                          ; preds = %bb11, %bb7, %bb3
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb15

bb8:                                              ; preds = %bb7
  store { i64, i64 } %8, { i64, i64 }* %_11, align 8
  %14 = bitcast { i64, i64 }* %_11 to i64*
  %_14 = load i64, i64* %14, align 8, !range !2
  switch i64 %_14, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb9:                                              ; preds = %bb8
  %15 = bitcast { i64, i64 }* %_11 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue", %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue"* %15, i32 0, i32 1
  %val1 = load i64, i64* %16, align 8
  %17 = bitcast { i64*, i64 }* %_18 to i64**
  store i64* %val, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_18, i32 0, i32 1
  store i64 %val1, i64* %18, align 8
  %19 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8, !nonnull !5
  %21 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_18, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  store i64* %20, i64** %23, align 8
  %24 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %22, i64* %24, align 8
  br label %bb14

bb11:                                             ; preds = %bb8
; invoke <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %25 = invoke { i64*, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h94f76cd94537a2efE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  store { i64*, i64 } %25, { i64*, i64 }* %1, align 8
  br label %bb13

bb16:                                             ; preds = %bb15
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

bb14:                                             ; preds = %bb9, %bb13
  %32 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64*, i64 } undef, i64* %33, 0
  %37 = insertvalue { i64*, i64 } %36, i64 %35, 1
  ret { i64*, i64 } %37
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32 } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17hf9810064999ac0ffE"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* align 8 dereferenceable(64) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca { i32*, i32 }, align 8
  %_11 = alloca { i32, i32 }, align 4
  %_3 = alloca i32*, align 8
  %1 = alloca { i32*, i32 }, align 8
  %_5 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* %self to { i32*, i32* }*
; call <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::next
  %_4 = call align 4 dereferenceable_or_null(4) i32* @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h890a95dd5d1d61a6E"({ i32*, i32* }* align 8 dereferenceable(16) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %2 = call align 4 dereferenceable_or_null(4) i32* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb6fd2dc2bffb63beE"(i32* align 4 dereferenceable_or_null(4) %_4)
  store i32* %2, i32** %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i32** %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_6 = select i1 %5, i64 1, i64 0
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %val = load i32*, i32** %_3, align 8, !nonnull !5
  %_13 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>", %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* %self, i32 0, i32 1
; invoke <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next
  %6 = invoke { i32, i32 } @"_ZN106_$LT$core..iter..adapters..chain..Chain$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5c78bb11d041476bE"(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* align 8 dereferenceable(24) %_13)
          to label %bb7 unwind label %cleanup

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %7 = call { i32*, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hc4662f7347086ddfE"()
  store { i32*, i32 } %7, { i32*, i32 }* %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb13

bb13:                                             ; preds = %bb12, %bb6
  br label %bb14

bb7:                                              ; preds = %bb3
  %_12.0 = extractvalue { i32, i32 } %6, 0
  %_12.1 = extractvalue { i32, i32 } %6, 1
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %8 = invoke { i32, i32 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h424c76cd5fb4fd01E"(i32 %_12.0, i32 %_12.1)
          to label %bb8 unwind label %cleanup

bb15:                                             ; preds = %cleanup
  br label %bb16

cleanup:                                          ; preds = %bb11, %bb7, %bb3
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb15

bb8:                                              ; preds = %bb7
  store { i32, i32 } %8, { i32, i32 }* %_11, align 4
  %14 = bitcast { i32, i32 }* %_11 to i32*
  %15 = load i32, i32* %14, align 4, !range !3
  %_14 = zext i32 %15 to i64
  switch i64 %_14, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb9:                                              ; preds = %bb8
  %16 = bitcast { i32, i32 }* %_11 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u32>::Continue"*
  %17 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u32>::Continue", %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u32>::Continue"* %16, i32 0, i32 1
  %val1 = load i32, i32* %17, align 4
  %18 = bitcast { i32*, i32 }* %_18 to i32**
  store i32* %val, i32** %18, align 8
  %19 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %_18, i32 0, i32 1
  store i32 %val1, i32* %19, align 8
  %20 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %_18, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8, !nonnull !5
  %22 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %_18, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %1, i32 0, i32 0
  store i32* %21, i32** %24, align 8
  %25 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb14

bb11:                                             ; preds = %bb8
; invoke <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %26 = invoke { i32*, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hc4662f7347086ddfE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  store { i32*, i32 } %26, { i32*, i32 }* %1, align 8
  br label %bb13

bb16:                                             ; preds = %bb15
  %27 = bitcast { i8*, i32 }* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1
  resume { i8*, i32 } %32

bb14:                                             ; preds = %bb9, %bb13
  %33 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %1, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %1, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i32*, i32 } undef, i32* %34, 0
  %38 = insertvalue { i32*, i32 } %37, i32 %36, 1
  ret { i32*, i32 } %38
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h49c5a6cea15c8325E"(i8* nonnull %unique) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9c889871e03ba045E"(i8* nonnull %unique)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8d6e12f16857b6f7E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17haeae8bd1fee6fd41E"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h07252522734ff245E"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = alloca { i64, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h64fea2b3c1213324E"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %1 to %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err"*
  %3 = bitcast %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err"* %2 to %"core::alloc::layout::LayoutError"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h1bbfa09b341a55beE"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = alloca { i8*, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he7ae3374111d64beE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i8*, i64 }* %1 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err"*
  %3 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err"* %2 to %"core::alloc::AllocError"*
  %4 = bitcast { i8*, i64 }* %1 to {}**
  store {}* null, {}** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5f0a9159f59021aE"(%"core::result::Result<jitter::JitterRng, jitter::TimerError>"* noalias nocapture sret(%"core::result::Result<jitter::JitterRng, jitter::TimerError>") dereferenceable(2120) %0, i8 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 {
start:
  %residual = alloca i8, align 1
  store i8 %1, i8* %residual, align 1
  %e = load i8, i8* %residual, align 1, !range !6
; call <T as core::convert::From<T>>::from
  %_3 = call i8 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd9c2335db4e907d9E"(i8 %e), !range !6
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<jitter::JitterRng, jitter::TimerError>"* %0 to %"core::result::Result<jitter::JitterRng, jitter::TimerError>::Err"*
  %4 = getelementptr inbounds %"core::result::Result<jitter::JitterRng, jitter::TimerError>::Err", %"core::result::Result<jitter::JitterRng, jitter::TimerError>::Err"* %3, i32 0, i32 1
  store i8 %_3, i8* %4, align 1
  %5 = bitcast %"core::result::Result<jitter::JitterRng, jitter::TimerError>"* %0 to i8*
  store i8 1, i8* %5, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hec929b0d3c1c4b02E"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = alloca i64*, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7f6d579e5b7b0b24E"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast i64** %1 to %"core::result::Result<alloc::rc::Rc<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>, std::thread::local::AccessError>::Err"*
  %3 = bitcast %"core::result::Result<alloc::rc::Rc<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>, std::thread::local::AccessError>::Err"* %2 to %"std::thread::local::AccessError"*
  %4 = bitcast i64** %1 to {}**
  store {}* null, {}** %4, align 8
  %5 = load i64*, i64** %1, align 8
  ret i64* %5
}

; <T as core::any::Any>::type_id
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17hb115dffdb29605deE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::any::TypeId::of
  %0 = call i64 @_ZN4core3any6TypeId2of17h1c28eb9c255822fcE()
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; std::sys_common::backtrace::__rust_end_short_backtrace
; Function Attrs: noinline noreturn nonlazybind uwtable
define void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17hd878de573aafc269E(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", align 8
  %1 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_2 to i8*
  %2 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call std::panicking::begin_panic::{{closure}}
  call void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17h86183a3e378f15bcE"(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_2) #17
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::hint::black_box
  invoke void @_ZN4core4hint9black_box17h0d63087dc1e69ab4E()
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.trap()
  unreachable

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13
}

; std::fs::OpenOptions::open
; Function Attrs: nonlazybind uwtable
define void @_ZN3std2fs11OpenOptions4open17h44c609392d891c4fE(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %0, %"std::fs::OpenOptions"* align 4 dereferenceable(16) %self, %"std::path::Path"* nonnull align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %path = alloca { %"std::path::Path"*, i64 }, align 8
  %4 = getelementptr inbounds { %"std::path::Path"*, i64 }, { %"std::path::Path"*, i64 }* %path, i32 0, i32 0
  store %"std::path::Path"* %1, %"std::path::Path"** %4, align 8
  %5 = getelementptr inbounds { %"std::path::Path"*, i64 }, { %"std::path::Path"*, i64 }* %path, i32 0, i32 1
  store i64 %2, i64* %5, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %6 = invoke { %"std::path::Path"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17hacc722eceed7a74bE"({ %"std::path::Path"*, i64 }* align 8 dereferenceable(16) %path)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { %"std::path::Path"*, i64 } %6, 0
  %_5.1 = extractvalue { %"std::path::Path"*, i64 } %6, 1
; invoke std::fs::OpenOptions::_open
  invoke void @_ZN3std2fs11OpenOptions5_open17h34766febe2477c9eE(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %0, %"std::fs::OpenOptions"* align 4 dereferenceable(16) %self, %"std::path::Path"* nonnull align 1 %_5.0, i64 %_5.1)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  br label %bb3

bb5:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %3 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17

bb3:                                              ; preds = %bb2
  ret void
}

; std::fs::File::open
; Function Attrs: nonlazybind uwtable
define void @_ZN3std2fs4File4open17h127bb928f35db29aE(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca i128, align 8
  %4 = alloca { i8*, i32 }, align 8
  %_5 = alloca %"std::fs::OpenOptions", align 4
  %path = alloca { [0 x i8]*, i64 }, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %path, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %path, i32 0, i32 1
  store i64 %2, i64* %6, align 8
; invoke std::fs::OpenOptions::new
  %7 = invoke i128 @_ZN3std2fs11OpenOptions3new17hef90256f8dad80afE()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i128 %7, i128* %3, align 8
  %8 = bitcast %"std::fs::OpenOptions"* %_5 to i8*
  %9 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 8 %9, i64 16, i1 false)
; invoke std::fs::OpenOptions::read
  %_3 = invoke align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions4read17h0a89fa77312f677eE(%"std::fs::OpenOptions"* align 4 dereferenceable(16) %_5, i1 zeroext true)
          to label %bb2 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  br label %bb7

cleanup:                                          ; preds = %bb3, %bb2, %bb1, %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %15 = invoke { %"std::path::Path"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h1736cae25243c3aeE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %path)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_6.0 = extractvalue { %"std::path::Path"*, i64 } %15, 0
  %_6.1 = extractvalue { %"std::path::Path"*, i64 } %15, 1
; invoke std::fs::OpenOptions::open
  invoke void @_ZN3std2fs11OpenOptions4open17h44c609392d891c4fE(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %0, %"std::fs::OpenOptions"* align 4 dereferenceable(16) %_3, %"std::path::Path"* nonnull align 1 %_6.0, i64 %_6.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br label %bb5

bb7:                                              ; preds = %bb6
  %16 = bitcast { i8*, i32 }* %4 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb4
  ret void
}

; std::io::default_read_exact
; Function Attrs: nonlazybind uwtable
define i128 @_ZN3std2io18default_read_exact17h077a2c38a5c45d59E(i32* align 4 dereferenceable(4) %this, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i128, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_36 = alloca i8, align 1
  %_31 = alloca i8, align 1
  %_30 = alloca %"std::io::error::Error", align 8
  %_26 = alloca %"std::io::error::Error", align 8
  %e1 = alloca %"std::io::error::Error", align 8
  %_22 = alloca i8, align 1
  %e = alloca %"std::io::error::Error"*, align 8
  %_16 = alloca i64, align 8
  %_6 = alloca %"core::result::Result<usize, std::io::error::Error>", align 8
  %4 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %buf = alloca { [0 x i8]*, i64 }, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  store i64 %1, i64* %6, align 8
  store i8 0, i8* %_36, align 1
  br label %bb1

bb1:                                              ; preds = %bb24, %start
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_5.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !5
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_5.1 = load i64, i64* %8, align 8
; call core::slice::<impl [T]>::is_empty
  %_4 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha1eecae943d1a0faE"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb3, label %bb15

bb15:                                             ; preds = %bb2
  br label %bb16

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_8.0 = load [0 x i8]*, [0 x i8]** %9, align 8, !nonnull !5
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_8.1 = load i64, i64* %10, align 8
  store i8 1, i8* %_36, align 1
; call <std::fs::File as std::io::Read>::read
  call void @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$4read17h8c6e561e46003d97E"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24) %_6, i32* align 4 dereferenceable(4) %this, [0 x i8]* nonnull align 1 %_8.0, i64 %_8.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %11 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*
  %_9 = load i64, i64* %11, align 8, !range !2
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb10
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %12 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Ok"*
  %13 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", %"core::result::Result<usize, std::io::error::Error>::Ok"* %12, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %bb7, label %bb8

bb10:                                             ; preds = %bb4
  %16 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %17 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %16, i32 0, i32 1
  store %"std::io::error::Error"* %17, %"std::io::error::Error"** %e, align 8
  %_23 = load %"std::io::error::Error"*, %"std::io::error::Error"** %e, align 8, !nonnull !5
; invoke std::io::error::Error::kind
  %18 = invoke i8 @_ZN3std2io5error5Error4kind17hda5ca5cb238715f7E(%"std::io::error::Error"* align 8 dereferenceable(16) %_23)
          to label %bb11 unwind label %cleanup, !range !7

bb11:                                             ; preds = %bb10
  store i8 %18, i8* %_22, align 1
; invoke <std::io::error::ErrorKind as core::cmp::PartialEq>::eq
  %_20 = invoke zeroext i1 @"_ZN66_$LT$std..io..error..ErrorKind$u20$as$u20$core..cmp..PartialEq$GT$2eq17h14f36e102e00aa7aE"(i8* align 1 dereferenceable(1) %_22, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc796, i32 0, i32 0, i32 0))
          to label %bb12 unwind label %cleanup

bb30:                                             ; preds = %cleanup
  %19 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*
  %_38 = load i64, i64* %19, align 8, !range !2
  %20 = icmp eq i64 %_38, 1
  br i1 %20, label %bb28, label %bb23

cleanup:                                          ; preds = %bb8, %bb11, %bb10
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb30

bb12:                                             ; preds = %bb11
  br i1 %_20, label %bb13, label %bb14

bb14:                                             ; preds = %bb12
  store i8 0, i8* %_36, align 1
  %26 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %27 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %26, i32 0, i32 1
  %28 = bitcast %"std::io::error::Error"* %e1 to i8*
  %29 = bitcast %"std::io::error::Error"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false)
  %30 = bitcast %"std::io::error::Error"* %_26 to i8*
  %31 = bitcast %"std::io::error::Error"* %e1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 16, i1 false)
  %32 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %33 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %32 to %"std::io::error::Error"*
  %34 = bitcast %"std::io::error::Error"* %33 to i8*
  %35 = bitcast %"std::io::error::Error"* %_26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false)
  store i8 0, i8* %_36, align 1
  br label %bb22

bb13:                                             ; preds = %bb12
  br label %bb27

bb27:                                             ; preds = %bb9, %bb13
  %36 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*
  %_37 = load i64, i64* %36, align 8, !range !2
  %37 = icmp eq i64 %_37, 1
  br i1 %37, label %bb25, label %bb24

bb22:                                             ; preds = %bb21, %bb14
  %38 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to i128*
  %39 = load i128, i128* %38, align 8
  ret i128 %39

bb7:                                              ; preds = %bb5
  store i8 0, i8* %_36, align 1
  br label %bb16

bb8:                                              ; preds = %bb5
  %40 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Ok"*
  %41 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", %"core::result::Result<usize, std::io::error::Error>::Ok"* %40, i32 0, i32 1
  %n = load i64, i64* %41, align 8
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %tmp.0 = load [0 x i8]*, [0 x i8]** %42, align 8, !nonnull !5
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %tmp.1 = load i64, i64* %43, align 8
  store i64 %n, i64* %_16, align 8
  %44 = load i64, i64* %_16, align 8
; invoke core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %45 = invoke { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hf79677a6d6feda27E"([0 x i8]* nonnull align 1 %tmp.0, i64 %tmp.1, i64 %44, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1107 to %"core::panic::location::Location"*))
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %_14.0 = extractvalue { [0 x i8]*, i64 } %45, 0
  %_14.1 = extractvalue { [0 x i8]*, i64 } %45, 1
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  store [0 x i8]* %_14.0, [0 x i8]** %46, align 8
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  store i64 %_14.1, i64* %47, align 8
  br label %bb27

bb28:                                             ; preds = %bb30
  %48 = load i8, i8* %_36, align 1, !range !4
  %49 = trunc i8 %48 to i1
  br i1 %49, label %bb29, label %bb23

bb23:                                             ; preds = %bb29, %bb28, %bb30
  %50 = bitcast { i8*, i32 }* %3 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %55 = insertvalue { i8*, i32 } %54, i32 %53, 1
  resume { i8*, i32 } %55

bb29:                                             ; preds = %bb28
  %56 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %57 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %56, i32 0, i32 1
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %57) #18
  br label %bb23

bb25:                                             ; preds = %bb27
  %58 = load i8, i8* %_36, align 1, !range !4
  %59 = trunc i8 %58 to i1
  br i1 %59, label %bb26, label %bb24

bb24:                                             ; preds = %bb26, %bb25, %bb27
  store i8 0, i8* %_36, align 1
  br label %bb1

bb26:                                             ; preds = %bb25
  %60 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %61 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %60, i32 0, i32 1
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %61)
  br label %bb24

bb16:                                             ; preds = %bb15, %bb7
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_29.0 = load [0 x i8]*, [0 x i8]** %62, align 8, !nonnull !5
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_29.1 = load i64, i64* %63, align 8
; call core::slice::<impl [T]>::is_empty
  %_28 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha1eecae943d1a0faE"([0 x i8]* nonnull align 1 %_29.0, i64 %_29.1)
  br label %bb17

bb17:                                             ; preds = %bb16
  %_27 = xor i1 %_28, true
  br i1 %_27, label %bb18, label %bb20

bb20:                                             ; preds = %bb17
  %64 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to i8*
  store i8 4, i8* %64, align 8
  br label %bb21

bb18:                                             ; preds = %bb17
  store i8 37, i8* %_31, align 1
  %65 = load i8, i8* %_31, align 1, !range !7
; call std::io::error::Error::new_const
  %66 = call i128 @_ZN3std2io5error5Error9new_const17h90bb6035ed03c226E(i8 %65, { [0 x i8]*, i64 }* align 8 dereferenceable(16) bitcast (<{ i8*, [8 x i8] }>* @alloc778 to { [0 x i8]*, i64 }*))
  store i128 %66, i128* %2, align 8
  %67 = bitcast %"std::io::error::Error"* %_30 to i8*
  %68 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 16, i1 false)
  br label %bb19

bb19:                                             ; preds = %bb18
  %69 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %70 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %69 to %"std::io::error::Error"*
  %71 = bitcast %"std::io::error::Error"* %70 to i8*
  %72 = bitcast %"std::io::error::Error"* %_30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 16, i1 false)
  br label %bb21

bb21:                                             ; preds = %bb20, %bb19
  br label %bb22
}

; std::io::Read::read_exact
; Function Attrs: nonlazybind uwtable
define i128 @_ZN3std2io4Read10read_exact17he9d4b678eb630786E(i32* align 4 dereferenceable(4) %self, [0 x i8]* nonnull align 1 %buf.0, i64 %buf.1) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %1 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
; call std::io::default_read_exact
  %2 = call i128 @_ZN3std2io18default_read_exact17h077a2c38a5c45d59E(i32* align 4 dereferenceable(4) %self, [0 x i8]* nonnull align 1 %buf.0, i64 %buf.1)
  store i128 %2, i128* %0, align 8
  %3 = bitcast %"core::result::Result<(), std::io::error::Error>"* %1 to i8*
  %4 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(), std::io::error::Error>"* %1 to i128*
  %6 = load i128, i128* %5, align 8
  ret i128 %6
}

; std::io::Read::read_buf_exact
; Function Attrs: nonlazybind uwtable
define i128 @_ZN3std2io4Read14read_buf_exact17h00a1662aaeec9edcE(i32* align 4 dereferenceable(4) %self, %"std::io::readbuf::ReadBuf"* align 8 dereferenceable(32) %buf) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i8*, i32 }, align 8
  %2 = alloca i128, align 8
  %_32 = alloca i8, align 1
  %_30 = alloca i8, align 1
  %_29 = alloca %"std::io::error::Error", align 8
  %_22 = alloca %"std::io::error::Error", align 8
  %e1 = alloca %"std::io::error::Error", align 8
  %_18 = alloca i8, align 1
  %e = alloca %"std::io::error::Error", align 8
  %_10 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %3 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  store i8 0, i8* %_32, align 1
  br label %bb1

bb1:                                              ; preds = %bb16, %bb18, %start
; call std::io::readbuf::ReadBuf::remaining
  %_4 = call i64 @_ZN3std2io7readbuf7ReadBuf9remaining17h4345942bfe247e96E(%"std::io::readbuf::ReadBuf"* align 8 dereferenceable(32) %buf)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = icmp ugt i64 %_4, 0
  br i1 %_3, label %bb3, label %bb17

bb17:                                             ; preds = %bb2
  %4 = bitcast %"core::result::Result<(), std::io::error::Error>"* %3 to i8*
  store i8 4, i8* %4, align 8
  br label %bb20

bb3:                                              ; preds = %bb2
; call std::io::readbuf::ReadBuf::filled
  %5 = call { [0 x i8]*, i64 } @_ZN3std2io7readbuf7ReadBuf6filled17hde0125c00e49b7aeE(%"std::io::readbuf::ReadBuf"* align 8 dereferenceable(32) %buf)
  %_8.0 = extractvalue { [0 x i8]*, i64 } %5, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %5, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_32, align 1
; call <std::fs::File as std::io::Read>::read_buf
  %6 = call i128 @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$8read_buf17h67693fd0a7d35dc7E"(i32* align 4 dereferenceable(4) %self, %"std::io::readbuf::ReadBuf"* align 8 dereferenceable(32) %buf)
  store i128 %6, i128* %2, align 8
  %7 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_10 to i8*
  %8 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_10 to i8*
  %10 = load i8, i8* %9, align 8, !range !8
  %11 = sub i8 %10, 4
  %12 = icmp eq i8 %11, 0
  %_13 = select i1 %12, i64 0, i64 1
  switch i64 %_13, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb8
  ]

bb6:                                              ; preds = %bb5
  unreachable

bb7:                                              ; preds = %bb5
  store i8 0, i8* %_32, align 1
; call std::io::readbuf::ReadBuf::filled
  %13 = call { [0 x i8]*, i64 } @_ZN3std2io7readbuf7ReadBuf6filled17hde0125c00e49b7aeE(%"std::io::readbuf::ReadBuf"* align 8 dereferenceable(32) %buf)
  %_26.0 = extractvalue { [0 x i8]*, i64 } %13, 0
  %_26.1 = extractvalue { [0 x i8]*, i64 } %13, 1
  br label %bb13

bb8:                                              ; preds = %bb5
  %14 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_10 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %e2 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %14 to %"std::io::error::Error"*
; invoke std::io::error::Error::kind
  %15 = invoke i8 @_ZN3std2io5error5Error4kind17hda5ca5cb238715f7E(%"std::io::error::Error"* align 8 dereferenceable(16) %e2)
          to label %bb9 unwind label %cleanup, !range !7

bb9:                                              ; preds = %bb8
  store i8 %15, i8* %_18, align 1
; invoke <std::io::error::ErrorKind as core::cmp::PartialEq>::eq
  %_16 = invoke zeroext i1 @"_ZN66_$LT$std..io..error..ErrorKind$u20$as$u20$core..cmp..PartialEq$GT$2eq17h14f36e102e00aa7aE"(i8* align 1 dereferenceable(1) %_18, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc796, i32 0, i32 0, i32 0))
          to label %bb10 unwind label %cleanup

bb24:                                             ; preds = %cleanup
  %16 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_10 to i8*
  %17 = load i8, i8* %16, align 8, !range !8
  %18 = sub i8 %17, 4
  %19 = icmp eq i8 %18, 0
  %_33 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_33, 1
  br i1 %20, label %bb22, label %bb21

cleanup:                                          ; preds = %bb11, %bb9, %bb8
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb24

bb10:                                             ; preds = %bb9
  br i1 %_16, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  store i8 0, i8* %_32, align 1
  %26 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_10 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %27 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %26 to %"std::io::error::Error"*
  %28 = bitcast %"std::io::error::Error"* %e1 to i8*
  %29 = bitcast %"std::io::error::Error"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false)
  %30 = bitcast %"std::io::error::Error"* %_22 to i8*
  %31 = bitcast %"std::io::error::Error"* %e1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 16, i1 false)
  %32 = bitcast %"core::result::Result<(), std::io::error::Error>"* %3 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %33 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %32 to %"std::io::error::Error"*
  %34 = bitcast %"std::io::error::Error"* %33 to i8*
  %35 = bitcast %"std::io::error::Error"* %_22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false)
  store i8 0, i8* %_32, align 1
  br label %bb19

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_32, align 1
  %36 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_10 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %37 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %36 to %"std::io::error::Error"*
  %38 = bitcast %"std::io::error::Error"* %e to i8*
  %39 = bitcast %"std::io::error::Error"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 16, i1 false)
; invoke core::ptr::drop_in_place<std::io::error::Error>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %e)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb11
  store i8 0, i8* %_32, align 1
  br label %bb1

bb22:                                             ; preds = %bb24
  %40 = load i8, i8* %_32, align 1, !range !4
  %41 = trunc i8 %40 to i1
  br i1 %41, label %bb23, label %bb21

bb21:                                             ; preds = %bb23, %bb22, %bb24
  %42 = bitcast { i8*, i32 }* %1 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %47 = insertvalue { i8*, i32 } %46, i32 %45, 1
  resume { i8*, i32 } %47

bb23:                                             ; preds = %bb22
  %48 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_10 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %49 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %48 to %"std::io::error::Error"*
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %49) #18
  br label %bb21

bb19:                                             ; preds = %bb15, %bb12
  br label %bb20

bb13:                                             ; preds = %bb7
  %_23 = icmp eq i64 %_26.1, %_8.1
  br i1 %_23, label %bb14, label %bb16

bb16:                                             ; preds = %bb13
  br label %bb1

bb14:                                             ; preds = %bb13
  store i8 37, i8* %_30, align 1
  %50 = load i8, i8* %_30, align 1, !range !7
; call std::io::error::Error::new
  %51 = call i128 @_ZN3std2io5error5Error3new17h4c713b6c96b1194dE(i8 %50, [0 x i8]* nonnull align 1 bitcast (<{ [21 x i8] }>* @alloc1108 to [0 x i8]*), i64 21)
  store i128 %51, i128* %0, align 8
  %52 = bitcast %"std::io::error::Error"* %_29 to i8*
  %53 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 16, i1 false)
  br label %bb15

bb15:                                             ; preds = %bb14
  %54 = bitcast %"core::result::Result<(), std::io::error::Error>"* %3 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %55 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %54 to %"std::io::error::Error"*
  %56 = bitcast %"std::io::error::Error"* %55 to i8*
  %57 = bitcast %"std::io::error::Error"* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false)
  br label %bb19

bb20:                                             ; preds = %bb17, %bb19
  %58 = bitcast %"core::result::Result<(), std::io::error::Error>"* %3 to i128*
  %59 = load i128, i128* %58, align 8
  ret i128 %59
}

; std::io::error::Error::raw_os_error
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @_ZN3std2io5error5Error12raw_os_error17hcb90f52826ef5f6eE(%"std::io::error::Error"* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca { i32, i32 }, align 4
  %1 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %2 = bitcast %"std::io::error::Repr"* %1 to i8*
  %3 = load i8, i8* %2, align 8, !range !9
  %_2 = zext i8 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
    i64 2, label %bb1
    i64 3, label %bb4
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %5 = bitcast %"std::io::error::Repr"* %4 to %"std::io::error::Repr::Os"*
  %6 = getelementptr inbounds %"std::io::error::Repr::Os", %"std::io::error::Repr::Os"* %5, i32 0, i32 1
  %i = load i32, i32* %6, align 4
  %7 = bitcast { i32, i32 }* %0 to %"core::option::Option<i32>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %7, i32 0, i32 1
  store i32 %i, i32* %8, align 4
  %9 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %9, align 4
  br label %bb6

bb5:                                              ; preds = %start
  %10 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %10, align 4
  br label %bb6

bb1:                                              ; preds = %start
  %11 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %11, align 4
  br label %bb6

bb4:                                              ; preds = %start
  %12 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %12, align 4
  br label %bb6

bb6:                                              ; preds = %bb3, %bb5, %bb1, %bb4
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4, !range !3
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = insertvalue { i32, i32 } undef, i32 %14, 0
  %18 = insertvalue { i32, i32 } %17, i32 %16, 1
  ret { i32, i32 } %18
}

; std::io::error::Error::last_os_error
; Function Attrs: inlinehint nonlazybind uwtable
define internal i128 @_ZN3std2io5error5Error13last_os_error17h779638a6450e6bd0E() unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %1 = alloca %"std::io::error::Error", align 8
; call std::sys::unix::os::errno
  %_1 = call i32 @_ZN3std3sys4unix2os5errno17hef77becd6e359a38E()
  br label %bb1

bb1:                                              ; preds = %start
; call std::io::error::Error::from_raw_os_error
  %2 = call i128 @_ZN3std2io5error5Error17from_raw_os_error17h1614badb354949bdE(i32 %_1)
  store i128 %2, i128* %0, align 8
  %3 = bitcast %"std::io::error::Error"* %1 to i8*
  %4 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast %"std::io::error::Error"* %1 to i128*
  %6 = load i128, i128* %5, align 8
  ret i128 %6
}

; std::io::error::Error::from_raw_os_error
; Function Attrs: inlinehint nonlazybind uwtable
define internal i128 @_ZN3std2io5error5Error17from_raw_os_error17h1614badb354949bdE(i32 %code) unnamed_addr #0 {
start:
  %_2 = alloca %"std::io::error::Repr", align 8
  %0 = alloca %"std::io::error::Error", align 8
  %1 = bitcast %"std::io::error::Repr"* %_2 to %"std::io::error::Repr::Os"*
  %2 = getelementptr inbounds %"std::io::error::Repr::Os", %"std::io::error::Repr::Os"* %1, i32 0, i32 1
  store i32 %code, i32* %2, align 4
  %3 = bitcast %"std::io::error::Repr"* %_2 to i8*
  store i8 0, i8* %3, align 8
  %4 = bitcast %"std::io::error::Error"* %0 to %"std::io::error::Repr"*
  %5 = bitcast %"std::io::error::Repr"* %4 to i8*
  %6 = bitcast %"std::io::error::Repr"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  %7 = bitcast %"std::io::error::Error"* %0 to i128*
  %8 = load i128, i128* %7, align 8
  ret i128 %8
}

; std::io::error::Error::new
; Function Attrs: nonlazybind uwtable
define i128 @_ZN3std2io5error5Error3new17h4c713b6c96b1194dE(i8 %kind, [0 x i8]* nonnull align 1 %error.0, i64 %error.1) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %1 = alloca %"std::io::error::Error", align 8
; call <T as core::convert::Into<U>>::into
  %2 = call { {}*, [3 x i64]* } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h71e12088361a6d44E"([0 x i8]* nonnull align 1 %error.0, i64 %error.1)
  %_5.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::io::error::Error::_new
  %3 = call i128 @_ZN3std2io5error5Error4_new17h3dba62386fed5616E(i8 %kind, {}* noalias nonnull align 1 %_5.0, [3 x i64]* align 8 dereferenceable(24) %_5.1)
  store i128 %3, i128* %0, align 8
  %4 = bitcast %"std::io::error::Error"* %1 to i8*
  %5 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = bitcast %"std::io::error::Error"* %1 to i128*
  %7 = load i128, i128* %6, align 8
  ret i128 %7
}

; std::io::error::Error::kind
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN3std2io5error5Error4kind17hda5ca5cb238715f7E(%"std::io::error::Error"* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %2 = bitcast %"std::io::error::Repr"* %1 to i8*
  %3 = load i8, i8* %2, align 8, !range !9
  %_2 = zext i8 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb6
    i64 2, label %bb1
    i64 3, label %bb5
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %5 = bitcast %"std::io::error::Repr"* %4 to %"std::io::error::Repr::Os"*
  %6 = getelementptr inbounds %"std::io::error::Repr::Os", %"std::io::error::Repr::Os"* %5, i32 0, i32 1
  %code = load i32, i32* %6, align 4
; call std::sys::unix::decode_error_kind
  %7 = call i8 @_ZN3std3sys4unix17decode_error_kind17hb5c59b4dd44b9882E(i32 %code), !range !7
  store i8 %7, i8* %0, align 1
  br label %bb4

bb6:                                              ; preds = %start
  %8 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %9 = bitcast %"std::io::error::Repr"* %8 to %"std::io::error::Repr::Simple"*
  %10 = getelementptr inbounds %"std::io::error::Repr::Simple", %"std::io::error::Repr::Simple"* %9, i32 0, i32 1
  %kind1 = load i8, i8* %10, align 1, !range !7
  store i8 %kind1, i8* %0, align 1
  br label %bb7

bb1:                                              ; preds = %start
  %11 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %12 = bitcast %"std::io::error::Repr"* %11 to %"std::io::error::Repr::SimpleMessage"*
  %13 = getelementptr inbounds %"std::io::error::Repr::SimpleMessage", %"std::io::error::Repr::SimpleMessage"* %12, i32 0, i32 1
  %kind = load i8, i8* %13, align 1, !range !7
  store i8 %kind, i8* %0, align 1
  br label %bb7

bb5:                                              ; preds = %start
  %14 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %15 = bitcast %"std::io::error::Repr"* %14 to %"std::io::error::Repr::Custom"*
  %c = getelementptr inbounds %"std::io::error::Repr::Custom", %"std::io::error::Repr::Custom"* %15, i32 0, i32 1
  %16 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %c, align 8, !nonnull !5
  %17 = getelementptr inbounds %"std::io::error::Custom", %"std::io::error::Custom"* %16, i32 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !7
  store i8 %18, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6, %bb1, %bb5
  %19 = load i8, i8* %0, align 1, !range !7
  ret i8 %19

bb4:                                              ; preds = %bb3
  br label %bb7
}

; std::io::error::Error::new_const
; Function Attrs: inlinehint nonlazybind uwtable
define internal i128 @_ZN3std2io5error5Error9new_const17h90bb6035ed03c226E(i8 %kind, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %message) unnamed_addr #0 {
start:
  %_3 = alloca %"std::io::error::Repr", align 8
  %0 = alloca %"std::io::error::Error", align 8
  %1 = bitcast %"std::io::error::Repr"* %_3 to %"std::io::error::Repr::SimpleMessage"*
  %2 = getelementptr inbounds %"std::io::error::Repr::SimpleMessage", %"std::io::error::Repr::SimpleMessage"* %1, i32 0, i32 1
  store i8 %kind, i8* %2, align 1
  %3 = bitcast %"std::io::error::Repr"* %_3 to %"std::io::error::Repr::SimpleMessage"*
  %4 = getelementptr inbounds %"std::io::error::Repr::SimpleMessage", %"std::io::error::Repr::SimpleMessage"* %3, i32 0, i32 3
  store { [0 x i8]*, i64 }* %message, { [0 x i8]*, i64 }** %4, align 8
  %5 = bitcast %"std::io::error::Repr"* %_3 to i8*
  store i8 2, i8* %5, align 8
  %6 = bitcast %"std::io::error::Error"* %0 to %"std::io::error::Repr"*
  %7 = bitcast %"std::io::error::Repr"* %6 to i8*
  %8 = bitcast %"std::io::error::Repr"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %9 = bitcast %"std::io::error::Error"* %0 to i128*
  %10 = load i128, i128* %9, align 8
  ret i128 %10
}

; std::io::readbuf::ReadBuf::filled
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN3std2io7readbuf7ReadBuf6filled17hde0125c00e49b7aeE(%"std::io::readbuf::ReadBuf"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %0 = bitcast %"std::io::readbuf::ReadBuf"* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %_5.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !5
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %_5.1 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds %"std::io::readbuf::ReadBuf", %"std::io::readbuf::ReadBuf"* %self, i32 0, i32 1
  %_7 = load i64, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %_6 to i64*
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %_7, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %10 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h64a8324cac9e55f0E"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1, i64 %7, i64 %9, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1110 to %"core::panic::location::Location"*))
  %_4.0 = extractvalue { [0 x i8]*, i64 } %10, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %10, 1
  br label %bb1

bb1:                                              ; preds = %start
  %11 = extractvalue { [0 x i8]*, i64 } %10, 0
  %12 = extractvalue { [0 x i8]*, i64 } %10, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %13 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %14 = insertvalue { [0 x i8]*, i64 } %13, i64 %12, 1
  ret { [0 x i8]*, i64 } %14
}

; std::io::readbuf::ReadBuf::capacity
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN3std2io7readbuf7ReadBuf8capacity17h51273697621ab05bE(%"std::io::readbuf::ReadBuf"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = bitcast %"std::io::readbuf::ReadBuf"* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %_2.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !5
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %_2.1 = load i64, i64* %2, align 8
  ret i64 %_2.1
}

; std::io::readbuf::ReadBuf::remaining
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN3std2io7readbuf7ReadBuf9remaining17h4345942bfe247e96E(%"std::io::readbuf::ReadBuf"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
; call std::io::readbuf::ReadBuf::capacity
  %_2 = call i64 @_ZN3std2io7readbuf7ReadBuf8capacity17h51273697621ab05bE(%"std::io::readbuf::ReadBuf"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"std::io::readbuf::ReadBuf", %"std::io::readbuf::ReadBuf"* %self, i32 0, i32 1
  %_4 = load i64, i64* %0, align 8
  %1 = sub i64 %_2, %_4
  ret i64 %1
}

; std::f64::<impl f64>::sqrt
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @"_ZN3std3f6421_$LT$impl$u20$f64$GT$4sqrt17h33fc06130ec617eaE"(double %self) unnamed_addr #0 {
start:
  %0 = alloca double, align 8
  %1 = call double @llvm.sqrt.f64(double %self)
  store double %1, double* %0, align 8
  %2 = load double, double* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret double %2
}

; std::ffi::os_str::OsStr::from_inner
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @_ZN3std3ffi6os_str5OsStr10from_inner17hdd2022efad50eb0bE(%"std::sys::unix::os_str::Slice"* nonnull align 1 %inner.0, i64 %inner.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast %"std::sys::unix::os_str::Slice"* %inner.0 to %"std::ffi::os_str::OsStr"*
  %0 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %_2.0, 0
  %1 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %0, i64 %inner.1, 1
  ret { %"std::ffi::os_str::OsStr"*, i64 } %1
}

; std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h82c81bee918513bcE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call std::sys::unix::os_str::Slice::from_str
  %0 = call { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice8from_str17h7b35fbb08ceffebaE([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %_3.0 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 0
  %_3.1 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::ffi::os_str::OsStr::from_inner
  %1 = call { %"std::ffi::os_str::OsStr"*, i64 } @_ZN3std3ffi6os_str5OsStr10from_inner17hdd2022efad50eb0bE(%"std::sys::unix::os_str::Slice"* nonnull align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %1, 0
  %3 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %2, 0
  %5 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %4, i64 %3, 1
  ret { %"std::ffi::os_str::OsStr"*, i64 } %5
}

; std::sys::unix::fd::FileDesc::is_read_vectored
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std3sys4unix2fd8FileDesc16is_read_vectored17h284e65df9af9f783E(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  ret i1 true
}

; std::sys::unix::fs::File::is_read_vectored
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std3sys4unix2fs4File16is_read_vectored17h29ab5e3e0feeb1edE(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
; call std::sys::unix::fd::FileDesc::is_read_vectored
  %0 = call zeroext i1 @_ZN3std3sys4unix2fd8FileDesc16is_read_vectored17h284e65df9af9f783E(i32* align 4 dereferenceable(4) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; std::sys::unix::os_str::Slice::from_u8_slice
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice13from_u8_slice17h8ff280eed03e4d56E([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %0 = alloca { %"std::sys::unix::os_str::Slice"*, i64 }, align 8
  %1 = bitcast { %"std::sys::unix::os_str::Slice"*, i64 }* %0 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %s.1, i64* %3, align 8
  %4 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 0
  %5 = load %"std::sys::unix::os_str::Slice"*, %"std::sys::unix::os_str::Slice"** %4, align 8, !nonnull !5
  %6 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } undef, %"std::sys::unix::os_str::Slice"* %5, 0
  %9 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } %8, i64 %7, 1
  ret { %"std::sys::unix::os_str::Slice"*, i64 } %9
}

; std::sys::unix::os_str::Slice::from_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice8from_str17h7b35fbb08ceffebaE([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !5
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_3.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::sys::unix::os_str::Slice::from_u8_slice
  %9 = call { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice13from_u8_slice17h8ff280eed03e4d56E([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1)
  %10 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %9, 0
  %11 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %9, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %12 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } undef, %"std::sys::unix::os_str::Slice"* %10, 0
  %13 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } %12, i64 %11, 1
  ret { %"std::sys::unix::os_str::Slice"*, i64 } %13
}

; std::path::Path::new
; Function Attrs: nonlazybind uwtable
define { %"std::path::Path"*, i64 } @_ZN3std4path4Path3new17hc8172e711f1b2fa0E([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
; call std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
  %0 = call { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h82c81bee918513bcE"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  %_4.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %0, 0
  %_4.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2.0 = bitcast %"std::ffi::os_str::OsStr"* %_4.0 to %"std::path::Path"*
  %1 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %_2.0, 0
  %2 = insertvalue { %"std::path::Path"*, i64 } %1, i64 %_4.1, 1
  ret { %"std::path::Path"*, i64 } %2
}

; std::path::<impl core::convert::AsRef<std::path::Path> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::path::Path"*, i64 } @"_ZN3std4path77_$LT$impl$u20$core..convert..AsRef$LT$std..path..Path$GT$$u20$for$u20$str$GT$6as_ref17h5137e85929fceaa9E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call std::path::Path::new
  %0 = call { %"std::path::Path"*, i64 } @_ZN3std4path4Path3new17hc8172e711f1b2fa0E([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %1 = extractvalue { %"std::path::Path"*, i64 } %0, 0
  %2 = extractvalue { %"std::path::Path"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %1, 0
  %4 = insertvalue { %"std::path::Path"*, i64 } %3, i64 %2, 1
  ret { %"std::path::Path"*, i64 } %4
}

; std::sync::once::Once::is_completed
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std4sync4once4Once12is_completed17had822c807d168dbbE(%"std::sync::once::Once"* align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  %_3 = bitcast %"std::sync::once::Once"* %self to %"core::sync::atomic::AtomicUsize"*
  store i8 2, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !8
; call core::sync::atomic::AtomicUsize::load
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize4load17h91e62b5f3fc5b9b3E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i8 %0)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 %_2, 3
  ret i1 %1
}

; std::sync::once::Once::call_once
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync4once4Once9call_once17ha93cfc54f414f6c0E(%"std::sync::once::Once"* align 8 dereferenceable(8) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_12 = alloca i8*, align 8
  %f = alloca i8, align 1
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; invoke std::sync::once::Once::is_completed
  %_3 = invoke zeroext i1 @_ZN3std4sync4once4Once12is_completed17had822c807d168dbbE(%"std::sync::once::Once"* align 8 dereferenceable(8) %self)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb3

bb10:                                             ; preds = %bb7, %cleanup
  %1 = load i8, i8* %_14, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb9, label %bb8

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb10

bb3:                                              ; preds = %bb1
  store i8 0, i8* %_14, align 1
  %8 = bitcast i8* %f to %"core::option::Option<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/os.rs:157:27: 167:10]>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/os.rs:157:27: 167:10]>::Some", %"core::option::Option<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/os.rs:157:27: 167:10]>::Some"* %8, i32 0, i32 1
  store i8 1, i8* %f, align 1
  store i8* %f, i8** %_12, align 8
  %_9.0 = bitcast i8** %_12 to {}*
; invoke std::sync::once::Once::call_inner
  invoke void @_ZN3std4sync4once4Once10call_inner17h9cbe709b601a3566E(%"std::sync::once::Once"* align 8 dereferenceable(8) %self, i1 zeroext false, {}* nonnull align 1 %_9.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, [0 x i8] }>* @vtable.0 to [3 x i64]*))
          to label %bb4 unwind label %cleanup1

bb2:                                              ; preds = %bb1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  ret void

bb4:                                              ; preds = %bb3
  br label %bb5

bb7:                                              ; preds = %cleanup1
  br label %bb10

cleanup1:                                         ; preds = %bb3
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
  br label %bb6

bb8:                                              ; preds = %bb9, %bb10
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb9:                                              ; preds = %bb10
  br label %bb8
}

; std::sync::once::Once::call_once::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h40f9cc8155445544E"(i8** align 8 dereferenceable(8) %_1, { i64, i8 }* align 8 dereferenceable(16) %_2) unnamed_addr #0 {
start:
  %_5 = load i8*, i8** %_1, align 8, !nonnull !5
; call core::option::Option<T>::take
  %_4 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$4take17hf7aa65436de7649fE"(i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::unwrap
  call void @"_ZN4core6option15Option$LT$T$GT$6unwrap17h2c538af31cc37221E"(i1 zeroext %_4, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1116 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call rand::os::imp::is_getrandom_available::{{closure}}
  call void @"_ZN4rand2os3imp22is_getrandom_available28_$u7b$$u7b$closure$u7d$$u7d$17h355f1e1e4a635108E"()
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; std::error::<impl core::convert::From<&str> for alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN3std5error161_$LT$impl$u20$core..convert..From$LT$$RF$str$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$4from17h72009946b1757365E"([0 x i8]* nonnull align 1 %err.0, i64 %err.1) unnamed_addr #0 {
start:
  %_3 = alloca %"alloc::string::String", align 8
; call <alloc::string::String as core::convert::From<&str>>::from
  call void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h2374e1be1ef92467E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_3, [0 x i8]* nonnull align 1 %err.0, i64 %err.1)
  br label %bb1

bb1:                                              ; preds = %start
; call std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>::from
  %0 = call { {}*, [3 x i64]* } @"_ZN3std5error175_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$4from17ha416eb7f1f70ac63E"(%"alloc::string::String"* noalias nocapture dereferenceable(24) %_3)
  %_2.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %2 = insertvalue { {}*, [3 x i64]* } %1, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %2
}

; std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN3std5error175_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$4from17ha416eb7f1f70ac63E"(%"alloc::string::String"* noalias nocapture dereferenceable(24) %err) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_5 = alloca %"alloc::string::String", align 8
  %_4 = alloca %"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError", align 8
  %1 = bitcast %"alloc::string::String"* %_5 to i8*
  %2 = bitcast %"alloc::string::String"* %err to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* %_4 to %"alloc::string::String"*
  %4 = bitcast %"alloc::string::String"* %3 to i8*
  %5 = bitcast %"alloc::string::String"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !10)
; invoke alloc::alloc::exchange_malloc
  %_4.i = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h5b6f12bd773a3bf4E(i64 24, i64 8)
          to label %"_ZN5alloc5boxed12Box$LT$T$GT$3new17h7a81b158e0bf70f5E.exit" unwind label %cleanup.i, !noalias !10

cleanup.i:                                        ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8, !noalias !10
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8, !noalias !10
; call core::ptr::drop_in_place<std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>::from::StringError>
  call void @"_ZN4core3ptr226drop_in_place$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$..from..StringError$GT$17h226016f358ba055dE"(%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* %_4) #18
  %11 = bitcast { i8*, i32 }* %0 to i8**
  %12 = load i8*, i8** %11, align 8, !noalias !10
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8, !noalias !10
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

"_ZN5alloc5boxed12Box$LT$T$GT$3new17h7a81b158e0bf70f5E.exit": ; preds = %start
  %17 = bitcast i8* %_4.i to %"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"*
  %18 = bitcast %"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %_4.i, i8* align 8 %18, i64 24, i1 false)
  br label %bb1

bb1:                                              ; preds = %"_ZN5alloc5boxed12Box$LT$T$GT$3new17h7a81b158e0bf70f5E.exit"
  %19 = bitcast %"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* %17 to {}*
  %20 = bitcast {}* %19 to i8*
  %_2.0 = bitcast i8* %20 to {}*
  %21 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %22 = insertvalue { {}*, [3 x i64]* } %21, [3 x i64]* bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*), 1
  ret { {}*, [3 x i64]* } %22
}

; std::error::Error::cause
; Function Attrs: nonlazybind uwtable
define { i8*, i8* } @_ZN3std5error5Error5cause17hacf870909057fb2dE(%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call std::error::Error::source
  %0 = call { i8*, i8* } @_ZN3std5error5Error6source17h233b16b0f98709eaE(%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* align 8 dereferenceable(24) %self)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; std::error::Error::source
; Function Attrs: nonlazybind uwtable
define { i8*, i8* } @_ZN3std5error5Error6source17h233b16b0f98709eaE(%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = alloca { i8*, i8* }, align 8
  %1 = bitcast { i8*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i8*, i8* } undef, i8* %3, 0
  %7 = insertvalue { i8*, i8* } %6, i8* %5, 1
  ret { i8*, i8* } %7
}

; std::error::Error::type_id
; Function Attrs: nonlazybind uwtable
define i64 @_ZN3std5error5Error7type_id17h2636c351fde84807E(%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call core::any::TypeId::of
  %0 = call i64 @_ZN4core3any6TypeId2of17h30fa533513611893E()
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; std::error::Error::backtrace
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable_or_null(56) i64* @_ZN3std5error5Error9backtrace17h7350d31df4f13af5E(%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to {}**
  store {}* null, {}** %1, align 8
  %2 = load i64*, i64** %0, align 8
  ret i64* %2
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17hc9306eb37059732fE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call i64* @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h20818f095b0e05d2E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  %0 = call nonnull i64* @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8dd45fe6aade296E"(i64* %_3, [0 x i8]* nonnull align 1 bitcast (<{ [70 x i8] }>* @alloc1128 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1130 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h20818f095b0e05d2E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_15 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i64*, align 8
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
  %2 = bitcast i64** %self to i64* ()**
  %_7 = load i64* ()*, i64* ()** %2, align 8, !nonnull !5
  %_6 = invoke align 8 dereferenceable_or_null(8) i64* %_7()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 dereferenceable_or_null(8) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h909b35aa5109895aE"(i64* align 8 dereferenceable_or_null(8) %_6)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %3 = load i8, i8* %_17, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %10 = invoke align 8 dereferenceable_or_null(8) i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h47a84a4012aa03f9E"(i64* align 8 dereferenceable_or_null(8) %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %10, i64** %_4, align 8
  %11 = bitcast i64** %_4 to {}**
  %12 = load {}*, {}** %11, align 8
  %13 = icmp eq {}* %12, null
  %_9 = select i1 %13, i64 1, i64 0
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %14 = bitcast i64** %_4 to i64***
  %val = load i64**, i64*** %14, align 8, !nonnull !5
  store i8 0, i8* %_17, align 1
  %15 = bitcast i64** %_15 to i64***
  store i64** %val, i64*** %15, align 8
  %16 = load i64*, i64** %_15, align 8, !nonnull !5
  %17 = bitcast i64* %16 to i64**
; invoke rand::thread_rng::{{closure}}
  %_13 = invoke nonnull i64* @"_ZN4rand10thread_rng28_$u7b$$u7b$closure$u7d$$u7d$17h9547d9a6408164eeE"(i64** align 8 dereferenceable(8) %17)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %18 = invoke i64* @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hec929b0d3c1c4b02E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1132 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  store i64* %18, i64** %1, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %19 = load i64*, i64** %1, align 8
  ret i64* %19

bb8:                                              ; preds = %bb4
  store i64* %_13, i64** %1, align 8
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %20 = bitcast { i8*, i32 }* %0 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  resume { i8*, i32 } %25

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::fast::Key<T>::try_initialize
; Function Attrs: noinline nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h89e91cce9339e740E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #3 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_12 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %1 = alloca i64*, align 8
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_12, align 1
; invoke core::mem::needs_drop
  %_5 = invoke zeroext i1 @_ZN4core3mem10needs_drop17h3d00fefe86eb0a79E()
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb1, label %bb2

bb14:                                             ; preds = %cleanup
  %2 = load i8, i8* %_12, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb13, label %bb11

cleanup:                                          ; preds = %bb6, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb14

bb2:                                              ; preds = %bb4
; invoke std::thread::local::fast::Key<T>::try_register_dtor
  %_6 = invoke zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17h29a705920011f79bE"({ i64*, i8 }* align 8 dereferenceable(16) %self)
          to label %bb5 unwind label %cleanup

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %9 = load i8, i8* %_3, align 1, !range !4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb8

bb5:                                              ; preds = %bb2
  %11 = zext i1 %_6 to i8
  store i8 %11, i8* %_3, align 1
  br label %bb3

bb8:                                              ; preds = %bb3
  %12 = bitcast i64** %1 to {}**
  store {}* null, {}** %12, align 8
  br label %bb9

bb6:                                              ; preds = %bb3
  %_10 = bitcast { i64*, i8 }* %self to i64**
  store i8 0, i8* %_12, align 1
; invoke std::thread::local::lazy::LazyKeyInner<T>::initialize
  %_9 = invoke align 8 dereferenceable(8) i64** @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17h9ea4ae49b87decf6E"(i64** align 8 dereferenceable(8) %_10)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %13 = bitcast i64** %1 to i64***
  store i64** %_9, i64*** %13, align 8
  br label %bb9

bb11:                                             ; preds = %bb13, %bb14
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb13:                                             ; preds = %bb14
  br label %bb11

bb9:                                              ; preds = %bb8, %bb7
  %20 = load i8, i8* %_12, align 1, !range !4
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb12, label %bb10

bb10:                                             ; preds = %bb12, %bb9
  %22 = load i64*, i64** %1, align 8
  ret i64* %22

bb12:                                             ; preds = %bb9
  br label %bb10
}

; std::thread::local::fast::Key<T>::try_register_dtor
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17h29a705920011f79bE"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_12 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_3 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call core::cell::Cell<T>::get
  %1 = call i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17hc2a526f6a88bc515E"(i8* align 1 dereferenceable(1) %_3), !range !13
  store i8 %1, i8* %_2, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i8, i8* %_2, align 1, !range !13
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb7
    i64 2, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %_6 = bitcast { i64*, i8 }* %self to i8*
; call std::sys::unix::thread_local_dtor::register_dtor
  call void @_ZN3std3sys4unix17thread_local_dtor13register_dtor17h5730607195ae916cE(i8* %_6, void (i8*)* nonnull @_ZN3std6thread5local4fast13destroy_value17hd6f1c047ac1e05ddE)
  br label %bb5

bb7:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb8

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7, %bb2
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  %_11 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
  store i8 1, i8* %_12, align 1
  %5 = load i8, i8* %_12, align 1, !range !13
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h489a02452972c1e5E"(i8* align 1 dereferenceable(1) %_11, i8 %5)
  br label %bb6

bb6:                                              ; preds = %bb5
  store i8 1, i8* %0, align 1
  br label %bb8
}

; std::thread::local::fast::Key<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17h65f8047a53c134beE"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_3 = alloca i64*, align 8
  %1 = alloca i64*, align 8
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %_4 = bitcast { i64*, i8 }* %self to i64**
; invoke std::thread::local::lazy::LazyKeyInner<T>::get
  %2 = invoke align 8 dereferenceable_or_null(8) i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17hcb07f12cb1cd89aeE"(i64** align 8 dereferenceable(8) %_4)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %2, i64** %_3, align 8
  %3 = bitcast i64** %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb11:                                             ; preds = %cleanup
  %6 = load i8, i8* %_10, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb10, label %bb8

cleanup:                                          ; preds = %bb2, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb11

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
; invoke std::thread::local::fast::Key<T>::try_initialize
  %13 = invoke align 8 dereferenceable_or_null(8) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h89e91cce9339e740E"({ i64*, i8 }* align 8 dereferenceable(16) %self)
          to label %bb5 unwind label %cleanup

bb4:                                              ; preds = %bb1
  %14 = bitcast i64** %_3 to i64***
  %val = load i64**, i64*** %14, align 8, !nonnull !5
  %15 = bitcast i64** %1 to i64***
  store i64** %val, i64*** %15, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %16 = load i8, i8* %_10, align 1, !range !4
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb9, label %bb7

bb5:                                              ; preds = %bb2
  store i64* %13, i64** %1, align 8
  br label %bb6

bb8:                                              ; preds = %bb10, %bb11
  %18 = bitcast { i8*, i32 }* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb10:                                             ; preds = %bb11
  br label %bb8

bb7:                                              ; preds = %bb9, %bb6
  %24 = load i64*, i64** %1, align 8
  ret i64* %24

bb9:                                              ; preds = %bb6
  br label %bb7
}

; std::thread::local::fast::destroy_value
; Function Attrs: nonlazybind uwtable
define void @_ZN3std6thread5local4fast13destroy_value17hd6f1c047ac1e05ddE(i8* %ptr) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  %ptr1 = bitcast i8* %ptr to { i64*, i8 }*
  %_5 = bitcast { i64*, i8 }* %ptr1 to i64**
; invoke std::thread::local::lazy::LazyKeyInner<T>::take
  %value = invoke i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17h5a5032ce0a429db6E"(i64** align 8 dereferenceable(8) %_5)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_7 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %ptr1, i32 0, i32 1
  store i8 2, i8* %_8, align 1
  %1 = load i8, i8* %_8, align 1, !range !13
; invoke core::cell::Cell<T>::set
  invoke void @"_ZN4core4cell13Cell$LT$T$GT$3set17h489a02452972c1e5E"(i8* align 1 dereferenceable(1) %_7, i8 %1)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  call void @llvm.trap()
  unreachable

cleanup:                                          ; preds = %bb2, %bb1, %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
; invoke core::mem::drop
  invoke void @_ZN4core3mem4drop17hc4618279a7ada15fE(i64* %value)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  ret void
}

; std::thread::local::lazy::LazyKeyInner<T>::initialize
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(8) i64** @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17h9ea4ae49b87decf6E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_11 = alloca i64*, align 8
  %_8 = alloca i64*, align 8
  %value = alloca i64*, align 8
  store i8 0, i8* %_14, align 1
; call core::ops::function::FnOnce::call_once
  %1 = call nonnull i64* @_ZN4core3ops8function6FnOnce9call_once17h1ade202eab173dc5E()
  store i64* %1, i64** %value, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i8 1, i8* %_14, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_14, align 1
  %_12 = load i64*, i64** %value, align 8, !nonnull !5
  store i64* %_12, i64** %_11, align 8
  %2 = load i64*, i64** %_11, align 8
; invoke core::mem::replace
  %3 = invoke i64* @_ZN4core3mem7replace17h71cbb5d214ba6caaE(i64** align 8 dereferenceable(8) %self, i64* %2)
          to label %bb3 unwind label %cleanup

bb10:                                             ; preds = %cleanup
  %4 = load i8, i8* %_14, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb9, label %bb8

cleanup:                                          ; preds = %bb5, %bb3, %bb2
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb10

bb3:                                              ; preds = %bb2
  store i64* %3, i64** %_8, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>>
  invoke void @"_ZN4core3ptr172drop_in_place$LT$core..option..Option$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$$GT$17h41c286f28fba9b4bE"(i64** %_8)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %11 = bitcast i64** %self to {}**
  %12 = load {}*, {}** %11, align 8
  %13 = icmp eq {}* %12, null
  %_13 = select i1 %13, i64 0, i64 1
  switch i64 %_13, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17h775e538991fb8238E() #17
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %bb4
  store i8 0, i8* %_14, align 1
  ret i64** %self

unreachable:                                      ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb9, %bb10
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>
  call void @"_ZN4core3ptr144drop_in_place$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$17he602544e51f7f522E"(i64** %value) #18
  br label %bb8
}

; std::thread::local::lazy::LazyKeyInner<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17hcb07f12cb1cd89aeE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::as_ref
  %0 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h26cb0c3642f22b71E"(i64** align 8 dereferenceable(8) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; std::thread::local::lazy::LazyKeyInner<T>::take
; Function Attrs: nonlazybind uwtable
define i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17h5a5032ce0a429db6E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::take
  %0 = call i64* @"_ZN4core6option15Option$LT$T$GT$4take17hd12f68cfe70adbf5E"(i64** align 8 dereferenceable(8) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; std::panicking::begin_panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
define void @_ZN3std9panicking11begin_panic17hb7befd5e474a8c7bE([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #4 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca i8, align 1
  %_3 = alloca %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", align 8
  store i8 0, i8* %_4, align 1
  store i8 1, i8* %_4, align 1
; invoke core::panic::location::Location::caller
  %loc = invoke align 8 dereferenceable(24) %"core::panic::location::Location"* @_ZN4core5panic8location8Location6caller17h66ab9d009774583dE(%"core::panic::location::Location"* align 8 dereferenceable(24) %0)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_4, align 1
  %2 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_3 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %msg.1, i64* %4, align 8
  %5 = getelementptr inbounds %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_3, i32 0, i32 1
  store %"core::panic::location::Location"* %loc, %"core::panic::location::Location"** %5, align 8
; invoke std::sys_common::backtrace::__rust_end_short_backtrace
  invoke void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17hd878de573aafc269E(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_3) #17
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %6 = load i8, i8* %_4, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb3, label %bb2

cleanup:                                          ; preds = %bb1, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb3, %bb4
  %13 = bitcast { i8*, i32 }* %1 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb3:                                              ; preds = %bb4
  br label %bb2
}

; std::panicking::begin_panic::PanicPayload<A>::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17hb1dfeb6d86e11071E"([0 x i8]* nonnull align 1 %inner.0, i64 %inner.1) unnamed_addr #1 {
start:
  %_2 = alloca { i8*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %inner.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %inner.1, i64* %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %5, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { i8*, i64 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64 } %14, i64 %13, 1
  ret { i8*, i64 } %15
}

; std::panicking::begin_panic::{{closure}}
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17h86183a3e378f15bcE"(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_1) unnamed_addr #5 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i64*, align 8
  %_5 = alloca { i8*, i64 }, align 8
  %1 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !5
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_6.1 = load i64, i64* %3, align 8
; call std::panicking::begin_panic::PanicPayload<A>::new
  %4 = call { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17hb1dfeb6d86e11071E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
  store { i8*, i64 } %4, { i8*, i64 }* %_5, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_2.0 = bitcast { i8*, i64 }* %_5 to {}*
  %5 = bitcast i64** %_7 to {}**
  store {}* null, {}** %5, align 8
  %6 = getelementptr inbounds %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1, i32 0, i32 1
  %_8 = load %"core::panic::location::Location"*, %"core::panic::location::Location"** %6, align 8, !nonnull !5
  %7 = load i64*, i64** %_7, align 8
; invoke std::panicking::rust_panic_with_hook
  invoke void @_ZN3std9panicking20rust_panic_with_hook17h7a6b21c56a75680aE({}* nonnull align 1 %_2.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, [0 x i8] }>* @vtable.2 to [3 x i64]*), i64* align 8 dereferenceable_or_null(48) %7, %"core::panic::location::Location"* align 8 dereferenceable(24) %_8) #17
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h00d9453dc7aff6e8E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load i64*, i64** %self, align 8, !nonnull !5
; call core::fmt::num::<impl core::fmt::Debug for u64>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17h07f56cac29f61806E"(i64* align 8 dereferenceable(8) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h189ac6e10ac0a023E"(%"distributions::gamma::ChiSquared"** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %"distributions::gamma::ChiSquared"*, %"distributions::gamma::ChiSquared"** %self, align 8, !nonnull !5
; call <rand::distributions::gamma::ChiSquared as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN75_$LT$rand..distributions..gamma..ChiSquared$u20$as$u20$core..fmt..Debug$GT$3fmt17h185dfb60c442beb0E"(%"distributions::gamma::ChiSquared"* align 8 dereferenceable(40) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1b9a1a74863cd8c9E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load i64*, i64** %self, align 8, !nonnull !5
; call core::fmt::num::<impl core::fmt::Debug for usize>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hdfa6baa41bc8b82cE"(i64* align 8 dereferenceable(8) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2f7872ed31fe0083E"(double** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load double*, double** %self, align 8, !nonnull !5
; call <rand::distributions::exponential::Exp as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN74_$LT$rand..distributions..exponential..Exp$u20$as$u20$core..fmt..Debug$GT$3fmt17h0c9958cf26dc2ac5E"(double* align 8 dereferenceable(8) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h58405a89b209a413E"(i64*** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load i64**, i64*** %self, align 8, !nonnull !5
; call <alloc::rc::Rc<T> as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN59_$LT$alloc..rc..Rc$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h35b91596cf805b8fE"(i64** align 8 dereferenceable(8) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5dc49f733896504aE"(%"distributions::gamma::ChiSquaredRepr"** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %"distributions::gamma::ChiSquaredRepr"*, %"distributions::gamma::ChiSquaredRepr"** %self, align 8, !nonnull !5
; call <rand::distributions::gamma::ChiSquaredRepr as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN79_$LT$rand..distributions..gamma..ChiSquaredRepr$u20$as$u20$core..fmt..Debug$GT$3fmt17h948f0a3430d9103dE"(%"distributions::gamma::ChiSquaredRepr"* align 8 dereferenceable(40) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6e02f346cddab66aE"(%"distributions::gamma::GammaLargeShape"** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %"distributions::gamma::GammaLargeShape"*, %"distributions::gamma::GammaLargeShape"** %self, align 8, !nonnull !5
; call <rand::distributions::gamma::GammaLargeShape as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN80_$LT$rand..distributions..gamma..GammaLargeShape$u20$as$u20$core..fmt..Debug$GT$3fmt17h12268f8799ec6a16E"(%"distributions::gamma::GammaLargeShape"* align 8 dereferenceable(24) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h71ad1710f627c26eE"([16 x i32]** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load [16 x i32]*, [16 x i32]** %self, align 8, !nonnull !5
; call core::array::<impl core::fmt::Debug for [T; N]>::fmt
  %0 = call zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h355fa7542352b2b6E"([16 x i32]* align 4 dereferenceable(64) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7f52d666ee8dddd4E"(%ThreadRngReseeder** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %ThreadRngReseeder*, %ThreadRngReseeder** %self, align 8, !nonnull !5
; call <rand::ThreadRngReseeder as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN60_$LT$rand..ThreadRngReseeder$u20$as$u20$core..fmt..Debug$GT$3fmt17h6161635ccd0fc990E"(%ThreadRngReseeder* nonnull align 1 %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h959c21fe3a4c286bE"({ [0 x i32]*, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self, i32 0, i32 0
  %_4.0 = load [0 x i32]*, [0 x i32]** %0, align 8, !nonnull !5
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self, i32 0, i32 1
  %_4.1 = load i64, i64* %1, align 8
; call <[T] as core::fmt::Debug>::fmt
  %2 = call zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17hd73800cfb7b1dfc1E"([0 x i32]* nonnull align 4 %_4.0, i64 %_4.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha96d6760f60a7bffE"(%"distributions::gamma::Gamma"** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %"distributions::gamma::Gamma"*, %"distributions::gamma::Gamma"** %self, align 8, !nonnull !5
; call <rand::distributions::gamma::Gamma as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN70_$LT$rand..distributions..gamma..Gamma$u20$as$u20$core..fmt..Debug$GT$3fmt17hfe77e8b76f8545a8E"(%"distributions::gamma::Gamma"* align 8 dereferenceable(40) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hac6563e992250100E"(%"prng::isaac64::Isaac64Rng"** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %"prng::isaac64::Isaac64Rng"*, %"prng::isaac64::Isaac64Rng"** %self, align 8, !nonnull !5
; call <rand::prng::isaac64::Isaac64Rng as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN68_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$core..fmt..Debug$GT$3fmt17hd93c287a67b58229E"(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb01f8090d69dd651E"({ double, double }** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load { double, double }*, { double, double }** %self, align 8, !nonnull !5
; call <rand::distributions::normal::Normal as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN72_$LT$rand..distributions..normal..Normal$u20$as$u20$core..fmt..Debug$GT$3fmt17h86a859bb2cb059e9E"({ double, double }* align 8 dereferenceable(16) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbbbab2763082f55aE"(%StdRng** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %StdRng*, %StdRng** %self, align 8, !nonnull !5
; call <rand::StdRng as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN49_$LT$rand..StdRng$u20$as$u20$core..fmt..Debug$GT$3fmt17h0593f3fc0c4e7419E"(%StdRng* align 8 dereferenceable(4128) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbdd825b866c503e3E"(double** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load double*, double** %self, align 8, !nonnull !5
; call core::fmt::float::<impl core::fmt::Debug for f64>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt5float50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$f64$GT$3fmt17he264b8ac941742d4E"(double* align 8 dereferenceable(8) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc29129110a091f7dE"(i32** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load i32*, i32** %self, align 8, !nonnull !5
; call <core::num::wrapping::Wrapping<T> as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN75_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hf7bb7546c6d6d75eE"(i32* align 4 dereferenceable(4) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hcc921a479e795c1bE"(%"distributions::gamma::GammaSmallShape"** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %"distributions::gamma::GammaSmallShape"*, %"distributions::gamma::GammaSmallShape"** %self, align 8, !nonnull !5
; call <rand::distributions::gamma::GammaSmallShape as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN80_$LT$rand..distributions..gamma..GammaSmallShape$u20$as$u20$core..fmt..Debug$GT$3fmt17hca6afaff51f8996aE"(%"distributions::gamma::GammaSmallShape"* align 8 dereferenceable(32) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hdff20c6afa3e0607E"(%"distributions::gamma::GammaRepr"** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %"distributions::gamma::GammaRepr"*, %"distributions::gamma::GammaRepr"** %self, align 8, !nonnull !5
; call <rand::distributions::gamma::GammaRepr as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN74_$LT$rand..distributions..gamma..GammaRepr$u20$as$u20$core..fmt..Debug$GT$3fmt17hef20798a60c2a441E"(%"distributions::gamma::GammaRepr"* align 8 dereferenceable(40) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17he4e954f54b698fe6E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !5
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_4.1 = load i64, i64* %1, align 8
; call <str as core::fmt::Display>::fmt
  %2 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h4fb653153270e40aE"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <i32 as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN47_$LT$i32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h7d30b9a7f5e1d15cE"(i32 %start1, i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_4 = trunc i64 %n to i32
  %1 = add nsw i32 %start1, %_4
  store i32 %1, i32* %0, align 4
  %2 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %2
}

; <std::fs::File as std::io::Read>::is_read_vectored
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$16is_read_vectored17h0a489ce00fd1ef53E"(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
; call std::sys::unix::fs::File::is_read_vectored
  %0 = call zeroext i1 @_ZN3std3sys4unix2fs4File16is_read_vectored17h29ab5e3e0feeb1edE(i32* align 4 dereferenceable(4) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <u32 as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h39ccfe585817a869E"(i32 %start1, i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_4 = trunc i64 %n to i32
  %1 = add nuw i32 %start1, %_4
  store i32 %1, i32* %0, align 4
  %2 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %2
}

; <u64 as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN47_$LT$u64$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hc13c950950996ec5E"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = add nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; <[T] as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17hd73800cfb7b1dfc1E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_6 = alloca %"core::fmt::builders::DebugList", align 8
; call core::fmt::Formatter::debug_list
  %1 = call i128 @_ZN4core3fmt9Formatter10debug_list17hea40b725812e3b83E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugList"* %_6 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %4 = call { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h7922ca17e85abd51E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1)
  %_8.0 = extractvalue { i32*, i32* } %4, 0
  %_8.1 = extractvalue { i32*, i32* } %4, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugList::entries
  %_4 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17h193b60a495cb5fdfE(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16) %_6, i32* nonnull %_8.0, i32* %_8.1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::fmt::builders::DebugList::finish
  %5 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17hf48e4debbea8211aE(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16) %_4)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i1 %5
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17had4527f9e9cff9cfE"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = add nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics19copy_nonoverlapping17h387c0a07d4475887E(i8* %src, i8* %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 %count, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %0, i1 false)
  ret void
}

; core::any::TypeId::of
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core3any6TypeId2of17h1c28eb9c255822fcE() unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 9147559743429524724, i64* %0, align 8
  %_1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %_1, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  ret i64 %2
}

; core::any::TypeId::of
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core3any6TypeId2of17h30fa533513611893E() unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 -2725422356458174366, i64* %0, align 8
  %_1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %_1, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  ret i64 %2
}

; core::cmp::Ord::min
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3Ord3min17h6225086180ba2477E(i64 %self, i64 %other) unnamed_addr #0 {
start:
; call core::cmp::min_by
  %0 = call i64 @_ZN4core3cmp6min_by17he892883f38c97046E(i64 %self, i64 %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::min
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3min17h8b3b6792a89714daE(i64 %v1, i64 %v2) unnamed_addr #0 {
start:
; call core::cmp::Ord::min
  %0 = call i64 @_ZN4core3cmp3Ord3min17h6225086180ba2477E(i64 %v1, i64 %v2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hc878f3da3a98a74bE"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_4 = load i64, i64* %self, align 8
  %_5 = load i64, i64* %other, align 8
  %_3 = icmp ult i64 %_4, %_5
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8
  %_8 = load i64, i64* %other, align 8
  %_6 = icmp eq i64 %_7, %_8
  br i1 %_6, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !range !14
  ret i8 %1

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6
}

; core::cmp::impls::<impl core::cmp::PartialEq for i32>::ne
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$i32$GT$2ne17h99b8087e3fc9fcdfE"(i32* align 4 dereferenceable(4) %self, i32* align 4 dereferenceable(4) %other) unnamed_addr #0 {
start:
  %_3 = load i32, i32* %self, align 4
  %_4 = load i32, i32* %other, align 4
  %0 = icmp ne i32 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialEq for u32>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u32$GT$2eq17hacc83d3549419240E"(i32* align 4 dereferenceable(4) %self, i32* align 4 dereferenceable(4) %other) unnamed_addr #0 {
start:
  %_3 = load i32, i32* %self, align 4
  %_4 = load i32, i32* %other, align 4
  %0 = icmp eq i32 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialEq for u32>::ne
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u32$GT$2ne17h54e976dc53435b22E"(i32* align 4 dereferenceable(4) %self, i32* align 4 dereferenceable(4) %other) unnamed_addr #0 {
start:
  %_3 = load i32, i32* %self, align 4
  %_4 = load i32, i32* %other, align 4
  %0 = icmp ne i32 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialOrd for i32>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17h6cf8f804da838081E"(i32* align 4 dereferenceable(4) %self, i32* align 4 dereferenceable(4) %other) unnamed_addr #0 {
start:
  %_3 = load i32, i32* %self, align 4
  %_4 = load i32, i32* %other, align 4
  %0 = icmp slt i32 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialOrd for u32>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u32$GT$2lt17h40d242692b074507E"(i32* align 4 dereferenceable(4) %self, i32* align 4 dereferenceable(4) %other) unnamed_addr #0 {
start:
  %_3 = load i32, i32* %self, align 4
  %_4 = load i32, i32* %other, align 4
  %0 = icmp ult i32 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialOrd for u64>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u64$GT$2lt17h292de48d55801049E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp ult i64 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17ha4e6a45ca5f5a922E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp ult i64 %_3, %_4
  ret i1 %0
}

; core::cmp::min_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6min_by17he892883f38c97046E(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %3 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  store i8 1, i8* %_12, align 1
  %4 = bitcast { i64*, i64* }* %_6 to i64**
  store i64* %v1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  store i64* %v2, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !5
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !5
; invoke core::ops::function::FnOnce::call_once
  %10 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17h48f593a00c280e89E(i64* align 8 dereferenceable(8) %7, i64* align 8 dereferenceable(8) %9)
          to label %bb1 unwind label %cleanup, !range !14

bb1:                                              ; preds = %start
  store i8 %10, i8* %_4, align 1
  %_11 = load i8, i8* %_4, align 1, !range !14
  switch i8 %_11, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ]

bb8:                                              ; preds = %cleanup
  br label %bb13

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb8

bb13:                                             ; preds = %bb8
  %16 = load i8, i8* %_13, align 1, !range !4
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb12, label %bb9

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_13, align 1
  %18 = load i64, i64* %v1, align 8
  store i64 %18, i64* %3, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_12, align 1
  %19 = load i64, i64* %v2, align 8
  store i64 %19, i64* %3, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load i8, i8* %_12, align 1, !range !4
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb10, label %bb6

bb6:                                              ; preds = %bb10, %bb5
  %22 = load i8, i8* %_13, align 1, !range !4
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb11, label %bb7

bb10:                                             ; preds = %bb5
  br label %bb6

bb9:                                              ; preds = %bb12, %bb13
  %24 = bitcast { i8*, i32 }* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb12:                                             ; preds = %bb13
  br label %bb9

bb7:                                              ; preds = %bb11, %bb6
  %30 = load i64, i64* %3, align 8
  ret i64 %30

bb11:                                             ; preds = %bb6
  br label %bb7
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0d700582d5bb27ceE(%"std::io::error::Error"* align 8 dereferenceable(16) %x, i1 (%"std::io::error::Error"*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%"std::io::error::Error"*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !5
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"std::io::error::Error"* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !5
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !5
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !5
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h84fd5bb6b29aac44E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %x, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !5
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { [0 x i8]*, i64 }* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !5
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !5
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !5
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::num::<impl core::fmt::Debug for u32>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h2b281f2a52960376E"(i32* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17hc1ea778f34506390E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9143b4968b3afd78E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17ha903485a71eb6d25E"(i32* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h143e132e8c82669cE"(i32* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb9

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17hef35279af1b2dff0E"(i32* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10
}

; core::fmt::num::<impl core::fmt::Debug for u64>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u64$GT$3fmt17h07f56cac29f61806E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17hc1ea778f34506390E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9143b4968b3afd78E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17h8c1e5a0343078d18E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hc0f7594e99de2828E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb9

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for u64>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u64$GT$3fmt17h7c0777b2ffca5ab3E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hdfa6baa41bc8b82cE"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17hc1ea778f34506390E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9143b4968b3afd78E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h15400e4abae8bbbeE"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb9

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17ha63680436de3943cE"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10
}

; core::fmt::builders::DebugList::entries
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(16) %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17h193b60a495cb5fdfE(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16) %self, i32* nonnull %entries.0, i32* %entries.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %entry = alloca i32*, align 8
  %_7 = alloca i32*, align 8
  %iter = alloca { i32*, i32* }, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %1 = call { i32*, i32* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h181c677b636f0d43E"(i32* nonnull %entries.0, i32* %entries.1)
  %_4.0 = extractvalue { i32*, i32* } %1, 0
  %_4.1 = extractvalue { i32*, i32* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %iter, i32 0, i32 0
  store i32* %_4.0, i32** %2, align 8
  %3 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %iter, i32 0, i32 1
  store i32* %_4.1, i32** %3, align 8
  br label %bb2

bb2:                                              ; preds = %bb8, %bb1
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %4 = invoke align 4 dereferenceable_or_null(4) i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfb879eeb940b12c5E"({ i32*, i32* }* align 8 dereferenceable(16) %iter)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i32* %4, i32** %_7, align 8
  %5 = bitcast i32** %_7 to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_10 = select i1 %7, i64 0, i64 1
  switch i64 %_10, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ]

bb11:                                             ; preds = %bb10, %cleanup
  br label %bb12

cleanup:                                          ; preds = %bb2
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb11

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  br label %bb9

bb4:                                              ; preds = %bb3
  %13 = load i32*, i32** %_7, align 8, !nonnull !5
  store i32* %13, i32** %entry, align 8
  %_14.0 = bitcast i32** %entry to {}*
; invoke core::fmt::builders::DebugList::entry
  %_12 = invoke align 8 dereferenceable(16) %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17hfd5de0649c122df2E(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16) %self, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb4
  br label %bb8

bb10:                                             ; preds = %cleanup1
  br label %bb11

cleanup1:                                         ; preds = %bb4
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb10

bb8:                                              ; preds = %bb7
  br label %bb2

bb12:                                             ; preds = %bb11
  %19 = bitcast { i8*, i32 }* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

bb9:                                              ; preds = %bb6
  ret %"core::fmt::builders::DebugList"* %self
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h039a7a01fe84f5c0E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %0, [0 x { [0 x i8]*, i64 }]* nonnull align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* nonnull align 8 %args.0, i64 %args.1) unnamed_addr #0 {
start:
  %_16 = alloca { i64*, i64 }, align 8
  %_3 = alloca i8, align 1
  %_4 = icmp ult i64 %pieces.1, %args.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1
  %_9 = icmp ugt i64 %pieces.1, %_12
  %1 = zext i1 %_9 to i8
  store i8 %1, i8* %_3, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i8, i8* %_3, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %4 = bitcast { i64*, i64 }* %_16 to {}**
  store {}* null, {}** %4, align 8
  %5 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %6, align 8
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 1
  store i64 %pieces.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1
  %9 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 0
  store i64* %10, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 1
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2
  %16 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %16, align 8
  %17 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 1
  store i64 %args.1, i64* %17, align 8
  ret void

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [12 x i8] }>* @alloc1140 to [0 x i8]*), i64 12, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1142 to %"core::panic::location::Location"*)) #17
  unreachable
}

; core::mem::needs_drop
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3mem10needs_drop17h3d00fefe86eb0a79E() unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  store i8 1, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::mem::size_of_val
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem11size_of_val17h866860ecfc83a590E(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 4168, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem12align_of_val17h5dd2c6f70b86db3cE(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h91e9dcb12f05f76dE(i64 %_x) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17habfa0602f2aa3689E(i64 %_x) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17hbe8466ca96f1f510E(i8 %_x) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17hc4618279a7ada15fE(i64* %0) unnamed_addr #0 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<core::option::Option<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>>
  call void @"_ZN4core3ptr172drop_in_place$LT$core..option..Option$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$$GT$17h41c286f28fba9b4bE"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::forget
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem6forget17h9ca1a50b974c8f38E(i8 %t) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  store i8 %t, i8* %0, align 1
  %1 = load i8, i8* %0, align 1
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::forget
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem6forget17he37090d19731ed8dE(i64 %t) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 %t, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3mem7replace17h01d87491d5686e81E(i32* align 4 dereferenceable(4) %dest, i32 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i32 @_ZN4core3ptr4read17h0b7082107e494346E(i32* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h567dd17b5e0930f4E(i32* %dest, i32 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i32 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17h04523271935bbb70E(i64* align 8 dereferenceable(8) %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i64 @_ZN4core3ptr4read17h9ebe90a817afdea8E(i64* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hbabe6385d17ea78eE(i64* %dest, i64 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i64 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core3mem7replace17h12f9faed86466695E(i8* align 1 dereferenceable(1) %dest, i8 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i8 @_ZN4core3ptr4read17hf105c2c9f584457aE(i8* %dest)
          to label %bb1 unwind label %cleanup, !range !13

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h6c3d25a29dfc04ecE(i8* %dest, i8 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i8 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3mem7replace17h488d4cd9ed53134aE(i32* align 4 dereferenceable(4) %dest, i32 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i32 @_ZN4core3ptr4read17h1c3981f6354c66a0E(i32* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h3be327fb061eef2cE(i32* %dest, i32 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i32 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17h4ebbf55b48fc9928E(i64* align 8 dereferenceable(8) %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i64 @_ZN4core3ptr4read17h7800fb95afee898dE(i64* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h2edfb9d1ff70c6e1E(i64* %dest, i64 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i64 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @_ZN4core3mem7replace17h71cbb5d214ba6caaE(i64** align 8 dereferenceable(8) %dest, i64* %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %result = alloca i64*, align 8
  %src = alloca i64*, align 8
  store i64* %0, i64** %src, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %2 = invoke i64* @_ZN4core3ptr4read17h0deb189f60c84cabE(i64** %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %2, i64** %result, align 8
  store i8 0, i8* %_7, align 1
  %_6 = load i64*, i64** %src, align 8
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h978d621f13b1274dE(i64** %dest, i64* %_6)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %3 = load i8, i8* %_7, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %10 = load i64*, i64** %result, align 8
  ret i64* %10

bb3:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<core::option::Option<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>>
  call void @"_ZN4core3ptr172drop_in_place$LT$core..option..Option$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$$GT$17h41c286f28fba9b4bE"(i64** %result) #18
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %1 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
; call core::ptr::drop_in_place<core::option::Option<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>>
  call void @"_ZN4core3ptr172drop_in_place$LT$core..option..Option$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$$GT$17h41c286f28fba9b4bE"(i64** %src) #18
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core3mem7replace17hb0ba00700f985ea2E({ i8*, i64 }* align 8 dereferenceable(16) %dest, i8* align 1 %src.0, i64 %src.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %1 = invoke { i8*, i64 } @_ZN4core3ptr4read17h71c44ee3625c820dE({ i8*, i64 }* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %result.0 = extractvalue { i8*, i64 } %1, 0
  %result.1 = extractvalue { i8*, i64 } %1, 1
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h9c3344311bae960cE({ i8*, i64 }* %dest, i8* align 1 %src.0, i64 %src.1)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %2 = load i8, i8* %_7, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %9 = insertvalue { i8*, i64 } undef, i8* %result.0, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %result.1, 1
  ret { i8*, i64 } %10

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3mem7replace17hb2640474ed34b65eE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %dest, [0 x i8]* nonnull align 1 %src.0, i64 %src.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %1 = invoke { [0 x i8]*, i64 } @_ZN4core3ptr4read17h5844be456680355eE({ [0 x i8]*, i64 }* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %result.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %result.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h3bb6859f977df0b5E({ [0 x i8]*, i64 }* %dest, [0 x i8]* nonnull align 1 %src.0, i64 %src.1)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %2 = load i8, i8* %_7, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %result.0, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %result.1, 1
  ret { [0 x i8]*, i64 } %10

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3mem7replace17hb78041317af39211E(i8* align 1 dereferenceable(1) %dest, i1 zeroext %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke zeroext i1 @_ZN4core3ptr4read17h6e573d7bc5415db4E(i8* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h68296a3c7a7c279bE(i8* %dest, i1 zeroext %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i1 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core3mem7replace17hd152f1a98802129eE({ i32, i32 }* align 4 dereferenceable(8) %dest, i32 %src.0, i32 %src.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %1 = invoke { i32, i32 } @_ZN4core3ptr4read17ha141bd60b6a74a58E({ i32, i32 }* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %result.0 = extractvalue { i32, i32 } %1, 0
  %result.1 = extractvalue { i32, i32 } %1, 1
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hb3e06e4ffb398a51E({ i32, i32 }* %dest, i32 %src.0, i32 %src.1)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %2 = load i8, i8* %_7, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %9 = insertvalue { i32, i32 } undef, i32 %result.0, 0
  %10 = insertvalue { i32, i32 } %9, i32 %result.1, 1
  ret { i32, i32 } %10

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17hfdaceda09d7a586eE(i64* align 8 dereferenceable(8) %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i64 @_ZN4core3ptr4read17h54c2e520826b42eeE(i64* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hb72713fdc33ae47bE(i64* %dest, i64 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i64 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::num::<impl i64>::abs
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3num21_$LT$impl$u20$i64$GT$3abs17h02bf4cef19c36132E"(i64 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = icmp slt i64 %self, 0
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %1, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  store i64 %self, i64* %0, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  %_5 = icmp eq i64 %self, -9223372036854775808
  %2 = call i1 @llvm.expect.i1(i1 %_5, i1 false)
  br i1 %2, label %panic, label %bb3

bb3:                                              ; preds = %bb2
  %3 = sub i64 0, %self
  store i64 %3, i64* %0, align 8
  br label %bb5

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.4 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1144 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb4, %bb3
  %4 = load i64, i64* %0, align 8
  ret i64 %4
}

; core::num::<impl u64>::pow
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3num21_$LT$impl$u20$u64$GT$3pow17hf70f85bca80b3ad8E"(i64 %self, i32 %0) unnamed_addr #0 {
start:
  %acc = alloca i64, align 8
  %base = alloca i64, align 8
  %1 = alloca i64, align 8
  %exp = alloca i32, align 4
  store i32 %0, i32* %exp, align 4
  %_3 = load i32, i32* %exp, align 4
  %2 = icmp eq i32 %_3, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i64 1, i64* %1, align 8
  br label %bb12

bb2:                                              ; preds = %start
  store i64 %self, i64* %base, align 8
  store i64 1, i64* %acc, align 8
  br label %bb3

bb3:                                              ; preds = %bb9, %bb2
  %_7 = load i32, i32* %exp, align 4
  %_6 = icmp ugt i32 %_7, 1
  br i1 %_6, label %bb4, label %bb10

bb10:                                             ; preds = %bb3
  %_16 = load i64, i64* %acc, align 8
  %_17 = load i64, i64* %base, align 8
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_16, i64 %_17)
  %_18.0 = extractvalue { i64, i1 } %3, 0
  %_18.1 = extractvalue { i64, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false)
  br i1 %4, label %panic2, label %bb11

bb4:                                              ; preds = %bb3
  %_9 = load i32, i32* %exp, align 4
  %_8 = and i32 %_9, 1
  %5 = icmp eq i32 %_8, 1
  br i1 %5, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_10 = load i64, i64* %acc, align 8
  %_11 = load i64, i64* %base, align 8
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_10, i64 %_11)
  %_12.0 = extractvalue { i64, i1 } %6, 0
  %_12.1 = extractvalue { i64, i1 } %6, 1
  %7 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false)
  br i1 %7, label %panic, label %bb6

bb7:                                              ; preds = %bb4
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  %8 = load i32, i32* %exp, align 4
  %9 = udiv i32 %8, 2
  store i32 %9, i32* %exp, align 4
  %_13 = load i64, i64* %base, align 8
  %_14 = load i64, i64* %base, align 8
  %10 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_13, i64 %_14)
  %_15.0 = extractvalue { i64, i1 } %10, 0
  %_15.1 = extractvalue { i64, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false)
  br i1 %11, label %panic1, label %bb9

bb6:                                              ; preds = %bb5
  store i64 %_12.0, i64* %acc, align 8
  br label %bb8

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1146 to %"core::panic::location::Location"*)) #17
  unreachable

bb9:                                              ; preds = %bb8
  store i64 %_15.0, i64* %base, align 8
  br label %bb3

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1146 to %"core::panic::location::Location"*)) #17
  unreachable

bb11:                                             ; preds = %bb10
  store i64 %_18.0, i64* %1, align 8
  br label %bb12

panic2:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1146 to %"core::panic::location::Location"*)) #17
  unreachable

bb12:                                             ; preds = %bb1, %bb11
  %12 = load i64, i64* %1, align 8
  ret i64 %12
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hac01b275661d02b8E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !4
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !4
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !2
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::nonzero::NonZeroUsize::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h789271b998e25442E(i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 %n, i64* %0, align 8
  %1 = load i64, i64* %0, align 8, !range !15
  ret i64 %1
}

; core::num::nonzero::NonZeroUsize::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize3get17h58df240295649fb8E(i64 %self) unnamed_addr #0 {
start:
  ret i64 %self
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function5FnMut8call_mut17hca73c82c8fc5b0c5E({}* nonnull align 1 %_1, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_2 = alloca { i8*, i64 }, align 8
  %2 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %7 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !5
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
; call rand::os::imp::getrandom_fill_bytes
  call void @_ZN4rand2os3imp20getrandom_fill_bytes17hc5f81f5c4bc9fb5eE([0 x i8]* nonnull align 1 %7, i64 %9)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h204049dee81827fcE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]"* nonnull align 1 %self, i32* align 4 dereferenceable(4) %0) unnamed_addr #1 {
start:
  %args = alloca i32*, align 8
  store i32* %0, i32** %args, align 8
  %_4 = load i32*, i32** %args, align 8, !nonnull !5
; call <rand::prng::isaac::IsaacRng as rand::SeedableRng<&[u32]>>::reseed::{{closure}}
  %1 = call i32 @"_ZN90_$LT$rand..prng..isaac..IsaacRng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u32$u5d$$GT$$GT$6reseed28_$u7b$$u7b$closure$u7d$$u7d$17h9093b4ef1389497fE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]"* nonnull align 1 %self, i32* align 4 dereferenceable(4) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h47fa9e2d31439c33E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]"* nonnull align 1 %self, i64* align 8 dereferenceable(8) %0) unnamed_addr #1 {
start:
  %args = alloca i64*, align 8
  store i64* %0, i64** %args, align 8
  %_4 = load i64*, i64** %args, align 8, !nonnull !5
; call <rand::prng::isaac64::Isaac64Rng as rand::SeedableRng<&[u64]>>::reseed::{{closure}}
  %1 = call i64 @"_ZN94_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u64$u5d$$GT$$GT$6reseed28_$u7b$$u7b$closure$u7d$$u7d$17h8bb4434075503990E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]"* nonnull align 1 %self, i64* align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h4d21b7c04134c422E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65]"* nonnull align 1 %self, i64 %0) unnamed_addr #1 {
start:
  %args = alloca i64, align 8
  store i64 %0, i64* %args, align 8
  %_4 = load i64, i64* %args, align 8
; call rand::prng::isaac64::Isaac64Rng::init::{{closure}}
  %1 = call i64 @"_ZN4rand4prng7isaac6410Isaac64Rng4init28_$u7b$$u7b$closure$u7d$$u7d$17h1f1739fc62c7fd8cE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65]"* nonnull align 1 %self, i64 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h5147e3ad6c352f8cE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65].0"* nonnull align 1 %self, i64 %0) unnamed_addr #1 {
start:
  %args = alloca i64, align 8
  store i64 %0, i64* %args, align 8
  %_4 = load i64, i64* %args, align 8
; call rand::prng::isaac64::Isaac64Rng::init::{{closure}}
  %1 = call i64 @"_ZN4rand4prng7isaac6410Isaac64Rng4init28_$u7b$$u7b$closure$u7d$$u7d$17hf50b19986ef9ddfaE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65].0"* nonnull align 1 %self, i64 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h56ebb44909ae3b1cE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66]"* nonnull align 1 %self, i64 %0) unnamed_addr #1 {
start:
  %args = alloca i64, align 8
  store i64 %0, i64* %args, align 8
  %_4 = load i64, i64* %args, align 8
; call rand::prng::isaac::IsaacRng::init::{{closure}}
  %1 = call i64 @"_ZN4rand4prng5isaac8IsaacRng4init28_$u7b$$u7b$closure$u7d$$u7d$17h32e753f80c3521b6E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66]"* nonnull align 1 %self, i64 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h5a34200927d03da0E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:111:48: 111:57]"* nonnull align 1 %self, i64 %0) unnamed_addr #1 {
start:
  %args = alloca i64, align 8
  store i64 %0, i64* %args, align 8
  %_4 = load i64, i64* %args, align 8
; call rand::prng::isaac64::Isaac64Rng::init::{{closure}}
  %1 = call i64 @"_ZN4rand4prng7isaac6410Isaac64Rng4init28_$u7b$$u7b$closure$u7d$$u7d$17h63448566323b74dbE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:111:48: 111:57]"* nonnull align 1 %self, i64 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h6b068e04969be4c2E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:138:47: 138:56]"* nonnull align 1 %self, i64 %0) unnamed_addr #1 {
start:
  %args = alloca i64, align 8
  store i64 %0, i64* %args, align 8
  %_4 = load i64, i64* %args, align 8
; call rand::prng::isaac64::Isaac64Rng::isaac64::{{closure}}
  %1 = call i64 @"_ZN4rand4prng7isaac6410Isaac64Rng7isaac6428_$u7b$$u7b$closure$u7d$$u7d$17he645b21636148aa8E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:138:47: 138:56]"* nonnull align 1 %self, i64 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17hc7ee7363e62d7152E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:174:42: 174:51]"* nonnull align 1 %self, i64 %0) unnamed_addr #1 {
start:
  %args = alloca i64, align 8
  store i64 %0, i64* %args, align 8
  %_4 = load i64, i64* %args, align 8
; call rand::prng::isaac::IsaacRng::isaac::{{closure}}
  %1 = call i64 @"_ZN4rand4prng5isaac8IsaacRng5isaac28_$u7b$$u7b$closure$u7d$$u7d$17h0bd85e4fae91d915E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:174:42: 174:51]"* nonnull align 1 %self, i64 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17hd46806f41bb15864E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66].1"* nonnull align 1 %self, i64 %0) unnamed_addr #1 {
start:
  %args = alloca i64, align 8
  store i64 %0, i64* %args, align 8
  %_4 = load i64, i64* %args, align 8
; call rand::prng::isaac::IsaacRng::init::{{closure}}
  %1 = call i64 @"_ZN4rand4prng5isaac8IsaacRng4init28_$u7b$$u7b$closure$u7d$$u7d$17h1657134d1b97eb12E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66].1"* nonnull align 1 %self, i64 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17he7fd71c0fc4f706aE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:115:49: 115:58]"* nonnull align 1 %self, i64 %0) unnamed_addr #1 {
start:
  %args = alloca i64, align 8
  store i64 %0, i64* %args, align 8
  %_4 = load i64, i64* %args, align 8
; call rand::prng::isaac::IsaacRng::init::{{closure}}
  %1 = call i64 @"_ZN4rand4prng5isaac8IsaacRng4init28_$u7b$$u7b$closure$u7d$$u7d$17h9729f488993e39c9E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:115:49: 115:58]"* nonnull align 1 %self, i64 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h579554b603f20520E"(i8** %_1, { i64, i8 }* align 8 dereferenceable(16) %0) unnamed_addr #0 {
start:
  %_2 = alloca i64*, align 8
  %1 = bitcast i64** %_2 to { i64, i8 }**
  store { i64, i8 }* %0, { i64, i8 }** %1, align 8
  %2 = load i8*, i8** %_1, align 8, !nonnull !5
  %3 = load i64*, i64** %_2, align 8, !nonnull !5
  %4 = bitcast i64* %3 to { i64, i8 }*
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h31196b7a9376a7adE(i8* align 1 dereferenceable(1) %2, { i64, i8 }* align 8 dereferenceable(16) %4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17haa0c9a6238cb5ae0E"({}* %_1, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_2 = alloca { i8*, i64 }, align 8
  %2 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8, !nonnull !5
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8* %6 to [0 x i8]*
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h3eeb743854065440E([0 x i8]* nonnull align 1 %9, i64 %8)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal nonnull i64* @_ZN4core3ops8function6FnOnce9call_once17h1ade202eab173dc5E() unnamed_addr #0 {
start:
  %_2 = alloca {}, align 1
; call rand::thread_rng::THREAD_RNG_KEY::__init
  %0 = call nonnull i64* @_ZN4rand10thread_rng14THREAD_RNG_KEY6__init17h876ccd645ad83f50E()
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h31196b7a9376a7adE(i8* align 1 dereferenceable(1) %0, { i64, i8 }* align 8 dereferenceable(16) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_2 = alloca i64*, align 8
  %_1 = alloca i8*, align 8
  store i8* %0, i8** %_1, align 8
  %3 = bitcast i64** %_2 to { i64, i8 }**
  store { i64, i8 }* %1, { i64, i8 }** %3, align 8
  %4 = load i64*, i64** %_2, align 8, !nonnull !5
  %5 = bitcast i64* %4 to { i64, i8 }*
; invoke std::sync::once::Once::call_once::{{closure}}
  invoke void @"_ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h40f9cc8155445544E"(i8** align 8 dereferenceable(8) %_1, { i64, i8 }* align 8 dereferenceable(16) %5)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  br label %bb2

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb2:                                              ; preds = %bb1
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h3eeb743854065440E([0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_2 = alloca { i8*, i64 }, align 8
  %2 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %7 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !5
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
; call rand::os::imp::getrandom_fill_bytes
  call void @_ZN4rand2os3imp20getrandom_fill_bytes17hc5f81f5c4bc9fb5eE([0 x i8]* nonnull align 1 %7, i64 %9)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17h48f593a00c280e89E(i64* align 8 dereferenceable(8) %0, i64* align 8 dereferenceable(8) %1) unnamed_addr #0 {
start:
  %_2 = alloca { i64*, i64* }, align 8
  %2 = bitcast { i64*, i64* }* %_2 to i64**
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  store i64* %1, i64** %3, align 8
  %4 = bitcast { i64*, i64* }* %_2 to i64**
  %5 = load i64*, i64** %4, align 8, !nonnull !5
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !5
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hc878f3da3a98a74bE"(i64* align 8 dereferenceable(8) %5, i64* align 8 dereferenceable(8) %7), !range !14
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %8
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17h78e90618be62777dE(i32 %0) unnamed_addr #0 {
start:
  %_2 = alloca i32, align 4
  store i32 %0, i32* %_2, align 4
  %1 = load i32, i32* %_2, align 4
; call rand::os::OsRng
  %2 = call i32 @_ZN4rand2os5OsRng17hdda9848664f5837dE(i32 %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %2
}

; core::ptr::drop_in_place<<core::cell::RefCell<T> as core::fmt::Debug>::fmt::BorrowedPlaceholder>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr111drop_in_place$LT$$LT$core..cell..RefCell$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$..fmt..BorrowedPlaceholder$GT$17h26c807ce39865c75E"(%"<core::cell::RefCell<T> as core::fmt::Debug>::fmt::BorrowedPlaceholder"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h5bc2c3a0f432d370E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 0
  %2 = load {}*, {}** %1, align 8, !nonnull !5
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 1
  %4 = load [3 x i64]*, [3 x i64]** %3, align 8, !nonnull !5
  %5 = bitcast [3 x i64]* %4 to void ({}*)**
  %6 = getelementptr inbounds void ({}*)*, void ({}*)** %5, i64 0
  %7 = load void ({}*)*, void ({}*)** %6, align 8, !invariant.load !5, !nonnull !5
  invoke void %7({}* %2)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %8 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !nonnull !5
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8, !nonnull !5
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h631c3ae551e05638E(i8* nonnull %10, i64* align 8 dereferenceable(24) %12)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %13 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8, !nonnull !5
  %16 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8, !nonnull !5
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h631c3ae551e05638E(i8* nonnull %15, i64* align 8 dereferenceable(24) %17) #18
  br label %bb2

cleanup:                                          ; preds = %start
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<core::cell::Ref<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr119drop_in_place$LT$core..cell..Ref$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$17h196ab9f6961dbb4dE"({ i64*, i64* }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::BorrowRef>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..cell..BorrowRef$GT$17ha75793f8d3be17c6E"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::RefMut<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr122drop_in_place$LT$core..cell..RefMut$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$17hdec9561845e9f658E"({ i64*, i64* }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::BorrowRefMut>
  call void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17h10da76d7d6b08ef8E"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::read_volatile
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core3ptr13read_volatile17h6b48025ab93c77e1E(i8* %src) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = load volatile i8, i8* %src, align 1
  store i8 %1, i8* %0, align 1
  %2 = load i8, i8* %0, align 1
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %2
}

; core::ptr::read_volatile
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr13read_volatile17hc80bc5f6fe688a15E(i64* %src) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = load volatile i64, i64* %src, align 8
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::ptr::drop_in_place<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr144drop_in_place$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$17he602544e51f7f522E"(i64** %_1) unnamed_addr #1 {
start:
; call <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN64_$LT$alloc..rc..Rc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6b2500866e9584e4E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<&alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr148drop_in_place$LT$$RF$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$17h5143702427724202E"(i64*** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<std::sync::once::Once::call_once<rand::os::imp::is_getrandom_available::{{closure}}>::{{closure}}>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr156drop_in_place$LT$std..sync..once..Once..call_once$LT$rand..os..imp..is_getrandom_available..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hb0e56e8fb8995f39E"(i8** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<core::option::Option<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr172drop_in_place$LT$core..option..Option$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$$GT$17h41c286f28fba9b4bE"(i64** %_1) unnamed_addr #1 {
start:
  %0 = bitcast i64** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>
  call void @"_ZN4core3ptr144drop_in_place$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$17he602544e51f7f522E"(i64** %_1)
  br label %bb1
}

; core::ptr::drop_in_place<std::thread::local::fast::Key<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr181drop_in_place$LT$std..thread..local..fast..Key$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$$GT$17hdc50233e74b071f2E"({ i64*, i8 }* %_1) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %_1 to i64**
; call core::ptr::drop_in_place<std::thread::local::lazy::LazyKeyInner<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>>
  call void @"_ZN4core3ptr190drop_in_place$LT$std..thread..local..lazy..LazyKeyInner$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$$GT$17hae5fa5e3e960aa85E"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::thread::local::lazy::LazyKeyInner<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr190drop_in_place$LT$std..thread..local..lazy..LazyKeyInner$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$$GT$17hae5fa5e3e960aa85E"(i64** %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<core::cell::UnsafeCell<core::option::Option<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>>>
  call void @"_ZN4core3ptr202drop_in_place$LT$core..cell..UnsafeCell$LT$core..option..Option$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$$GT$$GT$17h333ebd01d9c9bfacE"(i64** %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<core::option::Option<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr202drop_in_place$LT$core..cell..UnsafeCell$LT$core..option..Option$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$$GT$$GT$17h333ebd01d9c9bfacE"(i64** %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<core::option::Option<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>>
  call void @"_ZN4core3ptr172drop_in_place$LT$core..option..Option$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$$GT$17h41c286f28fba9b4bE"(i64** %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h472ae3fefddecc24E(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h9f60cea34d45e19eE"(i8* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h700373c6640e78c6E({}* %_3, i64 %len)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h4e1d21ffa8db218eE(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h2c622798bfd3b43aE"(i8* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h327ff20a3a033e2fE({}* %_3, i64 %len)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; core::ptr::drop_in_place<std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>::from::StringError>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr226drop_in_place$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$..from..StringError$GT$17h226016f358ba055dE"(%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* %_1 to %"alloc::string::String"*
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hadf42b9406e30e01E"(%"alloc::string::String"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h4520bf7c57878365E(i8* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast i8* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hd25236dcfbf6156aE({}* %0, i64 %len)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hc8b63ca4d761e8d9E(i32* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast i32* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i32]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h27c0bb8127758d20E({}* %0, i64 %len)
  %2 = extractvalue { [0 x i32]*, i64 } %1, 0
  %3 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %2, 0
  %5 = insertvalue { [0 x i32]*, i64 } %4, i64 %3, 1
  ret { [0 x i32]*, i64 } %5
}

; core::ptr::drop_in_place<&f64>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$f64$GT$17h51377cf01b9bbcf6E"(double** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&str>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17ha9cb31a3bb53a9d7E"({ [0 x i8]*, i64 }* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&u64>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17hffa374538cc5a6beE"(i64** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&usize>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h67cf4fcd996a8c9dE"(i64** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<std::fs::File>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17h28eca9aef3520b31E"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sys::unix::fs::File>
  call void @"_ZN4core3ptr45drop_in_place$LT$std..sys..unix..fs..File$GT$17hcf2e798a5724eab1E"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<rand::ThreadRng>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr36drop_in_place$LT$rand..ThreadRng$GT$17h3c2a822bb3e11c50E"(i64** %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::rc::Rc<core::cell::RefCell<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>>
  call void @"_ZN4core3ptr144drop_in_place$LT$alloc..rc..Rc$LT$core..cell..RefCell$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$$GT$17he602544e51f7f522E"(i64** %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<rand::os::OsRng>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr36drop_in_place$LT$rand..os..OsRng$GT$17h4357fda02db0a4caE"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<rand::os::imp::OsRng>
  call void @"_ZN4core3ptr41drop_in_place$LT$rand..os..imp..OsRng$GT$17h845e3a6cf55a6ce5E"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<&rand::StdRng>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr37drop_in_place$LT$$RF$rand..StdRng$GT$17hb1481b2e57bad7cfE"(%StdRng** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<rand::os::imp::OsRng>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr41drop_in_place$LT$rand..os..imp..OsRng$GT$17h845e3a6cf55a6ce5E"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<rand::os::imp::OsRngInner>
  call void @"_ZN4core3ptr46drop_in_place$LT$rand..os..imp..OsRngInner$GT$17hde09a51dbba21f87E"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::io::error::Repr>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr41drop_in_place$LT$std..io..error..Repr$GT$17h2e1046a9715a1cd1E"(%"std::io::error::Repr"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::io::error::Repr"* %_1 to i8*
  %1 = load i8, i8* %0, align 8, !range !9
  %_2 = zext i8 %1 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
  ]

bb2:                                              ; preds = %start
  %2 = bitcast %"std::io::error::Repr"* %_1 to %"std::io::error::Repr::Custom"*
  %3 = getelementptr inbounds %"std::io::error::Repr::Custom", %"std::io::error::Repr::Custom"* %2, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
  call void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17h60f65498ca185edaE"(%"std::io::error::Custom"** %3)
  br label %bb1

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hadf42b9406e30e01E"(%"alloc::string::String"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"alloc::string::String"* %_1 to %"alloc::vec::Vec<u8>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h14b37884d757e53fE"(%"alloc::vec::Vec<u8>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::BorrowRef>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$core..cell..BorrowRef$GT$17ha75793f8d3be17c6E"(i64** %_1) unnamed_addr #1 {
start:
; call <core::cell::BorrowRef as core::ops::drop::Drop>::drop
  call void @"_ZN63_$LT$core..cell..BorrowRef$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfbd50de815d30ac3E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::io::error::Error>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::io::error::Error"* %_1 to %"std::io::error::Repr"*
; call core::ptr::drop_in_place<std::io::error::Repr>
  call void @"_ZN4core3ptr41drop_in_place$LT$std..io..error..Repr$GT$17h2e1046a9715a1cd1E"(%"std::io::error::Repr"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::io::error::Custom>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h5c55772a16d9b701E"(%"std::io::error::Custom"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::io::error::Custom"* %_1 to { {}*, [3 x i64]* }*
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>
  call void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h5bc2c3a0f432d370E"({ {}*, [3 x i64]* }* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::BorrowRefMut>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17h10da76d7d6b08ef8E"(i64** %_1) unnamed_addr #1 {
start:
; call <core::cell::BorrowRefMut as core::ops::drop::Drop>::drop
  call void @"_ZN66_$LT$core..cell..BorrowRefMut$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4c0b87303644a904E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sys::unix::fs::File>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr45drop_in_place$LT$std..sys..unix..fs..File$GT$17hcf2e798a5724eab1E"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sys::unix::fd::FileDesc>
  call void @"_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17hee0da45eed2f31faE"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h14b37884d757e53fE"(%"alloc::vec::Vec<u8>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h79c6fbd1063fe795E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hffee300085427584E"({ i8*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hffee300085427584E"({ i8*, i64 }* %2) #18
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<rand::os::imp::OsRngInner>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$rand..os..imp..OsRngInner$GT$17hde09a51dbba21f87E"(i32* %_1) unnamed_addr #1 {
start:
  %0 = load i32, i32* %_1, align 4
  %1 = sub i32 %0, -1
  %2 = icmp eq i32 %1, 0
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<rand::read::ReadRng<std::fs::File>>
  call void @"_ZN4core3ptr61drop_in_place$LT$rand..read..ReadRng$LT$std..fs..File$GT$$GT$17h5af707f1f93162b0E"(i32* %_1)
  br label %bb1
}

; core::ptr::drop_in_place<core::cell::BorrowMutError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr47drop_in_place$LT$core..cell..BorrowMutError$GT$17h061eed3ecc477953E"(%"core::cell::BorrowMutError"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<std::time::SystemTimeError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr47drop_in_place$LT$std..time..SystemTimeError$GT$17h9ceadd68c1b979b8E"({ i64, i32 }* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&rand::ThreadRngReseeder>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr48drop_in_place$LT$$RF$rand..ThreadRngReseeder$GT$17hcaadf191f80f25a4E"(%ThreadRngReseeder** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17h21c99bf8c3765efcE"(i32* %_1) unnamed_addr #1 {
start:
; call <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
  call void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha2107779dbaf85e0E"(i32* align 4 dereferenceable(4) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sys::unix::fd::FileDesc>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17hee0da45eed2f31faE"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17h21c99bf8c3765efcE"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17h03737431b06e45e7E(%"alloc::alloc::Global"* %src) unnamed_addr #0 {
start:
  %0 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %0 to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp to %"alloc::alloc::Global"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"alloc::alloc::Global"* %2 to i8*
  %4 = bitcast %"alloc::alloc::Global"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 0, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3ptr4read17h0b7082107e494346E(i32* %src) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %1 = bitcast i32* %0 to {}*
  %2 = load i32, i32* %0, align 4
  store i32 %2, i32* %tmp, align 4
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i32* %tmp to i8*
  %4 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %_6 = load i32, i32* %tmp, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i32 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @_ZN4core3ptr4read17h0deb189f60c84cabE(i64** %src) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %1 = bitcast i8** %0 to {}*
  %2 = load i8*, i8** %0, align 8
  store i8* %2, i8** %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i8** %tmp to i64**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast i64** %3 to i8*
  %5 = bitcast i64** %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false)
  %_6 = load i8*, i8** %tmp, align 8
  %_3.i = bitcast i8* %_6 to i64*
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64* %_3.i
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3ptr4read17h1c3981f6354c66a0E(i32* %src) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %1 = bitcast i32* %0 to {}*
  %2 = load i32, i32* %0, align 4
  store i32 %2, i32* %tmp, align 4
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i32* %tmp to i8*
  %4 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %_6 = load i32, i32* %tmp, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i32 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr4read17h54c2e520826b42eeE(i64* %src) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*
  %4 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %_6 = load i64, i64* %tmp, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr4read17h5844be456680355eE({ [0 x i8]*, i64 }* %src) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %tmp = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %tmp to { [0 x i8]*, i64 }*
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = bitcast { [0 x i8]*, i64 }* %8 to i8*
  %10 = bitcast { [0 x i8]*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 0
  %_6.0 = load i8*, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 1
  %_6.1 = load i64, i64* %12, align 8
  %13 = bitcast i8* %_6.0 to [0 x i8]*
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %_6.1, 1
  %16 = extractvalue { [0 x i8]*, i64 } %15, 0
  %17 = extractvalue { [0 x i8]*, i64 } %15, 1
  %18 = extractvalue { [0 x i8]*, i64 } %15, 0
  %19 = extractvalue { [0 x i8]*, i64 } %15, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %20 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %18, 0
  %21 = insertvalue { [0 x i8]*, i64 } %20, i64 %19, 1
  ret { [0 x i8]*, i64 } %21
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3ptr4read17h6e573d7bc5415db4E(i8* %src) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %tmp = alloca i8, align 1
  %1 = bitcast i8* %0 to {}*
  %2 = load i8, i8* %0, align 1
  store i8 %2, i8* %tmp, align 1
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %tmp, i8* align 1 %src, i64 1, i1 false)
  %_6 = load i8, i8* %tmp, align 1
  %_3.i = trunc i8 %_6 to i1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %_3.i
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core3ptr4read17h71c44ee3625c820dE({ i8*, i64 }* %src) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %tmp = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast { i8*, i64 }* %tmp to i8*
  %9 = bitcast { i8*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 0
  %_6.0 = load i8*, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 1
  %_6.1 = load i64, i64* %11, align 8
  %12 = insertvalue { i8*, i64 } undef, i8* %_6.0, 0
  %13 = insertvalue { i8*, i64 } %12, i64 %_6.1, 1
  %14 = extractvalue { i8*, i64 } %13, 0
  %15 = extractvalue { i8*, i64 } %13, 1
  %16 = extractvalue { i8*, i64 } %13, 0
  %17 = extractvalue { i8*, i64 } %13, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %18 = insertvalue { i8*, i64 } undef, i8* %16, 0
  %19 = insertvalue { i8*, i64 } %18, i64 %17, 1
  ret { i8*, i64 } %19
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr4read17h7800fb95afee898dE(i64* %src) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*
  %4 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %_6 = load i64, i64* %tmp, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr4read17h9ebe90a817afdea8E(i64* %src) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*
  %4 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %_6 = load i64, i64* %tmp, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core3ptr4read17ha141bd60b6a74a58E({ i32, i32 }* %src) unnamed_addr #0 {
start:
  %0 = alloca { i32, i32 }, align 4
  %tmp = alloca { i32, i32 }, align 4
  %1 = bitcast { i32, i32 }* %0 to {}*
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = insertvalue { i32, i32 } undef, i32 %3, 0
  %7 = insertvalue { i32, i32 } %6, i32 %5, 1
  store { i32, i32 } %7, { i32, i32 }* %tmp, align 4
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast { i32, i32 }* %tmp to i8*
  %9 = bitcast { i32, i32 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 8, i1 false)
  %10 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %tmp, i32 0, i32 0
  %_6.0 = load i32, i32* %10, align 4
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %tmp, i32 0, i32 1
  %_6.1 = load i32, i32* %11, align 4
  %12 = insertvalue { i32, i32 } undef, i32 %_6.0, 0
  %13 = insertvalue { i32, i32 } %12, i32 %_6.1, 1
  %14 = extractvalue { i32, i32 } %13, 0
  %15 = extractvalue { i32, i32 } %13, 1
  %16 = extractvalue { i32, i32 } %13, 0
  %17 = extractvalue { i32, i32 } %13, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %18 = insertvalue { i32, i32 } undef, i32 %16, 0
  %19 = insertvalue { i32, i32 } %18, i32 %17, 1
  ret { i32, i32 } %19
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core3ptr4read17hf105c2c9f584457aE(i8* %src) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %tmp = alloca i8, align 1
  %1 = bitcast i8* %0 to {}*
  %2 = load i8, i8* %0, align 1
  store i8 %2, i8* %tmp, align 1
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %tmp, i8* align 1 %src, i64 1, i1 false)
  %_6 = load i8, i8* %tmp, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8 %_6
}

; core::ptr::drop_in_place<std::thread::local::AccessError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$std..thread..local..AccessError$GT$17hd6b29150b4622252E"(%"std::thread::local::AccessError"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hffee300085427584E"({ i8*, i64 }* %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h530c7be54ae8550bE"({ i8*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<&rand::prng::isaac64::Isaac64Rng>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr56drop_in_place$LT$$RF$rand..prng..isaac64..Isaac64Rng$GT$17hdf426bbd8308b514E"(%"prng::isaac64::Isaac64Rng"** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<rand::os::imp::getrandom_fill_bytes>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr56drop_in_place$LT$rand..os..imp..getrandom_fill_bytes$GT$17h6136ee67b65527a5E"({}* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&rand::distributions::gamma::Gamma>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr58drop_in_place$LT$$RF$rand..distributions..gamma..Gamma$GT$17hfa1143599b5e5cabE"(%"distributions::gamma::Gamma"** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h2edfb9d1ff70c6e1E(i64* %dst, i64 %0) unnamed_addr #0 {
start:
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  %1 = bitcast i64* %dst to i8*
  %2 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h3bb6859f977df0b5E({ [0 x i8]*, i64 }* %dst, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %src = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = bitcast { [0 x i8]*, i64 }* %dst to i8*
  %5 = bitcast { [0 x i8]*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h3be327fb061eef2cE(i32* %dst, i32 %0) unnamed_addr #0 {
start:
  %src = alloca i32, align 4
  store i32 %0, i32* %src, align 4
  %1 = bitcast i32* %dst to i8*
  %2 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 4, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h567dd17b5e0930f4E(i32* %dst, i32 %0) unnamed_addr #0 {
start:
  %src = alloca i32, align 4
  store i32 %0, i32* %src, align 4
  %1 = bitcast i32* %dst to i8*
  %2 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 4, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h68296a3c7a7c279bE(i8* %dst, i1 zeroext %0) unnamed_addr #0 {
start:
  %src = alloca i8, align 1
  %1 = zext i1 %0 to i8
  store i8 %1, i8* %src, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 1, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h6c3d25a29dfc04ecE(i8* %dst, i8 %0) unnamed_addr #0 {
start:
  %src = alloca i8, align 1
  store i8 %0, i8* %src, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 1, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h978d621f13b1274dE(i64** %dst, i64* %0) unnamed_addr #0 {
start:
  %src = alloca i64*, align 8
  store i64* %0, i64** %src, align 8
  %1 = bitcast i64** %dst to i8*
  %2 = bitcast i64** %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h9c3344311bae960cE({ i8*, i64 }* %dst, i8* align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %src = alloca { i8*, i64 }, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = bitcast { i8*, i64 }* %dst to i8*
  %5 = bitcast { i8*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hb3e06e4ffb398a51E({ i32, i32 }* %dst, i32 %0, i32 %1) unnamed_addr #0 {
start:
  %src = alloca { i32, i32 }, align 4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %src, i32 0, i32 0
  store i32 %0, i32* %2, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %src, i32 0, i32 1
  store i32 %1, i32* %3, align 4
  %4 = bitcast { i32, i32 }* %dst to i8*
  %5 = bitcast { i32, i32 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 8, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hb72713fdc33ae47bE(i64* %dst, i64 %0) unnamed_addr #0 {
start:
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  %1 = bitcast i64* %dst to i8*
  %2 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hbabe6385d17ea78eE(i64* %dst, i64 %0) unnamed_addr #0 {
start:
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  %1 = bitcast i64* %dst to i8*
  %2 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::drop_in_place<&rand::distributions::normal::Normal>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr60drop_in_place$LT$$RF$rand..distributions..normal..Normal$GT$17hbf403dc875bd88a1E"({ double, double }** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<rand::read::ReadRng<std::fs::File>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr61drop_in_place$LT$rand..read..ReadRng$LT$std..fs..File$GT$$GT$17h5af707f1f93162b0E"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17h28eca9aef3520b31E"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<&rand::distributions::exponential::Exp>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr62drop_in_place$LT$$RF$rand..distributions..exponential..Exp$GT$17hec6ef83ec15461f6E"(double** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&rand::distributions::gamma::GammaRepr>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr62drop_in_place$LT$$RF$rand..distributions..gamma..GammaRepr$GT$17h46a16d33f281306fE"(%"distributions::gamma::GammaRepr"** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&rand::distributions::gamma::ChiSquared>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr63drop_in_place$LT$$RF$rand..distributions..gamma..ChiSquared$GT$17h6580fdd1816fec02E"(%"distributions::gamma::ChiSquared"** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&core::num::wrapping::Wrapping<u32>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr65drop_in_place$LT$$RF$core..num..wrapping..Wrapping$LT$u32$GT$$GT$17ha0ac89b907160a6bE"(i32** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<dyn core::any::Any+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr66drop_in_place$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$17h49ff52e14ad9dcc2E"({}* %_1.0, [3 x i64]* align 8 dereferenceable(24) %_1.1) unnamed_addr #1 {
start:
  %0 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %1 = getelementptr inbounds void ({}*)*, void ({}*)** %0, i64 0
  %2 = load void ({}*)*, void ({}*)** %1, align 8, !invariant.load !5, !nonnull !5
  call void %2({}* %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<&rand::distributions::gamma::ChiSquaredRepr>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr67drop_in_place$LT$$RF$rand..distributions..gamma..ChiSquaredRepr$GT$17h3387b24d287e376bE"(%"distributions::gamma::ChiSquaredRepr"** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&rand::distributions::gamma::GammaLargeShape>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr68drop_in_place$LT$$RF$rand..distributions..gamma..GammaLargeShape$GT$17h129bc0bb6cd9f809E"(%"distributions::gamma::GammaLargeShape"** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&rand::distributions::gamma::GammaSmallShape>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr68drop_in_place$LT$$RF$rand..distributions..gamma..GammaSmallShape$GT$17h8fb4cc848dfc58f8E"(%"distributions::gamma::GammaSmallShape"** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17h60f65498ca185edaE"(%"std::io::error::Custom"** %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %_1, align 8, !nonnull !5
; invoke core::ptr::drop_in_place<std::io::error::Custom>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h5c55772a16d9b701E"(%"std::io::error::Custom"* %1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %2 = bitcast %"std::io::error::Custom"** %_1 to i64**
  %3 = load i64*, i64** %2, align 8, !nonnull !5
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h012dc4adac85366eE(i64* nonnull %3)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %4 = bitcast %"std::io::error::Custom"** %_1 to i64**
  %5 = load i64*, i64** %4, align 8, !nonnull !5
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h012dc4adac85366eE(i64* nonnull %5) #18
  br label %bb2

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hf4ba1e214070ddbfE"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !5
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h1b714655db83e0d7E"(i8* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9c889871e03ba045E"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hf4ba1e214070ddbfE"(i8* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h30580127a65e6018E"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h0fbc4cee351e4b73E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"std::io::error::Custom"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hf4ba1e214070ddbfE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h8e3bc239fe9424fbE"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hced0962592a22de5E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hf4ba1e214070ddbfE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h9b5c26fb77af3636E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9d941ce2c2415af9E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1)
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hf4ba1e214070ddbfE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h9f19ec69ff66c217E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h622eb147e796c285E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1)
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hf4ba1e214070ddbfE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h0fbc4cee351e4b73E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"std::io::error::Custom"*
  ret %"std::io::error::Custom"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h622eb147e796c285E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9c889871e03ba045E"(i8* nonnull %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9d941ce2c2415af9E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hced0962592a22de5E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"*
  ret %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h45a8c287b0c388daE"({ i8*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !5
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !5
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h622eb147e796c285E"(i8* nonnull %_3.0, i64* align 8 dereferenceable(24) %_3.1)
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h46f6c38233e65fc4E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !5
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hced0962592a22de5E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h554dbe3c0e8a4651E"({ i8*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !5
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !5
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9d941ce2c2415af9E"(i8* nonnull %_3.0, i64* align 8 dereferenceable(24) %_3.1)
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hb2a0eded22f8b734E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !5
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h0fbc4cee351e4b73E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::io::error::Custom"* %_2
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h859c56f82b6cb21cE"() unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_1 = inttoptr i64 1 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hf4ba1e214070ddbfE"(i8* %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::drop_in_place<std::panicking::begin_panic::PanicPayload<&str>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr77drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$$RF$str$GT$$GT$17h4e7605da7da25334E"({ i8*, i64 }* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h9a9672e420675381E"(i8* %self, i8* %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1ee78556b7049d44E"(i32* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i32* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h9a9672e420675381E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h3c949c69424c6aa2E"({ i64, i64 }* %self) unnamed_addr #0 {
start:
  %_2 = bitcast { i64, i64 }* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h9a9672e420675381E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h43af0d189c7c87e2E"(i8* %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h9a9672e420675381E"(i8* %self, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h502364e24d5414a5E"(i64* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h9a9672e420675381E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hce10a86a85715a2bE"(i64* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h9a9672e420675381E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd63d492a87fa49adE"(i32* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i32* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h9a9672e420675381E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::drop_in_place<&[core::num::wrapping::Wrapping<u32>; 16]>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr87drop_in_place$LT$$RF$$u5b$core..num..wrapping..Wrapping$LT$u32$GT$$u3b$$u20$16$u5d$$GT$17h5b4d62aa55b0b860E"([16 x i32]** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h327ff20a3a033e2fE({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h700373c6640e78c6E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h27c0bb8127758d20E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[core::num::wrapping::Wrapping<u32>]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[core::num::wrapping::Wrapping<u32>]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[core::num::wrapping::Wrapping<u32>]>"* %_3 to { [0 x i32]*, i64 }*
  %10 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i32]*, [0 x i32]** %10, align 8
  %12 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %11, 0
  %15 = insertvalue { [0 x i32]*, i64 } %14, i64 %13, 1
  ret { [0 x i32]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hd25236dcfbf6156aE({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr8metadata8metadata17h92b3035e94977a45E([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %ptr.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1846285b0f56f71fE"({ i64, i64 }* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to { i64, i64 }**
  store { i64, i64 }* %ptr, { i64, i64 }** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !5
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h19137c7da6cc6bafE"(i64* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !5
  ret i64* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4fba5780ce0d40ffE"(i64* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !5
  ret i64* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8d6e12f16857b6f7E"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !5
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9dcd9a6bf9f45588E"(i32* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  store i32* %ptr, i32** %0, align 8
  %1 = load i32*, i32** %0, align 8, !nonnull !5
  ret i32* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hb051aeae42885484E"(i32* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  store i32* %ptr, i32** %0, align 8
  %1 = load i32*, i32** %0, align 8, !nonnull !5
  ret i32* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc3289a8a55b94576E"([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %ptr.1, i64* %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !5
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h0823b4b05fc8bb8dE"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h43af0d189c7c87e2E"(i8* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast i8** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_5 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8d6e12f16857b6f7E"(i8* %ptr)
  br label %bb3

bb3:                                              ; preds = %bb2
  store i8* %_5, i8** %0, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8*, i8** %0, align 8
  ret i8* %2
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5822e7ec7317f22cE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h526b685bc6affb33E"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8d6e12f16857b6f7E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6af255c4b8edaa4dE"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4c2086fd4e40cc11E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8d6e12f16857b6f7E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2506d5b918392d91E"(i64* nonnull %self) unnamed_addr #0 {
start:
  ret i64* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h26fde890c6f8361dE"(i32* nonnull %self) unnamed_addr #0 {
start:
  ret i32* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h495551e4c8970982E"(i32* nonnull %self) unnamed_addr #0 {
start:
  ret i32* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4c2086fd4e40cc11E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"*
  ret %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h526b685bc6affb33E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to [0 x i8]*
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %self.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha4af27f2168e3f77E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to { i64, i64 }*
  ret { i64, i64 }* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc0edf09b9258eafaE"(i8* nonnull %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he05dfbd7c4e2b26fE"(i64* nonnull %self) unnamed_addr #0 {
start:
  ret i64* %self
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h968b37e5ee1ce677E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4c2086fd4e40cc11E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %_2
}

; core::ptr::non_null::NonNull<[T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hbd7718d00d1b29dcE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_2 = call nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h73022ee8dc8568e4E"(i8* nonnull %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc0edf09b9258eafaE"(i8* nonnull %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h73022ee8dc8568e4E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h526b685bc6affb33E"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast [0 x i8]* %_3.0 to i8*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %2 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8d6e12f16857b6f7E"(i8* %1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %2
}

; core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h2f2721e727b9de4eE"(i8* nonnull %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc0edf09b9258eafaE"(i8* nonnull %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h4520bf7c57878365E(i8* %_4, i64 %len)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hc3289a8a55b94576E"([0 x i8]* %_3.0, i64 %_3.1)
  %2 = extractvalue { i8*, i64 } %1, 0
  %3 = extractvalue { i8*, i64 } %1, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1
  ret { i8*, i64 } %5
}

; core::ptr::non_null::NonNull<[T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h50ba5c7ee6ff0515E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h526b685bc6affb33E"(i8* nonnull %self.0, i64 %self.1)
  %_2.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::metadata
  %1 = call i64 @_ZN4core3ptr8metadata8metadata17h92b3035e94977a45E([0 x i8]* %_2.0, i64 %_2.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %1
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17ha7a3cdea72d9c71cE"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 0
  %2 = load {}*, {}** %1, align 8, !nonnull !5
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 1
  %4 = load [3 x i64]*, [3 x i64]** %3, align 8, !nonnull !5
  %5 = bitcast [3 x i64]* %4 to void ({}*)**
  %6 = getelementptr inbounds void ({}*)*, void ({}*)** %5, i64 0
  %7 = load void ({}*)*, void ({}*)** %6, align 8, !invariant.load !5, !nonnull !5
  invoke void %7({}* %2)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %8 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !nonnull !5
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8, !nonnull !5
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h299fa0f5098ebec4E(i8* nonnull %10, i64* align 8 dereferenceable(24) %12)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %13 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8, !nonnull !5
  %16 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8, !nonnull !5
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h299fa0f5098ebec4E(i8* nonnull %15, i64* align 8 dereferenceable(24) %17) #18
  br label %bb2

cleanup:                                          ; preds = %start
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<dyn std::error::Error+core::marker::Send+core::marker::Sync>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr92drop_in_place$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17h97f70b4a5156e629E"({}* %_1.0, [3 x i64]* align 8 dereferenceable(24) %_1.1) unnamed_addr #1 {
start:
  %0 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %1 = getelementptr inbounds void ({}*)*, void ({}*)** %0, i64 0
  %2 = load void ({}*)*, void ({}*)** %1, align 8, !invariant.load !5, !nonnull !5
  call void %2({}* %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::const_ptr::<impl *const T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hf080b92d1d9a8b8fE"(i8* %self, i8* %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17h2c2b0c69933c7c51E"(i8* %self, i8* %dest, i64 %count) unnamed_addr #0 {
start:
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h387c0a07d4475887E(i8* %self, i8* %dest, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h2c622798bfd3b43aE"(i8* %self) unnamed_addr #0 {
start:
  %0 = bitcast i8* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h9f60cea34d45e19eE"(i8* %self) unnamed_addr #0 {
start:
  %0 = bitcast i8* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h60864eeee0ce3099E"(i64* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hf080b92d1d9a8b8fE"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h61c0564b550d8e6aE"({ i64, i64 }* %self) unnamed_addr #0 {
start:
  %_2 = bitcast { i64, i64 }* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hf080b92d1d9a8b8fE"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h8225ab053c0a5dffE"(i32* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i32* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hf080b92d1d9a8b8fE"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hd626e8f43fc9aed8E"(i32* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i32* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hf080b92d1d9a8b8fE"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h4b076e79315b7f73E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb757973abf033026E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hf29fc5c638a92c44E"([0 x i64]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i64]* %self.0 to i64*
  ret i64* %0
}

; core::cell::BorrowRefMut::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 dereferenceable_or_null(8) i64* @_ZN4core4cell12BorrowRefMut3new17hdc939dd1cd3b2e5dE(i64* align 8 dereferenceable(8) %borrow) unnamed_addr #0 {
start:
  %_7 = alloca i64*, align 8
  %0 = alloca i64*, align 8
; call core::cell::Cell<T>::get
  %_2 = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17he7fe1034759dc0c1E"(i64* align 8 dereferenceable(8) %borrow)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h79636cf0a9378304E"(i64* align 8 dereferenceable(8) %borrow, i64 -1)
  br label %bb4

bb2:                                              ; preds = %bb1
  %2 = bitcast i64** %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %3 = load i64*, i64** %0, align 8
  ret i64* %3

bb4:                                              ; preds = %bb3
  store i64* %borrow, i64** %_7, align 8
  %4 = load i64*, i64** %_7, align 8, !nonnull !5
  store i64* %4, i64** %0, align 8
  br label %bb5
}

; core::cell::Cell<T>::get
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17h32f88d2811d5a666E"(i64* align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::cell::Cell<T>::get
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17hc2a526f6a88bc515E"(i8* align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %0 = load i8, i8* %self, align 1, !range !13
  ret i8 %0
}

; core::cell::Cell<T>::get
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17he7fe1034759dc0c1E"(i64* align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::cell::Cell<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core4cell13Cell$LT$T$GT$3new17h657d780bd0856f69E"(i64 %value) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 %value, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %2, i64* %1, align 8
  %3 = load i64, i64* %1, align 8
  ret i64 %3
}

; core::cell::Cell<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core4cell13Cell$LT$T$GT$3new17h9d076f6569cf0ed1E"(i64 %value) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 %value, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %2, i64* %1, align 8
  %3 = load i64, i64* %1, align 8
  ret i64 %3
}

; core::cell::Cell<T>::set
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell13Cell$LT$T$GT$3set17h266aec3ba1cded9bE"(i64* align 8 dereferenceable(8) %self, i64 %val) unnamed_addr #0 {
start:
; call core::cell::Cell<T>::replace
  %old = call i64 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h5b7971085a6010f3E"(i64* align 8 dereferenceable(8) %self, i64 %val)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::drop
  call void @_ZN4core3mem4drop17h91e9dcb12f05f76dE(i64 %old)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::cell::Cell<T>::set
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell13Cell$LT$T$GT$3set17h489a02452972c1e5E"(i8* align 1 dereferenceable(1) %self, i8 %val) unnamed_addr #0 {
start:
; call core::cell::Cell<T>::replace
  %old = call i8 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h8ea180601b1f96f6E"(i8* align 1 dereferenceable(1) %self, i8 %val), !range !13
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::drop
  call void @_ZN4core3mem4drop17hbe8466ca96f1f510E(i8 %old)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::cell::Cell<T>::set
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell13Cell$LT$T$GT$3set17h79636cf0a9378304E"(i64* align 8 dereferenceable(8) %self, i64 %val) unnamed_addr #0 {
start:
; call core::cell::Cell<T>::replace
  %old = call i64 @"_ZN4core4cell13Cell$LT$T$GT$7replace17hc1cd86241a3eda9cE"(i64* align 8 dereferenceable(8) %self, i64 %val)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::drop
  call void @_ZN4core3mem4drop17habfa0602f2aa3689E(i64 %old)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::cell::Cell<T>::replace
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h5b7971085a6010f3E"(i64* align 8 dereferenceable(8) %self, i64 %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke core::mem::replace
  %1 = invoke i64 @_ZN4core3mem7replace17hfdaceda09d7a586eE(i64* align 8 dereferenceable(8) %self, i64 %val)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_9, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  ret i64 %1

bb3:                                              ; preds = %bb4, %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::cell::Cell<T>::replace
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h8ea180601b1f96f6E"(i8* align 1 dereferenceable(1) %self, i8 %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke core::mem::replace
  %1 = invoke i8 @_ZN4core3mem7replace17h12f9faed86466695E(i8* align 1 dereferenceable(1) %self, i8 %val)
          to label %bb2 unwind label %cleanup, !range !13

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_9, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  ret i8 %1

bb3:                                              ; preds = %bb4, %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::cell::Cell<T>::replace
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN4core4cell13Cell$LT$T$GT$7replace17hc1cd86241a3eda9cE"(i64* align 8 dereferenceable(8) %self, i64 %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke core::mem::replace
  %1 = invoke i64 @_ZN4core3mem7replace17h04523271935bbb70E(i64* align 8 dereferenceable(8) %self, i64 %val)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_9, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  ret i64 %1

bb3:                                              ; preds = %bb4, %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::cell::RefCell<T>::borrow_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$10borrow_mut17h089273b414f2bbb6E"(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* align 8 dereferenceable(4152) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call core::cell::RefCell<T>::try_borrow_mut
  %1 = call { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$14try_borrow_mut17he235550e082d3c87E"(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* align 8 dereferenceable(4152) %self)
  %_2.0 = extractvalue { i64*, i8* } %1, 0
  %_2.1 = extractvalue { i64*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  %2 = call { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17ha3fae308338fb7a3E"(i64* align 8 dereferenceable_or_null(4144) %_2.0, i8* %_2.1, [0 x i8]* nonnull align 1 bitcast (<{ [16 x i8] }>* @alloc1149 to [0 x i8]*), i64 16, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %3 = extractvalue { i64*, i64* } %2, 0
  %4 = extractvalue { i64*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i64*, i64* } undef, i64* %3, 0
  %6 = insertvalue { i64*, i64* } %5, i64* %4, 1
  ret { i64*, i64* } %6
}

; core::cell::RefCell<T>::try_borrow
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$10try_borrow17h689d1ce7a01fed35E"(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* align 8 dereferenceable(4152) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca { i64*, i64* }, align 8
  %b = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %1 = alloca { i64*, i8* }, align 8
  %_4 = bitcast %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %self to i64*
; call core::cell::BorrowRef::new
  %2 = call align 8 dereferenceable_or_null(8) i64* @_ZN4core4cell9BorrowRef3new17h9aee3bde2616e4acE(i64* align 8 dereferenceable(8) %_4)
  store i64* %2, i64** %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_2 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %6 = bitcast { i64*, i8* }* %1 to {}**
  store {}* null, {}** %6, align 8
  br label %bb6

bb4:                                              ; preds = %bb1
  %7 = load i64*, i64** %_2, align 8, !nonnull !5
  store i64* %7, i64** %b, align 8
  %_11 = getelementptr inbounds %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>", %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %self, i32 0, i32 1
  %_2.i = bitcast %"core::cell::UnsafeCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %_11 to %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"*
  br label %bb5

bb5:                                              ; preds = %bb4
  %_12 = load i64*, i64** %b, align 8, !nonnull !5
  %8 = bitcast { i64*, i64* }* %_7 to %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"**
  store %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %_2.i, %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 1
  store i64* %_12, i64** %9, align 8
  %10 = bitcast { i64*, i8* }* %1 to { i64*, i64* }*
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8, !nonnull !5
  %13 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8, !nonnull !5
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %10, i32 0, i32 0
  store i64* %12, i64** %15, align 8
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %10, i32 0, i32 1
  store i64* %14, i64** %16, align 8
  br label %bb6

bb7:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<core::cell::BorrowRef>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..cell..BorrowRef$GT$17ha75793f8d3be17c6E"(i64** %b) #18
  br label %bb8

cleanup:                                          ; No predecessors!
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb7

bb8:                                              ; preds = %bb7
  %22 = bitcast { i8*, i32 }* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb6:                                              ; preds = %bb2, %bb5
  %28 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = insertvalue { i64*, i8* } undef, i64* %29, 0
  %33 = insertvalue { i64*, i8* } %32, i8* %31, 1
  ret { i64*, i8* } %33
}

; core::cell::RefCell<T>::try_borrow_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$14try_borrow_mut17he235550e082d3c87E"(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* align 8 dereferenceable(4152) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca { i64*, i64* }, align 8
  %b = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %1 = alloca { i64*, i8* }, align 8
  %_4 = bitcast %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %self to i64*
; call core::cell::BorrowRefMut::new
  %2 = call align 8 dereferenceable_or_null(8) i64* @_ZN4core4cell12BorrowRefMut3new17hdc939dd1cd3b2e5dE(i64* align 8 dereferenceable(8) %_4)
  store i64* %2, i64** %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_2 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %6 = bitcast { i64*, i8* }* %1 to {}**
  store {}* null, {}** %6, align 8
  br label %bb6

bb4:                                              ; preds = %bb1
  %7 = load i64*, i64** %_2, align 8, !nonnull !5
  store i64* %7, i64** %b, align 8
  %_12 = getelementptr inbounds %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>", %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %self, i32 0, i32 1
  %_2.i = bitcast %"core::cell::UnsafeCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %_12 to %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"*
  br label %bb5

bb5:                                              ; preds = %bb4
  %_13 = load i64*, i64** %b, align 8, !nonnull !5
  %8 = bitcast { i64*, i64* }* %_7 to %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"**
  store %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %_2.i, %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 1
  store i64* %_13, i64** %9, align 8
  %10 = bitcast { i64*, i8* }* %1 to { i64*, i64* }*
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8, !nonnull !5
  %13 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8, !nonnull !5
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %10, i32 0, i32 0
  store i64* %12, i64** %15, align 8
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %10, i32 0, i32 1
  store i64* %14, i64** %16, align 8
  br label %bb6

bb7:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<core::cell::BorrowRefMut>
  call void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17h10da76d7d6b08ef8E"(i64** %b) #18
  br label %bb8

cleanup:                                          ; No predecessors!
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb7

bb8:                                              ; preds = %bb7
  %22 = bitcast { i8*, i32 }* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb6:                                              ; preds = %bb2, %bb5
  %28 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = insertvalue { i64*, i8* } undef, i64* %29, 0
  %33 = insertvalue { i64*, i8* } %32, i8* %31, 1
  ret { i64*, i8* } %33
}

; core::cell::RefCell<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell16RefCell$LT$T$GT$3new17h917045ad6af2c3f4E"(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* noalias nocapture sret(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>") dereferenceable(4152) %0, %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* noalias nocapture dereferenceable(4144) %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %_2.i = alloca %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", align 8
  %1 = alloca { i8*, i32 }, align 8
  %_3 = alloca %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", align 8
  %_2 = alloca %"core::cell::UnsafeCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>", align 8
  %2 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %_3 to i8*
  %3 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 4144, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !16)
  call void @llvm.experimental.noalias.scope.decl(metadata !19)
  %4 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %_2.i to i8*
  %5 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 4144, i1 false), !noalias !16
  %6 = bitcast %"core::cell::UnsafeCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %_2 to %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"*
  %7 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %6 to i8*
  %8 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 4144, i1 false), !noalias !19
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::cell::Cell<T>::new
  %_4 = invoke i64 @"_ZN4core4cell13Cell$LT$T$GT$3new17h9d076f6569cf0ed1E"(i64 0)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %9 = bitcast %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %0 to i64*
  store i64 %_4, i64* %9, align 8
  %10 = getelementptr inbounds %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>", %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %0, i32 0, i32 1
  %11 = bitcast %"core::cell::UnsafeCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %10 to i8*
  %12 = bitcast %"core::cell::UnsafeCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 4144, i1 false)
  ret void

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %18 = bitcast { i8*, i32 }* %1 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23
}

; core::cell::BorrowRef::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 dereferenceable_or_null(8) i64* @_ZN4core4cell9BorrowRef3new17h9aee3bde2616e4acE(i64* align 8 dereferenceable(8) %borrow) unnamed_addr #0 {
start:
  %_11 = alloca i64*, align 8
  %0 = alloca i64*, align 8
; call core::cell::Cell<T>::get
  %_3 = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17he7fe1034759dc0c1E"(i64* align 8 dereferenceable(8) %borrow)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = add i64 %_3, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = icmp sgt i64 %1, 0
  br label %bb3

bb3:                                              ; preds = %bb2
  %_5 = xor i1 %2, true
  br i1 %_5, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h79636cf0a9378304E"(i64* align 8 dereferenceable(8) %borrow, i64 %1)
  br label %bb6

bb4:                                              ; preds = %bb3
  %3 = bitcast i64** %0 to {}**
  store {}* null, {}** %3, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4
  %4 = load i64*, i64** %0, align 8
  ret i64* %4

bb6:                                              ; preds = %bb5
  store i64* %borrow, i64** %_11, align 8
  %5 = load i64*, i64** %_11, align 8, !nonnull !5
  store i64* %5, i64** %0, align 8
  br label %bb7
}

; core::hint::unreachable_unchecked
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define internal void @_ZN4core4hint21unreachable_unchecked17h775e538991fb8238E() unnamed_addr #5 {
start:
  unreachable
}

; core::hint::black_box
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4hint9black_box17h0d63087dc1e69ab4E() unnamed_addr #0 {
start:
  call void asm sideeffect "", "r,~{memory}"({}* undef), !srcloc !21
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h20d89e120cf0237dE"({ i32, i32 }* align 4 dereferenceable(8) %self) unnamed_addr #0 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i32, i32 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h13abcaf484ab4986E"({ i32, i32 }* align 4 dereferenceable(8) %self)
  %1 = extractvalue { i32, i32 } %0, 0
  %2 = extractvalue { i32, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i32, i32 } undef, i32 %1, 0
  %4 = insertvalue { i32, i32 } %3, i32 %2, 1
  ret { i32, i32 } %4
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2da81ea912788aedE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h5ebf2b132000bc1fE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hb9cffb0a5166f718E"({ i32, i32 }* align 4 dereferenceable(8) %self) unnamed_addr #0 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i32, i32 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h44f80d17aa09077eE"({ i32, i32 }* align 4 dereferenceable(8) %self)
  %1 = extractvalue { i32, i32 } %0, 0
  %2 = extractvalue { i32, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i32, i32 } undef, i32 %1, 0
  %4 = insertvalue { i32, i32 } %3, i32 %2, 1
  ret { i32, i32 } %4
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he2654a3736e2490fE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h976cbf4a420c4a2eE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @_ZN4core4iter6traits8iterator8Iterator3map17h09ea7156e233729fE(i64* nonnull %self.0, i64* %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::map::Map<I,F>::new
  %0 = call { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h110b4a98af9fee18E"(i64* nonnull %self.0, i64* %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @_ZN4core4iter6traits8iterator8Iterator3map17h139100dc49a72becE(i32* nonnull %self.0, i32* %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::map::Map<I,F>::new
  %0 = call { i32*, i32* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hb567bd88de129f2aE"(i32* nonnull %self.0, i32* %self.1)
  %1 = extractvalue { i32*, i32* } %0, 0
  %2 = extractvalue { i32*, i32* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i32*, i32* } undef, i32* %1, 0
  %4 = insertvalue { i32*, i32* } %3, i32* %2, 1
  ret { i32*, i32* } %4
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17h1f6d242f9de8f0ceE(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::map::Map<I,F>::new
  %0 = call { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h8411c3a5cb2d6d4fE"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17h4e0695160222ebf4E(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::map::Map<I,F>::new
  %0 = call { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h255a09bf6a6f6772E"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17h93bfc34d2b73c391E(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::map::Map<I,F>::new
  %0 = call { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h1f7c01f87597a474E"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17ha8b67f175eefb48dE(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::map::Map<I,F>::new
  %0 = call { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17he3dba3c097d5efb8E"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17hb992d3ab262eb2efE(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::map::Map<I,F>::new
  %0 = call { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h7c0f25b88b80a438E"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17hd7c1cbe938c97028E(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::map::Map<I,F>::new
  %0 = call { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h36d590ff51717facE"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17hf14896f878352213E(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::map::Map<I,F>::new
  %0 = call { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h6197a15fd75e404bE"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17hf66b1c52ac9a2eb2E(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::map::Map<I,F>::new
  %0 = call { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h3a8b70b7bc3c65eeE"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::zip
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3zip17h4e1662a5b299b8f2E(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>") dereferenceable(64) %0, i32* nonnull %self.0, i32* %self.1, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture dereferenceable(24) %other) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_5 = alloca %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>", align 8
  %_4 = alloca %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>", align 8
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %_5 to i8*
  %3 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %other to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h56096599bcc01841E"(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>") dereferenceable(24) %_4, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture dereferenceable(24) %_5)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
; invoke core::iter::adapters::zip::Zip<A,B>::new
  invoke void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h9daa3f9dea1e45e8E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>") dereferenceable(64) %0, i32* nonnull %self.0, i32* %self.1, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture dereferenceable(24) %_4)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %4 = load i8, i8* %_6, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_6, align 1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %11 = bitcast { i8*, i32 }* %1 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::traits::iterator::Iterator::zip
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3zip17ha91cb54bd0fd0e0aE(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>") dereferenceable(56) %0, i32* nonnull %self.0, i32* %self.1, i32* nonnull %other.0, i32* %other.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %2 = invoke { i32*, i32* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hae842967d1b802eaE"(i32* nonnull %other.0, i32* %other.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_4.0 = extractvalue { i32*, i32* } %2, 0
  %_4.1 = extractvalue { i32*, i32* } %2, 1
  store i8 0, i8* %_6, align 1
; invoke core::iter::adapters::zip::Zip<A,B>::new
  invoke void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h59b29c57639fddbdE"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>") dereferenceable(56) %0, i32* nonnull %self.0, i32* %self.1, i32* nonnull %_4.0, i32* %_4.1)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %3 = load i8, i8* %_6, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_6, align 1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %10 = bitcast { i8*, i32 }* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::traits::iterator::Iterator::zip
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3zip17hdd3818e961823f3cE(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>") dereferenceable(72) %0, i64* nonnull %self.0, i64* %self.1, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture dereferenceable(32) %other) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_5 = alloca %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>", align 8
  %_4 = alloca %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>", align 8
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %_5 to i8*
  %3 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %other to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 32, i1 false)
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1e14535af05449b3E"(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>") dereferenceable(32) %_4, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture dereferenceable(32) %_5)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
; invoke core::iter::adapters::zip::Zip<A,B>::new
  invoke void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h9541366d7f9e3a9bE"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>") dereferenceable(72) %0, i64* nonnull %self.0, i64* %self.1, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture dereferenceable(32) %_4)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %4 = load i8, i8* %_6, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_6, align 1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %11 = bitcast { i8*, i32 }* %1 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::traits::iterator::Iterator::chain
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator5chain17h924c83ed88da79caE(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>") dereferenceable(24) %0, i32* nonnull %self.0, i32* %self.1, i32 %other) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_4 = invoke i32 @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5c687bf3cf69442aE"(i32 %other)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
; invoke core::iter::adapters::chain::Chain<A,B>::new
  invoke void @"_ZN4core4iter8adapters5chain18Chain$LT$A$C$B$GT$3new17hd117087b19da420cE"(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>") dereferenceable(24) %0, i32* nonnull %self.0, i32* %self.1, i32 %_4)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_6, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_6, align 1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %9 = bitcast { i8*, i32 }* %1 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::traits::iterator::Iterator::chain
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator5chain17h9dcd55bdbbdc6350E(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>") dereferenceable(32) %0, i64* nonnull %self.0, i64* %self.1, i64 %other) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_4 = invoke i64 @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf1c22125c3fa4c2fE"(i64 %other)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
; invoke core::iter::adapters::chain::Chain<A,B>::new
  invoke void @"_ZN4core4iter8adapters5chain18Chain$LT$A$C$B$GT$3new17h30fbde0ec87d3acfE"(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>") dereferenceable(32) %0, i64* nonnull %self.0, i64* %self.1, i64 %_4)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_6, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_6, align 1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %9 = bitcast { i8*, i32 }* %1 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::sources::repeat::repeat
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4iter7sources6repeat6repeat17hecc49917a5801ee7E(i64 %elt) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 %elt, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::iter::sources::repeat::repeat
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core4iter7sources6repeat6repeat17hf476dc39f4dc0f17E(i32 %elt) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  store i32 %elt, i32* %0, align 4
  %1 = load i32, i32* %0, align 4
  ret i32 %1
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h110b4a98af9fee18E"(i64* nonnull %iter.0, i64* %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i64* }, align 8
  %1 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0
  store i64* %iter.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  store i64* %iter.1, i64** %2, align 8
  %3 = bitcast { i64*, i64* }* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]"*
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !5
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = insertvalue { i64*, i64* } undef, i64* %5, 0
  %9 = insertvalue { i64*, i64* } %8, i64* %7, 1
  ret { i64*, i64* } %9
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h1f7c01f87597a474E"(i64 %iter.0, i64 %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65].0"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h255a09bf6a6f6772E"(i64 %iter.0, i64 %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66].1"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h36d590ff51717facE"(i64 %iter.0, i64 %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:115:49: 115:58]"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h3a8b70b7bc3c65eeE"(i64 %iter.0, i64 %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:174:42: 174:51]"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h6197a15fd75e404bE"(i64 %iter.0, i64 %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:138:47: 138:56]"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h7c0f25b88b80a438E"(i64 %iter.0, i64 %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66]"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h8411c3a5cb2d6d4fE"(i64 %iter.0, i64 %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:111:48: 111:57]"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define { i32*, i32* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hb567bd88de129f2aE"(i32* nonnull %iter.0, i32* %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i32*, i32* }, align 8
  %1 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %0, i32 0, i32 0
  store i32* %iter.0, i32** %1, align 8
  %2 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %0, i32 0, i32 1
  store i32* %iter.1, i32** %2, align 8
  %3 = bitcast { i32*, i32* }* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]"*
  %4 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8, !nonnull !5
  %6 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %0, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = insertvalue { i32*, i32* } undef, i32* %5, 0
  %9 = insertvalue { i32*, i32* } %8, i32* %7, 1
  ret { i32*, i32* } %9
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17he3dba3c097d5efb8E"(i64 %iter.0, i64 %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65]"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; core::iter::adapters::zip::Zip<A,B>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h59b29c57639fddbdE"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>") dereferenceable(56) %0, i32* nonnull %a.0, i32* %a.1, i32* nonnull %b.0, i32* %b.1) unnamed_addr #1 {
start:
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
  call void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h7c558ac7de84bb56E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>") dereferenceable(56) %0, i32* nonnull %a.0, i32* %a.1, i32* nonnull %b.0, i32* %b.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::adapters::zip::Zip<A,B>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h9541366d7f9e3a9bE"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>") dereferenceable(72) %0, i64* nonnull %a.0, i64* %a.1, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture dereferenceable(32) %b) unnamed_addr #1 {
start:
  %_4 = alloca %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>", align 8
  %1 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %_4 to i8*
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %b to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
  call void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h21afc4d9f07913a5E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>") dereferenceable(72) %0, i64* nonnull %a.0, i64* %a.1, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture dereferenceable(32) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::adapters::zip::Zip<A,B>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h9daa3f9dea1e45e8E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>") dereferenceable(64) %0, i32* nonnull %a.0, i32* %a.1, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture dereferenceable(24) %b) unnamed_addr #1 {
start:
  %_4 = alloca %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>", align 8
  %1 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %_4 to i8*
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %b to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
  call void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17he0a45cdc9f224568E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>") dereferenceable(64) %0, i32* nonnull %a.0, i32* %a.1, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture dereferenceable(24) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h3d3e9afb1a27387dE({ i32*, i32* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca { i64, { i64, i64 } }, align 8
; call <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h9a66ad4d8638ed65E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_2, { i32*, i32* }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast { i64, { i64, i64 } }* %_2 to i64*
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h66a63a0890f0cec9E({ i32*, i32* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca { i64, { i64, i64 } }, align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h8a6f6de4cf96ec55E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_2, { i32*, i32* }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast { i64, { i64, i64 } }* %_2 to i64*
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::iter::adapters::chain::Chain<A,B>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters5chain18Chain$LT$A$C$B$GT$3new17h30fbde0ec87d3acfE"(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>") dereferenceable(32) %0, i64* nonnull %a.0, i64* %a.1, i64 %b) unnamed_addr #1 {
start:
  %_5 = alloca { i64, i64 }, align 8
  %_3 = alloca { i64*, i8* }, align 8
  %1 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %1, i32 0, i32 0
  store i64* %a.0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %1, i32 0, i32 1
  store i64* %a.1, i64** %3, align 8
  %4 = bitcast { i64, i64 }* %_5 to %"core::option::Option<core::iter::sources::repeat::Repeat<u64>>::Some"*
  %5 = getelementptr inbounds %"core::option::Option<core::iter::sources::repeat::Repeat<u64>>::Some", %"core::option::Option<core::iter::sources::repeat::Repeat<u64>>::Some"* %4, i32 0, i32 1
  store i64 %b, i64* %5, align 8
  %6 = bitcast { i64, i64 }* %_5 to i64*
  store i64 1, i64* %6, align 8
  %7 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %0 to { i64*, i8* }*
  %8 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %_3, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %_3, i32 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %7, i32 0, i32 0
  store i64* %9, i64** %12, align 8
  %13 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %7, i32 0, i32 1
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>", %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %0, i32 0, i32 1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !2
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1
  store i64 %18, i64* %20, align 8
  ret void
}

; core::iter::adapters::chain::Chain<A,B>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters5chain18Chain$LT$A$C$B$GT$3new17hd117087b19da420cE"(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>") dereferenceable(24) %0, i32* nonnull %a.0, i32* %a.1, i32 %b) unnamed_addr #1 {
start:
  %_5 = alloca { i32, i32 }, align 4
  %_3 = alloca { i32*, i8* }, align 8
  %1 = bitcast { i32*, i8* }* %_3 to { i32*, i32* }*
  %2 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %1, i32 0, i32 0
  store i32* %a.0, i32** %2, align 8
  %3 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %1, i32 0, i32 1
  store i32* %a.1, i32** %3, align 8
  %4 = bitcast { i32, i32 }* %_5 to %"core::option::Option<core::iter::sources::repeat::Repeat<u32>>::Some"*
  %5 = getelementptr inbounds %"core::option::Option<core::iter::sources::repeat::Repeat<u32>>::Some", %"core::option::Option<core::iter::sources::repeat::Repeat<u32>>::Some"* %4, i32 0, i32 1
  store i32 %b, i32* %5, align 4
  %6 = bitcast { i32, i32 }* %_5 to i32*
  store i32 1, i32* %6, align 4
  %7 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %0 to { i32*, i8* }*
  %8 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %_3, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %_3, i32 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %7, i32 0, i32 0
  store i32* %9, i32** %12, align 8
  %13 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %7, i32 0, i32 1
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>", %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %0, i32 0, i32 1
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_5, i32 0, i32 0
  %16 = load i32, i32* %15, align 4, !range !3
  %17 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_5, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %14, i32 0, i32 0
  store i32 %16, i32* %19, align 8
  %20 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %14, i32 0, i32 1
  store i32 %18, i32* %20, align 4
  ret void
}

; core::sync::atomic::AtomicBool::load
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core4sync6atomic10AtomicBool4load17hf71db528b2e9263eE(%"core::sync::atomic::AtomicBool"* align 1 dereferenceable(1) %self, i8 %order) unnamed_addr #0 {
start:
  %_6 = bitcast %"core::sync::atomic::AtomicBool"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_load
  %_3 = call i8 @_ZN4core4sync6atomic11atomic_load17h046e233d96d3dbf5E(i8* %_6, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = icmp ne i8 %_3, 0
  ret i1 %0
}

; core::sync::atomic::AtomicBool::store
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4sync6atomic10AtomicBool5store17h0d5da10278a2810aE(%"core::sync::atomic::AtomicBool"* align 1 dereferenceable(1) %self, i1 zeroext %val, i8 %order) unnamed_addr #0 {
start:
  %_6 = bitcast %"core::sync::atomic::AtomicBool"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp ule i1 %val, true
  call void @llvm.assume(i1 %0)
  %_7 = zext i1 %val to i8
; call core::sync::atomic::atomic_store
  call void @_ZN4core4sync6atomic12atomic_store17ha086961920c164b9E(i8* %_6, i8 %_7, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::sync::atomic::AtomicUsize::load
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize4load17h91e62b5f3fc5b9b3E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %self, i8 %order) unnamed_addr #0 {
start:
  %_5 = bitcast %"core::sync::atomic::AtomicUsize"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_load
  %0 = call i64 @_ZN4core4sync6atomic11atomic_load17hc991a2e68510c8fcE(i64* %_5, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %0
}

; core::sync::atomic::AtomicUsize::store
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4sync6atomic11AtomicUsize5store17h2aaadb176ef94b91E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %self, i64 %val, i8 %order) unnamed_addr #0 {
start:
  %_6 = bitcast %"core::sync::atomic::AtomicUsize"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_store
  call void @_ZN4core4sync6atomic12atomic_store17h180c67c0516e1b97E(i64* %_6, i64 %val, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::sync::atomic::atomic_load
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core4sync6atomic11atomic_load17h046e233d96d3dbf5E(i8* %dst, i8 %0) unnamed_addr #0 {
start:
  %1 = alloca i8, align 1
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !8
  %_3 = zext i8 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb9
    i64 2, label %bb3
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  %3 = load atomic i8, i8* %dst monotonic, align 1
  store i8 %3, i8* %1, align 1
  br label %bb6

bb9:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc1157 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1155 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %start
  %4 = load atomic i8, i8* %dst acquire, align 1
  store i8 %4, i8* %1, align 1
  br label %bb4

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [49 x i8] }>* @alloc1156 to [0 x i8]*), i64 49, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1152 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %start
  %5 = load atomic i8, i8* %dst seq_cst, align 1
  store i8 %5, i8* %1, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb10:                                             ; preds = %bb6, %bb4, %bb8
  %6 = load i8, i8* %1, align 1
  ret i8 %6

bb4:                                              ; preds = %bb3
  br label %bb10

bb6:                                              ; preds = %bb5
  br label %bb10
}

; core::sync::atomic::atomic_load
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4sync6atomic11atomic_load17hc991a2e68510c8fcE(i64* %dst, i8 %0) unnamed_addr #0 {
start:
  %1 = alloca i64, align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !8
  %_3 = zext i8 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb9
    i64 2, label %bb3
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  %3 = load atomic i64, i64* %dst monotonic, align 8
  store i64 %3, i64* %1, align 8
  br label %bb6

bb9:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc1157 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1155 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %start
  %4 = load atomic i64, i64* %dst acquire, align 8
  store i64 %4, i64* %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [49 x i8] }>* @alloc1156 to [0 x i8]*), i64 49, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1152 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %start
  %5 = load atomic i64, i64* %dst seq_cst, align 8
  store i64 %5, i64* %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb10:                                             ; preds = %bb6, %bb4, %bb8
  %6 = load i64, i64* %1, align 8
  ret i64 %6

bb4:                                              ; preds = %bb3
  br label %bb10

bb6:                                              ; preds = %bb5
  br label %bb10
}

; core::sync::atomic::atomic_store
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4sync6atomic12atomic_store17h180c67c0516e1b97E(i64* %dst, i64 %val, i8 %0) unnamed_addr #0 {
start:
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %1 = load i8, i8* %order, align 1, !range !8
  %_4 = zext i8 %1 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb3
    i64 2, label %bb9
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  store atomic i64 %val, i64* %dst monotonic, align 8
  br label %bb6

bb3:                                              ; preds = %start
  store atomic i64 %val, i64* %dst release, align 8
  br label %bb4

bb9:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [42 x i8] }>* @alloc1165 to [0 x i8]*), i64 42, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1163 to %"core::panic::location::Location"*)) #17
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [50 x i8] }>* @alloc1164 to [0 x i8]*), i64 50, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1160 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %start
  store atomic i64 %val, i64* %dst seq_cst, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb10:                                             ; preds = %bb6, %bb4, %bb8
  ret void

bb4:                                              ; preds = %bb3
  br label %bb10

bb6:                                              ; preds = %bb5
  br label %bb10
}

; core::sync::atomic::atomic_store
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4sync6atomic12atomic_store17ha086961920c164b9E(i8* %dst, i8 %val, i8 %0) unnamed_addr #0 {
start:
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %1 = load i8, i8* %order, align 1, !range !8
  %_4 = zext i8 %1 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb3
    i64 2, label %bb9
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  store atomic i8 %val, i8* %dst monotonic, align 1
  br label %bb6

bb3:                                              ; preds = %start
  store atomic i8 %val, i8* %dst release, align 1
  br label %bb4

bb9:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [42 x i8] }>* @alloc1165 to [0 x i8]*), i64 42, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1163 to %"core::panic::location::Location"*)) #17
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [50 x i8] }>* @alloc1164 to [0 x i8]*), i64 50, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1160 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %start
  store atomic i8 %val, i8* %dst seq_cst, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb10:                                             ; preds = %bb6, %bb4, %bb8
  ret void

bb4:                                              ; preds = %bb3
  br label %bb10

bb6:                                              ; preds = %bb5
  br label %bb10
}

; core::time::Duration::subsec_nanos
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4time8Duration12subsec_nanos17h2564b3870134b845E({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %1 = load i32, i32* %0, align 8
  ret i32 %1
}

; core::time::Duration::as_secs
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4time8Duration7as_secs17haf6c23f324a594ffE({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64, i32 }* %self to i64*
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::alloc::layout::Layout::from_size_align_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h515b7f30c9409e2bE(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
; call core::num::nonzero::NonZeroUsize::new_unchecked
  %_4 = call i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h789271b998e25442E(i64 %align), !range !15
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 %size, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_4, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !15
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::size
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout4size17he1e3bfebe86b90e6E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64, i64 }* %self to i64*
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::alloc::layout::Layout::align
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout5align17h5f5e43d11860a5adE({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_2 = load i64, i64* %0, align 8, !range !15
; call core::num::nonzero::NonZeroUsize::get
  %1 = call i64 @_ZN4core3num7nonzero12NonZeroUsize3get17h58df240295649fb8E(i64 %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h1a0eb075e2c3f218E(i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hac01b275661d02b8E"(i64 1, i64 %n)
  %_5.0 = extractvalue { i64, i64 } %1, 0
  %_5.1 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h5a05734ba61a7420E"(i64 %_5.0, i64 %_5.1)
  %_4.0 = extractvalue { i64, i64 } %2, 0
  %_4.1 = extractvalue { i64, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hda93480be4ab02ebE"(i64 %_4.0, i64 %_4.1)
  store { i64, i64 } %3, { i64, i64 }* %_3, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = bitcast { i64, i64 }* %_3 to i64*
  %_9 = load i64, i64* %4, align 8, !range !2
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %5 = bitcast { i64, i64 }* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"* %5, i32 0, i32 1
  %val = load i64, i64* %6, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h07252522734ff245E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1167 to %"core::panic::location::Location"*))
  store { i64, i64 } %7, { i64, i64 }* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1
  ret { i64, i64 } %13

bb9:                                              ; preds = %bb5
; call core::alloc::layout::Layout::from_size_align_unchecked
  %14 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h515b7f30c9409e2bE(i64 %val, i64 1)
  %_13.0 = extractvalue { i64, i64 } %14, 0
  %_13.1 = extractvalue { i64, i64 } %14, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_13.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_13.1, i64* %16, align 8
  br label %bb11
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define internal nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h70aa635e7c978a4eE({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::alloc::layout::Layout::align
  %_3 = call i64 @_ZN4core5alloc6layout6Layout5align17h5f5e43d11860a5adE({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = inttoptr i64 %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8d6e12f16857b6f7E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::alloc::layout::Layout::for_value
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout9for_value17hfeb3f666aa0e5951E(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %t) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val
  %_5 = call i64 @_ZN4core3mem11size_of_val17h866860ecfc83a590E(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val
  %_7 = call i64 @_ZN4core3mem12align_of_val17h5dd2c6f70b86db3cE(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h515b7f30c9409e2bE(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::array::<impl core::fmt::Debug for [T; N]>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h355fa7542352b2b6E"([16 x i32]* align 4 dereferenceable(64) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_5 = alloca { [0 x i32]*, i64 }, align 8
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %0 = call { [0 x i32]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h42fa1faf526582abE"([16 x i32]* align 4 dereferenceable(64) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1169 to %"core::panic::location::Location"*))
  %_6.0 = extractvalue { [0 x i32]*, i64 } %0, 0
  %_6.1 = extractvalue { [0 x i32]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 0
  store [0 x i32]* %_6.0, [0 x i32]** %1, align 8
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 1
  store i64 %_6.1, i64* %2, align 8
; call <&T as core::fmt::Debug>::fmt
  %3 = call zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h959c21fe3a4c286bE"({ [0 x i32]*, i64 }* align 8 dereferenceable(16) %_5, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %3
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h42fa1faf526582abE"([16 x i32]* align 4 dereferenceable(64) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_4.0 = bitcast [16 x i32]* %self to [0 x i32]*
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %1 = call { [0 x i32]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h9fe9ca339494a74eE"([0 x i32]* nonnull align 4 %_4.0, i64 16, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i32]*, i64 } %1, 0
  %3 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %2, 0
  %5 = insertvalue { [0 x i32]*, i64 } %4, i64 %3, 1
  ret { [0 x i32]*, i64 } %5
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h9bbe67a29941766bE"([8 x i8]* align 1 dereferenceable(8) %self, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_4.0 = bitcast [8 x i8]* %self to [0 x i8]*
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hc92531c57786692cE"([0 x i8]* nonnull align 1 %_4.0, i64 8, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h9806f118c2929df9E"([16 x i32]* align 4 dereferenceable(64) %self, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_6.0 = bitcast [16 x i32]* %self to [0 x i32]*
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %1 = call { [0 x i32]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5a2e452de1af36b3E"([0 x i32]* nonnull align 4 %_6.0, i64 16, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i32]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_4.0, 0
  %3 = insertvalue { [0 x i32]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i32]*, i64 } %3
}

; core::clone::impls::<impl core::clone::Clone for i32>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17hb285fe5c8eb7fd15E"(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = load i32, i32* %self, align 4
  ret i32 %0
}

; core::clone::impls::<impl core::clone::Clone for u32>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u32$GT$5clone17h3587b46fc781e72cE"(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %0 = load i32, i32* %self, align 4
  ret i32 %0
}

; core::clone::impls::<impl core::clone::Clone for u64>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u64$GT$5clone17h42031b8a38370fe3E"(i64* align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hd85e3c70ba69edeeE"(i64* align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h1c9a6275343b95faE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i32]* %self.0 to i32*
  ret i32* %0
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hdd357ff2825f8923E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hf19e90f4cc8692d7E"([0 x i64]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i64]* %self.0 to i64*
  ret i64* %0
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h441438c1ed994955E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 {
start:
  %_4 = icmp ule i64 %mid, %self.1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_mut_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h54cfe7b5c3d06330E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %mid)
  br label %bb3

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [35 x i8] }>* @alloc1170 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1172 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %bb2
  ret void
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h650db643b889e52dE"(i64 %index, [0 x i64]* %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %_3
}

; core::slice::<impl [T]>::copy_from_slice
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc56af2fc7d60c9c7E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %src.0, i64 %src.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_3 = icmp ne i64 %self.1, %src.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::as_ptr
  %_13 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h252fb685f8fe6e14E"([0 x i8]* nonnull align 1 %src.0, i64 %src.1)
  br label %bb3

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17he27865c0f3eaf314E"(i64 %self.1, i64 %src.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
  unreachable

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::as_mut_ptr
  %_15 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hdd357ff2825f8923E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h387c0a07d4475887E(i8* %_13, i8* %_15, i64 %self.1)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret void
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha45b74d574a181aeE"([0 x i64]* nonnull align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %_6 = call i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h2ae11c87b6228c67E"(i64 %index, [0 x i64]* %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %_6
}

; core::slice::<impl [T]>::split_at_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h54cfe7b5c3d06330E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 {
start:
  %1 = alloca i8*, align 8
; call core::slice::<impl [T]>::as_mut_ptr
  %ptr = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hdd357ff2825f8923E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::raw::from_raw_parts_mut
  %2 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h55b9c77f7426d63bE(i8* %ptr, i64 %mid)
  %_8.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = getelementptr inbounds i8, i8* %ptr, i64 %mid
  store i8* %3, i8** %1, align 8
  %_3.i = load i8*, i8** %1, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_16 = sub i64 %self.1, %mid
; call core::slice::raw::from_raw_parts_mut
  %4 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h55b9c77f7426d63bE(i8* %_3.i, i64 %_16)
  %_12.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %5 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  store [0 x i8]* %_8.0, [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  store i64 %_8.1, i64* %7, align 8
  %8 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0, i32 0, i32 1
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0
  store [0 x i8]* %_12.0, [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1
  store i64 %_12.1, i64* %10, align 8
  ret void
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9801b888739ae037E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h3eeeac8675102f82E"([0 x { i64, i64 }]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h1f0c6771c5b1f037E"([0 x { i64, i64 }]* nonnull align 8 %self.0, i64 %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h7922ca17e85abd51E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha0efaa3c02ae19aaE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1)
  %1 = extractvalue { i32*, i32* } %0, 0
  %2 = extractvalue { i32*, i32* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i32*, i32* } undef, i32* %1, 0
  %4 = insertvalue { i32*, i32* } %3, i32* %2, 1
  ret { i32*, i32* } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17had3184a6394da70eE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hce7061984b52fe72E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1)
  %1 = extractvalue { i32*, i32* } %0, 0
  %2 = extractvalue { i32*, i32* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i32*, i32* } undef, i32* %1, 0
  %4 = insertvalue { i32*, i32* } %3, i32* %2, 1
  ret { i32*, i32* } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf5a959240c46c166E"([0 x i64]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h69f239edda46200aE"([0 x i64]* nonnull align 8 %self.0, i64 %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h1dd87315aa90d193E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i32]* %self.0 to i32*
  ret i32* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h252fb685f8fe6e14E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc542f2039170724cE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i32]* %self.0 to i32*
  ret i32* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 }* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17headcdeac94f9d622E"([0 x { i64, i64 }]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x { i64, i64 }]* %self.0 to { i64, i64 }*
  ret { i64, i64 }* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf5924a5bc76be1b1E"([0 x i64]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i64]* %self.0 to i64*
  ret i64* %0
}

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha1eecae943d1a0faE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = icmp eq i64 %self.1, 0
  ret i1 %0
}

; core::slice::<impl [T]>::iter_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h8fcef0e275d4a4dcE"([0 x i64]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::IterMut<T>::new
  %0 = call { i64*, i64* } @"_ZN4core5slice4iter16IterMut$LT$T$GT$3new17he530af5356dee89cE"([0 x i64]* nonnull align 8 %self.0, i64 %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::slice::<impl [T]>::iter_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17hca52412a7f0c812dE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::IterMut<T>::new
  %0 = call { i32*, i32* } @"_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h4c6312339cdae367E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1)
  %1 = extractvalue { i32*, i32* } %0, 0
  %2 = extractvalue { i32*, i32* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i32*, i32* } undef, i32* %1, 0
  %4 = insertvalue { i32*, i32* } %3, i32* %2, 1
  ret { i32*, i32* } %4
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h55b9c77f7426d63bE(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::slice::raw::debug_check_data_len
  call void @_ZN4core5slice3raw20debug_check_data_len17h8db6b2ca41c46e14E(i8* %data, i64 %len)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h4520bf7c57878365E(i8* %data, i64 %len)
  %_11.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_11.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_11.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_11.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::raw::debug_check_data_len
; Function Attrs: nonlazybind uwtable
define void @_ZN4core5slice3raw20debug_check_data_len17h8db6b2ca41c46e14E(i8* %_data, i64 %_len) unnamed_addr #1 {
start:
  ret void
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h1f0c6771c5b1f037E"([0 x { i64, i64 }]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }*, align 8
  %1 = alloca i8*, align 8
  %end = alloca { i64, i64 }*, align 8
  %2 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call { i64, i64 }* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17headcdeac94f9d622E"([0 x { i64, i64 }]* nonnull align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h61c0564b550d8e6aE"({ i64, i64 }* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 16, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast { i64, i64 }* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %ptr, i64 %slice.1
  store { i64, i64 }* %6, { i64, i64 }** %0, align 8
  %7 = load { i64, i64 }*, { i64, i64 }** %0, align 8
  store { i64, i64 }* %7, { i64, i64 }** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1846285b0f56f71fE"({ i64, i64 }* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to { i64, i64 }*
  store { i64, i64 }* %8, { i64, i64 }** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load { i64, i64 }*, { i64, i64 }** %end, align 8
  %9 = bitcast { i64*, i64* }* %2 to i64**
  store i64* %_18, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %11 = bitcast i64** %10 to { i64, i64 }**
  store { i64, i64 }* %_21, { i64, i64 }** %11, align 8
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !5
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = insertvalue { i64*, i64* } undef, i64* %13, 0
  %17 = insertvalue { i64*, i64* } %16, i64* %15, 1
  ret { i64*, i64* } %17
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h69f239edda46200aE"([0 x i64]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = alloca i8*, align 8
  %end = alloca i64*, align 8
  %2 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf5924a5bc76be1b1E"([0 x i64]* nonnull align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h60864eeee0ce3099E"(i64* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 8, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast i64* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds i64, i64* %ptr, i64 %slice.1
  store i64* %6, i64** %0, align 8
  %7 = load i64*, i64** %0, align 8
  store i64* %7, i64** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4fba5780ce0d40ffE"(i64* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to i64*
  store i64* %8, i64** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load i64*, i64** %end, align 8
  %9 = bitcast { i64*, i64* }* %2 to i64**
  store i64* %_18, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  store i64* %_21, i64** %10, align 8
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8, !nonnull !5
  %13 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = insertvalue { i64*, i64* } undef, i64* %12, 0
  %16 = insertvalue { i64*, i64* } %15, i64* %14, 1
  ret { i64*, i64* } %16
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha0efaa3c02ae19aaE"([0 x i32]* nonnull align 4 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = alloca i8*, align 8
  %end = alloca i32*, align 8
  %2 = alloca { i32*, i32* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc542f2039170724cE"([0 x i32]* nonnull align 4 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hd626e8f43fc9aed8E"(i32* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 4, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast i32* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds i32, i32* %ptr, i64 %slice.1
  store i32* %6, i32** %0, align 8
  %7 = load i32*, i32** %0, align 8
  store i32* %7, i32** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9dcd9a6bf9f45588E"(i32* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to i32*
  store i32* %8, i32** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load i32*, i32** %end, align 8
  %9 = bitcast { i32*, i32* }* %2 to i32**
  store i32* %_18, i32** %9, align 8
  %10 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 1
  store i32* %_21, i32** %10, align 8
  %11 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8, !nonnull !5
  %13 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 1
  %14 = load i32*, i32** %13, align 8
  %15 = insertvalue { i32*, i32* } undef, i32* %12, 0
  %16 = insertvalue { i32*, i32* } %15, i32* %14, 1
  ret { i32*, i32* } %16
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hce7061984b52fe72E"([0 x i32]* nonnull align 4 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = alloca i8*, align 8
  %end = alloca i32*, align 8
  %2 = alloca { i32*, i32* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h1dd87315aa90d193E"([0 x i32]* nonnull align 4 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h8225ab053c0a5dffE"(i32* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 4, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast i32* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds i32, i32* %ptr, i64 %slice.1
  store i32* %6, i32** %0, align 8
  %7 = load i32*, i32** %0, align 8
  store i32* %7, i32** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hb051aeae42885484E"(i32* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to i32*
  store i32* %8, i32** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load i32*, i32** %end, align 8
  %9 = bitcast { i32*, i32* }* %2 to i32**
  store i32* %_18, i32** %9, align 8
  %10 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 1
  store i32* %_21, i32** %10, align 8
  %11 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8, !nonnull !5
  %13 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 1
  %14 = load i32*, i32** %13, align 8
  %15 = insertvalue { i32*, i32* } undef, i32* %12, 0
  %16 = insertvalue { i32*, i32* } %15, i32* %14, 1
  ret { i32*, i32* } %16
}

; core::slice::iter::IterMut<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @"_ZN4core5slice4iter16IterMut$LT$T$GT$3new17h4c6312339cdae367E"([0 x i32]* nonnull align 4 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = alloca i8*, align 8
  %end = alloca i32*, align 8
  %2 = alloca { i32*, i32* }, align 8
; call core::slice::<impl [T]>::as_mut_ptr
  %ptr = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h1c9a6275343b95faE"([0 x i32]* nonnull align 4 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1ee78556b7049d44E"(i32* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 4, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast i32* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %_3.i = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %5 = getelementptr inbounds i32, i32* %ptr, i64 %slice.1
  store i32* %5, i32** %0, align 8
  %_3.i1 = load i32*, i32** %0, align 8
  store i32* %_3.i1, i32** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9dcd9a6bf9f45588E"(i32* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %6 = bitcast i8* %_3.i to i32*
  store i32* %6, i32** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_20 = load i32*, i32** %end, align 8
  %7 = bitcast { i32*, i32* }* %2 to i32**
  store i32* %_18, i32** %7, align 8
  %8 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 1
  store i32* %_20, i32** %8, align 8
  %9 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8, !nonnull !5
  %11 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = insertvalue { i32*, i32* } undef, i32* %10, 0
  %14 = insertvalue { i32*, i32* } %13, i32* %12, 1
  ret { i32*, i32* } %14
}

; core::slice::iter::IterMut<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice4iter16IterMut$LT$T$GT$3new17he530af5356dee89cE"([0 x i64]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = alloca i8*, align 8
  %end = alloca i64*, align 8
  %2 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::as_mut_ptr
  %ptr = call i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hf19e90f4cc8692d7E"([0 x i64]* nonnull align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h502364e24d5414a5E"(i64* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 8, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast i64* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %_3.i = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %5 = getelementptr inbounds i64, i64* %ptr, i64 %slice.1
  store i64* %5, i64** %0, align 8
  %_3.i1 = load i64*, i64** %0, align 8
  store i64* %_3.i1, i64** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h19137c7da6cc6bafE"(i64* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %6 = bitcast i8* %_3.i to i64*
  store i64* %6, i64** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_20 = load i64*, i64** %end, align 8
  %7 = bitcast { i64*, i64* }* %2 to i64**
  store i64* %_18, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  store i64* %_20, i64** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8, !nonnull !5
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8
  %13 = insertvalue { i64*, i64* } undef, i64* %10, 0
  %14 = insertvalue { i64*, i64* } %13, i64* %12, 1
  ret { i64*, i64* } %14
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h64a8324cac9e55f0E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h972c5404ca8e50e2E"(i64 %index.0, i64 %index.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h9fe9ca339494a74eE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i32]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h7fe2dfba62a63dfdE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i32]*, i64 } %1, 0
  %3 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %2, 0
  %5 = insertvalue { [0 x i32]*, i64 } %4, i64 %3, 1
  ret { [0 x i32]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hc92531c57786692cE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h60be4cb6409d06c4E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5a2e452de1af36b3E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h628fc2ec86f30067E"(i64 %index.0, i64 %index.1, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i32]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_4.0, 0
  %3 = insertvalue { [0 x i32]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i32]*, i64 } %3
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hf79677a6d6feda27E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4f11031d6b5b9e9dE"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::tuple::<impl core::cmp::PartialEq for (A,B,C,D)>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core5tuple72_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$A$C$B$C$C$C$D$RP$$GT$2eq17h44650554e51d87abE"({ i32, i32, i32, i32 }* align 4 dereferenceable(16) %self, { i32, i32, i32, i32 }* align 4 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_6 = bitcast { i32, i32, i32, i32 }* %self to i32*
  %_7 = bitcast { i32, i32, i32, i32 }* %other to i32*
; call core::cmp::impls::<impl core::cmp::PartialEq for u32>::eq
  %_5 = call zeroext i1 @"_ZN4core3cmp5impls54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u32$GT$2eq17hacc83d3549419240E"(i32* align 4 dereferenceable(4) %_6, i32* align 4 dereferenceable(4) %_7)
  br label %bb10

bb10:                                             ; preds = %start
  br i1 %_5, label %bb8, label %bb7

bb7:                                              ; preds = %bb10
  store i8 0, i8* %_4, align 1
  br label %bb9

bb8:                                              ; preds = %bb10
  %_9 = getelementptr inbounds { i32, i32, i32, i32 }, { i32, i32, i32, i32 }* %self, i32 0, i32 1
  %_10 = getelementptr inbounds { i32, i32, i32, i32 }, { i32, i32, i32, i32 }* %other, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialEq for u32>::eq
  %_8 = call zeroext i1 @"_ZN4core3cmp5impls54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u32$GT$2eq17hacc83d3549419240E"(i32* align 4 dereferenceable(4) %_9, i32* align 4 dereferenceable(4) %_10)
  br label %bb11

bb11:                                             ; preds = %bb8
  %1 = zext i1 %_8 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb9

bb9:                                              ; preds = %bb7, %bb11
  %2 = load i8, i8* %_4, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

bb4:                                              ; preds = %bb9
  store i8 0, i8* %_3, align 1
  br label %bb6

bb5:                                              ; preds = %bb9
  %_12 = getelementptr inbounds { i32, i32, i32, i32 }, { i32, i32, i32, i32 }* %self, i32 0, i32 2
  %_13 = getelementptr inbounds { i32, i32, i32, i32 }, { i32, i32, i32, i32 }* %other, i32 0, i32 2
; call core::cmp::impls::<impl core::cmp::PartialEq for u32>::eq
  %_11 = call zeroext i1 @"_ZN4core3cmp5impls54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u32$GT$2eq17hacc83d3549419240E"(i32* align 4 dereferenceable(4) %_12, i32* align 4 dereferenceable(4) %_13)
  br label %bb12

bb12:                                             ; preds = %bb5
  %4 = zext i1 %_11 to i8
  store i8 %4, i8* %_3, align 1
  br label %bb6

bb6:                                              ; preds = %bb4, %bb12
  %5 = load i8, i8* %_3, align 1, !range !4
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb2, label %bb1

bb1:                                              ; preds = %bb6
  store i8 0, i8* %0, align 1
  br label %bb3

bb2:                                              ; preds = %bb6
  %_15 = getelementptr inbounds { i32, i32, i32, i32 }, { i32, i32, i32, i32 }* %self, i32 0, i32 3
  %_16 = getelementptr inbounds { i32, i32, i32, i32 }, { i32, i32, i32, i32 }* %other, i32 0, i32 3
; call core::cmp::impls::<impl core::cmp::PartialEq for u32>::eq
  %_14 = call zeroext i1 @"_ZN4core3cmp5impls54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u32$GT$2eq17hacc83d3549419240E"(i32* align 4 dereferenceable(4) %_15, i32* align 4 dereferenceable(4) %_16)
  br label %bb13

bb13:                                             ; preds = %bb2
  %7 = zext i1 %_14 to i8
  store i8 %7, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb13
  %8 = load i8, i8* %0, align 1, !range !4
  %9 = trunc i8 %8 to i1
  ret i1 %9
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17h048971d86effa10dE"(i32* align 4 dereferenceable_or_null(4) %0, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]"* nonnull align 1 %f) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i32*, align 8
  %1 = alloca { i32, i32 }, align 4
  %self = alloca i32*, align 8
  store i32* %0, i32** %self, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %2 = bitcast i32** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast { i32, i32 }* %1 to i32*
  store i32 0, i32* %5, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %x = load i32*, i32** %self, align 8, !nonnull !5
  store i8 0, i8* %_9, align 1
  store i32* %x, i32** %_7, align 8
  %6 = load i32*, i32** %_7, align 8, !nonnull !5
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i32 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h204049dee81827fcE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]"* nonnull align 1 %f, i32* align 4 dereferenceable(4) %6)
  br label %bb4

bb4:                                              ; preds = %bb3
  %7 = bitcast { i32, i32 }* %1 to %"core::option::Option<u32>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %7, i32 0, i32 1
  store i32 %_5, i32* %8, align 4
  %9 = bitcast { i32, i32 }* %1 to i32*
  store i32 1, i32* %9, align 4
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %10 = load i8, i8* %_9, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %12 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 0
  %13 = load i32, i32* %12, align 4, !range !3
  %14 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = insertvalue { i32, i32 } undef, i32 %13, 0
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1
  ret { i32, i32 } %17

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h10d7c2d13520f40eE"(i64 %0, i64 %1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:111:48: 111:57]"* nonnull align 1 %f) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %6, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  %x = load i64, i64* %8, align 8
  store i8 0, i8* %_9, align 1
  store i64 %x, i64* %_7, align 8
  %9 = load i64, i64* %_7, align 8
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h5a34200927d03da0E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:111:48: 111:57]"* nonnull align 1 %f, i64 %9)
  br label %bb4

bb4:                                              ; preds = %bb3
  %10 = bitcast { i64, i64 }* %2 to %"core::option::Option<usize>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %10, i32 0, i32 1
  store i64 %_5, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %12, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %13 = load i8, i8* %_9, align 1, !range !4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !2
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h2de86e896cef421fE"(i64 %0, i64 %1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:138:47: 138:56]"* nonnull align 1 %f) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %6, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  %x = load i64, i64* %8, align 8
  store i8 0, i8* %_9, align 1
  store i64 %x, i64* %_7, align 8
  %9 = load i64, i64* %_7, align 8
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h6b068e04969be4c2E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:138:47: 138:56]"* nonnull align 1 %f, i64 %9)
  br label %bb4

bb4:                                              ; preds = %bb3
  %10 = bitcast { i64, i64 }* %2 to %"core::option::Option<usize>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %10, i32 0, i32 1
  store i64 %_5, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %12, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %13 = load i8, i8* %_9, align 1, !range !4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !2
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h38a6e9411ac9e090E"(i64 %0, i64 %1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:174:42: 174:51]"* nonnull align 1 %f) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %6, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  %x = load i64, i64* %8, align 8
  store i8 0, i8* %_9, align 1
  store i64 %x, i64* %_7, align 8
  %9 = load i64, i64* %_7, align 8
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17hc7ee7363e62d7152E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:174:42: 174:51]"* nonnull align 1 %f, i64 %9)
  br label %bb4

bb4:                                              ; preds = %bb3
  %10 = bitcast { i64, i64 }* %2 to %"core::option::Option<usize>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %10, i32 0, i32 1
  store i64 %_5, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %12, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %13 = load i8, i8* %_9, align 1, !range !4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !2
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h3ce8ea38f314e9f9E"(i64 %0, i64 %1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:115:49: 115:58]"* nonnull align 1 %f) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %6, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  %x = load i64, i64* %8, align 8
  store i8 0, i8* %_9, align 1
  store i64 %x, i64* %_7, align 8
  %9 = load i64, i64* %_7, align 8
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17he7fd71c0fc4f706aE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:115:49: 115:58]"* nonnull align 1 %f, i64 %9)
  br label %bb4

bb4:                                              ; preds = %bb3
  %10 = bitcast { i64, i64 }* %2 to %"core::option::Option<usize>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %10, i32 0, i32 1
  store i64 %_5, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %12, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %13 = load i8, i8* %_9, align 1, !range !4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !2
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h42aeba01e6574540E"(i64 %0, i64 %1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65]"* nonnull align 1 %f) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %6, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  %x = load i64, i64* %8, align 8
  store i8 0, i8* %_9, align 1
  store i64 %x, i64* %_7, align 8
  %9 = load i64, i64* %_7, align 8
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h4d21b7c04134c422E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65]"* nonnull align 1 %f, i64 %9)
  br label %bb4

bb4:                                              ; preds = %bb3
  %10 = bitcast { i64, i64 }* %2 to %"core::option::Option<usize>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %10, i32 0, i32 1
  store i64 %_5, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %12, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %13 = load i8, i8* %_9, align 1, !range !4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !2
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h67316ad2f248d0b1E"(i64* align 8 dereferenceable_or_null(8) %0, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]"* nonnull align 1 %f) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i64*, align 8
  %1 = alloca { i64, i64 }, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %5, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %x = load i64*, i64** %self, align 8, !nonnull !5
  store i8 0, i8* %_9, align 1
  store i64* %x, i64** %_7, align 8
  %6 = load i64*, i64** %_7, align 8, !nonnull !5
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h47fa9e2d31439c33E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]"* nonnull align 1 %f, i64* align 8 dereferenceable(8) %6)
  br label %bb4

bb4:                                              ; preds = %bb3
  %7 = bitcast { i64, i64 }* %1 to %"core::option::Option<u64>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %7, i32 0, i32 1
  store i64 %_5, i64* %8, align 8
  %9 = bitcast { i64, i64 }* %1 to i64*
  store i64 1, i64* %9, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %10 = load i8, i8* %_9, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8, !range !2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { i64, i64 } undef, i64 %13, 0
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1
  ret { i64, i64 } %17

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc2529b5f9beaacfaE"(i64 %0, i64 %1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65].0"* nonnull align 1 %f) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %6, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  %x = load i64, i64* %8, align 8
  store i8 0, i8* %_9, align 1
  store i64 %x, i64* %_7, align 8
  %9 = load i64, i64* %_7, align 8
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h5147e3ad6c352f8cE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65].0"* nonnull align 1 %f, i64 %9)
  br label %bb4

bb4:                                              ; preds = %bb3
  %10 = bitcast { i64, i64 }* %2 to %"core::option::Option<usize>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %10, i32 0, i32 1
  store i64 %_5, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %12, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %13 = load i8, i8* %_9, align 1, !range !4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !2
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17he061e19e1246df61E"(i64 %0, i64 %1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66].1"* nonnull align 1 %f) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %6, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  %x = load i64, i64* %8, align 8
  store i8 0, i8* %_9, align 1
  store i64 %x, i64* %_7, align 8
  %9 = load i64, i64* %_7, align 8
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17hd46806f41bb15864E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66].1"* nonnull align 1 %f, i64 %9)
  br label %bb4

bb4:                                              ; preds = %bb3
  %10 = bitcast { i64, i64 }* %2 to %"core::option::Option<usize>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %10, i32 0, i32 1
  store i64 %_5, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %12, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %13 = load i8, i8* %_9, align 1, !range !4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !2
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hfb35fc9edd4f2908E"(i64 %0, i64 %1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66]"* nonnull align 1 %f) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %6, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  %x = load i64, i64* %8, align 8
  store i8 0, i8* %_9, align 1
  store i64 %x, i64* %_7, align 8
  %9 = load i64, i64* %_7, align 8
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i64 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h56ebb44909ae3b1cE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66]"* nonnull align 1 %f, i64 %9)
  br label %bb4

bb4:                                              ; preds = %bb3
  %10 = bitcast { i64, i64 }* %2 to %"core::option::Option<usize>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %10, i32 0, i32 1
  store i64 %_5, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %12, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %13 = load i8, i8* %_9, align 1, !range !4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !2
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$4take17h1c7da2464c01cf35E"({ i32, i32 }* align 4 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = alloca { i32, i32 }, align 4
  %0 = bitcast { i32, i32 }* %_3 to i32*
  store i32 0, i32* %0, align 4
  %1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_3, i32 0, i32 0
  %2 = load i32, i32* %1, align 4, !range !3
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_3, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
; call core::mem::replace
  %5 = call { i32, i32 } @_ZN4core3mem7replace17hd152f1a98802129eE({ i32, i32 }* align 4 dereferenceable(8) %self, i32 %2, i32 %4)
  %6 = extractvalue { i32, i32 } %5, 0
  %7 = extractvalue { i32, i32 } %5, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { i32, i32 } undef, i32 %6, 0
  %9 = insertvalue { i32, i32 } %8, i32 %7, 1
  ret { i32, i32 } %9
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17ha24243327f59db2fE"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_3 = alloca { i8*, i64 }, align 8
  %0 = bitcast { i8*, i64 }* %_3 to {}**
  store {}* null, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 0
  %2 = load i8*, i8** %1, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
; call core::mem::replace
  %5 = call { i8*, i64 } @_ZN4core3mem7replace17hb0ba00700f985ea2E({ i8*, i64 }* align 8 dereferenceable(16) %self, i8* align 1 %2, i64 %4)
  %6 = extractvalue { i8*, i64 } %5, 0
  %7 = extractvalue { i8*, i64 } %5, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core6option15Option$LT$T$GT$4take17hd12f68cfe70adbf5E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = alloca i64*, align 8
  %0 = bitcast i64** %_3 to {}**
  store {}* null, {}** %0, align 8
  %1 = load i64*, i64** %_3, align 8
; call core::mem::replace
  %2 = call i64* @_ZN4core3mem7replace17h71cbb5d214ba6caaE(i64** align 8 dereferenceable(8) %self, i64* %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %2
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$4take17hf7aa65436de7649fE"(i8* align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
  %_3 = alloca i8, align 1
  store i8 0, i8* %_3, align 1
  %0 = load i8, i8* %_3, align 1, !range !4
  %1 = trunc i8 %0 to i1
; call core::mem::replace
  %2 = call zeroext i1 @_ZN4core3mem7replace17hb78041317af39211E(i8* align 1 dereferenceable(1) %self, i1 zeroext %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h0782c6cea16a00d9E"(i8* %0) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i8** %1 to %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"*
  %6 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"* %5 to %"core::alloc::AllocError"*
  %7 = bitcast i8** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !5
  store i8* %v, i8** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %8 = load i8, i8* %_7, align 1, !range !4
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %10 = load i8*, i8** %1, align 8
  ret i8* %10

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h5a05734ba61a7420E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err"* %6, i32 0, i32 1
  %8 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %8, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %10 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %9, i32 0, i32 1
  %v = load i64, i64* %10, align 8
  %11 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"* %11, i32 0, i32 1
  store i64 %v, i64* %12, align 8
  %13 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %13, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %14 = load i8, i8* %_7, align 1, !range !4
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8, !range !2
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1
  ret { i64, i64 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h909b35aa5109895aE"(i64* align 8 dereferenceable_or_null(8) %0) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i64** %1 to %"core::result::Result<&alloc::rc::Rc<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>, std::thread::local::AccessError>::Err"*
  %6 = bitcast %"core::result::Result<&alloc::rc::Rc<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>, std::thread::local::AccessError>::Err"* %5 to %"std::thread::local::AccessError"*
  %7 = bitcast i64** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %8 = bitcast i64** %self to i64***
  %v = load i64**, i64*** %8, align 8, !nonnull !5
  %9 = bitcast i64** %1 to i64***
  store i64** %v, i64*** %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %10 = load i8, i8* %_7, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %12 = load i64*, i64** %1, align 8
  ret i64* %12

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h26cb0c3642f22b71E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %self to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %4 = bitcast i64** %0 to {}**
  store {}* null, {}** %4, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %5 = bitcast i64** %0 to i64***
  store i64** %self, i64*** %5, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i64*, i64** %0, align 8
  ret i64* %6
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$6unwrap17h2c538af31cc37221E"(i1 zeroext %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %self, align 1
  %3 = load i8, i8* %self, align 1, !range !4
  %4 = trunc i8 %3 to i1
  %_2 = zext i1 %4 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1173 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #17
  unreachable

bb3:                                              ; preds = %start
  ret void
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h7868b2fa45534332E"(i8* align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h0f982d2ac95ee2f3E"(i8* align 1 dereferenceable(1) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h0f982d2ac95ee2f3E"(i8* align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = load i8, i8* %self, align 1, !range !4
  %2 = trunc i8 %1 to i1
  %_2 = zext i1 %2 to i64
  %3 = icmp eq i64 %_2, 1
  br i1 %3, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %0, align 1, !range !4
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h17dad6b525e9a273E"(%"core::result::Result<os::OsRng, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<os::OsRng, std::io::error::Error>") dereferenceable(24) %0, %"core::result::Result<os::imp::OsRng, std::io::error::Error>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_10 = alloca %"std::io::error::Error", align 8
  %e = alloca %"std::io::error::Error", align 8
  %_7 = alloca i32, align 4
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %1 = bitcast %"core::result::Result<os::imp::OsRng, std::io::error::Error>"* %self to i32*
  %2 = load i32, i32* %1, align 8, !range !3
  %_3 = zext i32 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<os::imp::OsRng, std::io::error::Error>"* %self to %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Ok", %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Ok"* %3, i32 0, i32 1
  %t = load i32, i32* %4, align 4
  store i8 0, i8* %_11, align 1
  store i32 %t, i32* %_7, align 4
  %5 = load i32, i32* %_7, align 4
; call core::ops::function::FnOnce::call_once
  %_5 = call i32 @_ZN4core3ops8function6FnOnce9call_once17h78e90618be62777dE(i32 %5)
  br label %bb4

bb1:                                              ; preds = %start
  %6 = bitcast %"core::result::Result<os::imp::OsRng, std::io::error::Error>"* %self to %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Err", %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Err"* %6, i32 0, i32 1
  %8 = bitcast %"std::io::error::Error"* %e to i8*
  %9 = bitcast %"std::io::error::Error"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = bitcast %"std::io::error::Error"* %_10 to i8*
  %11 = bitcast %"std::io::error::Error"* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 16, i1 false)
  %12 = bitcast %"core::result::Result<os::OsRng, std::io::error::Error>"* %0 to %"core::result::Result<os::OsRng, std::io::error::Error>::Err"*
  %13 = getelementptr inbounds %"core::result::Result<os::OsRng, std::io::error::Error>::Err", %"core::result::Result<os::OsRng, std::io::error::Error>::Err"* %12, i32 0, i32 1
  %14 = bitcast %"std::io::error::Error"* %13 to i8*
  %15 = bitcast %"std::io::error::Error"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false)
  %16 = bitcast %"core::result::Result<os::OsRng, std::io::error::Error>"* %0 to i32*
  store i32 1, i32* %16, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %17 = load i8, i8* %_11, align 1, !range !4
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  %19 = bitcast %"core::result::Result<os::OsRng, std::io::error::Error>"* %0 to %"core::result::Result<os::OsRng, std::io::error::Error>::Ok"*
  %20 = getelementptr inbounds %"core::result::Result<os::OsRng, std::io::error::Error>::Ok", %"core::result::Result<os::OsRng, std::io::error::Error>::Ok"* %19, i32 0, i32 1
  store i32 %_5, i32* %20, align 4
  %21 = bitcast %"core::result::Result<os::OsRng, std::io::error::Error>"* %0 to i32*
  store i32 0, i32* %21, align 8
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17ha3fae308338fb7a3E"(i64* align 8 dereferenceable_or_null(4144) %0, i8* %1, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::cell::BorrowMutError", align 1
  %self = alloca { i64*, i8* }, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = bitcast { i64*, i8* }* %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_3 = select i1 %8, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i64*, i8* }* %self to { i64*, i64* }*
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 0
  %t.0 = load i64*, i64** %10, align 8, !nonnull !5
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 1
  %t.1 = load i64*, i64** %11, align 8, !nonnull !5
  %12 = insertvalue { i64*, i64* } undef, i64* %t.0, 0
  %13 = insertvalue { i64*, i64* } %12, i64* %t.1, 1
  ret { i64*, i64* } %13

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"core::cell::BorrowMutError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.6 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #17
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %3 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc8dd45fe6aade296E"(i64* %0, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %"std::thread::local::AccessError", align 1
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %3 = bitcast i64** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_3 = select i1 %5, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %t = load i64*, i64** %self, align 8, !nonnull !5
  ret i64* %t

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"std::thread::local::AccessError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.7 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #17
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h48bb75eaf169bda7E"(%"core::result::Result<core::time::Duration, std::time::SystemTimeError>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64, i32 }, align 8
  %2 = bitcast %"core::result::Result<core::time::Duration, std::time::SystemTimeError>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<core::time::Duration, std::time::SystemTimeError>"* %self to %"core::result::Result<core::time::Duration, std::time::SystemTimeError>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<core::time::Duration, std::time::SystemTimeError>::Ok", %"core::result::Result<core::time::Duration, std::time::SystemTimeError>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 0
  %t.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  %t.1 = load i32, i32* %6, align 8
  %7 = insertvalue { i64, i32 } undef, i64 %t.0, 0
  %8 = insertvalue { i64, i32 } %7, i32 %t.1, 1
  ret { i64, i32 } %8

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<core::time::Duration, std::time::SystemTimeError>"* %self to %"core::result::Result<core::time::Duration, std::time::SystemTimeError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<core::time::Duration, std::time::SystemTimeError>::Err", %"core::result::Result<core::time::Duration, std::time::SystemTimeError>::Err"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %10, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %10, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %e, i32 0, i32 0
  store i64 %12, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %e, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  %_6.0 = bitcast { i64, i32 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1184 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.8 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %22 = bitcast { i8*, i32 }* %1 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17ha8ebe8fa81ff70b7E"(i128 %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %"std::io::error::Error", align 8
  %3 = alloca i128, align 8
  %self = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  store i128 %0, i128* %3, align 8
  %4 = bitcast %"core::result::Result<(), std::io::error::Error>"* %self to i8*
  %5 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = bitcast %"core::result::Result<(), std::io::error::Error>"* %self to i8*
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = sub i8 %7, 4
  %9 = icmp eq i8 %8, 0
  %_2 = select i1 %9, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  ret void

bb1:                                              ; preds = %start
  %10 = bitcast %"core::result::Result<(), std::io::error::Error>"* %self to %"core::result::Result<(), std::io::error::Error>::Err"*
  %11 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %10 to %"std::io::error::Error"*
  %12 = bitcast %"std::io::error::Error"* %e to i8*
  %13 = bitcast %"std::io::error::Error"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  %_6.0 = bitcast %"std::io::error::Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1184 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.9 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #17
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %e) #18
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %2 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h64fea2b3c1213324E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7f6d579e5b7b0b24E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd9c2335db4e907d9E"(i8 %t) unnamed_addr #1 {
start:
  ret i8 %t
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he7ae3374111d64beE"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hf853c431f1ffdd9fE"(i128 %0) unnamed_addr #1 {
start:
  %1 = alloca %"std::io::error::Error", align 8
  %2 = alloca i128, align 8
  %t = alloca %"std::io::error::Error", align 8
  store i128 %0, i128* %2, align 8
  %3 = bitcast %"std::io::error::Error"* %t to i8*
  %4 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = bitcast %"std::io::error::Error"* %1 to i8*
  %6 = bitcast %"std::io::error::Error"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  %7 = bitcast %"std::io::error::Error"* %1 to i128*
  %8 = load i128, i128* %7, align 8
  ret i128 %8
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h6035b1b2fc7e438aE"(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hafe4edcf5031e38eE"(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h71e12088361a6d44E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call std::error::<impl core::convert::From<&str> for alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>::from
  %0 = call { {}*, [3 x i64]* } @"_ZN3std5error161_$LT$impl$u20$core..convert..From$LT$$RF$str$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$4from17h72009946b1757365E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %1 = extractvalue { {}*, [3 x i64]* } %0, 0
  %2 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %1, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %2, 1
  ret { {}*, [3 x i64]* } %4
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h7996734a05d3ab3bE"(i8* nonnull %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h49c5a6cea15c8325E"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h9c6be1230595db5dE"(i64 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %0 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17haeae8bd1fee6fd41E"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <T as alloc::slice::hack::ConvertVec>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17ha660e67f64ca97e0E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %v, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
; invoke core::slice::<impl [T]>::len
  %_3 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9801b888739ae037E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_17, align 1
; invoke alloc::vec::Vec<T,A>::with_capacity_in
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h08ddee45c22faf80E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %v, i64 %_3)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %bb9, %cleanup
  %1 = load i8, i8* %_17, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb11, label %bb10

cleanup:                                          ; preds = %bb1, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; invoke core::slice::<impl [T]>::as_ptr
  %_7 = invoke i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h252fb685f8fe6e14E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_9 = invoke i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h5f2895134ab2659dE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %v)
          to label %bb4 unwind label %cleanup1

bb9:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h14b37884d757e53fE"(%"alloc::vec::Vec<u8>"* %v) #18
  br label %bb12

cleanup1:                                         ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
; invoke core::slice::<impl [T]>::len
  %_11 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9801b888739ae037E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
          to label %bb5 unwind label %cleanup1

bb5:                                              ; preds = %bb4
; invoke core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
  invoke void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17h2c2b0c69933c7c51E"(i8* %_7, i8* %_9, i64 %_11)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
; invoke core::slice::<impl [T]>::len
  %_15 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h9801b888739ae037E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h00f095736d4f61d4E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %v, i64 %_15)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  ret void

bb10:                                             ; preds = %bb11, %bb12
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb11:                                             ; preds = %bb12
  br label %bb10
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: nonlazybind uwtable
define { %"std::path::Path"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h1736cae25243c3aeE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_2.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !5
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_2.1 = load i64, i64* %1, align 8
; call std::path::<impl core::convert::AsRef<std::path::Path> for str>::as_ref
  %2 = call { %"std::path::Path"*, i64 } @"_ZN3std4path77_$LT$impl$u20$core..convert..AsRef$LT$std..path..Path$GT$$u20$for$u20$str$GT$6as_ref17h5137e85929fceaa9E"([0 x i8]* nonnull align 1 %_2.0, i64 %_2.1)
  %3 = extractvalue { %"std::path::Path"*, i64 } %2, 0
  %4 = extractvalue { %"std::path::Path"*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %3, 0
  %6 = insertvalue { %"std::path::Path"*, i64 } %5, i64 %4, 1
  ret { %"std::path::Path"*, i64 } %6
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: nonlazybind uwtable
define { %"std::path::Path"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17hacc722eceed7a74bE"({ %"std::path::Path"*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { %"std::path::Path"*, i64 }, { %"std::path::Path"*, i64 }* %self, i32 0, i32 0
  %_2.0 = load %"std::path::Path"*, %"std::path::Path"** %0, align 8, !nonnull !5
  %1 = getelementptr inbounds { %"std::path::Path"*, i64 }, { %"std::path::Path"*, i64 }* %self, i32 0, i32 1
  %_2.1 = load i64, i64* %1, align 8
; call <std::path::Path as core::convert::AsRef<std::path::Path>>::as_ref
  %2 = call { %"std::path::Path"*, i64 } @"_ZN79_$LT$std..path..Path$u20$as$u20$core..convert..AsRef$LT$std..path..Path$GT$$GT$6as_ref17hdb0ba5bbdec46822E"(%"std::path::Path"* nonnull align 1 %_2.0, i64 %_2.1)
  %3 = extractvalue { %"std::path::Path"*, i64 } %2, 0
  %4 = extractvalue { %"std::path::Path"*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %3, 0
  %6 = insertvalue { %"std::path::Path"*, i64 } %5, i64 %4, 1
  ret { %"std::path::Path"*, i64 } %6
}

; <alloc::rc::Rc<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN59_$LT$alloc..rc..Rc$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h35b91596cf805b8fE"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h968b37e5ee1ce677E"(i64** align 8 dereferenceable(8) %self)
  %1 = getelementptr inbounds %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>", %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %0, i32 0, i32 2
  br label %bb1

bb1:                                              ; preds = %start
; call <core::cell::RefCell<T> as core::fmt::Debug>::fmt
  %2 = call zeroext i1 @"_ZN65_$LT$core..cell..RefCell$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hf2a2fadebe61b22dE"(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* align 8 dereferenceable(4152) %1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %2
}

; alloc::rc::RcInnerPtr::dec_strong
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc2rc10RcInnerPtr10dec_strong17h7fdc8b767b30abfdE(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %self) unnamed_addr #0 {
start:
  %0 = bitcast %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::RcInnerPtr::strong
  %_7 = call i64 @_ZN5alloc2rc10RcInnerPtr6strong17h475b1035b9eca405E(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_6 = sub i64 %_7, 1
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h266aec3ba1cded9bE"(i64* align 8 dereferenceable(8) %0, i64 %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::rc::RcInnerPtr::inc_strong
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc2rc10RcInnerPtr10inc_strong17h5b866f3b68e28630E(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %self) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
; call alloc::rc::RcInnerPtr::strong
  %strong = call i64 @_ZN5alloc2rc10RcInnerPtr6strong17h475b1035b9eca405E(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i64 %strong, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_4, align 1
  br label %bb4

bb3:                                              ; preds = %bb1
  %_6 = icmp eq i64 %strong, -1
  %1 = zext i1 %_6 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %2 = load i8, i8* %_4, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %4 = bitcast %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %self to i64*
  br label %bb7

bb5:                                              ; preds = %bb4
  call void @llvm.trap()
  unreachable

bb7:                                              ; preds = %bb6
  %_12 = add i64 %strong, 1
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h266aec3ba1cded9bE"(i64* align 8 dereferenceable(8) %4, i64 %_12)
  br label %bb8

bb8:                                              ; preds = %bb7
  ret void
}

; alloc::rc::RcInnerPtr::weak
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN5alloc2rc10RcInnerPtr4weak17hbd8f3cef3fd3103bE(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>", %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %self, i32 0, i32 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::cell::Cell<T>::get
  %1 = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17h32f88d2811d5a666E"(i64* align 8 dereferenceable(8) %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %1
}

; alloc::rc::RcInnerPtr::strong
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN5alloc2rc10RcInnerPtr6strong17h475b1035b9eca405E(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %self) unnamed_addr #0 {
start:
  %0 = bitcast %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call core::cell::Cell<T>::get
  %1 = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17h32f88d2811d5a666E"(i64* align 8 dereferenceable(8) %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %1
}

; alloc::rc::RcInnerPtr::dec_weak
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc2rc10RcInnerPtr8dec_weak17h0afc803a29069332E(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>", %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %self, i32 0, i32 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::RcInnerPtr::weak
  %_7 = call i64 @_ZN5alloc2rc10RcInnerPtr4weak17hbd8f3cef3fd3103bE(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_6 = sub i64 %_7, 1
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h266aec3ba1cded9bE"(i64* align 8 dereferenceable(8) %0, i64 %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::rc::Rc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN5alloc2rc11Rc$LT$T$GT$10from_inner17haae685f203eb1192E"(i64* nonnull %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !5
  ret i64* %1
}

; alloc::rc::Rc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(4152) %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* @"_ZN5alloc2rc11Rc$LT$T$GT$17get_mut_unchecked17h6698efa121bf9181E"(i64** align 8 dereferenceable(8) %this) unnamed_addr #0 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4c2086fd4e40cc11E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>", %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %_5, i32 0, i32 2
  ret %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %_4
}

; alloc::rc::Rc<T>::new
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN5alloc2rc11Rc$LT$T$GT$3new17h047c4f13ff1c9963E"(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* noalias nocapture dereferenceable(4152) %value) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>", align 8
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_13, align 1
; invoke alloc::alloc::exchange_malloc
  %_8 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h5b6f12bd773a3bf4E(i64 4168, i64 8)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_9 = bitcast i8* %_8 to %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"*
; invoke core::cell::Cell<T>::new
  %_10 = invoke i64 @"_ZN4core4cell13Cell$LT$T$GT$3new17h657d780bd0856f69E"(i64 1)
          to label %bb2 unwind label %cleanup1

bb10:                                             ; preds = %bb8, %cleanup
  %1 = load i8, i8* %_13, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb9, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::cell::Cell<T>::new
  %_11 = invoke i64 @"_ZN4core4cell13Cell$LT$T$GT$3new17h657d780bd0856f69E"(i64 1)
          to label %bb3 unwind label %cleanup1

bb8:                                              ; preds = %cleanup1
  %8 = bitcast %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %_9 to i64*
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hf61246c6b6e5c2b8E(i64* nonnull %8) #18
  br label %bb10

cleanup1:                                         ; preds = %bb2, %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb8

bb3:                                              ; preds = %bb2
  store i8 0, i8* %_13, align 1
  %14 = bitcast %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %_12 to i8*
  %15 = bitcast %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 4152, i1 false)
  %16 = bitcast %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %_9 to i64*
  store i64 %_10, i64* %16, align 8
  %17 = getelementptr inbounds %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>", %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %_9, i32 0, i32 1
  store i64 %_11, i64* %17, align 8
  %18 = getelementptr inbounds %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>", %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %_9, i32 0, i32 2
  %19 = bitcast %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %18 to i8*
  %20 = bitcast %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 4152, i1 false)
; invoke alloc::boxed::Box<T,A>::leak
  %_4 = invoke align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h89740d936fdf0364E"(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* noalias nonnull align 8 %_9)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <T as core::convert::Into<U>>::into
  %_2 = invoke nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h6035b1b2fc7e438aE"(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %_4)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::rc::Rc<T>::from_inner
  %21 = invoke nonnull i64* @"_ZN5alloc2rc11Rc$LT$T$GT$10from_inner17haae685f203eb1192E"(i64* nonnull %_2)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret i64* %21

bb7:                                              ; preds = %bb9, %bb10
  %22 = bitcast { i8*, i32 }* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb9:                                              ; preds = %bb10
  br label %bb7
}

; alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hd811f07e6e82a658E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !5
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17hd97fb59ad8586d86E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %_2, [0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h50745c68d225c93bE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, %"alloc::vec::Vec<u8>"* noalias nocapture dereferenceable(24) %_2)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h5f2895134ab2659dE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17ha9525daa954ad448E"({ i8*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h43af0d189c7c87e2E"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %ptr
}

; alloc::vec::Vec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h08ddee45c22faf80E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, i64 %capacity) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %1 = call { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h876b4d3b5c6c7aa3E"(i64 %capacity)
  %_3.0 = extractvalue { i8*, i64 } %1, 0
  %_3.1 = extractvalue { i8*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_3.0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_3.1, i64* %4, align 8
  %5 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  ret void
}

; alloc::vec::Vec<T,A>::set_len
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h00f095736d4f61d4E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i64 %new_len) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  store i64 %new_len, i64* %0, align 8
  ret void
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc12alloc_zeroed17h494aa55be0eed430E(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17he1e3bfebe86b90e6E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h5f5e43d11860a5adE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc_zeroed(i64 %_2, i64 %_4) #19
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc15exchange_malloc17h5b6f12bd773a3bf4E(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %_6 = alloca { i8*, i64 }, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h515b7f30c9409e2bE(i64 %size, i64 %align)
  %layout.0 = extractvalue { i64, i64 } %0, 0
  %layout.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %1 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h85acbe7918a3b9edE"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc909 to %"alloc::alloc::Global"*), i64 %layout.0, i64 %layout.1)
  store { i8*, i64 } %1, { i8*, i64 }* %_6, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast { i8*, i64 }* %_6 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_9 = select i1 %4, i64 1, i64 0
  switch i64 %_9, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0
  %ptr.0 = load i8*, i8** %5, align 8, !nonnull !5
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1
  %ptr.1 = load i64, i64* %6, align 8
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %7 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hbd7718d00d1b29dcE"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb6

bb3:                                              ; preds = %bb2
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h2740986bd2451aa0E(i64 %layout.0, i64 %layout.1) #20
  unreachable

bb6:                                              ; preds = %bb5
  ret i8* %7
}

; alloc::alloc::alloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc5alloc17h73b3873601140c81E(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17he1e3bfebe86b90e6E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h5f5e43d11860a5adE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc(i64 %_2, i64 %_4) #19
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17he51c5e9fdfbba2c5E(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %_15 = alloca i8*, align 8
  %raw_ptr = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17he1e3bfebe86b90e6E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
; call core::alloc::layout::Layout::dangling
  %_7 = call nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h70aa635e7c978a4eE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb4

bb2:                                              ; preds = %bb1
  br i1 %zeroed, label %bb6, label %bb8

bb8:                                              ; preds = %bb2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_13.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_13.1 = load i64, i64* %7, align 8, !range !15
; call alloc::alloc::alloc
  %8 = call i8* @_ZN5alloc5alloc5alloc17h73b3873601140c81E(i64 %_13.0, i64 %_13.1)
  store i8* %8, i8** %raw_ptr, align 8
  br label %bb9

bb6:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_12.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_12.1 = load i64, i64* %10, align 8, !range !15
; call alloc::alloc::alloc_zeroed
  %11 = call i8* @_ZN5alloc5alloc12alloc_zeroed17h494aa55be0eed430E(i64 %_12.0, i64 %_12.1)
  store i8* %11, i8** %raw_ptr, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %_18 = load i8*, i8** %raw_ptr, align 8
; call core::ptr::non_null::NonNull<T>::new
  %_17 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h0823b4b05fc8bb8dE"(i8* %_18)
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10

bb11:                                             ; preds = %bb10
; call core::option::Option<T>::ok_or
  %_16 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h0782c6cea16a00d9E"(i8* %_17)
  br label %bb12

bb12:                                             ; preds = %bb11
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7c53b10aad874609E"(i8* %_16)
  store i8* %12, i8** %_15, align 8
  br label %bb13

bb13:                                             ; preds = %bb12
  %13 = bitcast i8** %_15 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_20 = select i1 %15, i64 1, i64 0
  switch i64 %_20, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ]

bb15:                                             ; preds = %bb13
  unreachable

bb14:                                             ; preds = %bb13
  %val = load i8*, i8** %_15, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %16 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h2f2721e727b9de4eE"(i8* nonnull %val, i64 %_4)
  %_24.0 = extractvalue { i8*, i64 } %16, 0
  %_24.1 = extractvalue { i8*, i64 } %16, 1
  br label %bb18

bb16:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %17 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h1bbfa09b341a55beE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1189 to %"core::panic::location::Location"*))
  store { i8*, i64 } %17, { i8*, i64 }* %2, align 8
  br label %bb17

bb17:                                             ; preds = %bb16
  br label %bb20

bb20:                                             ; preds = %bb19, %bb17
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = insertvalue { i8*, i64 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i64 } %22, i64 %21, 1
  ret { i8*, i64 } %23

bb18:                                             ; preds = %bb14
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_24.0, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_24.1, i64* %25, align 8
  br label %bb19

bb19:                                             ; preds = %bb5, %bb18
  br label %bb20

bb4:                                              ; preds = %bb3
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %26 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h2f2721e727b9de4eE"(i8* nonnull %_7, i64 0)
  %_6.0 = extractvalue { i8*, i64 } %26, 0
  %_6.1 = extractvalue { i8*, i64 } %26, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_6.0, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_6.1, i64* %28, align 8
  br label %bb19
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc7dealloc17h2988975b8bc404faE(i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17he1e3bfebe86b90e6E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_6 = call i64 @_ZN4core5alloc6layout6Layout5align17h5f5e43d11860a5adE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @__rust_dealloc(i8* %ptr, i64 %_4, i64 %_6) #19
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h012dc4adac85366eE(i64* nonnull %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hb2a0eded22f8b734E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 24, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hb2a0eded22f8b734E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h515b7f30c9409e2bE(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !5
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h30580127a65e6018E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h7996734a05d3ab3bE"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8f08ceea22567f8aE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h299fa0f5098ebec4E(i8* nonnull %0, i64* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h554dbe3c0e8a4651E"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %8 = bitcast [3 x i64]* %_5.1 to i64*
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = load i64, i64* %9, align 8, !invariant.load !5
  %11 = bitcast [3 x i64]* %_5.1 to i64*
  %12 = getelementptr inbounds i64, i64* %11, i64 2
  %13 = load i64, i64* %12, align 8, !range !15, !invariant.load !5
  store i64 %10, i64* %3, align 8
  %size = load i64, i64* %3, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %19 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h554dbe3c0e8a4651E"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %19, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %19, 1
  %20 = bitcast [3 x i64]* %_9.1 to i64*
  %21 = getelementptr inbounds i64, i64* %20, i64 1
  %22 = load i64, i64* %21, align 8, !invariant.load !5
  %23 = bitcast [3 x i64]* %_9.1 to i64*
  %24 = getelementptr inbounds i64, i64* %23, i64 2
  %25 = load i64, i64* %24, align 8, !range !15, !invariant.load !5
  store i64 %25, i64* %2, align 8
  %align = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %26 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h515b7f30c9409e2bE(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %26, 0
  %layout.1 = extractvalue { i64, i64 } %26, 1
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %27, align 8, !nonnull !5
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %28, align 8, !nonnull !5
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h9b5c26fb77af3636E"(i8* nonnull %_17.0, i64* align 8 dereferenceable(24) %_17.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h7996734a05d3ab3bE"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8f08ceea22567f8aE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %29 = bitcast { i8*, i32 }* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h631c3ae551e05638E(i8* nonnull %0, i64* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h45a8c287b0c388daE"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %8 = bitcast [3 x i64]* %_5.1 to i64*
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = load i64, i64* %9, align 8, !invariant.load !5
  %11 = bitcast [3 x i64]* %_5.1 to i64*
  %12 = getelementptr inbounds i64, i64* %11, i64 2
  %13 = load i64, i64* %12, align 8, !range !15, !invariant.load !5
  store i64 %10, i64* %3, align 8
  %size = load i64, i64* %3, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %19 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h45a8c287b0c388daE"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %19, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %19, 1
  %20 = bitcast [3 x i64]* %_9.1 to i64*
  %21 = getelementptr inbounds i64, i64* %20, i64 1
  %22 = load i64, i64* %21, align 8, !invariant.load !5
  %23 = bitcast [3 x i64]* %_9.1 to i64*
  %24 = getelementptr inbounds i64, i64* %23, i64 2
  %25 = load i64, i64* %24, align 8, !range !15, !invariant.load !5
  store i64 %25, i64* %2, align 8
  %align = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %26 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h515b7f30c9409e2bE(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %26, 0
  %layout.1 = extractvalue { i64, i64 } %26, 1
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %27, align 8, !nonnull !5
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %28, align 8, !nonnull !5
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h9f19ec69ff66c217E"(i8* nonnull %_17.0, i64* align 8 dereferenceable(24) %_17.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h7996734a05d3ab3bE"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8f08ceea22567f8aE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %29 = bitcast { i8*, i32 }* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17hf61246c6b6e5c2b8E(i64* nonnull %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h46f6c38233e65fc4E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 4168, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h46f6c38233e65fc4E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h515b7f30c9409e2bE(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !5
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h8e3bc239fe9424fbE"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h7996734a05d3ab3bE"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8f08ceea22567f8aE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::boxed::Box<T,A>::into_unique
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17haf091e36798372cfE"({}* noalias nonnull align 1 %0, [3 x i64]* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %3 = alloca { i8*, i64* }, align 8
  %b = alloca { {}*, [3 x i64]* }, align 8
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  store {}* %0, {}** %4, align 8
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  store [3 x i64]* %1, [3 x i64]** %5, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %_4 = bitcast { {}*, [3 x i64]* }* %b to %"alloc::alloc::Global"*
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17h03737431b06e45e7E(%"alloc::alloc::Global"* %_4)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  %_7.0 = load {}*, {}** %6, align 8, !nonnull !5
  %7 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  %_7.1 = load [3 x i64]*, [3 x i64]** %7, align 8, !nonnull !5
; invoke alloc::boxed::Box<T,A>::leak
  %8 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h45268000d927027cE"({}* noalias nonnull align 1 %_7.0, [3 x i64]* align 8 dereferenceable(24) %_7.1)
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %9 = load i8, i8* %_9, align 1, !range !4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { {}*, [3 x i64]* } %8, 0
  %_6.1 = extractvalue { {}*, [3 x i64]* } %8, 1
; invoke <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
  %16 = invoke { i8*, i64* } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h7399232feeddf285E"({}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) %_6.1)
          to label %bb3 unwind label %cleanup1

bb4:                                              ; preds = %cleanup1
  br label %bb7

cleanup1:                                         ; preds = %bb2, %bb1
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { i8*, i64* } %16, 0
  %_5.1 = extractvalue { i8*, i64* } %16, 1
  %22 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_5.0, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_5.1, i64** %23, align 8
  %24 = bitcast { i8*, i64* }* %3 to i8*
  %25 = getelementptr i8, i8* %24, i64 16
  %26 = bitcast i8* %25 to %"alloc::alloc::Global"*
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !nonnull !5
  %29 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  %30 = load i64*, i64** %29, align 8, !nonnull !5
  %31 = insertvalue { i8*, i64* } undef, i8* %28, 0
  %32 = insertvalue { i8*, i64* } %31, i64* %30, 1
  ret { i8*, i64* } %32

bb5:                                              ; preds = %bb6, %bb7
  %33 = bitcast { i8*, i32 }* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17ha7a3cdea72d9c71cE"({ {}*, [3 x i64]* }* %b) #18
  br label %bb5
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h33633d6537de4f1bE"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i64* }, align 8
; call alloc::boxed::Box<T,A>::into_unique
  %2 = call { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17haf091e36798372cfE"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1)
  %_4.0 = extractvalue { i8*, i64* } %2, 0
  %_4.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::ptr::unique::Unique<T>::as_ptr
  %3 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9d941ce2c2415af9E"(i8* nonnull %_4.0, i64* align 8 dereferenceable(24) %_4.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { {}*, [3 x i64]* } %3, 0
  %_6.1 = extractvalue { {}*, [3 x i64]* } %3, 1
  %4 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 0
  store {}* %_6.0, {}** %5, align 8
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 1
  store [3 x i64]* %_6.1, [3 x i64]** %6, align 8
  %7 = bitcast { i8*, i64* }* %1 to i8*
  %8 = getelementptr i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to %"alloc::alloc::Global"*
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %1, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %1, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8, !nonnull !5
  %14 = insertvalue { i8*, i64* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64* } %14, i64* %13, 1
  ret { i8*, i64* } %15

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %21 = bitcast { i8*, i32 }* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h45268000d927027cE"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64* }, align 8
  %_9 = alloca { i8*, i64* }, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !22)
  %1 = bitcast { i8*, i64* }* %0 to { {}*, [3 x i64]* }*
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 0
  store {}* %b.0, {}** %2, align 8, !noalias !22
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 1
  store [3 x i64]* %b.1, [3 x i64]** %3, align 8, !noalias !22
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !noalias !22, !nonnull !5
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !noalias !22, !nonnull !5
  %8 = insertvalue { i8*, i64* } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64* } %8, i64* %7, 1
  store { i8*, i64* } %9, { i8*, i64* }* %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %10 = bitcast { i8*, i64* }* %_9 to { {}*, [3 x i64]* }*
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast { {}*, [3 x i64]* }* %10 to { i8*, i64* }*
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 0
  %_6.0 = load i8*, i8** %12, align 8, !nonnull !5
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 1
  %_6.1 = load i64*, i64** %13, align 8, !nonnull !5
; call core::ptr::unique::Unique<T>::as_ptr
  %14 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9d941ce2c2415af9E"(i8* nonnull %_6.0, i64* align 8 dereferenceable(24) %_6.1)
  %_5.0 = extractvalue { {}*, [3 x i64]* } %14, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %14, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %15 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0
  %16 = insertvalue { {}*, [3 x i64]* } %15, [3 x i64]* %_5.1, 1
  ret { {}*, [3 x i64]* } %16
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h89740d936fdf0364E"(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* noalias nonnull align 8 %b) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !25)
  %1 = bitcast i64** %0 to %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"**
  store %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %b, %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"** %1, align 8, !noalias !25
  %2 = load i64*, i64** %0, align 8, !noalias !25, !nonnull !5
  store i64* %2, i64** %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_9 to %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"** %3 to i64**
  %_6 = load i64*, i64** %4, align 8, !nonnull !5
; call core::ptr::unique::Unique<T>::as_ptr
  %_5 = call %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hced0962592a22de5E"(i64* nonnull %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %_5
}

; alloc::boxed::Box<T,A>::into_raw
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h031f35a13b9efaddE"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #0 {
start:
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %0 = call { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h33633d6537de4f1bE"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1)
  %_2.0 = extractvalue { i8*, i64* } %0, 0
  %_2.1 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast i8* %_2.0 to {}*
  %2 = bitcast i64* %_2.1 to [3 x i64]*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %1, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %2, 1
  ret { {}*, [3 x i64]* } %4
}

; alloc::slice::<impl [T]>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17h77997c5197ae7518E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::<impl [T]>::to_vec_in
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h8650631f33254f93E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::<impl [T]>::to_vec_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h8650631f33254f93E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::hack::to_vec
  call void @_ZN5alloc5slice4hack6to_vec17hb059b88a1ede022bE(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::hack::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5slice4hack6to_vec17hb059b88a1ede022bE(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17ha660e67f64ca97e0E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17hd97fb59ad8586d86E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call alloc::slice::<impl [T]>::to_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17h77997c5197ae7518E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::string::String::from_utf8_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String19from_utf8_unchecked17h50745c68d225c93bE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, %"alloc::vec::Vec<u8>"* noalias nocapture dereferenceable(24) %bytes) unnamed_addr #0 {
start:
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*
  %2 = bitcast %"alloc::vec::Vec<u8>"* %bytes to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*
  %4 = bitcast %"alloc::vec::Vec<u8>"* %3 to i8*
  %5 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  ret void
}

; alloc::raw_vec::alloc_guard
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec11alloc_guard17hd60b2bcc688232b0E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %alloc_size) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
  br i1 false, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h9c6be1230595db5dE"(i64 %4, i64 %6)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  ret void
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hf341dd6220adb618E"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_33 = alloca i8, align 1
  %result = alloca { i8*, i64 }, align 8
  %_11 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_7 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = alloca { i8*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i8 0, i8* %_33, align 1
  store i8 1, i8* %_33, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 1, 0
  br i1 %4, label %bb2, label %bb4

bb31:                                             ; preds = %cleanup
  %5 = load i8, i8* %_33, align 1, !range !4
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb30, label %bb29

cleanup:                                          ; preds = %bb2, %bb26, %bb25, %bb24, %bb23, %bb22, %bb16, %bb14, %bb11, %bb9, %bb8, %bb6, %bb4
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb31

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_33, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %12 = invoke { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h92e33647d31d5f8aE"()
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array
  %13 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h1a0eb075e2c3f218E(i64 %capacity)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store { i64, i64 } %13, { i64, i64 }* %_7, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %_9 = select i1 %16, i64 1, i64 0
  switch i64 %_9, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb5
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %layout.0 = load i64, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %layout.1 = load i64, i64* %18, align 8, !range !15
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %layout.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %layout.1, i64* %20, align 8
; invoke core::alloc::layout::Layout::size
  %_12 = invoke i64 @_ZN4core5alloc6layout6Layout4size17he1e3bfebe86b90e6E({ i64, i64 }* align 8 dereferenceable(16) %layout)
          to label %bb9 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17ha72cd8fd7333b22dE() #17
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb11, %bb6
  unreachable

bb9:                                              ; preds = %bb8
; invoke alloc::raw_vec::alloc_guard
  invoke void @_ZN5alloc7raw_vec11alloc_guard17hd60b2bcc688232b0E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_11, i64 %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %21 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_11 to i64*
  %_14 = load i64, i64* %21, align 8, !range !2
  switch i64 %_14, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  %22 = load i8, i8* %init, align 1, !range !4
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17ha72cd8fd7333b22dE() #17
          to label %unreachable unwind label %cleanup

bb15:                                             ; preds = %bb13
  unreachable

bb16:                                             ; preds = %bb13
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_18.0 = load i64, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_18.1 = load i64, i64* %25, align 8, !range !15
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %26 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h85acbe7918a3b9edE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_18.0, i64 %_18.1)
          to label %bb17 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_20.0 = load i64, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_20.1 = load i64, i64* %28, align 8, !range !15
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %29 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h64b4ba496c3ba886E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_20.0, i64 %_20.1)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %29, { i8*, i64 }* %result, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %30 = bitcast { i8*, i64 }* %result to {}**
  %31 = load {}*, {}** %30, align 8
  %32 = icmp eq {}* %31, null
  %_22 = select i1 %32, i64 1, i64 0
  switch i64 %_22, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ]

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %26, { i8*, i64 }* %result, align 8
  br label %bb19

bb21:                                             ; preds = %bb19
  unreachable

bb22:                                             ; preds = %bb19
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0
  %ptr.0 = load i8*, i8** %33, align 8, !nonnull !5
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1
  %ptr.1 = load i64, i64* %34, align 8
; invoke core::ptr::non_null::NonNull<T>::cast
  %_27 = invoke nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5822e7ec7317f22cE"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb23 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_24.0 = load i64, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_24.1 = load i64, i64* %36, align 8, !range !15
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h2740986bd2451aa0E(i64 %_24.0, i64 %_24.1) #20
  unreachable

bb23:                                             ; preds = %bb22
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc0edf09b9258eafaE"(i8* nonnull %_27)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_25 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hf4ba1e214070ddbfE"(i8* %_26)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
; invoke core::ptr::non_null::NonNull<[T]>::len
  %_30 = invoke i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h50ba5c7ee6ff0515E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
; invoke alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_29 = invoke i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h818de17a56772e40E"(i64 %_30)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
  store i8 0, i8* %_33, align 1
  %37 = bitcast { i8*, i64 }* %2 to i8**
  store i8* %_25, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_29, i64* %38, align 8
  %39 = bitcast { i8*, i64 }* %2 to %"alloc::alloc::Global"*
  br label %bb28

bb28:                                             ; preds = %bb3, %bb27
  %40 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8, !nonnull !5
  %42 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = insertvalue { i8*, i64 } undef, i8* %41, 0
  %45 = insertvalue { i8*, i64 } %44, i64 %43, 1
  ret { i8*, i64 } %45

bb3:                                              ; preds = %bb2
  store { i8*, i64 } %12, { i8*, i64 }* %2, align 8
  br label %bb28

bb29:                                             ; preds = %bb30, %bb31
  %46 = bitcast { i8*, i32 }* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

bb30:                                             ; preds = %bb31
  br label %bb29
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h4af92e0036b2659cE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 1, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 1, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h515b7f30c9409e2bE(i64 %size, i64 1)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i8*, i64 }* %self to i8**
  %_16 = load i8*, i8** %9, align 8, !nonnull !5
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h1b714655db83e0d7E"(i8* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h7996734a05d3ab3bE"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h876b4d3b5c6c7aa3E"(i64 %capacity) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !4
  %1 = trunc i8 %0 to i1
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %2 = call { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hf341dd6220adb618E"(i64 %capacity, i1 zeroext %1)
  %3 = extractvalue { i8*, i64 } %2, 0
  %4 = extractvalue { i8*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1
  ret { i8*, i64 } %6
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h818de17a56772e40E"(i64 %excess) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 1, 0
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 1
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.a to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1191 to %"core::panic::location::Location"*)) #17
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17ha9525daa954ad448E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i8*, i64 }* %self to i8**
  %_2 = load i8*, i8** %0, align 8, !nonnull !5
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9c889871e03ba045E"(i8* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %1
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h92e33647d31d5f8aE"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::dangling
  %_2 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h859c56f82b6cb21cE"()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast { i8*, i64 }* %1 to i8**
  store i8* %_2, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = bitcast { i8*, i64 }* %1 to %"alloc::alloc::Global"*
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8, !nonnull !5
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; <alloc::rc::Rc<T> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN61_$LT$alloc..rc..Rc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h8d144af38346da57E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h968b37e5ee1ce677E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::RcInnerPtr::inc_strong
  call void @_ZN5alloc2rc10RcInnerPtr10inc_strong17h5b866f3b68e28630E(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_6 = load i64*, i64** %self, align 8, !nonnull !5
; call alloc::rc::Rc<T>::from_inner
  %1 = call nonnull i64* @"_ZN5alloc2rc11Rc$LT$T$GT$10from_inner17haae685f203eb1192E"(i64* nonnull %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64* %1
}

; <core::cell::Ref<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN61_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h298401b814982640E"({ i64*, i64* }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
; call <core::cell::Ref<T> as core::ops::deref::Deref>::deref
  %_5 = call align 8 dereferenceable(4144) %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h104bc1cdfb32eb1bE"({ i64*, i64* }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call <rand::reseeding::ReseedingRng<R,Rsdr> as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN82_$LT$rand..reseeding..ReseedingRng$LT$R$C$Rsdr$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h475d8dcc4ffde250E"(%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* align 8 dereferenceable(4144) %_5, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0b3cdb7b3691da20E"(i64* nonnull %self.0, i64* %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64*, i64* } undef, i64* %self.0, 0
  %1 = insertvalue { i64*, i64* } %0, i64* %self.1, 1
  ret { i64*, i64* } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h181c677b636f0d43E"(i32* nonnull %self.0, i32* %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i32*, i32* } undef, i32* %self.0, 0
  %1 = insertvalue { i32*, i32* } %0, i32* %self.1, 1
  ret { i32*, i32* } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1ba709b59e4b6b38E"(i32 %self.0, i32 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i32, i32 } undef, i32 %self.0, 0
  %1 = insertvalue { i32, i32 } %0, i32 %self.1, 1
  ret { i32, i32 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1d811ed92204fe7eE"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1e14535af05449b3E"(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>") dereferenceable(32) %0, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h237eded1eaf4e6edE"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2723146ff493a73aE"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>") dereferenceable(56) %0, %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* noalias nocapture dereferenceable(56) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2b7334953e8ae2bdE"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h3587d6ea3bde95f7E"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4056f9a8e2ed9597E"(i32 %self.0, i32 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i32, i32 } undef, i32 %self.0, 0
  %1 = insertvalue { i32, i32 } %0, i32 %self.1, 1
  ret { i32, i32 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h56096599bcc01841E"(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>") dereferenceable(24) %0, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5c687bf3cf69442aE"(i32 %self) unnamed_addr #0 {
start:
  ret i32 %self
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h63c81068bf8b5ae1E"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7337de879203f18cE"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h786ea71f7f80715bE"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h78960d70b2d14158E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>") dereferenceable(72) %0, %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* noalias nocapture dereferenceable(72) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 72, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9ba3ed6f3250699bE"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>") dereferenceable(64) %0, %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* noalias nocapture dereferenceable(64) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hae842967d1b802eaE"(i32* nonnull %self.0, i32* %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i32*, i32* } undef, i32* %self.0, 0
  %1 = insertvalue { i32*, i32* } %0, i32* %self.1, 1
  ret { i32*, i32* } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc104f0ebc962f0b4E"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hcbfe882529e66249E"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd75fc9493bcf95dbE"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf1c22125c3fa4c2fE"(i64 %self) unnamed_addr #0 {
start:
  ret i64 %self
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8f08ceea22567f8aE"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17he1e3bfebe86b90e6E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 %_4, 0
  br i1 %4, label %bb5, label %bb2

bb5:                                              ; preds = %bb1
  br label %bb6

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc0edf09b9258eafaE"(i8* nonnull %ptr)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_8.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_8.1 = load i64, i64* %6, align 8, !range !15
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17h2988975b8bc404faE(i8* %_6, i64 %_8.0, i64 %_8.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  ret void
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h64b4ba496c3ba886E"(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17he51c5e9fdfbba2c5E(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h85acbe7918a3b9edE"(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17he51c5e9fdfbba2c5E(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::cell::BorrowRef as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$core..cell..BorrowRef$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfbd50de815d30ac3E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !5
; call core::cell::Cell<T>::get
  %borrow = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17he7fe1034759dc0c1E"(i64* align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = load i64*, i64** %self, align 8, !nonnull !5
  %_6 = sub i64 %borrow, 1
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h79636cf0a9378304E"(i64* align 8 dereferenceable(8) %_5, i64 %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN64_$LT$alloc..rc..Rc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6b2500866e9584e4E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h968b37e5ee1ce677E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::RcInnerPtr::dec_strong
  call void @_ZN5alloc2rc10RcInnerPtr10dec_strong17h7fdc8b767b30abfdE(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %0)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::as_ref
  %1 = call align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h968b37e5ee1ce677E"(i64** align 8 dereferenceable(8) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
; call alloc::rc::RcInnerPtr::strong
  %_6 = call i64 @_ZN5alloc2rc10RcInnerPtr6strong17h475b1035b9eca405E(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %2 = icmp eq i64 %_6, 0
  br i1 %2, label %bb5, label %bb19

bb5:                                              ; preds = %bb4
; call alloc::rc::Rc<T>::get_mut_unchecked
  %_12 = call align 8 dereferenceable(4152) %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* @"_ZN5alloc2rc11Rc$LT$T$GT$17get_mut_unchecked17h6698efa121bf9181E"(i64** align 8 dereferenceable(8) %self)
  br label %bb6

bb19:                                             ; preds = %bb4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  ret void

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::ptr::non_null::NonNull<T>::as_ref
  %3 = call align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h968b37e5ee1ce677E"(i64** align 8 dereferenceable(8) %self)
  br label %bb8

bb8:                                              ; preds = %bb7
; call alloc::rc::RcInnerPtr::dec_weak
  call void @_ZN5alloc2rc10RcInnerPtr8dec_weak17h0afc803a29069332E(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %3)
  br label %bb9

bb9:                                              ; preds = %bb8
; call core::ptr::non_null::NonNull<T>::as_ref
  %4 = call align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h968b37e5ee1ce677E"(i64** align 8 dereferenceable(8) %self)
  br label %bb10

bb10:                                             ; preds = %bb9
; call alloc::rc::RcInnerPtr::weak
  %_18 = call i64 @_ZN5alloc2rc10RcInnerPtr4weak17hbd8f3cef3fd3103bE(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %4)
  br label %bb11

bb11:                                             ; preds = %bb10
  %5 = icmp eq i64 %_18, 0
  br i1 %5, label %bb12, label %bb17

bb12:                                             ; preds = %bb11
  %_25 = load i64*, i64** %self, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::cast
  %_24 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6af255c4b8edaa4dE"(i64* nonnull %_25)
  br label %bb13

bb17:                                             ; preds = %bb11
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  br label %bb20

bb13:                                             ; preds = %bb12
; call core::ptr::non_null::NonNull<T>::as_ref
  %_28 = call align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h968b37e5ee1ce677E"(i64** align 8 dereferenceable(8) %self)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::alloc::layout::Layout::for_value
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout9for_value17hfeb3f666aa0e5951E(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %_28)
  %_26.0 = extractvalue { i64, i64 } %6, 0
  %_26.1 = extractvalue { i64, i64 } %6, 1
  br label %bb15

bb15:                                             ; preds = %bb14
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8f08ceea22567f8aE"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc909 to %"alloc::alloc::Global"*), i8* nonnull %_24, i64 %_26.0, i64 %_26.1)
  br label %bb16

bb16:                                             ; preds = %bb15
  br label %bb18
}

; <core::cell::RefCell<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN65_$LT$core..cell..RefCell$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hf2a2fadebe61b22dE"(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* align 8 dereferenceable(4152) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i8*, i32 }, align 8
  %2 = alloca i128, align 8
  %_22 = alloca %"core::fmt::builders::DebugStruct", align 8
  %_10 = alloca %"core::fmt::builders::DebugStruct", align 8
  %borrow = alloca { i64*, i64* }, align 8
  %_3 = alloca { i64*, i8* }, align 8
  %3 = alloca i8, align 1
; call core::cell::RefCell<T>::try_borrow
  %4 = call { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$10try_borrow17h689d1ce7a01fed35E"(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* align 8 dereferenceable(4152) %self)
  store { i64*, i8* } %4, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast { i64*, i8* }* %_3 to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_5 = select i1 %7, i64 1, i64 0
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %8 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8, !nonnull !5
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %8, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8, !nonnull !5
  %13 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %borrow, i32 0, i32 0
  store i64* %10, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %borrow, i32 0, i32 1
  store i64* %12, i64** %14, align 8
; invoke core::fmt::Formatter::debug_struct
  %15 = invoke i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1197 to [0 x i8]*), i64 7)
          to label %bb5 unwind label %cleanup

bb2:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_struct
  %16 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1197 to [0 x i8]*), i64 7)
  store i128 %16, i128* %2, align 8
  %17 = bitcast %"core::fmt::builders::DebugStruct"* %_22 to i8*
  %18 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false)
  br label %bb9

bb9:                                              ; preds = %bb2
; call core::fmt::builders::DebugStruct::field
  %_20 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_22, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1198 to [0 x i8]*), i64 5, {}* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc909 to {}*), [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.b to [3 x i64]*))
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::fmt::builders::DebugStruct::finish
  %19 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_20)
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %3, align 1
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb12

bb12:                                             ; preds = %bb8, %bb11
  %21 = load i8, i8* %3, align 1, !range !4
  %22 = trunc i8 %21 to i1
  ret i1 %22

bb5:                                              ; preds = %bb4
  store i128 %15, i128* %0, align 8
  %23 = bitcast %"core::fmt::builders::DebugStruct"* %_10 to i8*
  %24 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %_16.0 = bitcast { i64*, i64* }* %borrow to {}*
; invoke core::fmt::builders::DebugStruct::field
  %_8 = invoke align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_10, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1198 to [0 x i8]*), i64 5, {}* nonnull align 1 %_16.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.c to [3 x i64]*))
          to label %bb6 unwind label %cleanup

bb13:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<core::cell::Ref<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>
  call void @"_ZN4core3ptr119drop_in_place$LT$core..cell..Ref$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$17h196ab9f6961dbb4dE"({ i64*, i64* }* %borrow) #18
  br label %bb14

cleanup:                                          ; preds = %bb6, %bb5, %bb4
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb13

bb6:                                              ; preds = %bb5
; invoke core::fmt::builders::DebugStruct::finish
  %30 = invoke zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_8)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %3, align 1
; call core::ptr::drop_in_place<core::cell::Ref<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>
  call void @"_ZN4core3ptr119drop_in_place$LT$core..cell..Ref$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$17h196ab9f6961dbb4dE"({ i64*, i64* }* %borrow)
  br label %bb8

bb14:                                             ; preds = %bb13
  %32 = bitcast { i8*, i32 }* %1 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37

bb8:                                              ; preds = %bb7
  br label %bb12
}

; <core::cell::BorrowRefMut as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN66_$LT$core..cell..BorrowRefMut$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4c0b87303644a904E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !5
; call core::cell::Cell<T>::get
  %borrow = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17he7fe1034759dc0c1E"(i64* align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = load i64*, i64** %self, align 8, !nonnull !5
  %_6 = add i64 %borrow, 1
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h79636cf0a9378304E"(i64* align 8 dereferenceable(8) %_5, i64 %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <std::io::error::ErrorKind as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN66_$LT$std..io..error..ErrorKind$u20$as$u20$core..cmp..PartialEq$GT$2eq17h14f36e102e00aa7aE"(i8* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = load i8, i8* %self, align 1, !range !7
  %__self_vi = zext i8 %1 to i64
  %2 = load i8, i8* %other, align 1, !range !7
  %__arg_1_vi = zext i8 %2 to i64
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; <core::cell::Ref<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(4144) %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h104bc1cdfb32eb1bE"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i64* }* %self to %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"**
  %1 = load %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"*, %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"** %0, align 8, !nonnull !5
  ret %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %1
}

; <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha2107779dbaf85e0E"(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %_3 = load i32, i32* %self, align 4
  %_2 = call i32 @close(i32 %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h79c6fbd1063fe795E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h5f2895134ab2659dE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h4520bf7c57878365E(i8* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <core::option::Option<T> as core::cmp::PartialEq>::ne
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17h83fb84df4af1d8f6E"({ i32, i32 }* align 4 dereferenceable(8) %self, { i32, i32 }* align 4 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %_13 = alloca { i32*, i32* }, align 8
  %0 = alloca i8, align 1
  %1 = bitcast { i32, i32 }* %self to i32*
  %2 = load i32, i32* %1, align 4, !range !3
  %__self_vi = zext i32 %2 to i64
  %3 = bitcast { i32, i32 }* %other to i32*
  %4 = load i32, i32* %3, align 4, !range !3
  %__arg_1_vi = zext i32 %4 to i64
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb7

bb7:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb8

bb1:                                              ; preds = %start
  %5 = bitcast { i32*, i32* }* %_13 to { i32, i32 }**
  store { i32, i32 }* %self, { i32, i32 }** %5, align 8
  %6 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 1
  %7 = bitcast i32** %6 to { i32, i32 }**
  store { i32, i32 }* %other, { i32, i32 }** %7, align 8
  %8 = bitcast { i32*, i32* }* %_13 to { i32, i32 }**
  %9 = load { i32, i32 }*, { i32, i32 }** %8, align 8, !nonnull !5
  %10 = bitcast { i32, i32 }* %9 to i32*
  %11 = load i32, i32* %10, align 4, !range !3
  %_17 = zext i32 %11 to i64
  %12 = icmp eq i64 %_17, 1
  br i1 %12, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %13 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 1
  %14 = bitcast i32** %13 to { i32, i32 }**
  %15 = load { i32, i32 }*, { i32, i32 }** %14, align 8, !nonnull !5
  %16 = bitcast { i32, i32 }* %15 to i32*
  %17 = load i32, i32* %16, align 4, !range !3
  %_16 = zext i32 %17 to i64
  %18 = icmp eq i64 %_16, 1
  br i1 %18, label %bb4, label %bb2

bb2:                                              ; preds = %bb3, %bb1
  store i8 0, i8* %0, align 1
  br label %bb6

bb4:                                              ; preds = %bb3
  %19 = bitcast { i32*, i32* }* %_13 to { i32, i32 }**
  %20 = load { i32, i32 }*, { i32, i32 }** %19, align 8, !nonnull !5
  %21 = bitcast { i32, i32 }* %20 to %"core::option::Option<i32>::Some"*
  %__self_0 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %21, i32 0, i32 1
  %22 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 1
  %23 = bitcast i32** %22 to { i32, i32 }**
  %24 = load { i32, i32 }*, { i32, i32 }** %23, align 8, !nonnull !5
  %25 = bitcast { i32, i32 }* %24 to %"core::option::Option<i32>::Some"*
  %__arg_1_0 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %25, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialEq for i32>::ne
  %26 = call zeroext i1 @"_ZN4core3cmp5impls54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$i32$GT$2ne17h99b8087e3fc9fcdfE"(i32* align 4 dereferenceable(4) %__self_0, i32* align 4 dereferenceable(4) %__arg_1_0)
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %0, align 1
  br label %bb5

bb6:                                              ; preds = %bb5, %bb2
  br label %bb8

bb5:                                              ; preds = %bb4
  br label %bb6

bb8:                                              ; preds = %bb7, %bb6
  %28 = load i8, i8* %0, align 1, !range !4
  %29 = trunc i8 %28 to i1
  ret i1 %29
}

; <core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(4144) %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* @"_ZN74_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h88927b1bd1a42ee8E"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i64* }* %self to %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"**
  %_2 = load %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"*, %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"** %0, align 8, !nonnull !5
  ret %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %_2
}

; <core::num::wrapping::Wrapping<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN75_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hf7bb7546c6d6d75eE"(i32* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
; call core::fmt::num::<impl core::fmt::Debug for u32>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h2b281f2a52960376E"(i32* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h13e2e561e249fef8E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %6, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<u64>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %7, i32 0, i32 1
  %v = load i64, i64* %8, align 8
  %9 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue"*
  %10 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue", %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue"* %9, i32 0, i32 1
  store i64 %v, i64* %10, align 8
  %11 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %11, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %13 = load i64, i64* %12, align 8, !range !2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { i64, i64 } undef, i64 %13, 0
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1
  ret { i64, i64 } %17
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h424c76cd5fb4fd01E"(i32 %0, i32 %1) unnamed_addr #0 {
start:
  %2 = alloca { i32, i32 }, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  %5 = bitcast { i32, i32 }* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !3
  %_2 = zext i32 %6 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %7 = bitcast { i32, i32 }* %2 to i32*
  store i32 1, i32* %7, align 4
  br label %bb4

bb3:                                              ; preds = %start
  %8 = bitcast { i32, i32 }* %self to %"core::option::Option<u32>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %8, i32 0, i32 1
  %v = load i32, i32* %9, align 4
  %10 = bitcast { i32, i32 }* %2 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u32>::Continue"*
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u32>::Continue", %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, u32>::Continue"* %10, i32 0, i32 1
  store i32 %v, i32* %11, align 4
  %12 = bitcast { i32, i32 }* %2 to i32*
  store i32 0, i32* %12, align 4
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %2, i32 0, i32 0
  %14 = load i32, i32* %13, align 4, !range !3
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %2, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = insertvalue { i32, i32 } undef, i32 %14, 0
  %18 = insertvalue { i32, i32 } %17, i32 %16, 1
  ret { i32, i32 } %18
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4be3883a619f1cb7E"(i64* align 8 dereferenceable_or_null(8) %0) unnamed_addr #0 {
start:
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast i64** %1 to {}**
  store {}* null, {}** %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %v = load i64*, i64** %self, align 8, !nonnull !5
  store i64* %v, i64** %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i64*, i64** %1, align 8
  ret i64* %6
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb6fd2dc2bffb63beE"(i32* align 4 dereferenceable_or_null(4) %0) unnamed_addr #0 {
start:
  %1 = alloca i32*, align 8
  %self = alloca i32*, align 8
  store i32* %0, i32** %self, align 8
  %2 = bitcast i32** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast i32** %1 to {}**
  store {}* null, {}** %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %v = load i32*, i32** %self, align 8, !nonnull !5
  store i32* %v, i32** %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i32*, i32** %1, align 8
  ret i32* %6
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h650db643b889e52dE"(i64 %self, [0 x i64]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call i64* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hf29fc5c638a92c44E"([0 x i64]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i64, i64* %_3, i64 %self
  store i64* %1, i64** %0, align 8
  %2 = load i64*, i64** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h2ae11c87b6228c67E"(i64 %self, [0 x i64]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast [0 x i64]* %slice.0 to i64*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i64, i64* %1, i64 %self
  store i64* %2, i64** %0, align 8
  %_3.i = load i64*, i64** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %_3.i
}

; <alloc::string::String as core::convert::From<&str>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h2374e1be1ef92467E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hd811f07e6e82a658E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h530c7be54ae8550bE"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h4af92e0036b2659cE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i8*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !5
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !15
  %_7 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8f08ceea22567f8aE"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <core::num::wrapping::Wrapping<T> as core::cmp::PartialEq>::ne
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17hb46ca1a6a97ad50dE"(i32* align 4 dereferenceable(4) %self, i32* align 4 dereferenceable(4) %other) unnamed_addr #0 {
start:
; call core::cmp::impls::<impl core::cmp::PartialEq for u32>::ne
  %0 = call zeroext i1 @"_ZN4core3cmp5impls54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u32$GT$2ne17h54e976dc53435b22E"(i32* align 4 dereferenceable(4) %self, i32* align 4 dereferenceable(4) %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h47a84a4012aa03f9E"(i64* align 8 dereferenceable_or_null(8) %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err", align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i64** %self to i64***
  %v = load i64**, i64*** %5, align 8, !nonnull !5
  %6 = bitcast i64** %1 to i64***
  store i64** %v, i64*** %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"* %_6 to %"std::thread::local::AccessError"*
  %8 = bitcast i64** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &alloc::rc::Rc<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>>::Break"*
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &alloc::rc::Rc<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>>::Break"* %8 to %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"*
  %10 = bitcast i64** %1 to {}**
  store {}* null, {}** %10, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %11 = load i64*, i64** %1, align 8
  ret i64* %11
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7c53b10aad874609E"(i8* %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !5
  store i8* %v, i8** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %_6 to %"core::alloc::AllocError"*
  %6 = bitcast i8** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break"*
  %7 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break"* %6 to %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"*
  %8 = bitcast i8** %1 to {}**
  store {}* null, {}** %8, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8*, i8** %1, align 8
  ret i8* %9
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hbc8ca2db144de98dE"(i64 %0) unnamed_addr #0 {
start:
  %_6 = alloca i8, align 1
  %1 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>", align 4
  %2 = alloca i64, align 8
  %self = alloca %"core::result::Result<u32, jitter::TimerError>", align 4
  store i64 %0, i64* %2, align 8
  %3 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %self to i8*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %self to i8*
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = trunc i8 %6 to i1
  %_2 = zext i1 %7 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %self to %"core::result::Result<u32, jitter::TimerError>::Ok"*
  %9 = getelementptr inbounds %"core::result::Result<u32, jitter::TimerError>::Ok", %"core::result::Result<u32, jitter::TimerError>::Ok"* %8, i32 0, i32 1
  %v = load i32, i32* %9, align 4
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>"* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Continue"*
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Continue"* %10, i32 0, i32 1
  store i32 %v, i32* %11, align 4
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>"* %1 to i8*
  store i8 0, i8* %12, align 4
  br label %bb4

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %self to %"core::result::Result<u32, jitter::TimerError>::Err"*
  %14 = getelementptr inbounds %"core::result::Result<u32, jitter::TimerError>::Err", %"core::result::Result<u32, jitter::TimerError>::Err"* %13, i32 0, i32 1
  %e = load i8, i8* %14, align 1, !range !6
  store i8 %e, i8* %_6, align 1
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>"* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Break"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Break"* %15, i32 0, i32 1
  %17 = load i8, i8* %_6, align 1, !range !6
  store i8 %17, i8* %16, align 1
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>"* %1 to i8*
  store i8 1, i8* %18, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>"* %1 to i64*
  %20 = load i64, i64* %19, align 4
  ret i64 %20
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hda93480be4ab02ebE"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"* %6, i32 0, i32 1
  %v = load i64, i64* %7, align 8
  %8 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"* %8, i32 0, i32 1
  store i64 %v, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %_6 to %"core::alloc::layout::LayoutError"*
  %12 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break"*
  %13 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break"* %12, i32 0, i32 1
  %14 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %14, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !2
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20
}

; <std::path::Path as core::convert::AsRef<std::path::Path>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::path::Path"*, i64 } @"_ZN79_$LT$std..path..Path$u20$as$u20$core..convert..AsRef$LT$std..path..Path$GT$$GT$6as_ref17hdb0ba5bbdec46822E"(%"std::path::Path"* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %self.0, 0
  %1 = insertvalue { %"std::path::Path"*, i64 } %0, i64 %self.1, 1
  ret { %"std::path::Path"*, i64 } %1
}

; <core::num::wrapping::Wrapping<u64> as core::ops::bit::Not>::not
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN80_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Not$GT$3not17hbe2d2b17bd352003E"(i64 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_2 = xor i64 %self, -1
  store i64 %_2, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %self, i32 %other) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = add i32 %self, %other
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %1, i32* %0, align 4
  %2 = load i32, i32* %0, align 4
  ret i32 %2
}

; <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %self, i64 %other) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = add i64 %self, %other
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  ret i64 %2
}

; <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %self, i64 %other) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = sub i64 %self, %other
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  ret i64 %2
}

; <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %self, i32 %other) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_3 = xor i32 %self, %other
  store i32 %_3, i32* %0, align 4
  %1 = load i32, i32* %0, align 4
  ret i32 %1
}

; <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %self, i64 %other) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_3 = xor i64 %self, %other
  store i64 %_3, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h94f76cd94537a2efE"() unnamed_addr #0 {
start:
  %0 = alloca { i64*, i64 }, align 8
  %1 = bitcast { i64*, i64 }* %0 to {}**
  store {}* null, {}** %1, align 8
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64*, i64 } undef, i64* %3, 0
  %7 = insertvalue { i64*, i64 } %6, i64 %5, 1
  ret { i64*, i64 } %7
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hc4662f7347086ddfE"() unnamed_addr #0 {
start:
  %0 = alloca { i32*, i32 }, align 8
  %1 = bitcast { i32*, i32 }* %0 to {}**
  store {}* null, {}** %1, align 8
  %2 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i32*, i32 } undef, i32* %3, 0
  %7 = insertvalue { i32*, i32 } %6, i32 %5, 1
  ret { i32*, i32 } %7
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h13abcaf484ab4986E"({ i32, i32 }* align 4 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = alloca { i32, i32 }, align 4
  %_3 = bitcast { i32, i32 }* %self to i32*
  %_4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for i32>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17h6cf8f804da838081E"(i32* align 4 dereferenceable(4) %_3, i32* align 4 dereferenceable(4) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %1 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %1, align 4
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i32, i32 }* %self to i32*
; call core::clone::impls::<impl core::clone::Clone for i32>::clone
  %_6 = call i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17hb285fe5c8eb7fd15E"(i32* align 4 dereferenceable(4) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <i32 as core::iter::range::Step>::forward_unchecked
  %n = call i32 @"_ZN47_$LT$i32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h7d30b9a7f5e1d15cE"(i32 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i32, i32 }* %self to i32*
; call core::mem::replace
  %_8 = call i32 @_ZN4core3mem7replace17h488d4cd9ed53134aE(i32* align 4 dereferenceable(4) %_10, i32 %n)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = bitcast { i32, i32 }* %0 to %"core::option::Option<i32>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %2, i32 0, i32 1
  store i32 %_8, i32* %3, align 4
  %4 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %4, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %5 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4, !range !3
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = insertvalue { i32, i32 } undef, i32 %6, 0
  %10 = insertvalue { i32, i32 } %9, i32 %8, 1
  ret { i32, i32 } %10
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h44f80d17aa09077eE"({ i32, i32 }* align 4 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = alloca { i32, i32 }, align 4
  %_3 = bitcast { i32, i32 }* %self to i32*
  %_4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for u32>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u32$GT$2lt17h40d242692b074507E"(i32* align 4 dereferenceable(4) %_3, i32* align 4 dereferenceable(4) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %1 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %1, align 4
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i32, i32 }* %self to i32*
; call core::clone::impls::<impl core::clone::Clone for u32>::clone
  %_6 = call i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u32$GT$5clone17h3587b46fc781e72cE"(i32* align 4 dereferenceable(4) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <u32 as core::iter::range::Step>::forward_unchecked
  %n = call i32 @"_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h39ccfe585817a869E"(i32 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i32, i32 }* %self to i32*
; call core::mem::replace
  %_8 = call i32 @_ZN4core3mem7replace17h01d87491d5686e81E(i32* align 4 dereferenceable(4) %_10, i32 %n)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %2, i32 0, i32 1
  store i32 %_8, i32* %3, align 4
  %4 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %4, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %5 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4, !range !3
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = insertvalue { i32, i32 } undef, i32 %6, 0
  %10 = insertvalue { i32, i32 } %9, i32 %8, 1
  ret { i32, i32 } %10
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h5ebf2b132000bc1fE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for u64>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u64$GT$2lt17h292de48d55801049E"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*
; call core::clone::impls::<impl core::clone::Clone for u64>::clone
  %_6 = call i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u64$GT$5clone17h42031b8a38370fe3E"(i64* align 8 dereferenceable(8) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <u64 as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN47_$LT$u64$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hc13c950950996ec5E"(i64 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17h4ebbf55b48fc9928E(i64* align 8 dereferenceable(8) %_10, i64 %n)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = bitcast { i64, i64 }* %0 to %"core::option::Option<u64>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %2, i32 0, i32 1
  store i64 %_8, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %4, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !range !2
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h976cbf4a420c4a2eE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17ha4e6a45ca5f5a922E"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hd85e3c70ba69edeeE"(i64* align 8 dereferenceable(8) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17had4527f9e9cff9cfE"(i64 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17hfdaceda09d7a586eE(i64* align 8 dereferenceable(8) %_10, i64 %n)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %2, i32 0, i32 1
  store i64 %_8, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %4, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !range !2
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17hf51e6826ba568fd7E"({ i32*, i32* }* align 8 dereferenceable(16) %self, i64 %idx) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
  %1 = bitcast { i32*, i32* }* %self to i32**
  %_5 = load i32*, i32** %1, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h26fde890c6f8361dE"(i32* nonnull %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i32, i32* %_4, i64 %idx
  store i32* %2, i32** %0, align 8
  %_3.i = load i32*, i32** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32* %_3.i
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::all
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3all17h19affa43b04d41fdE"({ i32*, i32* }* align 8 dereferenceable(16) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i32*, align 8
  %_3 = alloca i32*, align 8
  %1 = alloca i8, align 1
  %f = alloca %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/xorshift.rs:80:34: 80:45]", align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 4 dereferenceable_or_null(4) i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h813e6f657494751eE"({ i32*, i32* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i32* %2, i32** %_3, align 8
  %3 = bitcast i32** %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_5, 1
  br i1 %6, label %bb3, label %bb7

bb9:                                              ; preds = %cleanup
  br label %bb10

cleanup:                                          ; preds = %bb3, %bb1
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb9

bb3:                                              ; preds = %bb2
  %x = load i32*, i32** %_3, align 8, !nonnull !5
  store i32* %x, i32** %_10, align 8
  %12 = load i32*, i32** %_10, align 8, !nonnull !5
; invoke <rand::prng::xorshift::XorShiftRng as rand::SeedableRng<[u32; 4]>>::from_seed::{{closure}}
  %_8 = invoke zeroext i1 @"_ZN103_$LT$rand..prng..xorshift..XorShiftRng$u20$as$u20$rand..SeedableRng$LT$$u5b$u32$u3b$$u20$4$u5d$$GT$$GT$9from_seed28_$u7b$$u7b$closure$u7d$$u7d$17h782743588e1475e3E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/xorshift.rs:80:34: 80:45]"* nonnull align 1 %f, i32* align 4 dereferenceable(4) %12)
          to label %bb4 unwind label %cleanup

bb7:                                              ; preds = %bb2
  store i8 1, i8* %1, align 1
  br label %bb8

bb8:                                              ; preds = %bb5, %bb7
  %13 = load i8, i8* %1, align 1, !range !4
  %14 = trunc i8 %13 to i1
  ret i1 %14

bb4:                                              ; preds = %bb3
  %_7 = xor i1 %_8, true
  br i1 %_7, label %bb5, label %bb6

bb10:                                             ; preds = %bb9
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb6:                                              ; preds = %bb4
  br label %bb1

bb5:                                              ; preds = %bb4
  store i8 0, i8* %1, align 1
  br label %bb8
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::all
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3all17hcb05de3989d4dbf0E"({ i32*, i32* }* align 8 dereferenceable(16) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i32*, align 8
  %_3 = alloca i32*, align 8
  %1 = alloca i8, align 1
  %f = alloca %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/xorshift.rs:69:34: 69:45]", align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 4 dereferenceable_or_null(4) i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h813e6f657494751eE"({ i32*, i32* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i32* %2, i32** %_3, align 8
  %3 = bitcast i32** %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_5, 1
  br i1 %6, label %bb3, label %bb7

bb9:                                              ; preds = %cleanup
  br label %bb10

cleanup:                                          ; preds = %bb3, %bb1
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb9

bb3:                                              ; preds = %bb2
  %x = load i32*, i32** %_3, align 8, !nonnull !5
  store i32* %x, i32** %_10, align 8
  %12 = load i32*, i32** %_10, align 8, !nonnull !5
; invoke <rand::prng::xorshift::XorShiftRng as rand::SeedableRng<[u32; 4]>>::reseed::{{closure}}
  %_8 = invoke zeroext i1 @"_ZN103_$LT$rand..prng..xorshift..XorShiftRng$u20$as$u20$rand..SeedableRng$LT$$u5b$u32$u3b$$u20$4$u5d$$GT$$GT$6reseed28_$u7b$$u7b$closure$u7d$$u7d$17h1d5b5fc5f994d481E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/xorshift.rs:69:34: 69:45]"* nonnull align 1 %f, i32* align 4 dereferenceable(4) %12)
          to label %bb4 unwind label %cleanup

bb7:                                              ; preds = %bb2
  store i8 1, i8* %1, align 1
  br label %bb8

bb8:                                              ; preds = %bb5, %bb7
  %13 = load i8, i8* %1, align 1, !range !4
  %14 = trunc i8 %13 to i1
  ret i1 %14

bb4:                                              ; preds = %bb3
  %_7 = xor i1 %_8, true
  br i1 %_7, label %bb5, label %bb6

bb10:                                             ; preds = %bb9
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb6:                                              ; preds = %bb4
  br label %bb1

bb5:                                              ; preds = %bb4
  store i8 0, i8* %1, align 1
  br label %bb8
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50b2180b0df75ba8E"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = alloca i64*, align 8
  %2 = alloca i64*, align 8
  %3 = bitcast { i64*, i64* }* %self to i64**
  %_6 = load i64*, i64** %3, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2506d5b918392d91E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hce10a86a85715a2bE"(i64* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 8, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %_11 = load i64*, i64** %5, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h60864eeee0ce3099E"(i64* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i64*, i64* }* %self to i64**
  %_15 = load i64*, i64** %6, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2506d5b918392d91E"(i64* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %_16 = load i64*, i64** %7, align 8
  %_12 = icmp eq i64* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %8 = bitcast { i64*, i64* }* %self to i64**
  %_12.i = load i64*, i64** %8, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2506d5b918392d91E"(i64* nonnull %_12.i)
  %9 = bitcast { i64*, i64* }* %self to i64**
  %_16.i = load i64*, i64** %9, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2506d5b918392d91E"(i64* nonnull %_16.i)
  %10 = getelementptr inbounds i64, i64* %_15.i, i64 1
  store i64* %10, i64** %0, align 8
  %_3.i.i = load i64*, i64** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4fba5780ce0d40ffE"(i64* %_3.i.i)
  %11 = bitcast { i64*, i64* }* %self to i64**
  store i64* %_13.i, i64** %11, align 8
  store i64* %old.i, i64** %1, align 8
  %12 = load i64*, i64** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %13 = bitcast i64** %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i64*, i64** %2, align 8
  ret i64* %14

bb13:                                             ; preds = %bb12
  store i64* %12, i64** %2, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h813e6f657494751eE"({ i32*, i32* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %3 = bitcast { i32*, i32* }* %self to i32**
  %_6 = load i32*, i32** %3, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h26fde890c6f8361dE"(i32* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd63d492a87fa49adE"(i32* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 4, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %_11 = load i32*, i32** %5, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h8225ab053c0a5dffE"(i32* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i32*, i32* }* %self to i32**
  %_15 = load i32*, i32** %6, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h26fde890c6f8361dE"(i32* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %_16 = load i32*, i32** %7, align 8
  %_12 = icmp eq i32* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %8 = bitcast { i32*, i32* }* %self to i32**
  %_12.i = load i32*, i32** %8, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h26fde890c6f8361dE"(i32* nonnull %_12.i)
  %9 = bitcast { i32*, i32* }* %self to i32**
  %_16.i = load i32*, i32** %9, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h26fde890c6f8361dE"(i32* nonnull %_16.i)
  %10 = getelementptr inbounds i32, i32* %_15.i, i64 1
  store i32* %10, i32** %0, align 8
  %_3.i.i = load i32*, i32** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hb051aeae42885484E"(i32* %_3.i.i)
  %11 = bitcast { i32*, i32* }* %self to i32**
  store i32* %_13.i, i32** %11, align 8
  store i32* %old.i, i32** %1, align 8
  %12 = load i32*, i32** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %13 = bitcast i32** %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i32*, i32** %2, align 8
  ret i32* %14

bb13:                                             ; preds = %bb12
  store i32* %12, i32** %2, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hab089d292ee7ec54E"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }*, align 8
  %1 = alloca { i64, i64 }*, align 8
  %2 = alloca i64*, align 8
  %3 = bitcast { i64*, i64* }* %self to i64**
  %_6 = load i64*, i64** %3, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call { i64, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha4af27f2168e3f77E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h3c949c69424c6aa2E"({ i64, i64 }* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 16, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %6 = bitcast i64** %5 to { i64, i64 }**
  %_11 = load { i64, i64 }*, { i64, i64 }** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h61c0564b550d8e6aE"({ i64, i64 }* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %7 = bitcast { i64*, i64* }* %self to i64**
  %_15 = load i64*, i64** %7, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call { i64, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha4af27f2168e3f77E"(i64* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %9 = bitcast i64** %8 to { i64, i64 }**
  %_16 = load { i64, i64 }*, { i64, i64 }** %9, align 8
  %_12 = icmp eq { i64, i64 }* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %10 = bitcast { i64*, i64* }* %self to i64**
  %_12.i = load i64*, i64** %10, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call { i64, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha4af27f2168e3f77E"(i64* nonnull %_12.i)
  %11 = bitcast { i64*, i64* }* %self to i64**
  %_16.i = load i64*, i64** %11, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call { i64, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha4af27f2168e3f77E"(i64* nonnull %_16.i)
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15.i, i64 1
  store { i64, i64 }* %12, { i64, i64 }** %0, align 8
  %_3.i.i = load { i64, i64 }*, { i64, i64 }** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1846285b0f56f71fE"({ i64, i64 }* %_3.i.i)
  %13 = bitcast { i64*, i64* }* %self to i64**
  store i64* %_13.i, i64** %13, align 8
  store { i64, i64 }* %old.i, { i64, i64 }** %1, align 8
  %14 = load { i64, i64 }*, { i64, i64 }** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %15 = bitcast i64** %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %16 = load i64*, i64** %2, align 8
  ret i64* %16

bb13:                                             ; preds = %bb12
  %17 = bitcast i64** %2 to { i64, i64 }**
  store { i64, i64 }* %14, { i64, i64 }** %17, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfb879eeb940b12c5E"({ i32*, i32* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %3 = bitcast { i32*, i32* }* %self to i32**
  %_6 = load i32*, i32** %3, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h495551e4c8970982E"(i32* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1ee78556b7049d44E"(i32* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 4, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %_11 = load i32*, i32** %5, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hd626e8f43fc9aed8E"(i32* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i32*, i32* }* %self to i32**
  %_15 = load i32*, i32** %6, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h495551e4c8970982E"(i32* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %_16 = load i32*, i32** %7, align 8
  %_12 = icmp eq i32* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %8 = bitcast { i32*, i32* }* %self to i32**
  %_12.i = load i32*, i32** %8, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h495551e4c8970982E"(i32* nonnull %_12.i)
  %9 = bitcast { i32*, i32* }* %self to i32**
  %_16.i = load i32*, i32** %9, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h495551e4c8970982E"(i32* nonnull %_16.i)
  %10 = getelementptr inbounds i32, i32* %_15.i, i64 1
  store i32* %10, i32** %0, align 8
  %_3.i.i = load i32*, i32** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9dcd9a6bf9f45588E"(i32* %_3.i.i)
  %11 = bitcast { i32*, i32* }* %self to i32**
  store i32* %_13.i, i32** %11, align 8
  store i32* %old.i, i32** %1, align 8
  %12 = load i32*, i32** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %13 = bitcast i32** %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i32*, i32** %2, align 8
  ret i32* %14

bb13:                                             ; preds = %bb12
  store i32* %12, i32** %2, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h8a6f6de4cf96ec55E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, { i32*, i32* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %1 = alloca i64, align 8
  %_23 = alloca { i64, i64 }, align 8
  %exact = alloca i64, align 8
  %2 = bitcast { i32*, i32* }* %self to i32**
  %start1 = load i32*, i32** %2, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h26fde890c6f8361dE"(i32* nonnull %start1)
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = icmp eq i64 4, 0
  br i1 %3, label %bb3, label %bb6

bb3:                                              ; preds = %bb2
  %4 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %_10 = load i32*, i32** %4, align 8
  %_9 = ptrtoint i32* %_10 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_12 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h26fde890c6f8361dE"(i32* nonnull %start1)
  br label %bb4

bb6:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %_16 = load i32*, i32** %5, align 8
  %_15 = ptrtoint i32* %_16 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_18 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h26fde890c6f8361dE"(i32* nonnull %start1)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_17 = ptrtoint i32* %_18 to i64
  %6 = sub nuw i64 %_15, %_17
  store i64 %6, i64* %1, align 8
  %diff = load i64, i64* %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = udiv exact i64 %diff, 4
  store i64 %7, i64* %exact, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb10

bb10:                                             ; preds = %bb5, %bb9
  %_22 = load i64, i64* %exact, align 8
  %_24 = load i64, i64* %exact, align 8
  %8 = bitcast { i64, i64 }* %_23 to %"core::option::Option<usize>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %8, i32 0, i32 1
  store i64 %_24, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %_23 to i64*
  store i64 1, i64* %10, align 8
  %11 = bitcast { i64, { i64, i64 } }* %0 to i64*
  store i64 %_22, i64* %11, align 8
  %12 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_23, i32 0, i32 0
  %14 = load i64, i64* %13, align 8, !range !2
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_23, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  store i64 %16, i64* %18, align 8
  ret void

bb4:                                              ; preds = %bb3
  %_11 = ptrtoint i32* %_12 to i64
  %19 = sub i64 %_9, %_11
  store i64 %19, i64* %exact, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  br label %bb10
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get
; Function Attrs: nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h4ebac7f6baae0f7fE"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_6 = select i1 %2, i64 0, i64 1
  switch i64 %_6, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call std::process::abort
  call void @_ZN3std7process5abort17h2f11b1d32ad057eaE() #17
  unreachable

bb3:                                              ; preds = %start
  %a = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %_5.0 = bitcast { [0 x i8]*, i64 }* %a to {}*
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.d to [3 x i64]*), 1
  ret { {}*, [3 x i64]* } %4
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box
; Function Attrs: nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h6a1c9b962f42a283E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_4 = alloca { i8*, i64 }, align 8
  %data = alloca { {}*, [3 x i64]* }, align 8
  store i8 0, i8* %_14, align 1
; call core::option::Option<T>::take
  %2 = call { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17ha24243327f59db2fE"({ i8*, i64 }* align 8 dereferenceable(16) %self)
  store { i8*, i64 } %2, { i8*, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast { i8*, i64 }* %_4 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_6 = select i1 %5, i64 0, i64 1
  switch i64 %_6, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
; call std::process::abort
  call void @_ZN3std7process5abort17h2f11b1d32ad057eaE() #17
  unreachable

bb4:                                              ; preds = %bb1
  %6 = bitcast { i8*, i64 }* %_4 to { [0 x i8]*, i64 }*
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 0
  %a.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !5
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 1
  %a.1 = load i64, i64* %8, align 8
; invoke alloc::alloc::exchange_malloc
  %_4.i = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h5b6f12bd773a3bf4E(i64 16, i64 8)
          to label %"_ZN5alloc5boxed12Box$LT$T$GT$3new17h4ec537938341f22bE.exit" unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb4
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

"_ZN5alloc5boxed12Box$LT$T$GT$3new17h4ec537938341f22bE.exit": ; preds = %bb4
  %20 = bitcast i8* %_4.i to { [0 x i8]*, i64 }*
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0
  store [0 x i8]* %a.0, [0 x i8]** %21, align 8
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1
  store i64 %a.1, i64* %22, align 8
  br label %bb5

bb5:                                              ; preds = %"_ZN5alloc5boxed12Box$LT$T$GT$3new17h4ec537938341f22bE.exit"
  %23 = bitcast { [0 x i8]*, i64 }* %20 to {}*
  %24 = bitcast {}* %23 to i8*
  %_8.0 = bitcast i8* %24 to {}*
  store i8 1, i8* %_14, align 1
  %25 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0
  store {}* %_8.0, {}** %25, align 8
  %26 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1
  store [3 x i64]* bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.d to [3 x i64]*), [3 x i64]** %26, align 8
  store i8 0, i8* %_14, align 1
  %27 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0
  %_13.0 = load {}*, {}** %27, align 8, !nonnull !5
  %28 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1
  %_13.1 = load [3 x i64]*, [3 x i64]** %28, align 8, !nonnull !5
; invoke alloc::boxed::Box<T,A>::into_raw
  %29 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h031f35a13b9efaddE"({}* noalias nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) %_13.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_11.0 = extractvalue { {}*, [3 x i64]* } %29, 0
  %_11.1 = extractvalue { {}*, [3 x i64]* } %29, 1
  store i8 0, i8* %_14, align 1
  %30 = insertvalue { {}*, [3 x i64]* } undef, {}* %_11.0, 0
  %31 = insertvalue { {}*, [3 x i64]* } %30, [3 x i64]* %_11.1, 1
  ret { {}*, [3 x i64]* } %31

bb7:                                              ; preds = %cleanup
  %32 = load i8, i8* %_14, align 1, !range !4
  %33 = trunc i8 %32 to i1
  br i1 %33, label %bb9, label %bb8

cleanup:                                          ; preds = %bb5
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  %39 = bitcast { i8*, i32 }* %1 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = insertvalue { i8*, i32 } undef, i8* %40, 0
  %44 = insertvalue { i8*, i32 } %43, i32 %42, 1
  resume { i8*, i32 } %44

bb9:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17ha7a3cdea72d9c71cE"({ {}*, [3 x i64]* }* %data) #18
  br label %bb8
}

; <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %self, i64 %other) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %_6 = and i64 %other, 31
  %_5 = trunc i64 %_6 to i32
  %_4.i = and i32 %_5, 31
  %2 = shl i32 %self, %_4.i
  store i32 %2, i32* %0, align 4
  %3 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %3, i32* %1, align 4
  %4 = load i32, i32* %1, align 4
  ret i32 %4
}

; <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %self, i64 %other) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %_6 = and i64 %other, 31
  %_5 = trunc i64 %_6 to i32
  %_4.i = and i32 %_5, 31
  %2 = lshr i32 %self, %_4.i
  store i32 %2, i32* %0, align 4
  %3 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %3, i32* %1, align 4
  %4 = load i32, i32* %1, align 4
  ret i32 %4
}

; <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %self, i64 %other) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %_6 = and i64 %other, 63
  %_5 = trunc i64 %_6 to i32
  %_5.i = and i32 %_5, 63
  %_4.i = zext i32 %_5.i to i64
  %2 = shl i64 %self, %_4.i
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %3, i64* %1, align 8
  %4 = load i64, i64* %1, align 8
  ret i64 %4
}

; <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %self, i64 %other) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %_6 = and i64 %other, 63
  %_5 = trunc i64 %_6 to i32
  %_5.i = and i32 %_5, 63
  %_4.i = zext i32 %_5.i to i64
  %2 = lshr i64 %self, %_4.i
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %3, i64* %1, align 8
  %4 = load i64, i64* %1, align 8
  ret i64 %4
}

; <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h944bee99869e0288E"({ i32*, i32* }* align 8 dereferenceable(16) %self, i64 %idx) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
  %1 = bitcast { i32*, i32* }* %self to i32**
  %_8 = load i32*, i32** %1, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_7 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h495551e4c8970982E"(i32* nonnull %_8)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i32, i32* %_7, i64 %idx
  store i32* %2, i32** %0, align 8
  %_3.i = load i32*, i32** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32* %_3.i
}

; <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(8) i64* @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h639e37cde791d7cdE"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = alloca i64*, align 8
  %2 = alloca i64*, align 8
  %3 = bitcast { i64*, i64* }* %self to i64**
  %_6 = load i64*, i64** %3, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he05dfbd7c4e2b26fE"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h502364e24d5414a5E"(i64* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 8, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %_11 = load i64*, i64** %5, align 8
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h502364e24d5414a5E"(i64* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i64*, i64* }* %self to i64**
  %_15 = load i64*, i64** %6, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he05dfbd7c4e2b26fE"(i64* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %_17 = load i64*, i64** %7, align 8
  %_12 = icmp eq i64* %_14, %_17
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %8 = bitcast { i64*, i64* }* %self to i64**
  %_11.i = load i64*, i64** %8, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he05dfbd7c4e2b26fE"(i64* nonnull %_11.i)
  %9 = bitcast { i64*, i64* }* %self to i64**
  %_15.i = load i64*, i64** %9, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14.i = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17he05dfbd7c4e2b26fE"(i64* nonnull %_15.i)
  %10 = getelementptr inbounds i64, i64* %_14.i, i64 1
  store i64* %10, i64** %0, align 8
  %_3.i1.i = load i64*, i64** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_12.i = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h19137c7da6cc6bafE"(i64* %_3.i1.i)
  %11 = bitcast { i64*, i64* }* %self to i64**
  store i64* %_12.i, i64** %11, align 8
  store i64* %old.i, i64** %1, align 8
  %12 = load i64*, i64** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %13 = bitcast i64** %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i64*, i64** %2, align 8
  ret i64* %14

bb13:                                             ; preds = %bb12
  store i64* %12, i64** %2, align 8
  br label %bb14
}

; <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h890a95dd5d1d61a6E"({ i32*, i32* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %3 = bitcast { i32*, i32* }* %self to i32**
  %_6 = load i32*, i32** %3, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h495551e4c8970982E"(i32* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1ee78556b7049d44E"(i32* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 4, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %_11 = load i32*, i32** %5, align 8
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1ee78556b7049d44E"(i32* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i32*, i32* }* %self to i32**
  %_15 = load i32*, i32** %6, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h495551e4c8970982E"(i32* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %_17 = load i32*, i32** %7, align 8
  %_12 = icmp eq i32* %_14, %_17
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %8 = bitcast { i32*, i32* }* %self to i32**
  %_11.i = load i32*, i32** %8, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h495551e4c8970982E"(i32* nonnull %_11.i)
  %9 = bitcast { i32*, i32* }* %self to i32**
  %_15.i = load i32*, i32** %9, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14.i = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h495551e4c8970982E"(i32* nonnull %_15.i)
  %10 = getelementptr inbounds i32, i32* %_14.i, i64 1
  store i32* %10, i32** %0, align 8
  %_3.i1.i = load i32*, i32** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_12.i = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9dcd9a6bf9f45588E"(i32* %_3.i1.i)
  %11 = bitcast { i32*, i32* }* %self to i32**
  store i32* %_12.i, i32** %11, align 8
  store i32* %old.i, i32** %1, align 8
  %12 = load i32*, i32** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %13 = bitcast i32** %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i32*, i32** %2, align 8
  ret i32* %14

bb13:                                             ; preds = %bb12
  store i32* %12, i32** %2, align 8
  br label %bb14
}

; <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h9a66ad4d8638ed65E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, { i32*, i32* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %1 = alloca i64, align 8
  %_23 = alloca { i64, i64 }, align 8
  %exact = alloca i64, align 8
  %2 = bitcast { i32*, i32* }* %self to i32**
  %start1 = load i32*, i32** %2, align 8, !nonnull !5
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h495551e4c8970982E"(i32* nonnull %start1)
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = icmp eq i64 4, 0
  br i1 %3, label %bb3, label %bb6

bb3:                                              ; preds = %bb2
  %4 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %_10 = load i32*, i32** %4, align 8
  %_9 = ptrtoint i32* %_10 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_12 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h495551e4c8970982E"(i32* nonnull %start1)
  br label %bb4

bb6:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %_16 = load i32*, i32** %5, align 8
  %_15 = ptrtoint i32* %_16 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_18 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h495551e4c8970982E"(i32* nonnull %start1)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_17 = ptrtoint i32* %_18 to i64
  %6 = sub nuw i64 %_15, %_17
  store i64 %6, i64* %1, align 8
  %diff = load i64, i64* %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = udiv exact i64 %diff, 4
  store i64 %7, i64* %exact, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb10

bb10:                                             ; preds = %bb5, %bb9
  %_22 = load i64, i64* %exact, align 8
  %_24 = load i64, i64* %exact, align 8
  %8 = bitcast { i64, i64 }* %_23 to %"core::option::Option<usize>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %8, i32 0, i32 1
  store i64 %_24, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %_23 to i64*
  store i64 1, i64* %10, align 8
  %11 = bitcast { i64, { i64, i64 } }* %0 to i64*
  store i64 %_22, i64* %11, align 8
  %12 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_23, i32 0, i32 0
  %14 = load i64, i64* %13, align 8, !range !2
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_23, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  store i64 %16, i64* %18, align 8
  ret void

bb4:                                              ; preds = %bb3
  %_11 = ptrtoint i32* %_12 to i64
  %19 = sub i64 %_9, %_11
  store i64 %19, i64* %exact, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  br label %bb10
}

; <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h7399232feeddf285E"({}* nonnull align 1 %reference.0, [3 x i64]* align 8 dereferenceable(24) %reference.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64* }, align 8
  %1 = bitcast { i8*, i64* }* %0 to { {}*, [3 x i64]* }*
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 0
  store {}* %reference.0, {}** %2, align 8
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 1
  store [3 x i64]* %reference.1, [3 x i64]** %3, align 8
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !5
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !5
  %8 = insertvalue { i8*, i64* } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64* } %8, i64* %7, 1
  ret { i8*, i64* } %9
}

; <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h7fe2dfba62a63dfdE"([0 x i32]* nonnull align 4 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %slice.0, 0
  %2 = insertvalue { [0 x i32]*, i64 } %1, i64 %slice.1, 1
  ret { [0 x i32]*, i64 } %2
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hafe4edcf5031e38eE"(%"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* align 8 dereferenceable(4168) %reference) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"**
  store %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %reference, %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !5
  ret i64* %2
}

; rand::distributions::gamma::Gamma::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4rand13distributions5gamma5Gamma3new17h673b51f3d3b965e2E(%"distributions::gamma::Gamma"* noalias nocapture sret(%"distributions::gamma::Gamma") dereferenceable(40) %0, double %shape, double %scale) unnamed_addr #0 {
start:
  %_23 = alloca %"distributions::gamma::GammaRepr", align 8
  %_20 = alloca %"distributions::gamma::GammaLargeShape", align 8
  %_17 = alloca %"distributions::gamma::GammaSmallShape", align 8
  %repr = alloca %"distributions::gamma::GammaRepr", align 8
  %_4 = fcmp ogt double %shape, 0.000000e+00
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = fcmp ogt double %scale, 0.000000e+00
  %_6 = xor i1 %_7, true
  br i1 %_6, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17hb7befd5e474a8c7bE([0 x i8]* nonnull align 1 bitcast (<{ [33 x i8] }>* @alloc1205 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1207 to %"core::panic::location::Location"*)) #17
  unreachable

bb4:                                              ; preds = %bb2
  %_10 = fcmp oeq double %shape, 1.000000e+00
  br i1 %_10, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17hb7befd5e474a8c7bE([0 x i8]* nonnull align 1 bitcast (<{ [33 x i8] }>* @alloc1208 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1210 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb4
  %_15 = fcmp olt double %shape, 1.000000e+00
  br i1 %_15, label %bb8, label %bb9

bb5:                                              ; preds = %bb4
  %_13 = fdiv double 1.000000e+00, %scale
; call rand::distributions::exponential::Exp::new
  %_12 = call double @_ZN4rand13distributions11exponential3Exp3new17h79a16677040558ddE(double %_13)
  br label %bb7

bb7:                                              ; preds = %bb5
  %1 = bitcast %"distributions::gamma::GammaRepr"* %repr to %"distributions::gamma::GammaRepr::One"*
  %2 = getelementptr inbounds %"distributions::gamma::GammaRepr::One", %"distributions::gamma::GammaRepr::One"* %1, i32 0, i32 1
  store double %_12, double* %2, align 8
  %3 = bitcast %"distributions::gamma::GammaRepr"* %repr to i64*
  store i64 1, i64* %3, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10, %bb7
  %4 = bitcast %"distributions::gamma::GammaRepr"* %_23 to i8*
  %5 = bitcast %"distributions::gamma::GammaRepr"* %repr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false)
  %6 = bitcast %"distributions::gamma::Gamma"* %0 to %"distributions::gamma::GammaRepr"*
  %7 = bitcast %"distributions::gamma::GammaRepr"* %6 to i8*
  %8 = bitcast %"distributions::gamma::GammaRepr"* %_23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 40, i1 false)
  ret void

bb9:                                              ; preds = %bb6
; call rand::distributions::gamma::GammaLargeShape::new_raw
  call void @_ZN4rand13distributions5gamma15GammaLargeShape7new_raw17h91361b8f43932119E(%"distributions::gamma::GammaLargeShape"* noalias nocapture sret(%"distributions::gamma::GammaLargeShape") dereferenceable(24) %_20, double %shape, double %scale)
  br label %bb11

bb8:                                              ; preds = %bb6
; call rand::distributions::gamma::GammaSmallShape::new_raw
  call void @_ZN4rand13distributions5gamma15GammaSmallShape7new_raw17hd3b616012817e671E(%"distributions::gamma::GammaSmallShape"* noalias nocapture sret(%"distributions::gamma::GammaSmallShape") dereferenceable(32) %_17, double %shape, double %scale)
  br label %bb10

bb10:                                             ; preds = %bb8
  %9 = bitcast %"distributions::gamma::GammaRepr"* %repr to %"distributions::gamma::GammaRepr::Small"*
  %10 = getelementptr inbounds %"distributions::gamma::GammaRepr::Small", %"distributions::gamma::GammaRepr::Small"* %9, i32 0, i32 1
  %11 = bitcast %"distributions::gamma::GammaSmallShape"* %10 to i8*
  %12 = bitcast %"distributions::gamma::GammaSmallShape"* %_17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false)
  %13 = bitcast %"distributions::gamma::GammaRepr"* %repr to i64*
  store i64 2, i64* %13, align 8
  br label %bb12

bb11:                                             ; preds = %bb9
  %14 = bitcast %"distributions::gamma::GammaRepr"* %repr to %"distributions::gamma::GammaRepr::Large"*
  %15 = getelementptr inbounds %"distributions::gamma::GammaRepr::Large", %"distributions::gamma::GammaRepr::Large"* %14, i32 0, i32 1
  %16 = bitcast %"distributions::gamma::GammaLargeShape"* %15 to i8*
  %17 = bitcast %"distributions::gamma::GammaLargeShape"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  %18 = bitcast %"distributions::gamma::GammaRepr"* %repr to i64*
  store i64 0, i64* %18, align 8
  br label %bb12
}

; rand::distributions::gamma::GammaSmallShape::new_raw
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand13distributions5gamma15GammaSmallShape7new_raw17hd3b616012817e671E(%"distributions::gamma::GammaSmallShape"* noalias nocapture sret(%"distributions::gamma::GammaSmallShape") dereferenceable(32) %0, double %shape, double %scale) unnamed_addr #1 {
start:
  %_5 = alloca %"distributions::gamma::GammaLargeShape", align 8
  %_3 = fdiv double 1.000000e+00, %shape
  %_6 = fadd double %shape, 1.000000e+00
; call rand::distributions::gamma::GammaLargeShape::new_raw
  call void @_ZN4rand13distributions5gamma15GammaLargeShape7new_raw17h91361b8f43932119E(%"distributions::gamma::GammaLargeShape"* noalias nocapture sret(%"distributions::gamma::GammaLargeShape") dereferenceable(24) %_5, double %_6, double %scale)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"distributions::gamma::GammaSmallShape"* %0 to double*
  store double %_3, double* %1, align 8
  %2 = getelementptr inbounds %"distributions::gamma::GammaSmallShape", %"distributions::gamma::GammaSmallShape"* %0, i32 0, i32 1
  %3 = bitcast %"distributions::gamma::GammaLargeShape"* %2 to i8*
  %4 = bitcast %"distributions::gamma::GammaLargeShape"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  ret void
}

; rand::distributions::gamma::GammaLargeShape::new_raw
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand13distributions5gamma15GammaLargeShape7new_raw17h91361b8f43932119E(%"distributions::gamma::GammaLargeShape"* noalias nocapture sret(%"distributions::gamma::GammaLargeShape") dereferenceable(24) %0, double %shape, double %scale) unnamed_addr #1 {
start:
  %d = fsub double %shape, 0x3FD5555555555555
  %_9 = fmul double 9.000000e+00, %d
; call std::f64::<impl f64>::sqrt
  %_8 = call double @"_ZN3std3f6421_$LT$impl$u20$f64$GT$4sqrt17h33fc06130ec617eaE"(double %_9)
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = fdiv double 1.000000e+00, %_8
  %1 = bitcast %"distributions::gamma::GammaLargeShape"* %0 to double*
  store double %scale, double* %1, align 8
  %2 = getelementptr inbounds %"distributions::gamma::GammaLargeShape", %"distributions::gamma::GammaLargeShape"* %0, i32 0, i32 1
  store double %_7, double* %2, align 8
  %3 = getelementptr inbounds %"distributions::gamma::GammaLargeShape", %"distributions::gamma::GammaLargeShape"* %0, i32 0, i32 2
  store double %d, double* %3, align 8
  ret void
}

; rand::distributions::gamma::ChiSquared::new
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand13distributions5gamma10ChiSquared3new17hc3a24c090bdca35eE(%"distributions::gamma::ChiSquared"* noalias nocapture sret(%"distributions::gamma::ChiSquared") dereferenceable(40) %0, double %k) unnamed_addr #1 {
start:
  %_11 = alloca %"distributions::gamma::ChiSquaredRepr", align 8
  %_8 = alloca %"distributions::gamma::Gamma", align 8
  %repr = alloca %"distributions::gamma::ChiSquaredRepr", align 8
  %_3 = fcmp oeq double %k, 1.000000e+00
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_6 = fcmp ogt double %k, 0.000000e+00
  %_5 = xor i1 %_6, true
  br i1 %_5, label %bb3, label %bb4

bb1:                                              ; preds = %start
  %1 = bitcast %"distributions::gamma::ChiSquaredRepr"* %repr to i64*
  store i64 3, i64* %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %2 = bitcast %"distributions::gamma::ChiSquaredRepr"* %_11 to i8*
  %3 = bitcast %"distributions::gamma::ChiSquaredRepr"* %repr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 40, i1 false)
  %4 = bitcast %"distributions::gamma::ChiSquared"* %0 to %"distributions::gamma::ChiSquaredRepr"*
  %5 = bitcast %"distributions::gamma::ChiSquaredRepr"* %4 to i8*
  %6 = bitcast %"distributions::gamma::ChiSquaredRepr"* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false)
  ret void

bb4:                                              ; preds = %bb2
  %_9 = fmul double 5.000000e-01, %k
; call rand::distributions::gamma::Gamma::new
  call void @_ZN4rand13distributions5gamma5Gamma3new17h673b51f3d3b965e2E(%"distributions::gamma::Gamma"* noalias nocapture sret(%"distributions::gamma::Gamma") dereferenceable(40) %_8, double %_9, double 2.000000e+00)
  br label %bb5

bb3:                                              ; preds = %bb2
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17hb7befd5e474a8c7bE([0 x i8]* nonnull align 1 bitcast (<{ [35 x i8] }>* @alloc1211 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1213 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb4
  %7 = bitcast %"distributions::gamma::ChiSquaredRepr"* %repr to %"distributions::gamma::ChiSquaredRepr::DoFAnythingElse"*
  %8 = bitcast %"distributions::gamma::ChiSquaredRepr::DoFAnythingElse"* %7 to %"distributions::gamma::Gamma"*
  %9 = bitcast %"distributions::gamma::Gamma"* %8 to i8*
  %10 = bitcast %"distributions::gamma::Gamma"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 40, i1 false)
  br label %bb6
}

; rand::distributions::gamma::FisherF::new
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand13distributions5gamma7FisherF3new17h3981a8022d4e6961E(%"distributions::gamma::FisherF"* noalias nocapture sret(%"distributions::gamma::FisherF") dereferenceable(88) %0, double %m, double %n) unnamed_addr #1 {
start:
  %_11 = alloca %"distributions::gamma::ChiSquared", align 8
  %_9 = alloca %"distributions::gamma::ChiSquared", align 8
  %_4 = fcmp ogt double %m, 0.000000e+00
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = fcmp ogt double %n, 0.000000e+00
  %_6 = xor i1 %_7, true
  br i1 %_6, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17hb7befd5e474a8c7bE([0 x i8]* nonnull align 1 bitcast (<{ [32 x i8] }>* @alloc1214 to [0 x i8]*), i64 32, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1216 to %"core::panic::location::Location"*)) #17
  unreachable

bb4:                                              ; preds = %bb2
; call rand::distributions::gamma::ChiSquared::new
  call void @_ZN4rand13distributions5gamma10ChiSquared3new17hc3a24c090bdca35eE(%"distributions::gamma::ChiSquared"* noalias nocapture sret(%"distributions::gamma::ChiSquared") dereferenceable(40) %_9, double %m)
  br label %bb5

bb3:                                              ; preds = %bb2
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17hb7befd5e474a8c7bE([0 x i8]* nonnull align 1 bitcast (<{ [32 x i8] }>* @alloc1217 to [0 x i8]*), i64 32, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1219 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb4
; call rand::distributions::gamma::ChiSquared::new
  call void @_ZN4rand13distributions5gamma10ChiSquared3new17hc3a24c090bdca35eE(%"distributions::gamma::ChiSquared"* noalias nocapture sret(%"distributions::gamma::ChiSquared") dereferenceable(40) %_11, double %n)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_13 = fdiv double %n, %m
  %1 = bitcast %"distributions::gamma::FisherF"* %0 to %"distributions::gamma::ChiSquared"*
  %2 = bitcast %"distributions::gamma::ChiSquared"* %1 to i8*
  %3 = bitcast %"distributions::gamma::ChiSquared"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 40, i1 false)
  %4 = getelementptr inbounds %"distributions::gamma::FisherF", %"distributions::gamma::FisherF"* %0, i32 0, i32 1
  %5 = bitcast %"distributions::gamma::ChiSquared"* %4 to i8*
  %6 = bitcast %"distributions::gamma::ChiSquared"* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false)
  %7 = getelementptr inbounds %"distributions::gamma::FisherF", %"distributions::gamma::FisherF"* %0, i32 0, i32 2
  store double %_13, double* %7, align 8
  ret void
}

; rand::distributions::gamma::StudentT::new
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand13distributions5gamma8StudentT3new17hae8e460b375d22dcE(%"distributions::gamma::StudentT"* noalias nocapture sret(%"distributions::gamma::StudentT") dereferenceable(48) %0, double %n) unnamed_addr #1 {
start:
  %_5 = alloca %"distributions::gamma::ChiSquared", align 8
  %_3 = fcmp ogt double %n, 0.000000e+00
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call rand::distributions::gamma::ChiSquared::new
  call void @_ZN4rand13distributions5gamma10ChiSquared3new17hc3a24c090bdca35eE(%"distributions::gamma::ChiSquared"* noalias nocapture sret(%"distributions::gamma::ChiSquared") dereferenceable(40) %_5, double %n)
  br label %bb3

bb1:                                              ; preds = %start
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17hb7befd5e474a8c7bE([0 x i8]* nonnull align 1 bitcast (<{ [34 x i8] }>* @alloc1220 to [0 x i8]*), i64 34, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1222 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %bb2
  %1 = bitcast %"distributions::gamma::StudentT"* %0 to %"distributions::gamma::ChiSquared"*
  %2 = bitcast %"distributions::gamma::ChiSquared"* %1 to i8*
  %3 = bitcast %"distributions::gamma::ChiSquared"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 40, i1 false)
  %4 = getelementptr inbounds %"distributions::gamma::StudentT", %"distributions::gamma::StudentT"* %0, i32 0, i32 1
  store double %n, double* %4, align 8
  ret void
}

; rand::distributions::exponential::Exp::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @_ZN4rand13distributions11exponential3Exp3new17h79a16677040558ddE(double %lambda) unnamed_addr #0 {
start:
  %0 = alloca double, align 8
  %_3 = fcmp ogt double %lambda, 0.000000e+00
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_5 = fdiv double 1.000000e+00, %lambda
  store double %_5, double* %0, align 8
  %1 = load double, double* %0, align 8
  ret double %1

bb1:                                              ; preds = %start
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17hb7befd5e474a8c7bE([0 x i8]* nonnull align 1 bitcast (<{ [34 x i8] }>* @alloc1223 to [0 x i8]*), i64 34, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1225 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <rand::jitter::JitterRng as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN60_$LT$rand..jitter..JitterRng$u20$as$u20$core..fmt..Debug$GT$3fmt17hd57dde532356321cE"(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h039a7a01fe84f5c0E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc669 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc909 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_fmt
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; rand::jitter::TimerError::description
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4rand6jitter10TimerError11description17h1ad81bf1df66aa59E(i8* align 1 dereferenceable(1) %self) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = load i8, i8* %self, align 1, !range !6
  %_2 = zext i8 %1 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [18 x i8] }>* @alloc1233 to [0 x i8]*), [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 18, i64* %3, align 8
  br label %bb8

bb4:                                              ; preds = %start
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [12 x i8] }>* @alloc1232 to [0 x i8]*), [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 12, i64* %5, align 8
  br label %bb8

bb5:                                              ; preds = %start
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [19 x i8] }>* @alloc1231 to [0 x i8]*), [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 19, i64* %7, align 8
  br label %bb8

bb6:                                              ; preds = %start
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [31 x i8] }>* @alloc1230 to [0 x i8]*), [0 x i8]** %8, align 8
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 31, i64* %9, align 8
  br label %bb8

bb7:                                              ; preds = %start
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [22 x i8] }>* @alloc1229 to [0 x i8]*), [0 x i8]** %10, align 8
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 22, i64* %11, align 8
  br label %bb8

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc1226 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1228 to %"core::panic::location::Location"*)) #17
  unreachable

bb8:                                              ; preds = %bb3, %bb4, %bb5, %bb6, %bb7
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %13 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !5
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %17 = insertvalue { [0 x i8]*, i64 } %16, i64 %15, 1
  ret { [0 x i8]*, i64 } %17
}

; <rand::jitter::TimerError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN63_$LT$rand..jitter..TimerError$u20$as$u20$core..fmt..Display$GT$3fmt17h9e462da4aef5ef35E"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_14 = alloca { [0 x i8]*, i64 }, align 8
  %_12 = alloca i64*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
; call rand::jitter::TimerError::description
  %0 = call { [0 x i8]*, i64 } @_ZN4rand6jitter10TimerError11description17h1ad81bf1df66aa59E(i8* align 1 dereferenceable(1) %self)
  store { [0 x i8]*, i64 } %0, { [0 x i8]*, i64 }* %_14, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast i64** %_12 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %_14, { [0 x i8]*, i64 }** %1, align 8
  %_args = load i64*, i64** %_12, align 8, !nonnull !5
  %_18 = bitcast i64* %_args to { [0 x i8]*, i64 }*
; call core::fmt::ArgumentV1::new
  %2 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h84fd5bb6b29aac44E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_18, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17he4e954f54b698fe6E")
  %_17.0 = extractvalue { i8*, i64* } %2, 0
  %_17.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_17.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_17.1, i64** %5, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h039a7a01fe84f5c0E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc675 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::fmt::Formatter::write_fmt
  %6 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i1 %6
}

; <rand::jitter::TimerError as std::error::Error>::description
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN62_$LT$rand..jitter..TimerError$u20$as$u20$std..error..Error$GT$11description17ha3a264c16109c36bE"(i8* align 1 dereferenceable(1) %self) unnamed_addr #1 {
start:
; call rand::jitter::TimerError::description
  %0 = call { [0 x i8]*, i64 } @_ZN4rand6jitter10TimerError11description17h1ad81bf1df66aa59E(i8* align 1 dereferenceable(1) %self)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; rand::jitter::JitterRng::new
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand6jitter9JitterRng3new17h49cecfae9e4a65c5E(%"core::result::Result<jitter::JitterRng, jitter::TimerError>"* noalias nocapture sret(%"core::result::Result<jitter::JitterRng, jitter::TimerError>") dereferenceable(2120) %0) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %_26 = alloca %"jitter::JitterRng", align 8
  %_22 = alloca i8, align 1
  %_11 = alloca %"core::result::Result<u32, jitter::TimerError>", align 4
  %_10 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>", align 4
  %_7 = alloca i8, align 1
  %rounds = alloca i32, align 4
  %ec = alloca %"jitter::JitterRng", align 8
; call rand::jitter::JitterRng::new_with_timer
  call void @_ZN4rand6jitter9JitterRng14new_with_timer17hc73bea60141f5d88E(%"jitter::JitterRng"* noalias nocapture sret(%"jitter::JitterRng") dereferenceable(2112) %ec, i64 ()* nonnull @_ZN4rand6jitter8platform10get_nstime17h92074073c2d69eb1E)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %3 = load i8, i8* %_7, align 1, !range !8
; call core::sync::atomic::AtomicUsize::load
  %_4 = call i64 @_ZN4core4sync6atomic11AtomicUsize4load17h91e62b5f3fc5b9b3E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN4rand6jitter13JITTER_ROUNDS17hf298d2a202458bf3E to %"core::sync::atomic::AtomicUsize"*), i8 %3)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = trunc i64 %_4 to i32
  store i32 %4, i32* %rounds, align 4
  %_8 = load i32, i32* %rounds, align 4
  %5 = icmp eq i32 %_8, 0
  br i1 %5, label %bb3, label %bb9

bb3:                                              ; preds = %bb2
; call rand::jitter::JitterRng::test_timer
  %6 = call i64 @_ZN4rand6jitter9JitterRng10test_timer17h1813cfc230858f7eE(%"jitter::JitterRng"* align 8 dereferenceable(2112) %ec)
  store i64 %6, i64* %2, align 8
  %7 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %_11 to i8*
  %8 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 8, i1 false)
  br label %bb4

bb9:                                              ; preds = %bb6, %bb2
  %_25 = load i32, i32* %rounds, align 4
; call rand::jitter::JitterRng::set_rounds
  call void @_ZN4rand6jitter9JitterRng10set_rounds17h1fd75c9961685460E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %ec, i32 %_25)
  br label %bb10

bb4:                                              ; preds = %bb3
  %9 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %_11 to i64*
  %10 = load i64, i64* %9, align 4
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %11 = call i64 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hbc8ca2db144de98dE"(i64 %10)
  store i64 %11, i64* %1, align 8
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>"* %_10 to i8*
  %13 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 8, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>"* %_10 to i8*
  %15 = load i8, i8* %14, align 4, !range !4
  %16 = trunc i8 %15 to i1
  %_13 = zext i1 %16 to i64
  switch i64 %_13, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>"* %_10 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Continue"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Continue"* %17, i32 0, i32 1
  %val = load i32, i32* %18, align 4
  store i32 %val, i32* %rounds, align 4
  %_21 = load i32, i32* %rounds, align 4
  %_20 = zext i32 %_21 to i64
  store i8 0, i8* %_22, align 1
  %19 = load i8, i8* %_22, align 1, !range !8
; call core::sync::atomic::AtomicUsize::store
  call void @_ZN4core4sync6atomic11AtomicUsize5store17h2aaadb176ef94b91E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN4rand6jitter13JITTER_ROUNDS17hf298d2a202458bf3E to %"core::sync::atomic::AtomicUsize"*), i64 %_20, i8 %19)
  br label %bb9

bb8:                                              ; preds = %bb5
  %20 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>"* %_10 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Break"*
  %21 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, jitter::TimerError>, u32>::Break"* %20, i32 0, i32 1
  %residual = load i8, i8* %21, align 1, !range !6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc5f0a9159f59021aE"(%"core::result::Result<jitter::JitterRng, jitter::TimerError>"* noalias nocapture sret(%"core::result::Result<jitter::JitterRng, jitter::TimerError>") dereferenceable(2120) %0, i8 %residual, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1235 to %"core::panic::location::Location"*))
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  ret void

bb10:                                             ; preds = %bb9
  %22 = bitcast %"jitter::JitterRng"* %_26 to i8*
  %23 = bitcast %"jitter::JitterRng"* %ec to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 2112, i1 false)
  %24 = bitcast %"core::result::Result<jitter::JitterRng, jitter::TimerError>"* %0 to %"core::result::Result<jitter::JitterRng, jitter::TimerError>::Ok"*
  %25 = getelementptr inbounds %"core::result::Result<jitter::JitterRng, jitter::TimerError>::Ok", %"core::result::Result<jitter::JitterRng, jitter::TimerError>::Ok"* %24, i32 0, i32 1
  %26 = bitcast %"jitter::JitterRng"* %25 to i8*
  %27 = bitcast %"jitter::JitterRng"* %_26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 2112, i1 false)
  %28 = bitcast %"core::result::Result<jitter::JitterRng, jitter::TimerError>"* %0 to i8*
  store i8 0, i8* %28, align 8
  br label %bb11
}

; rand::jitter::JitterRng::new_with_timer
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand6jitter9JitterRng14new_with_timer17hc73bea60141f5d88E(%"jitter::JitterRng"* noalias nocapture sret(%"jitter::JitterRng") dereferenceable(2112) %ec, i64 ()* nonnull %timer) unnamed_addr #1 {
start:
  %_4 = alloca { i32, i32 }, align 4
  %_3 = alloca [2048 x i8], align 1
  %0 = getelementptr inbounds [2048 x i8], [2048 x i8]* %_3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 2048, i1 false)
  %1 = bitcast { i32, i32 }* %_4 to i32*
  store i32 0, i32* %1, align 4
  %2 = bitcast %"jitter::JitterRng"* %ec to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %ec, i32 0, i32 6
  store i32 64, i32* %3, align 8
  %4 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %ec, i32 0, i32 1
  store i64 ()* %timer, i64 ()** %4, align 8
  %5 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %ec, i32 0, i32 2
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %ec, i32 0, i32 3
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %ec, i32 0, i32 4
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %ec, i32 0, i32 5
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %ec, i32 0, i32 8
  %10 = bitcast [2048 x i8]* %9 to i8*
  %11 = bitcast [2048 x i8]* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 1 %11, i64 2048, i1 false)
  %12 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %ec, i32 0, i32 7
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_4, i32 0, i32 0
  %14 = load i32, i32* %13, align 4, !range !3
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_4, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %12, i32 0, i32 0
  store i32 %14, i32* %17, align 4
  %18 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %12, i32 0, i32 1
  store i32 %16, i32* %18, align 4
  %_5 = call i64 %timer()
  br label %bb1

bb1:                                              ; preds = %start
  %19 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %ec, i32 0, i32 2
  store i64 %_5, i64* %19, align 8
; call rand::jitter::JitterRng::gen_entropy
  %_7 = call i64 @_ZN4rand6jitter9JitterRng11gen_entropy17h7d6707cefdeec75eE(%"jitter::JitterRng"* align 8 dereferenceable(2112) %ec)
  br label %bb2

bb2:                                              ; preds = %bb1
  %20 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %ec, i32 0, i32 8
  %21 = getelementptr inbounds [2048 x i8], [2048 x i8]* %20, i64 0, i64 0
  %_10 = load i8, i8* %21, align 4
; call rand::jitter::black_box
  %_9 = call i8 @_ZN4rand6jitter9black_box17he12a33ce653eafddE(i8 %_10)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; rand::jitter::JitterRng::set_rounds
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand6jitter9JitterRng10set_rounds17h1fd75c9961685460E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i32 %rounds) unnamed_addr #1 {
start:
  %_4 = icmp ugt i32 %rounds, 0
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 6
  store i32 %rounds, i32* %0, align 8
  ret void

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [28 x i8] }>* @alloc1236 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1238 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::jitter::JitterRng::random_loop_cnt
; Function Attrs: noinline nonlazybind uwtable
define internal i32 @_ZN4rand6jitter9JitterRng15random_loop_cnt17h26f0a5c3fd5ef472E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i32 %n_bits) unnamed_addr #3 {
start:
  %_24 = alloca { i32, i32 }, align 4
  %iter = alloca { i32, i32 }, align 4
  %_21 = alloca { i32, i32 }, align 4
  %time = alloca i64, align 8
  %rounds = alloca i64, align 8
  store i64 0, i64* %rounds, align 8
  %0 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 1
  %_5 = load i64 ()*, i64 ()** %0, align 8, !nonnull !5
  %1 = call i64 %_5()
  store i64 %1, i64* %time, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"jitter::JitterRng"* %self to i64*
  %_6 = load i64, i64* %2, align 8
  %3 = load i64, i64* %time, align 8
  %4 = xor i64 %3, %_6
  store i64 %4, i64* %time, align 8
  %5 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 64, i32 %n_bits)
  %_11.0 = extractvalue { i32, i1 } %5, 0
  %_11.1 = extractvalue { i32, i1 } %5, 1
  %6 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false)
  br i1 %6, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %7 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %_11.0, i32 1)
  %_12.0 = extractvalue { i32, i1 } %7, 0
  %_12.1 = extractvalue { i32, i1 } %7, 1
  %8 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false)
  br i1 %8, label %panic1, label %bb3

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1240 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %bb2
  %_14 = icmp eq i32 %n_bits, 0
  %9 = call i1 @llvm.expect.i1(i1 %_14, i1 false)
  br i1 %9, label %panic2, label %bb4

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.f to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1242 to %"core::panic::location::Location"*)) #17
  unreachable

bb4:                                              ; preds = %bb3
  %folds = udiv i32 %_12.0, %n_bits
  %10 = and i32 %n_bits, -64
  %_18.1 = icmp ne i32 %10, 0
  %11 = zext i32 %n_bits to i64
  %12 = and i64 %11, 63
  %_18.0 = shl i64 1, %12
  %13 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false)
  br i1 %13, label %panic3, label %bb5

panic2:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.a to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1242 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb4
  %14 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_18.0, i64 1)
  %_19.0 = extractvalue { i64, i1 } %14, 0
  %_19.1 = extractvalue { i64, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false)
  br i1 %15, label %panic4, label %bb6

panic3:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.g to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1244 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb5
  %16 = bitcast { i32, i32 }* %_21 to i32*
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_21, i32 0, i32 1
  store i32 %folds, i32* %17, align 4
  %18 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_21, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_21, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %22 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4056f9a8e2ed9597E"(i32 %19, i32 %21)
  %_20.0 = extractvalue { i32, i32 } %22, 0
  %_20.1 = extractvalue { i32, i32 } %22, 1
  br label %bb7

panic4:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.f to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1244 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %bb6
  %23 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 0
  store i32 %_20.0, i32* %23, align 4
  %24 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 1
  store i32 %_20.1, i32* %24, align 4
  br label %bb8

bb8:                                              ; preds = %bb13, %bb7
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %25 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hb9cffb0a5166f718E"({ i32, i32 }* align 4 dereferenceable(8) %iter)
  store { i32, i32 } %25, { i32, i32 }* %_24, align 4
  br label %bb9

bb9:                                              ; preds = %bb8
  %26 = bitcast { i32, i32 }* %_24 to i32*
  %27 = load i32, i32* %26, align 4, !range !3
  %_27 = zext i32 %27 to i64
  switch i64 %_27, label %bb11 [
    i64 0, label %bb12
    i64 1, label %bb10
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb12:                                             ; preds = %bb9
  %_34 = load i64, i64* %rounds, align 8
  %28 = trunc i64 %_34 to i32
  ret i32 %28

bb10:                                             ; preds = %bb9
  %_29 = load i64, i64* %time, align 8
  %_28 = and i64 %_29, %_19.0
  %29 = load i64, i64* %rounds, align 8
  %30 = xor i64 %29, %_28
  store i64 %30, i64* %rounds, align 8
  %_31 = load i64, i64* %time, align 8
  %31 = and i32 %n_bits, -64
  %_33.1 = icmp ne i32 %31, 0
  %32 = zext i32 %n_bits to i64
  %33 = and i64 %32, 63
  %_33.0 = lshr i64 %_31, %33
  %34 = call i1 @llvm.expect.i1(i1 %_33.1, i1 false)
  br i1 %34, label %panic5, label %bb13

bb13:                                             ; preds = %bb10
  store i64 %_33.0, i64* %time, align 8
  br label %bb8

panic5:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.h to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1246 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::jitter::JitterRng::lfsr_time
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN4rand6jitter9JitterRng9lfsr_time17hd6506a96626288d8E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i64 %time, i1 zeroext %var_rounds) unnamed_addr #3 {
start:
  %_13 = alloca { i32, i32 }, align 4
  %iter = alloca { i32, i32 }, align 4
  %_10 = alloca { i32, i32 }, align 4
  %throw_away = alloca i64, align 8
  %lfsr_loop_cnt = alloca i32, align 4
  store i32 0, i32* %lfsr_loop_cnt, align 4
  br i1 %var_rounds, label %bb1, label %bb3

bb3:                                              ; preds = %bb2, %start
  store i64 0, i64* %throw_away, align 8
  %_11 = load i32, i32* %lfsr_loop_cnt, align 4
  %0 = bitcast { i32, i32 }* %_10 to i32*
  store i32 0, i32* %0, align 4
  %1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_10, i32 0, i32 1
  store i32 %_11, i32* %1, align 4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_10, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_10, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %6 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4056f9a8e2ed9597E"(i32 %3, i32 %5)
  %_9.0 = extractvalue { i32, i32 } %6, 0
  %_9.1 = extractvalue { i32, i32 } %6, 1
  br label %bb4

bb1:                                              ; preds = %start
; call rand::jitter::JitterRng::random_loop_cnt
  %_6 = call i32 @_ZN4rand6jitter9JitterRng15random_loop_cnt17h26f0a5c3fd5ef472E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i32 4)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i32 %_6, i32* %lfsr_loop_cnt, align 4
  br label %bb3

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 0
  store i32 %_9.0, i32* %7, align 4
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 1
  store i32 %_9.1, i32* %8, align 4
  br label %bb5

bb5:                                              ; preds = %bb10, %bb4
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %9 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hb9cffb0a5166f718E"({ i32, i32 }* align 4 dereferenceable(8) %iter)
  store { i32, i32 } %9, { i32, i32 }* %_13, align 4
  br label %bb6

bb6:                                              ; preds = %bb5
  %10 = bitcast { i32, i32 }* %_13 to i32*
  %11 = load i32, i32* %10, align 4, !range !3
  %_16 = zext i32 %11 to i64
  switch i64 %_16, label %bb8 [
    i64 0, label %bb9
    i64 1, label %bb7
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb9:                                              ; preds = %bb6
  %_21 = load i64, i64* %throw_away, align 8
; call rand::jitter::black_box
  %_20 = call i64 @_ZN4rand6jitter9black_box17ha34903be6c6ca6e4E(i64 %_21)
  br label %bb11

bb7:                                              ; preds = %bb6
  %_18 = load i64, i64* %throw_away, align 8
; call rand::jitter::JitterRng::lfsr_time::lfsr
  %_17 = call i64 @_ZN4rand6jitter9JitterRng9lfsr_time4lfsr17h55d40945c4b12badE(i64 %_18, i64 %time)
  br label %bb10

bb10:                                             ; preds = %bb7
  store i64 %_17, i64* %throw_away, align 8
  br label %bb5

bb11:                                             ; preds = %bb9
  %12 = bitcast %"jitter::JitterRng"* %self to i64*
  %_23 = load i64, i64* %12, align 8
; call rand::jitter::JitterRng::lfsr_time::lfsr
  %_22 = call i64 @_ZN4rand6jitter9JitterRng9lfsr_time4lfsr17h55d40945c4b12badE(i64 %_23, i64 %time)
  br label %bb12

bb12:                                             ; preds = %bb11
  %13 = bitcast %"jitter::JitterRng"* %self to i64*
  store i64 %_22, i64* %13, align 8
  ret void
}

; rand::jitter::JitterRng::lfsr_time::lfsr
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN4rand6jitter9JitterRng9lfsr_time4lfsr17h55d40945c4b12badE(i64 %0, i64 %time) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %_6 = alloca { i32, i32 }, align 4
  %iter = alloca { i32, i32 }, align 4
  %_4 = alloca { i32, i32 }, align 4
  %data = alloca i64, align 8
  store i64 %0, i64* %data, align 8
  %2 = bitcast { i32, i32 }* %_4 to i32*
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_4, i32 0, i32 1
  store i32 65, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_4, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_4, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %8 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1ba709b59e4b6b38E"(i32 %5, i32 %7)
  %_3.0 = extractvalue { i32, i32 } %8, 0
  %_3.1 = extractvalue { i32, i32 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 0
  store i32 %_3.0, i32* %9, align 4
  %10 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 1
  store i32 %_3.1, i32* %10, align 4
  br label %bb2

bb2:                                              ; preds = %bb16, %bb1
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %11 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h20d89e120cf0237dE"({ i32, i32 }* align 4 dereferenceable(8) %iter)
  store { i32, i32 } %11, { i32, i32 }* %_6, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  %12 = bitcast { i32, i32 }* %_6 to i32*
  %13 = load i32, i32* %12, align 4, !range !3
  %_9 = zext i32 %13 to i64
  switch i64 %_9, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  %14 = load i64, i64* %data, align 8
  ret i64 %14

bb4:                                              ; preds = %bb3
  %15 = bitcast { i32, i32 }* %_6 to %"core::option::Option<i32>::Some"*
  %16 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %15, i32 0, i32 1
  %i = load i32, i32* %16, align 4
  %17 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 64, i32 %i)
  %_15.0 = extractvalue { i32, i1 } %17, 0
  %_15.1 = extractvalue { i32, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false)
  br i1 %18, label %panic, label %bb7

bb7:                                              ; preds = %bb4
  %19 = and i32 %_15.0, -64
  %_16.1 = icmp ne i32 %19, 0
  %20 = zext i32 %_15.0 to i64
  %21 = and i64 %20, 63
  %_16.0 = shl i64 %time, %21
  %22 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false)
  br i1 %22, label %panic1, label %bb8

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.f to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1248 to %"core::panic::location::Location"*)) #17
  unreachable

bb8:                                              ; preds = %bb7
  store i64 %_16.0, i64* %tmp, align 8
  %_17 = load i64, i64* %tmp, align 8
  %_19.0 = lshr i64 %_17, 63
  br label %bb9

panic1:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([35 x i8]* @str.g to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1250 to %"core::panic::location::Location"*)) #17
  unreachable

bb9:                                              ; preds = %bb8
  store i64 %_19.0, i64* %tmp, align 8
  %_20 = load i64, i64* %tmp, align 8
  %23 = load i64, i64* %data, align 8
  %24 = xor i64 %23, %_20
  store i64 %24, i64* %data, align 8
  %_23 = load i64, i64* %data, align 8
  %_24.0 = lshr i64 %_23, 63
  br label %bb10

bb10:                                             ; preds = %bb9
  %_21 = and i64 %_24.0, 1
  %25 = load i64, i64* %data, align 8
  %26 = xor i64 %25, %_21
  store i64 %26, i64* %data, align 8
  %_27 = load i64, i64* %data, align 8
  %_28.0 = lshr i64 %_27, 60
  br label %bb11

bb11:                                             ; preds = %bb10
  %_25 = and i64 %_28.0, 1
  %27 = load i64, i64* %data, align 8
  %28 = xor i64 %27, %_25
  store i64 %28, i64* %data, align 8
  %_31 = load i64, i64* %data, align 8
  %_32.0 = lshr i64 %_31, 55
  br label %bb12

bb12:                                             ; preds = %bb11
  %_29 = and i64 %_32.0, 1
  %29 = load i64, i64* %data, align 8
  %30 = xor i64 %29, %_29
  store i64 %30, i64* %data, align 8
  %_35 = load i64, i64* %data, align 8
  %_36.0 = lshr i64 %_35, 30
  br label %bb13

bb13:                                             ; preds = %bb12
  %_33 = and i64 %_36.0, 1
  %31 = load i64, i64* %data, align 8
  %32 = xor i64 %31, %_33
  store i64 %32, i64* %data, align 8
  %_39 = load i64, i64* %data, align 8
  %_40.0 = lshr i64 %_39, 27
  br label %bb14

bb14:                                             ; preds = %bb13
  %_37 = and i64 %_40.0, 1
  %33 = load i64, i64* %data, align 8
  %34 = xor i64 %33, %_37
  store i64 %34, i64* %data, align 8
  %_43 = load i64, i64* %data, align 8
  %_44.0 = lshr i64 %_43, 22
  br label %bb15

bb15:                                             ; preds = %bb14
  %_41 = and i64 %_44.0, 1
  %35 = load i64, i64* %data, align 8
  %36 = xor i64 %35, %_41
  store i64 %36, i64* %data, align 8
  %_46 = load i64, i64* %data, align 8
  %37 = call i64 @llvm.fshl.i64(i64 %_46, i64 %_46, i64 1)
  store i64 %37, i64* %1, align 8
  %38 = load i64, i64* %1, align 8
  br label %bb16

bb16:                                             ; preds = %bb15
  store i64 %38, i64* %data, align 8
  br label %bb2
}

; rand::jitter::JitterRng::memaccess
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN4rand6jitter9JitterRng9memaccess17hc28d1bf0f370a16eE(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i1 zeroext %var_rounds) unnamed_addr #3 {
start:
  %_13 = alloca { i32, i32 }, align 4
  %iter = alloca { i32, i32 }, align 4
  %_10 = alloca { i32, i32 }, align 4
  %index = alloca i64, align 8
  %acc_loop_cnt = alloca i32, align 4
  store i32 128, i32* %acc_loop_cnt, align 4
  br i1 %var_rounds, label %bb1, label %bb4

bb4:                                              ; preds = %bb3, %start
  %0 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 5
  %1 = load i64, i64* %0, align 8
  store i64 %1, i64* %index, align 8
  %_11 = load i32, i32* %acc_loop_cnt, align 4
  %2 = bitcast { i32, i32 }* %_10 to i32*
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_10, i32 0, i32 1
  store i32 %_11, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_10, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_10, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %8 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4056f9a8e2ed9597E"(i32 %5, i32 %7)
  %_9.0 = extractvalue { i32, i32 } %8, 0
  %_9.1 = extractvalue { i32, i32 } %8, 1
  br label %bb5

bb1:                                              ; preds = %start
; call rand::jitter::JitterRng::random_loop_cnt
  %_5 = call i32 @_ZN4rand6jitter9JitterRng15random_loop_cnt17h26f0a5c3fd5ef472E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i32 4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = load i32, i32* %acc_loop_cnt, align 4
  %10 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %9, i32 %_5)
  %_7.0 = extractvalue { i32, i1 } %10, 0
  %_7.1 = extractvalue { i32, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false)
  br i1 %11, label %panic, label %bb3

bb3:                                              ; preds = %bb2
  store i32 %_7.0, i32* %acc_loop_cnt, align 4
  br label %bb4

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1252 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb4
  %12 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 0
  store i32 %_9.0, i32* %12, align 4
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 1
  store i32 %_9.1, i32* %13, align 4
  br label %bb6

bb6:                                              ; preds = %bb15, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %14 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hb9cffb0a5166f718E"({ i32, i32 }* align 4 dereferenceable(8) %iter)
  store { i32, i32 } %14, { i32, i32 }* %_13, align 4
  br label %bb7

bb7:                                              ; preds = %bb6
  %15 = bitcast { i32, i32 }* %_13 to i32*
  %16 = load i32, i32* %15, align 4, !range !3
  %_16 = zext i32 %16 to i64
  switch i64 %_16, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb10:                                             ; preds = %bb7
  %_31 = load i64, i64* %index, align 8
  %17 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 5
  store i64 %_31, i64* %17, align 8
  ret void

bb8:                                              ; preds = %bb7
  %_19 = load i64, i64* %index, align 8
  %18 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_19, i64 32)
  %_20.0 = extractvalue { i64, i1 } %18, 0
  %_20.1 = extractvalue { i64, i1 } %18, 1
  %19 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false)
  br i1 %19, label %panic1, label %bb11

bb11:                                             ; preds = %bb8
  %20 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_20.0, i64 1)
  %_21.0 = extractvalue { i64, i1 } %20, 0
  %_21.1 = extractvalue { i64, i1 } %20, 1
  %21 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false)
  br i1 %21, label %panic2, label %bb12

panic1:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1254 to %"core::panic::location::Location"*)) #17
  unreachable

bb12:                                             ; preds = %bb11
  %22 = urem i64 %_21.0, 2048
  store i64 %22, i64* %index, align 8
  %_23 = load i64, i64* %index, align 8
  %_25 = icmp ult i64 %_23, 2048
  %23 = call i1 @llvm.expect.i1(i1 %_25, i1 true)
  br i1 %23, label %bb13, label %panic3

panic2:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.f to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1256 to %"core::panic::location::Location"*)) #17
  unreachable

bb13:                                             ; preds = %bb12
  %24 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 8
  %25 = getelementptr inbounds [2048 x i8], [2048 x i8]* %24, i64 0, i64 %_23
  %tmp = load i8, i8* %25, align 1
  %26 = add i8 %tmp, 1
  br label %bb14

panic3:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_23, i64 2048, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1258 to %"core::panic::location::Location"*)) #17
  unreachable

bb14:                                             ; preds = %bb13
  %_28 = load i64, i64* %index, align 8
  %_30 = icmp ult i64 %_28, 2048
  %27 = call i1 @llvm.expect.i1(i1 %_30, i1 true)
  br i1 %27, label %bb15, label %panic4

bb15:                                             ; preds = %bb14
  %28 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 8
  %29 = getelementptr inbounds [2048 x i8], [2048 x i8]* %28, i64 0, i64 %_28
  store i8 %26, i8* %29, align 1
  br label %bb6

panic4:                                           ; preds = %bb14
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_28, i64 2048, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1260 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::jitter::JitterRng::stuck
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN4rand6jitter9JitterRng5stuck17h856975d0c10348d2E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i64 %current_delta) unnamed_addr #1 {
start:
  %_13 = alloca i8, align 1
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 3
  %_4 = load i64, i64* %1, align 8
  %2 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_4, i64 %current_delta)
  %_6.0 = extractvalue { i64, i1 } %2, 0
  %_6.1 = extractvalue { i64, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false)
  br i1 %3, label %panic, label %bb1

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 4
  %_9 = load i64, i64* %4, align 8
  %5 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_6.0, i64 %_9)
  %_10.0 = extractvalue { i64, i1 } %5, 0
  %_10.1 = extractvalue { i64, i1 } %5, 1
  %6 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false)
  br i1 %6, label %panic1, label %bb2

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.f to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1262 to %"core::panic::location::Location"*)) #17
  unreachable

bb2:                                              ; preds = %bb1
  %7 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 3
  store i64 %current_delta, i64* %7, align 8
  %8 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 4
  store i64 %_6.0, i64* %8, align 8
  %9 = icmp eq i64 %current_delta, 0
  br i1 %9, label %bb6, label %bb7

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.f to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1264 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb2
  store i8 1, i8* %_13, align 1
  br label %bb8

bb7:                                              ; preds = %bb2
  %_15 = icmp eq i64 %_6.0, 0
  %10 = zext i1 %_15 to i8
  store i8 %10, i8* %_13, align 1
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  %11 = load i8, i8* %_13, align 1, !range !4
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb3, label %bb4

bb4:                                              ; preds = %bb8
  %_17 = icmp eq i64 %_10.0, 0
  %13 = zext i1 %_17 to i8
  store i8 %13, i8* %0, align 1
  br label %bb5

bb3:                                              ; preds = %bb8
  store i8 1, i8* %0, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %14 = load i8, i8* %0, align 1, !range !4
  %15 = trunc i8 %14 to i1
  ret i1 %15
}

; rand::jitter::JitterRng::measure_jitter
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN4rand6jitter9JitterRng14measure_jitter17h612049b5eed72675E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8, align 1
; call rand::jitter::JitterRng::memaccess
  call void @_ZN4rand6jitter9JitterRng9memaccess17hc28d1bf0f370a16eE(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i1 zeroext true)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 1
  %_5 = load i64 ()*, i64 ()** %2, align 8, !nonnull !5
  %time = call i64 %_5()
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 2
  %_9 = load i64, i64* %3, align 8
  %4 = sub i64 %time, %_9
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 2
  store i64 %time, i64* %5, align 8
; call rand::jitter::JitterRng::lfsr_time
  call void @_ZN4rand6jitter9JitterRng9lfsr_time17hd6506a96626288d8E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i64 %4, i1 zeroext true)
  br label %bb4

bb4:                                              ; preds = %bb3
; call rand::jitter::JitterRng::stuck
  %_15 = call zeroext i1 @_ZN4rand6jitter9JitterRng5stuck17h856975d0c10348d2E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i64 %4)
  br label %bb5

bb5:                                              ; preds = %bb4
  br i1 %_15, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %6 = bitcast %"jitter::JitterRng"* %self to i64*
  %_19 = load i64, i64* %6, align 8
  %7 = call i64 @llvm.fshl.i64(i64 %_19, i64 %_19, i64 7)
  store i64 %7, i64* %0, align 8
  %8 = load i64, i64* %0, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  store i8 0, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb6
  %9 = load i8, i8* %1, align 1, !range !4
  %10 = trunc i8 %9 to i1
  ret i1 %10

bb8:                                              ; preds = %bb7
  %11 = bitcast %"jitter::JitterRng"* %self to i64*
  store i64 %8, i64* %11, align 8
  store i8 1, i8* %1, align 1
  br label %bb9
}

; rand::jitter::JitterRng::stir_pool
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN4rand6jitter9JitterRng9stir_pool17h839135c48f6a49cdE(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self) unnamed_addr #3 {
start:
  %0 = alloca i64, align 8
  %_6 = alloca { i32, i32 }, align 4
  %iter = alloca { i32, i32 }, align 4
  %_4 = alloca { i32, i32 }, align 4
  %mixer = alloca i64, align 8
  store i64 -7441392450524785546, i64* %mixer, align 8
  %1 = bitcast { i32, i32 }* %_4 to i32*
  store i32 0, i32* %1, align 4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_4, i32 0, i32 1
  store i32 64, i32* %2, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_4, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_4, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %7 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1ba709b59e4b6b38E"(i32 %4, i32 %6)
  %_3.0 = extractvalue { i32, i32 } %7, 0
  %_3.1 = extractvalue { i32, i32 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 0
  store i32 %_3.0, i32* %8, align 4
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 1
  store i32 %_3.1, i32* %9, align 4
  br label %bb2

bb2:                                              ; preds = %bb9, %bb1
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %10 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h20d89e120cf0237dE"({ i32, i32 }* align 4 dereferenceable(8) %iter)
  store { i32, i32 } %10, { i32, i32 }* %_6, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  %11 = bitcast { i32, i32 }* %_6 to i32*
  %12 = load i32, i32* %11, align 4, !range !3
  %_9 = zext i32 %12 to i64
  switch i64 %_9, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  %_23 = load i64, i64* %mixer, align 8
  %13 = bitcast %"jitter::JitterRng"* %self to i64*
  %14 = bitcast %"jitter::JitterRng"* %self to i64*
  %15 = load i64, i64* %14, align 8
  %16 = xor i64 %15, %_23
  store i64 %16, i64* %13, align 8
  ret void

bb4:                                              ; preds = %bb3
  %17 = bitcast { i32, i32 }* %_6 to %"core::option::Option<i32>::Some"*
  %18 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %17, i32 0, i32 1
  %i = load i32, i32* %18, align 4
  %19 = bitcast %"jitter::JitterRng"* %self to i64*
  %_13 = load i64, i64* %19, align 8
  %20 = and i32 %i, -64
  %_15.1 = icmp ne i32 %20, 0
  %21 = zext i32 %i to i64
  %22 = and i64 %21, 63
  %_15.0 = lshr i64 %_13, %22
  %23 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false)
  br i1 %23, label %panic, label %bb7

bb7:                                              ; preds = %bb4
  %apply = and i64 %_15.0, 1
  %24 = sub i64 %apply, 1
  br label %bb8

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([36 x i8]* @str.h to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1266 to %"core::panic::location::Location"*)) #17
  unreachable

bb8:                                              ; preds = %bb7
  %mask = xor i64 %24, -1
  %_19 = and i64 7441392450524785545, %mask
  %25 = load i64, i64* %mixer, align 8
  %26 = xor i64 %25, %_19
  store i64 %26, i64* %mixer, align 8
  %_22 = load i64, i64* %mixer, align 8
  %27 = call i64 @llvm.fshl.i64(i64 %_22, i64 %_22, i64 1)
  store i64 %27, i64* %0, align 8
  %28 = load i64, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  store i64 %28, i64* %mixer, align 8
  br label %bb2
}

; rand::jitter::JitterRng::gen_entropy
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN4rand6jitter9JitterRng11gen_entropy17h7d6707cefdeec75eE(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self) unnamed_addr #1 {
start:
  %_14 = alloca i8, align 1
  %_8 = alloca { i32, i32 }, align 4
  %iter = alloca { i32, i32 }, align 4
  %_5 = alloca { i32, i32 }, align 4
; call rand::jitter::JitterRng::measure_jitter
  %_2 = call zeroext i1 @_ZN4rand6jitter9JitterRng14measure_jitter17h612049b5eed72675E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 6
  %_6 = load i32, i32* %0, align 8
  %1 = bitcast { i32, i32 }* %_5 to i32*
  store i32 0, i32* %1, align 4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_5, i32 0, i32 1
  store i32 %_6, i32* %2, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_5, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_5, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %7 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4056f9a8e2ed9597E"(i32 %4, i32 %6)
  %_4.0 = extractvalue { i32, i32 } %7, 0
  %_4.1 = extractvalue { i32, i32 } %7, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 0
  store i32 %_4.0, i32* %8, align 4
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 1
  store i32 %_4.1, i32* %9, align 4
  br label %bb3

bb3:                                              ; preds = %bb9, %bb2
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %10 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hb9cffb0a5166f718E"({ i32, i32 }* align 4 dereferenceable(8) %iter)
  store { i32, i32 } %10, { i32, i32 }* %_8, align 4
  br label %bb4

bb4:                                              ; preds = %bb3
  %11 = bitcast { i32, i32 }* %_8 to i32*
  %12 = load i32, i32* %11, align 4, !range !3
  %_11 = zext i32 %12 to i64
  switch i64 %_11, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb7
  ]

bb5:                                              ; preds = %bb4
  unreachable

bb6:                                              ; preds = %bb4
; call rand::jitter::JitterRng::stir_pool
  call void @_ZN4rand6jitter9JitterRng9stir_pool17h839135c48f6a49cdE(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self)
  br label %bb10

bb7:                                              ; preds = %bb9, %bb4
; call rand::jitter::JitterRng::measure_jitter
  %13 = call zeroext i1 @_ZN4rand6jitter9JitterRng14measure_jitter17h612049b5eed72675E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self)
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %_14, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::option::Option<T>::is_none
  %_12 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h7868b2fa45534332E"(i8* align 1 dereferenceable(1) %_14)
  br label %bb9

bb9:                                              ; preds = %bb8
  br i1 %_12, label %bb7, label %bb3

bb10:                                             ; preds = %bb6
  %15 = bitcast %"jitter::JitterRng"* %self to i64*
  %16 = load i64, i64* %15, align 8
  ret i64 %16
}

; rand::jitter::JitterRng::test_timer
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4rand6jitter9JitterRng10test_timer17h1813cfc230858f7eE(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self) unnamed_addr #1 {
start:
  %_24 = alloca i8, align 1
  %_10 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %count_stuck = alloca i64, align 8
  %count_mod = alloca i64, align 8
  %time_backwards = alloca i32, align 4
  %old_delta = alloca i64, align 8
  %delta_sum = alloca i64, align 8
  %0 = alloca %"core::result::Result<u32, jitter::TimerError>", align 4
  store i64 0, i64* %delta_sum, align 8
  store i64 0, i64* %old_delta, align 8
  store i32 0, i32* %time_backwards, align 4
  store i64 0, i64* %count_mod, align 8
  store i64 0, i64* %count_stuck, align 8
  %1 = bitcast { i64, i64 }* %_8 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  store i64 400, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %7 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hcbfe882529e66249E"(i64 %4, i64 %6)
  %_7.0 = extractvalue { i64, i64 } %7, 0
  %_7.1 = extractvalue { i64, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_7.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_7.1, i64* %9, align 8
  br label %bb2

bb2:                                              ; preds = %bb33, %bb18, %bb1
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %10 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2da81ea912788aedE"({ i64, i64 }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %10, { i64, i64 }* %_10, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %11 = bitcast { i64, i64 }* %_10 to i64*
  %_13 = load i64, i64* %11, align 8, !range !2
  switch i64 %_13, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  %_59 = load i32, i32* %time_backwards, align 4
  %_58 = icmp sgt i32 %_59, 3
  br i1 %_58, label %bb34, label %bb35

bb4:                                              ; preds = %bb3
  %12 = bitcast { i64, i64 }* %_10 to %"core::option::Option<u64>::Some"*
  %13 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %12, i32 0, i32 1
  %i = load i64, i64* %13, align 8
  %14 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 1
  %_16 = load i64 ()*, i64 ()** %14, align 8, !nonnull !5
  %time = call i64 %_16()
  br label %bb7

bb7:                                              ; preds = %bb4
; call rand::jitter::JitterRng::memaccess
  call void @_ZN4rand6jitter9JitterRng9memaccess17hc28d1bf0f370a16eE(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i1 zeroext true)
  br label %bb8

bb8:                                              ; preds = %bb7
; call rand::jitter::JitterRng::lfsr_time
  call void @_ZN4rand6jitter9JitterRng9lfsr_time17hd6506a96626288d8E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i64 %time, i1 zeroext true)
  br label %bb9

bb9:                                              ; preds = %bb8
  %15 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 1
  %_23 = load i64 ()*, i64 ()** %15, align 8, !nonnull !5
  %time2 = call i64 %_23()
  br label %bb10

bb10:                                             ; preds = %bb9
  %16 = icmp eq i64 %time, 0
  br i1 %16, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  store i8 1, i8* %_24, align 1
  br label %bb13

bb12:                                             ; preds = %bb10
  %_26 = icmp eq i64 %time2, 0
  %17 = zext i1 %_26 to i8
  store i8 %17, i8* %_24, align 1
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %18 = load i8, i8* %_24, align 1, !range !4
  %19 = trunc i8 %18 to i1
  br i1 %19, label %bb14, label %bb15

bb15:                                             ; preds = %bb13
  %20 = sub i64 %time2, %time
  br label %bb16

bb14:                                             ; preds = %bb13
  %21 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to %"core::result::Result<u32, jitter::TimerError>::Err"*
  %22 = getelementptr inbounds %"core::result::Result<u32, jitter::TimerError>::Err", %"core::result::Result<u32, jitter::TimerError>::Err"* %21, i32 0, i32 1
  store i8 0, i8* %22, align 1
  %23 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to i8*
  store i8 1, i8* %23, align 4
  br label %bb46

bb46:                                             ; preds = %bb45, %bb40, %bb38, %bb36, %bb34, %bb17, %bb14
  %24 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to i64*
  %25 = load i64, i64* %24, align 4
  ret i64 %25

bb16:                                             ; preds = %bb15
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %27 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to %"core::result::Result<u32, jitter::TimerError>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<u32, jitter::TimerError>::Err", %"core::result::Result<u32, jitter::TimerError>::Err"* %27, i32 0, i32 1
  store i8 1, i8* %28, align 1
  %29 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to i8*
  store i8 1, i8* %29, align 4
  br label %bb46

bb18:                                             ; preds = %bb16
  %_33 = icmp ult i64 %i, 100
  br i1 %_33, label %bb2, label %bb19

bb19:                                             ; preds = %bb18
; call rand::jitter::JitterRng::stuck
  %_35 = call zeroext i1 @_ZN4rand6jitter9JitterRng5stuck17h856975d0c10348d2E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i64 %20)
  br label %bb20

bb20:                                             ; preds = %bb19
  br i1 %_35, label %bb21, label %bb23

bb23:                                             ; preds = %bb22, %bb20
  %_40 = icmp ugt i64 %time2, %time
  %_39 = xor i1 %_40, true
  br i1 %_39, label %bb24, label %bb26

bb21:                                             ; preds = %bb20
  %30 = load i64, i64* %count_stuck, align 8
  %31 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %30, i64 1)
  %_38.0 = extractvalue { i64, i1 } %31, 0
  %_38.1 = extractvalue { i64, i1 } %31, 1
  %32 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false)
  br i1 %32, label %panic, label %bb22

bb22:                                             ; preds = %bb21
  store i64 %_38.0, i64* %count_stuck, align 8
  br label %bb23

panic:                                            ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1268 to %"core::panic::location::Location"*)) #17
  unreachable

bb26:                                             ; preds = %bb25, %bb23
  %_47 = icmp eq i64 %20, -9223372036854775808
  %_48 = and i1 false, %_47
  %33 = call i1 @llvm.expect.i1(i1 %_48, i1 false)
  br i1 %33, label %panic2, label %bb27

bb24:                                             ; preds = %bb23
  %34 = load i32, i32* %time_backwards, align 4
  %35 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 1)
  %_43.0 = extractvalue { i32, i1 } %35, 0
  %_43.1 = extractvalue { i32, i1 } %35, 1
  %36 = call i1 @llvm.expect.i1(i1 %_43.1, i1 false)
  br i1 %36, label %panic1, label %bb25

bb25:                                             ; preds = %bb24
  store i32 %_43.0, i32* %time_backwards, align 4
  br label %bb26

panic1:                                           ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1270 to %"core::panic::location::Location"*)) #17
  unreachable

bb27:                                             ; preds = %bb26
  %_44 = srem i64 %20, 100
  %37 = icmp eq i64 %_44, 0
  br i1 %37, label %bb28, label %bb30

panic2:                                           ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([48 x i8]* @str.i to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1272 to %"core::panic::location::Location"*)) #17
  unreachable

bb28:                                             ; preds = %bb27
  %38 = load i64, i64* %count_mod, align 8
  %39 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %38, i64 1)
  %_49.0 = extractvalue { i64, i1 } %39, 0
  %_49.1 = extractvalue { i64, i1 } %39, 1
  %40 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false)
  br i1 %40, label %panic3, label %bb29

bb30:                                             ; preds = %bb29, %bb27
  %_54 = load i64, i64* %old_delta, align 8
  %41 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %20, i64 %_54)
  %_55.0 = extractvalue { i64, i1 } %41, 0
  %_55.1 = extractvalue { i64, i1 } %41, 1
  %42 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false)
  br i1 %42, label %panic4, label %bb31

bb29:                                             ; preds = %bb28
  store i64 %_49.0, i64* %count_mod, align 8
  br label %bb30

panic3:                                           ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1274 to %"core::panic::location::Location"*)) #17
  unreachable

bb31:                                             ; preds = %bb30
; call core::num::<impl i64>::abs
  %_51 = call i64 @"_ZN4core3num21_$LT$impl$u20$i64$GT$3abs17h02bf4cef19c36132E"(i64 %_55.0)
  br label %bb32

panic4:                                           ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.f to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1276 to %"core::panic::location::Location"*)) #17
  unreachable

bb32:                                             ; preds = %bb31
  %43 = load i64, i64* %delta_sum, align 8
  %44 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %43, i64 %_51)
  %_56.0 = extractvalue { i64, i1 } %44, 0
  %_56.1 = extractvalue { i64, i1 } %44, 1
  %45 = call i1 @llvm.expect.i1(i1 %_56.1, i1 false)
  br i1 %45, label %panic5, label %bb33

bb33:                                             ; preds = %bb32
  store i64 %_56.0, i64* %delta_sum, align 8
  store i64 %20, i64* %old_delta, align 8
  br label %bb2

panic5:                                           ; preds = %bb32
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1278 to %"core::panic::location::Location"*)) #17
  unreachable

bb35:                                             ; preds = %bb6
  %_61 = load i64, i64* %delta_sum, align 8
  %_60 = icmp ult i64 %_61, 300
  br i1 %_60, label %bb36, label %bb37

bb34:                                             ; preds = %bb6
  %46 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to %"core::result::Result<u32, jitter::TimerError>::Err"*
  %47 = getelementptr inbounds %"core::result::Result<u32, jitter::TimerError>::Err", %"core::result::Result<u32, jitter::TimerError>::Err"* %46, i32 0, i32 1
  store i8 2, i8* %47, align 1
  %48 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to i8*
  store i8 1, i8* %48, align 4
  br label %bb46

bb37:                                             ; preds = %bb35
  %_63 = load i64, i64* %count_mod, align 8
  %_62 = icmp ugt i64 %_63, 270
  br i1 %_62, label %bb38, label %bb39

bb36:                                             ; preds = %bb35
  %49 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to %"core::result::Result<u32, jitter::TimerError>::Err"*
  %50 = getelementptr inbounds %"core::result::Result<u32, jitter::TimerError>::Err", %"core::result::Result<u32, jitter::TimerError>::Err"* %49, i32 0, i32 1
  store i8 3, i8* %50, align 1
  %51 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to i8*
  store i8 1, i8* %51, align 4
  br label %bb46

bb39:                                             ; preds = %bb37
  %_66 = load i64, i64* %count_stuck, align 8
  %_65 = icmp ugt i64 %_66, 270
  br i1 %_65, label %bb40, label %bb41

bb38:                                             ; preds = %bb37
  %52 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to %"core::result::Result<u32, jitter::TimerError>::Err"*
  %53 = getelementptr inbounds %"core::result::Result<u32, jitter::TimerError>::Err", %"core::result::Result<u32, jitter::TimerError>::Err"* %52, i32 0, i32 1
  store i8 1, i8* %53, align 1
  %54 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to i8*
  store i8 1, i8* %54, align 4
  br label %bb46

bb41:                                             ; preds = %bb39
  %_69 = load i64, i64* %delta_sum, align 8
  %delta_average = udiv i64 %_69, 300
; call core::num::<impl u64>::pow
  %_74 = call i64 @"_ZN4core3num21_$LT$impl$u20$u64$GT$3pow17hf70f85bca80b3ad8E"(i64 %delta_average, i32 3)
  br label %bb42

bb40:                                             ; preds = %bb39
  %55 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to %"core::result::Result<u32, jitter::TimerError>::Err"*
  %56 = getelementptr inbounds %"core::result::Result<u32, jitter::TimerError>::Err", %"core::result::Result<u32, jitter::TimerError>::Err"* %55, i32 0, i32 1
  store i8 4, i8* %56, align 1
  %57 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to i8*
  store i8 1, i8* %57, align 4
  br label %bb46

bb42:                                             ; preds = %bb41
; call rand::jitter::JitterRng::test_timer::log2
  %_73 = call i32 @_ZN4rand6jitter9JitterRng10test_timer4log217h070bf0060b4727b9E(i64 %_74)
  br label %bb43

bb43:                                             ; preds = %bb42
  %58 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_73, i32 1)
  %_76.0 = extractvalue { i32, i1 } %58, 0
  %_76.1 = extractvalue { i32, i1 } %58, 1
  %59 = call i1 @llvm.expect.i1(i1 %_76.1, i1 false)
  br i1 %59, label %panic6, label %bb44

bb44:                                             ; preds = %bb43
  %_77 = icmp eq i32 %_76.0, 0
  %60 = call i1 @llvm.expect.i1(i1 %_77, i1 false)
  br i1 %60, label %panic7, label %bb45

panic6:                                           ; preds = %bb43
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1280 to %"core::panic::location::Location"*)) #17
  unreachable

bb45:                                             ; preds = %bb44
  %_70 = udiv i32 384, %_76.0
  %61 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to %"core::result::Result<u32, jitter::TimerError>::Ok"*
  %62 = getelementptr inbounds %"core::result::Result<u32, jitter::TimerError>::Ok", %"core::result::Result<u32, jitter::TimerError>::Ok"* %61, i32 0, i32 1
  store i32 %_70, i32* %62, align 4
  %63 = bitcast %"core::result::Result<u32, jitter::TimerError>"* %0 to i8*
  store i8 0, i8* %63, align 4
  br label %bb46

panic7:                                           ; preds = %bb44
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.a to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1282 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::jitter::JitterRng::test_timer::log2
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN4rand6jitter9JitterRng10test_timer4log217h070bf0060b4727b9E(i64 %x) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = call i64 @llvm.ctlz.i64(i64 %x, i1 false)
  store i64 %1, i64* %0, align 8
  %_2.i = load i64, i64* %0, align 8
  %2 = trunc i64 %_2.i to i32
  br label %bb1

bb1:                                              ; preds = %start
  %3 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 64, i32 %2)
  %_4.0 = extractvalue { i32, i1 } %3, 0
  %_4.1 = extractvalue { i32, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %4, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %_4.0

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.f to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1284 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::jitter::JitterRng::timer_stats
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4rand6jitter9JitterRng11timer_stats17h697ecad02e8a8257E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i1 zeroext %var_rounds) unnamed_addr #1 {
start:
; call rand::jitter::platform::get_nstime
  %time = call i64 @_ZN4rand6jitter8platform10get_nstime17h92074073c2d69eb1E()
  br label %bb1

bb1:                                              ; preds = %start
; call rand::jitter::JitterRng::memaccess
  call void @_ZN4rand6jitter9JitterRng9memaccess17hc28d1bf0f370a16eE(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i1 zeroext %var_rounds)
  br label %bb2

bb2:                                              ; preds = %bb1
; call rand::jitter::JitterRng::lfsr_time
  call void @_ZN4rand6jitter9JitterRng9lfsr_time17hd6506a96626288d8E(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, i64 %time, i1 zeroext %var_rounds)
  br label %bb3

bb3:                                              ; preds = %bb2
; call rand::jitter::platform::get_nstime
  %time2 = call i64 @_ZN4rand6jitter8platform10get_nstime17h92074073c2d69eb1E()
  br label %bb4

bb4:                                              ; preds = %bb3
  %0 = sub i64 %time2, %time
  br label %bb5

bb5:                                              ; preds = %bb4
  ret i64 %0
}

; rand::jitter::platform::get_nstime
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN4rand6jitter8platform10get_nstime17h92074073c2d69eb1E() unnamed_addr #1 {
start:
  %_4 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::result::Result<core::time::Duration, std::time::SystemTimeError>", align 8
  %dur = alloca { i64, i32 }, align 8
; call std::time::SystemTime::now
  %0 = call { i64, i64 } @_ZN3std4time10SystemTime3now17h62ab7e1adf7a1773E()
  store { i64, i64 } %0, { i64, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (<{ [16 x i8] }>* @alloc940 to { i64, i64 }*), i32 0, i32 0), align 8
  %2 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (<{ [16 x i8] }>* @alloc940 to { i64, i64 }*), i32 0, i32 1), align 8
; call std::time::SystemTime::duration_since
  call void @_ZN3std4time10SystemTime14duration_since17h2455bca8a6e3534fE(%"core::result::Result<core::time::Duration, std::time::SystemTimeError>"* noalias nocapture sret(%"core::result::Result<core::time::Duration, std::time::SystemTimeError>") dereferenceable(24) %_2, { i64, i64 }* align 8 dereferenceable(16) %_4, i64 %1, i64 %2)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::unwrap
  %3 = call { i64, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h48bb75eaf169bda7E"(%"core::result::Result<core::time::Duration, std::time::SystemTimeError>"* noalias nocapture dereferenceable(24) %_2, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1286 to %"core::panic::location::Location"*))
  store { i64, i32 } %3, { i64, i32 }* %dur, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::time::Duration::as_secs
  %_6 = call i64 @_ZN4core4time8Duration7as_secs17haf6c23f324a594ffE({ i64, i32 }* align 8 dereferenceable(16) %dur)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_8.0 = shl i64 %_6, 30
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::time::Duration::subsec_nanos
  %_10 = call i32 @_ZN4core4time8Duration12subsec_nanos17h2564b3870134b845E({ i64, i32 }* align 8 dereferenceable(16) %dur)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = zext i32 %_10 to i64
  %4 = or i64 %_8.0, %_9
  ret i64 %4
}

; rand::jitter::black_box
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN4rand6jitter9black_box17ha34903be6c6ca6e4E(i64 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %dummy = alloca i64, align 8
  store i64 %0, i64* %dummy, align 8
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke core::ptr::read_volatile
  %ret = invoke i64 @_ZN4core3ptr13read_volatile17hc80bc5f6fe688a15E(i64* %dummy)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
  %_5 = load i64, i64* %dummy, align 8
; invoke core::mem::forget
  invoke void @_ZN4core3mem6forget17he37090d19731ed8dE(i64 %_5)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %2 = load i8, i8* %_6, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i64 %ret

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %14 = bitcast { i8*, i32 }* %1 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb5:                                              ; preds = %bb6
  br label %bb4
}

; rand::jitter::black_box
; Function Attrs: nonlazybind uwtable
define internal i8 @_ZN4rand6jitter9black_box17he12a33ce653eafddE(i8 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %dummy = alloca i8, align 1
  store i8 %0, i8* %dummy, align 1
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke core::ptr::read_volatile
  %ret = invoke i8 @_ZN4core3ptr13read_volatile17h6b48025ab93c77e1E(i8* %dummy)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
  %_5 = load i8, i8* %dummy, align 1
; invoke core::mem::forget
  invoke void @_ZN4core3mem6forget17h9ca1a50b974c8f38E(i8 %_5)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %2 = load i8, i8* %_6, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i8 %ret

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %14 = bitcast { i8*, i32 }* %1 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb5:                                              ; preds = %bb6
  br label %bb4
}

; <rand::jitter::JitterRng as rand::Rng>::next_u32
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN53_$LT$rand..jitter..JitterRng$u20$as$u20$rand..Rng$GT$8next_u3217hd9deeafccce54365E"(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self) unnamed_addr #1 {
start:
  %_8 = alloca { i32, i32 }, align 4
  %_2 = alloca { i32, i32 }, align 4
  %0 = alloca i32, align 4
  %_3 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 7
; call core::option::Option<T>::take
  %1 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$4take17h1c7da2464c01cf35E"({ i32, i32 }* align 4 dereferenceable(8) %_3)
  store { i32, i32 } %1, { i32, i32 }* %_2, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i32, i32 }* %_2 to i32*
  %3 = load i32, i32* %2, align 4, !range !3
  %_4 = zext i32 %3 to i64
  %4 = icmp eq i64 %_4, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i32, i32 }* %_2 to %"core::option::Option<u32>::Some"*
  %6 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %5, i32 0, i32 1
  %high = load i32, i32* %6, align 4
  store i32 %high, i32* %0, align 4
  br label %bb6

bb3:                                              ; preds = %bb1
; call <rand::jitter::JitterRng as rand::Rng>::next_u64
  %data = call i64 @"_ZN53_$LT$rand..jitter..JitterRng$u20$as$u20$rand..Rng$GT$8next_u6417hd58f47b152c469bbE"(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_12.0 = lshr i64 %data, 32
  br label %bb5

bb5:                                              ; preds = %bb4
  %_9 = trunc i64 %_12.0 to i32
  %7 = bitcast { i32, i32 }* %_8 to %"core::option::Option<u32>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %7, i32 0, i32 1
  store i32 %_9, i32* %8, align 4
  %9 = bitcast { i32, i32 }* %_8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds %"jitter::JitterRng", %"jitter::JitterRng"* %self, i32 0, i32 7
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_8, i32 0, i32 0
  %12 = load i32, i32* %11, align 4, !range !3
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_8, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %10, i32 0, i32 0
  store i32 %12, i32* %15, align 4
  %16 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %10, i32 0, i32 1
  store i32 %14, i32* %16, align 4
  %17 = trunc i64 %data to i32
  store i32 %17, i32* %0, align 4
  br label %bb6

bb6:                                              ; preds = %bb2, %bb5
  %18 = load i32, i32* %0, align 4
  ret i32 %18
}

; <rand::jitter::JitterRng as rand::Rng>::next_u64
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN53_$LT$rand..jitter..JitterRng$u20$as$u20$rand..Rng$GT$8next_u6417hd58f47b152c469bbE"(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self) unnamed_addr #1 {
start:
; call rand::jitter::JitterRng::gen_entropy
  %0 = call i64 @_ZN4rand6jitter9JitterRng11gen_entropy17h7d6707cefdeec75eE(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; <rand::jitter::JitterRng as rand::Rng>::fill_bytes
; Function Attrs: nonlazybind uwtable
define void @"_ZN53_$LT$rand..jitter..JitterRng$u20$as$u20$rand..Rng$GT$10fill_bytes17h96da3ce121945ea4E"(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self, [0 x i8]* nonnull align 1 %dest.0, i64 %dest.1) unnamed_addr #1 {
start:
  %_36 = alloca i64, align 8
  %chunk1 = alloca [8 x i8], align 1
  %chunk = alloca [8 x i8], align 1
  %_9 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %left = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %left, i32 0, i32 0
  store [0 x i8]* %dest.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %left, i32 0, i32 1
  store i64 %dest.1, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %left, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !5
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %left, i32 0, i32 1
  %_6.1 = load i64, i64* %3, align 8
  %_4 = icmp uge i64 %_6.1, 8
  br i1 %_4, label %bb2, label %bb7

bb7:                                              ; preds = %bb1
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %left, i32 0, i32 0
  %_23.0 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !5
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %left, i32 0, i32 1
  %_23.1 = load i64, i64* %5, align 8
  %_24 = icmp ugt i64 %_23.1, 0
  br i1 %_24, label %bb8, label %bb13

bb2:                                              ; preds = %bb1
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %left, i32 0, i32 0
  %_11.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !5
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %left, i32 0, i32 1
  %_11.1 = load i64, i64* %7, align 8
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h441438c1ed994955E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %_9, [0 x i8]* nonnull align 1 %_11.0, i64 %_11.1, i64 8)
  br label %bb3

bb3:                                              ; preds = %bb2
  %8 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_9 to { [0 x i8]*, i64 }*
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0
  %l.0 = load [0 x i8]*, [0 x i8]** %9, align 8, !nonnull !5
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1
  %l.1 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_9, i32 0, i32 1
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0
  %r.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !5
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1
  %r.1 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %left, i32 0, i32 0
  store [0 x i8]* %r.0, [0 x i8]** %14, align 8
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %left, i32 0, i32 1
  store i64 %r.1, i64* %15, align 8
; call <rand::jitter::JitterRng as rand::Rng>::next_u64
  %_15 = call i64 @"_ZN53_$LT$rand..jitter..JitterRng$u20$as$u20$rand..Rng$GT$8next_u6417hd58f47b152c469bbE"(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self)
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb4
  %16 = bitcast [8 x i8]* %chunk to i64*
  store i64 %_15, i64* %16, align 1
  br label %bb6

bb6:                                              ; preds = %bb5
  %_19.0 = bitcast [8 x i8]* %chunk to [0 x i8]*
; call core::slice::<impl [T]>::copy_from_slice
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc56af2fc7d60c9c7E"([0 x i8]* nonnull align 1 %l.0, i64 %l.1, [0 x i8]* nonnull align 1 %_19.0, i64 8, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1288 to %"core::panic::location::Location"*))
  br label %bb1

bb13:                                             ; preds = %bb12, %bb7
  ret void

bb8:                                              ; preds = %bb7
; call <rand::jitter::JitterRng as rand::Rng>::next_u64
  %_28 = call i64 @"_ZN53_$LT$rand..jitter..JitterRng$u20$as$u20$rand..Rng$GT$8next_u6417hd58f47b152c469bbE"(%"jitter::JitterRng"* align 8 dereferenceable(2112) %self)
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb10

bb10:                                             ; preds = %bb9
  %17 = bitcast [8 x i8]* %chunk1 to i64*
  store i64 %_28, i64* %17, align 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %left, i32 0, i32 0
  %_31.0 = load [0 x i8]*, [0 x i8]** %18, align 8, !nonnull !5
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %left, i32 0, i32 1
  %_31.1 = load i64, i64* %19, align 8
  store i64 %_23.1, i64* %_36, align 8
  %20 = load i64, i64* %_36, align 8
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %21 = call { [0 x i8]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h9bbe67a29941766bE"([8 x i8]* align 1 dereferenceable(8) %chunk1, i64 %20, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1290 to %"core::panic::location::Location"*))
  %_34.0 = extractvalue { [0 x i8]*, i64 } %21, 0
  %_34.1 = extractvalue { [0 x i8]*, i64 } %21, 1
  br label %bb12

bb12:                                             ; preds = %bb11
; call core::slice::<impl [T]>::copy_from_slice
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc56af2fc7d60c9c7E"([0 x i8]* nonnull align 1 %_31.0, i64 %_31.1, [0 x i8]* nonnull align 1 %_34.0, i64 %_34.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1292 to %"core::panic::location::Location"*))
  br label %bb13
}

; rand::os::OsRng
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4rand2os5OsRng17hdda9848664f5837dE(i32 %_1) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  store i32 %_1, i32* %0, align 4
  %1 = load i32, i32* %0, align 4
  ret i32 %1
}

; rand::os::OsRng::new
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand2os5OsRng3new17hceba75d28a545496E(%"core::result::Result<os::OsRng, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<os::OsRng, std::io::error::Error>") dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_1 = alloca %"core::result::Result<os::imp::OsRng, std::io::error::Error>", align 8
; call rand::os::imp::OsRng::new
  call void @_ZN4rand2os3imp5OsRng3new17h383bfece8026c5dcE(%"core::result::Result<os::imp::OsRng, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<os::imp::OsRng, std::io::error::Error>") dereferenceable(24) %_1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::map
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h17dad6b525e9a273E"(%"core::result::Result<os::OsRng, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<os::OsRng, std::io::error::Error>") dereferenceable(24) %0, %"core::result::Result<os::imp::OsRng, std::io::error::Error>"* noalias nocapture dereferenceable(24) %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <rand::os::OsRng as rand::Rng>::next_u32
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN45_$LT$rand..os..OsRng$u20$as$u20$rand..Rng$GT$8next_u3217h3bf95afb92175ca5E"(i32* align 4 dereferenceable(4) %self) unnamed_addr #1 {
start:
; call <rand::os::imp::OsRng as rand::Rng>::next_u32
  %0 = call i32 @"_ZN50_$LT$rand..os..imp..OsRng$u20$as$u20$rand..Rng$GT$8next_u3217hc7bab887ffe19e2bE"(i32* align 4 dereferenceable(4) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <rand::os::OsRng as rand::Rng>::next_u64
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN45_$LT$rand..os..OsRng$u20$as$u20$rand..Rng$GT$8next_u6417h7d67102c7b326d5fE"(i32* align 4 dereferenceable(4) %self) unnamed_addr #1 {
start:
; call <rand::os::imp::OsRng as rand::Rng>::next_u64
  %0 = call i64 @"_ZN50_$LT$rand..os..imp..OsRng$u20$as$u20$rand..Rng$GT$8next_u6417h72145541dbb30070E"(i32* align 4 dereferenceable(4) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; <rand::os::OsRng as rand::Rng>::fill_bytes
; Function Attrs: nonlazybind uwtable
define void @"_ZN45_$LT$rand..os..OsRng$u20$as$u20$rand..Rng$GT$10fill_bytes17h222cab3a0fba7f12E"(i32* align 4 dereferenceable(4) %self, [0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #1 {
start:
; call <rand::os::imp::OsRng as rand::Rng>::fill_bytes
  call void @"_ZN50_$LT$rand..os..imp..OsRng$u20$as$u20$rand..Rng$GT$10fill_bytes17h7c938584badb7c78E"(i32* align 4 dereferenceable(4) %self, [0 x i8]* nonnull align 1 %v.0, i64 %v.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <rand::os::OsRng as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN52_$LT$rand..os..OsRng$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e4ea7280d5f898eE"(i32* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h039a7a01fe84f5c0E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc810 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc909 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_fmt
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; rand::os::next_u32
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN4rand2os8next_u3217h866ce734e800477aE({}* nonnull align 1 %fill_buf.0, [3 x i64]* align 8 dereferenceable(24) %fill_buf.1) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_9 = alloca [4 x i8], align 1
  %_5 = alloca { i8*, i64 }, align 8
  %buf = alloca [4 x i8], align 1
  %1 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 4, i1 false)
  %_6.0 = bitcast [4 x i8]* %buf to [0 x i8]*
  %2 = bitcast { i8*, i64 }* %_5 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_6.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 4, i64* %4, align 8
  %5 = bitcast [3 x i64]* %fill_buf.1 to void ({}*, [0 x i8]*, i64)**
  %6 = getelementptr inbounds void ({}*, [0 x i8]*, i64)*, void ({}*, [0 x i8]*, i64)** %5, i64 4
  %7 = load void ({}*, [0 x i8]*, i64)*, void ({}*, [0 x i8]*, i64)** %6, align 8, !invariant.load !5, !nonnull !5
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_5, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !5
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_5, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8* %9 to [0 x i8]*
  call void %7({}* align 1 %fill_buf.0, [0 x i8]* nonnull align 1 %12, i64 %11)
  br label %bb1

bb1:                                              ; preds = %start
  %13 = bitcast [4 x i8]* %_9 to i8*
  %14 = bitcast [4 x i8]* %buf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %14, i64 4, i1 false)
  %15 = bitcast i32* %0 to [4 x i8]*
  %16 = bitcast [4 x i8]* %15 to i8*
  %17 = bitcast [4 x i8]* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 4, i1 false)
  %18 = load i32, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %18
}

; rand::os::next_u64
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN4rand2os8next_u6417h2728f2746bd32565E({}* nonnull align 1 %fill_buf.0, [3 x i64]* align 8 dereferenceable(24) %fill_buf.1) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %_9 = alloca [8 x i8], align 1
  %_5 = alloca { i8*, i64 }, align 8
  %buf = alloca [8 x i8], align 1
  %1 = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 8, i1 false)
  %_6.0 = bitcast [8 x i8]* %buf to [0 x i8]*
  %2 = bitcast { i8*, i64 }* %_5 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_6.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 8, i64* %4, align 8
  %5 = bitcast [3 x i64]* %fill_buf.1 to void ({}*, [0 x i8]*, i64)**
  %6 = getelementptr inbounds void ({}*, [0 x i8]*, i64)*, void ({}*, [0 x i8]*, i64)** %5, i64 4
  %7 = load void ({}*, [0 x i8]*, i64)*, void ({}*, [0 x i8]*, i64)** %6, align 8, !invariant.load !5, !nonnull !5
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_5, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !5
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_5, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8* %9 to [0 x i8]*
  call void %7({}* align 1 %fill_buf.0, [0 x i8]* nonnull align 1 %12, i64 %11)
  br label %bb1

bb1:                                              ; preds = %start
  %13 = bitcast [8 x i8]* %_9 to i8*
  %14 = bitcast [8 x i8]* %buf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %14, i64 8, i1 false)
  %15 = bitcast i64* %0 to [8 x i8]*
  %16 = bitcast [8 x i8]* %15 to i8*
  %17 = bitcast [8 x i8]* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 8, i1 false)
  %18 = load i64, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %18
}

; rand::os::imp::getrandom
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN4rand2os3imp9getrandom17h0ff6871e68fc50bbE([0 x i8]* nonnull align 1 %buf.0, i64 %buf.1) unnamed_addr #1 {
start:
; call core::slice::<impl [T]>::as_mut_ptr
  %_2 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hdd357ff2825f8923E"([0 x i8]* nonnull align 1 %buf.0, i64 %buf.1)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = call i64 (i64, ...) @syscall(i64 318, i8* %_2, i64 %buf.1, i32 0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %0
}

; rand::os::imp::getrandom_fill_bytes
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4rand2os3imp20getrandom_fill_bytes17hc5f81f5c4bc9fb5eE([0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca i128, align 8
  %_30 = alloca i64*, align 8
  %_29 = alloca [1 x { i8*, i64* }], align 8
  %_22 = alloca %"core::fmt::Arguments", align 8
  %_19 = alloca i8, align 1
  %err = alloca %"std::io::error::Error", align 8
  %_13 = alloca i64, align 8
  %read = alloca i64, align 8
  store i64 0, i64* %read, align 8
  br label %bb1

bb1:                                              ; preds = %bb15, %bb13, %start
  %_6 = load i64, i64* %read, align 8
  %_5 = icmp ult i64 %_6, %v.1
  br i1 %_5, label %bb2, label %bb14

bb14:                                             ; preds = %bb1
  ret void

bb2:                                              ; preds = %bb1
  %_14 = load i64, i64* %read, align 8
  store i64 %_14, i64* %_13, align 8
  %2 = load i64, i64* %_13, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %3 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hf79677a6d6feda27E"([0 x i8]* nonnull align 1 %v.0, i64 %v.1, i64 %2, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1294 to %"core::panic::location::Location"*))
  %_11.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_11.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call rand::os::imp::getrandom
  %result = call i64 @_ZN4rand2os3imp9getrandom17h0ff6871e68fc50bbE([0 x i8]* nonnull align 1 %_11.0, i64 %_11.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 %result, -1
  br i1 %4, label %bb5, label %bb12

bb5:                                              ; preds = %bb4
; call std::io::error::Error::last_os_error
  %5 = call i128 @_ZN3std2io5error5Error13last_os_error17h779638a6450e6bd0E()
  store i128 %5, i128* %1, align 8
  %6 = bitcast %"std::io::error::Error"* %err to i8*
  %7 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false)
  br label %bb6

bb12:                                             ; preds = %bb4
  %8 = load i64, i64* %read, align 8
  %9 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %result)
  %_38.0 = extractvalue { i64, i1 } %9, 0
  %_38.1 = extractvalue { i64, i1 } %9, 1
  %10 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false)
  br i1 %10, label %panic, label %bb13

bb13:                                             ; preds = %bb12
  store i64 %_38.0, i64* %read, align 8
  br label %bb1

panic:                                            ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1296 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb5
; invoke std::io::error::Error::kind
  %11 = invoke i8 @_ZN3std2io5error5Error4kind17hda5ca5cb238715f7E(%"std::io::error::Error"* align 8 dereferenceable(16) %err)
          to label %bb7 unwind label %cleanup, !range !7

bb7:                                              ; preds = %bb6
  store i8 %11, i8* %_19, align 1
; invoke <std::io::error::ErrorKind as core::cmp::PartialEq>::eq
  %_17 = invoke zeroext i1 @"_ZN66_$LT$std..io..error..ErrorKind$u20$as$u20$core..cmp..PartialEq$GT$2eq17h14f36e102e00aa7aE"(i8* align 1 dereferenceable(1) %_19, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc796, i32 0, i32 0, i32 0))
          to label %bb8 unwind label %cleanup

bb16:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %err) #18
  br label %bb17

cleanup:                                          ; preds = %bb11, %bb10, %bb9, %bb7, %bb6
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb16

bb8:                                              ; preds = %bb7
  br i1 %_17, label %bb15, label %bb9

bb9:                                              ; preds = %bb8
  %17 = bitcast i64** %_30 to %"std::io::error::Error"**
  store %"std::io::error::Error"* %err, %"std::io::error::Error"** %17, align 8
  %_args = load i64*, i64** %_30, align 8, !nonnull !5
  %_34 = bitcast i64* %_args to %"std::io::error::Error"*
; invoke core::fmt::ArgumentV1::new
  %18 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0d700582d5bb27ceE(%"std::io::error::Error"* align 8 dereferenceable(16) %_34, i1 (%"std::io::error::Error"*, %"core::fmt::Formatter"*)* nonnull @"_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h02c1e5177fc0d670E")
          to label %bb10 unwind label %cleanup

bb15:                                             ; preds = %bb8
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %err)
  br label %bb1

bb10:                                             ; preds = %bb9
  %_33.0 = extractvalue { i8*, i64* } %18, 0
  %_33.1 = extractvalue { i8*, i64* } %18, 1
  %19 = bitcast [1 x { i8*, i64* }]* %_29 to { i8*, i64* }*
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %19, i32 0, i32 0
  store i8* %_33.0, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %19, i32 0, i32 1
  store i64* %_33.1, i64** %21, align 8
  %_26.0 = bitcast [1 x { i8*, i64* }]* %_29 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h039a7a01fe84f5c0E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_22, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc799 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_26.0, i64 1)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_22, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1298 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb11
  unreachable

bb17:                                             ; preds = %bb16
  %22 = bitcast { i8*, i32 }* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; rand::os::imp::is_getrandom_available
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN4rand2os3imp22is_getrandom_available17hb21ee6954e83e683E() unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
; call std::sync::once::Once::call_once
  call void @_ZN3std4sync4once4Once9call_once17ha93cfc54f414f6c0E(%"std::sync::once::Once"* align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN4rand2os3imp22is_getrandom_available7CHECKER17h6034d13e6a5db85cE to %"std::sync::once::Once"*))
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %0 = load i8, i8* %_7, align 1, !range !8
; call core::sync::atomic::AtomicBool::load
  %1 = call zeroext i1 @_ZN4core4sync6atomic10AtomicBool4load17hf71db528b2e9263eE(%"core::sync::atomic::AtomicBool"* align 1 dereferenceable(1) bitcast (<{ [1 x i8] }>* @_ZN4rand2os3imp22is_getrandom_available9AVAILABLE17h700982aff39333e5E to %"core::sync::atomic::AtomicBool"*), i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %1
}

; rand::os::imp::is_getrandom_available::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4rand2os3imp22is_getrandom_available28_$u7b$$u7b$closure$u7d$$u7d$17h355f1e1e4a635108E"() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca i128, align 8
  %_18 = alloca i8, align 1
  %_11 = alloca %"std::io::error::Error", align 8
  %err = alloca { i32, i32 }, align 4
  %available = alloca i8, align 1
  %buf = alloca [0 x i8], align 1
; call rand::os::imp::getrandom
  %result = call i64 @_ZN4rand2os3imp9getrandom17h0ff6871e68fc50bbE([0 x i8]* nonnull align 1 %buf, i64 0)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = icmp eq i64 %result, -1
  br i1 %2, label %bb2, label %bb6

bb2:                                              ; preds = %bb1
; call std::io::error::Error::last_os_error
  %3 = call i128 @_ZN3std2io5error5Error13last_os_error17h779638a6450e6bd0E()
  store i128 %3, i128* %1, align 8
  %4 = bitcast %"std::io::error::Error"* %_11 to i8*
  %5 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  br label %bb3

bb6:                                              ; preds = %bb1
  store i8 1, i8* %available, align 1
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  %6 = load i8, i8* %available, align 1, !range !4
  %_17 = trunc i8 %6 to i1
  store i8 0, i8* %_18, align 1
  %7 = load i8, i8* %_18, align 1, !range !8
; call core::sync::atomic::AtomicBool::store
  call void @_ZN4core4sync6atomic10AtomicBool5store17h0d5da10278a2810aE(%"core::sync::atomic::AtomicBool"* align 1 dereferenceable(1) bitcast (<{ [1 x i8] }>* @_ZN4rand2os3imp22is_getrandom_available9AVAILABLE17h700982aff39333e5E to %"core::sync::atomic::AtomicBool"*), i1 zeroext %_17, i8 %7)
  br label %bb8

bb3:                                              ; preds = %bb2
; invoke std::io::error::Error::raw_os_error
  %8 = invoke { i32, i32 } @_ZN3std2io5error5Error12raw_os_error17hcb90f52826ef5f6eE(%"std::io::error::Error"* align 8 dereferenceable(16) %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  store { i32, i32 } %8, { i32, i32 }* %err, align 4
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %_11)
  br label %bb5

bb9:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %_11) #18
  br label %bb10

cleanup:                                          ; preds = %bb3
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb5:                                              ; preds = %bb4
; call <core::option::Option<T> as core::cmp::PartialEq>::ne
  %20 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17h83fb84df4af1d8f6E"({ i32, i32 }* align 4 dereferenceable(8) %err, { i32, i32 }* align 4 dereferenceable(8) bitcast (<{ [8 x i8] }>* @alloc769 to { i32, i32 }*))
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %available, align 1
  br label %bb7

bb8:                                              ; preds = %bb7
  ret void
}

; rand::os::imp::OsRng::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4rand2os3imp5OsRng3new17h383bfece8026c5dcE(%"core::result::Result<os::imp::OsRng, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<os::imp::OsRng, std::io::error::Error>") dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %2 = alloca i128, align 8
  %_14 = alloca i8, align 1
  %_12 = alloca i32, align 4
  %_11 = alloca i32, align 4
  %_8 = alloca %"std::io::error::Error", align 8
  %_7 = alloca %"std::io::error::Error", align 8
  %err = alloca %"std::io::error::Error", align 8
  %_3 = alloca %"core::result::Result<std::fs::File, std::io::error::Error>", align 8
  %reader = alloca i32, align 4
  store i8 0, i8* %_14, align 1
; call rand::os::imp::is_getrandom_available
  %_1 = call zeroext i1 @_ZN4rand2os3imp22is_getrandom_available17hb21ee6954e83e683E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_1, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
; call std::fs::File::open
  call void @_ZN3std2fs4File4open17h127bb928f35db29aE(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %_3, [0 x i8]* nonnull align 1 bitcast (<{ [12 x i8] }>* @alloc1299 to [0 x i8]*), i64 12)
  br label %bb4

bb2:                                              ; preds = %bb1
  %3 = bitcast %"core::result::Result<os::imp::OsRng, std::io::error::Error>"* %0 to %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Ok", %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Ok"* %3, i32 0, i32 1
  store i32 -1, i32* %4, align 4
  %5 = bitcast %"core::result::Result<os::imp::OsRng, std::io::error::Error>"* %0 to i32*
  store i32 0, i32* %5, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8, %bb2
  ret void

bb4:                                              ; preds = %bb3
  %6 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %_3 to i32*
  %7 = load i32, i32* %6, align 8, !range !3
  %_4 = zext i32 %7 to i64
  switch i64 %_4, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %8 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %_3 to %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"*
  %9 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Ok", %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"* %8, i32 0, i32 1
  %val = load i32, i32* %9, align 4, !range !28
  store i8 1, i8* %_14, align 1
  store i32 %val, i32* %reader, align 4
  store i8 0, i8* %_14, align 1
  %_10 = load i32, i32* %reader, align 4, !range !28
; invoke rand::read::ReadRng<R>::new
  %reader_rng = invoke i32 @"_ZN4rand4read16ReadRng$LT$R$GT$3new17hb659c23667a62fc3E"(i32 %_10)
          to label %bb9 unwind label %cleanup, !range !28

bb5:                                              ; preds = %bb4
  %10 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %_3 to %"core::result::Result<std::fs::File, std::io::error::Error>::Err"*
  %11 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Err", %"core::result::Result<std::fs::File, std::io::error::Error>::Err"* %10, i32 0, i32 1
  %12 = bitcast %"std::io::error::Error"* %err to i8*
  %13 = bitcast %"std::io::error::Error"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  %14 = bitcast %"std::io::error::Error"* %_8 to i8*
  %15 = bitcast %"std::io::error::Error"* %err to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false)
  %16 = bitcast %"std::io::error::Error"* %_8 to i128*
  %17 = load i128, i128* %16, align 8
; call <T as core::convert::From<T>>::from
  %18 = call i128 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hf853c431f1ffdd9fE"(i128 %17)
  store i128 %18, i128* %2, align 8
  %19 = bitcast %"std::io::error::Error"* %_7 to i8*
  %20 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  br label %bb8

bb8:                                              ; preds = %bb5
  %21 = bitcast %"core::result::Result<os::imp::OsRng, std::io::error::Error>"* %0 to %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Err"*
  %22 = getelementptr inbounds %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Err", %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Err"* %21, i32 0, i32 1
  %23 = bitcast %"std::io::error::Error"* %22 to i8*
  %24 = bitcast %"std::io::error::Error"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = bitcast %"core::result::Result<os::imp::OsRng, std::io::error::Error>"* %0 to i32*
  store i32 1, i32* %25, align 8
  store i8 0, i8* %_14, align 1
  br label %bb10

bb9:                                              ; preds = %bb7
  store i32 %reader_rng, i32* %_12, align 4
  %26 = load i32, i32* %_12, align 4
  store i32 %26, i32* %_11, align 4
  %27 = bitcast %"core::result::Result<os::imp::OsRng, std::io::error::Error>"* %0 to %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Ok"*
  %28 = getelementptr inbounds %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Ok", %"core::result::Result<os::imp::OsRng, std::io::error::Error>::Ok"* %27, i32 0, i32 1
  %29 = load i32, i32* %_11, align 4
  store i32 %29, i32* %28, align 4
  %30 = bitcast %"core::result::Result<os::imp::OsRng, std::io::error::Error>"* %0 to i32*
  store i32 0, i32* %30, align 8
  store i8 0, i8* %_14, align 1
  br label %bb10

bb13:                                             ; preds = %cleanup
  %31 = load i8, i8* %_14, align 1, !range !4
  %32 = trunc i8 %31 to i1
  br i1 %32, label %bb12, label %bb11

cleanup:                                          ; preds = %bb7
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  %35 = extractvalue { i8*, i32 } %33, 1
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %34, i8** %36, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %35, i32* %37, align 8
  br label %bb13

bb11:                                             ; preds = %bb12, %bb13
  %38 = bitcast { i8*, i32 }* %1 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = insertvalue { i8*, i32 } undef, i8* %39, 0
  %43 = insertvalue { i8*, i32 } %42, i32 %41, 1
  resume { i8*, i32 } %43

bb12:                                             ; preds = %bb13
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17h28eca9aef3520b31E"(i32* %reader) #18
  br label %bb11
}

; <rand::os::imp::OsRng as rand::Rng>::next_u32
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN50_$LT$rand..os..imp..OsRng$u20$as$u20$rand..Rng$GT$8next_u3217hc7bab887ffe19e2bE"(i32* align 4 dereferenceable(4) %self) unnamed_addr #1 {
start:
  %_6 = alloca {}, align 1
  %0 = alloca i32, align 4
  %1 = load i32, i32* %self, align 4
  %2 = sub i32 %1, -1
  %3 = icmp eq i32 %2, 0
  %_2 = select i1 %3, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call rand::os::next_u32
  %4 = call i32 @_ZN4rand2os8next_u3217h866ce734e800477aE({}* nonnull align 1 %_6, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, [0 x i8] }>* @vtable.j to [3 x i64]*))
  store i32 %4, i32* %0, align 4
  br label %bb4

bb1:                                              ; preds = %start
; call <rand::read::ReadRng<R> as rand::Rng>::next_u32
  %5 = call i32 @"_ZN58_$LT$rand..read..ReadRng$LT$R$GT$$u20$as$u20$rand..Rng$GT$8next_u3217h4e1e4624bda6e405E"(i32* align 4 dereferenceable(4) %self)
  store i32 %5, i32* %0, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %6 = load i32, i32* %0, align 4
  ret i32 %6
}

; <rand::os::imp::OsRng as rand::Rng>::next_u64
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN50_$LT$rand..os..imp..OsRng$u20$as$u20$rand..Rng$GT$8next_u6417h72145541dbb30070E"(i32* align 4 dereferenceable(4) %self) unnamed_addr #1 {
start:
  %_6 = alloca {}, align 1
  %0 = alloca i64, align 8
  %1 = load i32, i32* %self, align 4
  %2 = sub i32 %1, -1
  %3 = icmp eq i32 %2, 0
  %_2 = select i1 %3, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call rand::os::next_u64
  %4 = call i64 @_ZN4rand2os8next_u6417h2728f2746bd32565E({}* nonnull align 1 %_6, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, [0 x i8] }>* @vtable.j to [3 x i64]*))
  store i64 %4, i64* %0, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call <rand::read::ReadRng<R> as rand::Rng>::next_u64
  %5 = call i64 @"_ZN58_$LT$rand..read..ReadRng$LT$R$GT$$u20$as$u20$rand..Rng$GT$8next_u6417heb318819587308f5E"(i32* align 4 dereferenceable(4) %self)
  store i64 %5, i64* %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %6 = load i64, i64* %0, align 8
  ret i64 %6
}

; <rand::os::imp::OsRng as rand::Rng>::fill_bytes
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$rand..os..imp..OsRng$u20$as$u20$rand..Rng$GT$10fill_bytes17h7c938584badb7c78E"(i32* align 4 dereferenceable(4) %self, [0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #1 {
start:
  %0 = load i32, i32* %self, align 4
  %1 = sub i32 %0, -1
  %2 = icmp eq i32 %1, 0
  %_3 = select i1 %2, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call rand::os::imp::getrandom_fill_bytes
  call void @_ZN4rand2os3imp20getrandom_fill_bytes17hc5f81f5c4bc9fb5eE([0 x i8]* nonnull align 1 %v.0, i64 %v.1)
  br label %bb4

bb1:                                              ; preds = %start
; call <rand::read::ReadRng<R> as rand::Rng>::fill_bytes
  call void @"_ZN58_$LT$rand..read..ReadRng$LT$R$GT$$u20$as$u20$rand..Rng$GT$10fill_bytes17h41a5757a1934c963E"(i32* align 4 dereferenceable(4) %self, [0 x i8]* nonnull align 1 %v.0, i64 %v.1)
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; rand::read::ReadRng<R>::new
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN4rand4read16ReadRng$LT$R$GT$3new17hb659c23667a62fc3E"(i32 %r) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  store i32 %r, i32* %0, align 4
  %1 = load i32, i32* %0, align 4, !range !28
  ret i32 %1
}

; <rand::read::ReadRng<R> as rand::Rng>::next_u32
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN58_$LT$rand..read..ReadRng$LT$R$GT$$u20$as$u20$rand..Rng$GT$8next_u3217h4e1e4624bda6e405E"(i32* align 4 dereferenceable(4) %self) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %buf = alloca [4 x i8], align 1
  %1 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 4, i1 false)
  %_5.0 = bitcast i32* %self to {}*
  %_8.0 = bitcast [4 x i8]* %buf to [0 x i8]*
; call rand::read::fill
  %2 = call i128 @_ZN4rand4read4fill17hf25ed9e95f024a5fE({}* nonnull align 1 %_5.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, [0 x i8] }>* @vtable.k to [3 x i64]*), [0 x i8]* nonnull align 1 %_8.0, i64 4)
  store i128 %2, i128* %0, align 8
  %3 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_4 to i8*
  %4 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_4 to i128*
  %6 = load i128, i128* %5, align 8
; call core::result::Result<T,E>::unwrap
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17ha8ebe8fa81ff70b7E"(i128 %6, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1315 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  %_13.0 = bitcast [4 x i8]* %buf to [0 x i8]*
; call core::slice::<impl [T]>::as_ptr
  %_12 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h252fb685f8fe6e14E"([0 x i8]* nonnull align 1 %_13.0, i64 4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_11 = bitcast i8* %_12 to i32*
  %7 = load i32, i32* %_11, align 4
  ret i32 %7
}

; <rand::read::ReadRng<R> as rand::Rng>::next_u64
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN58_$LT$rand..read..ReadRng$LT$R$GT$$u20$as$u20$rand..Rng$GT$8next_u6417heb318819587308f5E"(i32* align 4 dereferenceable(4) %self) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %buf = alloca [8 x i8], align 1
  %1 = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 8, i1 false)
  %_5.0 = bitcast i32* %self to {}*
  %_8.0 = bitcast [8 x i8]* %buf to [0 x i8]*
; call rand::read::fill
  %2 = call i128 @_ZN4rand4read4fill17hf25ed9e95f024a5fE({}* nonnull align 1 %_5.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, [0 x i8] }>* @vtable.k to [3 x i64]*), [0 x i8]* nonnull align 1 %_8.0, i64 8)
  store i128 %2, i128* %0, align 8
  %3 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_4 to i8*
  %4 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_4 to i128*
  %6 = load i128, i128* %5, align 8
; call core::result::Result<T,E>::unwrap
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17ha8ebe8fa81ff70b7E"(i128 %6, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1317 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  %_13.0 = bitcast [8 x i8]* %buf to [0 x i8]*
; call core::slice::<impl [T]>::as_ptr
  %_12 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h252fb685f8fe6e14E"([0 x i8]* nonnull align 1 %_13.0, i64 8)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_11 = bitcast i8* %_12 to i64*
  %7 = load i64, i64* %_11, align 8
  ret i64 %7
}

; <rand::read::ReadRng<R> as rand::Rng>::fill_bytes
; Function Attrs: nonlazybind uwtable
define void @"_ZN58_$LT$rand..read..ReadRng$LT$R$GT$$u20$as$u20$rand..Rng$GT$10fill_bytes17h41a5757a1934c963E"(i32* align 4 dereferenceable(4) %self, [0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_6 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %1 = icmp eq i64 %v.1, 0
  br i1 %1, label %bb3, label %bb1

bb3:                                              ; preds = %bb2, %start
  ret void

bb1:                                              ; preds = %start
  %_7.0 = bitcast i32* %self to {}*
; call rand::read::fill
  %2 = call i128 @_ZN4rand4read4fill17hf25ed9e95f024a5fE({}* nonnull align 1 %_7.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, [0 x i8] }>* @vtable.k to [3 x i64]*), [0 x i8]* nonnull align 1 %v.0, i64 %v.1)
  store i128 %2, i128* %0, align 8
  %3 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_6 to i8*
  %4 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_6 to i128*
  %6 = load i128, i128* %5, align 8
; call core::result::Result<T,E>::unwrap
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17ha8ebe8fa81ff70b7E"(i128 %6, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1319 to %"core::panic::location::Location"*))
  br label %bb3
}

; rand::read::fill
; Function Attrs: nonlazybind uwtable
define i128 @_ZN4rand4read4fill17hf25ed9e95f024a5fE({}* nonnull align 1 %r.0, [3 x i64]* align 8 dereferenceable(24) %r.1, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %2 = alloca i128, align 8
  %3 = alloca i128, align 8
  %_28 = alloca i64, align 8
  %_16 = alloca i8, align 1
  %_15 = alloca %"std::io::error::Error", align 8
  %_14 = alloca %"std::io::error::Error", align 8
  %_13 = alloca %"std::io::error::Error", align 8
  %err = alloca %"std::io::error::Error", align 8
  %_7 = alloca %"core::result::Result<usize, std::io::error::Error>", align 8
  %4 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %buf = alloca { [0 x i8]*, i64 }, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  store i64 %1, i64* %6, align 8
  br label %bb1

bb1:                                              ; preds = %bb12, %start
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_5.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !5
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_5.1 = load i64, i64* %8, align 8
  %_3 = icmp ugt i64 %_5.1, 0
  br i1 %_3, label %bb2, label %bb13

bb13:                                             ; preds = %bb1
  %9 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to i8*
  store i8 4, i8* %9, align 8
  br label %bb15

bb2:                                              ; preds = %bb1
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_9.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !5
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_9.1 = load i64, i64* %11, align 8
  %12 = bitcast [3 x i64]* %r.1 to void (%"core::result::Result<usize, std::io::error::Error>"*, {}*, [0 x i8]*, i64)**
  %13 = getelementptr inbounds void (%"core::result::Result<usize, std::io::error::Error>"*, {}*, [0 x i8]*, i64)*, void (%"core::result::Result<usize, std::io::error::Error>"*, {}*, [0 x i8]*, i64)** %12, i64 3
  %14 = load void (%"core::result::Result<usize, std::io::error::Error>"*, {}*, [0 x i8]*, i64)*, void (%"core::result::Result<usize, std::io::error::Error>"*, {}*, [0 x i8]*, i64)** %13, align 8, !invariant.load !5, !nonnull !5
  call void %14(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24) %_7, {}* align 1 %r.0, [0 x i8]* nonnull align 1 %_9.0, i64 %_9.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %15 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_7 to i64*
  %_10 = load i64, i64* %15, align 8, !range !2
  switch i64 %_10, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  %16 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_7 to %"core::result::Result<usize, std::io::error::Error>::Ok"*
  %17 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", %"core::result::Result<usize, std::io::error::Error>::Ok"* %16, i32 0, i32 1
  %val = load i64, i64* %17, align 8
  %18 = icmp eq i64 %val, 0
  br i1 %18, label %bb9, label %bb8

bb4:                                              ; preds = %bb3
  %19 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_7 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %20 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %19, i32 0, i32 1
  %21 = bitcast %"std::io::error::Error"* %err to i8*
  %22 = bitcast %"std::io::error::Error"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false)
  %23 = bitcast %"std::io::error::Error"* %_14 to i8*
  %24 = bitcast %"std::io::error::Error"* %err to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = bitcast %"std::io::error::Error"* %_14 to i128*
  %26 = load i128, i128* %25, align 8
; call <T as core::convert::From<T>>::from
  %27 = call i128 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hf853c431f1ffdd9fE"(i128 %26)
  store i128 %27, i128* %3, align 8
  %28 = bitcast %"std::io::error::Error"* %_13 to i8*
  %29 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4
  %30 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %31 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %30 to %"std::io::error::Error"*
  %32 = bitcast %"std::io::error::Error"* %31 to i8*
  %33 = bitcast %"std::io::error::Error"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false)
  br label %bb14

bb14:                                             ; preds = %bb10, %bb7
  br label %bb15

bb9:                                              ; preds = %bb6
  store i8 39, i8* %_16, align 1
  %34 = load i8, i8* %_16, align 1, !range !7
; call std::io::error::Error::new
  %35 = call i128 @_ZN3std2io5error5Error3new17h4c713b6c96b1194dE(i8 %34, [0 x i8]* nonnull align 1 bitcast (<{ [19 x i8] }>* @alloc1322 to [0 x i8]*), i64 19)
  store i128 %35, i128* %2, align 8
  %36 = bitcast %"std::io::error::Error"* %_15 to i8*
  %37 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false)
  br label %bb10

bb8:                                              ; preds = %bb6
; call core::mem::replace
  %38 = call { [0 x i8]*, i64 } @_ZN4core3mem7replace17hb2640474ed34b65eE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %buf, [0 x i8]* nonnull align 1 getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc909, i32 0, i32 0), i64 0)
  %_22.0 = extractvalue { [0 x i8]*, i64 } %38, 0
  %_22.1 = extractvalue { [0 x i8]*, i64 } %38, 1
  br label %bb11

bb11:                                             ; preds = %bb8
  store i64 %val, i64* %_28, align 8
  %39 = load i64, i64* %_28, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %40 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hf79677a6d6feda27E"([0 x i8]* nonnull align 1 %_22.0, i64 %_22.1, i64 %39, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1321 to %"core::panic::location::Location"*))
  %_20.0 = extractvalue { [0 x i8]*, i64 } %40, 0
  %_20.1 = extractvalue { [0 x i8]*, i64 } %40, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  store [0 x i8]* %_20.0, [0 x i8]** %41, align 8
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  store i64 %_20.1, i64* %42, align 8
  br label %bb1

bb10:                                             ; preds = %bb9
  %43 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %44 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %43 to %"std::io::error::Error"*
  %45 = bitcast %"std::io::error::Error"* %44 to i8*
  %46 = bitcast %"std::io::error::Error"* %_15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false)
  br label %bb14

bb15:                                             ; preds = %bb13, %bb14
  %47 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to i128*
  %48 = load i128, i128* %47, align 8
  ret i128 %48
}

; rand::reseeding::ReseedingRng<R,Rsdr>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4rand9reseeding28ReseedingRng$LT$R$C$Rsdr$GT$3new17hc4ba2614ea188e8cE"(%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* noalias nocapture sret(%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>") dereferenceable(4144) %0, %StdRng* noalias nocapture dereferenceable(4128) %rng, i64 %generation_threshold) unnamed_addr #1 {
start:
  %_4 = alloca %StdRng, align 8
  %1 = bitcast %StdRng* %_4 to i8*
  %2 = bitcast %StdRng* %rng to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 4128, i1 false)
  %3 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %0 to %StdRng*
  %4 = bitcast %StdRng* %3 to i8*
  %5 = bitcast %StdRng* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 4128, i1 false)
  %6 = getelementptr inbounds %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %0, i32 0, i32 2
  store i64 %generation_threshold, i64* %6, align 8
  %7 = getelementptr inbounds %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %0, i32 0, i32 3
  store i64 0, i64* %7, align 8
  %8 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %0 to %ThreadRngReseeder*
  ret void
}

; rand::reseeding::ReseedingRng<R,Rsdr>::reseed_if_necessary
; Function Attrs: nonlazybind uwtable
define void @"_ZN4rand9reseeding28ReseedingRng$LT$R$C$Rsdr$GT$19reseed_if_necessary17h165912017af1dda3E"(%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* align 8 dereferenceable(4144) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self, i32 0, i32 3
  %_3 = load i64, i64* %0, align 8
  %1 = getelementptr inbounds %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self, i32 0, i32 2
  %_4 = load i64, i64* %1, align 8
  %_2 = icmp uge i64 %_3, %_4
  br i1 %_2, label %bb1, label %bb3

bb3:                                              ; preds = %bb2, %start
  ret void

bb1:                                              ; preds = %start
  %_6 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self to %ThreadRngReseeder*
  %_8 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self to %StdRng*
; call <rand::ThreadRngReseeder as rand::reseeding::Reseeder<rand::StdRng>>::reseed
  call void @"_ZN89_$LT$rand..ThreadRngReseeder$u20$as$u20$rand..reseeding..Reseeder$LT$rand..StdRng$GT$$GT$6reseed17h53b51f048f540cbaE"(%ThreadRngReseeder* nonnull align 1 %_6, %StdRng* align 8 dereferenceable(4128) %_8)
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self, i32 0, i32 3
  store i64 0, i64* %2, align 8
  br label %bb3
}

; <rand::reseeding::ReseedingRng<R,Rsdr> as rand::Rng>::next_u32
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN75_$LT$rand..reseeding..ReseedingRng$LT$R$C$Rsdr$GT$$u20$as$u20$rand..Rng$GT$8next_u3217heea4a2391a77d56eE"(%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* align 8 dereferenceable(4144) %self) unnamed_addr #1 {
start:
; call rand::reseeding::ReseedingRng<R,Rsdr>::reseed_if_necessary
  call void @"_ZN4rand9reseeding28ReseedingRng$LT$R$C$Rsdr$GT$19reseed_if_necessary17h165912017af1dda3E"(%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* align 8 dereferenceable(4144) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self, i32 0, i32 3
  %1 = load i64, i64* %0, align 8
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %1, i64 4)
  %_4.0 = extractvalue { i64, i1 } %2, 0
  %_4.1 = extractvalue { i64, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %3, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %4 = getelementptr inbounds %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self, i32 0, i32 3
  store i64 %_4.0, i64* %4, align 8
  %_5 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self to %StdRng*
; call <rand::StdRng as rand::Rng>::next_u32
  %5 = call i32 @"_ZN42_$LT$rand..StdRng$u20$as$u20$rand..Rng$GT$8next_u3217hf67dd77c5c30a362E"(%StdRng* align 8 dereferenceable(4128) %_5)
  br label %bb3

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1324 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %bb2
  ret i32 %5
}

; <rand::reseeding::ReseedingRng<R,Rsdr> as rand::Rng>::next_u64
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN75_$LT$rand..reseeding..ReseedingRng$LT$R$C$Rsdr$GT$$u20$as$u20$rand..Rng$GT$8next_u6417h0b0cede3b47c7f2eE"(%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* align 8 dereferenceable(4144) %self) unnamed_addr #1 {
start:
; call rand::reseeding::ReseedingRng<R,Rsdr>::reseed_if_necessary
  call void @"_ZN4rand9reseeding28ReseedingRng$LT$R$C$Rsdr$GT$19reseed_if_necessary17h165912017af1dda3E"(%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* align 8 dereferenceable(4144) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self, i32 0, i32 3
  %1 = load i64, i64* %0, align 8
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %1, i64 8)
  %_4.0 = extractvalue { i64, i1 } %2, 0
  %_4.1 = extractvalue { i64, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %3, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %4 = getelementptr inbounds %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self, i32 0, i32 3
  store i64 %_4.0, i64* %4, align 8
  %_5 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self to %StdRng*
; call <rand::StdRng as rand::Rng>::next_u64
  %5 = call i64 @"_ZN42_$LT$rand..StdRng$u20$as$u20$rand..Rng$GT$8next_u6417h0929d785fbdbbed5E"(%StdRng* align 8 dereferenceable(4128) %_5)
  br label %bb3

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1326 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %bb2
  ret i64 %5
}

; <rand::reseeding::ReseedWithDefault as core::default::Default>::default
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$rand..reseeding..ReseedWithDefault$u20$as$u20$core..default..Default$GT$7default17hbca1348ab61da15dE"() unnamed_addr #1 {
start:
  ret void
}

; rand::rand_impls::<impl rand::Rand for u32>::rand
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4rand10rand_impls44_$LT$impl$u20$rand..Rand$u20$for$u20$u32$GT$4rand17h1fbc8cd43b7b364cE"(i64** align 8 dereferenceable(8) %rng) unnamed_addr #0 {
start:
; call <rand::ThreadRng as rand::Rng>::next_u32
  %0 = call i32 @"_ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217hb6ce7b7800a326bcE"(i64** align 8 dereferenceable(8) %rng)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; rand::prng::chacha::core
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4rand4prng6chacha4core17ha04c0844e456bb9dE([16 x i32]* align 4 dereferenceable(64) %output, [16 x i32]* align 4 dereferenceable(64) %input) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %_558 = alloca { i64, i64 }, align 8
  %iter1 = alloca { i64, i64 }, align 8
  %_556 = alloca { i64, i64 }, align 8
  %_550 = alloca i32, align 4
  %_533 = alloca i32, align 4
  %_516 = alloca i32, align 4
  %_499 = alloca i32, align 4
  %_482 = alloca i32, align 4
  %_465 = alloca i32, align 4
  %_448 = alloca i32, align 4
  %_431 = alloca i32, align 4
  %_414 = alloca i32, align 4
  %_397 = alloca i32, align 4
  %_380 = alloca i32, align 4
  %_363 = alloca i32, align 4
  %_346 = alloca i32, align 4
  %_329 = alloca i32, align 4
  %_312 = alloca i32, align 4
  %_295 = alloca i32, align 4
  %_278 = alloca i32, align 4
  %_261 = alloca i32, align 4
  %_244 = alloca i32, align 4
  %_227 = alloca i32, align 4
  %_210 = alloca i32, align 4
  %_193 = alloca i32, align 4
  %_176 = alloca i32, align 4
  %_159 = alloca i32, align 4
  %_142 = alloca i32, align 4
  %_125 = alloca i32, align 4
  %_108 = alloca i32, align 4
  %_91 = alloca i32, align 4
  %_74 = alloca i32, align 4
  %_57 = alloca i32, align 4
  %_40 = alloca i32, align 4
  %_23 = alloca i32, align 4
  %_7 = alloca { i32, i32 }, align 4
  %iter = alloca { i32, i32 }, align 4
  %_5 = alloca { i32, i32 }, align 4
  %_3 = alloca [16 x i32], align 4
  %32 = bitcast [16 x i32]* %_3 to i8*
  %33 = bitcast [16 x i32]* %input to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 64, i1 false)
  %34 = bitcast [16 x i32]* %output to i8*
  %35 = bitcast [16 x i32]* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 64, i1 false)
  %36 = bitcast { i32, i32 }* %_5 to i32*
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_5, i32 0, i32 1
  store i32 10, i32* %37, align 4
  %38 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_5, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_5, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %42 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4056f9a8e2ed9597E"(i32 %39, i32 %41)
  %_4.0 = extractvalue { i32, i32 } %42, 0
  %_4.1 = extractvalue { i32, i32 } %42, 1
  br label %bb1

bb1:                                              ; preds = %start
  %43 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 0
  store i32 %_4.0, i32* %43, align 4
  %44 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 1
  store i32 %_4.1, i32* %44, align 4
  br label %bb2

bb2:                                              ; preds = %bb102, %bb1
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %45 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hb9cffb0a5166f718E"({ i32, i32 }* align 4 dereferenceable(8) %iter)
  store { i32, i32 } %45, { i32, i32 }* %_7, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  %46 = bitcast { i32, i32 }* %_7 to i32*
  %47 = load i32, i32* %46, align 4, !range !3
  %_10 = zext i32 %47 to i64
  switch i64 %_10, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  %48 = bitcast { i64, i64 }* %_556 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_556, i32 0, i32 1
  store i64 16, i64* %49, align 8
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_556, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_556, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %54 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc104f0ebc962f0b4E"(i64 %51, i64 %53)
  %_555.0 = extractvalue { i64, i64 } %54, 0
  %_555.1 = extractvalue { i64, i64 } %54, 1
  br label %bb103

bb4:                                              ; preds = %bb3
  %55 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 0
  %_12 = load i32, i32* %55, align 4
  %56 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %_14 = load i32, i32* %56, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_11 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_12, i32 %_14)
  br label %bb7

bb7:                                              ; preds = %bb4
  %57 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 0
  store i32 %_11, i32* %57, align 4
  %58 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %_18 = load i32, i32* %58, align 4
  %59 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 0
  %_20 = load i32, i32* %59, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_17 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_18, i32 %_20)
  br label %bb8

bb8:                                              ; preds = %bb7
  %60 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  store i32 %_17, i32* %60, align 4
  %61 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %_25 = load i32, i32* %61, align 4
  %62 = call i32 @llvm.fshl.i32(i32 %_25, i32 %_25, i32 16)
  store i32 %62, i32* %0, align 4
  %63 = load i32, i32* %0, align 4
  br label %bb9

bb9:                                              ; preds = %bb8
  store i32 %63, i32* %_23, align 4
  %64 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %65 = load i32, i32* %_23, align 4
  store i32 %65, i32* %64, align 4
  %66 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 8
  %_29 = load i32, i32* %66, align 4
  %67 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %_31 = load i32, i32* %67, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_28 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_29, i32 %_31)
  br label %bb10

bb10:                                             ; preds = %bb9
  %68 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 8
  store i32 %_28, i32* %68, align 4
  %69 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %_35 = load i32, i32* %69, align 4
  %70 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 8
  %_37 = load i32, i32* %70, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_34 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_35, i32 %_37)
  br label %bb11

bb11:                                             ; preds = %bb10
  %71 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  store i32 %_34, i32* %71, align 4
  %72 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %_42 = load i32, i32* %72, align 4
  %73 = call i32 @llvm.fshl.i32(i32 %_42, i32 %_42, i32 12)
  store i32 %73, i32* %1, align 4
  %74 = load i32, i32* %1, align 4
  br label %bb12

bb12:                                             ; preds = %bb11
  store i32 %74, i32* %_40, align 4
  %75 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %76 = load i32, i32* %_40, align 4
  store i32 %76, i32* %75, align 4
  %77 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 0
  %_46 = load i32, i32* %77, align 4
  %78 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %_48 = load i32, i32* %78, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_45 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_46, i32 %_48)
  br label %bb13

bb13:                                             ; preds = %bb12
  %79 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 0
  store i32 %_45, i32* %79, align 4
  %80 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %_52 = load i32, i32* %80, align 4
  %81 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 0
  %_54 = load i32, i32* %81, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_51 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_52, i32 %_54)
  br label %bb14

bb14:                                             ; preds = %bb13
  %82 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  store i32 %_51, i32* %82, align 4
  %83 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %_59 = load i32, i32* %83, align 4
  %84 = call i32 @llvm.fshl.i32(i32 %_59, i32 %_59, i32 8)
  store i32 %84, i32* %2, align 4
  %85 = load i32, i32* %2, align 4
  br label %bb15

bb15:                                             ; preds = %bb14
  store i32 %85, i32* %_57, align 4
  %86 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %87 = load i32, i32* %_57, align 4
  store i32 %87, i32* %86, align 4
  %88 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 8
  %_63 = load i32, i32* %88, align 4
  %89 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %_65 = load i32, i32* %89, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_62 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_63, i32 %_65)
  br label %bb16

bb16:                                             ; preds = %bb15
  %90 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 8
  store i32 %_62, i32* %90, align 4
  %91 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %_69 = load i32, i32* %91, align 4
  %92 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 8
  %_71 = load i32, i32* %92, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_68 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_69, i32 %_71)
  br label %bb17

bb17:                                             ; preds = %bb16
  %93 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  store i32 %_68, i32* %93, align 4
  %94 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %_76 = load i32, i32* %94, align 4
  %95 = call i32 @llvm.fshl.i32(i32 %_76, i32 %_76, i32 7)
  store i32 %95, i32* %3, align 4
  %96 = load i32, i32* %3, align 4
  br label %bb18

bb18:                                             ; preds = %bb17
  store i32 %96, i32* %_74, align 4
  %97 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %98 = load i32, i32* %_74, align 4
  store i32 %98, i32* %97, align 4
  %99 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 1
  %_80 = load i32, i32* %99, align 4
  %100 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %_82 = load i32, i32* %100, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_79 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_80, i32 %_82)
  br label %bb19

bb19:                                             ; preds = %bb18
  %101 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 1
  store i32 %_79, i32* %101, align 4
  %102 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %_86 = load i32, i32* %102, align 4
  %103 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 1
  %_88 = load i32, i32* %103, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_85 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_86, i32 %_88)
  br label %bb20

bb20:                                             ; preds = %bb19
  %104 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  store i32 %_85, i32* %104, align 4
  %105 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %_93 = load i32, i32* %105, align 4
  %106 = call i32 @llvm.fshl.i32(i32 %_93, i32 %_93, i32 16)
  store i32 %106, i32* %4, align 4
  %107 = load i32, i32* %4, align 4
  br label %bb21

bb21:                                             ; preds = %bb20
  store i32 %107, i32* %_91, align 4
  %108 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %109 = load i32, i32* %_91, align 4
  store i32 %109, i32* %108, align 4
  %110 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 9
  %_97 = load i32, i32* %110, align 4
  %111 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %_99 = load i32, i32* %111, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_96 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_97, i32 %_99)
  br label %bb22

bb22:                                             ; preds = %bb21
  %112 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 9
  store i32 %_96, i32* %112, align 4
  %113 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %_103 = load i32, i32* %113, align 4
  %114 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 9
  %_105 = load i32, i32* %114, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_102 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_103, i32 %_105)
  br label %bb23

bb23:                                             ; preds = %bb22
  %115 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  store i32 %_102, i32* %115, align 4
  %116 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %_110 = load i32, i32* %116, align 4
  %117 = call i32 @llvm.fshl.i32(i32 %_110, i32 %_110, i32 12)
  store i32 %117, i32* %5, align 4
  %118 = load i32, i32* %5, align 4
  br label %bb24

bb24:                                             ; preds = %bb23
  store i32 %118, i32* %_108, align 4
  %119 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %120 = load i32, i32* %_108, align 4
  store i32 %120, i32* %119, align 4
  %121 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 1
  %_114 = load i32, i32* %121, align 4
  %122 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %_116 = load i32, i32* %122, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_113 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_114, i32 %_116)
  br label %bb25

bb25:                                             ; preds = %bb24
  %123 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 1
  store i32 %_113, i32* %123, align 4
  %124 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %_120 = load i32, i32* %124, align 4
  %125 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 1
  %_122 = load i32, i32* %125, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_119 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_120, i32 %_122)
  br label %bb26

bb26:                                             ; preds = %bb25
  %126 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  store i32 %_119, i32* %126, align 4
  %127 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %_127 = load i32, i32* %127, align 4
  %128 = call i32 @llvm.fshl.i32(i32 %_127, i32 %_127, i32 8)
  store i32 %128, i32* %6, align 4
  %129 = load i32, i32* %6, align 4
  br label %bb27

bb27:                                             ; preds = %bb26
  store i32 %129, i32* %_125, align 4
  %130 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %131 = load i32, i32* %_125, align 4
  store i32 %131, i32* %130, align 4
  %132 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 9
  %_131 = load i32, i32* %132, align 4
  %133 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %_133 = load i32, i32* %133, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_130 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_131, i32 %_133)
  br label %bb28

bb28:                                             ; preds = %bb27
  %134 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 9
  store i32 %_130, i32* %134, align 4
  %135 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %_137 = load i32, i32* %135, align 4
  %136 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 9
  %_139 = load i32, i32* %136, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_136 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_137, i32 %_139)
  br label %bb29

bb29:                                             ; preds = %bb28
  %137 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  store i32 %_136, i32* %137, align 4
  %138 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %_144 = load i32, i32* %138, align 4
  %139 = call i32 @llvm.fshl.i32(i32 %_144, i32 %_144, i32 7)
  store i32 %139, i32* %7, align 4
  %140 = load i32, i32* %7, align 4
  br label %bb30

bb30:                                             ; preds = %bb29
  store i32 %140, i32* %_142, align 4
  %141 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %142 = load i32, i32* %_142, align 4
  store i32 %142, i32* %141, align 4
  %143 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 2
  %_148 = load i32, i32* %143, align 4
  %144 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %_150 = load i32, i32* %144, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_147 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_148, i32 %_150)
  br label %bb31

bb31:                                             ; preds = %bb30
  %145 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 2
  store i32 %_147, i32* %145, align 4
  %146 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %_154 = load i32, i32* %146, align 4
  %147 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 2
  %_156 = load i32, i32* %147, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_153 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_154, i32 %_156)
  br label %bb32

bb32:                                             ; preds = %bb31
  %148 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  store i32 %_153, i32* %148, align 4
  %149 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %_161 = load i32, i32* %149, align 4
  %150 = call i32 @llvm.fshl.i32(i32 %_161, i32 %_161, i32 16)
  store i32 %150, i32* %8, align 4
  %151 = load i32, i32* %8, align 4
  br label %bb33

bb33:                                             ; preds = %bb32
  store i32 %151, i32* %_159, align 4
  %152 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %153 = load i32, i32* %_159, align 4
  store i32 %153, i32* %152, align 4
  %154 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 10
  %_165 = load i32, i32* %154, align 4
  %155 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %_167 = load i32, i32* %155, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_164 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_165, i32 %_167)
  br label %bb34

bb34:                                             ; preds = %bb33
  %156 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 10
  store i32 %_164, i32* %156, align 4
  %157 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %_171 = load i32, i32* %157, align 4
  %158 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 10
  %_173 = load i32, i32* %158, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_170 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_171, i32 %_173)
  br label %bb35

bb35:                                             ; preds = %bb34
  %159 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  store i32 %_170, i32* %159, align 4
  %160 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %_178 = load i32, i32* %160, align 4
  %161 = call i32 @llvm.fshl.i32(i32 %_178, i32 %_178, i32 12)
  store i32 %161, i32* %9, align 4
  %162 = load i32, i32* %9, align 4
  br label %bb36

bb36:                                             ; preds = %bb35
  store i32 %162, i32* %_176, align 4
  %163 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %164 = load i32, i32* %_176, align 4
  store i32 %164, i32* %163, align 4
  %165 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 2
  %_182 = load i32, i32* %165, align 4
  %166 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %_184 = load i32, i32* %166, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_181 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_182, i32 %_184)
  br label %bb37

bb37:                                             ; preds = %bb36
  %167 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 2
  store i32 %_181, i32* %167, align 4
  %168 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %_188 = load i32, i32* %168, align 4
  %169 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 2
  %_190 = load i32, i32* %169, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_187 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_188, i32 %_190)
  br label %bb38

bb38:                                             ; preds = %bb37
  %170 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  store i32 %_187, i32* %170, align 4
  %171 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %_195 = load i32, i32* %171, align 4
  %172 = call i32 @llvm.fshl.i32(i32 %_195, i32 %_195, i32 8)
  store i32 %172, i32* %10, align 4
  %173 = load i32, i32* %10, align 4
  br label %bb39

bb39:                                             ; preds = %bb38
  store i32 %173, i32* %_193, align 4
  %174 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %175 = load i32, i32* %_193, align 4
  store i32 %175, i32* %174, align 4
  %176 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 10
  %_199 = load i32, i32* %176, align 4
  %177 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %_201 = load i32, i32* %177, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_198 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_199, i32 %_201)
  br label %bb40

bb40:                                             ; preds = %bb39
  %178 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 10
  store i32 %_198, i32* %178, align 4
  %179 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %_205 = load i32, i32* %179, align 4
  %180 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 10
  %_207 = load i32, i32* %180, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_204 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_205, i32 %_207)
  br label %bb41

bb41:                                             ; preds = %bb40
  %181 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  store i32 %_204, i32* %181, align 4
  %182 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %_212 = load i32, i32* %182, align 4
  %183 = call i32 @llvm.fshl.i32(i32 %_212, i32 %_212, i32 7)
  store i32 %183, i32* %11, align 4
  %184 = load i32, i32* %11, align 4
  br label %bb42

bb42:                                             ; preds = %bb41
  store i32 %184, i32* %_210, align 4
  %185 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %186 = load i32, i32* %_210, align 4
  store i32 %186, i32* %185, align 4
  %187 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 3
  %_216 = load i32, i32* %187, align 4
  %188 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %_218 = load i32, i32* %188, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_215 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_216, i32 %_218)
  br label %bb43

bb43:                                             ; preds = %bb42
  %189 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 3
  store i32 %_215, i32* %189, align 4
  %190 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %_222 = load i32, i32* %190, align 4
  %191 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 3
  %_224 = load i32, i32* %191, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_221 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_222, i32 %_224)
  br label %bb44

bb44:                                             ; preds = %bb43
  %192 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  store i32 %_221, i32* %192, align 4
  %193 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %_229 = load i32, i32* %193, align 4
  %194 = call i32 @llvm.fshl.i32(i32 %_229, i32 %_229, i32 16)
  store i32 %194, i32* %12, align 4
  %195 = load i32, i32* %12, align 4
  br label %bb45

bb45:                                             ; preds = %bb44
  store i32 %195, i32* %_227, align 4
  %196 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %197 = load i32, i32* %_227, align 4
  store i32 %197, i32* %196, align 4
  %198 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 11
  %_233 = load i32, i32* %198, align 4
  %199 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %_235 = load i32, i32* %199, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_232 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_233, i32 %_235)
  br label %bb46

bb46:                                             ; preds = %bb45
  %200 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 11
  store i32 %_232, i32* %200, align 4
  %201 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %_239 = load i32, i32* %201, align 4
  %202 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 11
  %_241 = load i32, i32* %202, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_238 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_239, i32 %_241)
  br label %bb47

bb47:                                             ; preds = %bb46
  %203 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  store i32 %_238, i32* %203, align 4
  %204 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %_246 = load i32, i32* %204, align 4
  %205 = call i32 @llvm.fshl.i32(i32 %_246, i32 %_246, i32 12)
  store i32 %205, i32* %13, align 4
  %206 = load i32, i32* %13, align 4
  br label %bb48

bb48:                                             ; preds = %bb47
  store i32 %206, i32* %_244, align 4
  %207 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %208 = load i32, i32* %_244, align 4
  store i32 %208, i32* %207, align 4
  %209 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 3
  %_250 = load i32, i32* %209, align 4
  %210 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %_252 = load i32, i32* %210, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_249 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_250, i32 %_252)
  br label %bb49

bb49:                                             ; preds = %bb48
  %211 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 3
  store i32 %_249, i32* %211, align 4
  %212 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %_256 = load i32, i32* %212, align 4
  %213 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 3
  %_258 = load i32, i32* %213, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_255 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_256, i32 %_258)
  br label %bb50

bb50:                                             ; preds = %bb49
  %214 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  store i32 %_255, i32* %214, align 4
  %215 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %_263 = load i32, i32* %215, align 4
  %216 = call i32 @llvm.fshl.i32(i32 %_263, i32 %_263, i32 8)
  store i32 %216, i32* %14, align 4
  %217 = load i32, i32* %14, align 4
  br label %bb51

bb51:                                             ; preds = %bb50
  store i32 %217, i32* %_261, align 4
  %218 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %219 = load i32, i32* %_261, align 4
  store i32 %219, i32* %218, align 4
  %220 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 11
  %_267 = load i32, i32* %220, align 4
  %221 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %_269 = load i32, i32* %221, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_266 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_267, i32 %_269)
  br label %bb52

bb52:                                             ; preds = %bb51
  %222 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 11
  store i32 %_266, i32* %222, align 4
  %223 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %_273 = load i32, i32* %223, align 4
  %224 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 11
  %_275 = load i32, i32* %224, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_272 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_273, i32 %_275)
  br label %bb53

bb53:                                             ; preds = %bb52
  %225 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  store i32 %_272, i32* %225, align 4
  %226 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %_280 = load i32, i32* %226, align 4
  %227 = call i32 @llvm.fshl.i32(i32 %_280, i32 %_280, i32 7)
  store i32 %227, i32* %15, align 4
  %228 = load i32, i32* %15, align 4
  br label %bb54

bb54:                                             ; preds = %bb53
  store i32 %228, i32* %_278, align 4
  %229 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %230 = load i32, i32* %_278, align 4
  store i32 %230, i32* %229, align 4
  %231 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 0
  %_284 = load i32, i32* %231, align 4
  %232 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %_286 = load i32, i32* %232, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_283 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_284, i32 %_286)
  br label %bb55

bb55:                                             ; preds = %bb54
  %233 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 0
  store i32 %_283, i32* %233, align 4
  %234 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %_290 = load i32, i32* %234, align 4
  %235 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 0
  %_292 = load i32, i32* %235, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_289 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_290, i32 %_292)
  br label %bb56

bb56:                                             ; preds = %bb55
  %236 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  store i32 %_289, i32* %236, align 4
  %237 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %_297 = load i32, i32* %237, align 4
  %238 = call i32 @llvm.fshl.i32(i32 %_297, i32 %_297, i32 16)
  store i32 %238, i32* %16, align 4
  %239 = load i32, i32* %16, align 4
  br label %bb57

bb57:                                             ; preds = %bb56
  store i32 %239, i32* %_295, align 4
  %240 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %241 = load i32, i32* %_295, align 4
  store i32 %241, i32* %240, align 4
  %242 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 10
  %_301 = load i32, i32* %242, align 4
  %243 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %_303 = load i32, i32* %243, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_300 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_301, i32 %_303)
  br label %bb58

bb58:                                             ; preds = %bb57
  %244 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 10
  store i32 %_300, i32* %244, align 4
  %245 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %_307 = load i32, i32* %245, align 4
  %246 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 10
  %_309 = load i32, i32* %246, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_306 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_307, i32 %_309)
  br label %bb59

bb59:                                             ; preds = %bb58
  %247 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  store i32 %_306, i32* %247, align 4
  %248 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %_314 = load i32, i32* %248, align 4
  %249 = call i32 @llvm.fshl.i32(i32 %_314, i32 %_314, i32 12)
  store i32 %249, i32* %17, align 4
  %250 = load i32, i32* %17, align 4
  br label %bb60

bb60:                                             ; preds = %bb59
  store i32 %250, i32* %_312, align 4
  %251 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %252 = load i32, i32* %_312, align 4
  store i32 %252, i32* %251, align 4
  %253 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 0
  %_318 = load i32, i32* %253, align 4
  %254 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %_320 = load i32, i32* %254, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_317 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_318, i32 %_320)
  br label %bb61

bb61:                                             ; preds = %bb60
  %255 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 0
  store i32 %_317, i32* %255, align 4
  %256 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %_324 = load i32, i32* %256, align 4
  %257 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 0
  %_326 = load i32, i32* %257, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_323 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_324, i32 %_326)
  br label %bb62

bb62:                                             ; preds = %bb61
  %258 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  store i32 %_323, i32* %258, align 4
  %259 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %_331 = load i32, i32* %259, align 4
  %260 = call i32 @llvm.fshl.i32(i32 %_331, i32 %_331, i32 8)
  store i32 %260, i32* %18, align 4
  %261 = load i32, i32* %18, align 4
  br label %bb63

bb63:                                             ; preds = %bb62
  store i32 %261, i32* %_329, align 4
  %262 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %263 = load i32, i32* %_329, align 4
  store i32 %263, i32* %262, align 4
  %264 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 10
  %_335 = load i32, i32* %264, align 4
  %265 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 15
  %_337 = load i32, i32* %265, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_334 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_335, i32 %_337)
  br label %bb64

bb64:                                             ; preds = %bb63
  %266 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 10
  store i32 %_334, i32* %266, align 4
  %267 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %_341 = load i32, i32* %267, align 4
  %268 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 10
  %_343 = load i32, i32* %268, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_340 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_341, i32 %_343)
  br label %bb65

bb65:                                             ; preds = %bb64
  %269 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  store i32 %_340, i32* %269, align 4
  %270 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %_348 = load i32, i32* %270, align 4
  %271 = call i32 @llvm.fshl.i32(i32 %_348, i32 %_348, i32 7)
  store i32 %271, i32* %19, align 4
  %272 = load i32, i32* %19, align 4
  br label %bb66

bb66:                                             ; preds = %bb65
  store i32 %272, i32* %_346, align 4
  %273 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 5
  %274 = load i32, i32* %_346, align 4
  store i32 %274, i32* %273, align 4
  %275 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 1
  %_352 = load i32, i32* %275, align 4
  %276 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %_354 = load i32, i32* %276, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_351 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_352, i32 %_354)
  br label %bb67

bb67:                                             ; preds = %bb66
  %277 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 1
  store i32 %_351, i32* %277, align 4
  %278 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %_358 = load i32, i32* %278, align 4
  %279 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 1
  %_360 = load i32, i32* %279, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_357 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_358, i32 %_360)
  br label %bb68

bb68:                                             ; preds = %bb67
  %280 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  store i32 %_357, i32* %280, align 4
  %281 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %_365 = load i32, i32* %281, align 4
  %282 = call i32 @llvm.fshl.i32(i32 %_365, i32 %_365, i32 16)
  store i32 %282, i32* %20, align 4
  %283 = load i32, i32* %20, align 4
  br label %bb69

bb69:                                             ; preds = %bb68
  store i32 %283, i32* %_363, align 4
  %284 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %285 = load i32, i32* %_363, align 4
  store i32 %285, i32* %284, align 4
  %286 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 11
  %_369 = load i32, i32* %286, align 4
  %287 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %_371 = load i32, i32* %287, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_368 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_369, i32 %_371)
  br label %bb70

bb70:                                             ; preds = %bb69
  %288 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 11
  store i32 %_368, i32* %288, align 4
  %289 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %_375 = load i32, i32* %289, align 4
  %290 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 11
  %_377 = load i32, i32* %290, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_374 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_375, i32 %_377)
  br label %bb71

bb71:                                             ; preds = %bb70
  %291 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  store i32 %_374, i32* %291, align 4
  %292 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %_382 = load i32, i32* %292, align 4
  %293 = call i32 @llvm.fshl.i32(i32 %_382, i32 %_382, i32 12)
  store i32 %293, i32* %21, align 4
  %294 = load i32, i32* %21, align 4
  br label %bb72

bb72:                                             ; preds = %bb71
  store i32 %294, i32* %_380, align 4
  %295 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %296 = load i32, i32* %_380, align 4
  store i32 %296, i32* %295, align 4
  %297 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 1
  %_386 = load i32, i32* %297, align 4
  %298 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %_388 = load i32, i32* %298, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_385 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_386, i32 %_388)
  br label %bb73

bb73:                                             ; preds = %bb72
  %299 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 1
  store i32 %_385, i32* %299, align 4
  %300 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %_392 = load i32, i32* %300, align 4
  %301 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 1
  %_394 = load i32, i32* %301, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_391 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_392, i32 %_394)
  br label %bb74

bb74:                                             ; preds = %bb73
  %302 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  store i32 %_391, i32* %302, align 4
  %303 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %_399 = load i32, i32* %303, align 4
  %304 = call i32 @llvm.fshl.i32(i32 %_399, i32 %_399, i32 8)
  store i32 %304, i32* %22, align 4
  %305 = load i32, i32* %22, align 4
  br label %bb75

bb75:                                             ; preds = %bb74
  store i32 %305, i32* %_397, align 4
  %306 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %307 = load i32, i32* %_397, align 4
  store i32 %307, i32* %306, align 4
  %308 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 11
  %_403 = load i32, i32* %308, align 4
  %309 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 12
  %_405 = load i32, i32* %309, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_402 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_403, i32 %_405)
  br label %bb76

bb76:                                             ; preds = %bb75
  %310 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 11
  store i32 %_402, i32* %310, align 4
  %311 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %_409 = load i32, i32* %311, align 4
  %312 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 11
  %_411 = load i32, i32* %312, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_408 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_409, i32 %_411)
  br label %bb77

bb77:                                             ; preds = %bb76
  %313 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  store i32 %_408, i32* %313, align 4
  %314 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %_416 = load i32, i32* %314, align 4
  %315 = call i32 @llvm.fshl.i32(i32 %_416, i32 %_416, i32 7)
  store i32 %315, i32* %23, align 4
  %316 = load i32, i32* %23, align 4
  br label %bb78

bb78:                                             ; preds = %bb77
  store i32 %316, i32* %_414, align 4
  %317 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 6
  %318 = load i32, i32* %_414, align 4
  store i32 %318, i32* %317, align 4
  %319 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 2
  %_420 = load i32, i32* %319, align 4
  %320 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %_422 = load i32, i32* %320, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_419 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_420, i32 %_422)
  br label %bb79

bb79:                                             ; preds = %bb78
  %321 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 2
  store i32 %_419, i32* %321, align 4
  %322 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %_426 = load i32, i32* %322, align 4
  %323 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 2
  %_428 = load i32, i32* %323, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_425 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_426, i32 %_428)
  br label %bb80

bb80:                                             ; preds = %bb79
  %324 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  store i32 %_425, i32* %324, align 4
  %325 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %_433 = load i32, i32* %325, align 4
  %326 = call i32 @llvm.fshl.i32(i32 %_433, i32 %_433, i32 16)
  store i32 %326, i32* %24, align 4
  %327 = load i32, i32* %24, align 4
  br label %bb81

bb81:                                             ; preds = %bb80
  store i32 %327, i32* %_431, align 4
  %328 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %329 = load i32, i32* %_431, align 4
  store i32 %329, i32* %328, align 4
  %330 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 8
  %_437 = load i32, i32* %330, align 4
  %331 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %_439 = load i32, i32* %331, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_436 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_437, i32 %_439)
  br label %bb82

bb82:                                             ; preds = %bb81
  %332 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 8
  store i32 %_436, i32* %332, align 4
  %333 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %_443 = load i32, i32* %333, align 4
  %334 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 8
  %_445 = load i32, i32* %334, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_442 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_443, i32 %_445)
  br label %bb83

bb83:                                             ; preds = %bb82
  %335 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  store i32 %_442, i32* %335, align 4
  %336 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %_450 = load i32, i32* %336, align 4
  %337 = call i32 @llvm.fshl.i32(i32 %_450, i32 %_450, i32 12)
  store i32 %337, i32* %25, align 4
  %338 = load i32, i32* %25, align 4
  br label %bb84

bb84:                                             ; preds = %bb83
  store i32 %338, i32* %_448, align 4
  %339 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %340 = load i32, i32* %_448, align 4
  store i32 %340, i32* %339, align 4
  %341 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 2
  %_454 = load i32, i32* %341, align 4
  %342 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %_456 = load i32, i32* %342, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_453 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_454, i32 %_456)
  br label %bb85

bb85:                                             ; preds = %bb84
  %343 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 2
  store i32 %_453, i32* %343, align 4
  %344 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %_460 = load i32, i32* %344, align 4
  %345 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 2
  %_462 = load i32, i32* %345, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_459 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_460, i32 %_462)
  br label %bb86

bb86:                                             ; preds = %bb85
  %346 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  store i32 %_459, i32* %346, align 4
  %347 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %_467 = load i32, i32* %347, align 4
  %348 = call i32 @llvm.fshl.i32(i32 %_467, i32 %_467, i32 8)
  store i32 %348, i32* %26, align 4
  %349 = load i32, i32* %26, align 4
  br label %bb87

bb87:                                             ; preds = %bb86
  store i32 %349, i32* %_465, align 4
  %350 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %351 = load i32, i32* %_465, align 4
  store i32 %351, i32* %350, align 4
  %352 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 8
  %_471 = load i32, i32* %352, align 4
  %353 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 13
  %_473 = load i32, i32* %353, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_470 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_471, i32 %_473)
  br label %bb88

bb88:                                             ; preds = %bb87
  %354 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 8
  store i32 %_470, i32* %354, align 4
  %355 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %_477 = load i32, i32* %355, align 4
  %356 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 8
  %_479 = load i32, i32* %356, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_476 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_477, i32 %_479)
  br label %bb89

bb89:                                             ; preds = %bb88
  %357 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  store i32 %_476, i32* %357, align 4
  %358 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %_484 = load i32, i32* %358, align 4
  %359 = call i32 @llvm.fshl.i32(i32 %_484, i32 %_484, i32 7)
  store i32 %359, i32* %27, align 4
  %360 = load i32, i32* %27, align 4
  br label %bb90

bb90:                                             ; preds = %bb89
  store i32 %360, i32* %_482, align 4
  %361 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 7
  %362 = load i32, i32* %_482, align 4
  store i32 %362, i32* %361, align 4
  %363 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 3
  %_488 = load i32, i32* %363, align 4
  %364 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %_490 = load i32, i32* %364, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_487 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_488, i32 %_490)
  br label %bb91

bb91:                                             ; preds = %bb90
  %365 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 3
  store i32 %_487, i32* %365, align 4
  %366 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %_494 = load i32, i32* %366, align 4
  %367 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 3
  %_496 = load i32, i32* %367, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_493 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_494, i32 %_496)
  br label %bb92

bb92:                                             ; preds = %bb91
  %368 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  store i32 %_493, i32* %368, align 4
  %369 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %_501 = load i32, i32* %369, align 4
  %370 = call i32 @llvm.fshl.i32(i32 %_501, i32 %_501, i32 16)
  store i32 %370, i32* %28, align 4
  %371 = load i32, i32* %28, align 4
  br label %bb93

bb93:                                             ; preds = %bb92
  store i32 %371, i32* %_499, align 4
  %372 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %373 = load i32, i32* %_499, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 9
  %_505 = load i32, i32* %374, align 4
  %375 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %_507 = load i32, i32* %375, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_504 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_505, i32 %_507)
  br label %bb94

bb94:                                             ; preds = %bb93
  %376 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 9
  store i32 %_504, i32* %376, align 4
  %377 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %_511 = load i32, i32* %377, align 4
  %378 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 9
  %_513 = load i32, i32* %378, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_510 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_511, i32 %_513)
  br label %bb95

bb95:                                             ; preds = %bb94
  %379 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  store i32 %_510, i32* %379, align 4
  %380 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %_518 = load i32, i32* %380, align 4
  %381 = call i32 @llvm.fshl.i32(i32 %_518, i32 %_518, i32 12)
  store i32 %381, i32* %29, align 4
  %382 = load i32, i32* %29, align 4
  br label %bb96

bb96:                                             ; preds = %bb95
  store i32 %382, i32* %_516, align 4
  %383 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %384 = load i32, i32* %_516, align 4
  store i32 %384, i32* %383, align 4
  %385 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 3
  %_522 = load i32, i32* %385, align 4
  %386 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %_524 = load i32, i32* %386, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_521 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_522, i32 %_524)
  br label %bb97

bb97:                                             ; preds = %bb96
  %387 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 3
  store i32 %_521, i32* %387, align 4
  %388 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %_528 = load i32, i32* %388, align 4
  %389 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 3
  %_530 = load i32, i32* %389, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_527 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_528, i32 %_530)
  br label %bb98

bb98:                                             ; preds = %bb97
  %390 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  store i32 %_527, i32* %390, align 4
  %391 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %_535 = load i32, i32* %391, align 4
  %392 = call i32 @llvm.fshl.i32(i32 %_535, i32 %_535, i32 8)
  store i32 %392, i32* %30, align 4
  %393 = load i32, i32* %30, align 4
  br label %bb99

bb99:                                             ; preds = %bb98
  store i32 %393, i32* %_533, align 4
  %394 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %395 = load i32, i32* %_533, align 4
  store i32 %395, i32* %394, align 4
  %396 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 9
  %_539 = load i32, i32* %396, align 4
  %397 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 14
  %_541 = load i32, i32* %397, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_538 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_539, i32 %_541)
  br label %bb100

bb100:                                            ; preds = %bb99
  %398 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 9
  store i32 %_538, i32* %398, align 4
  %399 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %_545 = load i32, i32* %399, align 4
  %400 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 9
  %_547 = load i32, i32* %400, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_544 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_545, i32 %_547)
  br label %bb101

bb101:                                            ; preds = %bb100
  %401 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  store i32 %_544, i32* %401, align 4
  %402 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %_552 = load i32, i32* %402, align 4
  %403 = call i32 @llvm.fshl.i32(i32 %_552, i32 %_552, i32 7)
  store i32 %403, i32* %31, align 4
  %404 = load i32, i32* %31, align 4
  br label %bb102

bb102:                                            ; preds = %bb101
  store i32 %404, i32* %_550, align 4
  %405 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 4
  %406 = load i32, i32* %_550, align 4
  store i32 %406, i32* %405, align 4
  br label %bb2

bb103:                                            ; preds = %bb6
  %407 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter1, i32 0, i32 0
  store i64 %_555.0, i64* %407, align 8
  %408 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter1, i32 0, i32 1
  store i64 %_555.1, i64* %408, align 8
  br label %bb104

bb104:                                            ; preds = %bb112, %bb103
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %409 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he2654a3736e2490fE"({ i64, i64 }* align 8 dereferenceable(16) %iter1)
  store { i64, i64 } %409, { i64, i64 }* %_558, align 8
  br label %bb105

bb105:                                            ; preds = %bb104
  %410 = bitcast { i64, i64 }* %_558 to i64*
  %_561 = load i64, i64* %410, align 8, !range !2
  switch i64 %_561, label %bb107 [
    i64 0, label %bb108
    i64 1, label %bb106
  ]

bb107:                                            ; preds = %bb105
  unreachable

bb108:                                            ; preds = %bb105
  ret void

bb106:                                            ; preds = %bb105
  %411 = bitcast { i64, i64 }* %_558 to %"core::option::Option<usize>::Some"*
  %412 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %411, i32 0, i32 1
  %i = load i64, i64* %412, align 8
  %_567 = icmp ult i64 %i, 16
  %413 = call i1 @llvm.expect.i1(i1 %_567, i1 true)
  br i1 %413, label %bb109, label %panic

bb109:                                            ; preds = %bb106
  %414 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 %i
  %_564 = load i32, i32* %414, align 4
  %_571 = icmp ult i64 %i, 16
  %415 = call i1 @llvm.expect.i1(i1 %_571, i1 true)
  br i1 %415, label %bb110, label %panic2

panic:                                            ; preds = %bb106
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 16, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1328 to %"core::panic::location::Location"*)) #17
  unreachable

bb110:                                            ; preds = %bb109
  %416 = getelementptr inbounds [16 x i32], [16 x i32]* %input, i64 0, i64 %i
  %_568 = load i32, i32* %416, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_563 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_564, i32 %_568)
  br label %bb111

panic2:                                           ; preds = %bb109
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 16, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1330 to %"core::panic::location::Location"*)) #17
  unreachable

bb111:                                            ; preds = %bb110
  %_574 = icmp ult i64 %i, 16
  %417 = call i1 @llvm.expect.i1(i1 %_574, i1 true)
  br i1 %417, label %bb112, label %panic3

bb112:                                            ; preds = %bb111
  %418 = getelementptr inbounds [16 x i32], [16 x i32]* %output, i64 0, i64 %i
  store i32 %_563, i32* %418, align 4
  br label %bb104

panic3:                                           ; preds = %bb111
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 16, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1332 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::prng::chacha::ChaChaRng::new_unseeded
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand4prng6chacha9ChaChaRng12new_unseeded17hf1db1ab7166fee2bE(%"prng::chacha::ChaChaRng"* noalias nocapture sret(%"prng::chacha::ChaChaRng") dereferenceable(136) %rng) unnamed_addr #1 {
start:
  %0 = bitcast %"prng::chacha::ChaChaRng"* %rng to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 getelementptr inbounds (<{ [136 x i8] }>, <{ [136 x i8] }>* @_ZN4rand4prng6chacha5EMPTY17h5548ea89ae5abf81E, i32 0, i32 0, i32 0), i64 136, i1 false)
; call rand::prng::chacha::ChaChaRng::init
  call void @_ZN4rand4prng6chacha9ChaChaRng4init17h6eb6e304dc372dddE(%"prng::chacha::ChaChaRng"* align 8 dereferenceable(136) %rng, [8 x i32]* align 4 dereferenceable(32) bitcast (<{ [32 x i8] }>* @alloc841 to [8 x i32]*))
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; rand::prng::chacha::ChaChaRng::set_counter
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand4prng6chacha9ChaChaRng11set_counter17h27aae0b30ebab436E(%"prng::chacha::ChaChaRng"* align 8 dereferenceable(136) %self, i64 %counter_low, i64 %counter_high) unnamed_addr #1 {
start:
  %_22 = alloca i32, align 4
  %_16 = alloca i32, align 4
  %_10 = alloca i32, align 4
  %_4 = alloca i32, align 4
  %_8.0 = lshr i64 %counter_low, 0
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = trunc i64 %_8.0 to i32
  store i32 %_5, i32* %_4, align 4
  %0 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %1 = getelementptr inbounds [16 x i32], [16 x i32]* %0, i64 0, i64 12
  %2 = load i32, i32* %_4, align 4
  store i32 %2, i32* %1, align 8
  %_14.0 = lshr i64 %counter_low, 32
  br label %bb2

bb2:                                              ; preds = %bb1
  %_11 = trunc i64 %_14.0 to i32
  store i32 %_11, i32* %_10, align 4
  %3 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 13
  %5 = load i32, i32* %_10, align 4
  store i32 %5, i32* %4, align 4
  %_20.0 = lshr i64 %counter_high, 0
  br label %bb3

bb3:                                              ; preds = %bb2
  %_17 = trunc i64 %_20.0 to i32
  store i32 %_17, i32* %_16, align 4
  %6 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %7 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 14
  %8 = load i32, i32* %_16, align 4
  store i32 %8, i32* %7, align 8
  %_26.0 = lshr i64 %counter_high, 32
  br label %bb4

bb4:                                              ; preds = %bb3
  %_23 = trunc i64 %_26.0 to i32
  store i32 %_23, i32* %_22, align 4
  %9 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 15
  %11 = load i32, i32* %_22, align 4
  store i32 %11, i32* %10, align 4
  %12 = bitcast %"prng::chacha::ChaChaRng"* %self to i64*
  store i64 16, i64* %12, align 8
  ret void
}

; rand::prng::chacha::ChaChaRng::init
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4rand4prng6chacha9ChaChaRng4init17h6eb6e304dc372dddE(%"prng::chacha::ChaChaRng"* align 8 dereferenceable(136) %self, [8 x i32]* align 4 dereferenceable(32) %key) unnamed_addr #1 {
start:
  %_35 = alloca i32, align 4
  %_33 = alloca i32, align 4
  %_31 = alloca i32, align 4
  %_29 = alloca i32, align 4
  %_19 = alloca i32, align 4
  %_14 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_12 = alloca { i64, i64 }, align 8
  %_9 = alloca i32, align 4
  %_7 = alloca i32, align 4
  %_5 = alloca i32, align 4
  %_3 = alloca i32, align 4
  store i32 1634760805, i32* %_3, align 4
  %0 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %1 = getelementptr inbounds [16 x i32], [16 x i32]* %0, i64 0, i64 0
  %2 = load i32, i32* %_3, align 4
  store i32 %2, i32* %1, align 8
  store i32 857760878, i32* %_5, align 4
  %3 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 1
  %5 = load i32, i32* %_5, align 4
  store i32 %5, i32* %4, align 4
  store i32 2036477234, i32* %_7, align 4
  %6 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %7 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 2
  %8 = load i32, i32* %_7, align 4
  store i32 %8, i32* %7, align 8
  store i32 1797285236, i32* %_9, align 4
  %9 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 3
  %11 = load i32, i32* %_9, align 4
  store i32 %11, i32* %10, align 4
  %12 = bitcast { i64, i64 }* %_12 to i64*
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  store i64 8, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %18 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc104f0ebc962f0b4E"(i64 %15, i64 %17)
  %_11.0 = extractvalue { i64, i64 } %18, 0
  %_11.1 = extractvalue { i64, i64 } %18, 1
  br label %bb1

bb1:                                              ; preds = %start
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_11.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_11.1, i64* %20, align 8
  br label %bb2

bb2:                                              ; preds = %bb9, %bb1
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %21 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he2654a3736e2490fE"({ i64, i64 }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %21, { i64, i64 }* %_14, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %22 = bitcast { i64, i64 }* %_14 to i64*
  %_17 = load i64, i64* %22, align 8, !range !2
  switch i64 %_17, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  store i32 0, i32* %_29, align 4
  %23 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %24 = getelementptr inbounds [16 x i32], [16 x i32]* %23, i64 0, i64 12
  %25 = load i32, i32* %_29, align 4
  store i32 %25, i32* %24, align 8
  store i32 0, i32* %_31, align 4
  %26 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %27 = getelementptr inbounds [16 x i32], [16 x i32]* %26, i64 0, i64 13
  %28 = load i32, i32* %_31, align 4
  store i32 %28, i32* %27, align 4
  store i32 0, i32* %_33, align 4
  %29 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %30 = getelementptr inbounds [16 x i32], [16 x i32]* %29, i64 0, i64 14
  %31 = load i32, i32* %_33, align 4
  store i32 %31, i32* %30, align 8
  store i32 0, i32* %_35, align 4
  %32 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %33 = getelementptr inbounds [16 x i32], [16 x i32]* %32, i64 0, i64 15
  %34 = load i32, i32* %_35, align 4
  store i32 %34, i32* %33, align 4
  %35 = bitcast %"prng::chacha::ChaChaRng"* %self to i64*
  store i64 16, i64* %35, align 8
  ret void

bb4:                                              ; preds = %bb3
  %36 = bitcast { i64, i64 }* %_14 to %"core::option::Option<usize>::Some"*
  %37 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %36, i32 0, i32 1
  %i = load i64, i64* %37, align 8
  %_23 = icmp ult i64 %i, 8
  %38 = call i1 @llvm.expect.i1(i1 %_23, i1 true)
  br i1 %38, label %bb7, label %panic

bb7:                                              ; preds = %bb4
  %39 = getelementptr inbounds [8 x i32], [8 x i32]* %key, i64 0, i64 %i
  %_20 = load i32, i32* %39, align 4
  store i32 %_20, i32* %_19, align 4
  %40 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 4, i64 %i)
  %_26.0 = extractvalue { i64, i1 } %40, 0
  %_26.1 = extractvalue { i64, i1 } %40, 1
  %41 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false)
  br i1 %41, label %panic1, label %bb8

panic:                                            ; preds = %bb4
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 8, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1334 to %"core::panic::location::Location"*)) #17
  unreachable

bb8:                                              ; preds = %bb7
  %_28 = icmp ult i64 %_26.0, 16
  %42 = call i1 @llvm.expect.i1(i1 %_28, i1 true)
  br i1 %42, label %bb9, label %panic2

panic1:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1336 to %"core::panic::location::Location"*)) #17
  unreachable

bb9:                                              ; preds = %bb8
  %43 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %44 = getelementptr inbounds [16 x i32], [16 x i32]* %43, i64 0, i64 %_26.0
  %45 = load i32, i32* %_19, align 4
  store i32 %45, i32* %44, align 4
  br label %bb2

panic2:                                           ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_26.0, i64 16, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1338 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::prng::chacha::ChaChaRng::update
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand4prng6chacha9ChaChaRng6update17hfc01363d0618d20eE(%"prng::chacha::ChaChaRng"* align 8 dereferenceable(136) %self) unnamed_addr #1 {
start:
  %_37 = alloca i32, align 4
  %_28 = alloca i32, align 4
  %_19 = alloca i32, align 4
  %_10 = alloca i32, align 4
  %_4 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 1
  %_6 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
; call rand::prng::chacha::core
  call void @_ZN4rand4prng6chacha4core17ha04c0844e456bb9dE([16 x i32]* align 4 dereferenceable(64) %_4, [16 x i32]* align 4 dereferenceable(64) %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"prng::chacha::ChaChaRng"* %self to i64*
  store i64 0, i64* %0, align 8
  %1 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* %1, i64 0, i64 12
  %_8 = load i32, i32* %2, align 8
  store i32 1, i32* %_10, align 4
  %3 = load i32, i32* %_10, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_7 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_8, i32 %3)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 12
  store i32 %_7, i32* %5, align 8
  %6 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %_13 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 12
; call <core::num::wrapping::Wrapping<T> as core::cmp::PartialEq>::ne
  %_12 = call zeroext i1 @"_ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17hb46ca1a6a97ad50dE"(i32* align 4 dereferenceable(4) %_13, i32* align 4 dereferenceable(4) bitcast (<{ [4 x i8] }>* @alloc838 to i32*))
  br label %bb3

bb3:                                              ; preds = %bb2
  br i1 %_12, label %bb12, label %bb4

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %8 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 13
  %_17 = load i32, i32* %8, align 4
  store i32 1, i32* %_19, align 4
  %9 = load i32, i32* %_19, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_16 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_17, i32 %9)
  br label %bb5

bb12:                                             ; preds = %bb11, %bb9, %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
  %10 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %11 = getelementptr inbounds [16 x i32], [16 x i32]* %10, i64 0, i64 13
  store i32 %_16, i32* %11, align 4
  %12 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %_22 = getelementptr inbounds [16 x i32], [16 x i32]* %12, i64 0, i64 13
; call <core::num::wrapping::Wrapping<T> as core::cmp::PartialEq>::ne
  %_21 = call zeroext i1 @"_ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17hb46ca1a6a97ad50dE"(i32* align 4 dereferenceable(4) %_22, i32* align 4 dereferenceable(4) bitcast (<{ [4 x i8] }>* @alloc838 to i32*))
  br label %bb6

bb6:                                              ; preds = %bb5
  br i1 %_21, label %bb12, label %bb7

bb7:                                              ; preds = %bb6
  %13 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %14 = getelementptr inbounds [16 x i32], [16 x i32]* %13, i64 0, i64 14
  %_26 = load i32, i32* %14, align 8
  store i32 1, i32* %_28, align 4
  %15 = load i32, i32* %_28, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_25 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_26, i32 %15)
  br label %bb8

bb8:                                              ; preds = %bb7
  %16 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* %16, i64 0, i64 14
  store i32 %_25, i32* %17, align 8
  %18 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %_31 = getelementptr inbounds [16 x i32], [16 x i32]* %18, i64 0, i64 14
; call <core::num::wrapping::Wrapping<T> as core::cmp::PartialEq>::ne
  %_30 = call zeroext i1 @"_ZN79_$LT$core..num..wrapping..Wrapping$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17hb46ca1a6a97ad50dE"(i32* align 4 dereferenceable(4) %_31, i32* align 4 dereferenceable(4) bitcast (<{ [4 x i8] }>* @alloc838 to i32*))
  br label %bb9

bb9:                                              ; preds = %bb8
  br i1 %_30, label %bb12, label %bb10

bb10:                                             ; preds = %bb9
  %19 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %20 = getelementptr inbounds [16 x i32], [16 x i32]* %19, i64 0, i64 15
  %_35 = load i32, i32* %20, align 4
  store i32 1, i32* %_37, align 4
  %21 = load i32, i32* %_37, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_34 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_35, i32 %21)
  br label %bb11

bb11:                                             ; preds = %bb10
  %22 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* %22, i64 0, i64 15
  store i32 %_34, i32* %23, align 4
  br label %bb12
}

; <rand::prng::chacha::ChaChaRng as rand::SeedableRng<&[u32]>>::reseed
; Function Attrs: nonlazybind uwtable
define void @"_ZN92_$LT$rand..prng..chacha..ChaChaRng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u32$u5d$$GT$$GT$6reseed17h9f3d6fdd3802a98bE"(%"prng::chacha::ChaChaRng"* align 8 dereferenceable(136) %self, [0 x i32]* nonnull align 4 %seed.0, i64 %seed.1) unnamed_addr #1 {
start:
  %_24 = alloca i32, align 4
  %_18 = alloca { i32*, i8* }, align 8
  %iter = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", align 8
  %_12 = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", align 8
  %_11 = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>", align 8
  %_10 = alloca { i64, i64 }, align 8
; call rand::prng::chacha::ChaChaRng::init
  call void @_ZN4rand4prng6chacha9ChaChaRng4init17h6eb6e304dc372dddE(%"prng::chacha::ChaChaRng"* align 8 dereferenceable(136) %self, [8 x i32]* align 4 dereferenceable(32) bitcast (<{ [32 x i8] }>* @alloc841 to [8 x i32]*))
  br label %bb1

bb1:                                              ; preds = %start
  %_9 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %0 = bitcast { i64, i64 }* %_10 to i64*
  store i64 4, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  store i64 12, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %6 = call { [0 x i32]*, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h9806f118c2929df9E"([16 x i32]* align 4 dereferenceable(64) %_9, i64 %3, i64 %5, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1340 to %"core::panic::location::Location"*))
  %_8.0 = extractvalue { [0 x i32]*, i64 } %6, 0
  %_8.1 = extractvalue { [0 x i32]*, i64 } %6, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::slice::<impl [T]>::iter_mut
  %7 = call { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17hca52412a7f0c812dE"([0 x i32]* nonnull align 4 %_8.0, i64 %_8.1)
  %_13.0 = extractvalue { i32*, i32* } %7, 0
  %_13.1 = extractvalue { i32*, i32* } %7, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::iter
  %8 = call { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17had3184a6394da70eE"([0 x i32]* nonnull align 4 %seed.0, i64 %seed.1)
  %_15.0 = extractvalue { i32*, i32* } %8, 0
  %_15.1 = extractvalue { i32*, i32* } %8, 1
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::iter::traits::iterator::Iterator::zip
  call void @_ZN4core4iter6traits8iterator8Iterator3zip17ha91cb54bd0fd0e0aE(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>") dereferenceable(56) %_12, i32* nonnull %_13.0, i32* %_13.1, i32* nonnull %_15.0, i32* %_15.1)
  br label %bb5

bb5:                                              ; preds = %bb4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2723146ff493a73aE"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>") dereferenceable(56) %_11, %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* noalias nocapture dereferenceable(56) %_12)
  br label %bb6

bb6:                                              ; preds = %bb5
  %9 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %iter to i8*
  %10 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 56, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb9, %bb6
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
  %11 = call { i32*, i8* } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h55d04ecf563557c2E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::slice::iter::Iter<u32>>"* align 8 dereferenceable(56) %iter)
  store { i32*, i8* } %11, { i32*, i8* }* %_18, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %12 = bitcast { i32*, i8* }* %_18 to {}**
  %13 = load {}*, {}** %12, align 8
  %14 = icmp eq {}* %13, null
  %_21 = select i1 %14, i64 0, i64 1
  switch i64 %_21, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb11:                                             ; preds = %bb8
  ret void

bb9:                                              ; preds = %bb8
  %15 = bitcast { i32*, i8* }* %_18 to { i32*, i32* }*
  %16 = bitcast { i32*, i32* }* %15 to i32**
  %k = load i32*, i32** %16, align 8, !nonnull !5
  %17 = bitcast { i32*, i8* }* %_18 to { i32*, i32* }*
  %18 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %17, i32 0, i32 1
  %s = load i32*, i32** %18, align 8, !nonnull !5
  %_25 = load i32, i32* %s, align 4
  store i32 %_25, i32* %_24, align 4
  %19 = load i32, i32* %_24, align 4
  store i32 %19, i32* %k, align 4
  br label %bb7
}

; <rand::prng::chacha::ChaChaRng as rand::SeedableRng<&[u32]>>::from_seed
; Function Attrs: nonlazybind uwtable
define void @"_ZN92_$LT$rand..prng..chacha..ChaChaRng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u32$u5d$$GT$$GT$9from_seed17hbb2480d812c8f8a4E"(%"prng::chacha::ChaChaRng"* noalias nocapture sret(%"prng::chacha::ChaChaRng") dereferenceable(136) %rng, [0 x i32]* nonnull align 4 %seed.0, i64 %seed.1) unnamed_addr #1 {
start:
  %0 = bitcast %"prng::chacha::ChaChaRng"* %rng to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 getelementptr inbounds (<{ [136 x i8] }>, <{ [136 x i8] }>* @_ZN4rand4prng6chacha5EMPTY17h5548ea89ae5abf81E, i32 0, i32 0, i32 0), i64 136, i1 false)
; call <rand::prng::chacha::ChaChaRng as rand::SeedableRng<&[u32]>>::reseed
  call void @"_ZN92_$LT$rand..prng..chacha..ChaChaRng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u32$u5d$$GT$$GT$6reseed17h9f3d6fdd3802a98bE"(%"prng::chacha::ChaChaRng"* align 8 dereferenceable(136) %rng, [0 x i32]* nonnull align 4 %seed.0, i64 %seed.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; rand::prng::isaac::IsaacRng::new_unseeded
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand4prng5isaac8IsaacRng12new_unseeded17he1a8a95f6c472e90E(%"prng::isaac::IsaacRng"* noalias nocapture sret(%"prng::isaac::IsaacRng") dereferenceable(2064) %rng) unnamed_addr #1 {
start:
  %0 = bitcast %"prng::isaac::IsaacRng"* %rng to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 getelementptr inbounds (<{ [2064 x i8] }>, <{ [2064 x i8] }>* @_ZN4rand4prng5isaac5EMPTY17he612dcaf0f3ce96fE, i32 0, i32 0, i32 0), i64 2064, i1 false)
; call rand::prng::isaac::IsaacRng::init
  call void @_ZN4rand4prng5isaac8IsaacRng4init17h31bbb6bad26a1c6eE(%"prng::isaac::IsaacRng"* align 4 dereferenceable(2064) %rng, i1 zeroext false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; rand::prng::isaac::IsaacRng::init
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand4prng5isaac8IsaacRng4init17h31bbb6bad26a1c6eE(%"prng::isaac::IsaacRng"* align 4 dereferenceable(2064) %self, i1 zeroext %use_rsl) unnamed_addr #1 {
start:
  %_500 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_497 = alloca { i64, i64 }, align 8
  %_302 = alloca { i64, i64 }, align 8
  %iter2 = alloca { i64, i64 }, align 8
  %_299 = alloca { i64, i64 }, align 8
  %_104 = alloca { i64, i64 }, align 8
  %iter1 = alloca { i64, i64 }, align 8
  %_101 = alloca { i64, i64 }, align 8
  %_14 = alloca { i32, i32 }, align 4
  %iter = alloca { i32, i32 }, align 4
  %_12 = alloca { i32, i32 }, align 4
  %h = alloca i32, align 4
  %g = alloca i32, align 4
  %f = alloca i32, align 4
  %e = alloca i32, align 4
  %d = alloca i32, align 4
  %c = alloca i32, align 4
  %b = alloca i32, align 4
  %a = alloca i32, align 4
  store i32 -1640531527, i32* %a, align 4
  store i32 -1640531527, i32* %b, align 4
  store i32 -1640531527, i32* %c, align 4
  store i32 -1640531527, i32* %d, align 4
  store i32 -1640531527, i32* %e, align 4
  store i32 -1640531527, i32* %f, align 4
  store i32 -1640531527, i32* %g, align 4
  store i32 -1640531527, i32* %h, align 4
  %0 = bitcast { i32, i32 }* %_12 to i32*
  store i32 0, i32* %0, align 4
  %1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_12, i32 0, i32 1
  store i32 4, i32* %1, align 4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_12, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_12, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %6 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1ba709b59e4b6b38E"(i32 %3, i32 %5)
  %_11.0 = extractvalue { i32, i32 } %6, 0
  %_11.1 = extractvalue { i32, i32 } %6, 1
  br label %bb1

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 0
  store i32 %_11.0, i32* %7, align 4
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 1
  store i32 %_11.1, i32* %8, align 4
  br label %bb2

bb2:                                              ; preds = %bb38, %bb1
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %9 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h20d89e120cf0237dE"({ i32, i32 }* align 4 dereferenceable(8) %iter)
  store { i32, i32 } %9, { i32, i32 }* %_14, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  %10 = bitcast { i32, i32 }* %_14 to i32*
  %11 = load i32, i32* %10, align 4, !range !3
  %_17 = zext i32 %11 to i64
  switch i64 %_17, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  br i1 %use_rsl, label %bb39, label %bb40

bb4:                                              ; preds = %bb3
  %_19 = load i32, i32* %a, align 4
  %_21 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_20 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_21, i64 11)
  br label %bb7

bb7:                                              ; preds = %bb4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_18 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_19, i32 %_20)
  br label %bb8

bb8:                                              ; preds = %bb7
  store i32 %_18, i32* %a, align 4
  %_23 = load i32, i32* %d, align 4
  %_24 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_22 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_23, i32 %_24)
  br label %bb9

bb9:                                              ; preds = %bb8
  store i32 %_22, i32* %d, align 4
  %_26 = load i32, i32* %b, align 4
  %_27 = load i32, i32* %c, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_25 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_26, i32 %_27)
  br label %bb10

bb10:                                             ; preds = %bb9
  store i32 %_25, i32* %b, align 4
  %_29 = load i32, i32* %b, align 4
  %_31 = load i32, i32* %c, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_30 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_31, i64 2)
  br label %bb11

bb11:                                             ; preds = %bb10
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_28 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_29, i32 %_30)
  br label %bb12

bb12:                                             ; preds = %bb11
  store i32 %_28, i32* %b, align 4
  %_33 = load i32, i32* %e, align 4
  %_34 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_32 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_33, i32 %_34)
  br label %bb13

bb13:                                             ; preds = %bb12
  store i32 %_32, i32* %e, align 4
  %_36 = load i32, i32* %c, align 4
  %_37 = load i32, i32* %d, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_35 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_36, i32 %_37)
  br label %bb14

bb14:                                             ; preds = %bb13
  store i32 %_35, i32* %c, align 4
  %_39 = load i32, i32* %c, align 4
  %_41 = load i32, i32* %d, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_40 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_41, i64 8)
  br label %bb15

bb15:                                             ; preds = %bb14
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_38 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_39, i32 %_40)
  br label %bb16

bb16:                                             ; preds = %bb15
  store i32 %_38, i32* %c, align 4
  %_43 = load i32, i32* %f, align 4
  %_44 = load i32, i32* %c, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_42 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_43, i32 %_44)
  br label %bb17

bb17:                                             ; preds = %bb16
  store i32 %_42, i32* %f, align 4
  %_46 = load i32, i32* %d, align 4
  %_47 = load i32, i32* %e, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_45 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_46, i32 %_47)
  br label %bb18

bb18:                                             ; preds = %bb17
  store i32 %_45, i32* %d, align 4
  %_49 = load i32, i32* %d, align 4
  %_51 = load i32, i32* %e, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_50 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_51, i64 16)
  br label %bb19

bb19:                                             ; preds = %bb18
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_48 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_49, i32 %_50)
  br label %bb20

bb20:                                             ; preds = %bb19
  store i32 %_48, i32* %d, align 4
  %_53 = load i32, i32* %g, align 4
  %_54 = load i32, i32* %d, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_52 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_53, i32 %_54)
  br label %bb21

bb21:                                             ; preds = %bb20
  store i32 %_52, i32* %g, align 4
  %_56 = load i32, i32* %e, align 4
  %_57 = load i32, i32* %f, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_55 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_56, i32 %_57)
  br label %bb22

bb22:                                             ; preds = %bb21
  store i32 %_55, i32* %e, align 4
  %_59 = load i32, i32* %e, align 4
  %_61 = load i32, i32* %f, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_60 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_61, i64 10)
  br label %bb23

bb23:                                             ; preds = %bb22
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_58 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_59, i32 %_60)
  br label %bb24

bb24:                                             ; preds = %bb23
  store i32 %_58, i32* %e, align 4
  %_63 = load i32, i32* %h, align 4
  %_64 = load i32, i32* %e, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_62 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_63, i32 %_64)
  br label %bb25

bb25:                                             ; preds = %bb24
  store i32 %_62, i32* %h, align 4
  %_66 = load i32, i32* %f, align 4
  %_67 = load i32, i32* %g, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_65 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_66, i32 %_67)
  br label %bb26

bb26:                                             ; preds = %bb25
  store i32 %_65, i32* %f, align 4
  %_69 = load i32, i32* %f, align 4
  %_71 = load i32, i32* %g, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_70 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_71, i64 4)
  br label %bb27

bb27:                                             ; preds = %bb26
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_68 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_69, i32 %_70)
  br label %bb28

bb28:                                             ; preds = %bb27
  store i32 %_68, i32* %f, align 4
  %_73 = load i32, i32* %a, align 4
  %_74 = load i32, i32* %f, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_72 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_73, i32 %_74)
  br label %bb29

bb29:                                             ; preds = %bb28
  store i32 %_72, i32* %a, align 4
  %_76 = load i32, i32* %g, align 4
  %_77 = load i32, i32* %h, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_75 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_76, i32 %_77)
  br label %bb30

bb30:                                             ; preds = %bb29
  store i32 %_75, i32* %g, align 4
  %_79 = load i32, i32* %g, align 4
  %_81 = load i32, i32* %h, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_80 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_81, i64 8)
  br label %bb31

bb31:                                             ; preds = %bb30
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_78 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_79, i32 %_80)
  br label %bb32

bb32:                                             ; preds = %bb31
  store i32 %_78, i32* %g, align 4
  %_83 = load i32, i32* %b, align 4
  %_84 = load i32, i32* %g, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_82 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_83, i32 %_84)
  br label %bb33

bb33:                                             ; preds = %bb32
  store i32 %_82, i32* %b, align 4
  %_86 = load i32, i32* %h, align 4
  %_87 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_85 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_86, i32 %_87)
  br label %bb34

bb34:                                             ; preds = %bb33
  store i32 %_85, i32* %h, align 4
  %_89 = load i32, i32* %h, align 4
  %_91 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_90 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_91, i64 9)
  br label %bb35

bb35:                                             ; preds = %bb34
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_88 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_89, i32 %_90)
  br label %bb36

bb36:                                             ; preds = %bb35
  store i32 %_88, i32* %h, align 4
  %_93 = load i32, i32* %c, align 4
  %_94 = load i32, i32* %h, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_92 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_93, i32 %_94)
  br label %bb37

bb37:                                             ; preds = %bb36
  store i32 %_92, i32* %c, align 4
  %_96 = load i32, i32* %a, align 4
  %_97 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_95 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_96, i32 %_97)
  br label %bb38

bb38:                                             ; preds = %bb37
  store i32 %_95, i32* %a, align 4
  br label %bb2

bb40:                                             ; preds = %bb6
  %12 = bitcast { i64, i64 }* %_497 to i64*
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_497, i32 0, i32 1
  store i64 32, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_497, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_497, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
; call core::iter::traits::iterator::Iterator::map
  %18 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17hd7c1cbe938c97028E(i64 %15, i64 %17)
  %_496.0 = extractvalue { i64, i64 } %18, 0
  %_496.1 = extractvalue { i64, i64 } %18, 1
  br label %bb194

bb39:                                             ; preds = %bb6
  %19 = bitcast { i64, i64 }* %_101 to i64*
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_101, i32 0, i32 1
  store i64 32, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_101, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_101, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
; call core::iter::traits::iterator::Iterator::map
  %25 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17h4e0695160222ebf4E(i64 %22, i64 %24)
  %_100.0 = extractvalue { i64, i64 } %25, 0
  %_100.1 = extractvalue { i64, i64 } %25, 1
  br label %bb41

bb41:                                             ; preds = %bb39
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %26 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd75fc9493bcf95dbE"(i64 %_100.0, i64 %_100.1)
  %_99.0 = extractvalue { i64, i64 } %26, 0
  %_99.1 = extractvalue { i64, i64 } %26, 1
  br label %bb42

bb42:                                             ; preds = %bb41
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter1, i32 0, i32 0
  store i64 %_99.0, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter1, i32 0, i32 1
  store i64 %_99.1, i64* %28, align 8
  br label %bb43

bb43:                                             ; preds = %bb117, %bb42
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %29 = call { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h539c4dd51d360816E"({ i64, i64 }* align 8 dereferenceable(16) %iter1)
  store { i64, i64 } %29, { i64, i64 }* %_104, align 8
  br label %bb44

bb44:                                             ; preds = %bb43
  %30 = bitcast { i64, i64 }* %_104 to i64*
  %_107 = load i64, i64* %30, align 8, !range !2
  switch i64 %_107, label %bb46 [
    i64 0, label %bb47
    i64 1, label %bb45
  ]

bb46:                                             ; preds = %bb44
  unreachable

bb47:                                             ; preds = %bb44
  %31 = bitcast { i64, i64 }* %_299 to i64*
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_299, i32 0, i32 1
  store i64 32, i64* %32, align 8
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_299, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_299, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
; call core::iter::traits::iterator::Iterator::map
  %37 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17hb992d3ab262eb2efE(i64 %34, i64 %36)
  %_298.0 = extractvalue { i64, i64 } %37, 0
  %_298.1 = extractvalue { i64, i64 } %37, 1
  br label %bb118

bb45:                                             ; preds = %bb44
  %38 = bitcast { i64, i64 }* %_104 to %"core::option::Option<usize>::Some"*
  %39 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %38, i32 0, i32 1
  %i = load i64, i64* %39, align 8
  %_110 = load i32, i32* %a, align 4
  %_114 = icmp ult i64 %i, 256
  %40 = call i1 @llvm.expect.i1(i1 %_114, i1 true)
  br i1 %40, label %bb48, label %panic

bb48:                                             ; preds = %bb45
  %41 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 1
  %42 = getelementptr inbounds [256 x i32], [256 x i32]* %41, i64 0, i64 %i
  %_111 = load i32, i32* %42, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_109 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_110, i32 %_111)
  br label %bb49

panic:                                            ; preds = %bb45
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb49:                                             ; preds = %bb48
  store i32 %_109, i32* %a, align 4
  %_116 = load i32, i32* %b, align 4
  %43 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 1)
  %_120.0 = extractvalue { i64, i1 } %43, 0
  %_120.1 = extractvalue { i64, i1 } %43, 1
  %44 = call i1 @llvm.expect.i1(i1 %_120.1, i1 false)
  br i1 %44, label %panic4, label %bb50

bb50:                                             ; preds = %bb49
  %_122 = icmp ult i64 %_120.0, 256
  %45 = call i1 @llvm.expect.i1(i1 %_122, i1 true)
  br i1 %45, label %bb51, label %panic5

panic4:                                           ; preds = %bb49
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb51:                                             ; preds = %bb50
  %46 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 1
  %47 = getelementptr inbounds [256 x i32], [256 x i32]* %46, i64 0, i64 %_120.0
  %_117 = load i32, i32* %47, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_115 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_116, i32 %_117)
  br label %bb52

panic5:                                           ; preds = %bb50
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_120.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb52:                                             ; preds = %bb51
  store i32 %_115, i32* %b, align 4
  %_124 = load i32, i32* %c, align 4
  %48 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 2)
  %_128.0 = extractvalue { i64, i1 } %48, 0
  %_128.1 = extractvalue { i64, i1 } %48, 1
  %49 = call i1 @llvm.expect.i1(i1 %_128.1, i1 false)
  br i1 %49, label %panic6, label %bb53

bb53:                                             ; preds = %bb52
  %_130 = icmp ult i64 %_128.0, 256
  %50 = call i1 @llvm.expect.i1(i1 %_130, i1 true)
  br i1 %50, label %bb54, label %panic7

panic6:                                           ; preds = %bb52
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb54:                                             ; preds = %bb53
  %51 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 1
  %52 = getelementptr inbounds [256 x i32], [256 x i32]* %51, i64 0, i64 %_128.0
  %_125 = load i32, i32* %52, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_123 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_124, i32 %_125)
  br label %bb55

panic7:                                           ; preds = %bb53
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_128.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb55:                                             ; preds = %bb54
  store i32 %_123, i32* %c, align 4
  %_132 = load i32, i32* %d, align 4
  %53 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 3)
  %_136.0 = extractvalue { i64, i1 } %53, 0
  %_136.1 = extractvalue { i64, i1 } %53, 1
  %54 = call i1 @llvm.expect.i1(i1 %_136.1, i1 false)
  br i1 %54, label %panic8, label %bb56

bb56:                                             ; preds = %bb55
  %_138 = icmp ult i64 %_136.0, 256
  %55 = call i1 @llvm.expect.i1(i1 %_138, i1 true)
  br i1 %55, label %bb57, label %panic9

panic8:                                           ; preds = %bb55
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb57:                                             ; preds = %bb56
  %56 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 1
  %57 = getelementptr inbounds [256 x i32], [256 x i32]* %56, i64 0, i64 %_136.0
  %_133 = load i32, i32* %57, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_131 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_132, i32 %_133)
  br label %bb58

panic9:                                           ; preds = %bb56
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_136.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb58:                                             ; preds = %bb57
  store i32 %_131, i32* %d, align 4
  %_140 = load i32, i32* %e, align 4
  %58 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 4)
  %_144.0 = extractvalue { i64, i1 } %58, 0
  %_144.1 = extractvalue { i64, i1 } %58, 1
  %59 = call i1 @llvm.expect.i1(i1 %_144.1, i1 false)
  br i1 %59, label %panic10, label %bb59

bb59:                                             ; preds = %bb58
  %_146 = icmp ult i64 %_144.0, 256
  %60 = call i1 @llvm.expect.i1(i1 %_146, i1 true)
  br i1 %60, label %bb60, label %panic11

panic10:                                          ; preds = %bb58
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb60:                                             ; preds = %bb59
  %61 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 1
  %62 = getelementptr inbounds [256 x i32], [256 x i32]* %61, i64 0, i64 %_144.0
  %_141 = load i32, i32* %62, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_139 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_140, i32 %_141)
  br label %bb61

panic11:                                          ; preds = %bb59
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_144.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb61:                                             ; preds = %bb60
  store i32 %_139, i32* %e, align 4
  %_148 = load i32, i32* %f, align 4
  %63 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 5)
  %_152.0 = extractvalue { i64, i1 } %63, 0
  %_152.1 = extractvalue { i64, i1 } %63, 1
  %64 = call i1 @llvm.expect.i1(i1 %_152.1, i1 false)
  br i1 %64, label %panic12, label %bb62

bb62:                                             ; preds = %bb61
  %_154 = icmp ult i64 %_152.0, 256
  %65 = call i1 @llvm.expect.i1(i1 %_154, i1 true)
  br i1 %65, label %bb63, label %panic13

panic12:                                          ; preds = %bb61
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb63:                                             ; preds = %bb62
  %66 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 1
  %67 = getelementptr inbounds [256 x i32], [256 x i32]* %66, i64 0, i64 %_152.0
  %_149 = load i32, i32* %67, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_147 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_148, i32 %_149)
  br label %bb64

panic13:                                          ; preds = %bb62
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_152.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb64:                                             ; preds = %bb63
  store i32 %_147, i32* %f, align 4
  %_156 = load i32, i32* %g, align 4
  %68 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 6)
  %_160.0 = extractvalue { i64, i1 } %68, 0
  %_160.1 = extractvalue { i64, i1 } %68, 1
  %69 = call i1 @llvm.expect.i1(i1 %_160.1, i1 false)
  br i1 %69, label %panic14, label %bb65

bb65:                                             ; preds = %bb64
  %_162 = icmp ult i64 %_160.0, 256
  %70 = call i1 @llvm.expect.i1(i1 %_162, i1 true)
  br i1 %70, label %bb66, label %panic15

panic14:                                          ; preds = %bb64
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb66:                                             ; preds = %bb65
  %71 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 1
  %72 = getelementptr inbounds [256 x i32], [256 x i32]* %71, i64 0, i64 %_160.0
  %_157 = load i32, i32* %72, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_155 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_156, i32 %_157)
  br label %bb67

panic15:                                          ; preds = %bb65
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_160.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb67:                                             ; preds = %bb66
  store i32 %_155, i32* %g, align 4
  %_164 = load i32, i32* %h, align 4
  %73 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 7)
  %_168.0 = extractvalue { i64, i1 } %73, 0
  %_168.1 = extractvalue { i64, i1 } %73, 1
  %74 = call i1 @llvm.expect.i1(i1 %_168.1, i1 false)
  br i1 %74, label %panic16, label %bb68

bb68:                                             ; preds = %bb67
  %_170 = icmp ult i64 %_168.0, 256
  %75 = call i1 @llvm.expect.i1(i1 %_170, i1 true)
  br i1 %75, label %bb69, label %panic17

panic16:                                          ; preds = %bb67
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb69:                                             ; preds = %bb68
  %76 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 1
  %77 = getelementptr inbounds [256 x i32], [256 x i32]* %76, i64 0, i64 %_168.0
  %_165 = load i32, i32* %77, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_163 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_164, i32 %_165)
  br label %bb70

panic17:                                          ; preds = %bb68
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_168.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb70:                                             ; preds = %bb69
  store i32 %_163, i32* %h, align 4
  %_172 = load i32, i32* %a, align 4
  %_174 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_173 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_174, i64 11)
  br label %bb71

bb71:                                             ; preds = %bb70
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_171 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_172, i32 %_173)
  br label %bb72

bb72:                                             ; preds = %bb71
  store i32 %_171, i32* %a, align 4
  %_176 = load i32, i32* %d, align 4
  %_177 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_175 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_176, i32 %_177)
  br label %bb73

bb73:                                             ; preds = %bb72
  store i32 %_175, i32* %d, align 4
  %_179 = load i32, i32* %b, align 4
  %_180 = load i32, i32* %c, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_178 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_179, i32 %_180)
  br label %bb74

bb74:                                             ; preds = %bb73
  store i32 %_178, i32* %b, align 4
  %_182 = load i32, i32* %b, align 4
  %_184 = load i32, i32* %c, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_183 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_184, i64 2)
  br label %bb75

bb75:                                             ; preds = %bb74
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_181 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_182, i32 %_183)
  br label %bb76

bb76:                                             ; preds = %bb75
  store i32 %_181, i32* %b, align 4
  %_186 = load i32, i32* %e, align 4
  %_187 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_185 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_186, i32 %_187)
  br label %bb77

bb77:                                             ; preds = %bb76
  store i32 %_185, i32* %e, align 4
  %_189 = load i32, i32* %c, align 4
  %_190 = load i32, i32* %d, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_188 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_189, i32 %_190)
  br label %bb78

bb78:                                             ; preds = %bb77
  store i32 %_188, i32* %c, align 4
  %_192 = load i32, i32* %c, align 4
  %_194 = load i32, i32* %d, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_193 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_194, i64 8)
  br label %bb79

bb79:                                             ; preds = %bb78
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_191 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_192, i32 %_193)
  br label %bb80

bb80:                                             ; preds = %bb79
  store i32 %_191, i32* %c, align 4
  %_196 = load i32, i32* %f, align 4
  %_197 = load i32, i32* %c, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_195 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_196, i32 %_197)
  br label %bb81

bb81:                                             ; preds = %bb80
  store i32 %_195, i32* %f, align 4
  %_199 = load i32, i32* %d, align 4
  %_200 = load i32, i32* %e, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_198 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_199, i32 %_200)
  br label %bb82

bb82:                                             ; preds = %bb81
  store i32 %_198, i32* %d, align 4
  %_202 = load i32, i32* %d, align 4
  %_204 = load i32, i32* %e, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_203 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_204, i64 16)
  br label %bb83

bb83:                                             ; preds = %bb82
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_201 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_202, i32 %_203)
  br label %bb84

bb84:                                             ; preds = %bb83
  store i32 %_201, i32* %d, align 4
  %_206 = load i32, i32* %g, align 4
  %_207 = load i32, i32* %d, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_205 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_206, i32 %_207)
  br label %bb85

bb85:                                             ; preds = %bb84
  store i32 %_205, i32* %g, align 4
  %_209 = load i32, i32* %e, align 4
  %_210 = load i32, i32* %f, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_208 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_209, i32 %_210)
  br label %bb86

bb86:                                             ; preds = %bb85
  store i32 %_208, i32* %e, align 4
  %_212 = load i32, i32* %e, align 4
  %_214 = load i32, i32* %f, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_213 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_214, i64 10)
  br label %bb87

bb87:                                             ; preds = %bb86
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_211 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_212, i32 %_213)
  br label %bb88

bb88:                                             ; preds = %bb87
  store i32 %_211, i32* %e, align 4
  %_216 = load i32, i32* %h, align 4
  %_217 = load i32, i32* %e, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_215 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_216, i32 %_217)
  br label %bb89

bb89:                                             ; preds = %bb88
  store i32 %_215, i32* %h, align 4
  %_219 = load i32, i32* %f, align 4
  %_220 = load i32, i32* %g, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_218 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_219, i32 %_220)
  br label %bb90

bb90:                                             ; preds = %bb89
  store i32 %_218, i32* %f, align 4
  %_222 = load i32, i32* %f, align 4
  %_224 = load i32, i32* %g, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_223 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_224, i64 4)
  br label %bb91

bb91:                                             ; preds = %bb90
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_221 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_222, i32 %_223)
  br label %bb92

bb92:                                             ; preds = %bb91
  store i32 %_221, i32* %f, align 4
  %_226 = load i32, i32* %a, align 4
  %_227 = load i32, i32* %f, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_225 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_226, i32 %_227)
  br label %bb93

bb93:                                             ; preds = %bb92
  store i32 %_225, i32* %a, align 4
  %_229 = load i32, i32* %g, align 4
  %_230 = load i32, i32* %h, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_228 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_229, i32 %_230)
  br label %bb94

bb94:                                             ; preds = %bb93
  store i32 %_228, i32* %g, align 4
  %_232 = load i32, i32* %g, align 4
  %_234 = load i32, i32* %h, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_233 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_234, i64 8)
  br label %bb95

bb95:                                             ; preds = %bb94
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_231 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_232, i32 %_233)
  br label %bb96

bb96:                                             ; preds = %bb95
  store i32 %_231, i32* %g, align 4
  %_236 = load i32, i32* %b, align 4
  %_237 = load i32, i32* %g, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_235 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_236, i32 %_237)
  br label %bb97

bb97:                                             ; preds = %bb96
  store i32 %_235, i32* %b, align 4
  %_239 = load i32, i32* %h, align 4
  %_240 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_238 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_239, i32 %_240)
  br label %bb98

bb98:                                             ; preds = %bb97
  store i32 %_238, i32* %h, align 4
  %_242 = load i32, i32* %h, align 4
  %_244 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_243 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_244, i64 9)
  br label %bb99

bb99:                                             ; preds = %bb98
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_241 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_242, i32 %_243)
  br label %bb100

bb100:                                            ; preds = %bb99
  store i32 %_241, i32* %h, align 4
  %_246 = load i32, i32* %c, align 4
  %_247 = load i32, i32* %h, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_245 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_246, i32 %_247)
  br label %bb101

bb101:                                            ; preds = %bb100
  store i32 %_245, i32* %c, align 4
  %_249 = load i32, i32* %a, align 4
  %_250 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_248 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_249, i32 %_250)
  br label %bb102

bb102:                                            ; preds = %bb101
  store i32 %_248, i32* %a, align 4
  %_251 = load i32, i32* %a, align 4
  %_254 = icmp ult i64 %i, 256
  %78 = call i1 @llvm.expect.i1(i1 %_254, i1 true)
  br i1 %78, label %bb103, label %panic18

bb103:                                            ; preds = %bb102
  %79 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %80 = getelementptr inbounds [256 x i32], [256 x i32]* %79, i64 0, i64 %i
  store i32 %_251, i32* %80, align 4
  %_255 = load i32, i32* %b, align 4
  %81 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 1)
  %_258.0 = extractvalue { i64, i1 } %81, 0
  %_258.1 = extractvalue { i64, i1 } %81, 1
  %82 = call i1 @llvm.expect.i1(i1 %_258.1, i1 false)
  br i1 %82, label %panic19, label %bb104

panic18:                                          ; preds = %bb102
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb104:                                            ; preds = %bb103
  %_260 = icmp ult i64 %_258.0, 256
  %83 = call i1 @llvm.expect.i1(i1 %_260, i1 true)
  br i1 %83, label %bb105, label %panic20

panic19:                                          ; preds = %bb103
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb105:                                            ; preds = %bb104
  %84 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %85 = getelementptr inbounds [256 x i32], [256 x i32]* %84, i64 0, i64 %_258.0
  store i32 %_255, i32* %85, align 4
  %_261 = load i32, i32* %c, align 4
  %86 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 2)
  %_264.0 = extractvalue { i64, i1 } %86, 0
  %_264.1 = extractvalue { i64, i1 } %86, 1
  %87 = call i1 @llvm.expect.i1(i1 %_264.1, i1 false)
  br i1 %87, label %panic21, label %bb106

panic20:                                          ; preds = %bb104
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_258.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb106:                                            ; preds = %bb105
  %_266 = icmp ult i64 %_264.0, 256
  %88 = call i1 @llvm.expect.i1(i1 %_266, i1 true)
  br i1 %88, label %bb107, label %panic22

panic21:                                          ; preds = %bb105
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb107:                                            ; preds = %bb106
  %89 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %90 = getelementptr inbounds [256 x i32], [256 x i32]* %89, i64 0, i64 %_264.0
  store i32 %_261, i32* %90, align 4
  %_267 = load i32, i32* %d, align 4
  %91 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 3)
  %_270.0 = extractvalue { i64, i1 } %91, 0
  %_270.1 = extractvalue { i64, i1 } %91, 1
  %92 = call i1 @llvm.expect.i1(i1 %_270.1, i1 false)
  br i1 %92, label %panic23, label %bb108

panic22:                                          ; preds = %bb106
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_264.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb108:                                            ; preds = %bb107
  %_272 = icmp ult i64 %_270.0, 256
  %93 = call i1 @llvm.expect.i1(i1 %_272, i1 true)
  br i1 %93, label %bb109, label %panic24

panic23:                                          ; preds = %bb107
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb109:                                            ; preds = %bb108
  %94 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %95 = getelementptr inbounds [256 x i32], [256 x i32]* %94, i64 0, i64 %_270.0
  store i32 %_267, i32* %95, align 4
  %_273 = load i32, i32* %e, align 4
  %96 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 4)
  %_276.0 = extractvalue { i64, i1 } %96, 0
  %_276.1 = extractvalue { i64, i1 } %96, 1
  %97 = call i1 @llvm.expect.i1(i1 %_276.1, i1 false)
  br i1 %97, label %panic25, label %bb110

panic24:                                          ; preds = %bb108
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_270.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb110:                                            ; preds = %bb109
  %_278 = icmp ult i64 %_276.0, 256
  %98 = call i1 @llvm.expect.i1(i1 %_278, i1 true)
  br i1 %98, label %bb111, label %panic26

panic25:                                          ; preds = %bb109
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb111:                                            ; preds = %bb110
  %99 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %100 = getelementptr inbounds [256 x i32], [256 x i32]* %99, i64 0, i64 %_276.0
  store i32 %_273, i32* %100, align 4
  %_279 = load i32, i32* %f, align 4
  %101 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 5)
  %_282.0 = extractvalue { i64, i1 } %101, 0
  %_282.1 = extractvalue { i64, i1 } %101, 1
  %102 = call i1 @llvm.expect.i1(i1 %_282.1, i1 false)
  br i1 %102, label %panic27, label %bb112

panic26:                                          ; preds = %bb110
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_276.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb112:                                            ; preds = %bb111
  %_284 = icmp ult i64 %_282.0, 256
  %103 = call i1 @llvm.expect.i1(i1 %_284, i1 true)
  br i1 %103, label %bb113, label %panic28

panic27:                                          ; preds = %bb111
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb113:                                            ; preds = %bb112
  %104 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %105 = getelementptr inbounds [256 x i32], [256 x i32]* %104, i64 0, i64 %_282.0
  store i32 %_279, i32* %105, align 4
  %_285 = load i32, i32* %g, align 4
  %106 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 6)
  %_288.0 = extractvalue { i64, i1 } %106, 0
  %_288.1 = extractvalue { i64, i1 } %106, 1
  %107 = call i1 @llvm.expect.i1(i1 %_288.1, i1 false)
  br i1 %107, label %panic29, label %bb114

panic28:                                          ; preds = %bb112
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_282.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb114:                                            ; preds = %bb113
  %_290 = icmp ult i64 %_288.0, 256
  %108 = call i1 @llvm.expect.i1(i1 %_290, i1 true)
  br i1 %108, label %bb115, label %panic30

panic29:                                          ; preds = %bb113
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb115:                                            ; preds = %bb114
  %109 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %110 = getelementptr inbounds [256 x i32], [256 x i32]* %109, i64 0, i64 %_288.0
  store i32 %_285, i32* %110, align 4
  %_291 = load i32, i32* %h, align 4
  %111 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 7)
  %_294.0 = extractvalue { i64, i1 } %111, 0
  %_294.1 = extractvalue { i64, i1 } %111, 1
  %112 = call i1 @llvm.expect.i1(i1 %_294.1, i1 false)
  br i1 %112, label %panic31, label %bb116

panic30:                                          ; preds = %bb114
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_288.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb116:                                            ; preds = %bb115
  %_296 = icmp ult i64 %_294.0, 256
  %113 = call i1 @llvm.expect.i1(i1 %_296, i1 true)
  br i1 %113, label %bb117, label %panic32

panic31:                                          ; preds = %bb115
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb117:                                            ; preds = %bb116
  %114 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %115 = getelementptr inbounds [256 x i32], [256 x i32]* %114, i64 0, i64 %_294.0
  store i32 %_291, i32* %115, align 4
  br label %bb43

panic32:                                          ; preds = %bb116
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_294.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable

bb118:                                            ; preds = %bb47
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %116 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h63c81068bf8b5ae1E"(i64 %_298.0, i64 %_298.1)
  %_297.0 = extractvalue { i64, i64 } %116, 0
  %_297.1 = extractvalue { i64, i64 } %116, 1
  br label %bb119

bb119:                                            ; preds = %bb118
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter2, i32 0, i32 0
  store i64 %_297.0, i64* %117, align 8
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter2, i32 0, i32 1
  store i64 %_297.1, i64* %118, align 8
  br label %bb120

bb120:                                            ; preds = %bb193, %bb119
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %119 = call { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf00063fa9ca0a039E"({ i64, i64 }* align 8 dereferenceable(16) %iter2)
  store { i64, i64 } %119, { i64, i64 }* %_302, align 8
  br label %bb121

bb121:                                            ; preds = %bb120
  %120 = bitcast { i64, i64 }* %_302 to i64*
  %_305 = load i64, i64* %120, align 8, !range !2
  switch i64 %_305, label %bb123 [
    i64 0, label %bb247
    i64 1, label %bb122
  ]

bb123:                                            ; preds = %bb121
  unreachable

bb247:                                            ; preds = %bb197, %bb121
; call rand::prng::isaac::IsaacRng::isaac
  call void @_ZN4rand4prng5isaac8IsaacRng5isaac17h14100654103e8bbdE(%"prng::isaac::IsaacRng"* align 4 dereferenceable(2064) %self)
  br label %bb248

bb122:                                            ; preds = %bb121
  %121 = bitcast { i64, i64 }* %_302 to %"core::option::Option<usize>::Some"*
  %122 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %121, i32 0, i32 1
  %i33 = load i64, i64* %122, align 8
  %_308 = load i32, i32* %a, align 4
  %_312 = icmp ult i64 %i33, 256
  %123 = call i1 @llvm.expect.i1(i1 %_312, i1 true)
  br i1 %123, label %bb124, label %panic34

bb124:                                            ; preds = %bb122
  %124 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %125 = getelementptr inbounds [256 x i32], [256 x i32]* %124, i64 0, i64 %i33
  %_309 = load i32, i32* %125, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_307 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_308, i32 %_309)
  br label %bb125

panic34:                                          ; preds = %bb122
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i33, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb125:                                            ; preds = %bb124
  store i32 %_307, i32* %a, align 4
  %_314 = load i32, i32* %b, align 4
  %126 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 1)
  %_318.0 = extractvalue { i64, i1 } %126, 0
  %_318.1 = extractvalue { i64, i1 } %126, 1
  %127 = call i1 @llvm.expect.i1(i1 %_318.1, i1 false)
  br i1 %127, label %panic35, label %bb126

bb126:                                            ; preds = %bb125
  %_320 = icmp ult i64 %_318.0, 256
  %128 = call i1 @llvm.expect.i1(i1 %_320, i1 true)
  br i1 %128, label %bb127, label %panic36

panic35:                                          ; preds = %bb125
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb127:                                            ; preds = %bb126
  %129 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %130 = getelementptr inbounds [256 x i32], [256 x i32]* %129, i64 0, i64 %_318.0
  %_315 = load i32, i32* %130, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_313 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_314, i32 %_315)
  br label %bb128

panic36:                                          ; preds = %bb126
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_318.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb128:                                            ; preds = %bb127
  store i32 %_313, i32* %b, align 4
  %_322 = load i32, i32* %c, align 4
  %131 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 2)
  %_326.0 = extractvalue { i64, i1 } %131, 0
  %_326.1 = extractvalue { i64, i1 } %131, 1
  %132 = call i1 @llvm.expect.i1(i1 %_326.1, i1 false)
  br i1 %132, label %panic37, label %bb129

bb129:                                            ; preds = %bb128
  %_328 = icmp ult i64 %_326.0, 256
  %133 = call i1 @llvm.expect.i1(i1 %_328, i1 true)
  br i1 %133, label %bb130, label %panic38

panic37:                                          ; preds = %bb128
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb130:                                            ; preds = %bb129
  %134 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %135 = getelementptr inbounds [256 x i32], [256 x i32]* %134, i64 0, i64 %_326.0
  %_323 = load i32, i32* %135, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_321 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_322, i32 %_323)
  br label %bb131

panic38:                                          ; preds = %bb129
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_326.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb131:                                            ; preds = %bb130
  store i32 %_321, i32* %c, align 4
  %_330 = load i32, i32* %d, align 4
  %136 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 3)
  %_334.0 = extractvalue { i64, i1 } %136, 0
  %_334.1 = extractvalue { i64, i1 } %136, 1
  %137 = call i1 @llvm.expect.i1(i1 %_334.1, i1 false)
  br i1 %137, label %panic39, label %bb132

bb132:                                            ; preds = %bb131
  %_336 = icmp ult i64 %_334.0, 256
  %138 = call i1 @llvm.expect.i1(i1 %_336, i1 true)
  br i1 %138, label %bb133, label %panic40

panic39:                                          ; preds = %bb131
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb133:                                            ; preds = %bb132
  %139 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %140 = getelementptr inbounds [256 x i32], [256 x i32]* %139, i64 0, i64 %_334.0
  %_331 = load i32, i32* %140, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_329 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_330, i32 %_331)
  br label %bb134

panic40:                                          ; preds = %bb132
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_334.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb134:                                            ; preds = %bb133
  store i32 %_329, i32* %d, align 4
  %_338 = load i32, i32* %e, align 4
  %141 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 4)
  %_342.0 = extractvalue { i64, i1 } %141, 0
  %_342.1 = extractvalue { i64, i1 } %141, 1
  %142 = call i1 @llvm.expect.i1(i1 %_342.1, i1 false)
  br i1 %142, label %panic41, label %bb135

bb135:                                            ; preds = %bb134
  %_344 = icmp ult i64 %_342.0, 256
  %143 = call i1 @llvm.expect.i1(i1 %_344, i1 true)
  br i1 %143, label %bb136, label %panic42

panic41:                                          ; preds = %bb134
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb136:                                            ; preds = %bb135
  %144 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %145 = getelementptr inbounds [256 x i32], [256 x i32]* %144, i64 0, i64 %_342.0
  %_339 = load i32, i32* %145, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_337 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_338, i32 %_339)
  br label %bb137

panic42:                                          ; preds = %bb135
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_342.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb137:                                            ; preds = %bb136
  store i32 %_337, i32* %e, align 4
  %_346 = load i32, i32* %f, align 4
  %146 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 5)
  %_350.0 = extractvalue { i64, i1 } %146, 0
  %_350.1 = extractvalue { i64, i1 } %146, 1
  %147 = call i1 @llvm.expect.i1(i1 %_350.1, i1 false)
  br i1 %147, label %panic43, label %bb138

bb138:                                            ; preds = %bb137
  %_352 = icmp ult i64 %_350.0, 256
  %148 = call i1 @llvm.expect.i1(i1 %_352, i1 true)
  br i1 %148, label %bb139, label %panic44

panic43:                                          ; preds = %bb137
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb139:                                            ; preds = %bb138
  %149 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %150 = getelementptr inbounds [256 x i32], [256 x i32]* %149, i64 0, i64 %_350.0
  %_347 = load i32, i32* %150, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_345 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_346, i32 %_347)
  br label %bb140

panic44:                                          ; preds = %bb138
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_350.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb140:                                            ; preds = %bb139
  store i32 %_345, i32* %f, align 4
  %_354 = load i32, i32* %g, align 4
  %151 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 6)
  %_358.0 = extractvalue { i64, i1 } %151, 0
  %_358.1 = extractvalue { i64, i1 } %151, 1
  %152 = call i1 @llvm.expect.i1(i1 %_358.1, i1 false)
  br i1 %152, label %panic45, label %bb141

bb141:                                            ; preds = %bb140
  %_360 = icmp ult i64 %_358.0, 256
  %153 = call i1 @llvm.expect.i1(i1 %_360, i1 true)
  br i1 %153, label %bb142, label %panic46

panic45:                                          ; preds = %bb140
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb142:                                            ; preds = %bb141
  %154 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %155 = getelementptr inbounds [256 x i32], [256 x i32]* %154, i64 0, i64 %_358.0
  %_355 = load i32, i32* %155, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_353 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_354, i32 %_355)
  br label %bb143

panic46:                                          ; preds = %bb141
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_358.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb143:                                            ; preds = %bb142
  store i32 %_353, i32* %g, align 4
  %_362 = load i32, i32* %h, align 4
  %156 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 7)
  %_366.0 = extractvalue { i64, i1 } %156, 0
  %_366.1 = extractvalue { i64, i1 } %156, 1
  %157 = call i1 @llvm.expect.i1(i1 %_366.1, i1 false)
  br i1 %157, label %panic47, label %bb144

bb144:                                            ; preds = %bb143
  %_368 = icmp ult i64 %_366.0, 256
  %158 = call i1 @llvm.expect.i1(i1 %_368, i1 true)
  br i1 %158, label %bb145, label %panic48

panic47:                                          ; preds = %bb143
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb145:                                            ; preds = %bb144
  %159 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %160 = getelementptr inbounds [256 x i32], [256 x i32]* %159, i64 0, i64 %_366.0
  %_363 = load i32, i32* %160, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_361 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_362, i32 %_363)
  br label %bb146

panic48:                                          ; preds = %bb144
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_366.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb146:                                            ; preds = %bb145
  store i32 %_361, i32* %h, align 4
  %_370 = load i32, i32* %a, align 4
  %_372 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_371 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_372, i64 11)
  br label %bb147

bb147:                                            ; preds = %bb146
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_369 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_370, i32 %_371)
  br label %bb148

bb148:                                            ; preds = %bb147
  store i32 %_369, i32* %a, align 4
  %_374 = load i32, i32* %d, align 4
  %_375 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_373 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_374, i32 %_375)
  br label %bb149

bb149:                                            ; preds = %bb148
  store i32 %_373, i32* %d, align 4
  %_377 = load i32, i32* %b, align 4
  %_378 = load i32, i32* %c, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_376 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_377, i32 %_378)
  br label %bb150

bb150:                                            ; preds = %bb149
  store i32 %_376, i32* %b, align 4
  %_380 = load i32, i32* %b, align 4
  %_382 = load i32, i32* %c, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_381 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_382, i64 2)
  br label %bb151

bb151:                                            ; preds = %bb150
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_379 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_380, i32 %_381)
  br label %bb152

bb152:                                            ; preds = %bb151
  store i32 %_379, i32* %b, align 4
  %_384 = load i32, i32* %e, align 4
  %_385 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_383 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_384, i32 %_385)
  br label %bb153

bb153:                                            ; preds = %bb152
  store i32 %_383, i32* %e, align 4
  %_387 = load i32, i32* %c, align 4
  %_388 = load i32, i32* %d, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_386 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_387, i32 %_388)
  br label %bb154

bb154:                                            ; preds = %bb153
  store i32 %_386, i32* %c, align 4
  %_390 = load i32, i32* %c, align 4
  %_392 = load i32, i32* %d, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_391 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_392, i64 8)
  br label %bb155

bb155:                                            ; preds = %bb154
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_389 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_390, i32 %_391)
  br label %bb156

bb156:                                            ; preds = %bb155
  store i32 %_389, i32* %c, align 4
  %_394 = load i32, i32* %f, align 4
  %_395 = load i32, i32* %c, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_393 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_394, i32 %_395)
  br label %bb157

bb157:                                            ; preds = %bb156
  store i32 %_393, i32* %f, align 4
  %_397 = load i32, i32* %d, align 4
  %_398 = load i32, i32* %e, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_396 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_397, i32 %_398)
  br label %bb158

bb158:                                            ; preds = %bb157
  store i32 %_396, i32* %d, align 4
  %_400 = load i32, i32* %d, align 4
  %_402 = load i32, i32* %e, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_401 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_402, i64 16)
  br label %bb159

bb159:                                            ; preds = %bb158
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_399 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_400, i32 %_401)
  br label %bb160

bb160:                                            ; preds = %bb159
  store i32 %_399, i32* %d, align 4
  %_404 = load i32, i32* %g, align 4
  %_405 = load i32, i32* %d, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_403 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_404, i32 %_405)
  br label %bb161

bb161:                                            ; preds = %bb160
  store i32 %_403, i32* %g, align 4
  %_407 = load i32, i32* %e, align 4
  %_408 = load i32, i32* %f, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_406 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_407, i32 %_408)
  br label %bb162

bb162:                                            ; preds = %bb161
  store i32 %_406, i32* %e, align 4
  %_410 = load i32, i32* %e, align 4
  %_412 = load i32, i32* %f, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_411 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_412, i64 10)
  br label %bb163

bb163:                                            ; preds = %bb162
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_409 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_410, i32 %_411)
  br label %bb164

bb164:                                            ; preds = %bb163
  store i32 %_409, i32* %e, align 4
  %_414 = load i32, i32* %h, align 4
  %_415 = load i32, i32* %e, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_413 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_414, i32 %_415)
  br label %bb165

bb165:                                            ; preds = %bb164
  store i32 %_413, i32* %h, align 4
  %_417 = load i32, i32* %f, align 4
  %_418 = load i32, i32* %g, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_416 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_417, i32 %_418)
  br label %bb166

bb166:                                            ; preds = %bb165
  store i32 %_416, i32* %f, align 4
  %_420 = load i32, i32* %f, align 4
  %_422 = load i32, i32* %g, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_421 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_422, i64 4)
  br label %bb167

bb167:                                            ; preds = %bb166
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_419 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_420, i32 %_421)
  br label %bb168

bb168:                                            ; preds = %bb167
  store i32 %_419, i32* %f, align 4
  %_424 = load i32, i32* %a, align 4
  %_425 = load i32, i32* %f, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_423 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_424, i32 %_425)
  br label %bb169

bb169:                                            ; preds = %bb168
  store i32 %_423, i32* %a, align 4
  %_427 = load i32, i32* %g, align 4
  %_428 = load i32, i32* %h, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_426 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_427, i32 %_428)
  br label %bb170

bb170:                                            ; preds = %bb169
  store i32 %_426, i32* %g, align 4
  %_430 = load i32, i32* %g, align 4
  %_432 = load i32, i32* %h, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_431 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_432, i64 8)
  br label %bb171

bb171:                                            ; preds = %bb170
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_429 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_430, i32 %_431)
  br label %bb172

bb172:                                            ; preds = %bb171
  store i32 %_429, i32* %g, align 4
  %_434 = load i32, i32* %b, align 4
  %_435 = load i32, i32* %g, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_433 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_434, i32 %_435)
  br label %bb173

bb173:                                            ; preds = %bb172
  store i32 %_433, i32* %b, align 4
  %_437 = load i32, i32* %h, align 4
  %_438 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_436 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_437, i32 %_438)
  br label %bb174

bb174:                                            ; preds = %bb173
  store i32 %_436, i32* %h, align 4
  %_440 = load i32, i32* %h, align 4
  %_442 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_441 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_442, i64 9)
  br label %bb175

bb175:                                            ; preds = %bb174
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_439 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_440, i32 %_441)
  br label %bb176

bb176:                                            ; preds = %bb175
  store i32 %_439, i32* %h, align 4
  %_444 = load i32, i32* %c, align 4
  %_445 = load i32, i32* %h, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_443 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_444, i32 %_445)
  br label %bb177

bb177:                                            ; preds = %bb176
  store i32 %_443, i32* %c, align 4
  %_447 = load i32, i32* %a, align 4
  %_448 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_446 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_447, i32 %_448)
  br label %bb178

bb178:                                            ; preds = %bb177
  store i32 %_446, i32* %a, align 4
  %_449 = load i32, i32* %a, align 4
  %_452 = icmp ult i64 %i33, 256
  %161 = call i1 @llvm.expect.i1(i1 %_452, i1 true)
  br i1 %161, label %bb179, label %panic49

bb179:                                            ; preds = %bb178
  %162 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %163 = getelementptr inbounds [256 x i32], [256 x i32]* %162, i64 0, i64 %i33
  store i32 %_449, i32* %163, align 4
  %_453 = load i32, i32* %b, align 4
  %164 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 1)
  %_456.0 = extractvalue { i64, i1 } %164, 0
  %_456.1 = extractvalue { i64, i1 } %164, 1
  %165 = call i1 @llvm.expect.i1(i1 %_456.1, i1 false)
  br i1 %165, label %panic50, label %bb180

panic49:                                          ; preds = %bb178
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i33, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb180:                                            ; preds = %bb179
  %_458 = icmp ult i64 %_456.0, 256
  %166 = call i1 @llvm.expect.i1(i1 %_458, i1 true)
  br i1 %166, label %bb181, label %panic51

panic50:                                          ; preds = %bb179
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb181:                                            ; preds = %bb180
  %167 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %168 = getelementptr inbounds [256 x i32], [256 x i32]* %167, i64 0, i64 %_456.0
  store i32 %_453, i32* %168, align 4
  %_459 = load i32, i32* %c, align 4
  %169 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 2)
  %_462.0 = extractvalue { i64, i1 } %169, 0
  %_462.1 = extractvalue { i64, i1 } %169, 1
  %170 = call i1 @llvm.expect.i1(i1 %_462.1, i1 false)
  br i1 %170, label %panic52, label %bb182

panic51:                                          ; preds = %bb180
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_456.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb182:                                            ; preds = %bb181
  %_464 = icmp ult i64 %_462.0, 256
  %171 = call i1 @llvm.expect.i1(i1 %_464, i1 true)
  br i1 %171, label %bb183, label %panic53

panic52:                                          ; preds = %bb181
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb183:                                            ; preds = %bb182
  %172 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %173 = getelementptr inbounds [256 x i32], [256 x i32]* %172, i64 0, i64 %_462.0
  store i32 %_459, i32* %173, align 4
  %_465 = load i32, i32* %d, align 4
  %174 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 3)
  %_468.0 = extractvalue { i64, i1 } %174, 0
  %_468.1 = extractvalue { i64, i1 } %174, 1
  %175 = call i1 @llvm.expect.i1(i1 %_468.1, i1 false)
  br i1 %175, label %panic54, label %bb184

panic53:                                          ; preds = %bb182
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_462.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb184:                                            ; preds = %bb183
  %_470 = icmp ult i64 %_468.0, 256
  %176 = call i1 @llvm.expect.i1(i1 %_470, i1 true)
  br i1 %176, label %bb185, label %panic55

panic54:                                          ; preds = %bb183
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb185:                                            ; preds = %bb184
  %177 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %178 = getelementptr inbounds [256 x i32], [256 x i32]* %177, i64 0, i64 %_468.0
  store i32 %_465, i32* %178, align 4
  %_471 = load i32, i32* %e, align 4
  %179 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 4)
  %_474.0 = extractvalue { i64, i1 } %179, 0
  %_474.1 = extractvalue { i64, i1 } %179, 1
  %180 = call i1 @llvm.expect.i1(i1 %_474.1, i1 false)
  br i1 %180, label %panic56, label %bb186

panic55:                                          ; preds = %bb184
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_468.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb186:                                            ; preds = %bb185
  %_476 = icmp ult i64 %_474.0, 256
  %181 = call i1 @llvm.expect.i1(i1 %_476, i1 true)
  br i1 %181, label %bb187, label %panic57

panic56:                                          ; preds = %bb185
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb187:                                            ; preds = %bb186
  %182 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %183 = getelementptr inbounds [256 x i32], [256 x i32]* %182, i64 0, i64 %_474.0
  store i32 %_471, i32* %183, align 4
  %_477 = load i32, i32* %f, align 4
  %184 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 5)
  %_480.0 = extractvalue { i64, i1 } %184, 0
  %_480.1 = extractvalue { i64, i1 } %184, 1
  %185 = call i1 @llvm.expect.i1(i1 %_480.1, i1 false)
  br i1 %185, label %panic58, label %bb188

panic57:                                          ; preds = %bb186
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_474.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb188:                                            ; preds = %bb187
  %_482 = icmp ult i64 %_480.0, 256
  %186 = call i1 @llvm.expect.i1(i1 %_482, i1 true)
  br i1 %186, label %bb189, label %panic59

panic58:                                          ; preds = %bb187
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb189:                                            ; preds = %bb188
  %187 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %188 = getelementptr inbounds [256 x i32], [256 x i32]* %187, i64 0, i64 %_480.0
  store i32 %_477, i32* %188, align 4
  %_483 = load i32, i32* %g, align 4
  %189 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 6)
  %_486.0 = extractvalue { i64, i1 } %189, 0
  %_486.1 = extractvalue { i64, i1 } %189, 1
  %190 = call i1 @llvm.expect.i1(i1 %_486.1, i1 false)
  br i1 %190, label %panic60, label %bb190

panic59:                                          ; preds = %bb188
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_480.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb190:                                            ; preds = %bb189
  %_488 = icmp ult i64 %_486.0, 256
  %191 = call i1 @llvm.expect.i1(i1 %_488, i1 true)
  br i1 %191, label %bb191, label %panic61

panic60:                                          ; preds = %bb189
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb191:                                            ; preds = %bb190
  %192 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %193 = getelementptr inbounds [256 x i32], [256 x i32]* %192, i64 0, i64 %_486.0
  store i32 %_483, i32* %193, align 4
  %_489 = load i32, i32* %h, align 4
  %194 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 7)
  %_492.0 = extractvalue { i64, i1 } %194, 0
  %_492.1 = extractvalue { i64, i1 } %194, 1
  %195 = call i1 @llvm.expect.i1(i1 %_492.1, i1 false)
  br i1 %195, label %panic62, label %bb192

panic61:                                          ; preds = %bb190
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_486.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb192:                                            ; preds = %bb191
  %_494 = icmp ult i64 %_492.0, 256
  %196 = call i1 @llvm.expect.i1(i1 %_494, i1 true)
  br i1 %196, label %bb193, label %panic63

panic62:                                          ; preds = %bb191
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb193:                                            ; preds = %bb192
  %197 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %198 = getelementptr inbounds [256 x i32], [256 x i32]* %197, i64 0, i64 %_492.0
  store i32 %_489, i32* %198, align 4
  br label %bb120

panic63:                                          ; preds = %bb192
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_492.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable

bb194:                                            ; preds = %bb40
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %199 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h3587d6ea3bde95f7E"(i64 %_496.0, i64 %_496.1)
  %_495.0 = extractvalue { i64, i64 } %199, 0
  %_495.1 = extractvalue { i64, i64 } %199, 1
  br label %bb195

bb195:                                            ; preds = %bb194
  %200 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 0
  store i64 %_495.0, i64* %200, align 8
  %201 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 1
  store i64 %_495.1, i64* %201, align 8
  br label %bb196

bb196:                                            ; preds = %bb246, %bb195
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %202 = call { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h10ca8d350b6a0c2fE"({ i64, i64 }* align 8 dereferenceable(16) %iter3)
  store { i64, i64 } %202, { i64, i64 }* %_500, align 8
  br label %bb197

bb197:                                            ; preds = %bb196
  %203 = bitcast { i64, i64 }* %_500 to i64*
  %_503 = load i64, i64* %203, align 8, !range !2
  switch i64 %_503, label %bb199 [
    i64 0, label %bb247
    i64 1, label %bb198
  ]

bb199:                                            ; preds = %bb197
  unreachable

bb198:                                            ; preds = %bb197
  %204 = bitcast { i64, i64 }* %_500 to %"core::option::Option<usize>::Some"*
  %205 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %204, i32 0, i32 1
  %i64 = load i64, i64* %205, align 8
  %_506 = load i32, i32* %a, align 4
  %_508 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_507 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_508, i64 11)
  br label %bb200

bb200:                                            ; preds = %bb198
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_505 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_506, i32 %_507)
  br label %bb201

bb201:                                            ; preds = %bb200
  store i32 %_505, i32* %a, align 4
  %_510 = load i32, i32* %d, align 4
  %_511 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_509 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_510, i32 %_511)
  br label %bb202

bb202:                                            ; preds = %bb201
  store i32 %_509, i32* %d, align 4
  %_513 = load i32, i32* %b, align 4
  %_514 = load i32, i32* %c, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_512 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_513, i32 %_514)
  br label %bb203

bb203:                                            ; preds = %bb202
  store i32 %_512, i32* %b, align 4
  %_516 = load i32, i32* %b, align 4
  %_518 = load i32, i32* %c, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_517 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_518, i64 2)
  br label %bb204

bb204:                                            ; preds = %bb203
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_515 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_516, i32 %_517)
  br label %bb205

bb205:                                            ; preds = %bb204
  store i32 %_515, i32* %b, align 4
  %_520 = load i32, i32* %e, align 4
  %_521 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_519 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_520, i32 %_521)
  br label %bb206

bb206:                                            ; preds = %bb205
  store i32 %_519, i32* %e, align 4
  %_523 = load i32, i32* %c, align 4
  %_524 = load i32, i32* %d, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_522 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_523, i32 %_524)
  br label %bb207

bb207:                                            ; preds = %bb206
  store i32 %_522, i32* %c, align 4
  %_526 = load i32, i32* %c, align 4
  %_528 = load i32, i32* %d, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_527 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_528, i64 8)
  br label %bb208

bb208:                                            ; preds = %bb207
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_525 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_526, i32 %_527)
  br label %bb209

bb209:                                            ; preds = %bb208
  store i32 %_525, i32* %c, align 4
  %_530 = load i32, i32* %f, align 4
  %_531 = load i32, i32* %c, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_529 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_530, i32 %_531)
  br label %bb210

bb210:                                            ; preds = %bb209
  store i32 %_529, i32* %f, align 4
  %_533 = load i32, i32* %d, align 4
  %_534 = load i32, i32* %e, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_532 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_533, i32 %_534)
  br label %bb211

bb211:                                            ; preds = %bb210
  store i32 %_532, i32* %d, align 4
  %_536 = load i32, i32* %d, align 4
  %_538 = load i32, i32* %e, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_537 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_538, i64 16)
  br label %bb212

bb212:                                            ; preds = %bb211
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_535 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_536, i32 %_537)
  br label %bb213

bb213:                                            ; preds = %bb212
  store i32 %_535, i32* %d, align 4
  %_540 = load i32, i32* %g, align 4
  %_541 = load i32, i32* %d, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_539 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_540, i32 %_541)
  br label %bb214

bb214:                                            ; preds = %bb213
  store i32 %_539, i32* %g, align 4
  %_543 = load i32, i32* %e, align 4
  %_544 = load i32, i32* %f, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_542 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_543, i32 %_544)
  br label %bb215

bb215:                                            ; preds = %bb214
  store i32 %_542, i32* %e, align 4
  %_546 = load i32, i32* %e, align 4
  %_548 = load i32, i32* %f, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_547 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_548, i64 10)
  br label %bb216

bb216:                                            ; preds = %bb215
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_545 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_546, i32 %_547)
  br label %bb217

bb217:                                            ; preds = %bb216
  store i32 %_545, i32* %e, align 4
  %_550 = load i32, i32* %h, align 4
  %_551 = load i32, i32* %e, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_549 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_550, i32 %_551)
  br label %bb218

bb218:                                            ; preds = %bb217
  store i32 %_549, i32* %h, align 4
  %_553 = load i32, i32* %f, align 4
  %_554 = load i32, i32* %g, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_552 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_553, i32 %_554)
  br label %bb219

bb219:                                            ; preds = %bb218
  store i32 %_552, i32* %f, align 4
  %_556 = load i32, i32* %f, align 4
  %_558 = load i32, i32* %g, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_557 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_558, i64 4)
  br label %bb220

bb220:                                            ; preds = %bb219
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_555 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_556, i32 %_557)
  br label %bb221

bb221:                                            ; preds = %bb220
  store i32 %_555, i32* %f, align 4
  %_560 = load i32, i32* %a, align 4
  %_561 = load i32, i32* %f, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_559 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_560, i32 %_561)
  br label %bb222

bb222:                                            ; preds = %bb221
  store i32 %_559, i32* %a, align 4
  %_563 = load i32, i32* %g, align 4
  %_564 = load i32, i32* %h, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_562 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_563, i32 %_564)
  br label %bb223

bb223:                                            ; preds = %bb222
  store i32 %_562, i32* %g, align 4
  %_566 = load i32, i32* %g, align 4
  %_568 = load i32, i32* %h, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %_567 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_568, i64 8)
  br label %bb224

bb224:                                            ; preds = %bb223
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_565 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_566, i32 %_567)
  br label %bb225

bb225:                                            ; preds = %bb224
  store i32 %_565, i32* %g, align 4
  %_570 = load i32, i32* %b, align 4
  %_571 = load i32, i32* %g, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_569 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_570, i32 %_571)
  br label %bb226

bb226:                                            ; preds = %bb225
  store i32 %_569, i32* %b, align 4
  %_573 = load i32, i32* %h, align 4
  %_574 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_572 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_573, i32 %_574)
  br label %bb227

bb227:                                            ; preds = %bb226
  store i32 %_572, i32* %h, align 4
  %_576 = load i32, i32* %h, align 4
  %_578 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_577 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_578, i64 9)
  br label %bb228

bb228:                                            ; preds = %bb227
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_575 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_576, i32 %_577)
  br label %bb229

bb229:                                            ; preds = %bb228
  store i32 %_575, i32* %h, align 4
  %_580 = load i32, i32* %c, align 4
  %_581 = load i32, i32* %h, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_579 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_580, i32 %_581)
  br label %bb230

bb230:                                            ; preds = %bb229
  store i32 %_579, i32* %c, align 4
  %_583 = load i32, i32* %a, align 4
  %_584 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_582 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_583, i32 %_584)
  br label %bb231

bb231:                                            ; preds = %bb230
  store i32 %_582, i32* %a, align 4
  %_585 = load i32, i32* %a, align 4
  %_588 = icmp ult i64 %i64, 256
  %206 = call i1 @llvm.expect.i1(i1 %_588, i1 true)
  br i1 %206, label %bb232, label %panic65

bb232:                                            ; preds = %bb231
  %207 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %208 = getelementptr inbounds [256 x i32], [256 x i32]* %207, i64 0, i64 %i64
  store i32 %_585, i32* %208, align 4
  %_589 = load i32, i32* %b, align 4
  %209 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 1)
  %_592.0 = extractvalue { i64, i1 } %209, 0
  %_592.1 = extractvalue { i64, i1 } %209, 1
  %210 = call i1 @llvm.expect.i1(i1 %_592.1, i1 false)
  br i1 %210, label %panic66, label %bb233

panic65:                                          ; preds = %bb231
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i64, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1346 to %"core::panic::location::Location"*)) #17
  unreachable

bb233:                                            ; preds = %bb232
  %_594 = icmp ult i64 %_592.0, 256
  %211 = call i1 @llvm.expect.i1(i1 %_594, i1 true)
  br i1 %211, label %bb234, label %panic67

panic66:                                          ; preds = %bb232
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1348 to %"core::panic::location::Location"*)) #17
  unreachable

bb234:                                            ; preds = %bb233
  %212 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %213 = getelementptr inbounds [256 x i32], [256 x i32]* %212, i64 0, i64 %_592.0
  store i32 %_589, i32* %213, align 4
  %_595 = load i32, i32* %c, align 4
  %214 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 2)
  %_598.0 = extractvalue { i64, i1 } %214, 0
  %_598.1 = extractvalue { i64, i1 } %214, 1
  %215 = call i1 @llvm.expect.i1(i1 %_598.1, i1 false)
  br i1 %215, label %panic68, label %bb235

panic67:                                          ; preds = %bb233
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_592.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1350 to %"core::panic::location::Location"*)) #17
  unreachable

bb235:                                            ; preds = %bb234
  %_600 = icmp ult i64 %_598.0, 256
  %216 = call i1 @llvm.expect.i1(i1 %_600, i1 true)
  br i1 %216, label %bb236, label %panic69

panic68:                                          ; preds = %bb234
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1352 to %"core::panic::location::Location"*)) #17
  unreachable

bb236:                                            ; preds = %bb235
  %217 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %218 = getelementptr inbounds [256 x i32], [256 x i32]* %217, i64 0, i64 %_598.0
  store i32 %_595, i32* %218, align 4
  %_601 = load i32, i32* %d, align 4
  %219 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 3)
  %_604.0 = extractvalue { i64, i1 } %219, 0
  %_604.1 = extractvalue { i64, i1 } %219, 1
  %220 = call i1 @llvm.expect.i1(i1 %_604.1, i1 false)
  br i1 %220, label %panic70, label %bb237

panic69:                                          ; preds = %bb235
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_598.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1354 to %"core::panic::location::Location"*)) #17
  unreachable

bb237:                                            ; preds = %bb236
  %_606 = icmp ult i64 %_604.0, 256
  %221 = call i1 @llvm.expect.i1(i1 %_606, i1 true)
  br i1 %221, label %bb238, label %panic71

panic70:                                          ; preds = %bb236
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1356 to %"core::panic::location::Location"*)) #17
  unreachable

bb238:                                            ; preds = %bb237
  %222 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %223 = getelementptr inbounds [256 x i32], [256 x i32]* %222, i64 0, i64 %_604.0
  store i32 %_601, i32* %223, align 4
  %_607 = load i32, i32* %e, align 4
  %224 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 4)
  %_610.0 = extractvalue { i64, i1 } %224, 0
  %_610.1 = extractvalue { i64, i1 } %224, 1
  %225 = call i1 @llvm.expect.i1(i1 %_610.1, i1 false)
  br i1 %225, label %panic72, label %bb239

panic71:                                          ; preds = %bb237
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_604.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1358 to %"core::panic::location::Location"*)) #17
  unreachable

bb239:                                            ; preds = %bb238
  %_612 = icmp ult i64 %_610.0, 256
  %226 = call i1 @llvm.expect.i1(i1 %_612, i1 true)
  br i1 %226, label %bb240, label %panic73

panic72:                                          ; preds = %bb238
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1360 to %"core::panic::location::Location"*)) #17
  unreachable

bb240:                                            ; preds = %bb239
  %227 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %228 = getelementptr inbounds [256 x i32], [256 x i32]* %227, i64 0, i64 %_610.0
  store i32 %_607, i32* %228, align 4
  %_613 = load i32, i32* %f, align 4
  %229 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 5)
  %_616.0 = extractvalue { i64, i1 } %229, 0
  %_616.1 = extractvalue { i64, i1 } %229, 1
  %230 = call i1 @llvm.expect.i1(i1 %_616.1, i1 false)
  br i1 %230, label %panic74, label %bb241

panic73:                                          ; preds = %bb239
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_610.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1362 to %"core::panic::location::Location"*)) #17
  unreachable

bb241:                                            ; preds = %bb240
  %_618 = icmp ult i64 %_616.0, 256
  %231 = call i1 @llvm.expect.i1(i1 %_618, i1 true)
  br i1 %231, label %bb242, label %panic75

panic74:                                          ; preds = %bb240
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1364 to %"core::panic::location::Location"*)) #17
  unreachable

bb242:                                            ; preds = %bb241
  %232 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %233 = getelementptr inbounds [256 x i32], [256 x i32]* %232, i64 0, i64 %_616.0
  store i32 %_613, i32* %233, align 4
  %_619 = load i32, i32* %g, align 4
  %234 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 6)
  %_622.0 = extractvalue { i64, i1 } %234, 0
  %_622.1 = extractvalue { i64, i1 } %234, 1
  %235 = call i1 @llvm.expect.i1(i1 %_622.1, i1 false)
  br i1 %235, label %panic76, label %bb243

panic75:                                          ; preds = %bb241
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_616.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1366 to %"core::panic::location::Location"*)) #17
  unreachable

bb243:                                            ; preds = %bb242
  %_624 = icmp ult i64 %_622.0, 256
  %236 = call i1 @llvm.expect.i1(i1 %_624, i1 true)
  br i1 %236, label %bb244, label %panic77

panic76:                                          ; preds = %bb242
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1368 to %"core::panic::location::Location"*)) #17
  unreachable

bb244:                                            ; preds = %bb243
  %237 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %238 = getelementptr inbounds [256 x i32], [256 x i32]* %237, i64 0, i64 %_622.0
  store i32 %_619, i32* %238, align 4
  %_625 = load i32, i32* %h, align 4
  %239 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 7)
  %_628.0 = extractvalue { i64, i1 } %239, 0
  %_628.1 = extractvalue { i64, i1 } %239, 1
  %240 = call i1 @llvm.expect.i1(i1 %_628.1, i1 false)
  br i1 %240, label %panic78, label %bb245

panic77:                                          ; preds = %bb243
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_622.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1370 to %"core::panic::location::Location"*)) #17
  unreachable

bb245:                                            ; preds = %bb244
  %_630 = icmp ult i64 %_628.0, 256
  %241 = call i1 @llvm.expect.i1(i1 %_630, i1 true)
  br i1 %241, label %bb246, label %panic79

panic78:                                          ; preds = %bb244
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1372 to %"core::panic::location::Location"*)) #17
  unreachable

bb246:                                            ; preds = %bb245
  %242 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %243 = getelementptr inbounds [256 x i32], [256 x i32]* %242, i64 0, i64 %_628.0
  store i32 %_625, i32* %243, align 4
  br label %bb196

panic79:                                          ; preds = %bb245
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_628.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1374 to %"core::panic::location::Location"*)) #17
  unreachable

bb248:                                            ; preds = %bb247
  ret void
}

; rand::prng::isaac::IsaacRng::init::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4rand4prng5isaac8IsaacRng4init28_$u7b$$u7b$closure$u7d$$u7d$17h1657134d1b97eb12E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66].1"* nonnull align 1 %_1, i64 %i) unnamed_addr #0 {
start:
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %i, i64 8)
  %_4.0 = extractvalue { i64, i1 } %0, 0
  %_4.1 = extractvalue { i64, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  ret i64 %_4.0

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1342 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::prng::isaac::IsaacRng::init::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4rand4prng5isaac8IsaacRng4init28_$u7b$$u7b$closure$u7d$$u7d$17h32e753f80c3521b6E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:98:57: 98:66]"* nonnull align 1 %_1, i64 %i) unnamed_addr #0 {
start:
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %i, i64 8)
  %_4.0 = extractvalue { i64, i1 } %0, 0
  %_4.1 = extractvalue { i64, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  ret i64 %_4.0

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1344 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::prng::isaac::IsaacRng::init::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4rand4prng5isaac8IsaacRng4init28_$u7b$$u7b$closure$u7d$$u7d$17h9729f488993e39c9E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:115:49: 115:58]"* nonnull align 1 %_1, i64 %i) unnamed_addr #0 {
start:
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %i, i64 8)
  %_4.0 = extractvalue { i64, i1 } %0, 0
  %_4.1 = extractvalue { i64, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  ret i64 %_4.0

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1376 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::prng::isaac::IsaacRng::isaac
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4rand4prng5isaac8IsaacRng5isaac17h14100654103e8bbdE(%"prng::isaac::IsaacRng"* align 4 dereferenceable(2064) %self) unnamed_addr #0 {
start:
  %_28 = alloca { i64, i64 }, align 8
  %iter1 = alloca { i64, i64 }, align 8
  %_25 = alloca { i64, i64 }, align 8
  %_17 = alloca i64*, align 8
  %iter = alloca { i64*, i64* }, align 8
  %_11 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %r = alloca [2 x { i64, i64 }], align 8
  %b = alloca i32, align 4
  %a = alloca i32, align 4
  %_4 = alloca i32, align 4
  %0 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 5
  %_3 = load i32, i32* %0, align 4
  store i32 1, i32* %_4, align 4
  %1 = load i32, i32* %_4, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_2 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_3, i32 %1)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 5
  store i32 %_2, i32* %2, align 4
  %3 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  store i32 %4, i32* %a, align 4
  %5 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 4
  %_7 = load i32, i32* %5, align 4
  %6 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 5
  %_8 = load i32, i32* %6, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %7 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_7, i32 %_8)
  store i32 %7, i32* %b, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast { i64, i64 }* %_10 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  store i64 128, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %_11 to i64*
  store i64 128, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = bitcast [2 x { i64, i64 }]* %r to { i64, i64 }*
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0
  store i64 %13, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1
  store i64 %15, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds [2 x { i64, i64 }], [2 x { i64, i64 }]* %r, i32 0, i32 1
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i32 0, i32 0
  store i64 %20, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i32 0, i32 1
  store i64 %22, i64* %25, align 8
  %_14.0 = bitcast [2 x { i64, i64 }]* %r to [0 x { i64, i64 }]*
; call core::slice::<impl [T]>::iter
  %26 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h3eeeac8675102f82E"([0 x { i64, i64 }]* nonnull align 8 %_14.0, i64 2)
  %_13.0 = extractvalue { i64*, i64* } %26, 0
  %_13.1 = extractvalue { i64*, i64* } %26, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %27 = call { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0b3cdb7b3691da20E"(i64* nonnull %_13.0, i64* %_13.1)
  %_12.0 = extractvalue { i64*, i64* } %27, 0
  %_12.1 = extractvalue { i64*, i64* } %27, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %28 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 0
  store i64* %_12.0, i64** %28, align 8
  %29 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1
  store i64* %_12.1, i64** %29, align 8
  br label %bb5

bb5:                                              ; preds = %bb13, %bb4
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %30 = call align 8 dereferenceable_or_null(16) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hab089d292ee7ec54E"({ i64*, i64* }* align 8 dereferenceable(16) %iter)
  store i64* %30, i64** %_17, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %31 = bitcast i64** %_17 to {}**
  %32 = load {}*, {}** %31, align 8
  %33 = icmp eq {}* %32, null
  %_20 = select i1 %33, i64 0, i64 1
  switch i64 %_20, label %bb8 [
    i64 0, label %bb9
    i64 1, label %bb7
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb9:                                              ; preds = %bb6
  %_281 = load i32, i32* %a, align 4
  %34 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 3
  store i32 %_281, i32* %34, align 4
  %_282 = load i32, i32* %b, align 4
  %35 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 4
  store i32 %_282, i32* %35, align 4
  %36 = bitcast %"prng::isaac::IsaacRng"* %self to i32*
  store i32 256, i32* %36, align 4
  ret void

bb7:                                              ; preds = %bb6
  %37 = bitcast i64** %_17 to { i64, i64 }**
  %38 = load { i64, i64 }*, { i64, i64 }** %37, align 8, !nonnull !5
  %39 = bitcast { i64, i64 }* %38 to i64*
  %mr_offset = load i64, i64* %39, align 8
  %40 = bitcast i64** %_17 to { i64, i64 }**
  %41 = load { i64, i64 }*, { i64, i64 }** %40, align 8, !nonnull !5
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %41, i32 0, i32 1
  %m2_offset = load i64, i64* %42, align 8
  %43 = bitcast { i64, i64 }* %_25 to i64*
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_25, i32 0, i32 1
  store i64 32, i64* %44, align 8
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_25, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_25, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
; call core::iter::traits::iterator::Iterator::map
  %49 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17hf66b1c52ac9a2eb2E(i64 %46, i64 %48)
  %_24.0 = extractvalue { i64, i64 } %49, 0
  %_24.1 = extractvalue { i64, i64 } %49, 1
  br label %bb10

bb10:                                             ; preds = %bb7
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %50 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h237eded1eaf4e6edE"(i64 %_24.0, i64 %_24.1)
  %_23.0 = extractvalue { i64, i64 } %50, 0
  %_23.1 = extractvalue { i64, i64 } %50, 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter1, i32 0, i32 0
  store i64 %_23.0, i64* %51, align 8
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter1, i32 0, i32 1
  store i64 %_23.1, i64* %52, align 8
  br label %bb12

bb12:                                             ; preds = %bb95, %bb11
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %53 = call { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hbf3b3d13b98f8a73E"({ i64, i64 }* align 8 dereferenceable(16) %iter1)
  store { i64, i64 } %53, { i64, i64 }* %_28, align 8
  br label %bb13

bb13:                                             ; preds = %bb12
  %54 = bitcast { i64, i64 }* %_28 to i64*
  %_31 = load i64, i64* %54, align 8, !range !2
  switch i64 %_31, label %bb15 [
    i64 0, label %bb5
    i64 1, label %bb14
  ]

bb15:                                             ; preds = %bb13
  unreachable

bb14:                                             ; preds = %bb13
  %55 = bitcast { i64, i64 }* %_28 to %"core::option::Option<usize>::Some"*
  %56 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %55, i32 0, i32 1
  %i = load i64, i64* %56, align 8
  %57 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 0)
  %_35.0 = extractvalue { i64, i1 } %57, 0
  %_35.1 = extractvalue { i64, i1 } %57, 1
  %58 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false)
  br i1 %58, label %panic, label %bb16

bb16:                                             ; preds = %bb14
  %_37 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %mix = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_37, i64 13)
  br label %bb17

panic:                                            ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1378 to %"core::panic::location::Location"*)) #17
  unreachable

bb17:                                             ; preds = %bb16
  %59 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_35.0, i64 %mr_offset)
  %_42.0 = extractvalue { i64, i1 } %59, 0
  %_42.1 = extractvalue { i64, i1 } %59, 1
  %60 = call i1 @llvm.expect.i1(i1 %_42.1, i1 false)
  br i1 %60, label %panic2, label %bb18

bb18:                                             ; preds = %bb17
  %_44 = icmp ult i64 %_42.0, 256
  %61 = call i1 @llvm.expect.i1(i1 %_44, i1 true)
  br i1 %61, label %bb19, label %panic3

panic2:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1380 to %"core::panic::location::Location"*)) #17
  unreachable

bb19:                                             ; preds = %bb18
  %62 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %63 = getelementptr inbounds [256 x i32], [256 x i32]* %62, i64 0, i64 %_42.0
  %x = load i32, i32* %63, align 4
  %_47 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_46 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_47, i32 %mix)
  br label %bb20

panic3:                                           ; preds = %bb18
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_42.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1380 to %"core::panic::location::Location"*)) #17
  unreachable

bb20:                                             ; preds = %bb19
  %64 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_35.0, i64 %m2_offset)
  %_53.0 = extractvalue { i64, i1 } %64, 0
  %_53.1 = extractvalue { i64, i1 } %64, 1
  %65 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false)
  br i1 %65, label %panic4, label %bb21

bb21:                                             ; preds = %bb20
  %_55 = icmp ult i64 %_53.0, 256
  %66 = call i1 @llvm.expect.i1(i1 %_55, i1 true)
  br i1 %66, label %bb22, label %panic5

panic4:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1380 to %"core::panic::location::Location"*)) #17
  unreachable

bb22:                                             ; preds = %bb21
  %67 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %68 = getelementptr inbounds [256 x i32], [256 x i32]* %67, i64 0, i64 %_53.0
  %_49 = load i32, i32* %68, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_45 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_46, i32 %_49)
  br label %bb23

panic5:                                           ; preds = %bb21
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_53.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1380 to %"core::panic::location::Location"*)) #17
  unreachable

bb23:                                             ; preds = %bb22
  store i32 %_45, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_62 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %x, i64 2)
  br label %bb24

bb24:                                             ; preds = %bb23
  %_60 = zext i32 %_62 to i64
  %_59 = and i64 %_60, 255
  %_66 = icmp ult i64 %_59, 256
  %69 = call i1 @llvm.expect.i1(i1 %_66, i1 true)
  br i1 %69, label %bb25, label %panic6

bb25:                                             ; preds = %bb24
  %70 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %71 = getelementptr inbounds [256 x i32], [256 x i32]* %70, i64 0, i64 %_59
  %_58 = load i32, i32* %71, align 4
  %_67 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_57 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_58, i32 %_67)
  br label %bb26

panic6:                                           ; preds = %bb24
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_59, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1380 to %"core::panic::location::Location"*)) #17
  unreachable

bb26:                                             ; preds = %bb25
  %_68 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %y = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_57, i32 %_68)
  br label %bb27

bb27:                                             ; preds = %bb26
  %72 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_35.0, i64 %mr_offset)
  %_73.0 = extractvalue { i64, i1 } %72, 0
  %_73.1 = extractvalue { i64, i1 } %72, 1
  %73 = call i1 @llvm.expect.i1(i1 %_73.1, i1 false)
  br i1 %73, label %panic7, label %bb28

bb28:                                             ; preds = %bb27
  %_75 = icmp ult i64 %_73.0, 256
  %74 = call i1 @llvm.expect.i1(i1 %_75, i1 true)
  br i1 %74, label %bb29, label %panic8

panic7:                                           ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1380 to %"core::panic::location::Location"*)) #17
  unreachable

bb29:                                             ; preds = %bb28
  %75 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %76 = getelementptr inbounds [256 x i32], [256 x i32]* %75, i64 0, i64 %_73.0
  store i32 %y, i32* %76, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_82 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %y, i64 8)
  br label %bb30

panic8:                                           ; preds = %bb28
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_73.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1380 to %"core::panic::location::Location"*)) #17
  unreachable

bb30:                                             ; preds = %bb29
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_81 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_82, i64 2)
  br label %bb31

bb31:                                             ; preds = %bb30
  %_79 = zext i32 %_81 to i64
  %_78 = and i64 %_79, 255
  %_86 = icmp ult i64 %_78, 256
  %77 = call i1 @llvm.expect.i1(i1 %_86, i1 true)
  br i1 %77, label %bb32, label %panic9

bb32:                                             ; preds = %bb31
  %78 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %79 = getelementptr inbounds [256 x i32], [256 x i32]* %78, i64 0, i64 %_78
  %_77 = load i32, i32* %79, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_76 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_77, i32 %x)
  br label %bb33

panic9:                                           ; preds = %bb31
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_78, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1380 to %"core::panic::location::Location"*)) #17
  unreachable

bb33:                                             ; preds = %bb32
  store i32 %_76, i32* %b, align 4
  %_88 = load i32, i32* %b, align 4
  %80 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_35.0, i64 %mr_offset)
  %_92.0 = extractvalue { i64, i1 } %80, 0
  %_92.1 = extractvalue { i64, i1 } %80, 1
  %81 = call i1 @llvm.expect.i1(i1 %_92.1, i1 false)
  br i1 %81, label %panic10, label %bb34

bb34:                                             ; preds = %bb33
  %_94 = icmp ult i64 %_92.0, 256
  %82 = call i1 @llvm.expect.i1(i1 %_94, i1 true)
  br i1 %82, label %bb35, label %panic11

panic10:                                          ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1380 to %"core::panic::location::Location"*)) #17
  unreachable

bb35:                                             ; preds = %bb34
  %83 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 1
  %84 = getelementptr inbounds [256 x i32], [256 x i32]* %83, i64 0, i64 %_92.0
  store i32 %_88, i32* %84, align 4
  %85 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 1)
  %_97.0 = extractvalue { i64, i1 } %85, 0
  %_97.1 = extractvalue { i64, i1 } %85, 1
  %86 = call i1 @llvm.expect.i1(i1 %_97.1, i1 false)
  br i1 %86, label %panic12, label %bb36

panic11:                                          ; preds = %bb34
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_92.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1380 to %"core::panic::location::Location"*)) #17
  unreachable

bb36:                                             ; preds = %bb35
  %_99 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %mix13 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_99, i64 6)
  br label %bb37

panic12:                                          ; preds = %bb35
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1382 to %"core::panic::location::Location"*)) #17
  unreachable

bb37:                                             ; preds = %bb36
  %87 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_97.0, i64 %mr_offset)
  %_104.0 = extractvalue { i64, i1 } %87, 0
  %_104.1 = extractvalue { i64, i1 } %87, 1
  %88 = call i1 @llvm.expect.i1(i1 %_104.1, i1 false)
  br i1 %88, label %panic14, label %bb38

bb38:                                             ; preds = %bb37
  %_106 = icmp ult i64 %_104.0, 256
  %89 = call i1 @llvm.expect.i1(i1 %_106, i1 true)
  br i1 %89, label %bb39, label %panic15

panic14:                                          ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1384 to %"core::panic::location::Location"*)) #17
  unreachable

bb39:                                             ; preds = %bb38
  %90 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %91 = getelementptr inbounds [256 x i32], [256 x i32]* %90, i64 0, i64 %_104.0
  %x16 = load i32, i32* %91, align 4
  %_109 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_108 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_109, i32 %mix13)
  br label %bb40

panic15:                                          ; preds = %bb38
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_104.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1384 to %"core::panic::location::Location"*)) #17
  unreachable

bb40:                                             ; preds = %bb39
  %92 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_97.0, i64 %m2_offset)
  %_115.0 = extractvalue { i64, i1 } %92, 0
  %_115.1 = extractvalue { i64, i1 } %92, 1
  %93 = call i1 @llvm.expect.i1(i1 %_115.1, i1 false)
  br i1 %93, label %panic17, label %bb41

bb41:                                             ; preds = %bb40
  %_117 = icmp ult i64 %_115.0, 256
  %94 = call i1 @llvm.expect.i1(i1 %_117, i1 true)
  br i1 %94, label %bb42, label %panic18

panic17:                                          ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1384 to %"core::panic::location::Location"*)) #17
  unreachable

bb42:                                             ; preds = %bb41
  %95 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %96 = getelementptr inbounds [256 x i32], [256 x i32]* %95, i64 0, i64 %_115.0
  %_111 = load i32, i32* %96, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_107 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_108, i32 %_111)
  br label %bb43

panic18:                                          ; preds = %bb41
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_115.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1384 to %"core::panic::location::Location"*)) #17
  unreachable

bb43:                                             ; preds = %bb42
  store i32 %_107, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_124 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %x16, i64 2)
  br label %bb44

bb44:                                             ; preds = %bb43
  %_122 = zext i32 %_124 to i64
  %_121 = and i64 %_122, 255
  %_128 = icmp ult i64 %_121, 256
  %97 = call i1 @llvm.expect.i1(i1 %_128, i1 true)
  br i1 %97, label %bb45, label %panic19

bb45:                                             ; preds = %bb44
  %98 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %99 = getelementptr inbounds [256 x i32], [256 x i32]* %98, i64 0, i64 %_121
  %_120 = load i32, i32* %99, align 4
  %_129 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_119 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_120, i32 %_129)
  br label %bb46

panic19:                                          ; preds = %bb44
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_121, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1384 to %"core::panic::location::Location"*)) #17
  unreachable

bb46:                                             ; preds = %bb45
  %_130 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %y20 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_119, i32 %_130)
  br label %bb47

bb47:                                             ; preds = %bb46
  %100 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_97.0, i64 %mr_offset)
  %_135.0 = extractvalue { i64, i1 } %100, 0
  %_135.1 = extractvalue { i64, i1 } %100, 1
  %101 = call i1 @llvm.expect.i1(i1 %_135.1, i1 false)
  br i1 %101, label %panic21, label %bb48

bb48:                                             ; preds = %bb47
  %_137 = icmp ult i64 %_135.0, 256
  %102 = call i1 @llvm.expect.i1(i1 %_137, i1 true)
  br i1 %102, label %bb49, label %panic22

panic21:                                          ; preds = %bb47
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1384 to %"core::panic::location::Location"*)) #17
  unreachable

bb49:                                             ; preds = %bb48
  %103 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %104 = getelementptr inbounds [256 x i32], [256 x i32]* %103, i64 0, i64 %_135.0
  store i32 %y20, i32* %104, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_144 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %y20, i64 8)
  br label %bb50

panic22:                                          ; preds = %bb48
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_135.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1384 to %"core::panic::location::Location"*)) #17
  unreachable

bb50:                                             ; preds = %bb49
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_143 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_144, i64 2)
  br label %bb51

bb51:                                             ; preds = %bb50
  %_141 = zext i32 %_143 to i64
  %_140 = and i64 %_141, 255
  %_148 = icmp ult i64 %_140, 256
  %105 = call i1 @llvm.expect.i1(i1 %_148, i1 true)
  br i1 %105, label %bb52, label %panic23

bb52:                                             ; preds = %bb51
  %106 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %107 = getelementptr inbounds [256 x i32], [256 x i32]* %106, i64 0, i64 %_140
  %_139 = load i32, i32* %107, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_138 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_139, i32 %x16)
  br label %bb53

panic23:                                          ; preds = %bb51
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_140, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1384 to %"core::panic::location::Location"*)) #17
  unreachable

bb53:                                             ; preds = %bb52
  store i32 %_138, i32* %b, align 4
  %_150 = load i32, i32* %b, align 4
  %108 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_97.0, i64 %mr_offset)
  %_154.0 = extractvalue { i64, i1 } %108, 0
  %_154.1 = extractvalue { i64, i1 } %108, 1
  %109 = call i1 @llvm.expect.i1(i1 %_154.1, i1 false)
  br i1 %109, label %panic24, label %bb54

bb54:                                             ; preds = %bb53
  %_156 = icmp ult i64 %_154.0, 256
  %110 = call i1 @llvm.expect.i1(i1 %_156, i1 true)
  br i1 %110, label %bb55, label %panic25

panic24:                                          ; preds = %bb53
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1384 to %"core::panic::location::Location"*)) #17
  unreachable

bb55:                                             ; preds = %bb54
  %111 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 1
  %112 = getelementptr inbounds [256 x i32], [256 x i32]* %111, i64 0, i64 %_154.0
  store i32 %_150, i32* %112, align 4
  %113 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 2)
  %_159.0 = extractvalue { i64, i1 } %113, 0
  %_159.1 = extractvalue { i64, i1 } %113, 1
  %114 = call i1 @llvm.expect.i1(i1 %_159.1, i1 false)
  br i1 %114, label %panic26, label %bb56

panic25:                                          ; preds = %bb54
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_154.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1384 to %"core::panic::location::Location"*)) #17
  unreachable

bb56:                                             ; preds = %bb55
  %_161 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shl<usize>>::shl
  %mix27 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17haf29b7994f720da0E"(i32 %_161, i64 2)
  br label %bb57

panic26:                                          ; preds = %bb55
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1386 to %"core::panic::location::Location"*)) #17
  unreachable

bb57:                                             ; preds = %bb56
  %115 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_159.0, i64 %mr_offset)
  %_166.0 = extractvalue { i64, i1 } %115, 0
  %_166.1 = extractvalue { i64, i1 } %115, 1
  %116 = call i1 @llvm.expect.i1(i1 %_166.1, i1 false)
  br i1 %116, label %panic28, label %bb58

bb58:                                             ; preds = %bb57
  %_168 = icmp ult i64 %_166.0, 256
  %117 = call i1 @llvm.expect.i1(i1 %_168, i1 true)
  br i1 %117, label %bb59, label %panic29

panic28:                                          ; preds = %bb57
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1388 to %"core::panic::location::Location"*)) #17
  unreachable

bb59:                                             ; preds = %bb58
  %118 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %119 = getelementptr inbounds [256 x i32], [256 x i32]* %118, i64 0, i64 %_166.0
  %x30 = load i32, i32* %119, align 4
  %_171 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_170 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_171, i32 %mix27)
  br label %bb60

panic29:                                          ; preds = %bb58
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_166.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1388 to %"core::panic::location::Location"*)) #17
  unreachable

bb60:                                             ; preds = %bb59
  %120 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_159.0, i64 %m2_offset)
  %_177.0 = extractvalue { i64, i1 } %120, 0
  %_177.1 = extractvalue { i64, i1 } %120, 1
  %121 = call i1 @llvm.expect.i1(i1 %_177.1, i1 false)
  br i1 %121, label %panic31, label %bb61

bb61:                                             ; preds = %bb60
  %_179 = icmp ult i64 %_177.0, 256
  %122 = call i1 @llvm.expect.i1(i1 %_179, i1 true)
  br i1 %122, label %bb62, label %panic32

panic31:                                          ; preds = %bb60
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1388 to %"core::panic::location::Location"*)) #17
  unreachable

bb62:                                             ; preds = %bb61
  %123 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %124 = getelementptr inbounds [256 x i32], [256 x i32]* %123, i64 0, i64 %_177.0
  %_173 = load i32, i32* %124, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_169 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_170, i32 %_173)
  br label %bb63

panic32:                                          ; preds = %bb61
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_177.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1388 to %"core::panic::location::Location"*)) #17
  unreachable

bb63:                                             ; preds = %bb62
  store i32 %_169, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_186 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %x30, i64 2)
  br label %bb64

bb64:                                             ; preds = %bb63
  %_184 = zext i32 %_186 to i64
  %_183 = and i64 %_184, 255
  %_190 = icmp ult i64 %_183, 256
  %125 = call i1 @llvm.expect.i1(i1 %_190, i1 true)
  br i1 %125, label %bb65, label %panic33

bb65:                                             ; preds = %bb64
  %126 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %127 = getelementptr inbounds [256 x i32], [256 x i32]* %126, i64 0, i64 %_183
  %_182 = load i32, i32* %127, align 4
  %_191 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_181 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_182, i32 %_191)
  br label %bb66

panic33:                                          ; preds = %bb64
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_183, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1388 to %"core::panic::location::Location"*)) #17
  unreachable

bb66:                                             ; preds = %bb65
  %_192 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %y34 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_181, i32 %_192)
  br label %bb67

bb67:                                             ; preds = %bb66
  %128 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_159.0, i64 %mr_offset)
  %_197.0 = extractvalue { i64, i1 } %128, 0
  %_197.1 = extractvalue { i64, i1 } %128, 1
  %129 = call i1 @llvm.expect.i1(i1 %_197.1, i1 false)
  br i1 %129, label %panic35, label %bb68

bb68:                                             ; preds = %bb67
  %_199 = icmp ult i64 %_197.0, 256
  %130 = call i1 @llvm.expect.i1(i1 %_199, i1 true)
  br i1 %130, label %bb69, label %panic36

panic35:                                          ; preds = %bb67
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1388 to %"core::panic::location::Location"*)) #17
  unreachable

bb69:                                             ; preds = %bb68
  %131 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %132 = getelementptr inbounds [256 x i32], [256 x i32]* %131, i64 0, i64 %_197.0
  store i32 %y34, i32* %132, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_206 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %y34, i64 8)
  br label %bb70

panic36:                                          ; preds = %bb68
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_197.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1388 to %"core::panic::location::Location"*)) #17
  unreachable

bb70:                                             ; preds = %bb69
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_205 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_206, i64 2)
  br label %bb71

bb71:                                             ; preds = %bb70
  %_203 = zext i32 %_205 to i64
  %_202 = and i64 %_203, 255
  %_210 = icmp ult i64 %_202, 256
  %133 = call i1 @llvm.expect.i1(i1 %_210, i1 true)
  br i1 %133, label %bb72, label %panic37

bb72:                                             ; preds = %bb71
  %134 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %135 = getelementptr inbounds [256 x i32], [256 x i32]* %134, i64 0, i64 %_202
  %_201 = load i32, i32* %135, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_200 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_201, i32 %x30)
  br label %bb73

panic37:                                          ; preds = %bb71
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_202, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1388 to %"core::panic::location::Location"*)) #17
  unreachable

bb73:                                             ; preds = %bb72
  store i32 %_200, i32* %b, align 4
  %_212 = load i32, i32* %b, align 4
  %136 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_159.0, i64 %mr_offset)
  %_216.0 = extractvalue { i64, i1 } %136, 0
  %_216.1 = extractvalue { i64, i1 } %136, 1
  %137 = call i1 @llvm.expect.i1(i1 %_216.1, i1 false)
  br i1 %137, label %panic38, label %bb74

bb74:                                             ; preds = %bb73
  %_218 = icmp ult i64 %_216.0, 256
  %138 = call i1 @llvm.expect.i1(i1 %_218, i1 true)
  br i1 %138, label %bb75, label %panic39

panic38:                                          ; preds = %bb73
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1388 to %"core::panic::location::Location"*)) #17
  unreachable

bb75:                                             ; preds = %bb74
  %139 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 1
  %140 = getelementptr inbounds [256 x i32], [256 x i32]* %139, i64 0, i64 %_216.0
  store i32 %_212, i32* %140, align 4
  %141 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 3)
  %_221.0 = extractvalue { i64, i1 } %141, 0
  %_221.1 = extractvalue { i64, i1 } %141, 1
  %142 = call i1 @llvm.expect.i1(i1 %_221.1, i1 false)
  br i1 %142, label %panic40, label %bb76

panic39:                                          ; preds = %bb74
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_216.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1388 to %"core::panic::location::Location"*)) #17
  unreachable

bb76:                                             ; preds = %bb75
  %_223 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %mix41 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_223, i64 16)
  br label %bb77

panic40:                                          ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1390 to %"core::panic::location::Location"*)) #17
  unreachable

bb77:                                             ; preds = %bb76
  %143 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_221.0, i64 %mr_offset)
  %_228.0 = extractvalue { i64, i1 } %143, 0
  %_228.1 = extractvalue { i64, i1 } %143, 1
  %144 = call i1 @llvm.expect.i1(i1 %_228.1, i1 false)
  br i1 %144, label %panic42, label %bb78

bb78:                                             ; preds = %bb77
  %_230 = icmp ult i64 %_228.0, 256
  %145 = call i1 @llvm.expect.i1(i1 %_230, i1 true)
  br i1 %145, label %bb79, label %panic43

panic42:                                          ; preds = %bb77
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1392 to %"core::panic::location::Location"*)) #17
  unreachable

bb79:                                             ; preds = %bb78
  %146 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %147 = getelementptr inbounds [256 x i32], [256 x i32]* %146, i64 0, i64 %_228.0
  %x44 = load i32, i32* %147, align 4
  %_233 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::BitXor>::bitxor
  %_232 = call i32 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h231a5f85275acc87E"(i32 %_233, i32 %mix41)
  br label %bb80

panic43:                                          ; preds = %bb78
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_228.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1392 to %"core::panic::location::Location"*)) #17
  unreachable

bb80:                                             ; preds = %bb79
  %148 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_221.0, i64 %m2_offset)
  %_239.0 = extractvalue { i64, i1 } %148, 0
  %_239.1 = extractvalue { i64, i1 } %148, 1
  %149 = call i1 @llvm.expect.i1(i1 %_239.1, i1 false)
  br i1 %149, label %panic45, label %bb81

bb81:                                             ; preds = %bb80
  %_241 = icmp ult i64 %_239.0, 256
  %150 = call i1 @llvm.expect.i1(i1 %_241, i1 true)
  br i1 %150, label %bb82, label %panic46

panic45:                                          ; preds = %bb80
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1392 to %"core::panic::location::Location"*)) #17
  unreachable

bb82:                                             ; preds = %bb81
  %151 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %152 = getelementptr inbounds [256 x i32], [256 x i32]* %151, i64 0, i64 %_239.0
  %_235 = load i32, i32* %152, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_231 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_232, i32 %_235)
  br label %bb83

panic46:                                          ; preds = %bb81
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_239.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1392 to %"core::panic::location::Location"*)) #17
  unreachable

bb83:                                             ; preds = %bb82
  store i32 %_231, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_248 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %x44, i64 2)
  br label %bb84

bb84:                                             ; preds = %bb83
  %_246 = zext i32 %_248 to i64
  %_245 = and i64 %_246, 255
  %_252 = icmp ult i64 %_245, 256
  %153 = call i1 @llvm.expect.i1(i1 %_252, i1 true)
  br i1 %153, label %bb85, label %panic47

bb85:                                             ; preds = %bb84
  %154 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %155 = getelementptr inbounds [256 x i32], [256 x i32]* %154, i64 0, i64 %_245
  %_244 = load i32, i32* %155, align 4
  %_253 = load i32, i32* %a, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_243 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_244, i32 %_253)
  br label %bb86

panic47:                                          ; preds = %bb84
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_245, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1392 to %"core::panic::location::Location"*)) #17
  unreachable

bb86:                                             ; preds = %bb85
  %_254 = load i32, i32* %b, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %y48 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_243, i32 %_254)
  br label %bb87

bb87:                                             ; preds = %bb86
  %156 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_221.0, i64 %mr_offset)
  %_259.0 = extractvalue { i64, i1 } %156, 0
  %_259.1 = extractvalue { i64, i1 } %156, 1
  %157 = call i1 @llvm.expect.i1(i1 %_259.1, i1 false)
  br i1 %157, label %panic49, label %bb88

bb88:                                             ; preds = %bb87
  %_261 = icmp ult i64 %_259.0, 256
  %158 = call i1 @llvm.expect.i1(i1 %_261, i1 true)
  br i1 %158, label %bb89, label %panic50

panic49:                                          ; preds = %bb87
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1392 to %"core::panic::location::Location"*)) #17
  unreachable

bb89:                                             ; preds = %bb88
  %159 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %160 = getelementptr inbounds [256 x i32], [256 x i32]* %159, i64 0, i64 %_259.0
  store i32 %y48, i32* %160, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_268 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %y48, i64 8)
  br label %bb90

panic50:                                          ; preds = %bb88
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_259.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1392 to %"core::panic::location::Location"*)) #17
  unreachable

bb90:                                             ; preds = %bb89
; call <core::num::wrapping::Wrapping<u32> as core::ops::bit::Shr<usize>>::shr
  %_267 = call i32 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17h068515cc64b5a797E"(i32 %_268, i64 2)
  br label %bb91

bb91:                                             ; preds = %bb90
  %_265 = zext i32 %_267 to i64
  %_264 = and i64 %_265, 255
  %_272 = icmp ult i64 %_264, 256
  %161 = call i1 @llvm.expect.i1(i1 %_272, i1 true)
  br i1 %161, label %bb92, label %panic51

bb92:                                             ; preds = %bb91
  %162 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 2
  %163 = getelementptr inbounds [256 x i32], [256 x i32]* %162, i64 0, i64 %_264
  %_263 = load i32, i32* %163, align 4
; call <core::num::wrapping::Wrapping<u32> as core::ops::arith::Add>::add
  %_262 = call i32 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u32$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h88e4e9ca464d735aE"(i32 %_263, i32 %x44)
  br label %bb93

panic51:                                          ; preds = %bb91
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_264, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1392 to %"core::panic::location::Location"*)) #17
  unreachable

bb93:                                             ; preds = %bb92
  store i32 %_262, i32* %b, align 4
  %_274 = load i32, i32* %b, align 4
  %164 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_221.0, i64 %mr_offset)
  %_278.0 = extractvalue { i64, i1 } %164, 0
  %_278.1 = extractvalue { i64, i1 } %164, 1
  %165 = call i1 @llvm.expect.i1(i1 %_278.1, i1 false)
  br i1 %165, label %panic52, label %bb94

bb94:                                             ; preds = %bb93
  %_280 = icmp ult i64 %_278.0, 256
  %166 = call i1 @llvm.expect.i1(i1 %_280, i1 true)
  br i1 %166, label %bb95, label %panic53

panic52:                                          ; preds = %bb93
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1392 to %"core::panic::location::Location"*)) #17
  unreachable

bb95:                                             ; preds = %bb94
  %167 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 1
  %168 = getelementptr inbounds [256 x i32], [256 x i32]* %167, i64 0, i64 %_278.0
  store i32 %_274, i32* %168, align 4
  br label %bb12

panic53:                                          ; preds = %bb94
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_278.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1392 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::prng::isaac::IsaacRng::isaac::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4rand4prng5isaac8IsaacRng5isaac28_$u7b$$u7b$closure$u7d$$u7d$17h0bd85e4fae91d915E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:174:42: 174:51]"* nonnull align 1 %_1, i64 %i) unnamed_addr #0 {
start:
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %i, i64 4)
  %_4.0 = extractvalue { i64, i1 } %0, 0
  %_4.1 = extractvalue { i64, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  ret i64 %_4.0

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1394 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <rand::prng::isaac::IsaacRng as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define void @"_ZN66_$LT$rand..prng..isaac..IsaacRng$u20$as$u20$core..clone..Clone$GT$5clone17h343a5202ca2c7eddE"(%"prng::isaac::IsaacRng"* noalias nocapture sret(%"prng::isaac::IsaacRng") dereferenceable(2064) %0, %"prng::isaac::IsaacRng"* align 4 dereferenceable(2064) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"prng::isaac::IsaacRng"* %0 to i8*
  %2 = bitcast %"prng::isaac::IsaacRng"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 2064, i1 false)
  ret void
}

; <rand::prng::isaac::IsaacRng as rand::SeedableRng<&[u32]>>::reseed
; Function Attrs: nonlazybind uwtable
define void @"_ZN90_$LT$rand..prng..isaac..IsaacRng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u32$u5d$$GT$$GT$6reseed17h1023b6c8c2851035E"(%"prng::isaac::IsaacRng"* align 4 dereferenceable(2064) %self, [0 x i32]* nonnull align 4 %seed.0, i64 %seed.1) unnamed_addr #1 {
start:
  %_26 = alloca i32, align 4
  %_25 = alloca i32, align 4
  %_24 = alloca i32, align 4
  %_22 = alloca i32, align 4
  %_16 = alloca { i32*, i32 }, align 8
  %iter = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>", align 8
  %_14 = alloca %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>", align 8
  %_10 = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>", align 8
  %_9 = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>", align 8
  %seed_iter = alloca %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>", align 8
; call core::slice::<impl [T]>::iter
  %0 = call { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17had3184a6394da70eE"([0 x i32]* nonnull align 4 %seed.0, i64 %seed.1)
  %_5.0 = extractvalue { i32*, i32* } %0, 0
  %_5.1 = extractvalue { i32*, i32* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::map
  %1 = call { i32*, i32* } @_ZN4core4iter6traits8iterator8Iterator3map17h139100dc49a72becE(i32* nonnull %_5.0, i32* %_5.1)
  %_4.0 = extractvalue { i32*, i32* } %1, 0
  %_4.1 = extractvalue { i32*, i32* } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::iter::sources::repeat::repeat
  %_8 = call i32 @_ZN4core4iter7sources6repeat6repeat17hf476dc39f4dc0f17E(i32 0)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::iter::traits::iterator::Iterator::chain
  call void @_ZN4core4iter6traits8iterator8Iterator5chain17h924c83ed88da79caE(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>") dereferenceable(24) %seed_iter, i32* nonnull %_4.0, i32* %_4.1, i32 %_8)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_13 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 1
  %_12.0 = bitcast [256 x i32]* %_13 to [0 x i32]*
; call core::slice::<impl [T]>::iter_mut
  %2 = call { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17hca52412a7f0c812dE"([0 x i32]* nonnull align 4 %_12.0, i64 256)
  %_11.0 = extractvalue { i32*, i32* } %2, 0
  %_11.1 = extractvalue { i32*, i32* } %2, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %3 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %_14 to i8*
  %4 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* %seed_iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
; call core::iter::traits::iterator::Iterator::zip
  call void @_ZN4core4iter6traits8iterator8Iterator3zip17h4e1662a5b299b8f2E(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>") dereferenceable(64) %_10, i32* nonnull %_11.0, i32* %_11.1, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>"* noalias nocapture dereferenceable(24) %_14)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9ba3ed6f3250699bE"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>") dereferenceable(64) %_9, %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* noalias nocapture dereferenceable(64) %_10)
  br label %bb7

bb7:                                              ; preds = %bb6
  %5 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* %iter to i8*
  %6 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 64, i1 false)
  br label %bb8

bb8:                                              ; preds = %bb10, %bb7
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
  %7 = call { i32*, i32 } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1fb8f0f618b2266fE"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u32>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u32>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]>, core::iter::sources::repeat::Repeat<u32>>>"* align 8 dereferenceable(64) %iter)
  store { i32*, i32 } %7, { i32*, i32 }* %_16, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %8 = bitcast { i32*, i32 }* %_16 to {}**
  %9 = load {}*, {}** %8, align 8
  %10 = icmp eq {}* %9, null
  %_19 = select i1 %10, i64 0, i64 1
  switch i64 %_19, label %bb11 [
    i64 0, label %bb12
    i64 1, label %bb10
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb12:                                             ; preds = %bb9
  %11 = bitcast %"prng::isaac::IsaacRng"* %self to i32*
  store i32 0, i32* %11, align 4
  store i32 0, i32* %_24, align 4
  %12 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 3
  %13 = load i32, i32* %_24, align 4
  store i32 %13, i32* %12, align 4
  store i32 0, i32* %_25, align 4
  %14 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 4
  %15 = load i32, i32* %_25, align 4
  store i32 %15, i32* %14, align 4
  store i32 0, i32* %_26, align 4
  %16 = getelementptr inbounds %"prng::isaac::IsaacRng", %"prng::isaac::IsaacRng"* %self, i32 0, i32 5
  %17 = load i32, i32* %_26, align 4
  store i32 %17, i32* %16, align 4
; call rand::prng::isaac::IsaacRng::init
  call void @_ZN4rand4prng5isaac8IsaacRng4init17h31bbb6bad26a1c6eE(%"prng::isaac::IsaacRng"* align 4 dereferenceable(2064) %self, i1 zeroext true)
  br label %bb13

bb10:                                             ; preds = %bb9
  %18 = bitcast { i32*, i32 }* %_16 to i32**
  %rsl_elem = load i32*, i32** %18, align 8, !nonnull !5
  %19 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %_16, i32 0, i32 1
  %seed_elem = load i32, i32* %19, align 8
  store i32 %seed_elem, i32* %_22, align 4
  %20 = load i32, i32* %_22, align 4
  store i32 %20, i32* %rsl_elem, align 4
  br label %bb8

bb13:                                             ; preds = %bb12
  ret void
}

; <rand::prng::isaac::IsaacRng as rand::SeedableRng<&[u32]>>::reseed::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN90_$LT$rand..prng..isaac..IsaacRng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u32$u5d$$GT$$GT$6reseed28_$u7b$$u7b$closure$u7d$$u7d$17h9093b4ef1389497fE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac.rs:223:41: 223:47]"* nonnull align 1 %_1, i32* align 4 dereferenceable(4) %_2) unnamed_addr #0 {
start:
  %x = load i32, i32* %_2, align 4
  ret i32 %x
}

; <rand::prng::isaac::IsaacRng as rand::SeedableRng<&[u32]>>::from_seed
; Function Attrs: nonlazybind uwtable
define void @"_ZN90_$LT$rand..prng..isaac..IsaacRng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u32$u5d$$GT$$GT$9from_seed17h628b382c90c3e8c0E"(%"prng::isaac::IsaacRng"* noalias nocapture sret(%"prng::isaac::IsaacRng") dereferenceable(2064) %rng, [0 x i32]* nonnull align 4 %seed.0, i64 %seed.1) unnamed_addr #1 {
start:
  %0 = bitcast %"prng::isaac::IsaacRng"* %rng to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 getelementptr inbounds (<{ [2064 x i8] }>, <{ [2064 x i8] }>* @_ZN4rand4prng5isaac5EMPTY17he612dcaf0f3ce96fE, i32 0, i32 0, i32 0), i64 2064, i1 false)
; call <rand::prng::isaac::IsaacRng as rand::SeedableRng<&[u32]>>::reseed
  call void @"_ZN90_$LT$rand..prng..isaac..IsaacRng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u32$u5d$$GT$$GT$6reseed17h1023b6c8c2851035E"(%"prng::isaac::IsaacRng"* align 4 dereferenceable(2064) %rng, [0 x i32]* nonnull align 4 %seed.0, i64 %seed.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <rand::prng::isaac::IsaacRng as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN64_$LT$rand..prng..isaac..IsaacRng$u20$as$u20$core..fmt..Debug$GT$3fmt17h6f8b0a15e00bd5b5E"(%"prng::isaac::IsaacRng"* align 4 dereferenceable(2064) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h039a7a01fe84f5c0E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc862 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc909 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_fmt
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; rand::prng::isaac64::Isaac64Rng::new_unseeded
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand4prng7isaac6410Isaac64Rng12new_unseeded17h48110419d236f34dE(%"prng::isaac64::Isaac64Rng"* noalias nocapture sret(%"prng::isaac64::Isaac64Rng") dereferenceable(4128) %rng) unnamed_addr #1 {
start:
  %0 = bitcast %"prng::isaac64::Isaac64Rng"* %rng to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 getelementptr inbounds (<{ [4128 x i8] }>, <{ [4128 x i8] }>* @_ZN4rand4prng7isaac648EMPTY_6417h39ef84dbe350a844E, i32 0, i32 0, i32 0), i64 4128, i1 false)
; call rand::prng::isaac64::Isaac64Rng::init
  call void @_ZN4rand4prng7isaac6410Isaac64Rng4init17ha48dfab8f2b175ddE(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %rng, i1 zeroext false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; rand::prng::isaac64::Isaac64Rng::init
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand4prng7isaac6410Isaac64Rng4init17ha48dfab8f2b175ddE(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %self, i1 zeroext %use_rsl) unnamed_addr #1 {
start:
  %_500 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_497 = alloca { i64, i64 }, align 8
  %_302 = alloca { i64, i64 }, align 8
  %iter2 = alloca { i64, i64 }, align 8
  %_299 = alloca { i64, i64 }, align 8
  %_104 = alloca { i64, i64 }, align 8
  %iter1 = alloca { i64, i64 }, align 8
  %_101 = alloca { i64, i64 }, align 8
  %_14 = alloca { i32, i32 }, align 4
  %iter = alloca { i32, i32 }, align 4
  %_12 = alloca { i32, i32 }, align 4
  %h = alloca i64, align 8
  %g = alloca i64, align 8
  %f = alloca i64, align 8
  %e = alloca i64, align 8
  %d = alloca i64, align 8
  %c = alloca i64, align 8
  %b = alloca i64, align 8
  %a = alloca i64, align 8
  store i64 -7046029254386353133, i64* %a, align 8
  store i64 -7046029254386353133, i64* %b, align 8
  store i64 -7046029254386353133, i64* %c, align 8
  store i64 -7046029254386353133, i64* %d, align 8
  store i64 -7046029254386353133, i64* %e, align 8
  store i64 -7046029254386353133, i64* %f, align 8
  store i64 -7046029254386353133, i64* %g, align 8
  store i64 -7046029254386353133, i64* %h, align 8
  %0 = bitcast { i32, i32 }* %_12 to i32*
  store i32 0, i32* %0, align 4
  %1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_12, i32 0, i32 1
  store i32 4, i32* %1, align 4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_12, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_12, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %6 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1ba709b59e4b6b38E"(i32 %3, i32 %5)
  %_11.0 = extractvalue { i32, i32 } %6, 0
  %_11.1 = extractvalue { i32, i32 } %6, 1
  br label %bb1

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 0
  store i32 %_11.0, i32* %7, align 4
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 1
  store i32 %_11.1, i32* %8, align 4
  br label %bb2

bb2:                                              ; preds = %bb38, %bb1
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %9 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h20d89e120cf0237dE"({ i32, i32 }* align 4 dereferenceable(8) %iter)
  store { i32, i32 } %9, { i32, i32 }* %_14, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  %10 = bitcast { i32, i32 }* %_14 to i32*
  %11 = load i32, i32* %10, align 4, !range !3
  %_17 = zext i32 %11 to i64
  switch i64 %_17, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  br i1 %use_rsl, label %bb39, label %bb40

bb4:                                              ; preds = %bb3
  %_19 = load i64, i64* %a, align 8
  %_20 = load i64, i64* %e, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_18 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_19, i64 %_20)
  br label %bb7

bb7:                                              ; preds = %bb4
  store i64 %_18, i64* %a, align 8
  %_22 = load i64, i64* %f, align 8
  %_24 = load i64, i64* %h, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_23 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_24, i64 9)
  br label %bb8

bb8:                                              ; preds = %bb7
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_21 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_22, i64 %_23)
  br label %bb9

bb9:                                              ; preds = %bb8
  store i64 %_21, i64* %f, align 8
  %_26 = load i64, i64* %h, align 8
  %_27 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_25 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_26, i64 %_27)
  br label %bb10

bb10:                                             ; preds = %bb9
  store i64 %_25, i64* %h, align 8
  %_29 = load i64, i64* %b, align 8
  %_30 = load i64, i64* %f, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_28 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_29, i64 %_30)
  br label %bb11

bb11:                                             ; preds = %bb10
  store i64 %_28, i64* %b, align 8
  %_32 = load i64, i64* %g, align 8
  %_34 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_33 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_34, i64 9)
  br label %bb12

bb12:                                             ; preds = %bb11
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_31 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_32, i64 %_33)
  br label %bb13

bb13:                                             ; preds = %bb12
  store i64 %_31, i64* %g, align 8
  %_36 = load i64, i64* %a, align 8
  %_37 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_35 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_36, i64 %_37)
  br label %bb14

bb14:                                             ; preds = %bb13
  store i64 %_35, i64* %a, align 8
  %_39 = load i64, i64* %c, align 8
  %_40 = load i64, i64* %g, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_38 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_39, i64 %_40)
  br label %bb15

bb15:                                             ; preds = %bb14
  store i64 %_38, i64* %c, align 8
  %_42 = load i64, i64* %h, align 8
  %_44 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_43 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_44, i64 23)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_41 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_42, i64 %_43)
  br label %bb17

bb17:                                             ; preds = %bb16
  store i64 %_41, i64* %h, align 8
  %_46 = load i64, i64* %b, align 8
  %_47 = load i64, i64* %c, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_45 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_46, i64 %_47)
  br label %bb18

bb18:                                             ; preds = %bb17
  store i64 %_45, i64* %b, align 8
  %_49 = load i64, i64* %d, align 8
  %_50 = load i64, i64* %h, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_48 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_49, i64 %_50)
  br label %bb19

bb19:                                             ; preds = %bb18
  store i64 %_48, i64* %d, align 8
  %_52 = load i64, i64* %a, align 8
  %_54 = load i64, i64* %c, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_53 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_54, i64 15)
  br label %bb20

bb20:                                             ; preds = %bb19
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_51 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_52, i64 %_53)
  br label %bb21

bb21:                                             ; preds = %bb20
  store i64 %_51, i64* %a, align 8
  %_56 = load i64, i64* %c, align 8
  %_57 = load i64, i64* %d, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_55 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_56, i64 %_57)
  br label %bb22

bb22:                                             ; preds = %bb21
  store i64 %_55, i64* %c, align 8
  %_59 = load i64, i64* %e, align 8
  %_60 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_58 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_59, i64 %_60)
  br label %bb23

bb23:                                             ; preds = %bb22
  store i64 %_58, i64* %e, align 8
  %_62 = load i64, i64* %b, align 8
  %_64 = load i64, i64* %d, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_63 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_64, i64 14)
  br label %bb24

bb24:                                             ; preds = %bb23
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_61 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_62, i64 %_63)
  br label %bb25

bb25:                                             ; preds = %bb24
  store i64 %_61, i64* %b, align 8
  %_66 = load i64, i64* %d, align 8
  %_67 = load i64, i64* %e, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_65 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_66, i64 %_67)
  br label %bb26

bb26:                                             ; preds = %bb25
  store i64 %_65, i64* %d, align 8
  %_69 = load i64, i64* %f, align 8
  %_70 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_68 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_69, i64 %_70)
  br label %bb27

bb27:                                             ; preds = %bb26
  store i64 %_68, i64* %f, align 8
  %_72 = load i64, i64* %c, align 8
  %_74 = load i64, i64* %e, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_73 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_74, i64 20)
  br label %bb28

bb28:                                             ; preds = %bb27
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_71 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_72, i64 %_73)
  br label %bb29

bb29:                                             ; preds = %bb28
  store i64 %_71, i64* %c, align 8
  %_76 = load i64, i64* %e, align 8
  %_77 = load i64, i64* %f, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_75 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_76, i64 %_77)
  br label %bb30

bb30:                                             ; preds = %bb29
  store i64 %_75, i64* %e, align 8
  %_79 = load i64, i64* %g, align 8
  %_80 = load i64, i64* %c, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_78 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_79, i64 %_80)
  br label %bb31

bb31:                                             ; preds = %bb30
  store i64 %_78, i64* %g, align 8
  %_82 = load i64, i64* %d, align 8
  %_84 = load i64, i64* %f, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_83 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_84, i64 17)
  br label %bb32

bb32:                                             ; preds = %bb31
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_81 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_82, i64 %_83)
  br label %bb33

bb33:                                             ; preds = %bb32
  store i64 %_81, i64* %d, align 8
  %_86 = load i64, i64* %f, align 8
  %_87 = load i64, i64* %g, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_85 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_86, i64 %_87)
  br label %bb34

bb34:                                             ; preds = %bb33
  store i64 %_85, i64* %f, align 8
  %_89 = load i64, i64* %h, align 8
  %_90 = load i64, i64* %d, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_88 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_89, i64 %_90)
  br label %bb35

bb35:                                             ; preds = %bb34
  store i64 %_88, i64* %h, align 8
  %_92 = load i64, i64* %e, align 8
  %_94 = load i64, i64* %g, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_93 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_94, i64 14)
  br label %bb36

bb36:                                             ; preds = %bb35
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_91 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_92, i64 %_93)
  br label %bb37

bb37:                                             ; preds = %bb36
  store i64 %_91, i64* %e, align 8
  %_96 = load i64, i64* %g, align 8
  %_97 = load i64, i64* %h, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_95 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_96, i64 %_97)
  br label %bb38

bb38:                                             ; preds = %bb37
  store i64 %_95, i64* %g, align 8
  br label %bb2

bb40:                                             ; preds = %bb6
  %12 = bitcast { i64, i64 }* %_497 to i64*
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_497, i32 0, i32 1
  store i64 32, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_497, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_497, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
; call core::iter::traits::iterator::Iterator::map
  %18 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17h1f6d242f9de8f0ceE(i64 %15, i64 %17)
  %_496.0 = extractvalue { i64, i64 } %18, 0
  %_496.1 = extractvalue { i64, i64 } %18, 1
  br label %bb194

bb39:                                             ; preds = %bb6
  %19 = bitcast { i64, i64 }* %_101 to i64*
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_101, i32 0, i32 1
  store i64 32, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_101, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_101, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
; call core::iter::traits::iterator::Iterator::map
  %25 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17ha8b67f175eefb48dE(i64 %22, i64 %24)
  %_100.0 = extractvalue { i64, i64 } %25, 0
  %_100.1 = extractvalue { i64, i64 } %25, 1
  br label %bb41

bb41:                                             ; preds = %bb39
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %26 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7337de879203f18cE"(i64 %_100.0, i64 %_100.1)
  %_99.0 = extractvalue { i64, i64 } %26, 0
  %_99.1 = extractvalue { i64, i64 } %26, 1
  br label %bb42

bb42:                                             ; preds = %bb41
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter1, i32 0, i32 0
  store i64 %_99.0, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter1, i32 0, i32 1
  store i64 %_99.1, i64* %28, align 8
  br label %bb43

bb43:                                             ; preds = %bb117, %bb42
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %29 = call { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h41d855100ca56b80E"({ i64, i64 }* align 8 dereferenceable(16) %iter1)
  store { i64, i64 } %29, { i64, i64 }* %_104, align 8
  br label %bb44

bb44:                                             ; preds = %bb43
  %30 = bitcast { i64, i64 }* %_104 to i64*
  %_107 = load i64, i64* %30, align 8, !range !2
  switch i64 %_107, label %bb46 [
    i64 0, label %bb47
    i64 1, label %bb45
  ]

bb46:                                             ; preds = %bb44
  unreachable

bb47:                                             ; preds = %bb44
  %31 = bitcast { i64, i64 }* %_299 to i64*
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_299, i32 0, i32 1
  store i64 32, i64* %32, align 8
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_299, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_299, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
; call core::iter::traits::iterator::Iterator::map
  %37 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17h93bfc34d2b73c391E(i64 %34, i64 %36)
  %_298.0 = extractvalue { i64, i64 } %37, 0
  %_298.1 = extractvalue { i64, i64 } %37, 1
  br label %bb118

bb45:                                             ; preds = %bb44
  %38 = bitcast { i64, i64 }* %_104 to %"core::option::Option<usize>::Some"*
  %39 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %38, i32 0, i32 1
  %i = load i64, i64* %39, align 8
  %_110 = load i64, i64* %a, align 8
  %_114 = icmp ult i64 %i, 256
  %40 = call i1 @llvm.expect.i1(i1 %_114, i1 true)
  br i1 %40, label %bb48, label %panic

bb48:                                             ; preds = %bb45
  %41 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %42 = getelementptr inbounds [256 x i64], [256 x i64]* %41, i64 0, i64 %i
  %_111 = load i64, i64* %42, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_109 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_110, i64 %_111)
  br label %bb49

panic:                                            ; preds = %bb45
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb49:                                             ; preds = %bb48
  store i64 %_109, i64* %a, align 8
  %_116 = load i64, i64* %b, align 8
  %43 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 1)
  %_120.0 = extractvalue { i64, i1 } %43, 0
  %_120.1 = extractvalue { i64, i1 } %43, 1
  %44 = call i1 @llvm.expect.i1(i1 %_120.1, i1 false)
  br i1 %44, label %panic4, label %bb50

bb50:                                             ; preds = %bb49
  %_122 = icmp ult i64 %_120.0, 256
  %45 = call i1 @llvm.expect.i1(i1 %_122, i1 true)
  br i1 %45, label %bb51, label %panic5

panic4:                                           ; preds = %bb49
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb51:                                             ; preds = %bb50
  %46 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %47 = getelementptr inbounds [256 x i64], [256 x i64]* %46, i64 0, i64 %_120.0
  %_117 = load i64, i64* %47, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_115 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_116, i64 %_117)
  br label %bb52

panic5:                                           ; preds = %bb50
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_120.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb52:                                             ; preds = %bb51
  store i64 %_115, i64* %b, align 8
  %_124 = load i64, i64* %c, align 8
  %48 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 2)
  %_128.0 = extractvalue { i64, i1 } %48, 0
  %_128.1 = extractvalue { i64, i1 } %48, 1
  %49 = call i1 @llvm.expect.i1(i1 %_128.1, i1 false)
  br i1 %49, label %panic6, label %bb53

bb53:                                             ; preds = %bb52
  %_130 = icmp ult i64 %_128.0, 256
  %50 = call i1 @llvm.expect.i1(i1 %_130, i1 true)
  br i1 %50, label %bb54, label %panic7

panic6:                                           ; preds = %bb52
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb54:                                             ; preds = %bb53
  %51 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %52 = getelementptr inbounds [256 x i64], [256 x i64]* %51, i64 0, i64 %_128.0
  %_125 = load i64, i64* %52, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_123 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_124, i64 %_125)
  br label %bb55

panic7:                                           ; preds = %bb53
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_128.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb55:                                             ; preds = %bb54
  store i64 %_123, i64* %c, align 8
  %_132 = load i64, i64* %d, align 8
  %53 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 3)
  %_136.0 = extractvalue { i64, i1 } %53, 0
  %_136.1 = extractvalue { i64, i1 } %53, 1
  %54 = call i1 @llvm.expect.i1(i1 %_136.1, i1 false)
  br i1 %54, label %panic8, label %bb56

bb56:                                             ; preds = %bb55
  %_138 = icmp ult i64 %_136.0, 256
  %55 = call i1 @llvm.expect.i1(i1 %_138, i1 true)
  br i1 %55, label %bb57, label %panic9

panic8:                                           ; preds = %bb55
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb57:                                             ; preds = %bb56
  %56 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %57 = getelementptr inbounds [256 x i64], [256 x i64]* %56, i64 0, i64 %_136.0
  %_133 = load i64, i64* %57, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_131 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_132, i64 %_133)
  br label %bb58

panic9:                                           ; preds = %bb56
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_136.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb58:                                             ; preds = %bb57
  store i64 %_131, i64* %d, align 8
  %_140 = load i64, i64* %e, align 8
  %58 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 4)
  %_144.0 = extractvalue { i64, i1 } %58, 0
  %_144.1 = extractvalue { i64, i1 } %58, 1
  %59 = call i1 @llvm.expect.i1(i1 %_144.1, i1 false)
  br i1 %59, label %panic10, label %bb59

bb59:                                             ; preds = %bb58
  %_146 = icmp ult i64 %_144.0, 256
  %60 = call i1 @llvm.expect.i1(i1 %_146, i1 true)
  br i1 %60, label %bb60, label %panic11

panic10:                                          ; preds = %bb58
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb60:                                             ; preds = %bb59
  %61 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %62 = getelementptr inbounds [256 x i64], [256 x i64]* %61, i64 0, i64 %_144.0
  %_141 = load i64, i64* %62, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_139 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_140, i64 %_141)
  br label %bb61

panic11:                                          ; preds = %bb59
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_144.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb61:                                             ; preds = %bb60
  store i64 %_139, i64* %e, align 8
  %_148 = load i64, i64* %f, align 8
  %63 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 5)
  %_152.0 = extractvalue { i64, i1 } %63, 0
  %_152.1 = extractvalue { i64, i1 } %63, 1
  %64 = call i1 @llvm.expect.i1(i1 %_152.1, i1 false)
  br i1 %64, label %panic12, label %bb62

bb62:                                             ; preds = %bb61
  %_154 = icmp ult i64 %_152.0, 256
  %65 = call i1 @llvm.expect.i1(i1 %_154, i1 true)
  br i1 %65, label %bb63, label %panic13

panic12:                                          ; preds = %bb61
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb63:                                             ; preds = %bb62
  %66 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %67 = getelementptr inbounds [256 x i64], [256 x i64]* %66, i64 0, i64 %_152.0
  %_149 = load i64, i64* %67, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_147 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_148, i64 %_149)
  br label %bb64

panic13:                                          ; preds = %bb62
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_152.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb64:                                             ; preds = %bb63
  store i64 %_147, i64* %f, align 8
  %_156 = load i64, i64* %g, align 8
  %68 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 6)
  %_160.0 = extractvalue { i64, i1 } %68, 0
  %_160.1 = extractvalue { i64, i1 } %68, 1
  %69 = call i1 @llvm.expect.i1(i1 %_160.1, i1 false)
  br i1 %69, label %panic14, label %bb65

bb65:                                             ; preds = %bb64
  %_162 = icmp ult i64 %_160.0, 256
  %70 = call i1 @llvm.expect.i1(i1 %_162, i1 true)
  br i1 %70, label %bb66, label %panic15

panic14:                                          ; preds = %bb64
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb66:                                             ; preds = %bb65
  %71 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %72 = getelementptr inbounds [256 x i64], [256 x i64]* %71, i64 0, i64 %_160.0
  %_157 = load i64, i64* %72, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_155 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_156, i64 %_157)
  br label %bb67

panic15:                                          ; preds = %bb65
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_160.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb67:                                             ; preds = %bb66
  store i64 %_155, i64* %g, align 8
  %_164 = load i64, i64* %h, align 8
  %73 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 7)
  %_168.0 = extractvalue { i64, i1 } %73, 0
  %_168.1 = extractvalue { i64, i1 } %73, 1
  %74 = call i1 @llvm.expect.i1(i1 %_168.1, i1 false)
  br i1 %74, label %panic16, label %bb68

bb68:                                             ; preds = %bb67
  %_170 = icmp ult i64 %_168.0, 256
  %75 = call i1 @llvm.expect.i1(i1 %_170, i1 true)
  br i1 %75, label %bb69, label %panic17

panic16:                                          ; preds = %bb67
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb69:                                             ; preds = %bb68
  %76 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %77 = getelementptr inbounds [256 x i64], [256 x i64]* %76, i64 0, i64 %_168.0
  %_165 = load i64, i64* %77, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_163 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_164, i64 %_165)
  br label %bb70

panic17:                                          ; preds = %bb68
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_168.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb70:                                             ; preds = %bb69
  store i64 %_163, i64* %h, align 8
  %_172 = load i64, i64* %a, align 8
  %_173 = load i64, i64* %e, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_171 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_172, i64 %_173)
  br label %bb71

bb71:                                             ; preds = %bb70
  store i64 %_171, i64* %a, align 8
  %_175 = load i64, i64* %f, align 8
  %_177 = load i64, i64* %h, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_176 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_177, i64 9)
  br label %bb72

bb72:                                             ; preds = %bb71
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_174 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_175, i64 %_176)
  br label %bb73

bb73:                                             ; preds = %bb72
  store i64 %_174, i64* %f, align 8
  %_179 = load i64, i64* %h, align 8
  %_180 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_178 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_179, i64 %_180)
  br label %bb74

bb74:                                             ; preds = %bb73
  store i64 %_178, i64* %h, align 8
  %_182 = load i64, i64* %b, align 8
  %_183 = load i64, i64* %f, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_181 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_182, i64 %_183)
  br label %bb75

bb75:                                             ; preds = %bb74
  store i64 %_181, i64* %b, align 8
  %_185 = load i64, i64* %g, align 8
  %_187 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_186 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_187, i64 9)
  br label %bb76

bb76:                                             ; preds = %bb75
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_184 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_185, i64 %_186)
  br label %bb77

bb77:                                             ; preds = %bb76
  store i64 %_184, i64* %g, align 8
  %_189 = load i64, i64* %a, align 8
  %_190 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_188 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_189, i64 %_190)
  br label %bb78

bb78:                                             ; preds = %bb77
  store i64 %_188, i64* %a, align 8
  %_192 = load i64, i64* %c, align 8
  %_193 = load i64, i64* %g, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_191 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_192, i64 %_193)
  br label %bb79

bb79:                                             ; preds = %bb78
  store i64 %_191, i64* %c, align 8
  %_195 = load i64, i64* %h, align 8
  %_197 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_196 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_197, i64 23)
  br label %bb80

bb80:                                             ; preds = %bb79
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_194 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_195, i64 %_196)
  br label %bb81

bb81:                                             ; preds = %bb80
  store i64 %_194, i64* %h, align 8
  %_199 = load i64, i64* %b, align 8
  %_200 = load i64, i64* %c, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_198 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_199, i64 %_200)
  br label %bb82

bb82:                                             ; preds = %bb81
  store i64 %_198, i64* %b, align 8
  %_202 = load i64, i64* %d, align 8
  %_203 = load i64, i64* %h, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_201 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_202, i64 %_203)
  br label %bb83

bb83:                                             ; preds = %bb82
  store i64 %_201, i64* %d, align 8
  %_205 = load i64, i64* %a, align 8
  %_207 = load i64, i64* %c, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_206 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_207, i64 15)
  br label %bb84

bb84:                                             ; preds = %bb83
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_204 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_205, i64 %_206)
  br label %bb85

bb85:                                             ; preds = %bb84
  store i64 %_204, i64* %a, align 8
  %_209 = load i64, i64* %c, align 8
  %_210 = load i64, i64* %d, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_208 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_209, i64 %_210)
  br label %bb86

bb86:                                             ; preds = %bb85
  store i64 %_208, i64* %c, align 8
  %_212 = load i64, i64* %e, align 8
  %_213 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_211 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_212, i64 %_213)
  br label %bb87

bb87:                                             ; preds = %bb86
  store i64 %_211, i64* %e, align 8
  %_215 = load i64, i64* %b, align 8
  %_217 = load i64, i64* %d, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_216 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_217, i64 14)
  br label %bb88

bb88:                                             ; preds = %bb87
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_214 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_215, i64 %_216)
  br label %bb89

bb89:                                             ; preds = %bb88
  store i64 %_214, i64* %b, align 8
  %_219 = load i64, i64* %d, align 8
  %_220 = load i64, i64* %e, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_218 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_219, i64 %_220)
  br label %bb90

bb90:                                             ; preds = %bb89
  store i64 %_218, i64* %d, align 8
  %_222 = load i64, i64* %f, align 8
  %_223 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_221 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_222, i64 %_223)
  br label %bb91

bb91:                                             ; preds = %bb90
  store i64 %_221, i64* %f, align 8
  %_225 = load i64, i64* %c, align 8
  %_227 = load i64, i64* %e, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_226 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_227, i64 20)
  br label %bb92

bb92:                                             ; preds = %bb91
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_224 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_225, i64 %_226)
  br label %bb93

bb93:                                             ; preds = %bb92
  store i64 %_224, i64* %c, align 8
  %_229 = load i64, i64* %e, align 8
  %_230 = load i64, i64* %f, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_228 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_229, i64 %_230)
  br label %bb94

bb94:                                             ; preds = %bb93
  store i64 %_228, i64* %e, align 8
  %_232 = load i64, i64* %g, align 8
  %_233 = load i64, i64* %c, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_231 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_232, i64 %_233)
  br label %bb95

bb95:                                             ; preds = %bb94
  store i64 %_231, i64* %g, align 8
  %_235 = load i64, i64* %d, align 8
  %_237 = load i64, i64* %f, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_236 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_237, i64 17)
  br label %bb96

bb96:                                             ; preds = %bb95
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_234 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_235, i64 %_236)
  br label %bb97

bb97:                                             ; preds = %bb96
  store i64 %_234, i64* %d, align 8
  %_239 = load i64, i64* %f, align 8
  %_240 = load i64, i64* %g, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_238 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_239, i64 %_240)
  br label %bb98

bb98:                                             ; preds = %bb97
  store i64 %_238, i64* %f, align 8
  %_242 = load i64, i64* %h, align 8
  %_243 = load i64, i64* %d, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_241 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_242, i64 %_243)
  br label %bb99

bb99:                                             ; preds = %bb98
  store i64 %_241, i64* %h, align 8
  %_245 = load i64, i64* %e, align 8
  %_247 = load i64, i64* %g, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_246 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_247, i64 14)
  br label %bb100

bb100:                                            ; preds = %bb99
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_244 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_245, i64 %_246)
  br label %bb101

bb101:                                            ; preds = %bb100
  store i64 %_244, i64* %e, align 8
  %_249 = load i64, i64* %g, align 8
  %_250 = load i64, i64* %h, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_248 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_249, i64 %_250)
  br label %bb102

bb102:                                            ; preds = %bb101
  store i64 %_248, i64* %g, align 8
  %_251 = load i64, i64* %a, align 8
  %_254 = icmp ult i64 %i, 256
  %78 = call i1 @llvm.expect.i1(i1 %_254, i1 true)
  br i1 %78, label %bb103, label %panic18

bb103:                                            ; preds = %bb102
  %79 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %80 = getelementptr inbounds [256 x i64], [256 x i64]* %79, i64 0, i64 %i
  store i64 %_251, i64* %80, align 8
  %_255 = load i64, i64* %b, align 8
  %81 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 1)
  %_258.0 = extractvalue { i64, i1 } %81, 0
  %_258.1 = extractvalue { i64, i1 } %81, 1
  %82 = call i1 @llvm.expect.i1(i1 %_258.1, i1 false)
  br i1 %82, label %panic19, label %bb104

panic18:                                          ; preds = %bb102
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb104:                                            ; preds = %bb103
  %_260 = icmp ult i64 %_258.0, 256
  %83 = call i1 @llvm.expect.i1(i1 %_260, i1 true)
  br i1 %83, label %bb105, label %panic20

panic19:                                          ; preds = %bb103
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb105:                                            ; preds = %bb104
  %84 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %85 = getelementptr inbounds [256 x i64], [256 x i64]* %84, i64 0, i64 %_258.0
  store i64 %_255, i64* %85, align 8
  %_261 = load i64, i64* %c, align 8
  %86 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 2)
  %_264.0 = extractvalue { i64, i1 } %86, 0
  %_264.1 = extractvalue { i64, i1 } %86, 1
  %87 = call i1 @llvm.expect.i1(i1 %_264.1, i1 false)
  br i1 %87, label %panic21, label %bb106

panic20:                                          ; preds = %bb104
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_258.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb106:                                            ; preds = %bb105
  %_266 = icmp ult i64 %_264.0, 256
  %88 = call i1 @llvm.expect.i1(i1 %_266, i1 true)
  br i1 %88, label %bb107, label %panic22

panic21:                                          ; preds = %bb105
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb107:                                            ; preds = %bb106
  %89 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %90 = getelementptr inbounds [256 x i64], [256 x i64]* %89, i64 0, i64 %_264.0
  store i64 %_261, i64* %90, align 8
  %_267 = load i64, i64* %d, align 8
  %91 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 3)
  %_270.0 = extractvalue { i64, i1 } %91, 0
  %_270.1 = extractvalue { i64, i1 } %91, 1
  %92 = call i1 @llvm.expect.i1(i1 %_270.1, i1 false)
  br i1 %92, label %panic23, label %bb108

panic22:                                          ; preds = %bb106
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_264.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb108:                                            ; preds = %bb107
  %_272 = icmp ult i64 %_270.0, 256
  %93 = call i1 @llvm.expect.i1(i1 %_272, i1 true)
  br i1 %93, label %bb109, label %panic24

panic23:                                          ; preds = %bb107
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb109:                                            ; preds = %bb108
  %94 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %95 = getelementptr inbounds [256 x i64], [256 x i64]* %94, i64 0, i64 %_270.0
  store i64 %_267, i64* %95, align 8
  %_273 = load i64, i64* %e, align 8
  %96 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 4)
  %_276.0 = extractvalue { i64, i1 } %96, 0
  %_276.1 = extractvalue { i64, i1 } %96, 1
  %97 = call i1 @llvm.expect.i1(i1 %_276.1, i1 false)
  br i1 %97, label %panic25, label %bb110

panic24:                                          ; preds = %bb108
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_270.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb110:                                            ; preds = %bb109
  %_278 = icmp ult i64 %_276.0, 256
  %98 = call i1 @llvm.expect.i1(i1 %_278, i1 true)
  br i1 %98, label %bb111, label %panic26

panic25:                                          ; preds = %bb109
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb111:                                            ; preds = %bb110
  %99 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %100 = getelementptr inbounds [256 x i64], [256 x i64]* %99, i64 0, i64 %_276.0
  store i64 %_273, i64* %100, align 8
  %_279 = load i64, i64* %f, align 8
  %101 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 5)
  %_282.0 = extractvalue { i64, i1 } %101, 0
  %_282.1 = extractvalue { i64, i1 } %101, 1
  %102 = call i1 @llvm.expect.i1(i1 %_282.1, i1 false)
  br i1 %102, label %panic27, label %bb112

panic26:                                          ; preds = %bb110
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_276.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb112:                                            ; preds = %bb111
  %_284 = icmp ult i64 %_282.0, 256
  %103 = call i1 @llvm.expect.i1(i1 %_284, i1 true)
  br i1 %103, label %bb113, label %panic28

panic27:                                          ; preds = %bb111
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb113:                                            ; preds = %bb112
  %104 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %105 = getelementptr inbounds [256 x i64], [256 x i64]* %104, i64 0, i64 %_282.0
  store i64 %_279, i64* %105, align 8
  %_285 = load i64, i64* %g, align 8
  %106 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 6)
  %_288.0 = extractvalue { i64, i1 } %106, 0
  %_288.1 = extractvalue { i64, i1 } %106, 1
  %107 = call i1 @llvm.expect.i1(i1 %_288.1, i1 false)
  br i1 %107, label %panic29, label %bb114

panic28:                                          ; preds = %bb112
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_282.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb114:                                            ; preds = %bb113
  %_290 = icmp ult i64 %_288.0, 256
  %108 = call i1 @llvm.expect.i1(i1 %_290, i1 true)
  br i1 %108, label %bb115, label %panic30

panic29:                                          ; preds = %bb113
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb115:                                            ; preds = %bb114
  %109 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %110 = getelementptr inbounds [256 x i64], [256 x i64]* %109, i64 0, i64 %_288.0
  store i64 %_285, i64* %110, align 8
  %_291 = load i64, i64* %h, align 8
  %111 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 7)
  %_294.0 = extractvalue { i64, i1 } %111, 0
  %_294.1 = extractvalue { i64, i1 } %111, 1
  %112 = call i1 @llvm.expect.i1(i1 %_294.1, i1 false)
  br i1 %112, label %panic31, label %bb116

panic30:                                          ; preds = %bb114
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_288.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb116:                                            ; preds = %bb115
  %_296 = icmp ult i64 %_294.0, 256
  %113 = call i1 @llvm.expect.i1(i1 %_296, i1 true)
  br i1 %113, label %bb117, label %panic32

panic31:                                          ; preds = %bb115
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb117:                                            ; preds = %bb116
  %114 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %115 = getelementptr inbounds [256 x i64], [256 x i64]* %114, i64 0, i64 %_294.0
  store i64 %_291, i64* %115, align 8
  br label %bb43

panic32:                                          ; preds = %bb116
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_294.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable

bb118:                                            ; preds = %bb47
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %116 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1d811ed92204fe7eE"(i64 %_298.0, i64 %_298.1)
  %_297.0 = extractvalue { i64, i64 } %116, 0
  %_297.1 = extractvalue { i64, i64 } %116, 1
  br label %bb119

bb119:                                            ; preds = %bb118
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter2, i32 0, i32 0
  store i64 %_297.0, i64* %117, align 8
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter2, i32 0, i32 1
  store i64 %_297.1, i64* %118, align 8
  br label %bb120

bb120:                                            ; preds = %bb193, %bb119
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %119 = call { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc3faa7d451a919d2E"({ i64, i64 }* align 8 dereferenceable(16) %iter2)
  store { i64, i64 } %119, { i64, i64 }* %_302, align 8
  br label %bb121

bb121:                                            ; preds = %bb120
  %120 = bitcast { i64, i64 }* %_302 to i64*
  %_305 = load i64, i64* %120, align 8, !range !2
  switch i64 %_305, label %bb123 [
    i64 0, label %bb247
    i64 1, label %bb122
  ]

bb123:                                            ; preds = %bb121
  unreachable

bb247:                                            ; preds = %bb197, %bb121
; call rand::prng::isaac64::Isaac64Rng::isaac64
  call void @_ZN4rand4prng7isaac6410Isaac64Rng7isaac6417h5ab2890bce7b265eE(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %self)
  br label %bb248

bb122:                                            ; preds = %bb121
  %121 = bitcast { i64, i64 }* %_302 to %"core::option::Option<usize>::Some"*
  %122 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %121, i32 0, i32 1
  %i33 = load i64, i64* %122, align 8
  %_308 = load i64, i64* %a, align 8
  %_312 = icmp ult i64 %i33, 256
  %123 = call i1 @llvm.expect.i1(i1 %_312, i1 true)
  br i1 %123, label %bb124, label %panic34

bb124:                                            ; preds = %bb122
  %124 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %125 = getelementptr inbounds [256 x i64], [256 x i64]* %124, i64 0, i64 %i33
  %_309 = load i64, i64* %125, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_307 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_308, i64 %_309)
  br label %bb125

panic34:                                          ; preds = %bb122
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i33, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb125:                                            ; preds = %bb124
  store i64 %_307, i64* %a, align 8
  %_314 = load i64, i64* %b, align 8
  %126 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 1)
  %_318.0 = extractvalue { i64, i1 } %126, 0
  %_318.1 = extractvalue { i64, i1 } %126, 1
  %127 = call i1 @llvm.expect.i1(i1 %_318.1, i1 false)
  br i1 %127, label %panic35, label %bb126

bb126:                                            ; preds = %bb125
  %_320 = icmp ult i64 %_318.0, 256
  %128 = call i1 @llvm.expect.i1(i1 %_320, i1 true)
  br i1 %128, label %bb127, label %panic36

panic35:                                          ; preds = %bb125
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb127:                                            ; preds = %bb126
  %129 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %130 = getelementptr inbounds [256 x i64], [256 x i64]* %129, i64 0, i64 %_318.0
  %_315 = load i64, i64* %130, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_313 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_314, i64 %_315)
  br label %bb128

panic36:                                          ; preds = %bb126
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_318.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb128:                                            ; preds = %bb127
  store i64 %_313, i64* %b, align 8
  %_322 = load i64, i64* %c, align 8
  %131 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 2)
  %_326.0 = extractvalue { i64, i1 } %131, 0
  %_326.1 = extractvalue { i64, i1 } %131, 1
  %132 = call i1 @llvm.expect.i1(i1 %_326.1, i1 false)
  br i1 %132, label %panic37, label %bb129

bb129:                                            ; preds = %bb128
  %_328 = icmp ult i64 %_326.0, 256
  %133 = call i1 @llvm.expect.i1(i1 %_328, i1 true)
  br i1 %133, label %bb130, label %panic38

panic37:                                          ; preds = %bb128
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb130:                                            ; preds = %bb129
  %134 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %135 = getelementptr inbounds [256 x i64], [256 x i64]* %134, i64 0, i64 %_326.0
  %_323 = load i64, i64* %135, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_321 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_322, i64 %_323)
  br label %bb131

panic38:                                          ; preds = %bb129
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_326.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb131:                                            ; preds = %bb130
  store i64 %_321, i64* %c, align 8
  %_330 = load i64, i64* %d, align 8
  %136 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 3)
  %_334.0 = extractvalue { i64, i1 } %136, 0
  %_334.1 = extractvalue { i64, i1 } %136, 1
  %137 = call i1 @llvm.expect.i1(i1 %_334.1, i1 false)
  br i1 %137, label %panic39, label %bb132

bb132:                                            ; preds = %bb131
  %_336 = icmp ult i64 %_334.0, 256
  %138 = call i1 @llvm.expect.i1(i1 %_336, i1 true)
  br i1 %138, label %bb133, label %panic40

panic39:                                          ; preds = %bb131
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb133:                                            ; preds = %bb132
  %139 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %140 = getelementptr inbounds [256 x i64], [256 x i64]* %139, i64 0, i64 %_334.0
  %_331 = load i64, i64* %140, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_329 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_330, i64 %_331)
  br label %bb134

panic40:                                          ; preds = %bb132
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_334.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb134:                                            ; preds = %bb133
  store i64 %_329, i64* %d, align 8
  %_338 = load i64, i64* %e, align 8
  %141 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 4)
  %_342.0 = extractvalue { i64, i1 } %141, 0
  %_342.1 = extractvalue { i64, i1 } %141, 1
  %142 = call i1 @llvm.expect.i1(i1 %_342.1, i1 false)
  br i1 %142, label %panic41, label %bb135

bb135:                                            ; preds = %bb134
  %_344 = icmp ult i64 %_342.0, 256
  %143 = call i1 @llvm.expect.i1(i1 %_344, i1 true)
  br i1 %143, label %bb136, label %panic42

panic41:                                          ; preds = %bb134
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb136:                                            ; preds = %bb135
  %144 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %145 = getelementptr inbounds [256 x i64], [256 x i64]* %144, i64 0, i64 %_342.0
  %_339 = load i64, i64* %145, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_337 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_338, i64 %_339)
  br label %bb137

panic42:                                          ; preds = %bb135
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_342.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb137:                                            ; preds = %bb136
  store i64 %_337, i64* %e, align 8
  %_346 = load i64, i64* %f, align 8
  %146 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 5)
  %_350.0 = extractvalue { i64, i1 } %146, 0
  %_350.1 = extractvalue { i64, i1 } %146, 1
  %147 = call i1 @llvm.expect.i1(i1 %_350.1, i1 false)
  br i1 %147, label %panic43, label %bb138

bb138:                                            ; preds = %bb137
  %_352 = icmp ult i64 %_350.0, 256
  %148 = call i1 @llvm.expect.i1(i1 %_352, i1 true)
  br i1 %148, label %bb139, label %panic44

panic43:                                          ; preds = %bb137
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb139:                                            ; preds = %bb138
  %149 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %150 = getelementptr inbounds [256 x i64], [256 x i64]* %149, i64 0, i64 %_350.0
  %_347 = load i64, i64* %150, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_345 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_346, i64 %_347)
  br label %bb140

panic44:                                          ; preds = %bb138
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_350.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb140:                                            ; preds = %bb139
  store i64 %_345, i64* %f, align 8
  %_354 = load i64, i64* %g, align 8
  %151 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 6)
  %_358.0 = extractvalue { i64, i1 } %151, 0
  %_358.1 = extractvalue { i64, i1 } %151, 1
  %152 = call i1 @llvm.expect.i1(i1 %_358.1, i1 false)
  br i1 %152, label %panic45, label %bb141

bb141:                                            ; preds = %bb140
  %_360 = icmp ult i64 %_358.0, 256
  %153 = call i1 @llvm.expect.i1(i1 %_360, i1 true)
  br i1 %153, label %bb142, label %panic46

panic45:                                          ; preds = %bb140
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb142:                                            ; preds = %bb141
  %154 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %155 = getelementptr inbounds [256 x i64], [256 x i64]* %154, i64 0, i64 %_358.0
  %_355 = load i64, i64* %155, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_353 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_354, i64 %_355)
  br label %bb143

panic46:                                          ; preds = %bb141
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_358.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb143:                                            ; preds = %bb142
  store i64 %_353, i64* %g, align 8
  %_362 = load i64, i64* %h, align 8
  %156 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 7)
  %_366.0 = extractvalue { i64, i1 } %156, 0
  %_366.1 = extractvalue { i64, i1 } %156, 1
  %157 = call i1 @llvm.expect.i1(i1 %_366.1, i1 false)
  br i1 %157, label %panic47, label %bb144

bb144:                                            ; preds = %bb143
  %_368 = icmp ult i64 %_366.0, 256
  %158 = call i1 @llvm.expect.i1(i1 %_368, i1 true)
  br i1 %158, label %bb145, label %panic48

panic47:                                          ; preds = %bb143
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb145:                                            ; preds = %bb144
  %159 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %160 = getelementptr inbounds [256 x i64], [256 x i64]* %159, i64 0, i64 %_366.0
  %_363 = load i64, i64* %160, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_361 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_362, i64 %_363)
  br label %bb146

panic48:                                          ; preds = %bb144
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_366.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb146:                                            ; preds = %bb145
  store i64 %_361, i64* %h, align 8
  %_370 = load i64, i64* %a, align 8
  %_371 = load i64, i64* %e, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_369 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_370, i64 %_371)
  br label %bb147

bb147:                                            ; preds = %bb146
  store i64 %_369, i64* %a, align 8
  %_373 = load i64, i64* %f, align 8
  %_375 = load i64, i64* %h, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_374 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_375, i64 9)
  br label %bb148

bb148:                                            ; preds = %bb147
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_372 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_373, i64 %_374)
  br label %bb149

bb149:                                            ; preds = %bb148
  store i64 %_372, i64* %f, align 8
  %_377 = load i64, i64* %h, align 8
  %_378 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_376 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_377, i64 %_378)
  br label %bb150

bb150:                                            ; preds = %bb149
  store i64 %_376, i64* %h, align 8
  %_380 = load i64, i64* %b, align 8
  %_381 = load i64, i64* %f, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_379 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_380, i64 %_381)
  br label %bb151

bb151:                                            ; preds = %bb150
  store i64 %_379, i64* %b, align 8
  %_383 = load i64, i64* %g, align 8
  %_385 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_384 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_385, i64 9)
  br label %bb152

bb152:                                            ; preds = %bb151
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_382 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_383, i64 %_384)
  br label %bb153

bb153:                                            ; preds = %bb152
  store i64 %_382, i64* %g, align 8
  %_387 = load i64, i64* %a, align 8
  %_388 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_386 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_387, i64 %_388)
  br label %bb154

bb154:                                            ; preds = %bb153
  store i64 %_386, i64* %a, align 8
  %_390 = load i64, i64* %c, align 8
  %_391 = load i64, i64* %g, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_389 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_390, i64 %_391)
  br label %bb155

bb155:                                            ; preds = %bb154
  store i64 %_389, i64* %c, align 8
  %_393 = load i64, i64* %h, align 8
  %_395 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_394 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_395, i64 23)
  br label %bb156

bb156:                                            ; preds = %bb155
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_392 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_393, i64 %_394)
  br label %bb157

bb157:                                            ; preds = %bb156
  store i64 %_392, i64* %h, align 8
  %_397 = load i64, i64* %b, align 8
  %_398 = load i64, i64* %c, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_396 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_397, i64 %_398)
  br label %bb158

bb158:                                            ; preds = %bb157
  store i64 %_396, i64* %b, align 8
  %_400 = load i64, i64* %d, align 8
  %_401 = load i64, i64* %h, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_399 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_400, i64 %_401)
  br label %bb159

bb159:                                            ; preds = %bb158
  store i64 %_399, i64* %d, align 8
  %_403 = load i64, i64* %a, align 8
  %_405 = load i64, i64* %c, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_404 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_405, i64 15)
  br label %bb160

bb160:                                            ; preds = %bb159
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_402 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_403, i64 %_404)
  br label %bb161

bb161:                                            ; preds = %bb160
  store i64 %_402, i64* %a, align 8
  %_407 = load i64, i64* %c, align 8
  %_408 = load i64, i64* %d, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_406 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_407, i64 %_408)
  br label %bb162

bb162:                                            ; preds = %bb161
  store i64 %_406, i64* %c, align 8
  %_410 = load i64, i64* %e, align 8
  %_411 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_409 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_410, i64 %_411)
  br label %bb163

bb163:                                            ; preds = %bb162
  store i64 %_409, i64* %e, align 8
  %_413 = load i64, i64* %b, align 8
  %_415 = load i64, i64* %d, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_414 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_415, i64 14)
  br label %bb164

bb164:                                            ; preds = %bb163
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_412 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_413, i64 %_414)
  br label %bb165

bb165:                                            ; preds = %bb164
  store i64 %_412, i64* %b, align 8
  %_417 = load i64, i64* %d, align 8
  %_418 = load i64, i64* %e, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_416 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_417, i64 %_418)
  br label %bb166

bb166:                                            ; preds = %bb165
  store i64 %_416, i64* %d, align 8
  %_420 = load i64, i64* %f, align 8
  %_421 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_419 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_420, i64 %_421)
  br label %bb167

bb167:                                            ; preds = %bb166
  store i64 %_419, i64* %f, align 8
  %_423 = load i64, i64* %c, align 8
  %_425 = load i64, i64* %e, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_424 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_425, i64 20)
  br label %bb168

bb168:                                            ; preds = %bb167
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_422 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_423, i64 %_424)
  br label %bb169

bb169:                                            ; preds = %bb168
  store i64 %_422, i64* %c, align 8
  %_427 = load i64, i64* %e, align 8
  %_428 = load i64, i64* %f, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_426 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_427, i64 %_428)
  br label %bb170

bb170:                                            ; preds = %bb169
  store i64 %_426, i64* %e, align 8
  %_430 = load i64, i64* %g, align 8
  %_431 = load i64, i64* %c, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_429 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_430, i64 %_431)
  br label %bb171

bb171:                                            ; preds = %bb170
  store i64 %_429, i64* %g, align 8
  %_433 = load i64, i64* %d, align 8
  %_435 = load i64, i64* %f, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_434 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_435, i64 17)
  br label %bb172

bb172:                                            ; preds = %bb171
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_432 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_433, i64 %_434)
  br label %bb173

bb173:                                            ; preds = %bb172
  store i64 %_432, i64* %d, align 8
  %_437 = load i64, i64* %f, align 8
  %_438 = load i64, i64* %g, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_436 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_437, i64 %_438)
  br label %bb174

bb174:                                            ; preds = %bb173
  store i64 %_436, i64* %f, align 8
  %_440 = load i64, i64* %h, align 8
  %_441 = load i64, i64* %d, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_439 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_440, i64 %_441)
  br label %bb175

bb175:                                            ; preds = %bb174
  store i64 %_439, i64* %h, align 8
  %_443 = load i64, i64* %e, align 8
  %_445 = load i64, i64* %g, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_444 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_445, i64 14)
  br label %bb176

bb176:                                            ; preds = %bb175
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_442 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_443, i64 %_444)
  br label %bb177

bb177:                                            ; preds = %bb176
  store i64 %_442, i64* %e, align 8
  %_447 = load i64, i64* %g, align 8
  %_448 = load i64, i64* %h, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_446 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_447, i64 %_448)
  br label %bb178

bb178:                                            ; preds = %bb177
  store i64 %_446, i64* %g, align 8
  %_449 = load i64, i64* %a, align 8
  %_452 = icmp ult i64 %i33, 256
  %161 = call i1 @llvm.expect.i1(i1 %_452, i1 true)
  br i1 %161, label %bb179, label %panic49

bb179:                                            ; preds = %bb178
  %162 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %163 = getelementptr inbounds [256 x i64], [256 x i64]* %162, i64 0, i64 %i33
  store i64 %_449, i64* %163, align 8
  %_453 = load i64, i64* %b, align 8
  %164 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 1)
  %_456.0 = extractvalue { i64, i1 } %164, 0
  %_456.1 = extractvalue { i64, i1 } %164, 1
  %165 = call i1 @llvm.expect.i1(i1 %_456.1, i1 false)
  br i1 %165, label %panic50, label %bb180

panic49:                                          ; preds = %bb178
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i33, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb180:                                            ; preds = %bb179
  %_458 = icmp ult i64 %_456.0, 256
  %166 = call i1 @llvm.expect.i1(i1 %_458, i1 true)
  br i1 %166, label %bb181, label %panic51

panic50:                                          ; preds = %bb179
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb181:                                            ; preds = %bb180
  %167 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %168 = getelementptr inbounds [256 x i64], [256 x i64]* %167, i64 0, i64 %_456.0
  store i64 %_453, i64* %168, align 8
  %_459 = load i64, i64* %c, align 8
  %169 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 2)
  %_462.0 = extractvalue { i64, i1 } %169, 0
  %_462.1 = extractvalue { i64, i1 } %169, 1
  %170 = call i1 @llvm.expect.i1(i1 %_462.1, i1 false)
  br i1 %170, label %panic52, label %bb182

panic51:                                          ; preds = %bb180
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_456.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb182:                                            ; preds = %bb181
  %_464 = icmp ult i64 %_462.0, 256
  %171 = call i1 @llvm.expect.i1(i1 %_464, i1 true)
  br i1 %171, label %bb183, label %panic53

panic52:                                          ; preds = %bb181
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb183:                                            ; preds = %bb182
  %172 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %173 = getelementptr inbounds [256 x i64], [256 x i64]* %172, i64 0, i64 %_462.0
  store i64 %_459, i64* %173, align 8
  %_465 = load i64, i64* %d, align 8
  %174 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 3)
  %_468.0 = extractvalue { i64, i1 } %174, 0
  %_468.1 = extractvalue { i64, i1 } %174, 1
  %175 = call i1 @llvm.expect.i1(i1 %_468.1, i1 false)
  br i1 %175, label %panic54, label %bb184

panic53:                                          ; preds = %bb182
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_462.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb184:                                            ; preds = %bb183
  %_470 = icmp ult i64 %_468.0, 256
  %176 = call i1 @llvm.expect.i1(i1 %_470, i1 true)
  br i1 %176, label %bb185, label %panic55

panic54:                                          ; preds = %bb183
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb185:                                            ; preds = %bb184
  %177 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %178 = getelementptr inbounds [256 x i64], [256 x i64]* %177, i64 0, i64 %_468.0
  store i64 %_465, i64* %178, align 8
  %_471 = load i64, i64* %e, align 8
  %179 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 4)
  %_474.0 = extractvalue { i64, i1 } %179, 0
  %_474.1 = extractvalue { i64, i1 } %179, 1
  %180 = call i1 @llvm.expect.i1(i1 %_474.1, i1 false)
  br i1 %180, label %panic56, label %bb186

panic55:                                          ; preds = %bb184
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_468.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb186:                                            ; preds = %bb185
  %_476 = icmp ult i64 %_474.0, 256
  %181 = call i1 @llvm.expect.i1(i1 %_476, i1 true)
  br i1 %181, label %bb187, label %panic57

panic56:                                          ; preds = %bb185
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb187:                                            ; preds = %bb186
  %182 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %183 = getelementptr inbounds [256 x i64], [256 x i64]* %182, i64 0, i64 %_474.0
  store i64 %_471, i64* %183, align 8
  %_477 = load i64, i64* %f, align 8
  %184 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 5)
  %_480.0 = extractvalue { i64, i1 } %184, 0
  %_480.1 = extractvalue { i64, i1 } %184, 1
  %185 = call i1 @llvm.expect.i1(i1 %_480.1, i1 false)
  br i1 %185, label %panic58, label %bb188

panic57:                                          ; preds = %bb186
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_474.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb188:                                            ; preds = %bb187
  %_482 = icmp ult i64 %_480.0, 256
  %186 = call i1 @llvm.expect.i1(i1 %_482, i1 true)
  br i1 %186, label %bb189, label %panic59

panic58:                                          ; preds = %bb187
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb189:                                            ; preds = %bb188
  %187 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %188 = getelementptr inbounds [256 x i64], [256 x i64]* %187, i64 0, i64 %_480.0
  store i64 %_477, i64* %188, align 8
  %_483 = load i64, i64* %g, align 8
  %189 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 6)
  %_486.0 = extractvalue { i64, i1 } %189, 0
  %_486.1 = extractvalue { i64, i1 } %189, 1
  %190 = call i1 @llvm.expect.i1(i1 %_486.1, i1 false)
  br i1 %190, label %panic60, label %bb190

panic59:                                          ; preds = %bb188
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_480.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb190:                                            ; preds = %bb189
  %_488 = icmp ult i64 %_486.0, 256
  %191 = call i1 @llvm.expect.i1(i1 %_488, i1 true)
  br i1 %191, label %bb191, label %panic61

panic60:                                          ; preds = %bb189
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb191:                                            ; preds = %bb190
  %192 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %193 = getelementptr inbounds [256 x i64], [256 x i64]* %192, i64 0, i64 %_486.0
  store i64 %_483, i64* %193, align 8
  %_489 = load i64, i64* %h, align 8
  %194 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i33, i64 7)
  %_492.0 = extractvalue { i64, i1 } %194, 0
  %_492.1 = extractvalue { i64, i1 } %194, 1
  %195 = call i1 @llvm.expect.i1(i1 %_492.1, i1 false)
  br i1 %195, label %panic62, label %bb192

panic61:                                          ; preds = %bb190
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_486.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb192:                                            ; preds = %bb191
  %_494 = icmp ult i64 %_492.0, 256
  %196 = call i1 @llvm.expect.i1(i1 %_494, i1 true)
  br i1 %196, label %bb193, label %panic63

panic62:                                          ; preds = %bb191
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb193:                                            ; preds = %bb192
  %197 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %198 = getelementptr inbounds [256 x i64], [256 x i64]* %197, i64 0, i64 %_492.0
  store i64 %_489, i64* %198, align 8
  br label %bb120

panic63:                                          ; preds = %bb192
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_492.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable

bb194:                                            ; preds = %bb40
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %199 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h786ea71f7f80715bE"(i64 %_496.0, i64 %_496.1)
  %_495.0 = extractvalue { i64, i64 } %199, 0
  %_495.1 = extractvalue { i64, i64 } %199, 1
  br label %bb195

bb195:                                            ; preds = %bb194
  %200 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 0
  store i64 %_495.0, i64* %200, align 8
  %201 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 1
  store i64 %_495.1, i64* %201, align 8
  br label %bb196

bb196:                                            ; preds = %bb246, %bb195
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %202 = call { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h31810d285db1ade4E"({ i64, i64 }* align 8 dereferenceable(16) %iter3)
  store { i64, i64 } %202, { i64, i64 }* %_500, align 8
  br label %bb197

bb197:                                            ; preds = %bb196
  %203 = bitcast { i64, i64 }* %_500 to i64*
  %_503 = load i64, i64* %203, align 8, !range !2
  switch i64 %_503, label %bb199 [
    i64 0, label %bb247
    i64 1, label %bb198
  ]

bb199:                                            ; preds = %bb197
  unreachable

bb198:                                            ; preds = %bb197
  %204 = bitcast { i64, i64 }* %_500 to %"core::option::Option<usize>::Some"*
  %205 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %204, i32 0, i32 1
  %i64 = load i64, i64* %205, align 8
  %_506 = load i64, i64* %a, align 8
  %_507 = load i64, i64* %e, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_505 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_506, i64 %_507)
  br label %bb200

bb200:                                            ; preds = %bb198
  store i64 %_505, i64* %a, align 8
  %_509 = load i64, i64* %f, align 8
  %_511 = load i64, i64* %h, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_510 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_511, i64 9)
  br label %bb201

bb201:                                            ; preds = %bb200
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_508 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_509, i64 %_510)
  br label %bb202

bb202:                                            ; preds = %bb201
  store i64 %_508, i64* %f, align 8
  %_513 = load i64, i64* %h, align 8
  %_514 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_512 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_513, i64 %_514)
  br label %bb203

bb203:                                            ; preds = %bb202
  store i64 %_512, i64* %h, align 8
  %_516 = load i64, i64* %b, align 8
  %_517 = load i64, i64* %f, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_515 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_516, i64 %_517)
  br label %bb204

bb204:                                            ; preds = %bb203
  store i64 %_515, i64* %b, align 8
  %_519 = load i64, i64* %g, align 8
  %_521 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_520 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_521, i64 9)
  br label %bb205

bb205:                                            ; preds = %bb204
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_518 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_519, i64 %_520)
  br label %bb206

bb206:                                            ; preds = %bb205
  store i64 %_518, i64* %g, align 8
  %_523 = load i64, i64* %a, align 8
  %_524 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_522 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_523, i64 %_524)
  br label %bb207

bb207:                                            ; preds = %bb206
  store i64 %_522, i64* %a, align 8
  %_526 = load i64, i64* %c, align 8
  %_527 = load i64, i64* %g, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_525 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_526, i64 %_527)
  br label %bb208

bb208:                                            ; preds = %bb207
  store i64 %_525, i64* %c, align 8
  %_529 = load i64, i64* %h, align 8
  %_531 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_530 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_531, i64 23)
  br label %bb209

bb209:                                            ; preds = %bb208
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_528 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_529, i64 %_530)
  br label %bb210

bb210:                                            ; preds = %bb209
  store i64 %_528, i64* %h, align 8
  %_533 = load i64, i64* %b, align 8
  %_534 = load i64, i64* %c, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_532 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_533, i64 %_534)
  br label %bb211

bb211:                                            ; preds = %bb210
  store i64 %_532, i64* %b, align 8
  %_536 = load i64, i64* %d, align 8
  %_537 = load i64, i64* %h, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_535 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_536, i64 %_537)
  br label %bb212

bb212:                                            ; preds = %bb211
  store i64 %_535, i64* %d, align 8
  %_539 = load i64, i64* %a, align 8
  %_541 = load i64, i64* %c, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_540 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_541, i64 15)
  br label %bb213

bb213:                                            ; preds = %bb212
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_538 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_539, i64 %_540)
  br label %bb214

bb214:                                            ; preds = %bb213
  store i64 %_538, i64* %a, align 8
  %_543 = load i64, i64* %c, align 8
  %_544 = load i64, i64* %d, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_542 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_543, i64 %_544)
  br label %bb215

bb215:                                            ; preds = %bb214
  store i64 %_542, i64* %c, align 8
  %_546 = load i64, i64* %e, align 8
  %_547 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_545 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_546, i64 %_547)
  br label %bb216

bb216:                                            ; preds = %bb215
  store i64 %_545, i64* %e, align 8
  %_549 = load i64, i64* %b, align 8
  %_551 = load i64, i64* %d, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_550 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_551, i64 14)
  br label %bb217

bb217:                                            ; preds = %bb216
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_548 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_549, i64 %_550)
  br label %bb218

bb218:                                            ; preds = %bb217
  store i64 %_548, i64* %b, align 8
  %_553 = load i64, i64* %d, align 8
  %_554 = load i64, i64* %e, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_552 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_553, i64 %_554)
  br label %bb219

bb219:                                            ; preds = %bb218
  store i64 %_552, i64* %d, align 8
  %_556 = load i64, i64* %f, align 8
  %_557 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_555 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_556, i64 %_557)
  br label %bb220

bb220:                                            ; preds = %bb219
  store i64 %_555, i64* %f, align 8
  %_559 = load i64, i64* %c, align 8
  %_561 = load i64, i64* %e, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_560 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_561, i64 20)
  br label %bb221

bb221:                                            ; preds = %bb220
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_558 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_559, i64 %_560)
  br label %bb222

bb222:                                            ; preds = %bb221
  store i64 %_558, i64* %c, align 8
  %_563 = load i64, i64* %e, align 8
  %_564 = load i64, i64* %f, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_562 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_563, i64 %_564)
  br label %bb223

bb223:                                            ; preds = %bb222
  store i64 %_562, i64* %e, align 8
  %_566 = load i64, i64* %g, align 8
  %_567 = load i64, i64* %c, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_565 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_566, i64 %_567)
  br label %bb224

bb224:                                            ; preds = %bb223
  store i64 %_565, i64* %g, align 8
  %_569 = load i64, i64* %d, align 8
  %_571 = load i64, i64* %f, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_570 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_571, i64 17)
  br label %bb225

bb225:                                            ; preds = %bb224
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_568 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_569, i64 %_570)
  br label %bb226

bb226:                                            ; preds = %bb225
  store i64 %_568, i64* %d, align 8
  %_573 = load i64, i64* %f, align 8
  %_574 = load i64, i64* %g, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_572 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_573, i64 %_574)
  br label %bb227

bb227:                                            ; preds = %bb226
  store i64 %_572, i64* %f, align 8
  %_576 = load i64, i64* %h, align 8
  %_577 = load i64, i64* %d, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Sub>::sub
  %_575 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Sub$GT$3sub17h456d5ace7d0be7c7E"(i64 %_576, i64 %_577)
  br label %bb228

bb228:                                            ; preds = %bb227
  store i64 %_575, i64* %h, align 8
  %_579 = load i64, i64* %e, align 8
  %_581 = load i64, i64* %g, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_580 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_581, i64 14)
  br label %bb229

bb229:                                            ; preds = %bb228
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %_578 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_579, i64 %_580)
  br label %bb230

bb230:                                            ; preds = %bb229
  store i64 %_578, i64* %e, align 8
  %_583 = load i64, i64* %g, align 8
  %_584 = load i64, i64* %h, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_582 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_583, i64 %_584)
  br label %bb231

bb231:                                            ; preds = %bb230
  store i64 %_582, i64* %g, align 8
  %_585 = load i64, i64* %a, align 8
  %_588 = icmp ult i64 %i64, 256
  %206 = call i1 @llvm.expect.i1(i1 %_588, i1 true)
  br i1 %206, label %bb232, label %panic65

bb232:                                            ; preds = %bb231
  %207 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %208 = getelementptr inbounds [256 x i64], [256 x i64]* %207, i64 0, i64 %i64
  store i64 %_585, i64* %208, align 8
  %_589 = load i64, i64* %b, align 8
  %209 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 1)
  %_592.0 = extractvalue { i64, i1 } %209, 0
  %_592.1 = extractvalue { i64, i1 } %209, 1
  %210 = call i1 @llvm.expect.i1(i1 %_592.1, i1 false)
  br i1 %210, label %panic66, label %bb233

panic65:                                          ; preds = %bb231
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i64, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1400 to %"core::panic::location::Location"*)) #17
  unreachable

bb233:                                            ; preds = %bb232
  %_594 = icmp ult i64 %_592.0, 256
  %211 = call i1 @llvm.expect.i1(i1 %_594, i1 true)
  br i1 %211, label %bb234, label %panic67

panic66:                                          ; preds = %bb232
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1402 to %"core::panic::location::Location"*)) #17
  unreachable

bb234:                                            ; preds = %bb233
  %212 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %213 = getelementptr inbounds [256 x i64], [256 x i64]* %212, i64 0, i64 %_592.0
  store i64 %_589, i64* %213, align 8
  %_595 = load i64, i64* %c, align 8
  %214 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 2)
  %_598.0 = extractvalue { i64, i1 } %214, 0
  %_598.1 = extractvalue { i64, i1 } %214, 1
  %215 = call i1 @llvm.expect.i1(i1 %_598.1, i1 false)
  br i1 %215, label %panic68, label %bb235

panic67:                                          ; preds = %bb233
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_592.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1404 to %"core::panic::location::Location"*)) #17
  unreachable

bb235:                                            ; preds = %bb234
  %_600 = icmp ult i64 %_598.0, 256
  %216 = call i1 @llvm.expect.i1(i1 %_600, i1 true)
  br i1 %216, label %bb236, label %panic69

panic68:                                          ; preds = %bb234
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1406 to %"core::panic::location::Location"*)) #17
  unreachable

bb236:                                            ; preds = %bb235
  %217 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %218 = getelementptr inbounds [256 x i64], [256 x i64]* %217, i64 0, i64 %_598.0
  store i64 %_595, i64* %218, align 8
  %_601 = load i64, i64* %d, align 8
  %219 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 3)
  %_604.0 = extractvalue { i64, i1 } %219, 0
  %_604.1 = extractvalue { i64, i1 } %219, 1
  %220 = call i1 @llvm.expect.i1(i1 %_604.1, i1 false)
  br i1 %220, label %panic70, label %bb237

panic69:                                          ; preds = %bb235
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_598.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1408 to %"core::panic::location::Location"*)) #17
  unreachable

bb237:                                            ; preds = %bb236
  %_606 = icmp ult i64 %_604.0, 256
  %221 = call i1 @llvm.expect.i1(i1 %_606, i1 true)
  br i1 %221, label %bb238, label %panic71

panic70:                                          ; preds = %bb236
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1410 to %"core::panic::location::Location"*)) #17
  unreachable

bb238:                                            ; preds = %bb237
  %222 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %223 = getelementptr inbounds [256 x i64], [256 x i64]* %222, i64 0, i64 %_604.0
  store i64 %_601, i64* %223, align 8
  %_607 = load i64, i64* %e, align 8
  %224 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 4)
  %_610.0 = extractvalue { i64, i1 } %224, 0
  %_610.1 = extractvalue { i64, i1 } %224, 1
  %225 = call i1 @llvm.expect.i1(i1 %_610.1, i1 false)
  br i1 %225, label %panic72, label %bb239

panic71:                                          ; preds = %bb237
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_604.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1412 to %"core::panic::location::Location"*)) #17
  unreachable

bb239:                                            ; preds = %bb238
  %_612 = icmp ult i64 %_610.0, 256
  %226 = call i1 @llvm.expect.i1(i1 %_612, i1 true)
  br i1 %226, label %bb240, label %panic73

panic72:                                          ; preds = %bb238
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1414 to %"core::panic::location::Location"*)) #17
  unreachable

bb240:                                            ; preds = %bb239
  %227 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %228 = getelementptr inbounds [256 x i64], [256 x i64]* %227, i64 0, i64 %_610.0
  store i64 %_607, i64* %228, align 8
  %_613 = load i64, i64* %f, align 8
  %229 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 5)
  %_616.0 = extractvalue { i64, i1 } %229, 0
  %_616.1 = extractvalue { i64, i1 } %229, 1
  %230 = call i1 @llvm.expect.i1(i1 %_616.1, i1 false)
  br i1 %230, label %panic74, label %bb241

panic73:                                          ; preds = %bb239
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_610.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1416 to %"core::panic::location::Location"*)) #17
  unreachable

bb241:                                            ; preds = %bb240
  %_618 = icmp ult i64 %_616.0, 256
  %231 = call i1 @llvm.expect.i1(i1 %_618, i1 true)
  br i1 %231, label %bb242, label %panic75

panic74:                                          ; preds = %bb240
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1418 to %"core::panic::location::Location"*)) #17
  unreachable

bb242:                                            ; preds = %bb241
  %232 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %233 = getelementptr inbounds [256 x i64], [256 x i64]* %232, i64 0, i64 %_616.0
  store i64 %_613, i64* %233, align 8
  %_619 = load i64, i64* %g, align 8
  %234 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 6)
  %_622.0 = extractvalue { i64, i1 } %234, 0
  %_622.1 = extractvalue { i64, i1 } %234, 1
  %235 = call i1 @llvm.expect.i1(i1 %_622.1, i1 false)
  br i1 %235, label %panic76, label %bb243

panic75:                                          ; preds = %bb241
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_616.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1420 to %"core::panic::location::Location"*)) #17
  unreachable

bb243:                                            ; preds = %bb242
  %_624 = icmp ult i64 %_622.0, 256
  %236 = call i1 @llvm.expect.i1(i1 %_624, i1 true)
  br i1 %236, label %bb244, label %panic77

panic76:                                          ; preds = %bb242
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1422 to %"core::panic::location::Location"*)) #17
  unreachable

bb244:                                            ; preds = %bb243
  %237 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %238 = getelementptr inbounds [256 x i64], [256 x i64]* %237, i64 0, i64 %_622.0
  store i64 %_619, i64* %238, align 8
  %_625 = load i64, i64* %h, align 8
  %239 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i64, i64 7)
  %_628.0 = extractvalue { i64, i1 } %239, 0
  %_628.1 = extractvalue { i64, i1 } %239, 1
  %240 = call i1 @llvm.expect.i1(i1 %_628.1, i1 false)
  br i1 %240, label %panic78, label %bb245

panic77:                                          ; preds = %bb243
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_622.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1424 to %"core::panic::location::Location"*)) #17
  unreachable

bb245:                                            ; preds = %bb244
  %_630 = icmp ult i64 %_628.0, 256
  %241 = call i1 @llvm.expect.i1(i1 %_630, i1 true)
  br i1 %241, label %bb246, label %panic79

panic78:                                          ; preds = %bb244
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1426 to %"core::panic::location::Location"*)) #17
  unreachable

bb246:                                            ; preds = %bb245
  %242 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %243 = getelementptr inbounds [256 x i64], [256 x i64]* %242, i64 0, i64 %_628.0
  store i64 %_625, i64* %243, align 8
  br label %bb196

panic79:                                          ; preds = %bb245
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_628.0, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1428 to %"core::panic::location::Location"*)) #17
  unreachable

bb248:                                            ; preds = %bb247
  ret void
}

; rand::prng::isaac64::Isaac64Rng::init::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4rand4prng7isaac6410Isaac64Rng4init28_$u7b$$u7b$closure$u7d$$u7d$17h1f1739fc62c7fd8cE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65]"* nonnull align 1 %_1, i64 %i) unnamed_addr #0 {
start:
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %i, i64 8)
  %_4.0 = extractvalue { i64, i1 } %0, 0
  %_4.1 = extractvalue { i64, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  ret i64 %_4.0

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1396 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::prng::isaac64::Isaac64Rng::init::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4rand4prng7isaac6410Isaac64Rng4init28_$u7b$$u7b$closure$u7d$$u7d$17hf50b19986ef9ddfaE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:94:56: 94:65].0"* nonnull align 1 %_1, i64 %i) unnamed_addr #0 {
start:
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %i, i64 8)
  %_4.0 = extractvalue { i64, i1 } %0, 0
  %_4.1 = extractvalue { i64, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  ret i64 %_4.0

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1398 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::prng::isaac64::Isaac64Rng::init::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4rand4prng7isaac6410Isaac64Rng4init28_$u7b$$u7b$closure$u7d$$u7d$17h63448566323b74dbE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:111:48: 111:57]"* nonnull align 1 %_1, i64 %i) unnamed_addr #0 {
start:
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %i, i64 8)
  %_4.0 = extractvalue { i64, i1 } %0, 0
  %_4.1 = extractvalue { i64, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  ret i64 %_4.0

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1430 to %"core::panic::location::Location"*)) #17
  unreachable
}

; rand::prng::isaac64::Isaac64Rng::isaac64
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand4prng7isaac6410Isaac64Rng7isaac6417h5ab2890bce7b265eE(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %self) unnamed_addr #1 {
start:
  %_25 = alloca { i64, i64 }, align 8
  %iter1 = alloca { i64, i64 }, align 8
  %_22 = alloca { i64, i64 }, align 8
  %_14 = alloca i64*, align 8
  %iter = alloca { i64*, i64* }, align 8
  %b = alloca i64, align 8
  %a = alloca i64, align 8
  %_4 = alloca i64, align 8
  %0 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 5
  %_3 = load i64, i64* %0, align 8
  store i64 1, i64* %_4, align 8
  %1 = load i64, i64* %_4, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_2 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_3, i64 %1)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 5
  store i64 %_2, i64* %2, align 8
  %3 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  store i64 %4, i64* %a, align 8
  %5 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 4
  %_7 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 5
  %_8 = load i64, i64* %6, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %7 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_7, i64 %_8)
  store i64 %7, i64* %b, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::slice::<impl [T]>::iter
  %8 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h3eeeac8675102f82E"([0 x { i64, i64 }]* nonnull align 8 bitcast (<{ [32 x i8] }>* @alloc882 to [0 x { i64, i64 }]*), i64 2)
  %_10.0 = extractvalue { i64*, i64* } %8, 0
  %_10.1 = extractvalue { i64*, i64* } %8, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %9 = call { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0b3cdb7b3691da20E"(i64* nonnull %_10.0, i64* %_10.1)
  %_9.0 = extractvalue { i64*, i64* } %9, 0
  %_9.1 = extractvalue { i64*, i64* } %9, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 0
  store i64* %_9.0, i64** %10, align 8
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1
  store i64* %_9.1, i64** %11, align 8
  br label %bb5

bb5:                                              ; preds = %bb13, %bb4
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %12 = call align 8 dereferenceable_or_null(16) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hab089d292ee7ec54E"({ i64*, i64* }* align 8 dereferenceable(16) %iter)
  store i64* %12, i64** %_14, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %13 = bitcast i64** %_14 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_17 = select i1 %15, i64 0, i64 1
  switch i64 %_17, label %bb8 [
    i64 0, label %bb9
    i64 1, label %bb7
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb9:                                              ; preds = %bb6
  %_307 = load i64, i64* %a, align 8
  %16 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 3
  store i64 %_307, i64* %16, align 8
  %_308 = load i64, i64* %b, align 8
  %17 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 4
  store i64 %_308, i64* %17, align 8
  %18 = bitcast %"prng::isaac64::Isaac64Rng"* %self to i64*
  store i64 256, i64* %18, align 8
  ret void

bb7:                                              ; preds = %bb6
  %19 = bitcast i64** %_14 to { i64, i64 }**
  %20 = load { i64, i64 }*, { i64, i64 }** %19, align 8, !nonnull !5
  %21 = bitcast { i64, i64 }* %20 to i64*
  %mr_offset = load i64, i64* %21, align 8
  %22 = bitcast i64** %_14 to { i64, i64 }**
  %23 = load { i64, i64 }*, { i64, i64 }** %22, align 8, !nonnull !5
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i32 0, i32 1
  %m2_offset = load i64, i64* %24, align 8
  %25 = bitcast { i64, i64 }* %_22 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_22, i32 0, i32 1
  store i64 32, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_22, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_22, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
; call core::iter::traits::iterator::Iterator::map
  %31 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3map17hf14896f878352213E(i64 %28, i64 %30)
  %_21.0 = extractvalue { i64, i64 } %31, 0
  %_21.1 = extractvalue { i64, i64 } %31, 1
  br label %bb10

bb10:                                             ; preds = %bb7
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %32 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2b7334953e8ae2bdE"(i64 %_21.0, i64 %_21.1)
  %_20.0 = extractvalue { i64, i64 } %32, 0
  %_20.1 = extractvalue { i64, i64 } %32, 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter1, i32 0, i32 0
  store i64 %_20.0, i64* %33, align 8
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter1, i32 0, i32 1
  store i64 %_20.1, i64* %34, align 8
  br label %bb12

bb12:                                             ; preds = %bb96, %bb11
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %35 = call { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7ac46c034fa24ffbE"({ i64, i64 }* align 8 dereferenceable(16) %iter1)
  store { i64, i64 } %35, { i64, i64 }* %_25, align 8
  br label %bb13

bb13:                                             ; preds = %bb12
  %36 = bitcast { i64, i64 }* %_25 to i64*
  %_28 = load i64, i64* %36, align 8, !range !2
  switch i64 %_28, label %bb15 [
    i64 0, label %bb5
    i64 1, label %bb14
  ]

bb15:                                             ; preds = %bb13
  unreachable

bb14:                                             ; preds = %bb13
  %37 = bitcast { i64, i64 }* %_25 to %"core::option::Option<usize>::Some"*
  %38 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %37, i32 0, i32 1
  %base = load i64, i64* %38, align 8
  %39 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %base, i64 0)
  %_32.0 = extractvalue { i64, i1 } %39, 0
  %_32.1 = extractvalue { i64, i1 } %39, 1
  %40 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false)
  br i1 %40, label %panic, label %bb16

bb16:                                             ; preds = %bb14
  %_34 = load i64, i64* %a, align 8
  %_36 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_35 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_36, i64 21)
  br label %bb17

panic:                                            ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1432 to %"core::panic::location::Location"*)) #17
  unreachable

bb17:                                             ; preds = %bb16
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %mix = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_34, i64 %_35)
  br label %bb18

bb18:                                             ; preds = %bb17
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Not>::not
  %mix2 = call i64 @"_ZN80_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Not$GT$3not17hbe2d2b17bd352003E"(i64 %mix)
  br label %bb19

bb19:                                             ; preds = %bb18
  %_42 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_41.0 = bitcast [256 x i64]* %_42 to [0 x i64]*
  %41 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_32.0, i64 %mr_offset)
  %_46.0 = extractvalue { i64, i1 } %41, 0
  %_46.1 = extractvalue { i64, i1 } %41, 1
  %42 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false)
  br i1 %42, label %panic3, label %bb20

bb20:                                             ; preds = %bb19
; call core::slice::<impl [T]>::get_unchecked
  %_40 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_41.0, i64 256, i64 %_46.0)
  br label %bb21

panic3:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1432 to %"core::panic::location::Location"*)) #17
  unreachable

bb21:                                             ; preds = %bb20
  %x = load i64, i64* %_40, align 8
  %_52 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_51.0 = bitcast [256 x i64]* %_52 to [0 x i64]*
  %43 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_32.0, i64 %m2_offset)
  %_56.0 = extractvalue { i64, i1 } %43, 0
  %_56.1 = extractvalue { i64, i1 } %43, 1
  %44 = call i1 @llvm.expect.i1(i1 %_56.1, i1 false)
  br i1 %44, label %panic4, label %bb22

bb22:                                             ; preds = %bb21
; call core::slice::<impl [T]>::get_unchecked
  %_50 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_51.0, i64 256, i64 %_56.0)
  br label %bb23

panic4:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1432 to %"core::panic::location::Location"*)) #17
  unreachable

bb23:                                             ; preds = %bb22
  %_49 = load i64, i64* %_50, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_47 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %mix2, i64 %_49)
  br label %bb24

bb24:                                             ; preds = %bb23
  store i64 %_47, i64* %a, align 8
  %_62 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_61.0 = bitcast [256 x i64]* %_62 to [0 x i64]*
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_66 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %x, i64 3)
  br label %bb25

bb25:                                             ; preds = %bb24
  %_63 = and i64 %_66, 255
; call core::slice::<impl [T]>::get_unchecked
  %_60 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_61.0, i64 256, i64 %_63)
  br label %bb26

bb26:                                             ; preds = %bb25
  %_59 = load i64, i64* %_60, align 8
  %_69 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_58 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_59, i64 %_69)
  br label %bb27

bb27:                                             ; preds = %bb26
  %_70 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %y = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_58, i64 %_70)
  br label %bb28

bb28:                                             ; preds = %bb27
  %_74 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_73.0 = bitcast [256 x i64]* %_74 to [0 x i64]*
  %45 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_32.0, i64 %mr_offset)
  %_78.0 = extractvalue { i64, i1 } %45, 0
  %_78.1 = extractvalue { i64, i1 } %45, 1
  %46 = call i1 @llvm.expect.i1(i1 %_78.1, i1 false)
  br i1 %46, label %panic5, label %bb29

bb29:                                             ; preds = %bb28
; call core::slice::<impl [T]>::get_unchecked_mut
  %_72 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha45b74d574a181aeE"([0 x i64]* nonnull align 8 %_73.0, i64 256, i64 %_78.0)
  br label %bb30

panic5:                                           ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1432 to %"core::panic::location::Location"*)) #17
  unreachable

bb30:                                             ; preds = %bb29
  store i64 %y, i64* %_72, align 8
  %_83 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_82.0 = bitcast [256 x i64]* %_83 to [0 x i64]*
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_88 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %y, i64 8)
  br label %bb31

bb31:                                             ; preds = %bb30
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_87 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_88, i64 3)
  br label %bb32

bb32:                                             ; preds = %bb31
  %_84 = and i64 %_87, 255
; call core::slice::<impl [T]>::get_unchecked
  %_81 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_82.0, i64 256, i64 %_84)
  br label %bb33

bb33:                                             ; preds = %bb32
  %_80 = load i64, i64* %_81, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_79 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_80, i64 %x)
  br label %bb34

bb34:                                             ; preds = %bb33
  store i64 %_79, i64* %b, align 8
  %_92 = load i64, i64* %b, align 8
  %_95 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %_94.0 = bitcast [256 x i64]* %_95 to [0 x i64]*
  %47 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_32.0, i64 %mr_offset)
  %_99.0 = extractvalue { i64, i1 } %47, 0
  %_99.1 = extractvalue { i64, i1 } %47, 1
  %48 = call i1 @llvm.expect.i1(i1 %_99.1, i1 false)
  br i1 %48, label %panic6, label %bb35

bb35:                                             ; preds = %bb34
; call core::slice::<impl [T]>::get_unchecked_mut
  %_93 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha45b74d574a181aeE"([0 x i64]* nonnull align 8 %_94.0, i64 256, i64 %_99.0)
  br label %bb36

panic6:                                           ; preds = %bb34
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1432 to %"core::panic::location::Location"*)) #17
  unreachable

bb36:                                             ; preds = %bb35
  store i64 %_92, i64* %_93, align 8
  %49 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %base, i64 1)
  %_102.0 = extractvalue { i64, i1 } %49, 0
  %_102.1 = extractvalue { i64, i1 } %49, 1
  %50 = call i1 @llvm.expect.i1(i1 %_102.1, i1 false)
  br i1 %50, label %panic7, label %bb37

bb37:                                             ; preds = %bb36
  %_104 = load i64, i64* %a, align 8
  %_106 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_105 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_106, i64 5)
  br label %bb38

panic7:                                           ; preds = %bb36
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1434 to %"core::panic::location::Location"*)) #17
  unreachable

bb38:                                             ; preds = %bb37
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %mix8 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_104, i64 %_105)
  br label %bb39

bb39:                                             ; preds = %bb38
  %_111 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_110.0 = bitcast [256 x i64]* %_111 to [0 x i64]*
  %51 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_102.0, i64 %mr_offset)
  %_115.0 = extractvalue { i64, i1 } %51, 0
  %_115.1 = extractvalue { i64, i1 } %51, 1
  %52 = call i1 @llvm.expect.i1(i1 %_115.1, i1 false)
  br i1 %52, label %panic9, label %bb40

bb40:                                             ; preds = %bb39
; call core::slice::<impl [T]>::get_unchecked
  %_109 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_110.0, i64 256, i64 %_115.0)
  br label %bb41

panic9:                                           ; preds = %bb39
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1434 to %"core::panic::location::Location"*)) #17
  unreachable

bb41:                                             ; preds = %bb40
  %x10 = load i64, i64* %_109, align 8
  %_121 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_120.0 = bitcast [256 x i64]* %_121 to [0 x i64]*
  %53 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_102.0, i64 %m2_offset)
  %_125.0 = extractvalue { i64, i1 } %53, 0
  %_125.1 = extractvalue { i64, i1 } %53, 1
  %54 = call i1 @llvm.expect.i1(i1 %_125.1, i1 false)
  br i1 %54, label %panic11, label %bb42

bb42:                                             ; preds = %bb41
; call core::slice::<impl [T]>::get_unchecked
  %_119 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_120.0, i64 256, i64 %_125.0)
  br label %bb43

panic11:                                          ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1434 to %"core::panic::location::Location"*)) #17
  unreachable

bb43:                                             ; preds = %bb42
  %_118 = load i64, i64* %_119, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_116 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %mix8, i64 %_118)
  br label %bb44

bb44:                                             ; preds = %bb43
  store i64 %_116, i64* %a, align 8
  %_131 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_130.0 = bitcast [256 x i64]* %_131 to [0 x i64]*
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_135 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %x10, i64 3)
  br label %bb45

bb45:                                             ; preds = %bb44
  %_132 = and i64 %_135, 255
; call core::slice::<impl [T]>::get_unchecked
  %_129 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_130.0, i64 256, i64 %_132)
  br label %bb46

bb46:                                             ; preds = %bb45
  %_128 = load i64, i64* %_129, align 8
  %_138 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_127 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_128, i64 %_138)
  br label %bb47

bb47:                                             ; preds = %bb46
  %_139 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %y12 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_127, i64 %_139)
  br label %bb48

bb48:                                             ; preds = %bb47
  %_143 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_142.0 = bitcast [256 x i64]* %_143 to [0 x i64]*
  %55 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_102.0, i64 %mr_offset)
  %_147.0 = extractvalue { i64, i1 } %55, 0
  %_147.1 = extractvalue { i64, i1 } %55, 1
  %56 = call i1 @llvm.expect.i1(i1 %_147.1, i1 false)
  br i1 %56, label %panic13, label %bb49

bb49:                                             ; preds = %bb48
; call core::slice::<impl [T]>::get_unchecked_mut
  %_141 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha45b74d574a181aeE"([0 x i64]* nonnull align 8 %_142.0, i64 256, i64 %_147.0)
  br label %bb50

panic13:                                          ; preds = %bb48
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1434 to %"core::panic::location::Location"*)) #17
  unreachable

bb50:                                             ; preds = %bb49
  store i64 %y12, i64* %_141, align 8
  %_152 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_151.0 = bitcast [256 x i64]* %_152 to [0 x i64]*
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_157 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %y12, i64 8)
  br label %bb51

bb51:                                             ; preds = %bb50
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_156 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_157, i64 3)
  br label %bb52

bb52:                                             ; preds = %bb51
  %_153 = and i64 %_156, 255
; call core::slice::<impl [T]>::get_unchecked
  %_150 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_151.0, i64 256, i64 %_153)
  br label %bb53

bb53:                                             ; preds = %bb52
  %_149 = load i64, i64* %_150, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_148 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_149, i64 %x10)
  br label %bb54

bb54:                                             ; preds = %bb53
  store i64 %_148, i64* %b, align 8
  %_161 = load i64, i64* %b, align 8
  %_164 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %_163.0 = bitcast [256 x i64]* %_164 to [0 x i64]*
  %57 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_102.0, i64 %mr_offset)
  %_168.0 = extractvalue { i64, i1 } %57, 0
  %_168.1 = extractvalue { i64, i1 } %57, 1
  %58 = call i1 @llvm.expect.i1(i1 %_168.1, i1 false)
  br i1 %58, label %panic14, label %bb55

bb55:                                             ; preds = %bb54
; call core::slice::<impl [T]>::get_unchecked_mut
  %_162 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha45b74d574a181aeE"([0 x i64]* nonnull align 8 %_163.0, i64 256, i64 %_168.0)
  br label %bb56

panic14:                                          ; preds = %bb54
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1434 to %"core::panic::location::Location"*)) #17
  unreachable

bb56:                                             ; preds = %bb55
  store i64 %_161, i64* %_162, align 8
  %59 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %base, i64 2)
  %_171.0 = extractvalue { i64, i1 } %59, 0
  %_171.1 = extractvalue { i64, i1 } %59, 1
  %60 = call i1 @llvm.expect.i1(i1 %_171.1, i1 false)
  br i1 %60, label %panic15, label %bb57

bb57:                                             ; preds = %bb56
  %_173 = load i64, i64* %a, align 8
  %_175 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shl<usize>>::shl
  %_174 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shl$LT$usize$GT$$GT$3shl17h849070a53e45be20E"(i64 %_175, i64 12)
  br label %bb58

panic15:                                          ; preds = %bb56
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1436 to %"core::panic::location::Location"*)) #17
  unreachable

bb58:                                             ; preds = %bb57
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %mix16 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_173, i64 %_174)
  br label %bb59

bb59:                                             ; preds = %bb58
  %_180 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_179.0 = bitcast [256 x i64]* %_180 to [0 x i64]*
  %61 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_171.0, i64 %mr_offset)
  %_184.0 = extractvalue { i64, i1 } %61, 0
  %_184.1 = extractvalue { i64, i1 } %61, 1
  %62 = call i1 @llvm.expect.i1(i1 %_184.1, i1 false)
  br i1 %62, label %panic17, label %bb60

bb60:                                             ; preds = %bb59
; call core::slice::<impl [T]>::get_unchecked
  %_178 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_179.0, i64 256, i64 %_184.0)
  br label %bb61

panic17:                                          ; preds = %bb59
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1436 to %"core::panic::location::Location"*)) #17
  unreachable

bb61:                                             ; preds = %bb60
  %x18 = load i64, i64* %_178, align 8
  %_190 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_189.0 = bitcast [256 x i64]* %_190 to [0 x i64]*
  %63 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_171.0, i64 %m2_offset)
  %_194.0 = extractvalue { i64, i1 } %63, 0
  %_194.1 = extractvalue { i64, i1 } %63, 1
  %64 = call i1 @llvm.expect.i1(i1 %_194.1, i1 false)
  br i1 %64, label %panic19, label %bb62

bb62:                                             ; preds = %bb61
; call core::slice::<impl [T]>::get_unchecked
  %_188 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_189.0, i64 256, i64 %_194.0)
  br label %bb63

panic19:                                          ; preds = %bb61
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1436 to %"core::panic::location::Location"*)) #17
  unreachable

bb63:                                             ; preds = %bb62
  %_187 = load i64, i64* %_188, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_185 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %mix16, i64 %_187)
  br label %bb64

bb64:                                             ; preds = %bb63
  store i64 %_185, i64* %a, align 8
  %_200 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_199.0 = bitcast [256 x i64]* %_200 to [0 x i64]*
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_204 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %x18, i64 3)
  br label %bb65

bb65:                                             ; preds = %bb64
  %_201 = and i64 %_204, 255
; call core::slice::<impl [T]>::get_unchecked
  %_198 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_199.0, i64 256, i64 %_201)
  br label %bb66

bb66:                                             ; preds = %bb65
  %_197 = load i64, i64* %_198, align 8
  %_207 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_196 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_197, i64 %_207)
  br label %bb67

bb67:                                             ; preds = %bb66
  %_208 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %y20 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_196, i64 %_208)
  br label %bb68

bb68:                                             ; preds = %bb67
  %_212 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_211.0 = bitcast [256 x i64]* %_212 to [0 x i64]*
  %65 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_171.0, i64 %mr_offset)
  %_216.0 = extractvalue { i64, i1 } %65, 0
  %_216.1 = extractvalue { i64, i1 } %65, 1
  %66 = call i1 @llvm.expect.i1(i1 %_216.1, i1 false)
  br i1 %66, label %panic21, label %bb69

bb69:                                             ; preds = %bb68
; call core::slice::<impl [T]>::get_unchecked_mut
  %_210 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha45b74d574a181aeE"([0 x i64]* nonnull align 8 %_211.0, i64 256, i64 %_216.0)
  br label %bb70

panic21:                                          ; preds = %bb68
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1436 to %"core::panic::location::Location"*)) #17
  unreachable

bb70:                                             ; preds = %bb69
  store i64 %y20, i64* %_210, align 8
  %_221 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_220.0 = bitcast [256 x i64]* %_221 to [0 x i64]*
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_226 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %y20, i64 8)
  br label %bb71

bb71:                                             ; preds = %bb70
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_225 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_226, i64 3)
  br label %bb72

bb72:                                             ; preds = %bb71
  %_222 = and i64 %_225, 255
; call core::slice::<impl [T]>::get_unchecked
  %_219 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_220.0, i64 256, i64 %_222)
  br label %bb73

bb73:                                             ; preds = %bb72
  %_218 = load i64, i64* %_219, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_217 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_218, i64 %x18)
  br label %bb74

bb74:                                             ; preds = %bb73
  store i64 %_217, i64* %b, align 8
  %_230 = load i64, i64* %b, align 8
  %_233 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %_232.0 = bitcast [256 x i64]* %_233 to [0 x i64]*
  %67 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_171.0, i64 %mr_offset)
  %_237.0 = extractvalue { i64, i1 } %67, 0
  %_237.1 = extractvalue { i64, i1 } %67, 1
  %68 = call i1 @llvm.expect.i1(i1 %_237.1, i1 false)
  br i1 %68, label %panic22, label %bb75

bb75:                                             ; preds = %bb74
; call core::slice::<impl [T]>::get_unchecked_mut
  %_231 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha45b74d574a181aeE"([0 x i64]* nonnull align 8 %_232.0, i64 256, i64 %_237.0)
  br label %bb76

panic22:                                          ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1436 to %"core::panic::location::Location"*)) #17
  unreachable

bb76:                                             ; preds = %bb75
  store i64 %_230, i64* %_231, align 8
  %69 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %base, i64 3)
  %_240.0 = extractvalue { i64, i1 } %69, 0
  %_240.1 = extractvalue { i64, i1 } %69, 1
  %70 = call i1 @llvm.expect.i1(i1 %_240.1, i1 false)
  br i1 %70, label %panic23, label %bb77

bb77:                                             ; preds = %bb76
  %_242 = load i64, i64* %a, align 8
  %_244 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_243 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_244, i64 33)
  br label %bb78

panic23:                                          ; preds = %bb76
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1438 to %"core::panic::location::Location"*)) #17
  unreachable

bb78:                                             ; preds = %bb77
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::BitXor>::bitxor
  %mix24 = call i64 @"_ZN83_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h4894383dd9c1652aE"(i64 %_242, i64 %_243)
  br label %bb79

bb79:                                             ; preds = %bb78
  %_249 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_248.0 = bitcast [256 x i64]* %_249 to [0 x i64]*
  %71 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_240.0, i64 %mr_offset)
  %_253.0 = extractvalue { i64, i1 } %71, 0
  %_253.1 = extractvalue { i64, i1 } %71, 1
  %72 = call i1 @llvm.expect.i1(i1 %_253.1, i1 false)
  br i1 %72, label %panic25, label %bb80

bb80:                                             ; preds = %bb79
; call core::slice::<impl [T]>::get_unchecked
  %_247 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_248.0, i64 256, i64 %_253.0)
  br label %bb81

panic25:                                          ; preds = %bb79
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1438 to %"core::panic::location::Location"*)) #17
  unreachable

bb81:                                             ; preds = %bb80
  %x26 = load i64, i64* %_247, align 8
  %_259 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_258.0 = bitcast [256 x i64]* %_259 to [0 x i64]*
  %73 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_240.0, i64 %m2_offset)
  %_263.0 = extractvalue { i64, i1 } %73, 0
  %_263.1 = extractvalue { i64, i1 } %73, 1
  %74 = call i1 @llvm.expect.i1(i1 %_263.1, i1 false)
  br i1 %74, label %panic27, label %bb82

bb82:                                             ; preds = %bb81
; call core::slice::<impl [T]>::get_unchecked
  %_257 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_258.0, i64 256, i64 %_263.0)
  br label %bb83

panic27:                                          ; preds = %bb81
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1438 to %"core::panic::location::Location"*)) #17
  unreachable

bb83:                                             ; preds = %bb82
  %_256 = load i64, i64* %_257, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_254 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %mix24, i64 %_256)
  br label %bb84

bb84:                                             ; preds = %bb83
  store i64 %_254, i64* %a, align 8
  %_269 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_268.0 = bitcast [256 x i64]* %_269 to [0 x i64]*
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_273 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %x26, i64 3)
  br label %bb85

bb85:                                             ; preds = %bb84
  %_270 = and i64 %_273, 255
; call core::slice::<impl [T]>::get_unchecked
  %_267 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_268.0, i64 256, i64 %_270)
  br label %bb86

bb86:                                             ; preds = %bb85
  %_266 = load i64, i64* %_267, align 8
  %_276 = load i64, i64* %a, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_265 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_266, i64 %_276)
  br label %bb87

bb87:                                             ; preds = %bb86
  %_277 = load i64, i64* %b, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %y28 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_265, i64 %_277)
  br label %bb88

bb88:                                             ; preds = %bb87
  %_281 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_280.0 = bitcast [256 x i64]* %_281 to [0 x i64]*
  %75 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_240.0, i64 %mr_offset)
  %_285.0 = extractvalue { i64, i1 } %75, 0
  %_285.1 = extractvalue { i64, i1 } %75, 1
  %76 = call i1 @llvm.expect.i1(i1 %_285.1, i1 false)
  br i1 %76, label %panic29, label %bb89

bb89:                                             ; preds = %bb88
; call core::slice::<impl [T]>::get_unchecked_mut
  %_279 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha45b74d574a181aeE"([0 x i64]* nonnull align 8 %_280.0, i64 256, i64 %_285.0)
  br label %bb90

panic29:                                          ; preds = %bb88
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1438 to %"core::panic::location::Location"*)) #17
  unreachable

bb90:                                             ; preds = %bb89
  store i64 %y28, i64* %_279, align 8
  %_290 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 2
  %_289.0 = bitcast [256 x i64]* %_290 to [0 x i64]*
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_295 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %y28, i64 8)
  br label %bb91

bb91:                                             ; preds = %bb90
; call <core::num::wrapping::Wrapping<u64> as core::ops::bit::Shr<usize>>::shr
  %_294 = call i64 @"_ZN93_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..bit..Shr$LT$usize$GT$$GT$3shr17hda5007eb121d1d28E"(i64 %_295, i64 3)
  br label %bb92

bb92:                                             ; preds = %bb91
  %_291 = and i64 %_294, 255
; call core::slice::<impl [T]>::get_unchecked
  %_288 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h0b89c8ef26cffe0fE"([0 x i64]* nonnull align 8 %_289.0, i64 256, i64 %_291)
  br label %bb93

bb93:                                             ; preds = %bb92
  %_287 = load i64, i64* %_288, align 8
; call <core::num::wrapping::Wrapping<u64> as core::ops::arith::Add>::add
  %_286 = call i64 @"_ZN82_$LT$core..num..wrapping..Wrapping$LT$u64$GT$$u20$as$u20$core..ops..arith..Add$GT$3add17h5e9d920c0c05bfd4E"(i64 %_287, i64 %x26)
  br label %bb94

bb94:                                             ; preds = %bb93
  store i64 %_286, i64* %b, align 8
  %_299 = load i64, i64* %b, align 8
  %_302 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %_301.0 = bitcast [256 x i64]* %_302 to [0 x i64]*
  %77 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_240.0, i64 %mr_offset)
  %_306.0 = extractvalue { i64, i1 } %77, 0
  %_306.1 = extractvalue { i64, i1 } %77, 1
  %78 = call i1 @llvm.expect.i1(i1 %_306.1, i1 false)
  br i1 %78, label %panic30, label %bb95

bb95:                                             ; preds = %bb94
; call core::slice::<impl [T]>::get_unchecked_mut
  %_300 = call align 8 dereferenceable(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha45b74d574a181aeE"([0 x i64]* nonnull align 8 %_301.0, i64 256, i64 %_306.0)
  br label %bb96

panic30:                                          ; preds = %bb94
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.e to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1438 to %"core::panic::location::Location"*)) #17
  unreachable

bb96:                                             ; preds = %bb95
  store i64 %_299, i64* %_300, align 8
  br label %bb12
}

; rand::prng::isaac64::Isaac64Rng::isaac64::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4rand4prng7isaac6410Isaac64Rng7isaac6428_$u7b$$u7b$closure$u7d$$u7d$17he645b21636148aa8E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:138:47: 138:56]"* nonnull align 1 %_1, i64 %i) unnamed_addr #0 {
start:
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %i, i64 4)
  %_4.0 = extractvalue { i64, i1 } %0, 0
  %_4.1 = extractvalue { i64, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  ret i64 %_4.0

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.5 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1440 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <rand::prng::isaac64::Isaac64Rng as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$core..clone..Clone$GT$5clone17h20a0c751a7aae71eE"(%"prng::isaac64::Isaac64Rng"* noalias nocapture sret(%"prng::isaac64::Isaac64Rng") dereferenceable(4128) %0, %"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"prng::isaac64::Isaac64Rng"* %0 to i8*
  %2 = bitcast %"prng::isaac64::Isaac64Rng"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 4128, i1 false)
  ret void
}

; <rand::prng::isaac64::Isaac64Rng as rand::Rng>::next_u32
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN61_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..Rng$GT$8next_u3217hf82266cec7e5fe5eE"(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %self) unnamed_addr #0 {
start:
; call <rand::prng::isaac64::Isaac64Rng as rand::Rng>::next_u64
  %_2 = call i64 @"_ZN61_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..Rng$GT$8next_u6417hd27f209d0b1f4828E"(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = trunc i64 %_2 to i32
  ret i32 %0
}

; <rand::prng::isaac64::Isaac64Rng as rand::Rng>::next_u64
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN61_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..Rng$GT$8next_u6417hd27f209d0b1f4828E"(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %self) unnamed_addr #0 {
start:
  %0 = bitcast %"prng::isaac64::Isaac64Rng"* %self to i64*
  %_2 = load i64, i64* %0, align 8
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %start
; call rand::prng::isaac64::Isaac64Rng::isaac64
  call void @_ZN4rand4prng7isaac6410Isaac64Rng7isaac6417h5ab2890bce7b265eE(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %self)
  br label %bb2

bb2:                                              ; preds = %bb1, %start
  %2 = bitcast %"prng::isaac64::Isaac64Rng"* %self to i64*
  %3 = load i64, i64* %2, align 8
  %4 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %3, i64 1)
  %_5.0 = extractvalue { i64, i1 } %4, 0
  %_5.1 = extractvalue { i64, i1 } %4, 1
  %5 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  br i1 %5, label %panic, label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"prng::isaac64::Isaac64Rng"* %self to i64*
  store i64 %_5.0, i64* %6, align 8
  %7 = bitcast %"prng::isaac64::Isaac64Rng"* %self to i64*
  %_8 = load i64, i64* %7, align 8
  %_7 = icmp ult i64 %_8, 256
  %_6 = xor i1 %_7, true
  br i1 %_6, label %bb4, label %bb5

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.f to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1442 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb3
  %8 = bitcast %"prng::isaac64::Isaac64Rng"* %self to i64*
  %_10 = load i64, i64* %8, align 8
  %_9 = urem i64 %_10, 256
  %_12 = icmp ult i64 %_9, 256
  %9 = call i1 @llvm.expect.i1(i1 %_12, i1 true)
  br i1 %9, label %bb6, label %panic1

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [41 x i8] }>* @alloc1443 to [0 x i8]*), i64 41, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1445 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb5
  %10 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %11 = getelementptr inbounds [256 x i64], [256 x i64]* %10, i64 0, i64 %_9
  %12 = load i64, i64* %11, align 8
  ret i64 %12

panic1:                                           ; preds = %bb5
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_9, i64 256, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1447 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <rand::prng::isaac64::Isaac64Rng as rand::SeedableRng<&[u64]>>::reseed
; Function Attrs: nonlazybind uwtable
define void @"_ZN94_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u64$u5d$$GT$$GT$6reseed17hce023eb8420f875cE"(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %self, [0 x i64]* nonnull align 8 %seed.0, i64 %seed.1) unnamed_addr #1 {
start:
  %_26 = alloca i64, align 8
  %_25 = alloca i64, align 8
  %_24 = alloca i64, align 8
  %_22 = alloca i64, align 8
  %_16 = alloca { i64*, i64 }, align 8
  %iter = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>", align 8
  %_14 = alloca %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>", align 8
  %_10 = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>", align 8
  %_9 = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>", align 8
  %seed_iter = alloca %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>", align 8
; call core::slice::<impl [T]>::iter
  %0 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf5a959240c46c166E"([0 x i64]* nonnull align 8 %seed.0, i64 %seed.1)
  %_5.0 = extractvalue { i64*, i64* } %0, 0
  %_5.1 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::map
  %1 = call { i64*, i64* } @_ZN4core4iter6traits8iterator8Iterator3map17h09ea7156e233729fE(i64* nonnull %_5.0, i64* %_5.1)
  %_4.0 = extractvalue { i64*, i64* } %1, 0
  %_4.1 = extractvalue { i64*, i64* } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::iter::sources::repeat::repeat
  %_8 = call i64 @_ZN4core4iter7sources6repeat6repeat17hecc49917a5801ee7E(i64 0)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::iter::traits::iterator::Iterator::chain
  call void @_ZN4core4iter6traits8iterator8Iterator5chain17h9dcd55bdbbdc6350E(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture sret(%"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>") dereferenceable(32) %seed_iter, i64* nonnull %_4.0, i64* %_4.1, i64 %_8)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_13 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 1
  %_12.0 = bitcast [256 x i64]* %_13 to [0 x i64]*
; call core::slice::<impl [T]>::iter_mut
  %2 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h8fcef0e275d4a4dcE"([0 x i64]* nonnull align 8 %_12.0, i64 256)
  %_11.0 = extractvalue { i64*, i64* } %2, 0
  %_11.1 = extractvalue { i64*, i64* } %2, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %3 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %_14 to i8*
  %4 = bitcast %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* %seed_iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
; call core::iter::traits::iterator::Iterator::zip
  call void @_ZN4core4iter6traits8iterator8Iterator3zip17hdd3818e961823f3cE(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>") dereferenceable(72) %_10, i64* nonnull %_11.0, i64* %_11.1, %"core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>"* noalias nocapture dereferenceable(32) %_14)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h78960d70b2d14158E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* noalias nocapture sret(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>") dereferenceable(72) %_9, %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* noalias nocapture dereferenceable(72) %_10)
  br label %bb7

bb7:                                              ; preds = %bb6
  %5 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* %iter to i8*
  %6 = bitcast %"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 72, i1 false)
  br label %bb8

bb8:                                              ; preds = %bb10, %bb7
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
  %7 = call { i64*, i64 } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7098389353327248E"(%"core::iter::adapters::zip::Zip<core::slice::iter::IterMut<core::num::wrapping::Wrapping<u64>>, core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::slice::iter::Iter<u64>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]>, core::iter::sources::repeat::Repeat<u64>>>"* align 8 dereferenceable(72) %iter)
  store { i64*, i64 } %7, { i64*, i64 }* %_16, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %8 = bitcast { i64*, i64 }* %_16 to {}**
  %9 = load {}*, {}** %8, align 8
  %10 = icmp eq {}* %9, null
  %_19 = select i1 %10, i64 0, i64 1
  switch i64 %_19, label %bb11 [
    i64 0, label %bb12
    i64 1, label %bb10
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb12:                                             ; preds = %bb9
  %11 = bitcast %"prng::isaac64::Isaac64Rng"* %self to i64*
  store i64 0, i64* %11, align 8
  store i64 0, i64* %_24, align 8
  %12 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 3
  %13 = load i64, i64* %_24, align 8
  store i64 %13, i64* %12, align 8
  store i64 0, i64* %_25, align 8
  %14 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 4
  %15 = load i64, i64* %_25, align 8
  store i64 %15, i64* %14, align 8
  store i64 0, i64* %_26, align 8
  %16 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %self, i32 0, i32 5
  %17 = load i64, i64* %_26, align 8
  store i64 %17, i64* %16, align 8
; call rand::prng::isaac64::Isaac64Rng::init
  call void @_ZN4rand4prng7isaac6410Isaac64Rng4init17ha48dfab8f2b175ddE(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %self, i1 zeroext true)
  br label %bb13

bb10:                                             ; preds = %bb9
  %18 = bitcast { i64*, i64 }* %_16 to i64**
  %rsl_elem = load i64*, i64** %18, align 8, !nonnull !5
  %19 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 1
  %seed_elem = load i64, i64* %19, align 8
  store i64 %seed_elem, i64* %_22, align 8
  %20 = load i64, i64* %_22, align 8
  store i64 %20, i64* %rsl_elem, align 8
  br label %bb8

bb13:                                             ; preds = %bb12
  ret void
}

; <rand::prng::isaac64::Isaac64Rng as rand::SeedableRng<&[u64]>>::reseed::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN94_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u64$u5d$$GT$$GT$6reseed28_$u7b$$u7b$closure$u7d$$u7d$17h8bb4434075503990E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/isaac64.rs:221:41: 221:47]"* nonnull align 1 %_1, i64* align 8 dereferenceable(8) %_2) unnamed_addr #0 {
start:
  %x = load i64, i64* %_2, align 8
  ret i64 %x
}

; <rand::prng::isaac64::Isaac64Rng as rand::SeedableRng<&[u64]>>::from_seed
; Function Attrs: nonlazybind uwtable
define void @"_ZN94_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u64$u5d$$GT$$GT$9from_seed17h2524d430b37ada29E"(%"prng::isaac64::Isaac64Rng"* noalias nocapture sret(%"prng::isaac64::Isaac64Rng") dereferenceable(4128) %rng, [0 x i64]* nonnull align 8 %seed.0, i64 %seed.1) unnamed_addr #1 {
start:
  %0 = bitcast %"prng::isaac64::Isaac64Rng"* %rng to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 getelementptr inbounds (<{ [4128 x i8] }>, <{ [4128 x i8] }>* @_ZN4rand4prng7isaac648EMPTY_6417h39ef84dbe350a844E, i32 0, i32 0, i32 0), i64 4128, i1 false)
; call <rand::prng::isaac64::Isaac64Rng as rand::SeedableRng<&[u64]>>::reseed
  call void @"_ZN94_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u64$u5d$$GT$$GT$6reseed17hce023eb8420f875cE"(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %rng, [0 x i64]* nonnull align 8 %seed.0, i64 %seed.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <rand::prng::isaac64::Isaac64Rng as rand::Rand>::rand
; Function Attrs: nonlazybind uwtable
define void @"_ZN62_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..Rand$GT$4rand17h21d6a8dc162b1f43E"(%"prng::isaac64::Isaac64Rng"* noalias nocapture sret(%"prng::isaac64::Isaac64Rng") dereferenceable(4128) %ret, %"jitter::JitterRng"* align 8 dereferenceable(2112) %other) unnamed_addr #1 {
start:
  %_15 = alloca i64, align 8
  %_14 = alloca i64, align 8
  %_13 = alloca i64, align 8
  %0 = bitcast %"prng::isaac64::Isaac64Rng"* %ret to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 getelementptr inbounds (<{ [4128 x i8] }>, <{ [4128 x i8] }>* @_ZN4rand4prng7isaac648EMPTY_6417h39ef84dbe350a844E, i32 0, i32 0, i32 0), i64 4128, i1 false)
  %_6 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %ret, i32 0, i32 1
  %_5.0 = bitcast [256 x i64]* %_6 to [0 x i64]*
; call core::slice::<impl [T]>::as_mut_ptr
  %_4 = call i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hf19e90f4cc8692d7E"([0 x i64]* nonnull align 8 %_5.0, i64 256)
  br label %bb1

bb1:                                              ; preds = %start
  %ptr = bitcast i64* %_4 to i8*
; call core::slice::raw::from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h55b9c77f7426d63bE(i8* %ptr, i64 2048)
  %slice.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %slice.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <rand::jitter::JitterRng as rand::Rng>::fill_bytes
  call void @"_ZN53_$LT$rand..jitter..JitterRng$u20$as$u20$rand..Rng$GT$10fill_bytes17h96da3ce121945ea4E"(%"jitter::JitterRng"* align 8 dereferenceable(2112) %other, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = bitcast %"prng::isaac64::Isaac64Rng"* %ret to i64*
  store i64 0, i64* %2, align 8
  store i64 0, i64* %_13, align 8
  %3 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %ret, i32 0, i32 3
  %4 = load i64, i64* %_13, align 8
  store i64 %4, i64* %3, align 8
  store i64 0, i64* %_14, align 8
  %5 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %ret, i32 0, i32 4
  %6 = load i64, i64* %_14, align 8
  store i64 %6, i64* %5, align 8
  store i64 0, i64* %_15, align 8
  %7 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %ret, i32 0, i32 5
  %8 = load i64, i64* %_15, align 8
  store i64 %8, i64* %7, align 8
; call rand::prng::isaac64::Isaac64Rng::init
  call void @_ZN4rand4prng7isaac6410Isaac64Rng4init17ha48dfab8f2b175ddE(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %ret, i1 zeroext true)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; <rand::prng::isaac64::Isaac64Rng as rand::Rand>::rand
; Function Attrs: nonlazybind uwtable
define void @"_ZN62_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..Rand$GT$4rand17h61309e68706b1a37E"(%"prng::isaac64::Isaac64Rng"* noalias nocapture sret(%"prng::isaac64::Isaac64Rng") dereferenceable(4128) %ret, i32* align 4 dereferenceable(4) %other) unnamed_addr #1 {
start:
  %_15 = alloca i64, align 8
  %_14 = alloca i64, align 8
  %_13 = alloca i64, align 8
  %0 = bitcast %"prng::isaac64::Isaac64Rng"* %ret to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 getelementptr inbounds (<{ [4128 x i8] }>, <{ [4128 x i8] }>* @_ZN4rand4prng7isaac648EMPTY_6417h39ef84dbe350a844E, i32 0, i32 0, i32 0), i64 4128, i1 false)
  %_6 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %ret, i32 0, i32 1
  %_5.0 = bitcast [256 x i64]* %_6 to [0 x i64]*
; call core::slice::<impl [T]>::as_mut_ptr
  %_4 = call i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hf19e90f4cc8692d7E"([0 x i64]* nonnull align 8 %_5.0, i64 256)
  br label %bb1

bb1:                                              ; preds = %start
  %ptr = bitcast i64* %_4 to i8*
; call core::slice::raw::from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h55b9c77f7426d63bE(i8* %ptr, i64 2048)
  %slice.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %slice.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <rand::os::OsRng as rand::Rng>::fill_bytes
  call void @"_ZN45_$LT$rand..os..OsRng$u20$as$u20$rand..Rng$GT$10fill_bytes17h222cab3a0fba7f12E"(i32* align 4 dereferenceable(4) %other, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = bitcast %"prng::isaac64::Isaac64Rng"* %ret to i64*
  store i64 0, i64* %2, align 8
  store i64 0, i64* %_13, align 8
  %3 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %ret, i32 0, i32 3
  %4 = load i64, i64* %_13, align 8
  store i64 %4, i64* %3, align 8
  store i64 0, i64* %_14, align 8
  %5 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %ret, i32 0, i32 4
  %6 = load i64, i64* %_14, align 8
  store i64 %6, i64* %5, align 8
  store i64 0, i64* %_15, align 8
  %7 = getelementptr inbounds %"prng::isaac64::Isaac64Rng", %"prng::isaac64::Isaac64Rng"* %ret, i32 0, i32 5
  %8 = load i64, i64* %_15, align 8
  store i64 %8, i64* %7, align 8
; call rand::prng::isaac64::Isaac64Rng::init
  call void @_ZN4rand4prng7isaac6410Isaac64Rng4init17ha48dfab8f2b175ddE(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %ret, i1 zeroext true)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; <rand::prng::isaac64::Isaac64Rng as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN68_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$core..fmt..Debug$GT$3fmt17hd93c287a67b58229E"(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h039a7a01fe84f5c0E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc907 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc909 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_fmt
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; rand::prng::xorshift::XorShiftRng::new_unseeded
; Function Attrs: nonlazybind uwtable
define i128 @_ZN4rand4prng8xorshift11XorShiftRng12new_unseeded17h0044a3099389916bE() unnamed_addr #1 {
start:
  %0 = alloca %"prng::xorshift::XorShiftRng", align 4
  %1 = bitcast %"prng::xorshift::XorShiftRng"* %0 to i32*
  store i32 423257940, i32* %1, align 4
  %2 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %0, i32 0, i32 1
  store i32 -1465396119, i32* %2, align 4
  %3 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %0, i32 0, i32 2
  store i32 -1753018875, i32* %3, align 4
  %4 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %0, i32 0, i32 3
  store i32 289122235, i32* %4, align 4
  %5 = bitcast %"prng::xorshift::XorShiftRng"* %0 to i128*
  %6 = load i128, i128* %5, align 4
  ret i128 %6
}

; <rand::prng::xorshift::XorShiftRng as rand::SeedableRng<[u32; 4]>>::reseed
; Function Attrs: nonlazybind uwtable
define void @"_ZN103_$LT$rand..prng..xorshift..XorShiftRng$u20$as$u20$rand..SeedableRng$LT$$u5b$u32$u3b$$u20$4$u5d$$GT$$GT$6reseed17h56f05383794cec4eE"(%"prng::xorshift::XorShiftRng"* align 4 dereferenceable(16) %self, i128 %0) unnamed_addr #1 {
start:
  %_20 = alloca i32, align 4
  %_17 = alloca i32, align 4
  %_14 = alloca i32, align 4
  %_11 = alloca i32, align 4
  %_7 = alloca { i32*, i32* }, align 8
  %1 = alloca i128, align 8
  %seed = alloca [4 x i32], align 4
  store i128 %0, i128* %1, align 8
  %2 = bitcast [4 x i32]* %seed to i8*
  %3 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 8 %3, i64 16, i1 false)
  %_8.0 = bitcast [4 x i32]* %seed to [0 x i32]*
; call core::slice::<impl [T]>::iter
  %4 = call { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17had3184a6394da70eE"([0 x i32]* nonnull align 4 %_8.0, i64 4)
  store { i32*, i32* } %4, { i32*, i32* }* %_7, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::all
  %_5 = call zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3all17hcb05de3989d4dbf0E"({ i32*, i32* }* align 8 dereferenceable(16) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* %seed, i64 0, i64 0
  %_12 = load i32, i32* %5, align 4
  store i32 %_12, i32* %_11, align 4
  %6 = bitcast %"prng::xorshift::XorShiftRng"* %self to i32*
  %7 = load i32, i32* %_11, align 4
  store i32 %7, i32* %6, align 4
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* %seed, i64 0, i64 1
  %_15 = load i32, i32* %8, align 4
  store i32 %_15, i32* %_14, align 4
  %9 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %self, i32 0, i32 1
  %10 = load i32, i32* %_14, align 4
  store i32 %10, i32* %9, align 4
  %11 = getelementptr inbounds [4 x i32], [4 x i32]* %seed, i64 0, i64 2
  %_18 = load i32, i32* %11, align 4
  store i32 %_18, i32* %_17, align 4
  %12 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %self, i32 0, i32 2
  %13 = load i32, i32* %_17, align 4
  store i32 %13, i32* %12, align 4
  %14 = getelementptr inbounds [4 x i32], [4 x i32]* %seed, i64 0, i64 3
  %_21 = load i32, i32* %14, align 4
  store i32 %_21, i32* %_20, align 4
  %15 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %self, i32 0, i32 3
  %16 = load i32, i32* %_20, align 4
  store i32 %16, i32* %15, align 4
  ret void

bb3:                                              ; preds = %bb2
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17hb7befd5e474a8c7bE([0 x i8]* nonnull align 1 bitcast (<{ [48 x i8] }>* @alloc1448 to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1450 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <rand::prng::xorshift::XorShiftRng as rand::SeedableRng<[u32; 4]>>::reseed::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN103_$LT$rand..prng..xorshift..XorShiftRng$u20$as$u20$rand..SeedableRng$LT$$u5b$u32$u3b$$u20$4$u5d$$GT$$GT$6reseed28_$u7b$$u7b$closure$u7d$$u7d$17h1d5b5fc5f994d481E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/xorshift.rs:69:34: 69:45]"* nonnull align 1 %_1, i32* align 4 dereferenceable(4) %_2) unnamed_addr #0 {
start:
  %x = load i32, i32* %_2, align 4
  %0 = icmp eq i32 %x, 0
  ret i1 %0
}

; <rand::prng::xorshift::XorShiftRng as rand::SeedableRng<[u32; 4]>>::from_seed
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN103_$LT$rand..prng..xorshift..XorShiftRng$u20$as$u20$rand..SeedableRng$LT$$u5b$u32$u3b$$u20$4$u5d$$GT$$GT$9from_seed17hb30a0a460ef71db3E"(i128 %0) unnamed_addr #1 {
start:
  %_19 = alloca i32, align 4
  %_16 = alloca i32, align 4
  %_13 = alloca i32, align 4
  %_10 = alloca i32, align 4
  %_6 = alloca { i32*, i32* }, align 8
  %1 = alloca %"prng::xorshift::XorShiftRng", align 4
  %2 = alloca i128, align 8
  %seed = alloca [4 x i32], align 4
  store i128 %0, i128* %2, align 8
  %3 = bitcast [4 x i32]* %seed to i8*
  %4 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 16, i1 false)
  %_7.0 = bitcast [4 x i32]* %seed to [0 x i32]*
; call core::slice::<impl [T]>::iter
  %5 = call { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17had3184a6394da70eE"([0 x i32]* nonnull align 4 %_7.0, i64 4)
  store { i32*, i32* } %5, { i32*, i32* }* %_6, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::all
  %_4 = call zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3all17h19affa43b04d41fdE"({ i32*, i32* }* align 8 dereferenceable(16) %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* %seed, i64 0, i64 0
  %_11 = load i32, i32* %6, align 4
  store i32 %_11, i32* %_10, align 4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* %seed, i64 0, i64 1
  %_14 = load i32, i32* %7, align 4
  store i32 %_14, i32* %_13, align 4
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* %seed, i64 0, i64 2
  %_17 = load i32, i32* %8, align 4
  store i32 %_17, i32* %_16, align 4
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* %seed, i64 0, i64 3
  %_20 = load i32, i32* %9, align 4
  store i32 %_20, i32* %_19, align 4
  %10 = bitcast %"prng::xorshift::XorShiftRng"* %1 to i32*
  %11 = load i32, i32* %_10, align 4
  store i32 %11, i32* %10, align 4
  %12 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %1, i32 0, i32 1
  %13 = load i32, i32* %_13, align 4
  store i32 %13, i32* %12, align 4
  %14 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %1, i32 0, i32 2
  %15 = load i32, i32* %_16, align 4
  store i32 %15, i32* %14, align 4
  %16 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %1, i32 0, i32 3
  %17 = load i32, i32* %_19, align 4
  store i32 %17, i32* %16, align 4
  %18 = bitcast %"prng::xorshift::XorShiftRng"* %1 to i128*
  %19 = load i128, i128* %18, align 4
  ret i128 %19

bb3:                                              ; preds = %bb2
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17hb7befd5e474a8c7bE([0 x i8]* nonnull align 1 bitcast (<{ [52 x i8] }>* @alloc1451 to [0 x i8]*), i64 52, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1453 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <rand::prng::xorshift::XorShiftRng as rand::SeedableRng<[u32; 4]>>::from_seed::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN103_$LT$rand..prng..xorshift..XorShiftRng$u20$as$u20$rand..SeedableRng$LT$$u5b$u32$u3b$$u20$4$u5d$$GT$$GT$9from_seed28_$u7b$$u7b$closure$u7d$$u7d$17h782743588e1475e3E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/prng/xorshift.rs:80:34: 80:45]"* nonnull align 1 %_1, i32* align 4 dereferenceable(4) %_2) unnamed_addr #0 {
start:
  %x = load i32, i32* %_2, align 4
  %0 = icmp eq i32 %x, 0
  ret i1 %0
}

; <rand::prng::xorshift::XorShiftRng as rand::Rand>::rand
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN64_$LT$rand..prng..xorshift..XorShiftRng$u20$as$u20$rand..Rand$GT$4rand17h846c8707d07d7547E"(i64** align 8 dereferenceable(8) %rng) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i32, i32, i32, i32 }, align 4
  %2 = alloca i128, align 8
  %3 = alloca { i32, i32, i32, i32 }, align 4
  %4 = alloca i128, align 8
  %5 = alloca i128, align 8
  %_19 = alloca i32, align 4
  %_17 = alloca i32, align 4
  %_15 = alloca i32, align 4
  %_13 = alloca i32, align 4
  %_7 = alloca { i32, i32, i32, i32 }, align 4
  %tuple = alloca { i32, i32, i32, i32 }, align 4
  %6 = alloca %"prng::xorshift::XorShiftRng", align 4
; call rand::rand_impls::<impl rand::Rand for (A,B,C,D)>::rand
  %7 = call i128 @"_ZN4rand10rand_impls62_$LT$impl$u20$rand..Rand$u20$for$u20$$LP$A$C$B$C$C$C$D$RP$$GT$4rand17h3b6efebb47991b38E"(i64** align 8 dereferenceable(8) %rng)
  store i128 %7, i128* %0, align 8
  %8 = bitcast { i32, i32, i32, i32 }* %1 to i8*
  %9 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = bitcast { i32, i32, i32, i32 }* %1 to i128*
  %11 = load i128, i128* %10, align 4
  store i128 %11, i128* %5, align 8
  %12 = bitcast { i32, i32, i32, i32 }* %tuple to i8*
  %13 = bitcast i128* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %bb4, %start
; call core::tuple::<impl core::cmp::PartialEq for (A,B,C,D)>::eq
  %_4 = call zeroext i1 @"_ZN4core5tuple72_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$A$C$B$C$C$C$D$RP$$GT$2eq17h44650554e51d87abE"({ i32, i32, i32, i32 }* align 4 dereferenceable(16) %tuple, { i32, i32, i32, i32 }* align 4 dereferenceable(16) bitcast (<{ [16 x i8] }>* @alloc940 to { i32, i32, i32, i32 }*))
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_4, label %bb3, label %bb5

bb5:                                              ; preds = %bb2
  %14 = bitcast { i32, i32, i32, i32 }* %tuple to i32*
  %x = load i32, i32* %14, align 4
  %15 = getelementptr inbounds { i32, i32, i32, i32 }, { i32, i32, i32, i32 }* %tuple, i32 0, i32 1
  %y = load i32, i32* %15, align 4
  %16 = getelementptr inbounds { i32, i32, i32, i32 }, { i32, i32, i32, i32 }* %tuple, i32 0, i32 2
  %z = load i32, i32* %16, align 4
  %17 = getelementptr inbounds { i32, i32, i32, i32 }, { i32, i32, i32, i32 }* %tuple, i32 0, i32 3
  %w_ = load i32, i32* %17, align 4
  store i32 %x, i32* %_13, align 4
  store i32 %y, i32* %_15, align 4
  store i32 %z, i32* %_17, align 4
  store i32 %w_, i32* %_19, align 4
  %18 = bitcast %"prng::xorshift::XorShiftRng"* %6 to i32*
  %19 = load i32, i32* %_13, align 4
  store i32 %19, i32* %18, align 4
  %20 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %6, i32 0, i32 1
  %21 = load i32, i32* %_15, align 4
  store i32 %21, i32* %20, align 4
  %22 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %6, i32 0, i32 2
  %23 = load i32, i32* %_17, align 4
  store i32 %23, i32* %22, align 4
  %24 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %6, i32 0, i32 3
  %25 = load i32, i32* %_19, align 4
  store i32 %25, i32* %24, align 4
  %26 = bitcast %"prng::xorshift::XorShiftRng"* %6 to i128*
  %27 = load i128, i128* %26, align 4
  ret i128 %27

bb3:                                              ; preds = %bb2
; call rand::rand_impls::<impl rand::Rand for (A,B,C,D)>::rand
  %28 = call i128 @"_ZN4rand10rand_impls62_$LT$impl$u20$rand..Rand$u20$for$u20$$LP$A$C$B$C$C$C$D$RP$$GT$4rand17h3b6efebb47991b38E"(i64** align 8 dereferenceable(8) %rng)
  store i128 %28, i128* %2, align 8
  %29 = bitcast { i32, i32, i32, i32 }* %3 to i8*
  %30 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 8 %30, i64 16, i1 false)
  %31 = bitcast { i32, i32, i32, i32 }* %3 to i128*
  %32 = load i128, i128* %31, align 4
  store i128 %32, i128* %4, align 8
  %33 = bitcast { i32, i32, i32, i32 }* %_7 to i8*
  %34 = bitcast i128* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 8 %34, i64 16, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb3
  %35 = bitcast { i32, i32, i32, i32 }* %tuple to i8*
  %36 = bitcast { i32, i32, i32, i32 }* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 16, i1 false)
  br label %bb1
}

; rand::StdRng::new
; Function Attrs: nonlazybind uwtable
define void @_ZN4rand6StdRng3new17ha8151d12964bc2fdE(%"core::result::Result<StdRng, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<StdRng, std::io::error::Error>") dereferenceable(4136) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_15 = alloca i8, align 1
  %_14 = alloca %"std::io::error::Error", align 8
  %_12 = alloca %"prng::isaac64::Isaac64Rng", align 8
  %_11 = alloca %StdRng, align 8
  %r1 = alloca %"jitter::JitterRng", align 8
  %_8 = alloca %"core::result::Result<jitter::JitterRng, jitter::TimerError>", align 8
  %e1 = alloca %"std::io::error::Error", align 8
  %_5 = alloca %"prng::isaac64::Isaac64Rng", align 8
  %_4 = alloca %StdRng, align 8
  %r = alloca i32, align 4
  %_1 = alloca %"core::result::Result<os::OsRng, std::io::error::Error>", align 8
  store i8 0, i8* %_15, align 1
; call rand::os::OsRng::new
  call void @_ZN4rand2os5OsRng3new17hceba75d28a545496E(%"core::result::Result<os::OsRng, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<os::OsRng, std::io::error::Error>") dereferenceable(24) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<os::OsRng, std::io::error::Error>"* %_1 to i32*
  %3 = load i32, i32* %2, align 8, !range !3
  %_2 = zext i32 %3 to i64
  switch i64 %_2, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %4 = bitcast %"core::result::Result<os::OsRng, std::io::error::Error>"* %_1 to %"core::result::Result<os::OsRng, std::io::error::Error>::Ok"*
  %5 = getelementptr inbounds %"core::result::Result<os::OsRng, std::io::error::Error>::Ok", %"core::result::Result<os::OsRng, std::io::error::Error>::Ok"* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %r, align 4
  call void @llvm.experimental.noalias.scope.decl(metadata !29)
; invoke <rand::prng::isaac64::Isaac64Rng as rand::Rand>::rand
  invoke void @"_ZN62_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..Rand$GT$4rand17h61309e68706b1a37E"(%"prng::isaac64::Isaac64Rng"* noalias nocapture sret(%"prng::isaac64::Isaac64Rng") dereferenceable(4128) %_5, i32* align 4 dereferenceable(4) %r)
          to label %_ZN4rand3Rng3gen17hba625dc13f26f9e4E.exit unwind label %cleanup2

_ZN4rand3Rng3gen17hba625dc13f26f9e4E.exit:        ; preds = %bb4
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_15, align 1
  %7 = bitcast %"core::result::Result<os::OsRng, std::io::error::Error>"* %_1 to %"core::result::Result<os::OsRng, std::io::error::Error>::Err"*
  %8 = getelementptr inbounds %"core::result::Result<os::OsRng, std::io::error::Error>::Err", %"core::result::Result<os::OsRng, std::io::error::Error>::Err"* %7, i32 0, i32 1
  %9 = bitcast %"std::io::error::Error"* %e1 to i8*
  %10 = bitcast %"std::io::error::Error"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
; invoke rand::jitter::JitterRng::new
  invoke void @_ZN4rand6jitter9JitterRng3new17h49cecfae9e4a65c5E(%"core::result::Result<jitter::JitterRng, jitter::TimerError>"* noalias nocapture sret(%"core::result::Result<jitter::JitterRng, jitter::TimerError>") dereferenceable(2120) %_8)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb2
  %11 = bitcast %"core::result::Result<jitter::JitterRng, jitter::TimerError>"* %_8 to i8*
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = trunc i8 %12 to i1
  %_9 = zext i1 %13 to i64
  switch i64 %_9, label %bb8 [
    i64 0, label %bb9
    i64 1, label %bb7
  ]

bb13:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %e1) #18
  br label %bb17

cleanup:                                          ; preds = %bb9, %bb2
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb13

bb8:                                              ; preds = %bb6
  unreachable

bb9:                                              ; preds = %bb6
  %19 = bitcast %"core::result::Result<jitter::JitterRng, jitter::TimerError>"* %_8 to %"core::result::Result<jitter::JitterRng, jitter::TimerError>::Ok"*
  %20 = getelementptr inbounds %"core::result::Result<jitter::JitterRng, jitter::TimerError>::Ok", %"core::result::Result<jitter::JitterRng, jitter::TimerError>::Ok"* %19, i32 0, i32 1
  %21 = bitcast %"jitter::JitterRng"* %r1 to i8*
  %22 = bitcast %"jitter::JitterRng"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 2112, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !32)
; invoke <rand::prng::isaac64::Isaac64Rng as rand::Rand>::rand
  invoke void @"_ZN62_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..Rand$GT$4rand17h21d6a8dc162b1f43E"(%"prng::isaac64::Isaac64Rng"* noalias nocapture sret(%"prng::isaac64::Isaac64Rng") dereferenceable(4128) %_12, %"jitter::JitterRng"* align 8 dereferenceable(2112) %r1)
          to label %_ZN4rand3Rng3gen17hc90a3cee0dda8e20E.exit unwind label %cleanup

_ZN4rand3Rng3gen17hc90a3cee0dda8e20E.exit:        ; preds = %bb9
  br label %bb10

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_15, align 1
  %23 = bitcast %"std::io::error::Error"* %_14 to i8*
  %24 = bitcast %"std::io::error::Error"* %e1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = bitcast %"core::result::Result<StdRng, std::io::error::Error>"* %0 to %"core::result::Result<StdRng, std::io::error::Error>::Err"*
  %26 = getelementptr inbounds %"core::result::Result<StdRng, std::io::error::Error>::Err", %"core::result::Result<StdRng, std::io::error::Error>::Err"* %25, i32 0, i32 1
  %27 = bitcast %"std::io::error::Error"* %26 to i8*
  %28 = bitcast %"std::io::error::Error"* %_14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false)
  %29 = bitcast %"core::result::Result<StdRng, std::io::error::Error>"* %0 to i64*
  store i64 1, i64* %29, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb7
  %30 = load i8, i8* %_15, align 1, !range !4
  %31 = trunc i8 %30 to i1
  br i1 %31, label %bb15, label %bb12

bb10:                                             ; preds = %_ZN4rand3Rng3gen17hc90a3cee0dda8e20E.exit
  %32 = bitcast %StdRng* %_11 to %"prng::isaac64::Isaac64Rng"*
  %33 = bitcast %"prng::isaac64::Isaac64Rng"* %32 to i8*
  %34 = bitcast %"prng::isaac64::Isaac64Rng"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 4128, i1 false)
  %35 = bitcast %"core::result::Result<StdRng, std::io::error::Error>"* %0 to %"core::result::Result<StdRng, std::io::error::Error>::Ok"*
  %36 = getelementptr inbounds %"core::result::Result<StdRng, std::io::error::Error>::Ok", %"core::result::Result<StdRng, std::io::error::Error>::Ok"* %35, i32 0, i32 1
  %37 = bitcast %StdRng* %36 to i8*
  %38 = bitcast %StdRng* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 4128, i1 false)
  %39 = bitcast %"core::result::Result<StdRng, std::io::error::Error>"* %0 to i64*
  store i64 0, i64* %39, align 8
  br label %bb11

bb17:                                             ; preds = %bb14, %bb13
  %40 = bitcast { i8*, i32 }* %1 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = insertvalue { i8*, i32 } undef, i8* %41, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  resume { i8*, i32 } %45

bb12:                                             ; preds = %bb15, %bb11
  store i8 0, i8* %_15, align 1
  br label %bb16

bb15:                                             ; preds = %bb11
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %e1)
  br label %bb12

bb16:                                             ; preds = %bb5, %bb12
  ret void

bb5:                                              ; preds = %_ZN4rand3Rng3gen17hba625dc13f26f9e4E.exit
  %46 = bitcast %StdRng* %_4 to %"prng::isaac64::Isaac64Rng"*
  %47 = bitcast %"prng::isaac64::Isaac64Rng"* %46 to i8*
  %48 = bitcast %"prng::isaac64::Isaac64Rng"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 4128, i1 false)
  %49 = bitcast %"core::result::Result<StdRng, std::io::error::Error>"* %0 to %"core::result::Result<StdRng, std::io::error::Error>::Ok"*
  %50 = getelementptr inbounds %"core::result::Result<StdRng, std::io::error::Error>::Ok", %"core::result::Result<StdRng, std::io::error::Error>::Ok"* %49, i32 0, i32 1
  %51 = bitcast %StdRng* %50 to i8*
  %52 = bitcast %StdRng* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 4128, i1 false)
  %53 = bitcast %"core::result::Result<StdRng, std::io::error::Error>"* %0 to i64*
  store i64 0, i64* %53, align 8
; call core::ptr::drop_in_place<rand::os::OsRng>
  call void @"_ZN4core3ptr36drop_in_place$LT$rand..os..OsRng$GT$17h4357fda02db0a4caE"(i32* %r)
  br label %bb16

bb14:                                             ; preds = %cleanup2
; call core::ptr::drop_in_place<rand::os::OsRng>
  call void @"_ZN4core3ptr36drop_in_place$LT$rand..os..OsRng$GT$17h4357fda02db0a4caE"(i32* %r) #18
  br label %bb17

cleanup2:                                         ; preds = %bb4
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  %56 = extractvalue { i8*, i32 } %54, 1
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %55, i8** %57, align 8
  %58 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %56, i32* %58, align 8
  br label %bb14
}

; <rand::StdRng as rand::Rng>::next_u32
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN42_$LT$rand..StdRng$u20$as$u20$rand..Rng$GT$8next_u3217hf67dd77c5c30a362E"(%StdRng* align 8 dereferenceable(4128) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %StdRng* %self to %"prng::isaac64::Isaac64Rng"*
; call <rand::prng::isaac64::Isaac64Rng as rand::Rng>::next_u32
  %0 = call i32 @"_ZN61_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..Rng$GT$8next_u3217hf82266cec7e5fe5eE"(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <rand::StdRng as rand::Rng>::next_u64
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN42_$LT$rand..StdRng$u20$as$u20$rand..Rng$GT$8next_u6417h0929d785fbdbbed5E"(%StdRng* align 8 dereferenceable(4128) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %StdRng* %self to %"prng::isaac64::Isaac64Rng"*
; call <rand::prng::isaac64::Isaac64Rng as rand::Rng>::next_u64
  %0 = call i64 @"_ZN61_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..Rng$GT$8next_u6417hd27f209d0b1f4828E"(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; <rand::StdRng as rand::SeedableRng<&[usize]>>::reseed
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$rand..StdRng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$usize$u5d$$GT$$GT$6reseed17h8e4893f195b77bf5E"(%StdRng* align 8 dereferenceable(4128) %self, [0 x i64]* nonnull align 8 %seed.0, i64 %seed.1) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i64]*, i64 }, align 8
  %_3 = bitcast %StdRng* %self to %"prng::isaac64::Isaac64Rng"*
  %1 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %0, i32 0, i32 0
  store [0 x i64]* %seed.0, [0 x i64]** %1, align 8
  %2 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %0, i32 0, i32 1
  store i64 %seed.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %0, i32 0, i32 0
  %_4.0 = load [0 x i64]*, [0 x i64]** %3, align 8, !nonnull !5
  %4 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %0, i32 0, i32 1
  %_4.1 = load i64, i64* %4, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call <rand::prng::isaac64::Isaac64Rng as rand::SeedableRng<&[u64]>>::reseed
  call void @"_ZN94_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u64$u5d$$GT$$GT$6reseed17hce023eb8420f875cE"(%"prng::isaac64::Isaac64Rng"* align 8 dereferenceable(4128) %_3, [0 x i64]* nonnull align 8 %_4.0, i64 %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <rand::StdRng as rand::SeedableRng<&[usize]>>::from_seed
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$rand..StdRng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$usize$u5d$$GT$$GT$9from_seed17h892c8cd6d42eb103E"(%StdRng* noalias nocapture sret(%StdRng) dereferenceable(4128) %0, [0 x i64]* nonnull align 8 %seed.0, i64 %seed.1) unnamed_addr #1 {
start:
  %1 = alloca { [0 x i64]*, i64 }, align 8
  %_2 = alloca %"prng::isaac64::Isaac64Rng", align 8
  %2 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %1, i32 0, i32 0
  store [0 x i64]* %seed.0, [0 x i64]** %2, align 8
  %3 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %1, i32 0, i32 1
  store i64 %seed.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %1, i32 0, i32 0
  %_3.0 = load [0 x i64]*, [0 x i64]** %4, align 8, !nonnull !5
  %5 = getelementptr inbounds { [0 x i64]*, i64 }, { [0 x i64]*, i64 }* %1, i32 0, i32 1
  %_3.1 = load i64, i64* %5, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call <rand::prng::isaac64::Isaac64Rng as rand::SeedableRng<&[u64]>>::from_seed
  call void @"_ZN94_$LT$rand..prng..isaac64..Isaac64Rng$u20$as$u20$rand..SeedableRng$LT$$RF$$u5b$u64$u5d$$GT$$GT$9from_seed17h2524d430b37ada29E"(%"prng::isaac64::Isaac64Rng"* noalias nocapture sret(%"prng::isaac64::Isaac64Rng") dereferenceable(4128) %_2, [0 x i64]* nonnull align 8 %_3.0, i64 %_3.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = bitcast %StdRng* %0 to %"prng::isaac64::Isaac64Rng"*
  %7 = bitcast %"prng::isaac64::Isaac64Rng"* %6 to i8*
  %8 = bitcast %"prng::isaac64::Isaac64Rng"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 4128, i1 false)
  ret void
}

; rand::weak_rng
; Function Attrs: nonlazybind uwtable
define i128 @_ZN4rand8weak_rng17hf50d92c3230b25a5E() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca %"prng::xorshift::XorShiftRng", align 4
  %2 = alloca i128, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_2 = alloca i64*, align 8
  %4 = alloca %"prng::xorshift::XorShiftRng", align 4
; call rand::thread_rng
  %5 = call nonnull i64* @_ZN4rand10thread_rng17h61c6bb65cb45a3e4E()
  store i64* %5, i64** %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
; invoke <rand::prng::xorshift::XorShiftRng as rand::Rand>::rand
  %6 = invoke i128 @"_ZN64_$LT$rand..prng..xorshift..XorShiftRng$u20$as$u20$rand..Rand$GT$4rand17h846c8707d07d7547E"(i64** align 8 dereferenceable(8) %_2)
          to label %_ZN4rand3Rng3gen17hf38910b594d2c1cbE.exit unwind label %cleanup

_ZN4rand3Rng3gen17hf38910b594d2c1cbE.exit:        ; preds = %bb1
  store i128 %6, i128* %0, align 8
  %7 = bitcast %"prng::xorshift::XorShiftRng"* %1 to i8*
  %8 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 16, i1 false)
  %9 = bitcast %"prng::xorshift::XorShiftRng"* %1 to i128*
  %10 = load i128, i128* %9, align 4
  br label %bb2

bb2:                                              ; preds = %_ZN4rand3Rng3gen17hf38910b594d2c1cbE.exit
  store i128 %10, i128* %2, align 8
  %11 = bitcast %"prng::xorshift::XorShiftRng"* %4 to i8*
  %12 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 8 %12, i64 16, i1 false)
; call core::ptr::drop_in_place<rand::ThreadRng>
  call void @"_ZN4core3ptr36drop_in_place$LT$rand..ThreadRng$GT$17h3c2a822bb3e11c50E"(i64** %_2)
  br label %bb3

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<rand::ThreadRng>
  call void @"_ZN4core3ptr36drop_in_place$LT$rand..ThreadRng$GT$17h3c2a822bb3e11c50E"(i64** %_2) #18
  br label %bb5

cleanup:                                          ; preds = %bb1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %18 = bitcast { i8*, i32 }* %3 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb3:                                              ; preds = %bb2
  %24 = bitcast %"prng::xorshift::XorShiftRng"* %4 to i128*
  %25 = load i128, i128* %24, align 4
  ret i128 %25
}

; <rand::ThreadRngReseeder as rand::reseeding::Reseeder<rand::StdRng>>::reseed
; Function Attrs: nonlazybind uwtable
define void @"_ZN89_$LT$rand..ThreadRngReseeder$u20$as$u20$rand..reseeding..Reseeder$LT$rand..StdRng$GT$$GT$6reseed17h53b51f048f540cbaE"(%ThreadRngReseeder* nonnull align 1 %self, %StdRng* align 8 dereferenceable(4128) %rng) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_16 = alloca i64*, align 8
  %_15 = alloca [1 x { i8*, i64* }], align 8
  %_8 = alloca %"core::fmt::Arguments", align 8
  %e = alloca %"std::io::error::Error", align 8
  %_6 = alloca %StdRng, align 8
  %r = alloca %StdRng, align 8
  %_3 = alloca %"core::result::Result<StdRng, std::io::error::Error>", align 8
; call rand::StdRng::new
  call void @_ZN4rand6StdRng3new17ha8151d12964bc2fdE(%"core::result::Result<StdRng, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<StdRng, std::io::error::Error>") dereferenceable(4136) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"core::result::Result<StdRng, std::io::error::Error>"* %_3 to i64*
  %_4 = load i64, i64* %1, align 8, !range !2
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %2 = bitcast %"core::result::Result<StdRng, std::io::error::Error>"* %_3 to %"core::result::Result<StdRng, std::io::error::Error>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<StdRng, std::io::error::Error>::Ok", %"core::result::Result<StdRng, std::io::error::Error>::Ok"* %2, i32 0, i32 1
  %4 = bitcast %StdRng* %r to i8*
  %5 = bitcast %StdRng* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 4128, i1 false)
  %6 = bitcast %StdRng* %_6 to i8*
  %7 = bitcast %StdRng* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 4128, i1 false)
  %8 = bitcast %StdRng* %rng to i8*
  %9 = bitcast %StdRng* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 4128, i1 false)
  ret void

bb2:                                              ; preds = %bb1
  %10 = bitcast %"core::result::Result<StdRng, std::io::error::Error>"* %_3 to %"core::result::Result<StdRng, std::io::error::Error>::Err"*
  %11 = getelementptr inbounds %"core::result::Result<StdRng, std::io::error::Error>::Err", %"core::result::Result<StdRng, std::io::error::Error>::Err"* %10, i32 0, i32 1
  %12 = bitcast %"std::io::error::Error"* %e to i8*
  %13 = bitcast %"std::io::error::Error"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  %14 = bitcast i64** %_16 to %"std::io::error::Error"**
  store %"std::io::error::Error"* %e, %"std::io::error::Error"** %14, align 8
  %_args = load i64*, i64** %_16, align 8, !nonnull !5
  %_20 = bitcast i64* %_args to %"std::io::error::Error"*
; invoke core::fmt::ArgumentV1::new
  %15 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0d700582d5bb27ceE(%"std::io::error::Error"* align 8 dereferenceable(16) %_20, i1 (%"std::io::error::Error"*, %"core::fmt::Formatter"*)* nonnull @"_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h02c1e5177fc0d670E")
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb2
  %_19.0 = extractvalue { i8*, i64* } %15, 0
  %_19.1 = extractvalue { i8*, i64* } %15, 1
  %16 = bitcast [1 x { i8*, i64* }]* %_15 to { i8*, i64* }*
  %17 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 0
  store i8* %_19.0, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 1
  store i64* %_19.1, i64** %18, align 8
  %_12.0 = bitcast [1 x { i8*, i64* }]* %_15 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h039a7a01fe84f5c0E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_8, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc638 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_12.0, i64 1)
          to label %bb6 unwind label %cleanup

bb7:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %e) #18
  br label %bb8

cleanup:                                          ; preds = %bb6, %bb5, %bb2
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb7

bb6:                                              ; preds = %bb5
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_8, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1455 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb6
  unreachable

bb8:                                              ; preds = %bb7
  %24 = bitcast { i8*, i32 }* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29
}

; rand::thread_rng
; Function Attrs: nonlazybind uwtable
define nonnull i64* @_ZN4rand10thread_rng17h61c6bb65cb45a3e4E() unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
; call std::thread::local::LocalKey<T>::with
  %_1 = call nonnull i64* @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17hc9306eb37059732fE"(i64** align 8 dereferenceable(8) bitcast (<{ i8*, [0 x i8] }>* @alloc934 to i64**))
  br label %bb1

bb1:                                              ; preds = %start
  store i64* %_1, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !5
  ret i64* %1
}

; rand::thread_rng::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal nonnull i64* @"_ZN4rand10thread_rng28_$u7b$$u7b$closure$u7d$$u7d$17h9547d9a6408164eeE"(i64** align 8 dereferenceable(8) %t) unnamed_addr #0 {
start:
; call <alloc::rc::Rc<T> as core::clone::Clone>::clone
  %0 = call nonnull i64* @"_ZN61_$LT$alloc..rc..Rc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h8d144af38346da57E"(i64** align 8 dereferenceable(8) %t)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <rand::ThreadRng as rand::Rng>::next_u32
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u3217hb6ce7b7800a326bcE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_5 = alloca { i64*, i64* }, align 8
; call core::ptr::non_null::NonNull<T>::as_ref
  %1 = call align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h968b37e5ee1ce677E"(i64** align 8 dereferenceable(8) %self)
  %2 = getelementptr inbounds %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>", %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %1, i32 0, i32 2
  br label %bb1

bb1:                                              ; preds = %start
; call core::cell::RefCell<T>::borrow_mut
  %3 = call { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$10borrow_mut17h089273b414f2bbb6E"(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* align 8 dereferenceable(4152) %2, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1457 to %"core::panic::location::Location"*))
  store { i64*, i64* } %3, { i64*, i64* }* %_5, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke <core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut
  %_3 = invoke align 8 dereferenceable(4144) %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* @"_ZN74_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h88927b1bd1a42ee8E"({ i64*, i64* }* align 8 dereferenceable(16) %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke <rand::reseeding::ReseedingRng<R,Rsdr> as rand::Rng>::next_u32
  %4 = invoke i32 @"_ZN75_$LT$rand..reseeding..ReseedingRng$LT$R$C$Rsdr$GT$$u20$as$u20$rand..Rng$GT$8next_u3217heea4a2391a77d56eE"(%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* align 8 dereferenceable(4144) %_3)
          to label %bb4 unwind label %cleanup

bb6:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<core::cell::RefMut<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>
  call void @"_ZN4core3ptr122drop_in_place$LT$core..cell..RefMut$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$17hdec9561845e9f658E"({ i64*, i64* }* %_5) #18
  br label %bb7

cleanup:                                          ; preds = %bb3, %bb2
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb6

bb4:                                              ; preds = %bb3
; call core::ptr::drop_in_place<core::cell::RefMut<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>
  call void @"_ZN4core3ptr122drop_in_place$LT$core..cell..RefMut$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$17hdec9561845e9f658E"({ i64*, i64* }* %_5)
  br label %bb5

bb7:                                              ; preds = %bb6
  %10 = bitcast { i8*, i32 }* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb5:                                              ; preds = %bb4
  ret i32 %4
}

; <rand::ThreadRng as rand::Rng>::next_u64
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN45_$LT$rand..ThreadRng$u20$as$u20$rand..Rng$GT$8next_u6417h9f7d1e9c7513e10aE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_5 = alloca { i64*, i64* }, align 8
; call core::ptr::non_null::NonNull<T>::as_ref
  %1 = call align 8 dereferenceable(4168) %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h968b37e5ee1ce677E"(i64** align 8 dereferenceable(8) %self)
  %2 = getelementptr inbounds %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>", %"alloc::rc::RcBox<core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>"* %1, i32 0, i32 2
  br label %bb1

bb1:                                              ; preds = %start
; call core::cell::RefCell<T>::borrow_mut
  %3 = call { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$10borrow_mut17h089273b414f2bbb6E"(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* align 8 dereferenceable(4152) %2, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1459 to %"core::panic::location::Location"*))
  store { i64*, i64* } %3, { i64*, i64* }* %_5, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke <core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut
  %_3 = invoke align 8 dereferenceable(4144) %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* @"_ZN74_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h88927b1bd1a42ee8E"({ i64*, i64* }* align 8 dereferenceable(16) %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke <rand::reseeding::ReseedingRng<R,Rsdr> as rand::Rng>::next_u64
  %4 = invoke i64 @"_ZN75_$LT$rand..reseeding..ReseedingRng$LT$R$C$Rsdr$GT$$u20$as$u20$rand..Rng$GT$8next_u6417h0b0cede3b47c7f2eE"(%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* align 8 dereferenceable(4144) %_3)
          to label %bb4 unwind label %cleanup

bb6:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<core::cell::RefMut<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>
  call void @"_ZN4core3ptr122drop_in_place$LT$core..cell..RefMut$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$17hdec9561845e9f658E"({ i64*, i64* }* %_5) #18
  br label %bb7

cleanup:                                          ; preds = %bb3, %bb2
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb6

bb4:                                              ; preds = %bb3
; call core::ptr::drop_in_place<core::cell::RefMut<rand::reseeding::ReseedingRng<rand::StdRng,rand::ThreadRngReseeder>>>
  call void @"_ZN4core3ptr122drop_in_place$LT$core..cell..RefMut$LT$rand..reseeding..ReseedingRng$LT$rand..StdRng$C$rand..ThreadRngReseeder$GT$$GT$$GT$17hdec9561845e9f658E"({ i64*, i64* }* %_5)
  br label %bb5

bb7:                                              ; preds = %bb6
  %10 = bitcast { i8*, i32 }* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb5:                                              ; preds = %bb4
  ret i64 %4
}

; <f32 as rand::distributions::range::SampleRange>::construct_range
; Function Attrs: nonlazybind uwtable
define i96 @"_ZN63_$LT$f32$u20$as$u20$rand..distributions..range..SampleRange$GT$15construct_range17h10d2148ccd97b0b0E"(float %low, float %high) unnamed_addr #1 {
start:
  %0 = alloca %"distributions::range::Range<f32>", align 4
  %_4 = fsub float %high, %low
  %1 = bitcast %"distributions::range::Range<f32>"* %0 to float*
  store float %low, float* %1, align 4
  %2 = getelementptr inbounds %"distributions::range::Range<f32>", %"distributions::range::Range<f32>"* %0, i32 0, i32 1
  store float %_4, float* %2, align 4
  %3 = getelementptr inbounds %"distributions::range::Range<f32>", %"distributions::range::Range<f32>"* %0, i32 0, i32 2
  store float 0.000000e+00, float* %3, align 4
  %4 = bitcast %"distributions::range::Range<f32>"* %0 to i96*
  %5 = load i96, i96* %4, align 4
  ret i96 %5
}

; <f64 as rand::distributions::range::SampleRange>::construct_range
; Function Attrs: nonlazybind uwtable
define void @"_ZN63_$LT$f64$u20$as$u20$rand..distributions..range..SampleRange$GT$15construct_range17h6da913698168e15aE"(%"distributions::range::Range<f64>"* noalias nocapture sret(%"distributions::range::Range<f64>") dereferenceable(24) %0, double %low, double %high) unnamed_addr #1 {
start:
  %_4 = fsub double %high, %low
  %1 = bitcast %"distributions::range::Range<f64>"* %0 to double*
  store double %low, double* %1, align 8
  %2 = getelementptr inbounds %"distributions::range::Range<f64>", %"distributions::range::Range<f64>"* %0, i32 0, i32 1
  store double %_4, double* %2, align 8
  %3 = getelementptr inbounds %"distributions::range::Range<f64>", %"distributions::range::Range<f64>"* %0, i32 0, i32 2
  store double 0.000000e+00, double* %3, align 8
  ret void
}

; <rand::distributions::gamma::Gamma as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$rand..distributions..gamma..Gamma$u20$as$u20$core..fmt..Debug$GT$3fmt17hfe77e8b76f8545a8E"(%"distributions::gamma::Gamma"* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_16 = alloca %"distributions::gamma::GammaRepr"*, align 8
  %_5 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast %"distributions::gamma::Gamma"* %self to %"distributions::gamma::GammaRepr"*
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1460 to [0 x i8]*), i64 5)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_5 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store %"distributions::gamma::GammaRepr"* %__self_0_0, %"distributions::gamma::GammaRepr"** %_16, align 8
  %_13.0 = bitcast %"distributions::gamma::GammaRepr"** %_16 to {}*
; call core::fmt::builders::DebugStruct::field
  %_9 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1488 to [0 x i8]*), i64 4, {}* nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.l to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %4
}

; <rand::distributions::gamma::GammaRepr as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN74_$LT$rand..distributions..gamma..GammaRepr$u20$as$u20$core..fmt..Debug$GT$3fmt17hef20798a60c2a441E"(%"distributions::gamma::GammaRepr"* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_43 = alloca %"distributions::gamma::GammaSmallShape"*, align 8
  %_34 = alloca %"core::fmt::builders::DebugTuple", align 8
  %_30 = alloca double*, align 8
  %_21 = alloca %"core::fmt::builders::DebugTuple", align 8
  %_17 = alloca %"distributions::gamma::GammaLargeShape"*, align 8
  %_8 = alloca %"core::fmt::builders::DebugTuple", align 8
  %_3 = alloca i64*, align 8
  %0 = alloca i8, align 1
  %1 = bitcast i64** %_3 to %"distributions::gamma::GammaRepr"**
  store %"distributions::gamma::GammaRepr"* %self, %"distributions::gamma::GammaRepr"** %1, align 8
  %2 = bitcast i64** %_3 to %"distributions::gamma::GammaRepr"**
  %3 = load %"distributions::gamma::GammaRepr"*, %"distributions::gamma::GammaRepr"** %2, align 8, !nonnull !5
  %4 = bitcast %"distributions::gamma::GammaRepr"* %3 to i64*
  %_5 = load i64, i64* %4, align 8, !range !35
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb6
    i64 2, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i64** %_3 to %"distributions::gamma::GammaRepr"**
  %6 = load %"distributions::gamma::GammaRepr"*, %"distributions::gamma::GammaRepr"** %5, align 8, !nonnull !5
  %7 = bitcast %"distributions::gamma::GammaRepr"* %6 to %"distributions::gamma::GammaRepr::Large"*
  %__self_02 = getelementptr inbounds %"distributions::gamma::GammaRepr::Large", %"distributions::gamma::GammaRepr::Large"* %7, i32 0, i32 1
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_8, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1473 to [0 x i8]*), i64 5)
  br label %bb4

bb6:                                              ; preds = %start
  %8 = bitcast i64** %_3 to %"distributions::gamma::GammaRepr"**
  %9 = load %"distributions::gamma::GammaRepr"*, %"distributions::gamma::GammaRepr"** %8, align 8, !nonnull !5
  %10 = bitcast %"distributions::gamma::GammaRepr"* %9 to %"distributions::gamma::GammaRepr::One"*
  %__self_01 = getelementptr inbounds %"distributions::gamma::GammaRepr::One", %"distributions::gamma::GammaRepr::One"* %10, i32 0, i32 1
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_21, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1469 to [0 x i8]*), i64 3)
  br label %bb7

bb1:                                              ; preds = %start
  %11 = bitcast i64** %_3 to %"distributions::gamma::GammaRepr"**
  %12 = load %"distributions::gamma::GammaRepr"*, %"distributions::gamma::GammaRepr"** %11, align 8, !nonnull !5
  %13 = bitcast %"distributions::gamma::GammaRepr"* %12 to %"distributions::gamma::GammaRepr::Small"*
  %__self_0 = getelementptr inbounds %"distributions::gamma::GammaRepr::Small", %"distributions::gamma::GammaRepr::Small"* %13, i32 0, i32 1
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_34, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1465 to [0 x i8]*), i64 5)
  br label %bb9

bb9:                                              ; preds = %bb1
  store %"distributions::gamma::GammaSmallShape"* %__self_0, %"distributions::gamma::GammaSmallShape"** %_43, align 8
  %_40.0 = bitcast %"distributions::gamma::GammaSmallShape"** %_43 to {}*
; call core::fmt::builders::DebugTuple::field
  %_38 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_34, {}* nonnull align 1 %_40.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.m to [3 x i64]*))
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::fmt::builders::DebugTuple::finish
  %14 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_34)
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %0, align 1
  br label %bb11

bb11:                                             ; preds = %bb5, %bb8, %bb10
  %16 = load i8, i8* %0, align 1, !range !4
  %17 = trunc i8 %16 to i1
  ret i1 %17

bb7:                                              ; preds = %bb6
  store double* %__self_01, double** %_30, align 8
  %_27.0 = bitcast double** %_30 to {}*
; call core::fmt::builders::DebugTuple::field
  %_25 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_21, {}* nonnull align 1 %_27.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.n to [3 x i64]*))
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::fmt::builders::DebugTuple::finish
  %18 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_21)
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %0, align 1
  br label %bb11

bb4:                                              ; preds = %bb3
  store %"distributions::gamma::GammaLargeShape"* %__self_02, %"distributions::gamma::GammaLargeShape"** %_17, align 8
  %_14.0 = bitcast %"distributions::gamma::GammaLargeShape"** %_17 to {}*
; call core::fmt::builders::DebugTuple::field
  %_12 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_8, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.o to [3 x i64]*))
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::fmt::builders::DebugTuple::finish
  %20 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_8)
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %0, align 1
  br label %bb11
}

; <rand::distributions::gamma::GammaSmallShape as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN80_$LT$rand..distributions..gamma..GammaSmallShape$u20$as$u20$core..fmt..Debug$GT$3fmt17hca6afaff51f8996aE"(%"distributions::gamma::GammaSmallShape"* align 8 dereferenceable(32) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_25 = alloca %"distributions::gamma::GammaLargeShape"*, align 8
  %_17 = alloca double*, align 8
  %_6 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast %"distributions::gamma::GammaSmallShape"* %self to double*
  %__self_0_1 = getelementptr inbounds %"distributions::gamma::GammaSmallShape", %"distributions::gamma::GammaSmallShape"* %self, i32 0, i32 1
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [15 x i8] }>* @alloc1477 to [0 x i8]*), i64 15)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_6 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store double* %__self_0_0, double** %_17, align 8
  %_14.0 = bitcast double** %_17 to {}*
; call core::fmt::builders::DebugStruct::field
  %_10 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [9 x i8] }>* @alloc1478 to [0 x i8]*), i64 9, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.p to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  store %"distributions::gamma::GammaLargeShape"* %__self_0_1, %"distributions::gamma::GammaLargeShape"** %_25, align 8
  %_22.0 = bitcast %"distributions::gamma::GammaLargeShape"** %_25 to {}*
; call core::fmt::builders::DebugStruct::field
  %_18 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc1482 to [0 x i8]*), i64 11, {}* nonnull align 1 %_22.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.o to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i1 %4
}

; <rand::distributions::gamma::GammaLargeShape as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN80_$LT$rand..distributions..gamma..GammaLargeShape$u20$as$u20$core..fmt..Debug$GT$3fmt17h12268f8799ec6a16E"(%"distributions::gamma::GammaLargeShape"* align 8 dereferenceable(24) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_34 = alloca double*, align 8
  %_26 = alloca double*, align 8
  %_18 = alloca double*, align 8
  %_7 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast %"distributions::gamma::GammaLargeShape"* %self to double*
  %__self_0_1 = getelementptr inbounds %"distributions::gamma::GammaLargeShape", %"distributions::gamma::GammaLargeShape"* %self, i32 0, i32 1
  %__self_0_2 = getelementptr inbounds %"distributions::gamma::GammaLargeShape", %"distributions::gamma::GammaLargeShape"* %self, i32 0, i32 2
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [15 x i8] }>* @alloc1483 to [0 x i8]*), i64 15)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_7 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store double* %__self_0_0, double** %_18, align 8
  %_15.0 = bitcast double** %_18 to {}*
; call core::fmt::builders::DebugStruct::field
  %_11 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1484 to [0 x i8]*), i64 5, {}* nonnull align 1 %_15.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.p to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  store double* %__self_0_1, double** %_26, align 8
  %_23.0 = bitcast double** %_26 to {}*
; call core::fmt::builders::DebugStruct::field
  %_19 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1485 to [0 x i8]*), i64 1, {}* nonnull align 1 %_23.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.p to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
  store double* %__self_0_2, double** %_34, align 8
  %_31.0 = bitcast double** %_34 to {}*
; call core::fmt::builders::DebugStruct::field
  %_27 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1486 to [0 x i8]*), i64 1, {}* nonnull align 1 %_31.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.p to [3 x i64]*))
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_7)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret i1 %4
}

; <rand::distributions::gamma::ChiSquared as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN75_$LT$rand..distributions..gamma..ChiSquared$u20$as$u20$core..fmt..Debug$GT$3fmt17h185dfb60c442beb0E"(%"distributions::gamma::ChiSquared"* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_16 = alloca %"distributions::gamma::ChiSquaredRepr"*, align 8
  %_5 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast %"distributions::gamma::ChiSquared"* %self to %"distributions::gamma::ChiSquaredRepr"*
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [10 x i8] }>* @alloc1487 to [0 x i8]*), i64 10)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_5 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store %"distributions::gamma::ChiSquaredRepr"* %__self_0_0, %"distributions::gamma::ChiSquaredRepr"** %_16, align 8
  %_13.0 = bitcast %"distributions::gamma::ChiSquaredRepr"** %_16 to {}*
; call core::fmt::builders::DebugStruct::field
  %_9 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1488 to [0 x i8]*), i64 4, {}* nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.q to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %4
}

; <rand::distributions::gamma::ChiSquaredRepr as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN79_$LT$rand..distributions..gamma..ChiSquaredRepr$u20$as$u20$core..fmt..Debug$GT$3fmt17h948f0a3430d9103dE"(%"distributions::gamma::ChiSquaredRepr"* align 8 dereferenceable(40) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_20 = alloca %"distributions::gamma::Gamma"*, align 8
  %_11 = alloca %"core::fmt::builders::DebugTuple", align 8
  %_3 = alloca i64*, align 8
  %0 = alloca i8, align 1
  %1 = bitcast i64** %_3 to %"distributions::gamma::ChiSquaredRepr"**
  store %"distributions::gamma::ChiSquaredRepr"* %self, %"distributions::gamma::ChiSquaredRepr"** %1, align 8
  %2 = bitcast i64** %_3 to %"distributions::gamma::ChiSquaredRepr"**
  %3 = load %"distributions::gamma::ChiSquaredRepr"*, %"distributions::gamma::ChiSquaredRepr"** %2, align 8, !nonnull !5
  %4 = bitcast %"distributions::gamma::ChiSquaredRepr"* %3 to i64*
  %5 = load i64, i64* %4, align 8, !range !36
  %6 = sub i64 %5, 3
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 0, i64 1
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %8 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc1496 to [0 x i8]*), i64 13)
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %0, align 1
  br label %bb6

bb1:                                              ; preds = %start
  %10 = bitcast i64** %_3 to %"distributions::gamma::ChiSquaredRepr"**
  %11 = load %"distributions::gamma::ChiSquaredRepr"*, %"distributions::gamma::ChiSquaredRepr"** %10, align 8, !nonnull !5
  %12 = bitcast %"distributions::gamma::ChiSquaredRepr"* %11 to %"distributions::gamma::ChiSquaredRepr::DoFAnythingElse"*
  %__self_0 = bitcast %"distributions::gamma::ChiSquaredRepr::DoFAnythingElse"* %12 to %"distributions::gamma::Gamma"*
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_11, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [15 x i8] }>* @alloc1492 to [0 x i8]*), i64 15)
  br label %bb4

bb4:                                              ; preds = %bb1
  store %"distributions::gamma::Gamma"* %__self_0, %"distributions::gamma::Gamma"** %_20, align 8
  %_17.0 = bitcast %"distributions::gamma::Gamma"** %_20 to {}*
; call core::fmt::builders::DebugTuple::field
  %_15 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_11, {}* nonnull align 1 %_17.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.r to [3 x i64]*))
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::fmt::builders::DebugTuple::finish
  %13 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_11)
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb3, %bb5
  %15 = load i8, i8* %0, align 1, !range !4
  %16 = trunc i8 %15 to i1
  ret i1 %16
}

; <rand::distributions::gamma::FisherF as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN72_$LT$rand..distributions..gamma..FisherF$u20$as$u20$core..fmt..Debug$GT$3fmt17ha5d0b0ea59d531e4E"(%"distributions::gamma::FisherF"* align 8 dereferenceable(88) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_34 = alloca double*, align 8
  %_26 = alloca %"distributions::gamma::ChiSquared"*, align 8
  %_18 = alloca %"distributions::gamma::ChiSquared"*, align 8
  %_7 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast %"distributions::gamma::FisherF"* %self to %"distributions::gamma::ChiSquared"*
  %__self_0_1 = getelementptr inbounds %"distributions::gamma::FisherF", %"distributions::gamma::FisherF"* %self, i32 0, i32 1
  %__self_0_2 = getelementptr inbounds %"distributions::gamma::FisherF", %"distributions::gamma::FisherF"* %self, i32 0, i32 2
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1497 to [0 x i8]*), i64 7)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_7 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store %"distributions::gamma::ChiSquared"* %__self_0_0, %"distributions::gamma::ChiSquared"** %_18, align 8
  %_15.0 = bitcast %"distributions::gamma::ChiSquared"** %_18 to {}*
; call core::fmt::builders::DebugStruct::field
  %_11 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1498 to [0 x i8]*), i64 5, {}* nonnull align 1 %_15.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.s to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  store %"distributions::gamma::ChiSquared"* %__self_0_1, %"distributions::gamma::ChiSquared"** %_26, align 8
  %_23.0 = bitcast %"distributions::gamma::ChiSquared"** %_26 to {}*
; call core::fmt::builders::DebugStruct::field
  %_19 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1502 to [0 x i8]*), i64 5, {}* nonnull align 1 %_23.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.s to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
  store double* %__self_0_2, double** %_34, align 8
  %_31.0 = bitcast double** %_34 to {}*
; call core::fmt::builders::DebugStruct::field
  %_27 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [9 x i8] }>* @alloc1503 to [0 x i8]*), i64 9, {}* nonnull align 1 %_31.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.p to [3 x i64]*))
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_7)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret i1 %4
}

; <rand::distributions::gamma::StudentT as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN73_$LT$rand..distributions..gamma..StudentT$u20$as$u20$core..fmt..Debug$GT$3fmt17h7be7d139b1403bacE"(%"distributions::gamma::StudentT"* align 8 dereferenceable(48) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_25 = alloca double*, align 8
  %_17 = alloca %"distributions::gamma::ChiSquared"*, align 8
  %_6 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast %"distributions::gamma::StudentT"* %self to %"distributions::gamma::ChiSquared"*
  %__self_0_1 = getelementptr inbounds %"distributions::gamma::StudentT", %"distributions::gamma::StudentT"* %self, i32 0, i32 1
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc1504 to [0 x i8]*), i64 8)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_6 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store %"distributions::gamma::ChiSquared"* %__self_0_0, %"distributions::gamma::ChiSquared"** %_17, align 8
  %_14.0 = bitcast %"distributions::gamma::ChiSquared"** %_17 to {}*
; call core::fmt::builders::DebugStruct::field
  %_10 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1505 to [0 x i8]*), i64 3, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.s to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  store double* %__self_0_1, double** %_25, align 8
  %_22.0 = bitcast double** %_25 to {}*
; call core::fmt::builders::DebugStruct::field
  %_18 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1506 to [0 x i8]*), i64 3, {}* nonnull align 1 %_22.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.p to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i1 %4
}

; <rand::distributions::normal::StandardNormal as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN80_$LT$rand..distributions..normal..StandardNormal$u20$as$u20$core..fmt..Debug$GT$3fmt17hb6f2218a26310c78E"(double* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_14 = alloca double*, align 8
  %_5 = alloca %"core::fmt::builders::DebugTuple", align 8
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_5, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [14 x i8] }>* @alloc1507 to [0 x i8]*), i64 14)
  br label %bb1

bb1:                                              ; preds = %start
  store double* %self, double** %_14, align 8
  %_11.0 = bitcast double** %_14 to {}*
; call core::fmt::builders::DebugTuple::field
  %_9 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_5, {}* nonnull align 1 %_11.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.p to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugTuple::finish
  %0 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %0
}

; <rand::distributions::normal::Normal as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN72_$LT$rand..distributions..normal..Normal$u20$as$u20$core..fmt..Debug$GT$3fmt17h86a859bb2cb059e9E"({ double, double }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_25 = alloca double*, align 8
  %_17 = alloca double*, align 8
  %_6 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast { double, double }* %self to double*
  %__self_0_1 = getelementptr inbounds { double, double }, { double, double }* %self, i32 0, i32 1
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1508 to [0 x i8]*), i64 6)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_6 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store double* %__self_0_0, double** %_17, align 8
  %_14.0 = bitcast double** %_17 to {}*
; call core::fmt::builders::DebugStruct::field
  %_10 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1509 to [0 x i8]*), i64 4, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.p to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  store double* %__self_0_1, double** %_25, align 8
  %_22.0 = bitcast double** %_25 to {}*
; call core::fmt::builders::DebugStruct::field
  %_18 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1510 to [0 x i8]*), i64 7, {}* nonnull align 1 %_22.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.p to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i1 %4
}

; <rand::distributions::normal::LogNormal as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN75_$LT$rand..distributions..normal..LogNormal$u20$as$u20$core..fmt..Debug$GT$3fmt17h6dc161d9ef948906E"({ double, double }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_16 = alloca { double, double }*, align 8
  %_5 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [9 x i8] }>* @alloc1511 to [0 x i8]*), i64 9)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_5 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store { double, double }* %self, { double, double }** %_16, align 8
  %_13.0 = bitcast { double, double }** %_16 to {}*
; call core::fmt::builders::DebugStruct::field
  %_9 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1512 to [0 x i8]*), i64 4, {}* nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.t to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %4
}

; <rand::distributions::exponential::Exp1 as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN75_$LT$rand..distributions..exponential..Exp1$u20$as$u20$core..fmt..Debug$GT$3fmt17h4c3ab6e20b4084acE"(double* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_14 = alloca double*, align 8
  %_5 = alloca %"core::fmt::builders::DebugTuple", align 8
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_5, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1516 to [0 x i8]*), i64 4)
  br label %bb1

bb1:                                              ; preds = %start
  store double* %self, double** %_14, align 8
  %_11.0 = bitcast double** %_14 to {}*
; call core::fmt::builders::DebugTuple::field
  %_9 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_5, {}* nonnull align 1 %_11.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.p to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugTuple::finish
  %0 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %0
}

; <rand::distributions::exponential::Exp as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN74_$LT$rand..distributions..exponential..Exp$u20$as$u20$core..fmt..Debug$GT$3fmt17h0c9958cf26dc2ac5E"(double* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_16 = alloca double*, align 8
  %_5 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1517 to [0 x i8]*), i64 3)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_5 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store double* %self, double** %_16, align 8
  %_13.0 = bitcast double** %_16 to {}*
; call core::fmt::builders::DebugStruct::field
  %_9 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5, [0 x i8]* nonnull align 1 bitcast (<{ [14 x i8] }>* @alloc1518 to [0 x i8]*), i64 14, {}* nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.p to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %4
}

; <rand::jitter::TimerError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN61_$LT$rand..jitter..TimerError$u20$as$u20$core..fmt..Debug$GT$3fmt17h10a15b1173200491E"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_3 = alloca i8*, align 8
  %0 = alloca i8, align 1
  store i8* %self, i8** %_3, align 8
  %1 = load i8*, i8** %_3, align 8, !nonnull !5
  %2 = load i8, i8* %1, align 1, !range !6
  %_5 = zext i8 %2 to i64
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %3 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1524 to [0 x i8]*), i64 7)
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %0, align 1
  br label %bb8

bb4:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %5 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc1523 to [0 x i8]*), i64 11)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb8

bb5:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %7 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [12 x i8] }>* @alloc1522 to [0 x i8]*), i64 12)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb8

bb6:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %9 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [15 x i8] }>* @alloc1521 to [0 x i8]*), i64 15)
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %0, align 1
  br label %bb8

bb7:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %11 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [12 x i8] }>* @alloc1520 to [0 x i8]*), i64 12)
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %0, align 1
  br label %bb8

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %13 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [15 x i8] }>* @alloc1519 to [0 x i8]*), i64 15)
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb1
  %15 = load i8, i8* %0, align 1, !range !4
  %16 = trunc i8 %15 to i1
  ret i1 %16
}

; <rand::reseeding::ReseedingRng<R,Rsdr> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN82_$LT$rand..reseeding..ReseedingRng$LT$R$C$Rsdr$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h475d8dcc4ffde250E"(%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* align 8 dereferenceable(4144) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_43 = alloca %ThreadRngReseeder*, align 8
  %_35 = alloca i64*, align 8
  %_27 = alloca i64*, align 8
  %_19 = alloca %StdRng*, align 8
  %_8 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self to %StdRng*
  %__self_0_1 = getelementptr inbounds %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self, i32 0, i32 2
  %__self_0_2 = getelementptr inbounds %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self, i32 0, i32 3
  %__self_0_3 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %self to %ThreadRngReseeder*
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [12 x i8] }>* @alloc1525 to [0 x i8]*), i64 12)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_8 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store %StdRng* %__self_0_0, %StdRng** %_19, align 8
  %_16.0 = bitcast %StdRng** %_19 to {}*
; call core::fmt::builders::DebugStruct::field
  %_12 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_8, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1562 to [0 x i8]*), i64 3, {}* nonnull align 1 %_16.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.u to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64* %__self_0_1, i64** %_27, align 8
  %_24.0 = bitcast i64** %_27 to {}*
; call core::fmt::builders::DebugStruct::field
  %_20 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_8, [0 x i8]* nonnull align 1 bitcast (<{ [20 x i8] }>* @alloc1530 to [0 x i8]*), i64 20, {}* nonnull align 1 %_24.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.v to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
  store i64* %__self_0_2, i64** %_35, align 8
  %_32.0 = bitcast i64** %_35 to {}*
; call core::fmt::builders::DebugStruct::field
  %_28 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_8, [0 x i8]* nonnull align 1 bitcast (<{ [15 x i8] }>* @alloc1534 to [0 x i8]*), i64 15, {}* nonnull align 1 %_32.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.v to [3 x i64]*))
  br label %bb4

bb4:                                              ; preds = %bb3
  store %ThreadRngReseeder* %__self_0_3, %ThreadRngReseeder** %_43, align 8
  %_40.0 = bitcast %ThreadRngReseeder** %_43 to {}*
; call core::fmt::builders::DebugStruct::field
  %_36 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_8, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc1535 to [0 x i8]*), i64 8, {}* nonnull align 1 %_40.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.w to [3 x i64]*))
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_8)
  br label %bb6

bb6:                                              ; preds = %bb5
  ret i1 %4
}

; <rand::reseeding::ReseedWithDefault as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN71_$LT$rand..reseeding..ReseedWithDefault$u20$as$u20$core..fmt..Debug$GT$3fmt17hbf9231d17bee961dE"(%"reseeding::ReseedWithDefault"* nonnull align 1 %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
; call core::fmt::Formatter::write_str
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [17 x i8] }>* @alloc1539 to [0 x i8]*), i64 17)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; rand::rand_impls::<impl rand::Rand for (A,B,C,D)>::rand
; Function Attrs: inlinehint nonlazybind uwtable
define i128 @"_ZN4rand10rand_impls62_$LT$impl$u20$rand..Rand$u20$for$u20$$LP$A$C$B$C$C$C$D$RP$$GT$4rand17h3b6efebb47991b38E"(i64** align 8 dereferenceable(8) %_rng) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i32, i32, i32, i32 }, align 4
; call rand::rand_impls::<impl rand::Rand for u32>::rand
  %2 = call i32 @"_ZN4rand10rand_impls44_$LT$impl$u20$rand..Rand$u20$for$u20$u32$GT$4rand17h1fbc8cd43b7b364cE"(i64** align 8 dereferenceable(8) %_rng)
  br label %bb1

bb1:                                              ; preds = %start
; invoke rand::rand_impls::<impl rand::Rand for u32>::rand
  %3 = invoke i32 @"_ZN4rand10rand_impls44_$LT$impl$u20$rand..Rand$u20$for$u20$u32$GT$4rand17h1fbc8cd43b7b364cE"(i64** align 8 dereferenceable(8) %_rng)
          to label %_ZN4rand3Rng3gen17h104e8d56f2709aaeE.exit4 unwind label %cleanup

_ZN4rand3Rng3gen17h104e8d56f2709aaeE.exit4:       ; preds = %bb1
  br label %bb2

bb2:                                              ; preds = %_ZN4rand3Rng3gen17h104e8d56f2709aaeE.exit4
; invoke rand::rand_impls::<impl rand::Rand for u32>::rand
  %4 = invoke i32 @"_ZN4rand10rand_impls44_$LT$impl$u20$rand..Rand$u20$for$u20$u32$GT$4rand17h1fbc8cd43b7b364cE"(i64** align 8 dereferenceable(8) %_rng)
          to label %_ZN4rand3Rng3gen17h104e8d56f2709aaeE.exit3 unwind label %cleanup1

_ZN4rand3Rng3gen17h104e8d56f2709aaeE.exit3:       ; preds = %bb2
  br label %bb3

bb7:                                              ; preds = %bb6, %cleanup
  br label %bb8

cleanup:                                          ; preds = %bb1
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb7

bb3:                                              ; preds = %_ZN4rand3Rng3gen17h104e8d56f2709aaeE.exit3
; invoke rand::rand_impls::<impl rand::Rand for u32>::rand
  %10 = invoke i32 @"_ZN4rand10rand_impls44_$LT$impl$u20$rand..Rand$u20$for$u20$u32$GT$4rand17h1fbc8cd43b7b364cE"(i64** align 8 dereferenceable(8) %_rng)
          to label %_ZN4rand3Rng3gen17h104e8d56f2709aaeE.exit unwind label %cleanup2

_ZN4rand3Rng3gen17h104e8d56f2709aaeE.exit:        ; preds = %bb3
  br label %bb4

bb6:                                              ; preds = %bb5, %cleanup1
  br label %bb7

cleanup1:                                         ; preds = %bb2
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb6

bb4:                                              ; preds = %_ZN4rand3Rng3gen17h104e8d56f2709aaeE.exit
  %16 = bitcast { i32, i32, i32, i32 }* %1 to i32*
  store i32 %2, i32* %16, align 4
  %17 = getelementptr inbounds { i32, i32, i32, i32 }, { i32, i32, i32, i32 }* %1, i32 0, i32 1
  store i32 %3, i32* %17, align 4
  %18 = getelementptr inbounds { i32, i32, i32, i32 }, { i32, i32, i32, i32 }* %1, i32 0, i32 2
  store i32 %4, i32* %18, align 4
  %19 = getelementptr inbounds { i32, i32, i32, i32 }, { i32, i32, i32, i32 }* %1, i32 0, i32 3
  store i32 %10, i32* %19, align 4
  %20 = bitcast { i32, i32, i32, i32 }* %1 to i128*
  %21 = load i128, i128* %20, align 4
  ret i128 %21

bb5:                                              ; preds = %cleanup2
  br label %bb6

cleanup2:                                         ; preds = %bb3
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb5

bb8:                                              ; preds = %bb7
  %27 = bitcast { i8*, i32 }* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1
  resume { i8*, i32 } %32
}

; <rand::prng::chacha::ChaChaRng as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$rand..prng..chacha..ChaChaRng$u20$as$u20$core..fmt..Debug$GT$3fmt17h4fe70f2436b90d96E"(%"prng::chacha::ChaChaRng"* align 8 dereferenceable(136) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_34 = alloca i64*, align 8
  %_26 = alloca [16 x i32]*, align 8
  %_18 = alloca [16 x i32]*, align 8
  %_7 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 1
  %__self_0_1 = getelementptr inbounds %"prng::chacha::ChaChaRng", %"prng::chacha::ChaChaRng"* %self, i32 0, i32 2
  %__self_0_2 = bitcast %"prng::chacha::ChaChaRng"* %self to i64*
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [9 x i8] }>* @alloc1540 to [0 x i8]*), i64 9)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_7 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store [16 x i32]* %__self_0_0, [16 x i32]** %_18, align 8
  %_15.0 = bitcast [16 x i32]** %_18 to {}*
; call core::fmt::builders::DebugStruct::field
  %_11 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1541 to [0 x i8]*), i64 6, {}* nonnull align 1 %_15.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.x to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  store [16 x i32]* %__self_0_1, [16 x i32]** %_26, align 8
  %_23.0 = bitcast [16 x i32]** %_26 to {}*
; call core::fmt::builders::DebugStruct::field
  %_19 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1545 to [0 x i8]*), i64 5, {}* nonnull align 1 %_23.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.x to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
  store i64* %__self_0_2, i64** %_34, align 8
  %_31.0 = bitcast i64** %_34 to {}*
; call core::fmt::builders::DebugStruct::field
  %_27 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1546 to [0 x i8]*), i64 5, {}* nonnull align 1 %_31.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.y to [3 x i64]*))
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_7)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret i1 %4
}

; <rand::prng::xorshift::XorShiftRng as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$rand..prng..xorshift..XorShiftRng$u20$as$u20$core..fmt..Debug$GT$3fmt17h2c6a6102cd7395d2E"(%"prng::xorshift::XorShiftRng"* align 4 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_43 = alloca i32*, align 8
  %_35 = alloca i32*, align 8
  %_27 = alloca i32*, align 8
  %_19 = alloca i32*, align 8
  %_8 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast %"prng::xorshift::XorShiftRng"* %self to i32*
  %__self_0_1 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %self, i32 0, i32 1
  %__self_0_2 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %self, i32 0, i32 2
  %__self_0_3 = getelementptr inbounds %"prng::xorshift::XorShiftRng", %"prng::xorshift::XorShiftRng"* %self, i32 0, i32 3
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc1550 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_8 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store i32* %__self_0_0, i32** %_19, align 8
  %_16.0 = bitcast i32** %_19 to {}*
; call core::fmt::builders::DebugStruct::field
  %_12 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_8, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1551 to [0 x i8]*), i64 1, {}* nonnull align 1 %_16.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  store i32* %__self_0_1, i32** %_27, align 8
  %_24.0 = bitcast i32** %_27 to {}*
; call core::fmt::builders::DebugStruct::field
  %_20 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_8, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1552 to [0 x i8]*), i64 1, {}* nonnull align 1 %_24.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
  store i32* %__self_0_2, i32** %_35, align 8
  %_32.0 = bitcast i32** %_35 to {}*
; call core::fmt::builders::DebugStruct::field
  %_28 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_8, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1553 to [0 x i8]*), i64 1, {}* nonnull align 1 %_32.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
  br label %bb4

bb4:                                              ; preds = %bb3
  store i32* %__self_0_3, i32** %_43, align 8
  %_40.0 = bitcast i32** %_43 to {}*
; call core::fmt::builders::DebugStruct::field
  %_36 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_8, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1554 to [0 x i8]*), i64 1, {}* nonnull align 1 %_40.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*))
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_8)
  br label %bb6

bb6:                                              ; preds = %bb5
  ret i1 %4
}

; <rand::StdRng as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN49_$LT$rand..StdRng$u20$as$u20$core..fmt..Debug$GT$3fmt17h0593f3fc0c4e7419E"(%StdRng* align 8 dereferenceable(4128) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_16 = alloca %"prng::isaac64::Isaac64Rng"*, align 8
  %_5 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast %StdRng* %self to %"prng::isaac64::Isaac64Rng"*
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1555 to [0 x i8]*), i64 6)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_5 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store %"prng::isaac64::Isaac64Rng"* %__self_0_0, %"prng::isaac64::Isaac64Rng"** %_16, align 8
  %_13.0 = bitcast %"prng::isaac64::Isaac64Rng"** %_16 to {}*
; call core::fmt::builders::DebugStruct::field
  %_9 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1562 to [0 x i8]*), i64 3, {}* nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.z to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %4
}

; <rand::ThreadRngReseeder as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN60_$LT$rand..ThreadRngReseeder$u20$as$u20$core..fmt..Debug$GT$3fmt17h6161635ccd0fc990E"(%ThreadRngReseeder* nonnull align 1 %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
; call core::fmt::Formatter::write_str
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [17 x i8] }>* @alloc1560 to [0 x i8]*), i64 17)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <rand::ThreadRng as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN52_$LT$rand..ThreadRng$u20$as$u20$core..fmt..Debug$GT$3fmt17hf0c69146d6ff7ee9E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_16 = alloca i64**, align 8
  %_5 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [9 x i8] }>* @alloc1561 to [0 x i8]*), i64 9)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_5 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store i64** %self, i64*** %_16, align 8
  %_13.0 = bitcast i64*** %_16 to {}*
; call core::fmt::builders::DebugStruct::field
  %_9 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1562 to [0 x i8]*), i64 3, {}* nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.A to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %4
}

; rand::thread_rng::THREAD_RNG_KEY::__init
; Function Attrs: inlinehint nonlazybind uwtable
define internal nonnull i64* @_ZN4rand10thread_rng14THREAD_RNG_KEY6__init17h876ccd645ad83f50E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_24 = alloca %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", align 8
  %_23 = alloca %"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>", align 8
  %_21 = alloca %StdRng, align 8
  %rng = alloca %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>", align 8
  %_14 = alloca i64*, align 8
  %_13 = alloca [1 x { i8*, i64* }], align 8
  %_6 = alloca %"core::fmt::Arguments", align 8
  %e = alloca %"std::io::error::Error", align 8
  %r1 = alloca %StdRng, align 8
  %_2 = alloca %"core::result::Result<StdRng, std::io::error::Error>", align 8
  %r = alloca %StdRng, align 8
; call rand::StdRng::new
  call void @_ZN4rand6StdRng3new17ha8151d12964bc2fdE(%"core::result::Result<StdRng, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<StdRng, std::io::error::Error>") dereferenceable(4136) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"core::result::Result<StdRng, std::io::error::Error>"* %_2 to i64*
  %_3 = load i64, i64* %1, align 8, !range !2
  switch i64 %_3, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %2 = bitcast %"core::result::Result<StdRng, std::io::error::Error>"* %_2 to %"core::result::Result<StdRng, std::io::error::Error>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<StdRng, std::io::error::Error>::Ok", %"core::result::Result<StdRng, std::io::error::Error>::Ok"* %2, i32 0, i32 1
  %4 = bitcast %StdRng* %r1 to i8*
  %5 = bitcast %StdRng* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 4128, i1 false)
  %6 = bitcast %StdRng* %r to i8*
  %7 = bitcast %StdRng* %r1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 4128, i1 false)
  %8 = bitcast %StdRng* %_21 to i8*
  %9 = bitcast %StdRng* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 4128, i1 false)
; call rand::reseeding::ReseedingRng<R,Rsdr>::new
  call void @"_ZN4rand9reseeding28ReseedingRng$LT$R$C$Rsdr$GT$3new17hc4ba2614ea188e8cE"(%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* noalias nocapture sret(%"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>") dereferenceable(4144) %rng, %StdRng* noalias nocapture dereferenceable(4128) %_21, i64 32768)
  br label %bb7

bb2:                                              ; preds = %bb1
  %10 = bitcast %"core::result::Result<StdRng, std::io::error::Error>"* %_2 to %"core::result::Result<StdRng, std::io::error::Error>::Err"*
  %11 = getelementptr inbounds %"core::result::Result<StdRng, std::io::error::Error>::Err", %"core::result::Result<StdRng, std::io::error::Error>::Err"* %10, i32 0, i32 1
  %12 = bitcast %"std::io::error::Error"* %e to i8*
  %13 = bitcast %"std::io::error::Error"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  %14 = bitcast i64** %_14 to %"std::io::error::Error"**
  store %"std::io::error::Error"* %e, %"std::io::error::Error"** %14, align 8
  %_args = load i64*, i64** %_14, align 8, !nonnull !5
  %_18 = bitcast i64* %_args to %"std::io::error::Error"*
; invoke core::fmt::ArgumentV1::new
  %15 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0d700582d5bb27ceE(%"std::io::error::Error"* align 8 dereferenceable(16) %_18, i1 (%"std::io::error::Error"*, %"core::fmt::Formatter"*)* nonnull @"_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h02c1e5177fc0d670E")
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb2
  %_17.0 = extractvalue { i8*, i64* } %15, 0
  %_17.1 = extractvalue { i8*, i64* } %15, 1
  %16 = bitcast [1 x { i8*, i64* }]* %_13 to { i8*, i64* }*
  %17 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 0
  store i8* %_17.0, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 1
  store i64* %_17.1, i64** %18, align 8
  %_10.0 = bitcast [1 x { i8*, i64* }]* %_13 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h039a7a01fe84f5c0E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_6, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc638 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_10.0, i64 1)
          to label %bb6 unwind label %cleanup

bb10:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h533066c030d55d23E"(%"std::io::error::Error"* %e) #18
  br label %bb11

cleanup:                                          ; preds = %bb6, %bb5, %bb2
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb10

bb6:                                              ; preds = %bb5
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_6, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1567 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb6
  unreachable

bb11:                                             ; preds = %bb10
  %24 = bitcast { i8*, i32 }* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb7:                                              ; preds = %bb4
  %30 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %_24 to i8*
  %31 = bitcast %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* %rng to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 4144, i1 false)
; call core::cell::RefCell<T>::new
  call void @"_ZN4core4cell16RefCell$LT$T$GT$3new17h917045ad6af2c3f4E"(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* noalias nocapture sret(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>") dereferenceable(4152) %_23, %"reseeding::ReseedingRng<StdRng, ThreadRngReseeder>"* noalias nocapture dereferenceable(4144) %_24)
  br label %bb8

bb8:                                              ; preds = %bb7
; call alloc::rc::Rc<T>::new
  %32 = call nonnull i64* @"_ZN5alloc2rc11Rc$LT$T$GT$3new17h047c4f13ff1c9963E"(%"core::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>"* noalias nocapture dereferenceable(4152) %_23)
  br label %bb9

bb9:                                              ; preds = %bb8
  ret i64* %32
}

; rand::thread_rng::THREAD_RNG_KEY::__getit
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 dereferenceable_or_null(8) i64* @_ZN4rand10thread_rng14THREAD_RNG_KEY7__getit17hc00ab9b25dd2aa88E() unnamed_addr #0 {
start:
; call std::thread::local::fast::Key<T>::get
  %0 = call align 8 dereferenceable_or_null(8) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17h65f8047a53c134beE"({ i64*, i8 }* align 8 dereferenceable(16) bitcast (<{ [16 x i8] }>* @_ZN4rand10thread_rng14THREAD_RNG_KEY7__getit5__KEY17hda0a62dff6e4f619E to { i64*, i8 }*))
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index26slice_start_index_len_fail17hfc14514b4a7e8b02E(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; std::fs::OpenOptions::_open
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std2fs11OpenOptions5_open17h34766febe2477c9eE(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24), %"std::fs::OpenOptions"* align 4 dereferenceable(16), %"std::path::Path"* nonnull align 1, i64) unnamed_addr #1

; std::fs::OpenOptions::new
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN3std2fs11OpenOptions3new17hef90256f8dad80afE() unnamed_addr #1

; std::fs::OpenOptions::read
; Function Attrs: nonlazybind uwtable
declare align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions4read17h0a89fa77312f677eE(%"std::fs::OpenOptions"* align 4 dereferenceable(16), i1 zeroext) unnamed_addr #1

; <std::fs::File as std::io::Read>::read
; Function Attrs: nonlazybind uwtable
declare void @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$4read17h8c6e561e46003d97E"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24), i32* align 4 dereferenceable(4), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; <std::fs::File as std::io::Read>::read_buf
; Function Attrs: nonlazybind uwtable
declare i128 @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$8read_buf17h67693fd0a7d35dc7E"(i32* align 4 dereferenceable(4), %"std::io::readbuf::ReadBuf"* align 8 dereferenceable(32)) unnamed_addr #1

; std::sys::unix::os::errno
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN3std3sys4unix2os5errno17hef77becd6e359a38E() unnamed_addr #1

; std::io::error::Error::_new
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN3std2io5error5Error4_new17h3dba62386fed5616E(i8, {}* noalias nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; std::sys::unix::decode_error_kind
; Function Attrs: nonlazybind uwtable
declare i8 @_ZN3std3sys4unix17decode_error_kind17hb5c59b4dd44b9882E(i32) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.sqrt.f64(double) #8

; std::sync::once::Once::call_inner
; Function Attrs: cold nonlazybind uwtable
declare void @_ZN3std4sync4once4Once10call_inner17h9cbe709b601a3566E(%"std::sync::once::Once"* align 8 dereferenceable(8), i1 zeroext, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #9

; <std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>::from::StringError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN242_$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Debug$GT$3fmt17h29a54fd3ab5fd913E"(%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* align 8 dereferenceable(24), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>::from::StringError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN244_$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17hb5d8af6bd0a453ceE"(%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* align 8 dereferenceable(24), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>::from::StringError as std::error::Error>::description
; Function Attrs: nonlazybind uwtable
declare { [0 x i8]*, i64 } @"_ZN243_$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$..from..StringError$u20$as$u20$std..error..Error$GT$11description17h07ab6b39188cf65eE"(%"std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync + 'static)>>::from::StringError"* align 8 dereferenceable(24)) unnamed_addr #1

; std::sys::unix::thread_local_dtor::register_dtor
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix17thread_local_dtor13register_dtor17h5730607195ae916cE(i8*, void (i8*)* nonnull) unnamed_addr #1

; core::panic::location::Location::caller
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(24) %"core::panic::location::Location"* @_ZN4core5panic8location8Location6caller17h66ab9d009774583dE(%"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #1

; std::panicking::rust_panic_with_hook
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN3std9panicking20rust_panic_with_hook17h7a6b21c56a75680aE({}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), i64* align 8 dereferenceable_or_null(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #10

; core::fmt::float::<impl core::fmt::Debug for f64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt5float50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$f64$GT$3fmt17he264b8ac941742d4E"(double* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h4fb653153270e40aE"([0 x i8]* nonnull align 1, i64, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::debug_list
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN4core3fmt9Formatter10debug_list17hea40b725812e3b83E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::builders::DebugList::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17hf48e4debbea8211aE(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16)) unnamed_addr #1

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17hc1ea778f34506390E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17ha903485a71eb6d25E"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9143b4968b3afd78E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17hef35279af1b2dff0E"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h143e132e8c82669cE"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17h8c1e5a0343078d18E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u64$GT$3fmt17h7c0777b2ffca5ab3E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hc0f7594e99de2828E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h15400e4abae8bbbeE"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17ha63680436de3943cE"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::builders::DebugList::entry
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(16) %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17hfd5de0649c122df2E(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #11

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.fshl.i64(i64, i64, i64) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #12

; core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17he27865c0f3eaf314E"(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; <core::cell::BorrowMutError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN63_$LT$core..cell..BorrowMutError$u20$as$u20$core..fmt..Debug$GT$3fmt17h177290280eb54e06E"(%"core::cell::BorrowMutError"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; <std::thread::local::AccessError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17haa218a8af6b40cc9E"(%"std::thread::local::AccessError"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <std::time::SystemTimeError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN63_$LT$std..time..SystemTimeError$u20$as$u20$core..fmt..Debug$GT$3fmt17h3b3d11e142a1fb4cE"({ i64, i32 }* align 8 dereferenceable(16), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <std::io::error::Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h7ced4ac19d2a5261E"(%"std::io::error::Error"* align 8 dereferenceable(16), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; Function Attrs: nounwind nonlazybind uwtable
declare i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #13

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nounwind nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h2740986bd2451aa0E(i64, i64) unnamed_addr #14

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #13

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #13

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17ha72cd8fd7333b22dE() unnamed_addr #10

; core::fmt::Formatter::debug_struct
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; <<core::cell::RefCell<T> as core::fmt::Debug>::fmt::BorrowedPlaceholder as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN127_$LT$$LT$core..cell..RefCell$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$..fmt..BorrowedPlaceholder$u20$as$u20$core..fmt..Debug$GT$3fmt17h96fd1f71a812ece1E"(%"<core::cell::RefCell<T> as core::fmt::Debug>::fmt::BorrowedPlaceholder"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::builders::DebugStruct::field
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16), [0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::builders::DebugStruct::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16)) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @close(i32) unnamed_addr #1

; std::process::abort
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN3std7process5abort17h2f11b1d32ad057eaE() unnamed_addr #15

; core::fmt::Formatter::write_fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #16

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.usub.with.overflow.i32(i32, i32) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #8

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #8

; std::time::SystemTime::now
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN3std4time10SystemTime3now17h62ab7e1adf7a1773E() unnamed_addr #1

; std::time::SystemTime::duration_since
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std4time10SystemTime14duration_since17h2455bca8a6e3534fE(%"core::result::Result<core::time::Duration, std::time::SystemTimeError>"* noalias nocapture sret(%"core::result::Result<core::time::Duration, std::time::SystemTimeError>") dereferenceable(24), { i64, i64 }* align 8 dereferenceable(16), i64, i64) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i64 @syscall(i64, ...) unnamed_addr #1

; <std::io::error::Error as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h02c1e5177fc0d670E"(%"std::io::error::Error"* align 8 dereferenceable(16), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; <std::fs::File as std::io::Read>::read_vectored
; Function Attrs: nonlazybind uwtable
declare void @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$13read_vectored17h1e55279996b5e795E"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24), i32* align 4 dereferenceable(4), [0 x { i8*, i64 }]* nonnull align 8, i64) unnamed_addr #1

; <std::fs::File as std::io::Read>::read_to_end
; Function Attrs: nonlazybind uwtable
declare void @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$11read_to_end17h5b1c90334f46fb49E"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24), i32* align 4 dereferenceable(4), %"alloc::vec::Vec<u8>"* align 8 dereferenceable(24)) unnamed_addr #1

; <std::fs::File as std::io::Read>::read_to_string
; Function Attrs: nonlazybind uwtable
declare void @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$14read_to_string17h8996e8efff93a2afE"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24), i32* align 4 dereferenceable(4), %"alloc::string::String"* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::Formatter::debug_tuple
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24), %"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugTuple::field
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::builders::DebugTuple::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #12

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { inlinehint noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #6 = { argmemonly nofree nounwind willreturn }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #9 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #10 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #11 = { nofree nosync nounwind readnone willreturn }
attributes #12 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #13 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #14 = { cold noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #15 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #16 = { argmemonly nofree nounwind willreturn writeonly }
attributes #17 = { noreturn }
attributes #18 = { noinline }
attributes #19 = { nounwind }
attributes #20 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 7, !"PIC Level", i32 2}
!1 = !{i32 2, !"RtLibUseGOT", i32 1}
!2 = !{i64 0, i64 2}
!3 = !{i32 0, i32 2}
!4 = !{i8 0, i8 2}
!5 = !{}
!6 = !{i8 0, i8 6}
!7 = !{i8 0, i8 41}
!8 = !{i8 0, i8 5}
!9 = !{i8 0, i8 4}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5alloc5boxed12Box$LT$T$GT$3new17h7a81b158e0bf70f5E: %x"}
!12 = distinct !{!12, !"_ZN5alloc5boxed12Box$LT$T$GT$3new17h7a81b158e0bf70f5E"}
!13 = !{i8 0, i8 3}
!14 = !{i8 -1, i8 2}
!15 = !{i64 1, i64 0}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h17bb361b9e42e4a5E: argument 0"}
!18 = distinct !{!18, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h17bb361b9e42e4a5E"}
!19 = !{!20}
!20 = distinct !{!20, !18, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h17bb361b9e42e4a5E: %value"}
!21 = !{i32 3417650}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hcf9763258cab5e64E: %value.0"}
!24 = distinct !{!24, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hcf9763258cab5e64E"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17he01a02f7c4047d97E: %value"}
!27 = distinct !{!27, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17he01a02f7c4047d97E"}
!28 = !{i32 0, i32 -1}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN4rand3Rng3gen17hba625dc13f26f9e4E: argument 0"}
!31 = distinct !{!31, !"_ZN4rand3Rng3gen17hba625dc13f26f9e4E"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN4rand3Rng3gen17hc90a3cee0dda8e20E: argument 0"}
!34 = distinct !{!34, !"_ZN4rand3Rng3gen17hc90a3cee0dda8e20E"}
!35 = !{i64 0, i64 3}
!36 = !{i64 0, i64 4}
