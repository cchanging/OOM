; ModuleID = 'rustc_demangle.254d80ee-cgu.0'
source_filename = "rustc_demangle.254d80ee-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]", %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]" = type {}
%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]", %"core::slice::iter::ChunksExact<u8>" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]" = type {}
%"core::slice::iter::ChunksExact<u8>" = type { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64 }
%"core::option::Option<[&u8; 2]>" = type { {}*, [1 x i64] }
%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>" = type { {}, %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>" }
%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]" = type { %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>" }
%"core::ops::control_flow::ControlFlow<()>::Break" = type { [1 x i8], {} }
%"core::ops::control_flow::ControlFlow<usize, usize>::Break" = type { [1 x i64], i64 }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"[closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]" = type { %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]" }
%"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]" = type {}
%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>" = type { { i8*, i8* }, { i8, i8 }, [6 x i8] }
%"core::result::Result<v0::Ident, v0::ParseError>" = type { i8, [39 x i8] }
%"core::result::Result<v0::Ident, v0::ParseError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<bool, core::fmt::Error>::Err" = type { %"core::fmt::Error" }
%"core::fmt::Error" = type {}
%"core::result::Result<(legacy::Demangle, &str), ()>" = type { {}*, [4 x i64] }
%"core::result::Result<(legacy::Demangle, &str), ()>::Err" = type { {} }
%"core::result::Result<u64, v0::ParseError>" = type { i8, [15 x i8] }
%"core::result::Result<u64, v0::ParseError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<v0::HexNibbles, v0::ParseError>" = type { i8, [23 x i8] }
%"core::result::Result<v0::HexNibbles, v0::ParseError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<(), core::fmt::Error>::Err" = type { [1 x i8], %"core::fmt::Error" }
%"core::result::Result<v0::Parser, v0::ParseError>" = type { i8, [39 x i8] }
%"core::result::Result<v0::Parser, v0::ParseError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<(), ()>::Err" = type { [1 x i8], {} }
%"core::result::Result<char, ()>::Err" = type { {} }
%"core::result::Result<core::option::Option<char>, v0::ParseError>" = type { i8, [7 x i8] }
%"core::result::Result<core::option::Option<char>, v0::ParseError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<u8, v0::ParseError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<(v0::Demangle, &str), v0::ParseError>" = type { i8, [39 x i8] }
%"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<usize, core::fmt::Error>::Err" = type { [8 x i8], %"core::fmt::Error" }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%DemangleStyle = type { i64, [3 x i64] }
%"core::fmt::builders::DebugList" = type { %"core::fmt::builders::DebugInner" }
%"core::fmt::builders::DebugInner" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"core::str::pattern::CharPredicateSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>" = type { %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>" }
%"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]", { [0 x i8]*, i64 }, %"core::str::iter::CharIndices" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]" = type {}
%"core::str::iter::CharIndices" = type { i64, { i8*, i8* } }
%"core::str::pattern::MultiCharEqPattern<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]" }
%"core::fmt::Opaque" = type {}
%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>" = type { { i64, i64 }, %"core::fmt::Formatter"* }
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"core::fmt::rt::v1::Argument" = type { i64, %"core::fmt::rt::v1::FormatSpec" }
%"core::fmt::rt::v1::FormatSpec" = type { { i64, i64 }, { i64, i64 }, i32, i32, i8, [7 x i8] }
%"core::option::Option<u64>::Some" = type { [1 x i64], i64 }
%"core::option::Option<usize>::Some" = type { [1 x i64], i64 }
%"core::ops::range::RangeInclusive<usize>" = type { i64, i64, i8, [7 x i8] }
%"v0::Printer" = type { %"core::result::Result<v0::Parser, v0::ParseError>", i64*, i32, [1 x i32] }
%"core::mem::manually_drop::ManuallyDrop<core::result::Result<v0::Parser, v0::ParseError>>" = type { %"core::result::Result<v0::Parser, v0::ParseError>" }
%"core::mem::maybe_uninit::MaybeUninit<core::result::Result<v0::Parser, v0::ParseError>>" = type { [5 x i64] }
%SizeLimitExhausted = type {}
%"core::ptr::metadata::PtrRepr<[char]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"core::option::Option<u32>::Some" = type { [1 x i32], i32 }
%"core::option::Option<(usize, usize)>" = type { i64, [2 x i64] }
%"core::str::pattern::StrSearcher" = type { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, %"core::str::pattern::StrSearcherImpl" }
%"core::str::pattern::StrSearcherImpl" = type { i64, [8 x i64] }
%"core::option::Option<(usize, usize)>::Some" = type { [1 x i64], { i64, i64 } }
%"core::str::pattern::CharSearcher" = type { { [0 x i8]*, i64 }, i64, i64, i64, i32, [4 x i8] }
%"core::result::Result<usize, core::num::error::ParseIntError>" = type { i8, [15 x i8] }
%"core::str::iter::Split<char>" = type { %"core::str::iter::SplitInternal<char>" }
%"core::str::iter::SplitInternal<char>" = type { i64, i64, %"core::str::pattern::CharSearcher", i8, i8, [6 x i8] }
%"core::str::pattern::TwoWaySearcher" = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%"core::str::pattern::SearchStep" = type { i64, [2 x i64] }
%"core::str::pattern::SearchStep::Match" = type { [1 x i64], i64, i64 }
%"core::str::pattern::SearchStep::Reject" = type { [1 x i64], i64, i64 }
%"core::char::EscapeDebug" = type { %"core::char::EscapeDefault" }
%"core::char::EscapeDefault" = type { %"core::char::EscapeDefaultState" }
%"core::char::EscapeDefaultState" = type { i32, [5 x i32] }
%"core::char::methods::EscapeDebugExtArgs" = type { i8, i8, i8 }
%"core::char::EscapeUnicode" = type { i64, i32, i8, [3 x i8] }
%"core::char::EscapeDefaultState::Backslash" = type { [1 x i32], i32 }
%"core::char::EscapeDefaultState::Unicode" = type { [1 x i64], %"core::char::EscapeUnicode" }
%"core::char::EscapeDefaultState::Char" = type { [1 x i32], i32 }
%"[closure@core::iter::adapters::copied::copy_try_fold<u8, usize, core::ops::control_flow::ControlFlow<usize, usize>, [closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]>::{closure#0}]" = type { %"[closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]" }
%"[closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]" = type {}
%"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Break" = type { [1 x i64], i64 }
%"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:102:46: 102:64]>::{closure#0}]" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:102:46: 102:64]" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:102:46: 102:64]" = type {}
%"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:98:45: 101:10]>::{closure#0}]" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:98:45: 101:10]" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:98:45: 101:10]" = type {}
%"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:158:72: 161:34]>::{closure#0}]" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:158:72: 161:34]" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:158:72: 161:34]" = type {}
%"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:184:19: 188:6]>::{closure#0}]" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:184:19: 188:6]" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:184:19: 188:6]" = type {}
%"[closure@core::iter::traits::iterator::Iterator::any::check<core::result::Result<char, ()>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:362:30: 362:44]>::{closure#0}]" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:362:30: 362:44]" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:362:30: 362:44]" = type {}
%"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]" = type {}
%"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]" = type { %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]" = type {}
%"[closure@core::iter::adapters::map::map_fold<&u8, usize, usize, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}], [closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]>::{closure#0}]" = type { %"[closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]", %"[closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]" }
%"[closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]" = type {}
%"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]>::{closure#0}]" = type { %"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]" }
%"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]>::{closure#0}]" = type { %"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]" }
%"core::ops::control_flow::ControlFlow<usize, usize>::Continue" = type { [1 x i64], i64 }
%"core::option::Option<core::fmt::Arguments>" = type { {}*, [5 x i64] }
%"core::option::Option<u8>::Some" = type { [1 x i8], i8 }
%"core::option::Option<[&u8; 2]>::Some" = type { [2 x i8*] }
%"core::result::Result<usize, ()>::Err" = type { [8 x i8], {} }
%"core::result::Result<usize, ()>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<u8, v0::ParseError>::Ok" = type { [1 x i8], i8 }
%"core::result::Result<&char, ()>::Err" = type { {} }
%"core::result::Result<usize, SizeLimitExhausted>::Err" = type { [8 x i8], %SizeLimitExhausted }
%"core::result::Result<usize, SizeLimitExhausted>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<u8, ()>::Err" = type { [1 x i8], {} }
%"core::result::Result<u8, ()>::Ok" = type { [1 x i8], i8 }
%"core::result::Result<u64, v0::ParseError>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, v0::ParseError>" = type { i8, [15 x i8] }
%"core::result::Result<usize, v0::ParseError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<usize, v0::ParseError>::Ok" = type { [1 x i64], i64 }
%"core::option::Option<DemangleStyle>" = type { i64, [3 x i64] }
%"core::result::Result<u32, core::num::error::ParseIntError>" = type { i8, [7 x i8] }
%"core::result::Result<u32, core::num::error::ParseIntError>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<u32, core::num::error::TryFromIntError>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Ok" = type { [1 x i64], %"v0::Parser"* }
%"v0::Parser" = type { { [0 x i8]*, i64 }, i64, i32, [1 x i32] }
%"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Err" = type { [1 x i64], i8* }
%"core::result::Result<(), &mut v0::ParseError>::Ok" = type { {} }
%"core::result::Result<(), SizeLimitExhausted>::Err" = type { [1 x i8], %SizeLimitExhausted }
%"core::result::Result<(), SizeLimitExhausted>::Ok" = type { [1 x i8], {} }
%"core::result::Result<bool, &mut v0::ParseError>" = type { i8, [15 x i8] }
%"core::result::Result<bool, &mut v0::ParseError>::Err" = type { [1 x i64], i8* }
%"core::result::Result<bool, &mut v0::ParseError>::Ok" = type { [1 x i8], i8 }
%"core::result::Result<v0::Parser, v0::ParseError>::Ok" = type { [1 x i64], %"v0::Parser" }
%"core::result::Result<usize, core::num::error::ParseIntError>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, core::num::error::ParseIntError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>" = type { i8, [15 x i8] }
%"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<&str, core::str::error::Utf8Error>" = type { i64, [2 x i64] }
%"core::str::error::Utf8Error" = type { i64, { i8, i8 }, [6 x i8] }
%"core::result::Result<&str, core::str::error::Utf8Error>::Ok" = type { [1 x i64], { [0 x i8]*, i64 } }
%"core::result::Result<&str, core::str::error::Utf8Error>::Err" = type { [1 x i64], %"core::str::error::Utf8Error" }
%"core::result::Result<&str, ()>::Err" = type { {} }
%"core::result::Result<core::convert::Infallible, ()>::Err" = type { {} }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>>::Continue" = type { [1 x i8], {} }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>>::Break" = type { [1 x i8], %"core::result::Result<core::convert::Infallible, ()>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>" = type { i8, [15 x i8] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Break" = type { [1 x i8], i8 }
%"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err" = type { %"core::fmt::Error" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Continue" = type { [1 x i8], {} }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Break" = type { [1 x i8], %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, &char>::Break" = type { %"core::result::Result<core::convert::Infallible, ()>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Break" = type { [8 x i8], %"core::result::Result<core::convert::Infallible, ()>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>" = type { i8, [39 x i8] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Continue" = type { [1 x i64], %"v0::Parser" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Break" = type { [1 x i8], i8 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>>::Continue" = type { {} }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue" = type { [1 x i8], i8 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break" = type { [1 x i8], i8 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>" = type { i8, [15 x i8] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break" = type { [1 x i8], i8 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, char>::Break" = type { %"core::result::Result<core::convert::Infallible, ()>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, &str>::Break" = type { %"core::result::Result<core::convert::Infallible, ()>::Err" }
%"core::result::Result<usize, core::fmt::Error>::Ok" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Break" = type { [8 x i8], %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, bool>::Break" = type { %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, u8>::Continue" = type { [1 x i8], i8 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, u8>::Break" = type { [1 x i8], %"core::result::Result<core::convert::Infallible, ()>::Err" }
%"core::str::pattern::StrSearcherImpl::TwoWay" = type { [1 x i64], %"core::str::pattern::TwoWaySearcher" }
%"core::str::pattern::StrSearcherImpl::Empty" = type { [1 x i64], %"core::str::pattern::EmptyNeedle" }
%"core::str::pattern::EmptyNeedle" = type { i64, i64, i8, i8, i8, [5 x i8] }
%"core::ops::control_flow::ControlFlow<()>::Continue" = type { [1 x i8], {} }
%"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break" = type { {} }
%"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Continue" = type { [1 x i8], {} }
%"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Break" = type { [1 x i8], %"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break" }
%"legacy::Demangle" = type { { [0 x i8]*, i64 }, i64 }
%"core::result::Result<(legacy::Demangle, &str), ()>::Ok" = type { { %"legacy::Demangle", { [0 x i8]*, i64 } } }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:67:26: 77:6]" = type {}
%"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Ok" = type { [1 x i64], { { i8*, i64 }, { [0 x i8]*, i64 } } }
%"v0::Ident" = type { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }
%"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>" = type { {}*, [4 x i64] }
%"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>::Some" = type { %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:308:28: 308:85]" = type {}
%"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<core::option::Option<char>, v0::ParseError>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<v0::Ident, v0::ParseError>::Ok" = type { [1 x i64], %"v0::Ident" }
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1164:49: 1164:78]" = type {}
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1158:37: 1158:66]" = type {}
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1177:45: 1177:74]" = type {}
%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1183:29: 1189:30]" = type {}
%Demangle = type { %"core::option::Option<DemangleStyle>", { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }
%"DemangleStyle::Legacy" = type { [1 x i64], %"legacy::Demangle" }
%"core::option::Option<DemangleStyle>::Some" = type { %DemangleStyle }
%"DemangleStyle::V0" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<Demangle, TryDemangleError>" = type { i64, [7 x i64] }
%"core::result::Result<Demangle, TryDemangleError>::Ok" = type { %Demangle }
%TryDemangleError = type { {} }
%"core::fmt::builders::DebugStruct" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }

@alloc1049 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"()" }>, align 1
@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }> <{ i8* bitcast (void (%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"**)* @"_ZN4core3ptr110drop_in_place$LT$$RF$mut$u20$rustc_demangle..SizeLimitedFmtAdapter$LT$$RF$mut$u20$core..fmt..Formatter$GT$$GT$17h32c29e7e94e484f4E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"**, [0 x i8]*, i64)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hfe67b1bf963d4d1dE" to i8*), i8* bitcast (i1 (%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"**, i32)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h3d8ef58609487c38E" to i8*), i8* bitcast (i1 (%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"**, %"core::fmt::Arguments"*)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h3861919a25c5869dE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h95ec42827974f6edE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he28acc37713f9034E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc740 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc741 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/fmt/mod.rs" }>, align 1
@alloc742 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc741, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00k\01\00\00\0D\00\00\00" }>, align 8
@alloc743 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/ops/function.rs" }>, align 1
@alloc744 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc743, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\96\00\00\00\05\00\00\00" }>, align 8
@alloc745 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/ptr/mod.rs" }>, align 1
@alloc746 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc745, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\BE\02\00\00\0D\00\00\00" }>, align 8
@alloc751 = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/str/validations.rs" }>, align 1
@alloc748 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc751, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\001\00\00\00$\00\00\00" }>, align 8
@alloc750 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc751, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\008\00\00\00(\00\00\00" }>, align 8
@alloc752 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc751, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00@\00\00\00,\00\00\00" }>, align 8
@alloc805 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/str/pattern.rs" }>, align 1
@alloc754 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc805, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8C\05\00\00\14\00\00\00" }>, align 8
@alloc756 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc805, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8C\05\00\00!\00\00\00" }>, align 8
@alloc758 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc805, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\98\05\00\00\14\00\00\00" }>, align 8
@alloc760 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc805, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\98\05\00\00!\00\00\00" }>, align 8
@alloc768 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/char/methods.rs" }>, align 1
@alloc762 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc768, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00{\06\00\00\16\00\00\00" }>, align 8
@alloc764 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc768, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\95\06\00\00\0A\00\00\00" }>, align 8
@alloc211 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc213 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc214 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc212 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc211, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc213, i32 0, i32 0, i32 0), [8 x i8] c"\13\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc214, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc766 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc768, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\8E\06\00\00\0E\00\00\00" }>, align 8
@0 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"\01\01\01" }>, align 1
@alloc767 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"to_digit: radix is too high (maximum 36)" }>, align 1
@alloc769 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc768, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00V\01\00\00\09\00\00\00" }>, align 8
@alloc225 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc652 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1
@alloc775 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/slice/mod.rs" }>, align 1
@alloc771 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc775, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00a\08\00\00'\00\00\00" }>, align 8
@alloc565 = private unnamed_addr constant <{ [8 x i8] }> zeroinitializer, align 8
@alloc773 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc775, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00_\03\00\00\09\00\00\00" }>, align 8
@alloc774 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@alloc776 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc775, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00\E1\05\00\00\09\00\00\00" }>, align 8
@alloc807 = private unnamed_addr constant <{ [78 x i8] }> <{ [78 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/slice/iter.rs" }>, align 1
@alloc778 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc807, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00\B7\06\00\00\13\00\00\00" }>, align 8
@str.2 = internal constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero"
@alloc779 = private unnamed_addr constant <{ [74 x i8] }> <{ [74 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/option.rs" }>, align 1
@alloc780 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc779, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\96\05\00\00 \00\00\00" }>, align 8
@alloc783 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"core::fmt::Error"*)* @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17h8cd524f8b66bd7ecE" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::fmt::Error"*, %"core::fmt::Formatter"*)* @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17ha6e04a2ac8dde238E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.4 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%SizeLimitExhausted*)* @"_ZN4core3ptr55drop_in_place$LT$rustc_demangle..SizeLimitExhausted$GT$17heaaa27219bc13834E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%SizeLimitExhausted*, %"core::fmt::Formatter"*)* @"_ZN71_$LT$rustc_demangle..SizeLimitExhausted$u20$as$u20$core..fmt..Debug$GT$3fmt17hd6a254d6850695d3E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc794 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.5 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({}*)* @"_ZN4core3ptr29drop_in_place$LT$$LP$$RP$$GT$17h0bf96195fa147c85E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 ({}*, %"core::fmt::Formatter"*)* @"_ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h6d5a5d0d0e1475bdE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.6 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8*)* @"_ZN4core3ptr52drop_in_place$LT$core..num..error..ParseIntError$GT$17h61cda07192154b56E" to i8*), [16 x i8] c"\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (i8*, %"core::fmt::Formatter"*)* @"_ZN68_$LT$core..num..error..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17ha670dd37272806deE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.7 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17haee6c0d43db925ccE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha336bf51f8473654E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc801 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/iter/traits/accum.rs" }>, align 1
@alloc802 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc801, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\8D\00\00\00\01\00\00\00" }>, align 8
@str.8 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc804 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc805, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\1C\04\00\00\17\00\00\00" }>, align 8
@alloc806 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc805, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\B7\01\00\00&\00\00\00" }>, align 8
@alloc808 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc807, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00\86\00\00\00\01\00\00\00" }>, align 8
@alloc809 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"_ZN" }>, align 1
@alloc900 = private unnamed_addr constant <{ [92 x i8] }> <{ [92 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs" }>, align 1
@alloc811 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\006\00\00\00\0A\00\00\00" }>, align 8
@alloc812 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"ZN" }>, align 1
@alloc814 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00:\00\00\00\0A\00\00\00" }>, align 8
@alloc815 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"__ZN" }>, align 1
@alloc817 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00=\00\00\00\0A\00\00\00" }>, align 8
@alloc819 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00I\00\00\00\11\00\00\00" }>, align 8
@alloc821 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00[\00\00\00\11\00\00\00" }>, align 8
@alloc823 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00^\00\00\00\09\00\00\00" }>, align 8
@alloc825 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00Q\00\00\00\13\00\00\00" }>, align 8
@alloc827 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00U\00\00\00\11\00\00\00" }>, align 8
@alloc829 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00f\00\00\00\1B\00\00\00" }>, align 8
@alloc831 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00o\00\00\00'\00\00\00" }>, align 8
@alloc833 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00p\00\00\00\19\00\00\00" }>, align 8
@alloc835 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00r\00\00\00$\00\00\00" }>, align 8
@str.9 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc837 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00r\00\00\00\1C\00\00\00" }>, align 8
@alloc839 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00r\00\00\00H\00\00\00" }>, align 8
@alloc841 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00s\00\00\00\16\00\00\00" }>, align 8
@alloc843 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00t\00\00\00\15\00\00\00" }>, align 8
@alloc845 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00w\00\00\00!\00\00\00" }>, align 8
@alloc1257 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"::" }>, align 1
@alloc848 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00{\00\00\00\11\00\00\00" }>, align 8
@alloc849 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"_$" }>, align 1
@alloc851 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00~\00\00\00\19\00\00\00" }>, align 8
@alloc853 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\82\00\00\00(\00\00\00" }>, align 8
@alloc854 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"." }>, align 1
@alloc856 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\86\00\00\00\19\00\00\00" }>, align 8
@alloc858 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\87\00\00\00!\00\00\00" }>, align 8
@alloc861 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\83\00\00\00\19\00\00\00" }>, align 8
@alloc863 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\84\00\00\00!\00\00\00" }>, align 8
@alloc865 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\8A\00\00\00E\00\00\00" }>, align 8
@alloc867 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\8B\00\00\00\1B\00\00\00" }>, align 8
@alloc869 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\8B\00\00\000\00\00\00" }>, align 8
@alloc871 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\8B\00\00\00+\00\00\00" }>, align 8
@alloc872 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"SP" }>, align 1
@alloc873 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"@" }>, align 1
@alloc874 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"BP" }>, align 1
@alloc1514 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"*" }>, align 1
@alloc876 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"RF" }>, align 1
@alloc1504 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"&" }>, align 1
@alloc878 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"LT" }>, align 1
@alloc1419 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"<" }>, align 1
@alloc880 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"GT" }>, align 1
@alloc1435 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c">" }>, align 1
@alloc882 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"LP" }>, align 1
@alloc1477 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"(" }>, align 1
@alloc884 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"RP" }>, align 1
@alloc1486 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c")" }>, align 1
@alloc1360 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"C" }>, align 1
@alloc1483 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"," }>, align 1
@alloc889 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\B1\00\00\00\15\00\00\00" }>, align 8
@alloc891 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\9D\00\00\00/\00\00\00" }>, align 8
@alloc893 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\A8\00\00\00)\00\00\00" }>, align 8
@alloc895 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\BA\00\00\00\0D\00\00\00" }>, align 8
@alloc897 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\B4\00\00\00\22\00\00\00" }>, align 8
@alloc899 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\B4\00\00\00\15\00\00\00" }>, align 8
@alloc901 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc900, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00\B5\00\00\00\1D\00\00\00" }>, align 8
@alloc902 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"_R" }>, align 1
@alloc1579 = private unnamed_addr constant <{ [88 x i8] }> <{ [88 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs" }>, align 1
@alloc904 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00+\00\00\00\12\00\00\00" }>, align 8
@alloc906 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00/\00\00\00\12\00\00\00" }>, align 8
@alloc907 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"__R" }>, align 1
@alloc909 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\002\00\00\00\12\00\00\00" }>, align 8
@alloc911 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\008\00\00\00\0B\00\00\00" }>, align 8
@alloc913 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00S\00\00\00\0E\00\00\00" }>, align 8
@alloc915 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00W\00\00\00\12\00\00\00" }>, align 8
@alloc917 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00Z\00\00\00\1E\00\00\00" }>, align 8
@alloc1121 = private unnamed_addr constant <{ [61 x i8] }> <{ [61 x i8] c"`fmt::Error`s should be impossible without a `fmt::Formatter`" }>, align 1
@alloc920 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00K\00\00\00\0E\00\00\00" }>, align 8
@alloc922 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\8F\00\00\00\15\00\00\00" }>, align 8
@alloc924 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00~\00\00\00\0D\00\00\00" }>, align 8
@alloc926 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\82\00\00\00\0D\00\00\00" }>, align 8
@alloc928 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\85\00\00\00\1E\00\00\00" }>, align 8
@alloc930 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\85\00\00\00\1A\00\00\00" }>, align 8
@alloc932 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\85\00\00\00\11\00\00\00" }>, align 8
@alloc934 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\86\00\00\00\11\00\00\00" }>, align 8
@alloc936 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\8A\00\00\00\0D\00\00\00" }>, align 8
@alloc938 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A5\00\00\00\0D\00\00\00" }>, align 8
@alloc940 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A6\00\00\00\0D\00\00\00" }>, align 8
@alloc942 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\BB\00\00\00\11\00\00\00" }>, align 8
@alloc944 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\BF\00\00\00.\00\00\00" }>, align 8
@alloc946 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C0\00\00\003\00\00\00" }>, align 8
@alloc948 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C0\00\00\00.\00\00\00" }>, align 8
@alloc950 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C4\00\00\00+\00\00\00" }>, align 8
@alloc952 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C4\00\00\00\19\00\00\00" }>, align 8
@alloc954 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\CC\00\00\00\0D\00\00\00" }>, align 8
@alloc956 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\CD\00\00\00\11\00\00\00" }>, align 8
@alloc958 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\CE\00\00\00\1F\00\00\00" }>, align 8
@str.a = internal constant [25 x i8] c"attempt to divide by zero"
@alloc960 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\CE\00\00\00\11\00\00\00" }>, align 8
@alloc962 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\CF\00\00\00\0D\00\00\00" }>, align 8
@alloc964 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D3\00\00\00\11\00\00\00" }>, align 8
@alloc966 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D9\00\00\00\0D\00\00\00" }>, align 8
@alloc968 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\DA\00\00\00\0D\00\00\00" }>, align 8
@alloc970 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E2\00\00\00\0D\00\00\00" }>, align 8
@alloc972 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E5\00\00\00\16\00\00\00" }>, align 8
@alloc974 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E5\00\00\00\0D\00\00\00" }>, align 8
@alloc976 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E7\00\00\00\1C\00\00\00" }>, align 8
@alloc978 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E7\00\00\00\1B\00\00\00" }>, align 8
@str.b = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc980 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E8\00\00\00\1A\00\00\00" }>, align 8
@alloc982 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E8\00\00\00\11\00\00\00" }>, align 8
@alloc984 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E9\00\00\00\11\00\00\00" }>, align 8
@alloc986 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\EB\00\00\00\1A\00\00\00" }>, align 8
@alloc988 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\EB\00\00\00\19\00\00\00" }>, align 8
@alloc990 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\EB\00\00\00\18\00\00\00" }>, align 8
@alloc992 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\EB\00\00\007\00\00\00" }>, align 8
@alloc994 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\EB\00\00\00\14\00\00\00" }>, align 8
@alloc996 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C8\00\00\00#\00\00\00" }>, align 8
@alloc998 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C8\00\00\00\15\00\00\00" }>, align 8
@alloc1000 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\F4\00\00\00\11\00\00\00" }>, align 8
@alloc1001 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"punycode{" }>, align 1
@alloc1003 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\FA\00\00\00\11\00\00\00" }>, align 8
@alloc1005 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\FF\00\00\00\15\00\00\00" }>, align 8
@alloc1537 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"-" }>, align 1
@alloc1008 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\00\01\00\00\15\00\00\00" }>, align 8
@alloc1010 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\02\01\00\00\11\00\00\00" }>, align 8
@alloc1547 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"}" }>, align 1
@alloc1012 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"0" }>, align 1
@alloc1014 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\1E\01\00\001\00\00\00" }>, align 8
@alloc1015 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc1017 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\001\01\00\00\16\00\00\00" }>, align 8
@alloc1019 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\004\01\00\00G\00\00\00" }>, align 8
@alloc1021 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00N\01\00\00 \00\00\00" }>, align 8
@alloc1023 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00O\01\00\00!\00\00\00" }>, align 8
@alloc1025 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00Q\01\00\00\1F\00\00\00" }>, align 8
@alloc1027 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00Q\01\00\00\15\00\00\00" }>, align 8
@alloc1029 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00U\01\00\00\19\00\00\00" }>, align 8
@alloc569 = private unnamed_addr constant <{ [57 x i8] }> <{ [57 x i8] c"internal error: entered unreachable code: str::from_utf8(" }>, align 1
@alloc571 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c") = " }>, align 1
@alloc572 = private unnamed_addr constant <{ [34 x i8] }> <{ [34 x i8] c" was expected to have 1 char, but " }>, align 1
@alloc573 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c" chars were found" }>, align 1
@alloc570 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [57 x i8] }>, <{ [57 x i8] }>* @alloc569, i32 0, i32 0, i32 0), [8 x i8] c"9\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc571, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [34 x i8] }>, <{ [34 x i8] }>* @alloc572, i32 0, i32 0, i32 0), [8 x i8] c"\22\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [17 x i8] }>, <{ [17 x i8] }>* @alloc573, i32 0, i32 0, i32 0), [8 x i8] c"\11\00\00\00\00\00\00\00" }>, align 8
@alloc1031 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\\\01\00\00\1A\00\00\00" }>, align 8
@alloc1032 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"..." }>, align 1
@alloc1544 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"_" }>, align 1
@alloc1034 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"!" }>, align 1
@alloc1035 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"f64" }>, align 1
@alloc1036 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"f32" }>, align 1
@alloc1037 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"usize" }>, align 1
@alloc1038 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"u128" }>, align 1
@alloc1039 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"u64" }>, align 1
@alloc1040 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"u32" }>, align 1
@alloc1041 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"u16" }>, align 1
@alloc1042 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"u8" }>, align 1
@alloc1043 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"isize" }>, align 1
@alloc1044 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"i128" }>, align 1
@alloc1045 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"i64" }>, align 1
@alloc1046 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"i32" }>, align 1
@alloc1047 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"i16" }>, align 1
@alloc1048 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"i8" }>, align 1
@alloc1050 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"str" }>, align 1
@alloc1051 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"char" }>, align 1
@alloc1052 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"bool" }>, align 1
@alloc1054 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\96\01\00\00\09\00\00\00" }>, align 8
@alloc1056 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\9F\01\00\00\09\00\00\00" }>, align 8
@alloc1058 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A8\01\00\00\0D\00\00\00" }>, align 8
@alloc1060 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B0\01\00\00\11\00\00\00" }>, align 8
@alloc1062 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B1\01\00\00\09\00\00\00" }>, align 8
@alloc1064 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B8\01\00\00\13\00\00\00" }>, align 8
@alloc1066 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\BF\01\00\00'\00\00\00" }>, align 8
@alloc1068 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\BF\01\00\00\17\00\00\00" }>, align 8
@alloc1070 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C5\01\00\00&\00\00\00" }>, align 8
@alloc1072 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C8\01\00\00\09\00\00\00" }>, align 8
@alloc1074 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\CE\01\00\00&\00\00\00" }>, align 8
@alloc1076 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\CF\01\00\00+\00\00\00" }>, align 8
@alloc1078 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\CF\01\00\00&\00\00\00" }>, align 8
@alloc1080 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D0\01\00\000\00\00\00" }>, align 8
@alloc1082 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D0\01\00\00&\00\00\00" }>, align 8
@alloc1084 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D3\01\00\00\09\00\00\00" }>, align 8
@alloc1086 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\DE\01\00\00\15\00\00\00" }>, align 8
@alloc1088 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\DF\01\00\00\11\00\00\00" }>, align 8
@alloc1090 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E0\01\00\00\11\00\00\00" }>, align 8
@alloc1092 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E9\01\00\00\09\00\00\00" }>, align 8
@alloc1094 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\F1\01\00\00\0F\00\00\00" }>, align 8
@alloc1096 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\FD\01\00\00\17\00\00\00" }>, align 8
@alloc1098 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\FE\01\00\00\11\00\00\00" }>, align 8
@alloc1100 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\07\02\00\00\09\00\00\00" }>, align 8
@alloc1102 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\0D\02\00\00\17\00\00\00" }>, align 8
@alloc1104 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\10\02\00\00\17\00\00\00" }>, align 8
@alloc1106 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\11\02\00\00\17\00\00\00" }>, align 8
@alloc1108 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\19\02\00\00\15\00\00\00" }>, align 8
@alloc1110 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\1E\02\00\00\16\00\00\00" }>, align 8
@alloc1112 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00#\02\00\00\1D\00\00\00" }>, align 8
@alloc1114 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00$\02\00\00&\00\00\00" }>, align 8
@alloc1116 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00$\02\00\00 \00\00\00" }>, align 8
@alloc703 = private unnamed_addr constant <{ [0 x i8] }> zeroinitializer, align 1
@alloc1119 = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"{recursion limit reached}" }>, align 1
@alloc1120 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"{invalid syntax}" }>, align 1
@alloc454 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc1123 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\87\02\00\00\11\00\00\00" }>, align 8
@alloc1576 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"?" }>, align 1
@alloc1126 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\92\02\00\00\1E\00\00\00" }>, align 8
@alloc1131 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A8\02\00\00\0D\00\00\00" }>, align 8
@alloc1133 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B8\02\00\00\0D\00\00\00" }>, align 8
@alloc1135 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\BD\02\00\00\15\00\00\00" }>, align 8
@alloc1137 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C2\02\00\00\15\00\00\00" }>, align 8
@alloc1139 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C5\02\00\00\0D\00\00\00" }>, align 8
@alloc1140 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"'" }>, align 1
@alloc1142 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D3\02\00\00\09\00\00\00" }>, align 8
@alloc1144 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\DB\02\00\00\1D\00\00\00" }>, align 8
@alloc1147 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\DF\02\00\00\15\00\00\00" }>, align 8
@alloc1149 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E3\02\00\00\15\00\00\00" }>, align 8
@alloc1153 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\EE\02\00\00\1F\00\00\00" }>, align 8
@alloc1170 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"for<" }>, align 1
@alloc1156 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\F6\02\00\00\0D\00\00\00" }>, align 8
@alloc1494 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c", " }>, align 1
@alloc1159 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\F9\02\00\00\15\00\00\00" }>, align 8
@alloc1161 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\FB\02\00\00\11\00\00\00" }>, align 8
@alloc1163 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\FC\02\00\00\11\00\00\00" }>, align 8
@alloc1172 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"> " }>, align 1
@alloc1166 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\FE\02\00\00\0D\00\00\00" }>, align 8
@alloc1168 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\04\03\00\00\09\00\00\00" }>, align 8
@alloc1174 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\13\03\00\00\11\00\00\00" }>, align 8
@alloc1176 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\15\03\00\00\0D\00\00\00" }>, align 8
@alloc1178 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\16\03\00\00\0D\00\00\00" }>, align 8
@alloc1181 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\1C\03\00\00\09\00\00\00" }>, align 8
@alloc1184 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\1E\03\00\00\13\00\00\00" }>, align 8
@alloc1186 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00t\03\00\00\12\00\00\00" }>, align 8
@alloc1188 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00r\03\00\00\11\00\00\00" }>, align 8
@alloc1190 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00i\03\00\00\11\00\00\00" }>, align 8
@alloc1193 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00k\03\00\00\15\00\00\00" }>, align 8
@alloc1196 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00m\03\00\00\11\00\00\00" }>, align 8
@alloc1199 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00n\03\00\00\11\00\00\00" }>, align 8
@alloc1202 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00o\03\00\00\11\00\00\00" }>, align 8
@alloc1205 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\\\03\00\00\15\00\00\00" }>, align 8
@alloc1208 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00`\03\00\00\11\00\00\00" }>, align 8
@alloc1210 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00a\03\00\00\11\00\00\00" }>, align 8
@alloc1211 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c" as " }>, align 1
@alloc1213 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00c\03\00\00\15\00\00\00" }>, align 8
@alloc1215 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00d\03\00\00\15\00\00\00" }>, align 8
@alloc1218 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00f\03\00\00\11\00\00\00" }>, align 8
@alloc1221 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00.\03\00\00\1A\00\00\00" }>, align 8
@alloc1223 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\000\03\00\00\11\00\00\00" }>, align 8
@alloc1226 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\008\03\00\00\15\00\00\00" }>, align 8
@alloc1229 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00;\03\00\00\1B\00\00\00" }>, align 8
@alloc1232 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00<\03\00\00\1C\00\00\00" }>, align 8
@alloc1233 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"::{" }>, align 1
@alloc1235 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00A\03\00\00\19\00\00\00" }>, align 8
@alloc1237 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00E\03\00\00\22\00\00\00" }>, align 8
@alloc1238 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"shim" }>, align 1
@alloc1240 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00D\03\00\00$\00\00\00" }>, align 8
@alloc1241 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"closure" }>, align 1
@alloc1243 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00C\03\00\00$\00\00\00" }>, align 8
@alloc1244 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c":" }>, align 1
@alloc1246 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00H\03\00\00\1D\00\00\00" }>, align 8
@alloc1248 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00I\03\00\00\1D\00\00\00" }>, align 8
@alloc1249 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"#" }>, align 1
@alloc1251 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00K\03\00\00\19\00\00\00" }>, align 8
@alloc1253 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00L\03\00\00\19\00\00\00" }>, align 8
@alloc1256 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00M\03\00\00\19\00\00\00" }>, align 8
@alloc1259 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00S\03\00\00\1D\00\00\00" }>, align 8
@alloc1261 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00T\03\00\00\1D\00\00\00" }>, align 8
@alloc1264 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00!\03\00\00\1B\00\00\00" }>, align 8
@alloc1267 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\22\03\00\00\1C\00\00\00" }>, align 8
@alloc1269 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00$\03\00\00\11\00\00\00" }>, align 8
@alloc1491 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"[" }>, align 1
@alloc1272 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00'\03\00\00\19\00\00\00" }>, align 8
@alloc1274 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00(\03\00\00\19\00\00\00" }>, align 8
@alloc1497 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"]" }>, align 1
@alloc1277 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00)\03\00\00\19\00\00\00" }>, align 8
@alloc1280 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00}\03\00\00\16\00\00\00" }>, align 8
@alloc1283 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\87\03\00\00\13\00\00\00" }>, align 8
@alloc1286 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\8D\03\00\00\09\00\00\00" }>, align 8
@alloc1288 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\00\04\00\00\11\00\00\00" }>, align 8
@alloc1290 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\FB\03\00\00\11\00\00\00" }>, align 8
@alloc1291 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"dyn " }>, align 1
@alloc1293 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\EB\03\00\00\11\00\00\00" }>, align 8
@alloc1295 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\EC\03\00\00\11\00\00\00" }>, align 8
@alloc1297 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\F2\03\00\00\15\00\00\00" }>, align 8
@alloc1300 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\F4\03\00\00\1A\00\00\00" }>, align 8
@alloc1398 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c" + " }>, align 1
@alloc1303 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\F6\03\00\00\15\00\00\00" }>, align 8
@alloc1305 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\F7\03\00\00\15\00\00\00" }>, align 8
@alloc1307 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\BA\03\00\00\15\00\00\00" }>, align 8
@alloc1310 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B3\03\00\00\11\00\00\00" }>, align 8
@alloc1313 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B4\03\00\00\1D\00\00\00" }>, align 8
@alloc1316 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B6\03\00\00\15\00\00\00" }>, align 8
@alloc1319 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B8\03\00\00\11\00\00\00" }>, align 8
@alloc1322 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\AA\03\00\00\11\00\00\00" }>, align 8
@alloc1324 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\AB\03\00\00\11\00\00\00" }>, align 8
@alloc1325 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"; " }>, align 1
@alloc1327 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\AD\03\00\00\15\00\00\00" }>, align 8
@alloc1329 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\AE\03\00\00\15\00\00\00" }>, align 8
@alloc1332 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B0\03\00\00\11\00\00\00" }>, align 8
@alloc1335 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A0\03\00\00\11\00\00\00" }>, align 8
@alloc1507 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"mut " }>, align 1
@alloc1338 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A2\03\00\00\15\00\00\00" }>, align 8
@alloc1339 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"const " }>, align 1
@alloc1341 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A4\03\00\00\15\00\00\00" }>, align 8
@alloc1343 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A6\03\00\00\11\00\00\00" }>, align 8
@alloc1346 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\91\03\00\00\11\00\00\00" }>, align 8
@alloc1349 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\93\03\00\00\1E\00\00\00" }>, align 8
@alloc1351 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\95\03\00\00\19\00\00\00" }>, align 8
@alloc1352 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c" " }>, align 1
@alloc1354 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\96\03\00\00\19\00\00\00" }>, align 8
@alloc1357 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\9A\03\00\00\15\00\00\00" }>, align 8
@alloc1359 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\9C\03\00\00\11\00\00\00" }>, align 8
@alloc1363 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C0\03\00\00#\00\00\00" }>, align 8
@alloc1365 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C2\03\00\00\1D\00\00\00" }>, align 8
@alloc1366 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"unsafe " }>, align 1
@alloc1368 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\CB\03\00\00\15\00\00\00" }>, align 8
@alloc1369 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"extern \22" }>, align 1
@alloc1371 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\CF\03\00\00\15\00\00\00" }>, align 8
@alloc1373 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D4\03\00\00-\00\00\00" }>, align 8
@alloc1375 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D4\03\00\00\15\00\00\00" }>, align 8
@alloc1378 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D6\03\00\00\19\00\00\00" }>, align 8
@alloc1380 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D7\03\00\00\19\00\00\00" }>, align 8
@alloc1381 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\22 " }>, align 1
@alloc1383 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\DA\03\00\00\15\00\00\00" }>, align 8
@alloc1384 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"fn(" }>, align 1
@alloc1386 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\DD\03\00\00\11\00\00\00" }>, align 8
@alloc1389 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\DE\03\00\00\11\00\00\00" }>, align 8
@alloc1392 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\DF\03\00\00\11\00\00\00" }>, align 8
@alloc1393 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c" -> " }>, align 1
@alloc1395 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E4\03\00\00\15\00\00\00" }>, align 8
@alloc1397 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\E5\03\00\00\15\00\00\00" }>, align 8
@alloc1400 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\ED\03\00\00\15\00\00\00" }>, align 8
@alloc1402 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\FF\03\00\006\00\00\00" }>, align 8
@alloc1404 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\12\04\00\00\0D\00\00\00" }>, align 8
@alloc1406 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\18\04\00\00\0D\00\00\00" }>, align 8
@alloc1409 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\19\04\00\00\0D\00\00\00" }>, align 8
@alloc1412 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\1A\04\00\00\0D\00\00\00" }>, align 8
@alloc1414 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\1D\04\00\00\0D\00\00\00" }>, align 8
@alloc1416 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\13\04\00\00\18\00\00\00" }>, align 8
@alloc1418 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00#\04\00\00\18\00\00\00" }>, align 8
@alloc1421 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00'\04\00\00\11\00\00\00" }>, align 8
@alloc1424 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00*\04\00\00\11\00\00\00" }>, align 8
@alloc1427 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00-\04\00\00\18\00\00\00" }>, align 8
@alloc1429 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00.\04\00\00\0D\00\00\00" }>, align 8
@alloc1430 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c" = " }>, align 1
@alloc1432 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00/\04\00\00\0D\00\00\00" }>, align 8
@alloc1434 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\000\04\00\00\0D\00\00\00" }>, align 8
@alloc1437 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\004\04\00\00\0D\00\00\00" }>, align 8
@alloc1440 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00;\04\00\00\13\00\00\00" }>, align 8
@alloc1443 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00=\04\00\00\09\00\00\00" }>, align 8
@alloc1445 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B0\04\00\00\12\00\00\00" }>, align 8
@alloc1447 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\AE\04\00\00\11\00\00\00" }>, align 8
@alloc1449 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\93\04\00\00\11\00\00\00" }>, align 8
@alloc1451 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\94\04\00\00\11\00\00\00" }>, align 8
@alloc1454 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\95\04\00\00\17\00\00\00" }>, align 8
@alloc1456 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\AA\04\00\00\1A\00\00\00" }>, align 8
@alloc1457 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c" { " }>, align 1
@alloc1459 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\9D\04\00\00\19\00\00\00" }>, align 8
@alloc1462 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\9E\04\00\00\19\00\00\00" }>, align 8
@alloc1463 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c" }" }>, align 1
@alloc1465 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A8\04\00\00\19\00\00\00" }>, align 8
@alloc1468 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\98\04\00\00\19\00\00\00" }>, align 8
@alloc1471 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\99\04\00\00\19\00\00\00" }>, align 8
@alloc1474 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\9A\04\00\00\19\00\00\00" }>, align 8
@alloc1476 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\8A\04\00\00\11\00\00\00" }>, align 8
@alloc1479 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\8B\04\00\00\11\00\00\00" }>, align 8
@alloc1482 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\8C\04\00\00\1D\00\00\00" }>, align 8
@alloc1485 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\8E\04\00\00\15\00\00\00" }>, align 8
@alloc1488 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\90\04\00\00\11\00\00\00" }>, align 8
@alloc1490 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\84\04\00\00\11\00\00\00" }>, align 8
@alloc1493 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\85\04\00\00\11\00\00\00" }>, align 8
@alloc1496 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\86\04\00\00\11\00\00\00" }>, align 8
@alloc1499 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\87\04\00\00\11\00\00\00" }>, align 8
@alloc1501 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00y\04\00\00\15\00\00\00" }>, align 8
@alloc1503 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00{\04\00\00\15\00\00\00" }>, align 8
@alloc1506 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00|\04\00\00\15\00\00\00" }>, align 8
@alloc1509 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00~\04\00\00\19\00\00\00" }>, align 8
@alloc1511 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\80\04\00\00\15\00\00\00" }>, align 8
@alloc1513 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00o\04\00\00\11\00\00\00" }>, align 8
@alloc1516 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00p\04\00\00\11\00\00\00" }>, align 8
@alloc1518 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00r\04\00\00\11\00\00\00" }>, align 8
@alloc1521 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00b\04\00\00\22\00\00\00" }>, align 8
@alloc1523 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00g\04\00\00 \00\00\00" }>, align 8
@alloc1525 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00h\04\00\00\1D\00\00\00" }>, align 8
@alloc1528 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\\\04\00\00\1B\00\00\00" }>, align 8
@alloc1530 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00_\04\00\00\16\00\00\00" }>, align 8
@alloc1531 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"true" }>, align 1
@alloc1533 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00^\04\00\00\1C\00\00\00" }>, align 8
@alloc1534 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"false" }>, align 1
@alloc1536 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00]\04\00\00\1C\00\00\00" }>, align 8
@alloc1539 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00W\04\00\00\15\00\00\00" }>, align 8
@alloc1541 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00Z\04\00\00\11\00\00\00" }>, align 8
@alloc1543 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00T\04\00\008\00\00\00" }>, align 8
@alloc1546 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00Q\04\00\00\15\00\00\00" }>, align 8
@alloc1549 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\B4\04\00\00\0D\00\00\00" }>, align 8
@alloc1550 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"{" }>, align 1
@alloc1553 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A0\04\00\00!\00\00\00" }>, align 8
@alloc1556 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A1\04\00\00,\00\00\00" }>, align 8
@alloc1558 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A2\04\00\00!\00\00\00" }>, align 8
@alloc1559 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c": " }>, align 1
@alloc1561 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\A3\04\00\00!\00\00\00" }>, align 8
@alloc1564 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\BC\04\00\00\13\00\00\00" }>, align 8
@alloc1566 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\BF\04\00\00\18\00\00\00" }>, align 8
@alloc1567 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"0x" }>, align 1
@alloc1569 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C3\04\00\00\11\00\00\00" }>, align 8
@alloc1571 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\C4\04\00\00\11\00\00\00" }>, align 8
@alloc1573 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\CA\04\00\00-\00\00\00" }>, align 8
@alloc1575 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\CB\04\00\00\11\00\00\00" }>, align 8
@alloc1578 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D3\04\00\00\0F\00\00\00" }>, align 8
@alloc1580 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [88 x i8] }>, <{ [88 x i8] }>* @alloc1579, i32 0, i32 0, i32 0), [16 x i8] c"X\00\00\00\00\00\00\00\D5\04\00\00\15\00\00\00" }>, align 8
@alloc1581 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c".llvm." }>, align 1
@alloc1598 = private unnamed_addr constant <{ [89 x i8] }> <{ [89 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs" }>, align 1
@alloc1583 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc1598, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00a\00\00\00\1C\00\00\00" }>, align 8
@alloc1585 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc1598, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00a\00\00\00\1A\00\00\00" }>, align 8
@alloc1587 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc1598, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00h\00\00\00\12\00\00\00" }>, align 8
@alloc704 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc703, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer }>, align 8
@alloc701 = private unnamed_addr constant <{ [56 x i8] }> <{ [56 x i8] c"\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\04\00\00\00\03\00\00\00\00\00\00\00" }>, align 8
@alloc1591 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc1598, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00\0B\01\00\00\19\00\00\00" }>, align 8
@alloc1592 = private unnamed_addr constant <{ [55 x i8] }> <{ [55 x i8] c"`fmt::Error` from `SizeLimitedFmtAdapter` was discarded" }>, align 1
@alloc1594 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc1598, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00\0D\01\00\00\1E\00\00\00" }>, align 8
@alloc1595 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"{size limit reached}" }>, align 1
@alloc1597 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc1598, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00\08\01\00\00:\00\00\00" }>, align 8
@alloc1599 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @alloc1598, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00\F6\00\00\00\15\00\00\00" }>, align 8
@alloc1600 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"RecursedTooDeep" }>, align 1
@alloc1601 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Invalid" }>, align 1
@alloc1602 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"TryDemangleError" }>, align 1
@alloc1603 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"_priv" }>, align 1
@vtable.c = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({}**)* @"_ZN4core3ptr33drop_in_place$LT$$RF$$LP$$RP$$GT$17h6bead8591526a62dE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({}**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h19855dec1d2e6721E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1607 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"SizeLimitExhausted" }>, align 1

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hd668a325c7386fd3E"(i8* nonnull %self.0, i8* %self.1, i64 %init) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca i8, align 1
  store i8 0, i8* %_10, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_10, align 1
  store i8 1, i8* %_9, align 1
; invoke core::iter::adapters::map::map_fold
  invoke void @_ZN4core4iter8adapters3map8map_fold17he16908510340064cE()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  store i8 0, i8* %_9, align 1
; invoke core::iter::traits::iterator::Iterator::fold
  %1 = invoke i64 @_ZN4core4iter6traits8iterator8Iterator4fold17h388560f5fa2e7218E(i8* nonnull %self.0, i8* %self.1, i64 %init)
          to label %bb2 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  %2 = load i8, i8* %_9, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_9, align 1
  store i8 0, i8* %_10, align 1
  ret i64 %1

bb3:                                              ; preds = %bb5, %bb6
  %9 = load i8, i8* %_10, align 1, !range !2
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb7, label %bb4

bb5:                                              ; preds = %bb6
  br label %bb3

bb4:                                              ; preds = %bb7, %bb3
  %11 = bitcast { i8*, i32 }* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb7:                                              ; preds = %bb3
  br label %bb4
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha4c259a589defbc2E"(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_2 = alloca %"core::option::Option<[&u8; 2]>", align 8
  %_3 = bitcast %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* %self to %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"*
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %1 = call i128 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcc6a44cbd1a6ae34E"(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* align 8 dereferenceable(40) %_3)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::option::Option<[&u8; 2]>"* %_2 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]"*
  %4 = bitcast %"core::option::Option<[&u8; 2]>"* %_2 to i128*
  %5 = load i128, i128* %4, align 8
; call core::option::Option<T>::map
  %6 = call { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17he86277a5be7aeb40E"(i128 %5, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]"* nonnull align 1 %_4)
  %7 = extractvalue { i8, i8 } %6, 0
  %8 = trunc i8 %7 to i1
  %9 = extractvalue { i8, i8 } %6, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %10 = zext i1 %8 to i8
  %11 = insertvalue { i8, i8 } undef, i8 %10, 0
  %12 = insertvalue { i8, i8 } %11, i8 %9, 1
  ret { i8, i8 } %12
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb70265196394d8fbE"(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %self to %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"*
; call <core::iter::sources::from_fn::FromFn<F> as core::iter::traits::iterator::Iterator>::next
  %_2 = call i32 @"_ZN104_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h661c98826c4a9066E"(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* align 8 dereferenceable(40) %_3), !range !3
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %self to {}*
; call core::option::Option<T>::map
  %0 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h1f2c8b988a6592deE"(i32 %_2, {}* nonnull align 1 %_4), !range !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %0
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define i128 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcc6a44cbd1a6ae34E"(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %1 = alloca %"core::option::Option<[&u8; 2]>", align 8
  %_3 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %self to %"core::slice::iter::ChunksExact<u8>"*
; call <core::slice::iter::ChunksExact<T> as core::iter::traits::iterator::Iterator>::next
  %2 = call { i8*, i64 } @"_ZN98_$LT$core..slice..iter..ChunksExact$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9627332fef6ec540E"(%"core::slice::iter::ChunksExact<u8>"* align 8 dereferenceable(40) %_3)
  %_2.0 = extractvalue { i8*, i64 } %2, 0
  %_2.1 = extractvalue { i8*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]"*
; call core::option::Option<T>::map
  %3 = call i128 @"_ZN4core6option15Option$LT$T$GT$3map17hd047880ee8307941E"(i8* align 1 %_2.0, i64 %_2.1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]"* nonnull align 1 %_4)
  store i128 %3, i128* %0, align 8
  %4 = bitcast %"core::option::Option<[&u8; 2]>"* %1 to i8*
  %5 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = bitcast %"core::option::Option<[&u8; 2]>"* %1 to i128*
  %7 = load i128, i128* %6, align 8
  ret i128 %7
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define { i8, i8 } @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4ad3eef92d7d3dabE"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h40dc0f323a5db63cE"({ i8*, i8* }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<&T>::copied
  %0 = call { i8, i8 } @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17h309b676e566aa798E"(i8* align 1 dereferenceable_or_null(1) %_2)
  %1 = extractvalue { i8, i8 } %0, 0
  %2 = trunc i8 %1 to i1
  %3 = extractvalue { i8, i8 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = zext i1 %2 to i8
  %5 = insertvalue { i8, i8 } undef, i8 %4, 0
  %6 = insertvalue { i8, i8 } %5, i8 %3, 1
  ret { i8, i8 } %6
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::try_fold
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17haac65196fec9ddd7E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_8, align 1
; invoke core::iter::adapters::copied::copy_try_fold
  invoke void @_ZN4core4iter8adapters6copied13copy_try_fold17h9c3f58e2684465b7E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
; invoke core::iter::traits::iterator::Iterator::try_fold
  %1 = invoke zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17ha30eecd79c35e72dE({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_8, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_8, align 1
  ret i1 %1

bb3:                                              ; preds = %bb4, %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb5
  br label %bb3
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::try_fold
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17hcd5f86bfc466b052E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_8, align 1
; invoke core::iter::adapters::copied::copy_try_fold
  invoke void @_ZN4core4iter8adapters6copied13copy_try_fold17hf85999fda00d8102E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
; invoke core::iter::traits::iterator::Iterator::try_fold
  %1 = invoke zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17he2929a0b0d9e99beE({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_8, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_8, align 1
  ret i1 %1

bb3:                                              ; preds = %bb4, %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb5
  br label %bb3
}

; <core::iter::sources::from_fn::FromFn<F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN104_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h661c98826c4a9066E"(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"*
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
  %0 = call i32 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17hb0130e559dbbf448E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* align 8 dereferenceable(40) %_2), !range !3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h25556194ce50ae0bE"() unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast i8* %0 to %"core::ops::control_flow::ControlFlow<()>::Break"*
  %2 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<()>::Break", %"core::ops::control_flow::ControlFlow<()>::Break"* %1, i32 0, i32 1
  store i8 1, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17he5beb8fd9c52ea86E"(i64 %0) unnamed_addr #1 {
start:
  %1 = alloca { i64, i64 }, align 8
  %residual = alloca i64, align 8
  store i64 %0, i64* %residual, align 8
  %b = load i64, i64* %residual, align 8
  %2 = bitcast { i64, i64 }* %1 to %"core::ops::control_flow::ControlFlow<usize, usize>::Break"*
  %3 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<usize, usize>::Break", %"core::ops::control_flow::ControlFlow<usize, usize>::Break"* %2, i32 0, i32 1
  store i64 %b, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %1 to i64*
  store i64 1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !range !5
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h467c89262274a4b9E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h0bbd403b1603ee00E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_4, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hb9ba4c632b53cefcE(i8* %2, i64 %_7)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h489226e69f670028E"(i64 %self.0, i64 %self.1, [0 x i32]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call i32* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hd1a01c18ddb14691E"([0 x i32]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i32, i32* %_4, i64 %self.0
  store i32* %1, i32** %0, align 8
  %2 = load i32*, i32** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i32]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h3998f53bd43201ccE(i32* %2, i64 %_7)
  %4 = extractvalue { [0 x i32]*, i64 } %3, 0
  %5 = extractvalue { [0 x i32]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %4, 0
  %7 = insertvalue { [0 x i32]*, i64 } %6, i64 %5, 1
  ret { [0 x i32]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he74a773d7d18555fE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = bitcast [0 x i8]* %slice.0 to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, i8* %1, i64 %self.0
  store i8* %2, i8** %0, align 8
  %_3.i = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h8f6819e9b57282a9E(i8* %_3.i, i64 %_7)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hf3e73147d15e1e18E"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %_3 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %_4 = icmp ugt i64 %self.0, %self.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = icmp ugt i64 %self.1, %slice.1
  %1 = zext i1 %_7 to i8
  store i8 %1, i8* %_3, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i8, i8* %_3, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %4 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h467c89262274a4b9E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb6

bb4:                                              ; preds = %bb3
  %5 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %5, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i64 } %10, i64 %9, 1
  ret { i8*, i64 } %11

bb6:                                              ; preds = %bb5
  %12 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  store [0 x i8]* %_13.0, [0 x i8]** %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  store i64 %_13.1, i64* %14, align 8
  br label %bb7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h0b11e7dab6218658E"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_3 = icmp ugt i64 %self.0, %self.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_8 = icmp ugt i64 %self.1, %slice.1
  br i1 %_8, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #12
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h467c89262274a4b9E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_15.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_15.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #12
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_15.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_15.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h81d95c483ba5422cE"(i64 %self.0, i64 %self.1, [0 x i32]* nonnull align 4 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_3 = icmp ugt i64 %self.0, %self.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_8 = icmp ugt i64 %self.1, %slice.1
  br i1 %_8, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #12
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h489226e69f670028E"(i64 %self.0, i64 %self.1, [0 x i32]* %slice.0, i64 %slice.1)
  %_15.0 = extractvalue { [0 x i32]*, i64 } %1, 0
  %_15.1 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #12
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_15.0, 0
  %3 = insertvalue { [0 x i32]*, i64 } %2, i64 %_15.1, 1
  ret { [0 x i32]*, i64 } %3
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h81ec87aaa7bc2bd8E"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_4 = icmp ugt i64 %self.0, %self.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1
  br i1 %_9, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #12
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he74a773d7d18555fE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_18.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_18.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #12
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_18.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_18.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h357f1827470f182bE"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = bitcast { i8*, i8* }* %self to i8**
  %_6 = load i8*, i8** %3, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17haaf9e23b7be33783E"(i8* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 1, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_11 = load i8*, i8** %5, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h50c74e222c8a4850E"(i8* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i8*, i8* }* %self to i8**
  %_15 = load i8*, i8** %6, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_16 = load i8*, i8** %7, align 8
  %_12 = icmp eq i8* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_12.i = load i8*, i8** %8, align 8
  %9 = getelementptr inbounds i8, i8* %_12.i, i64 -1
  store i8* %9, i8** %0, align 8
  %10 = load i8*, i8** %0, align 8
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  store i8* %13, i8** %1, align 8
  %14 = load i8*, i8** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %15 = bitcast i8** %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %16 = load i8*, i8** %2, align 8
  ret i8* %16

bb13:                                             ; preds = %bb12
  store i8* %14, i8** %2, align 8
  br label %bb14
}

; <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::count
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count17h0423f2e00dbb5ed8E"(i8* nonnull %self.0, i8* %self.1) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::count::to_usize
  invoke void @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count8to_usize17hbf5feef0e0837a31E"()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
; invoke core::iter::traits::iterator::Iterator::map
  %1 = invoke { i8*, i8* } @_ZN4core4iter6traits8iterator8Iterator3map17h7302a069922dfdc6E(i8* nonnull %self.0, i8* %self.1)
          to label %bb2 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  %2 = load i8, i8* %_6, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %_2.0 = extractvalue { i8*, i8* } %1, 0
  %_2.1 = extractvalue { i8*, i8* } %1, 1
  store i8 0, i8* %_6, align 1
; call core::iter::traits::iterator::Iterator::sum
  %9 = call i64 @_ZN4core4iter6traits8iterator8Iterator3sum17h28c24620c4f414f5E(i8* nonnull %_2.0, i8* %_2.1)
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %10 = bitcast { i8*, i32 }* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb5:                                              ; preds = %bb6
  br label %bb4

bb3:                                              ; preds = %bb2
  ret i64 %9
}

; <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::count::to_usize
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count8to_usize17hbf5feef0e0837a31E"() unnamed_addr #1 {
start:
  %0 = alloca %"[closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]"* %0 to %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]"*
  ret void
}

; <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::count::to_usize::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count8to_usize28_$u7b$$u7b$closure$u7d$$u7d$17h50a83c589d96a018E"(%"[closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]"* nonnull align 1 %_1, i8* align 1 dereferenceable(1) %0) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_5 = alloca i64*, align 8
  %x = alloca i8*, align 8
  store i8* %0, i8** %x, align 8
  %_4 = bitcast %"[closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]"*
  %2 = bitcast i64** %_5 to i8***
  store i8** %x, i8*** %2, align 8
  %3 = load i64*, i64** %_5, align 8, !nonnull !6
  %4 = bitcast i64* %3 to i8**
; invoke <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{{closure}}
  %_3 = invoke zeroext i1 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count28_$u7b$$u7b$closure$u7d$$u7d$17h1132e69db6debe37E"(%"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]"* nonnull align 1 %_4, i8** align 8 dereferenceable(8) %4)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %5 = icmp ule i1 %_3, true
  call void @llvm.assume(i1 %5)
  %6 = zext i1 %_3 to i64
  br label %bb2

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %12 = bitcast { i8*, i32 }* %1 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17

bb2:                                              ; preds = %bb1
  ret i64 %6
}

; <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2a351a9937e57a3bE"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_2 = alloca { i8, i8 }, align 1
  %0 = alloca { i8, i8 }, align 1
  %_3 = getelementptr inbounds %"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>", %"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* %self, i32 0, i32 1
; call core::option::Option<T>::take
  %1 = call { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$4take17h5e77f130621dfb31E"({ i8, i8 }* align 1 dereferenceable(2) %_3)
  store { i8, i8 } %1, { i8, i8 }* %_2, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i8, i8 }* %_2 to i8*
  %3 = load i8, i8* %2, align 1, !range !7
  %4 = sub i8 %3, 2
  %5 = icmp eq i8 %4, 0
  %_4 = select i1 %5, i64 0, i64 1
  switch i64 %_4, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %_6 = bitcast %"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* %self to { i8*, i8* }*
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
  %6 = call { i8, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h95c99b261dc99a11E"({ i8*, i8* }* align 8 dereferenceable(16) %_6)
  store { i8, i8 } %6, { i8, i8 }* %0, align 1
  br label %bb5

bb4:                                              ; preds = %bb1
  %7 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 0
  %8 = load i8, i8* %7, align 1, !range !2
  %v.0 = trunc i8 %8 to i1
  %9 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 1
  %v.1 = load i8, i8* %9, align 1
  %10 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0
  %11 = zext i1 %v.0 to i8
  store i8 %11, i8* %10, align 1
  %12 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  store i8 %v.1, i8* %12, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = trunc i8 %14 to i1
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i1 %15 to i8
  %19 = insertvalue { i8, i8 } undef, i8 %18, 0
  %20 = insertvalue { i8, i8 } %19, i8 %17, 1
  ret { i8, i8 } %20

bb5:                                              ; preds = %bb2
  br label %bb6
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hd4b10a7eca336a0fE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = bitcast { i64, i64 }* %_3 to i64*
  store i64 0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %self, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %6 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h467c89262274a4b9E"(i64 %3, i64 %5, [0 x i8]* %slice.0, i64 %slice.1)
  %7 = extractvalue { [0 x i8]*, i64 } %6, 0
  %8 = extractvalue { [0 x i8]*, i64 } %6, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %7, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1
  ret { [0 x i8]*, i64 } %10
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h898bc9025950b0e3E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_3 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %self, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %7 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h0b11e7dab6218658E"(i64 %4, i64 %6, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %8 = extractvalue { [0 x i8]*, i64 } %7, 0
  %9 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1
  ret { [0 x i8]*, i64 } %11
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17he41f8beb3101468dE"(i64 %self, [0 x i32]* nonnull align 4 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_3 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %self, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %7 = call { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h81d95c483ba5422cE"(i64 %4, i64 %6, [0 x i32]* nonnull align 4 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %8 = extractvalue { [0 x i32]*, i64 } %7, 0
  %9 = extractvalue { [0 x i32]*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %10 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %8, 0
  %11 = insertvalue { [0 x i32]*, i64 } %10, i64 %9, 1
  ret { [0 x i32]*, i64 } %11
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h80db2fb1cec8524eE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_5 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %self, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %7 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h81ec87aaa7bc2bd8E"(i64 %4, i64 %6, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %9
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hd78d626641d54efcE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %_3 = alloca { i64, i64 }, align 8
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h65ce1de157f6c9dcE"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast { i64, i64 }* %_3 to i64*
  store i64 %self, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %_5, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %6 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h467c89262274a4b9E"(i64 %3, i64 %5, [0 x i8]* %slice.0, i64 %slice.1)
  %7 = extractvalue { [0 x i8]*, i64 } %6, 0
  %8 = extractvalue { [0 x i8]*, i64 } %6, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %7, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1
  ret { [0 x i8]*, i64 } %10
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::exact_size::ExactSizeIterator>::len
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN115_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h2aa66fa1cb4887baE"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = bitcast { i8*, i8* }* %self to i8**
  %start1.i = load i8*, i8** %2, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i)
  %3 = icmp eq i64 1, 0
  br i1 %3, label %bb3.i, label %bb6.i

bb3.i:                                            ; preds = %start
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_9.i = load i8*, i8** %4, align 8
  %_8.i = ptrtoint i8* %_9.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_11.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i)
  %_10.i = ptrtoint i8* %_11.i to i64
  %5 = sub i64 %_8.i, %_10.i
  store i64 %5, i64* %1, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit"

bb6.i:                                            ; preds = %start
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_15.i = load i8*, i8** %6, align 8
  %_14.i = ptrtoint i8* %_15.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i)
  %_16.i = ptrtoint i8* %_17.i to i64
  %7 = sub nuw i64 %_14.i, %_16.i
  store i64 %7, i64* %0, align 8
  %diff.i = load i64, i64* %0, align 8
  %8 = udiv exact i64 %diff.i, 1
  store i64 %8, i64* %1, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit"

"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit": ; preds = %bb6.i, %bb3.i
  %9 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit"
  ret i64 %9
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::double_ended::DoubleEndedIterator>::try_rfold
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN119_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9try_rfold17h30dfd1fcdb585122E"({ i8*, i8* }* align 8 dereferenceable(16) %self, i64 %init) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_8, align 1
; invoke core::iter::adapters::copied::copy_try_fold
  invoke void @_ZN4core4iter8adapters6copied13copy_try_fold17hfc753a28a6068e0dE()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
; invoke core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
  %1 = invoke { i64, i64 } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17h8381a40ea28ce22aE({ i8*, i8* }* align 8 dereferenceable(16) %self, i64 %init)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_8, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  %9 = extractvalue { i64, i64 } %1, 0
  %10 = extractvalue { i64, i64 } %1, 1
  store i8 0, i8* %_8, align 1
  %11 = insertvalue { i64, i64 } undef, i64 %9, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12

bb3:                                              ; preds = %bb4, %bb5
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb4:                                              ; preds = %bb5
  br label %bb3
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h093845971151bc84E"(%"core::result::Result<v0::Ident, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Ident, v0::ParseError>") dereferenceable(40) %0, i1 zeroext %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #1 {
start:
  %residual = alloca i8, align 1
  %3 = zext i1 %1 to i8
  store i8 %3, i8* %residual, align 1
  %4 = load i8, i8* %residual, align 1, !range !2
  %e = trunc i8 %4 to i1
; call <T as core::convert::From<T>>::from
  %_3 = call zeroext i1 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h243d4da6d0107040E"(i1 zeroext %e)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %0 to %"core::result::Result<v0::Ident, v0::ParseError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Err", %"core::result::Result<v0::Ident, v0::ParseError>::Err"* %5, i32 0, i32 1
  %7 = zext i1 %_3 to i8
  store i8 %7, i8* %6, align 1
  %8 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %0 to i8*
  store i8 1, i8* %8, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3683105cc7f4c7c0E"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %1 = alloca i8, align 1
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he5f969acef2634a8E"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast i8* %1 to %"core::result::Result<bool, core::fmt::Error>::Err"*
  %3 = bitcast %"core::result::Result<bool, core::fmt::Error>::Err"* %2 to %"core::fmt::Error"*
  store i8 2, i8* %1, align 1
  %4 = load i8, i8* %1, align 1, !range !7
  ret i8 %4
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3d50551a86845544E"(%"core::result::Result<(legacy::Demangle, &str), ()>"* noalias nocapture sret(%"core::result::Result<(legacy::Demangle, &str), ()>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 {
start:
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7624c5c2144d251bE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(legacy::Demangle, &str), ()>"* %0 to %"core::result::Result<(legacy::Demangle, &str), ()>::Err"*
  %3 = bitcast %"core::result::Result<(legacy::Demangle, &str), ()>::Err"* %2 to {}*
  %4 = bitcast %"core::result::Result<(legacy::Demangle, &str), ()>"* %0 to {}**
  store {}* null, {}** %4, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define i128 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3ffd37c3f1b0beecE"(i1 zeroext %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 {
start:
  %2 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %residual = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %residual, align 1
  %4 = load i8, i8* %residual, align 1, !range !2
  %e = trunc i8 %4 to i1
; call <T as core::convert::From<T>>::from
  %_3 = call zeroext i1 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h243d4da6d0107040E"(i1 zeroext %e)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<u64, v0::ParseError>"* %2 to %"core::result::Result<u64, v0::ParseError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Err", %"core::result::Result<u64, v0::ParseError>::Err"* %5, i32 0, i32 1
  %7 = zext i1 %_3 to i8
  store i8 %7, i8* %6, align 1
  %8 = bitcast %"core::result::Result<u64, v0::ParseError>"* %2 to i8*
  store i8 1, i8* %8, align 8
  %9 = bitcast %"core::result::Result<u64, v0::ParseError>"* %2 to i128*
  %10 = load i128, i128* %9, align 8
  ret i128 %10
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4385f7fae77c4140E"(%"core::result::Result<v0::HexNibbles, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::HexNibbles, v0::ParseError>") dereferenceable(24) %0, i1 zeroext %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #1 {
start:
  %residual = alloca i8, align 1
  %3 = zext i1 %1 to i8
  store i8 %3, i8* %residual, align 1
  %4 = load i8, i8* %residual, align 1, !range !2
  %e = trunc i8 %4 to i1
; call <T as core::convert::From<T>>::from
  %_3 = call zeroext i1 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h243d4da6d0107040E"(i1 zeroext %e)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %0 to %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err", %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err"* %5, i32 0, i32 1
  %7 = zext i1 %_3 to i8
  store i8 %7, i8* %6, align 1
  %8 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %0 to i8*
  store i8 1, i8* %8, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %1 = alloca i8, align 1
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he5f969acef2634a8E"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast i8* %1 to %"core::result::Result<(), core::fmt::Error>::Err"*
  %3 = getelementptr inbounds %"core::result::Result<(), core::fmt::Error>::Err", %"core::result::Result<(), core::fmt::Error>::Err"* %2, i32 0, i32 1
  store i8 1, i8* %1, align 1
  %4 = load i8, i8* %1, align 1, !range !2
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h84715860e414811aE"(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %0, i1 zeroext %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #1 {
start:
  %residual = alloca i8, align 1
  %3 = zext i1 %1 to i8
  store i8 %3, i8* %residual, align 1
  %4 = load i8, i8* %residual, align 1, !range !2
  %e = trunc i8 %4 to i1
; call <T as core::convert::From<T>>::from
  %_3 = call zeroext i1 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h243d4da6d0107040E"(i1 zeroext %e)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %0 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %5, i32 0, i32 1
  %7 = zext i1 %_3 to i8
  store i8 %7, i8* %6, align 1
  %8 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %0 to i8*
  store i8 1, i8* %8, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a67b2acf235fe6eE"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %1 = alloca i8, align 1
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7624c5c2144d251bE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast i8* %1 to %"core::result::Result<(), ()>::Err"*
  %3 = getelementptr inbounds %"core::result::Result<(), ()>::Err", %"core::result::Result<(), ()>::Err"* %2, i32 0, i32 1
  store i8 1, i8* %1, align 1
  %4 = load i8, i8* %1, align 1, !range !2
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8cc6fa069c16dfc8E"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7624c5c2144d251bE"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast i32* %1 to %"core::result::Result<char, ()>::Err"*
  %3 = bitcast %"core::result::Result<char, ()>::Err"* %2 to {}*
  store i32 1114112, i32* %1, align 4
  %4 = load i32, i32* %1, align 4, !range !4
  ret i32 %4
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbfa6c0cb1aaf632eE"(i1 zeroext %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 {
start:
  %2 = alloca %"core::result::Result<core::option::Option<char>, v0::ParseError>", align 4
  %residual = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %residual, align 1
  %4 = load i8, i8* %residual, align 1, !range !2
  %e = trunc i8 %4 to i1
; call <T as core::convert::From<T>>::from
  %_3 = call zeroext i1 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h243d4da6d0107040E"(i1 zeroext %e)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %2 to %"core::result::Result<core::option::Option<char>, v0::ParseError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<core::option::Option<char>, v0::ParseError>::Err", %"core::result::Result<core::option::Option<char>, v0::ParseError>::Err"* %5, i32 0, i32 1
  %7 = zext i1 %_3 to i8
  store i8 %7, i8* %6, align 1
  %8 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %2 to i8*
  store i8 1, i8* %8, align 4
  %9 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %2 to i64*
  %10 = load i64, i64* %9, align 4
  ret i64 %10
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd66765b7060d3726E"(i1 zeroext %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 {
start:
  %2 = alloca { i8, i8 }, align 1
  %residual = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %residual, align 1
  %4 = load i8, i8* %residual, align 1, !range !2
  %e = trunc i8 %4 to i1
; call <T as core::convert::From<T>>::from
  %_3 = call zeroext i1 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h243d4da6d0107040E"(i1 zeroext %e)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast { i8, i8 }* %2 to %"core::result::Result<u8, v0::ParseError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Err", %"core::result::Result<u8, v0::ParseError>::Err"* %5, i32 0, i32 1
  %7 = zext i1 %_3 to i8
  store i8 %7, i8* %6, align 1
  %8 = bitcast { i8, i8 }* %2 to i8*
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %2, i32 0, i32 0
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = trunc i8 %10 to i1
  %12 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %2, i32 0, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i1 %11 to i8
  %15 = insertvalue { i8, i8 } undef, i8 %14, 0
  %16 = insertvalue { i8, i8 } %15, i8 %13, 1
  ret { i8, i8 } %16
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hebb7c3ac93a4d6e0E"(%"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* noalias nocapture sret(%"core::result::Result<(v0::Demangle, &str), v0::ParseError>") dereferenceable(40) %0, i1 zeroext %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #1 {
start:
  %residual = alloca i8, align 1
  %3 = zext i1 %1 to i8
  store i8 %3, i8* %residual, align 1
  %4 = load i8, i8* %residual, align 1, !range !2
  %e = trunc i8 %4 to i1
; call <T as core::convert::From<T>>::from
  %_3 = call zeroext i1 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h243d4da6d0107040E"(i1 zeroext %e)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %0 to %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err", %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err"* %5, i32 0, i32 1
  %7 = zext i1 %_3 to i8
  store i8 %7, i8* %6, align 1
  %8 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %0 to i8*
  store i8 1, i8* %8, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %1 = alloca { i64, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he5f969acef2634a8E"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %1 to %"core::result::Result<usize, core::fmt::Error>::Err"*
  %3 = getelementptr inbounds %"core::result::Result<usize, core::fmt::Error>::Err", %"core::result::Result<usize, core::fmt::Error>::Err"* %2, i32 0, i32 1
  %4 = bitcast { i64, i64 }* %1 to i64*
  store i64 1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !range !5
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h19855dec1d2e6721E"({}** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_4 = load {}*, {}** %self, align 8, !nonnull !6
; call <() as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h6d5a5d0d0e1475bdE"({}* nonnull align 1 %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha336bf51f8473654E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_4 = load i64*, i64** %self, align 8, !nonnull !6
; call core::fmt::num::<impl core::fmt::Debug for usize>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h8b352f5618ffa43dE"(i64* align 8 dereferenceable(8) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he28acc37713f9034E"(i8** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_4 = load i8*, i8** %self, align 8, !nonnull !6
; call core::fmt::num::<impl core::fmt::Debug for u8>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h7cd9ca51ae2410ccE"(i8* align 1 dereferenceable(1) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17heda9fb61af40fed1E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !6
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_4.1 = load i64, i64* %1, align 8
; call <str as core::fmt::Debug>::fmt
  %2 = call zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17hec7dec34a2bb4d4fE"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h580d49e7475ddc0eE"(%DemangleStyle** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_4 = load %DemangleStyle*, %DemangleStyle** %self, align 8, !nonnull !6
; call <rustc_demangle::DemangleStyle as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN68_$LT$rustc_demangle..DemangleStyle$u20$as$u20$core..fmt..Display$GT$3fmt17h879870c26aaa0a7cE"(%DemangleStyle* align 8 dereferenceable(32) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h98f21a87b6d74e74E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !6
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_4.1 = load i64, i64* %1, align 8
; call <str as core::fmt::Display>::fmt
  %2 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h4fb653153270e40aE"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <() as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h6d5a5d0d0e1475bdE"({}* nonnull align 1 %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
; call core::fmt::Formatter::pad
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter3pad17hbc77db69b6df6cc2E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1049 to [0 x i8]*), i64 2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <u64 as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN47_$LT$u64$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h53d338db233fa7b1E"(i64 %start1, i64 %n) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = add nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; <[T] as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h6efc564029b02286E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %_6 = alloca %"core::fmt::builders::DebugList", align 8
; call core::fmt::Formatter::debug_list
  %1 = call i128 @_ZN4core3fmt9Formatter10debug_list17hea40b725812e3b83E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugList"* %_6 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %4 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17he6a2d7cc33388660E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %_8.0 = extractvalue { i8*, i8* } %4, 0
  %_8.1 = extractvalue { i8*, i8* } %4, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugList::entries
  %_4 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17h5161f0a54c16e4e4E(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16) %_6, i8* nonnull %_8.0, i8* %_8.1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::fmt::builders::DebugList::finish
  %5 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17hf48e4debbea8211aE(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16) %_4)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i1 %5
}

; <F as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h9e7d5443b5096640E"(%"core::str::pattern::CharPredicateSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* noalias nocapture sret(%"core::str::pattern::CharPredicateSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 {
start:
  %_4 = alloca %"core::str::pattern::MultiCharEqPattern<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>", align 1
  %_3 = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>", align 8
  %1 = bitcast %"core::str::pattern::MultiCharEqPattern<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* %_4 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]"*
; call <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hba101e781c8b081fE"(%"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* noalias nocapture sret(%"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>") dereferenceable(40) %_3, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::str::pattern::CharPredicateSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* %0 to %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"*
  %3 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* %2 to i8*
  %4 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret void
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h3c97ce15ff535c2aE"(i64 %start1, i64 %n) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = add nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; <usize as core::iter::range::Step>::backward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17hd3903ef0322ec5aeE"(i64 %start1, i64 %n) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = sub nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3Ord3max17h648fa7c9d6b115f9E(i64 %self, i64 %other) unnamed_addr #1 {
start:
; call core::cmp::max_by
  %0 = call i64 @_ZN4core3cmp6max_by17h14c544ce25a7a1e9E(i64 %self, i64 %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::Ord::min
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3Ord3min17h4ce036410f6a5cbbE(i64 %self, i64 %other) unnamed_addr #1 {
start:
; call core::cmp::min_by
  %0 = call i64 @_ZN4core3cmp6min_by17h3418e9d1168588abE(i64 %self, i64 %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3max17hcbe23ebba52ef57eE(i64 %v1, i64 %v2) unnamed_addr #1 {
start:
; call core::cmp::Ord::max
  %0 = call i64 @_ZN4core3cmp3Ord3max17h648fa7c9d6b115f9E(i64 %v1, i64 %v2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::min
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3min17h660fa9d2c63b659cE(i64 %v1, i64 %v2) unnamed_addr #1 {
start:
; call core::cmp::Ord::min
  %0 = call i64 @_ZN4core3cmp3Ord3min17h4ce036410f6a5cbbE(i64 %v1, i64 %v2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h8e6b7bd035572dafE"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_4 = load i64, i64* %self, align 8
  %_5 = load i64, i64* %other, align 8
  %_3 = icmp ult i64 %_4, %_5
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8
  %_8 = load i64, i64* %other, align 8
  %_6 = icmp eq i64 %_7, %_8
  br i1 %_6, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !range !8
  ret i8 %1

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6
}

; core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h62048f61fb1c9ea3E"(i8* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %other) unnamed_addr #1 {
start:
  %_3 = load i8, i8* %self, align 1
  %_4 = load i8, i8* %other, align 1
  %0 = icmp eq i8 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialEq for bool>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$bool$GT$2eq17h62e27c4164f09662E"(i8* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %other) unnamed_addr #1 {
start:
  %0 = load i8, i8* %self, align 1, !range !2
  %_3 = trunc i8 %0 to i1
  %1 = load i8, i8* %other, align 1, !range !2
  %_4 = trunc i8 %1 to i1
  %2 = icmp eq i1 %_3, %_4
  ret i1 %2
}

; core::cmp::impls::<impl core::cmp::PartialOrd for u64>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u64$GT$2lt17ha2f8159aab2ae82bE"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #1 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp ult i64 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hb0cb608cc0c06902E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #1 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp ult i64 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17hb6c893e2624e383bE"({}* nonnull align 1 %self, {}* nonnull align 1 %_other) unnamed_addr #1 {
start:
  ret i1 true
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h1595aef07d10a2acE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %other) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !6
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_3.1 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !6
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1
  %_4.1 = load i64, i64* %3, align 8
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %4 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17hb57df59af7fe7445E"([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1, [0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::cmp::impls::<impl core::cmp::PartialEq<&mut B> for &mut A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3cmp5impls85_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$mut$u20$B$GT$$u20$for$u20$$RF$mut$u20$A$GT$2eq17h380b821674366b1dE"(i8** align 8 dereferenceable(8) %self, i8** align 8 dereferenceable(8) %other) unnamed_addr #1 {
start:
  %_3 = load i8*, i8** %self, align 8, !nonnull !6
  %_4 = load i8*, i8** %other, align 8, !nonnull !6
; call <rustc_demangle::v0::ParseError as core::cmp::PartialEq>::eq
  %0 = call zeroext i1 @"_ZN71_$LT$rustc_demangle..v0..ParseError$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9fedc0a08922f032E"(i8* align 1 dereferenceable(1) %_3, i8* align 1 dereferenceable(1) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::cmp::max_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6max_by17h14c544ce25a7a1e9E(i64 %0, i64 %1) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %3 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  store i8 1, i8* %_12, align 1
  %4 = bitcast { i64*, i64* }* %_6 to i64**
  store i64* %v1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  store i64* %v2, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !6
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !6
; invoke core::ops::function::FnOnce::call_once
  %10 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17hca31794ea0bc0b27E(i64* align 8 dereferenceable(8) %7, i64* align 8 dereferenceable(8) %9)
          to label %bb1 unwind label %cleanup, !range !8

bb1:                                              ; preds = %start
  store i8 %10, i8* %_4, align 1
  %_11 = load i8, i8* %_4, align 1, !range !8
  switch i8 %_11, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ]

bb8:                                              ; preds = %cleanup
  br label %bb13

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb8

bb13:                                             ; preds = %bb8
  %16 = load i8, i8* %_13, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb12, label %bb9

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_12, align 1
  %18 = load i64, i64* %v2, align 8
  store i64 %18, i64* %3, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_13, align 1
  %19 = load i64, i64* %v1, align 8
  store i64 %19, i64* %3, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load i8, i8* %_12, align 1, !range !2
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb10, label %bb6

bb6:                                              ; preds = %bb10, %bb5
  %22 = load i8, i8* %_13, align 1, !range !2
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb11, label %bb7

bb10:                                             ; preds = %bb5
  br label %bb6

bb9:                                              ; preds = %bb12, %bb13
  %24 = bitcast { i8*, i32 }* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb12:                                             ; preds = %bb13
  br label %bb9

bb7:                                              ; preds = %bb11, %bb6
  %30 = load i64, i64* %3, align 8
  ret i64 %30

bb11:                                             ; preds = %bb6
  br label %bb7
}

; core::cmp::min_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6min_by17h3418e9d1168588abE(i64 %0, i64 %1) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %3 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  store i8 1, i8* %_12, align 1
  %4 = bitcast { i64*, i64* }* %_6 to i64**
  store i64* %v1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  store i64* %v2, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !6
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !6
; invoke core::ops::function::FnOnce::call_once
  %10 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17hca31794ea0bc0b27E(i64* align 8 dereferenceable(8) %7, i64* align 8 dereferenceable(8) %9)
          to label %bb1 unwind label %cleanup, !range !8

bb1:                                              ; preds = %start
  store i8 %10, i8* %_4, align 1
  %_11 = load i8, i8* %_4, align 1, !range !8
  switch i8 %_11, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ]

bb8:                                              ; preds = %cleanup
  br label %bb13

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb8

bb13:                                             ; preds = %bb8
  %16 = load i8, i8* %_13, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb12, label %bb9

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_13, align 1
  %18 = load i64, i64* %v1, align 8
  store i64 %18, i64* %3, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_12, align 1
  %19 = load i64, i64* %v2, align 8
  store i64 %19, i64* %3, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load i8, i8* %_12, align 1, !range !2
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb10, label %bb6

bb6:                                              ; preds = %bb10, %bb5
  %22 = load i8, i8* %_13, align 1, !range !2
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb11, label %bb7

bb10:                                             ; preds = %bb5
  br label %bb6

bb9:                                              ; preds = %bb12, %bb13
  %24 = bitcast { i8*, i32 }* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb12:                                             ; preds = %bb13
  br label %bb9

bb7:                                              ; preds = %bb11, %bb6
  %30 = load i64, i64* %3, align 8
  ret i64 %30

bb11:                                             ; preds = %bb6
  br label %bb7
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0596ccb07b5ce96cE(i64* align 8 dereferenceable(8) %x, i1 (i64*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !6
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !6
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !6
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !6
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h1aac049ee929b6a6E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %x, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !6
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { [0 x i8]*, i64 }* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !6
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !6
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !6
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hacdb529575c30fbaE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %x, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !6
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { [0 x i8]*, i64 }* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !6
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !6
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !6
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hdbf4a7f7c4eea455E(i32* align 4 dereferenceable(4) %x, i1 (i32*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i32*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !6
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i32* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !6
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !6
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !6
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hdfd8cba830abf1e4E(%DemangleStyle** align 8 dereferenceable(8) %x, i1 (%DemangleStyle**, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%DemangleStyle**, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !6
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %DemangleStyle** %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !6
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !6
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !6
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::num::<impl core::fmt::Debug for u8>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h7cd9ca51ae2410ccE"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17hc1ea778f34506390E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9143b4968b3afd78E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17h302b98f72f36962dE"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17ha60d145af3203aeeE"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb9

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17hae1e0652414f7084E"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h8b352f5618ffa43dE"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17hc1ea778f34506390E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9143b4968b3afd78E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h15400e4abae8bbbeE"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb9

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17ha63680436de3943cE"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10
}

; core::fmt::Write::write_char
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write10write_char17he76d79e34b403226E(%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* align 8 dereferenceable(24) %self, i32 %c) unnamed_addr #0 {
start:
  %_10 = alloca [4 x i8], align 1
  %0 = getelementptr inbounds [4 x i8], [4 x i8]* %_10, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 4, i1 false)
  %_7.0 = bitcast [4 x i8]* %_10 to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %1 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h654239ca93107b29E"(i32 %c, [0 x i8]* nonnull align 1 %_7.0, i64 4)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <rustc_demangle::SizeLimitedFmtAdapter<F> as core::fmt::Write>::write_str
  %2 = call zeroext i1 @"_ZN83_$LT$rustc_demangle..SizeLimitedFmtAdapter$LT$F$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hc4d620ace92029e6E"(%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %2
}

; core::fmt::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write9write_fmt17h0274ba367c0b6dbbE(%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* align 8 dereferenceable(24) %0, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %args) unnamed_addr #0 {
start:
  %_6 = alloca %"core::fmt::Arguments", align 8
  %self = alloca %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"*, align 8
  store %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* %0, %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"** %self, align 8
  %_3.0 = bitcast %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"** %self to {}*
  %1 = bitcast %"core::fmt::Arguments"* %_6 to i8*
  %2 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false)
; call core::fmt::write
  %3 = call zeroext i1 @_ZN4core3fmt5write17h0200d27bf417ad61E({}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.0 to [3 x i64]*), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_6)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %3
}

; core::fmt::builders::DebugList::entries
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(16) %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17h5161f0a54c16e4e4E(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16) %self, i8* nonnull %entries.0, i8* %entries.1) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %entry = alloca i8*, align 8
  %_7 = alloca i8*, align 8
  %iter = alloca { i8*, i8* }, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %1 = call { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1935eb71789522baE"(i8* nonnull %entries.0, i8* %entries.1)
  %_4.0 = extractvalue { i8*, i8* } %1, 0
  %_4.1 = extractvalue { i8*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 0
  store i8* %_4.0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 1
  store i8* %_4.1, i8** %3, align 8
  br label %bb2

bb2:                                              ; preds = %bb8, %bb1
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %4 = invoke align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h40dc0f323a5db63cE"({ i8*, i8* }* align 8 dereferenceable(16) %iter)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i8* %4, i8** %_7, align 8
  %5 = bitcast i8** %_7 to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_10 = select i1 %7, i64 0, i64 1
  switch i64 %_10, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ]

bb11:                                             ; preds = %bb10, %cleanup
  br label %bb12

cleanup:                                          ; preds = %bb2
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb11

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  br label %bb9

bb4:                                              ; preds = %bb3
  %13 = load i8*, i8** %_7, align 8, !nonnull !6
  store i8* %13, i8** %entry, align 8
  %_14.0 = bitcast i8** %entry to {}*
; invoke core::fmt::builders::DebugList::entry
  %_12 = invoke align 8 dereferenceable(16) %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17hfd5de0649c122df2E(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16) %self, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*))
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb4
  br label %bb8

bb10:                                             ; preds = %cleanup1
  br label %bb11

cleanup1:                                         ; preds = %bb4
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb10

bb8:                                              ; preds = %bb7
  br label %bb2

bb12:                                             ; preds = %bb11
  %19 = bitcast { i8*, i32 }* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

bb9:                                              ; preds = %bb6
  ret %"core::fmt::builders::DebugList"* %self
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17h48b252f7f696ed0bE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %0, [0 x { [0 x i8]*, i64 }]* nonnull align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* nonnull align 8 %args.0, i64 %args.1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 %fmt.0, i64 %fmt.1) unnamed_addr #1 {
start:
  %_6 = alloca { i64*, i64 }, align 8
  %1 = bitcast { i64*, i64 }* %_6 to { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }*
  %2 = getelementptr inbounds { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }, { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }* %1, i32 0, i32 0
  store [0 x %"core::fmt::rt::v1::Argument"]* %fmt.0, [0 x %"core::fmt::rt::v1::Argument"]** %2, align 8
  %3 = getelementptr inbounds { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }, { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }* %1, i32 0, i32 1
  store i64 %fmt.1, i64* %3, align 8
  %4 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %5 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %5, align 8
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 1
  store i64 %pieces.1, i64* %6, align 8
  %7 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 0
  store i64* %9, i64** %12, align 8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 1
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2
  %15 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %14, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %15, align 8
  %16 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %14, i32 0, i32 1
  store i64 %args.1, i64* %16, align 8
  ret void
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117hc4c9b02358f4c330E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %0, [0 x { [0 x i8]*, i64 }]* nonnull align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* nonnull align 8 %args.0, i64 %args.1) unnamed_addr #1 {
start:
  %_16 = alloca { i64*, i64 }, align 8
  %_3 = alloca i8, align 1
  %_4 = icmp ult i64 %pieces.1, %args.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1
  %_9 = icmp ugt i64 %pieces.1, %_12
  %1 = zext i1 %_9 to i8
  store i8 %1, i8* %_3, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i8, i8* %_3, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %4 = bitcast { i64*, i64 }* %_16 to {}**
  store {}* null, {}** %4, align 8
  %5 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %6, align 8
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 1
  store i64 %pieces.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1
  %9 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 0
  store i64* %10, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 1
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2
  %16 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %16, align 8
  %17 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 1
  store i64 %args.1, i64* %17, align 8
  ret void

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [12 x i8] }>* @alloc740 to [0 x i8]*), i64 12, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc742 to %"core::panic::location::Location"*)) #12
  unreachable
}

; core::mem::size_of_val
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem11size_of_val17hc6a2676329e6796eE([0 x i8]* nonnull align 1 %val.0, i64 %val.1) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = mul i64 %val.1, 1
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::mem::forget
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem6forget17hdc31cc67693c5d61E(i8 %t.0, i8 %t.1) unnamed_addr #1 {
start:
  %0 = alloca { i8, i8 }, align 1
  %1 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0
  store i8 %t.0, i8* %1, align 1
  %2 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  store i8 %t.1, i8* %2, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0
  %4 = load i8, i8* %3, align 1, !range !7
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = insertvalue { i8, i8 } undef, i8 %4, 0
  %8 = insertvalue { i8, i8 } %7, i8 %6, 1
  %_2.0 = extractvalue { i8, i8 } %8, 0
  %_2.1 = extractvalue { i8, i8 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @_ZN4core3mem7replace17h468aa3f103b90443E({ i8, i8 }* align 1 dereferenceable(2) %dest, i8 %src.0, i8 %src.1) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %1 = invoke { i8, i8 } @_ZN4core3ptr4read17hc851b1334d6eec2eE({ i8, i8 }* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %result.0 = extractvalue { i8, i8 } %1, 0
  %result.1 = extractvalue { i8, i8 } %1, 1
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hc9e62aac12a97ae8E({ i8, i8 }* %dest, i8 %src.0, i8 %src.1)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %2 = load i8, i8* %_7, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %9 = insertvalue { i8, i8 } undef, i8 %result.0, 0
  %10 = insertvalue { i8, i8 } %9, i8 %result.1, 1
  ret { i8, i8 } %10

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3mem7replace17h55a5581228988eedE(i32* align 4 dereferenceable(4) %dest, i32 %src) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i32 @_ZN4core3ptr4read17h0e4ea875c0efd9cbE(i32* %dest)
          to label %bb1 unwind label %cleanup, !range !4

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hcd5b913a6ccb3a8cE(i32* %dest, i32 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i32 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17h590260a78c89feeaE(i64* align 8 dereferenceable(8) %dest, i64 %src) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i64 @_ZN4core3ptr4read17hcc3674fa8ad6e397E(i64* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17ha571d38827d62860E(i64* %dest, i64 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i64 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem7replace17hcc3afc7582409685E(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %result, %"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %dest, %"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture dereferenceable(40) %src) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17hb16e1008cb06fa6aE(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %result, %"core::result::Result<v0::Parser, v0::ParseError>"* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %1 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_6 to i8*
  %2 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hf1ac14045bab398cE(%"core::result::Result<v0::Parser, v0::ParseError>"* %dest, %"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture dereferenceable(40) %_6)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %3 = load i8, i8* %_7, align 1, !range !2
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(64) i64* @_ZN4core3mem7replace17hef84fb0c7fad5dceE(i64** align 8 dereferenceable(8) %dest, i64* align 8 dereferenceable_or_null(64) %src) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke align 8 dereferenceable_or_null(64) i64* @_ZN4core3ptr4read17hd4828d330210e749E(i64** %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hee2fa4deafd83fadE(i64** %dest, i64* align 8 dereferenceable_or_null(64) %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i64* %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17hf486f0634e638c72E(i64* align 8 dereferenceable(8) %dest, i64 %src) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i64 @_ZN4core3ptr4read17h3a0b7756fd7d30d3E(i64* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h504e09e7f5f4166fE(i64* %dest, i64 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i64 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::num::<impl u64>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_add17h05d373c1ebaf853eE"(i64 %self, i64 %rhs) unnamed_addr #1 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !2
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<u64>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !5
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl u64>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_mul17h5f6c101cbfe60859E"(i64 %self, i64 %rhs) unnamed_addr #1 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !2
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<u64>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !5
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl u64>::checked_sub
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_sub17h1ce47e90fcca30f1E"(i64 %self, i64 %rhs) unnamed_addr #1 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !2
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<u64>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !5
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h125bce0a72c69c92E"(i64 %self, i64 %rhs) unnamed_addr #1 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !2
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !5
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17ha878e85f9d206771E"(i64 %self, i64 %rhs) unnamed_addr #1 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !2
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !5
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl usize>::checked_sub
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h286b2e3881dd5503E"(i64 %self, i64 %rhs) unnamed_addr #1 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !2
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !5
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::ops::control_flow::ControlFlow<B,C>::break_value
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h454a3530bf0fdd1eE"(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !5
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %6, align 8
  br label %bb6

bb1:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::ops::control_flow::ControlFlow<usize, usize>::Break"*
  %8 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<usize, usize>::Break", %"core::ops::control_flow::ControlFlow<usize, usize>::Break"* %7, i32 0, i32 1
  %x = load i64, i64* %8, align 8
  %9 = bitcast { i64, i64 }* %2 to %"core::option::Option<usize>::Some"*
  %10 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %9, i32 0, i32 1
  store i64 %x, i64* %10, align 8
  %11 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %11, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb1
  %12 = bitcast { i64, i64 }* %self to i64*
  %_5 = load i64, i64* %12, align 8, !range !5
  %13 = icmp eq i64 %_5, 1
  br i1 %13, label %bb4, label %bb5

bb4:                                              ; preds = %bb5, %bb6
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %15 = load i64, i64* %14, align 8, !range !5
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::ops::range::RangeInclusive<Idx>::end
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(8) i64* @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h2a9eb99a79d8b187E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 1
  ret i64* %0
}

; core::ops::range::RangeInclusive<Idx>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17he099ca828eec8451E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %0, i64 %start1, i64 %end) unnamed_addr #1 {
start:
  %1 = bitcast %"core::ops::range::RangeInclusive<usize>"* %0 to i64*
  store i64 %start1, i64* %1, align 8
  %2 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %0, i32 0, i32 1
  store i64 %end, i64* %2, align 8
  %3 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %0, i32 0, i32 2
  store i8 0, i8* %3, align 8
  ret void
}

; core::ops::range::RangeInclusive<usize>::into_slice_range
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17hd33dcf4176ab1197E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %start1 = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 1
  %_3 = load i64, i64* %1, align 8
  %exclusive_end = add i64 %_3, 1
  %2 = getelementptr inbounds %"core::ops::range::RangeInclusive<usize>", %"core::ops::range::RangeInclusive<usize>"* %self, i32 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %_5 = trunc i8 %3 to i1
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ops::range::RangeInclusive<usize>"* %self to i64*
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %start1, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store i64 %exclusive_end, i64* %start1, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %_6 = load i64, i64* %start1, align 8
  %6 = bitcast { i64, i64 }* %0 to i64*
  store i64 %_6, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %exclusive_end, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1
  ret { i64, i64 } %13
}

; core::ops::function::Fn::call
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3ops8function2Fn4call17h11bcb3c74663f26aE({}* nonnull align 1 %_1, %"v0::Printer"* align 8 dereferenceable(56) %0) unnamed_addr #1 {
start:
  %_2 = alloca i64*, align 8
  %1 = bitcast i64** %_2 to %"v0::Printer"**
  store %"v0::Printer"* %0, %"v0::Printer"** %1, align 8
  %2 = bitcast i64** %_2 to %"v0::Printer"**
  %3 = load %"v0::Printer"*, %"v0::Printer"** %2, align 8, !nonnull !6
; call rustc_demangle::v0::Printer::print_dyn_trait
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer15print_dyn_trait17h59039264df61c7fbE(%"v0::Printer"* align 8 dereferenceable(56) %3)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ops::function::Fn::call
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3ops8function2Fn4call17hd040ae53d8e1b970E({}* nonnull align 1 %_1, %"v0::Printer"* align 8 dereferenceable(56) %0) unnamed_addr #1 {
start:
  %_2 = alloca i64*, align 8
  %1 = bitcast i64** %_2 to %"v0::Printer"**
  store %"v0::Printer"* %0, %"v0::Printer"** %1, align 8
  %2 = bitcast i64** %_2 to %"v0::Printer"**
  %3 = load %"v0::Printer"*, %"v0::Printer"** %2, align 8, !nonnull !6
; call rustc_demangle::v0::Printer::print_generic_arg
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer17print_generic_arg17hdd8938f33b431ecbE(%"v0::Printer"* align 8 dereferenceable(56) %3)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ops::function::Fn::call
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3ops8function2Fn4call17hdd22a645d04468dbE({}* nonnull align 1 %_1, %"v0::Printer"* align 8 dereferenceable(56) %0) unnamed_addr #1 {
start:
  %_2 = alloca i64*, align 8
  %1 = bitcast i64** %_2 to %"v0::Printer"**
  store %"v0::Printer"* %0, %"v0::Printer"** %1, align 8
  %2 = bitcast i64** %_2 to %"v0::Printer"**
  %3 = load %"v0::Printer"*, %"v0::Printer"** %2, align 8, !nonnull !6
; call rustc_demangle::v0::Printer::print_type
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17hd30efff67a15e4baE(%"v0::Printer"* align 8 dereferenceable(56) %3)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function5FnMut8call_mut17he2f31c9d996ae5afE({}* nonnull align 1 %_1, i32 %0) unnamed_addr #1 {
start:
  %_2 = alloca i32, align 4
  store i32 %0, i32* %_2, align 4
  %1 = load i32, i32* %_2, align 4, !range !4
; call core::result::Result<T,E>::unwrap
  %2 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h504706230b58785bE"(i32 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc744 to %"core::panic::location::Location"*)), !range !9
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %2
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h347c22b27da9bc2bE"({}* nonnull align 1 %self, i32 %0) unnamed_addr #0 {
start:
  %args = alloca i32, align 4
  store i32 %0, i32* %args, align 4
  %_4 = load i32, i32* %args, align 4, !range !4
; call core::ops::function::FnMut::call_mut
  %1 = call i32 @_ZN4core3ops8function5FnMut8call_mut17he2f31c9d996ae5afE({}* nonnull align 1 %self, i32 %_4), !range !9
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h7e291acd49276ab1E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]"* nonnull align 1 %self, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %2 = alloca i128, align 8
  %3 = alloca [2 x i8*], align 8
  %args = alloca { i8*, i64 }, align 8
  %4 = bitcast { i8*, i64 }* %args to { [0 x i8]*, i64 }*
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %args, i32 0, i32 0
  %_4.0 = load i8*, i8** %7, align 8, !nonnull !6
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %args, i32 0, i32 1
  %_4.1 = load i64, i64* %8, align 8
  %9 = bitcast i8* %_4.0 to [0 x i8]*
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
  %10 = call i128 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17h0b5fb5992adee314E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]"* nonnull align 1 %self, [0 x i8]* nonnull align 1 %9, i64 %_4.1)
  store i128 %10, i128* %2, align 8
  %11 = bitcast [2 x i8*]* %3 to i8*
  %12 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %13 = bitcast [2 x i8*]* %3 to i128*
  %14 = load i128, i128* %13, align 8
  ret i128 %14
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17hd3816418f2ba8547E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]"* nonnull align 1 %self, i128 %0) unnamed_addr #0 {
start:
  %_4 = alloca { [2 x i8*] }, align 8
  %1 = alloca i128, align 8
  %args = alloca { [2 x i8*] }, align 8
  %2 = bitcast { [2 x i8*] }* %args to [2 x i8*]*
  store i128 %0, i128* %1, align 8
  %3 = bitcast [2 x i8*]* %2 to i8*
  %4 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = bitcast { [2 x i8*] }* %_4 to i8*
  %6 = bitcast { [2 x i8*] }* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  %7 = bitcast { [2 x i8*] }* %_4 to [2 x i8*]*
  %8 = bitcast [2 x i8*]* %7 to i128*
  %9 = load i128, i128* %8, align 8
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
  %10 = call i8 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17ha8e52f0eb398cdbaE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]"* nonnull align 1 %self, i128 %9)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %10
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3ops8function6FnOnce9call_once17h267d0e67031ab014E(%"v0::Printer"* align 8 dereferenceable(56) %0) unnamed_addr #1 {
start:
  %_2 = alloca i64*, align 8
  %1 = bitcast i64** %_2 to %"v0::Printer"**
  store %"v0::Printer"* %0, %"v0::Printer"** %1, align 8
  %2 = bitcast i64** %_2 to %"v0::Printer"**
  %3 = load %"v0::Printer"*, %"v0::Printer"** %2, align 8, !nonnull !6
; call rustc_demangle::v0::Printer::print_type
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17hd30efff67a15e4baE(%"v0::Printer"* align 8 dereferenceable(56) %3)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17h9a192f2f8f21992bE(i32 %0) unnamed_addr #1 {
start:
  %_2 = alloca i32, align 4
  store i32 %0, i32* %_2, align 4
  %1 = load i32, i32* %_2, align 4
; call core::char::convert::from_u32
  %2 = call i32 @_ZN4core4char7convert8from_u3217hfc48b652e448c2aeE(i32 %1), !range !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %2
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17hca31794ea0bc0b27E(i64* align 8 dereferenceable(8) %0, i64* align 8 dereferenceable(8) %1) unnamed_addr #1 {
start:
  %_2 = alloca { i64*, i64* }, align 8
  %2 = bitcast { i64*, i64* }* %_2 to i64**
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  store i64* %1, i64** %3, align 8
  %4 = bitcast { i64*, i64* }* %_2 to i64**
  %5 = load i64*, i64** %4, align 8, !nonnull !6
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !6
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h8e6b7bd035572dafE"(i64* align 8 dereferenceable(8) %5, i64* align 8 dereferenceable(8) %7), !range !8
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %8
}

; core::ptr::drop_in_place<&mut rustc_demangle::SizeLimitedFmtAdapter<&mut core::fmt::Formatter>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr110drop_in_place$LT$$RF$mut$u20$rustc_demangle..SizeLimitedFmtAdapter$LT$$RF$mut$u20$core..fmt..Formatter$GT$$GT$17h32c29e7e94e484f4E"(%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"** %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h3998f53bd43201ccE(i32* %data, i64 %len) unnamed_addr #1 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hc08638b3f6244be9E"(i32* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i32]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h2e884d82c01d2e02E({}* %_3, i64 %len)
  %1 = extractvalue { [0 x i32]*, i64 } %0, 0
  %2 = extractvalue { [0 x i32]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %1, 0
  %4 = insertvalue { [0 x i32]*, i64 } %3, i64 %2, 1
  ret { [0 x i32]*, i64 } %4
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hb9ba4c632b53cefcE(i8* %data, i64 %len) unnamed_addr #1 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he5056c5c496e6194E"(i8* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h92bd6fd75fd2b138E({}* %_3, i64 %len)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h8f6819e9b57282a9E(i8* %data, i64 %len) unnamed_addr #1 {
start:
  %0 = bitcast i8* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h1291e2895a9145bdE({}* %0, i64 %len)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::ptr::drop_in_place<&u8>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h95ec42827974f6edE"(i8** %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<()>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr29drop_in_place$LT$$LP$$RP$$GT$17h0bf96195fa147c85E"({}* %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<&usize>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17haee6c0d43db925ccE"(i64** %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<&()>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr33drop_in_place$LT$$RF$$LP$$RP$$GT$17h6bead8591526a62dE"({}** %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<core::fmt::Error>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17h8cd524f8b66bd7ecE"(%"core::fmt::Error"* %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3ptr4read17h0e4ea875c0efd9cbE(i32* %src) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %1 = bitcast i32* %0 to {}*
  %2 = load i32, i32* %0, align 4
  store i32 %2, i32* %tmp, align 4
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i32* %tmp to i8*
  %4 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %_6 = load i32, i32* %tmp, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i32 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr4read17h3a0b7756fd7d30d3E(i64* %src) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*
  %4 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %_6 = load i64, i64* %tmp, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17hb16e1008cb06fa6aE(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %0, %"core::result::Result<v0::Parser, v0::ParseError>"* %src) unnamed_addr #1 {
start:
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::result::Result<v0::Parser, v0::ParseError>>", align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::result::Result<v0::Parser, v0::ParseError>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::result::Result<v0::Parser, v0::ParseError>>", align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !10)
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::result::Result<v0::Parser, v0::ParseError>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::result::Result<v0::Parser, v0::ParseError>>"* %tmp to %"core::result::Result<v0::Parser, v0::ParseError>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %2 to i8*
  %4 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::result::Result<v0::Parser, v0::ParseError>>"* %_6 to i8*
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::result::Result<v0::Parser, v0::ParseError>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !13)
  call void @llvm.experimental.noalias.scope.decl(metadata !16)
  %7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::result::Result<v0::Parser, v0::ParseError>>"* %_6 to %"core::mem::manually_drop::ManuallyDrop<core::result::Result<v0::Parser, v0::ParseError>>"*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::result::Result<v0::Parser, v0::ParseError>>"* %_3.i to i8*
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::result::Result<v0::Parser, v0::ParseError>>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 40, i1 false), !noalias !13
  call void @llvm.experimental.noalias.scope.decl(metadata !18)
  call void @llvm.experimental.noalias.scope.decl(metadata !21)
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::result::Result<v0::Parser, v0::ParseError>>"* %_3.i to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %11 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %0 to i8*
  %12 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 40, i1 false), !alias.scope !23, !noalias !16
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @_ZN4core3ptr4read17hc851b1334d6eec2eE({ i8, i8 }* %src) unnamed_addr #1 {
start:
  %0 = alloca { i8, i8 }, align 1
  %tmp = alloca { i8, i8 }, align 1
  %1 = bitcast { i8, i8 }* %0 to {}*
  %2 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = insertvalue { i8, i8 } undef, i8 %3, 0
  %7 = insertvalue { i8, i8 } %6, i8 %5, 1
  store { i8, i8 } %7, { i8, i8 }* %tmp, align 1
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast { i8, i8 }* %tmp to i8*
  %9 = bitcast { i8, i8 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %9, i64 2, i1 false)
  %10 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %tmp, i32 0, i32 0
  %_6.0 = load i8, i8* %10, align 1
  %11 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %tmp, i32 0, i32 1
  %_6.1 = load i8, i8* %11, align 1
  %12 = insertvalue { i8, i8 } undef, i8 %_6.0, 0
  %13 = insertvalue { i8, i8 } %12, i8 %_6.1, 1
  %14 = extractvalue { i8, i8 } %13, 0
  %15 = extractvalue { i8, i8 } %13, 1
  %16 = extractvalue { i8, i8 } %13, 0
  %17 = extractvalue { i8, i8 } %13, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %18 = insertvalue { i8, i8 } undef, i8 %16, 0
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1
  ret { i8, i8 } %19
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr4read17hcc3674fa8ad6e397E(i64* %src) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*
  %4 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %_6 = load i64, i64* %tmp, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(64) i64* @_ZN4core3ptr4read17hd4828d330210e749E(i64** %src) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %1 = bitcast i8** %0 to {}*
  %2 = load i8*, i8** %0, align 8
  store i8* %2, i8** %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i8** %tmp to i64**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast i64** %3 to i8*
  %5 = bitcast i64** %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false)
  %_6 = load i8*, i8** %tmp, align 8
  %_3.i = bitcast i8* %_6 to i64*
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64* %_3.i
}

; core::ptr::drop_in_place<core::num::error::ParseIntError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$core..num..error..ParseIntError$GT$17h61cda07192154b56E"(i8* %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<rustc_demangle::SizeLimitExhausted>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr55drop_in_place$LT$rustc_demangle..SizeLimitExhausted$GT$17heaaa27219bc13834E"(%SizeLimitExhausted* %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h504e09e7f5f4166fE(i64* %dst, i64 %0) unnamed_addr #1 {
start:
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  %1 = bitcast i64* %dst to i8*
  %2 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17ha571d38827d62860E(i64* %dst, i64 %0) unnamed_addr #1 {
start:
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  %1 = bitcast i64* %dst to i8*
  %2 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hc9e62aac12a97ae8E({ i8, i8 }* %dst, i8 %0, i8 %1) unnamed_addr #1 {
start:
  %src = alloca { i8, i8 }, align 1
  %2 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %src, i32 0, i32 0
  store i8 %0, i8* %2, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %src, i32 0, i32 1
  store i8 %1, i8* %3, align 1
  %4 = bitcast { i8, i8 }* %dst to i8*
  %5 = bitcast { i8, i8 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 2, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hcd5b913a6ccb3a8cE(i32* %dst, i32 %0) unnamed_addr #1 {
start:
  %src = alloca i32, align 4
  store i32 %0, i32* %src, align 4
  %1 = bitcast i32* %dst to i8*
  %2 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 4, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hee2fa4deafd83fadE(i64** %dst, i64* align 8 dereferenceable_or_null(64) %0) unnamed_addr #1 {
start:
  %src = alloca i64*, align 8
  store i64* %0, i64** %src, align 8
  %1 = bitcast i64** %dst to i8*
  %2 = bitcast i64** %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hf1ac14045bab398cE(%"core::result::Result<v0::Parser, v0::ParseError>"* %dst, %"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture dereferenceable(40) %src) unnamed_addr #1 {
start:
  %0 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %dst to i8*
  %1 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 40, i1 false)
  ret void
}

; core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h55bc6598a96dde29E"(i8* %self, i8* %other) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17haaf9e23b7be33783E"(i8* %self) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h55bc6598a96dde29E"(i8* %self, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd9e1a2a51dcca46cE"(i32* %self) unnamed_addr #1 {
start:
  %_2 = bitcast i32* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h55bc6598a96dde29E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h2e884d82c01d2e02E({}* %data_address, i64 %metadata) unnamed_addr #1 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[char]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[char]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[char]>"* %_3 to { [0 x i32]*, i64 }*
  %10 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i32]*, [0 x i32]** %10, align 8
  %12 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %11, 0
  %15 = insertvalue { [0 x i32]*, i64 } %14, i64 %13, 1
  ret { [0 x i32]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h92bd6fd75fd2b138E({}* %data_address, i64 %metadata) unnamed_addr #1 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h1291e2895a9145bdE({}* %data_address, i64 %metadata) unnamed_addr #1 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr8metadata8metadata17h28bcaf8ca3c23674E([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #1 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %ptr.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1c909d8c0c85fa8eE"(i32* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
  store i32* %ptr, i32** %0, align 8
  %1 = load i32*, i32** %0, align 8, !nonnull !6
  ret i32* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hff0aa147614572c1E"(i8* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !6
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17had4b2c0c5eba93b6E"(i32* nonnull %self) unnamed_addr #1 {
start:
  ret i32* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %self) unnamed_addr #1 {
start:
  ret i8* %self
}

; core::ptr::const_ptr::<impl *const T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h38c31542217d3c22E"(i8* %self, i8* %other) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hc08638b3f6244be9E"(i32* %self) unnamed_addr #1 {
start:
  %0 = bitcast i32* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he5056c5c496e6194E"(i8* %self) unnamed_addr #1 {
start:
  %0 = bitcast i8* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h3b5a74d1b03b19e1E"(i32* %self) unnamed_addr #1 {
start:
  %_2 = bitcast i32* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h38c31542217d3c22E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h50c74e222c8a4850E"(i8* %self) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h38c31542217d3c22E"(i8* %self, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h65ce1de157f6c9dcE"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::ptr::metadata::metadata
  %0 = call i64 @_ZN4core3ptr8metadata8metadata17h28bcaf8ca3c23674E([0 x i8]* %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h0bbd403b1603ee00E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hd1a01c18ddb14691E"([0 x i32]* %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = bitcast [0 x i32]* %self.0 to i32*
  ret i32* %0
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core3str11validations15next_code_point17h9fdb2cd43e03bebfE({ i8*, i8* }* align 8 dereferenceable(16) %bytes) unnamed_addr #1 {
start:
  %ch = alloca i32, align 4
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_5 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h40dc0f323a5db63cE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %1 = call align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h32f7aa648528c1abE"(i8* align 1 dereferenceable_or_null(1) %_5)
  store i8* %1, i8** %_4, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast i8** %_4 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_7 = select i1 %4, i64 1, i64 0
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !nonnull !6
  %x = load i8, i8* %val, align 1
  %_11 = icmp ult i8 %x, -128
  br i1 %_11, label %bb7, label %bb8

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %5 = call { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h69f1e2c6d9b230a1E"()
  store { i32, i32 } %5, { i32, i32 }* %0, align 4
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb23

bb23:                                             ; preds = %bb7, %bb6
  br label %bb24

bb8:                                              ; preds = %bb3
; call core::str::validations::utf8_first_byte
  %init = call i32 @_ZN4core3str11validations15utf8_first_byte17hf55e8058303653bdE(i8 %x, i32 2)
  br label %bb9

bb7:                                              ; preds = %bb3
  %_13 = zext i8 %x to i32
  %6 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %6, i32 0, i32 1
  store i32 %_13, i32* %7, align 4
  %8 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %8, align 4
  br label %bb23

bb24:                                             ; preds = %bb22, %bb23
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4, !range !24
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = insertvalue { i32, i32 } undef, i32 %10, 0
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1
  ret { i32, i32 } %14

bb9:                                              ; preds = %bb8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_19 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h40dc0f323a5db63cE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::option::Option<T>::unwrap_unchecked
  %_18 = call align 1 dereferenceable(1) i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h8bd43ba2df660501E"(i8* align 1 dereferenceable_or_null(1) %_19, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc748 to %"core::panic::location::Location"*))
  br label %bb11

bb11:                                             ; preds = %bb10
  %y = load i8, i8* %_18, align 1
; call core::str::validations::utf8_acc_cont_byte
  %15 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h0d1ce065d464191eE(i32 %init, i8 %y)
  store i32 %15, i32* %ch, align 4
  br label %bb12

bb12:                                             ; preds = %bb11
  %_24 = icmp uge i8 %x, -32
  br i1 %_24, label %bb13, label %bb22

bb22:                                             ; preds = %bb21, %bb12
  %_50 = load i32, i32* %ch, align 4
  %16 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %16, i32 0, i32 1
  store i32 %_50, i32* %17, align 4
  %18 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %18, align 4
  br label %bb24

bb13:                                             ; preds = %bb12
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_28 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h40dc0f323a5db63cE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::option::Option<T>::unwrap_unchecked
  %_27 = call align 1 dereferenceable(1) i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h8bd43ba2df660501E"(i8* align 1 dereferenceable_or_null(1) %_28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc750 to %"core::panic::location::Location"*))
  br label %bb15

bb15:                                             ; preds = %bb14
  %z = load i8, i8* %_27, align 1
  %_32 = and i8 %y, 63
  %_31 = zext i8 %_32 to i32
; call core::str::validations::utf8_acc_cont_byte
  %y_z = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h0d1ce065d464191eE(i32 %_31, i8 %z)
  br label %bb16

bb16:                                             ; preds = %bb15
  %_35 = shl i32 %init, 12
  %19 = or i32 %_35, %y_z
  store i32 %19, i32* %ch, align 4
  %_38 = icmp uge i8 %x, -16
  br i1 %_38, label %bb17, label %bb21

bb21:                                             ; preds = %bb20, %bb16
  br label %bb22

bb17:                                             ; preds = %bb16
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_42 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h40dc0f323a5db63cE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::option::Option<T>::unwrap_unchecked
  %_41 = call align 1 dereferenceable(1) i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h8bd43ba2df660501E"(i8* align 1 dereferenceable_or_null(1) %_42, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc752 to %"core::panic::location::Location"*))
  br label %bb19

bb19:                                             ; preds = %bb18
  %w = load i8, i8* %_41, align 1
  %_45 = and i32 %init, 7
  %_44 = shl i32 %_45, 18
; call core::str::validations::utf8_acc_cont_byte
  %_47 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h0d1ce065d464191eE(i32 %y_z, i8 %w)
  br label %bb20

bb20:                                             ; preds = %bb19
  %20 = or i32 %_44, %_47
  store i32 %20, i32* %ch, align 4
  br label %bb21
}

; core::str::validations::utf8_first_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3str11validations15utf8_first_byte17hf55e8058303653bdE(i8 %byte, i32 %width) unnamed_addr #1 {
start:
  %0 = trunc i32 %width to i8
  %1 = and i8 %0, 7
  %_5 = lshr i8 127, %1
  %_3 = and i8 %byte, %_5
  %2 = zext i8 %_3 to i32
  ret i32 %2
}

; core::str::validations::utf8_is_cont_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3str11validations17utf8_is_cont_byte17hb3b32e4af80dc409E(i8 %byte) unnamed_addr #1 {
start:
  %0 = icmp slt i8 %byte, -64
  ret i1 %0
}

; core::str::validations::utf8_acc_cont_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h0d1ce065d464191eE(i32 %ch, i8 %byte) unnamed_addr #1 {
start:
  %_3 = shl i32 %ch, 6
  %_6 = and i8 %byte, 63
  %_5 = zext i8 %_6 to i32
  %0 = or i32 %_3, %_5
  ret i32 %0
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h17869e050714381eE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #0 {
start:
; call <char as core::str::pattern::Pattern>::is_prefix_of
  %0 = call zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hdc9feec9eac7b548E"(i32 %pat, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hc717f29711ba7aaaE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %pat.0, i64 %pat.1) unnamed_addr #0 {
start:
; call <&str as core::str::pattern::Pattern>::is_prefix_of
  %0 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hed3ead4e7bad1bc9E"([0 x i8]* nonnull align 1 %pat.0, i64 %pat.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::str::<impl str>::char_indices
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hfafb8360d876fb4bE"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::str::<impl str>::chars
  %1 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %_2.0 = extractvalue { i8*, i8* } %1, 0
  %_2.1 = extractvalue { i8*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::str::iter::CharIndices"* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %0, i32 0, i32 1
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 0
  store i8* %_2.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1
  store i8* %_2.1, i8** %5, align 8
  ret void
}

; core::str::<impl str>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h8d873b513ac46e96E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %i.0, i64 %i.1) unnamed_addr #1 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h86a63c3f3304666cE"(i64 %i.0, i64 %i.1, [0 x i8]* %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::str::<impl str>::is_char_boundary
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h48c7821a8dd76b85E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %2 = icmp eq i64 %index, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i8 1, i8* %1, align 1
  br label %bb10

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %6 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !6
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %6, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1
  %_6.0 = extractvalue { [0 x i8]*, i64 } %10, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %10, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::get
  %11 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h05a01ca2d4cf7cbaE"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1, i64 %index)
  store i8* %11, i8** %_4, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %12 = bitcast i8** %_4 to {}**
  %13 = load {}*, {}** %12, align 8
  %14 = icmp eq {}* %13, null
  %_9 = select i1 %14, i64 0, i64 1
  switch i64 %_9, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
; call core::str::<impl str>::len
  %_11 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb8

bb5:                                              ; preds = %bb4
  %15 = load i8*, i8** %_4, align 8, !nonnull !6
  %b = load i8, i8* %15, align 1
  %16 = icmp sge i8 %b, -64
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb5
  br label %bb10

bb8:                                              ; preds = %bb7
  %18 = icmp eq i64 %index, %_11
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb1, %bb9
  %20 = load i8, i8* %1, align 1, !range !2
  %21 = trunc i8 %20 to i1
  ret i1 %21
}

; core::str::<impl str>::trim_start_matches
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$18trim_start_matches17hb8cc9abd29dec8bfE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %pat.0, i64 %pat.1) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_14 = alloca { i64, i64 }, align 8
  %_8 = alloca %"core::option::Option<(usize, usize)>", align 8
  %matcher = alloca %"core::str::pattern::StrSearcher", align 8
  %i = alloca i64, align 8
  store i8 0, i8* %_18, align 1
  store i8 1, i8* %_18, align 1
; invoke core::str::<impl str>::len
  %1 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 %1, i64* %i, align 8
  store i8 0, i8* %_18, align 1
; invoke <&str as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h43552f5c9821a049E"(%"core::str::pattern::StrSearcher"* noalias nocapture sret(%"core::str::pattern::StrSearcher") dereferenceable(104) %matcher, [0 x i8]* nonnull align 1 %pat.0, i64 %pat.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %bb9, %cleanup
  %2 = load i8, i8* %_18, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb11, label %bb10

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; invoke core::str::pattern::Searcher::next_reject
  invoke void @_ZN4core3str7pattern8Searcher11next_reject17h7facdaa57361b2faE(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %_8, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %matcher)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
  %9 = bitcast %"core::option::Option<(usize, usize)>"* %_8 to i64*
  %_10 = load i64, i64* %9, align 8, !range !5
  %10 = icmp eq i64 %_10, 1
  br i1 %10, label %bb4, label %bb5

bb9:                                              ; preds = %cleanup1
  br label %bb12

cleanup1:                                         ; preds = %bb6, %bb5, %bb2
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %_8 to %"core::option::Option<(usize, usize)>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %16, i32 0, i32 1
  %18 = bitcast { i64, i64 }* %17 to i64*
  %a = load i64, i64* %18, align 8
  store i64 %a, i64* %i, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %_15 = load i64, i64* %i, align 8
; invoke core::str::<impl str>::len
  %_16 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
  %19 = bitcast { i64, i64 }* %_14 to i64*
  store i64 %_15, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1
  store i64 %_16, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
; invoke core::str::<impl str>::get_unchecked
  %25 = invoke { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h8d873b513ac46e96E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %22, i64 %24)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
  %26 = extractvalue { [0 x i8]*, i64 } %25, 0
  %27 = extractvalue { [0 x i8]*, i64 } %25, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %28 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %26, 0
  %29 = insertvalue { [0 x i8]*, i64 } %28, i64 %27, 1
  ret { [0 x i8]*, i64 } %29

bb10:                                             ; preds = %bb11, %bb12
  %30 = bitcast { i8*, i32 }* %0 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = insertvalue { i8*, i32 } undef, i8* %31, 0
  %35 = insertvalue { i8*, i32 } %34, i32 %33, 1
  resume { i8*, i32 } %35

bb11:                                             ; preds = %bb12
  br label %bb10
}

; core::str::<impl str>::len
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !6
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_3.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %_3.1
}

; core::str::<impl str>::find
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17h41ecc67da3de3ae3E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_5 = alloca %"core::str::pattern::CharPredicateSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>", align 8
  %_3 = alloca %"core::option::Option<(usize, usize)>", align 8
; call <F as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h9e7d5443b5096640E"(%"core::str::pattern::CharPredicateSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* noalias nocapture sret(%"core::str::pattern::CharPredicateSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>") dereferenceable(40) %_5, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_match
  invoke void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17hc5e673ddd913682eE"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %_3, %"core::str::pattern::CharPredicateSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* align 8 dereferenceable(40) %_5)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::option::Option<T>::map
  %1 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h5ed6493e0addb790E"(%"core::option::Option<(usize, usize)>"* noalias nocapture dereferenceable(24) %_3)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  br label %bb6

cleanup:                                          ; preds = %bb2, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %7 = extractvalue { i64, i64 } %1, 0
  %8 = extractvalue { i64, i64 } %1, 1
  br label %bb4

bb6:                                              ; preds = %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb3
  %15 = insertvalue { i64, i64 } undef, i64 %7, 0
  %16 = insertvalue { i64, i64 } %15, i64 %8, 1
  ret { i64, i64 } %16
}

; core::str::<impl str>::find
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17hbb8c4a36cdf0e183E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %pat.0, i64 %pat.1) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_5 = alloca %"core::str::pattern::StrSearcher", align 8
  %_3 = alloca %"core::option::Option<(usize, usize)>", align 8
; call <&str as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h43552f5c9821a049E"(%"core::str::pattern::StrSearcher"* noalias nocapture sret(%"core::str::pattern::StrSearcher") dereferenceable(104) %_5, [0 x i8]* nonnull align 1 %pat.0, i64 %pat.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
  invoke void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h671db233acf35392E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %_3, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %_5)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::option::Option<T>::map
  %1 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h0786bc332bce67c6E"(%"core::option::Option<(usize, usize)>"* noalias nocapture dereferenceable(24) %_3)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  br label %bb6

cleanup:                                          ; preds = %bb2, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %7 = extractvalue { i64, i64 } %1, 0
  %8 = extractvalue { i64, i64 } %1, 1
  br label %bb4

bb6:                                              ; preds = %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb3
  %15 = insertvalue { i64, i64 } undef, i64 %7, 0
  %16 = insertvalue { i64, i64 } %15, i64 %8, 1
  ret { i64, i64 } %16
}

; core::str::<impl str>::find
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17hf68a4fb6da6fd210E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_5 = alloca %"core::str::pattern::CharSearcher", align 8
  %_3 = alloca %"core::option::Option<(usize, usize)>", align 8
; call <char as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h28496ea10dea2771E"(%"core::str::pattern::CharSearcher"* noalias nocapture sret(%"core::str::pattern::CharSearcher") dereferenceable(48) %_5, i32 %pat, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  invoke void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h4ce60acc40096f64E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %_3, %"core::str::pattern::CharSearcher"* align 8 dereferenceable(48) %_5)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::option::Option<T>::map
  %1 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hf6a091b62e7ac156E"(%"core::option::Option<(usize, usize)>"* noalias nocapture dereferenceable(24) %_3)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  br label %bb6

cleanup:                                          ; preds = %bb2, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %7 = extractvalue { i64, i64 } %1, 0
  %8 = extractvalue { i64, i64 } %1, 1
  br label %bb4

bb6:                                              ; preds = %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb3
  %15 = insertvalue { i64, i64 } undef, i64 %7, 0
  %16 = insertvalue { i64, i64 } %15, i64 %8, 1
  ret { i64, i64 } %16
}

; core::str::<impl str>::find::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h38314583fc6f1e77E"(i64 %_2.0, i64 %_2.1) unnamed_addr #1 {
start:
  ret i64 %_2.0
}

; core::str::<impl str>::find::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h653ac9a31f25c445E"(i64 %_2.0, i64 %_2.1) unnamed_addr #1 {
start:
  ret i64 %_2.0
}

; core::str::<impl str>::find::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h6965f291c5cf2354E"(i64 %_2.0, i64 %_2.1) unnamed_addr #1 {
start:
  ret i64 %_2.0
}

; core::str::<impl str>::bytes
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h7ba8043217c2c4a8E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !6
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_5.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %10 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17he6a2d7cc33388660E"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1)
  %_3.0 = extractvalue { i8*, i8* } %10, 0
  %_3.1 = extractvalue { i8*, i8* } %10, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::iter::traits::iterator::Iterator::copied
  %11 = call { i8*, i8* } @_ZN4core4iter6traits8iterator8Iterator6copied17h5c043c9882b2aa85E(i8* nonnull %_3.0, i8* %_3.1)
  %_2.0 = extractvalue { i8*, i8* } %11, 0
  %_2.1 = extractvalue { i8*, i8* } %11, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  store i8* %_2.0, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  store i8* %_2.1, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8, !nonnull !6
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = insertvalue { i8*, i8* } undef, i8* %15, 0
  %19 = insertvalue { i8*, i8* } %18, i8* %17, 1
  ret { i8*, i8* } %19
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !6
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %10 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17he6a2d7cc33388660E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  %_2.0 = extractvalue { i8*, i8* } %10, 0
  %_2.1 = extractvalue { i8*, i8* } %10, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  store i8* %_2.0, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  store i8* %_2.1, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !nonnull !6
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = insertvalue { i8*, i8* } undef, i8* %14, 0
  %18 = insertvalue { i8*, i8* } %17, i8* %16, 1
  ret { i8*, i8* } %18
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define i128 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h4b528cbc76aacb5aE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %1 = alloca %"core::result::Result<usize, core::num::error::ParseIntError>", align 8
; call core::num::<impl core::str::traits::FromStr for usize>::from_str
  %2 = call i128 @"_ZN4core3num62_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$usize$GT$8from_str17hb268c63d5f3c609dE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  store i128 %2, i128* %0, align 8
  %3 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %1 to i8*
  %4 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %1 to i128*
  %6 = load i128, i128* %5, align 8
  ret i128 %6
}

; core::str::<impl str>::split
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h91a70761629a9e2dE"(%"core::str::iter::Split<char>"* noalias nocapture sret(%"core::str::iter::Split<char>") dereferenceable(72) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_6 = alloca %"core::str::pattern::CharSearcher", align 8
  %_3 = alloca %"core::str::iter::SplitInternal<char>", align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
; invoke core::str::<impl str>::len
  %_4 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke <char as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h28496ea10dea2771E"(%"core::str::pattern::CharSearcher"* noalias nocapture sret(%"core::str::pattern::CharSearcher") dereferenceable(48) %_6, i32 %pat, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_9, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  %9 = bitcast %"core::str::iter::SplitInternal<char>"* %_3 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 1
  store i64 %_4, i64* %10, align 8
  %11 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 2
  %12 = bitcast %"core::str::pattern::CharSearcher"* %11 to i8*
  %13 = bitcast %"core::str::pattern::CharSearcher"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 48, i1 false)
  %14 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 3
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 4
  store i8 0, i8* %15, align 1
  %16 = bitcast %"core::str::iter::Split<char>"* %0 to %"core::str::iter::SplitInternal<char>"*
  %17 = bitcast %"core::str::iter::SplitInternal<char>"* %16 to i8*
  %18 = bitcast %"core::str::iter::SplitInternal<char>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 72, i1 false)
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %19 = bitcast { i8*, i32 }* %1 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::str::<impl str>::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17he6e5338d5d9dd13dE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::str::<impl str>::len
  %_2 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i64 %_2, 0
  ret i1 %0
}

; core::str::iter::SplitInternal<P>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17he453451379a925d7E"(%"core::str::iter::SplitInternal<char>"* align 8 dereferenceable(72) %self) unnamed_addr #1 {
start:
  %_12 = alloca { i64, i64 }, align 8
  %_5 = alloca %"core::option::Option<(usize, usize)>", align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 4
  %2 = load i8, i8* %1, align 1, !range !2
  %_2 = trunc i8 %2 to i1
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_4 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 2
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %3 = call { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h371a5ff59cec3ad2E"(%"core::str::pattern::CharSearcher"* align 8 dereferenceable(48) %_4)
  %haystack.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %haystack.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb1:                                              ; preds = %start
  %4 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %4, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb1
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10

bb3:                                              ; preds = %bb2
  %_6 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 2
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h4ce60acc40096f64E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %_5, %"core::str::pattern::CharSearcher"* align 8 dereferenceable(48) %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  %11 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to i64*
  %_7 = load i64, i64* %11, align 8, !range !5
  switch i64 %_7, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
; call core::str::iter::SplitInternal<P>::get_end
  %12 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h62a4b5542acbc371E"(%"core::str::iter::SplitInternal<char>"* align 8 dereferenceable(72) %self)
  store { i8*, i64 } %12, { i8*, i64 }* %0, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
  %13 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %13, i32 0, i32 1
  %15 = bitcast { i64, i64 }* %14 to i64*
  %a = load i64, i64* %15, align 8
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %16, i32 0, i32 1
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  %b = load i64, i64* %18, align 8
  %19 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*
  %_13 = load i64, i64* %19, align 8
  %20 = bitcast { i64, i64 }* %_12 to i64*
  store i64 %_13, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  store i64 %a, i64* %21, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
; call core::str::<impl str>::get_unchecked
  %26 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h8d873b513ac46e96E"([0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, i64 %23, i64 %25)
  %elt.0 = extractvalue { [0 x i8]*, i64 } %26, 0
  %elt.1 = extractvalue { [0 x i8]*, i64 } %26, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %27 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*
  store i64 %b, i64* %27, align 8
  %28 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  store [0 x i8]* %elt.0, [0 x i8]** %29, align 8
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  store i64 %elt.1, i64* %30, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  br label %bb11

bb9:                                              ; preds = %bb5
  br label %bb10
}

; core::str::iter::SplitInternal<P>::get_end
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h62a4b5542acbc371E"(%"core::str::iter::SplitInternal<char>"* align 8 dereferenceable(72) %self) unnamed_addr #1 {
start:
  %_15 = alloca { i64, i64 }, align 8
  %_5 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 4
  %2 = load i8, i8* %1, align 1, !range !2
  %_4 = trunc i8 %2 to i1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %_6 = trunc i8 %4 to i1
  br i1 %_6, label %bb4, label %bb5

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %5, align 8
  %6 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*
  %_10 = load i64, i64* %6, align 8
  %_8 = sub i64 %_9, %_10
  %_7 = icmp ugt i64 %_8, 0
  %7 = zext i1 %_7 to i8
  store i8 %7, i8* %_5, align 1
  br label %bb6

bb4:                                              ; preds = %bb2
  store i8 1, i8* %_5, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %8 = load i8, i8* %_5, align 1, !range !2
  %9 = trunc i8 %8 to i1
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb6
  %11 = load i8, i8* %_2, align 1, !range !2
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb7, label %bb10

bb10:                                             ; preds = %bb3
  %13 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %13, align 8
  br label %bb11

bb7:                                              ; preds = %bb3
  %14 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 4
  store i8 1, i8* %14, align 1
  %_14 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 2
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %15 = call { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h371a5ff59cec3ad2E"(%"core::str::pattern::CharSearcher"* align 8 dereferenceable(48) %_14)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %15, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %15, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %16 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*
  %_16 = load i64, i64* %16, align 8
  %17 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 1
  %_17 = load i64, i64* %17, align 8
  %18 = bitcast { i64, i64 }* %_15 to i64*
  store i64 %_16, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1
  store i64 %_17, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
; call core::str::<impl str>::get_unchecked
  %24 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h8d873b513ac46e96E"([0 x i8]* nonnull align 1 %_13.0, i64 %_13.1, i64 %21, i64 %23)
  %string.0 = extractvalue { [0 x i8]*, i64 } %24, 0
  %string.1 = extractvalue { [0 x i8]*, i64 } %24, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %25 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 0
  store [0 x i8]* %string.0, [0 x i8]** %26, align 8
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 1
  store i64 %string.1, i64* %27, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = insertvalue { i8*, i64 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i64 } %32, i64 %31, 1
  ret { i8*, i64 } %33
}

; core::str::iter::Chars::as_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str4iter5Chars6as_str17hef705208b8aa219eE({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::slice::iter::Iter<T>::as_slice
  %0 = call { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h244c7f87283dffd7E"({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked
  %1 = call { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h8933d2e11a4a4655E([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h86a63c3f3304666cE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h0bbd403b1603ee00E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_6, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %len = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hb9ba4c632b53cefcE(i8* %2, i64 %len)
  %_12.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_12.0, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_12.1, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17hb779e04baf9882ffE"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %_5 = icmp ule i64 %self.0, %self.1
  br i1 %_5, label %bb5, label %bb4

bb4:                                              ; preds = %start
  store i8 0, i8* %_4, align 1
  br label %bb6

bb5:                                              ; preds = %start
; call core::str::<impl str>::is_char_boundary
  %_8 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h48c7821a8dd76b85E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %self.0)
  br label %bb7

bb7:                                              ; preds = %bb5
  %1 = zext i1 %_8 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb6

bb6:                                              ; preds = %bb4, %bb7
  %2 = load i8, i8* %_4, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb2, label %bb1

bb1:                                              ; preds = %bb6
  store i8 0, i8* %_3, align 1
  br label %bb3

bb2:                                              ; preds = %bb6
; call core::str::<impl str>::is_char_boundary
  %_11 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h48c7821a8dd76b85E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %self.1)
  br label %bb8

bb8:                                              ; preds = %bb2
  %4 = zext i1 %_11 to i8
  store i8 %4, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb8
  %5 = load i8, i8* %_3, align 1, !range !2
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb9, label %bb11

bb11:                                             ; preds = %bb3
  %7 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %7, align 8
  br label %bb12

bb9:                                              ; preds = %bb3
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %8 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h86a63c3f3304666cE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_16.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_16.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %9 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  store [0 x i8]* %_16.0, [0 x i8]** %10, align 8
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  store i64 %_16.1, i64* %11, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { i8*, i64 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i64 } %16, i64 %15, 1
  ret { i8*, i64 } %17
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index17h03dffb97f6cbb55bE"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_8 = alloca { i8*, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %_5 to i64*
  %start1 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %end = load i64, i64* %4, align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get
  %5 = call { i8*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17hb779e04baf9882ffE"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  store { i8*, i64 } %5, { i8*, i64 }* %_8, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast { i8*, i64 }* %_8 to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_11 = select i1 %8, i64 0, i64 1
  switch i64 %_11, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17ha499ccf9a8f75ce3E([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %start1, i64 %end, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #12
  unreachable

bb4:                                              ; preds = %bb1
  %9 = bitcast { i8*, i64 }* %_8 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !6
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %s.1 = load i64, i64* %11, align 8
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %s.0, 0
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %s.1, 1
  ret { [0 x i8]*, i64 } %13
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$13get_unchecked17h34c674fcefa8fe64E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %ptr = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h0bbd403b1603ee00E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hb9ba4c632b53cefcE(i8* %ptr, i64 %self)
  %_7.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_7.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_7.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$3get17ha2db7c097b064502E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca { i8*, i64 }, align 8
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h48c7821a8dd76b85E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::get_unchecked
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$13get_unchecked17h34c674fcefa8fe64E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  %_8.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %_8.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %_8.1, i64* %5, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i64 } %10, i64 %9, 1
  ret { i8*, i64 } %11
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$5index17h1b173a624fa0bd16E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_4 = alloca { i8*, i64 }, align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::get
  %1 = call { i8*, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$3get17ha2db7c097b064502E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  store { i8*, i64 } %1, { i8*, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i8*, i64 }* %_4 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_7 = select i1 %4, i64 0, i64 1
  switch i64 %_7, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17ha499ccf9a8f75ce3E([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 0, i64 %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #12
  unreachable

bb4:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64 }* %_4 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !6
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %s.1 = load i64, i64* %7, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %s.0, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %s.1, 1
  ret { [0 x i8]*, i64 } %9
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h59c01d8d27e1985bE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h0bbd403b1603ee00E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_6, i64 %self
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_10 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h65ce1de157f6c9dcE"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %len = sub i64 %_10, %self
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hb9ba4c632b53cefcE(i8* %2, i64 %len)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_13.0, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_13.1, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h7f32dba5bd64f987E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca { i8*, i64 }, align 8
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h48c7821a8dd76b85E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h59c01d8d27e1985bE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  %_8.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %_8.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %_8.1, i64* %5, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i64 } %10, i64 %9, 1
  ret { i8*, i64 } %11
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17h50a9cf437b618eacE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_9 = alloca { i8*, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
; call core::str::<impl str>::len
  %_7 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 %self, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %_7, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %_5 to i64*
  %start1 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %end = load i64, i64* %4, align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
  %5 = call { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h7f32dba5bd64f987E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  store { i8*, i64 } %5, { i8*, i64 }* %_9, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = bitcast { i8*, i64 }* %_9 to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_12 = select i1 %8, i64 0, i64 1
  switch i64 %_12, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17ha499ccf9a8f75ce3E([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %start1, i64 %end, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #12
  unreachable

bb5:                                              ; preds = %bb2
  %9 = bitcast { i8*, i64 }* %_9 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !6
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %s.1 = load i64, i64* %11, align 8
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %s.0, 0
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %s.1, 1
  ret { [0 x i8]*, i64 } %13
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeInclusive<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits117_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeInclusive$LT$usize$GT$$GT$5index17h3daf59e9e7bb0249E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_8 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
; call core::ops::range::RangeInclusive<Idx>::end
  %_5 = call align 8 dereferenceable(8) i64* @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h2a9eb99a79d8b187E"(%"core::ops::range::RangeInclusive<usize>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = load i64, i64* %_5, align 8
  %_3 = icmp eq i64 %_4, -1
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %1 = bitcast %"core::ops::range::RangeInclusive<usize>"* %_8 to i8*
  %2 = bitcast %"core::ops::range::RangeInclusive<usize>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call core::ops::range::RangeInclusive<usize>::into_slice_range
  %3 = call { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17hd33dcf4176ab1197E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_8)
  %_7.0 = extractvalue { i64, i64 } %3, 0
  %_7.1 = extractvalue { i64, i64 } %3, 1
  br label %bb4

bb2:                                              ; preds = %bb1
; call core::str::traits::str_index_overflow_fail
  call void @_ZN4core3str6traits23str_index_overflow_fail17h7d1701bcb00132c1E(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) #12
  unreachable

bb4:                                              ; preds = %bb3
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::index
  %4 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index17h03dffb97f6cbb55bE"(i64 %_7.0, i64 %_7.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %5 = extractvalue { [0 x i8]*, i64 } %4, 0
  %6 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  ret { [0 x i8]*, i64 } %8
}

; core::str::traits::<impl core::cmp::PartialEq for str>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h63f97119377eaa7bE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !6
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  store { [0 x i8]*, i64 } %9, { [0 x i8]*, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %10, align 8
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %other.1, i64* %11, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %13 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !6
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %17 = insertvalue { [0 x i8]*, i64 } %16, i64 %15, 1
  store { [0 x i8]*, i64 } %17, { [0 x i8]*, i64 }* %_7, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %18 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h1595aef07d10a2acE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_4, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %18
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h1a05bb88631985ceE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$5index17h1b173a624fa0bd16E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h355193264e6bccf0E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index17h03dffb97f6cbb55bE"(i64 %index.0, i64 %index.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h91a99f476193f628E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_3 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %1 = bitcast %"core::ops::range::RangeInclusive<usize>"* %_3 to i8*
  %2 = bitcast %"core::ops::range::RangeInclusive<usize>"* %index to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeInclusive<usize>>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits117_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeInclusive$LT$usize$GT$$GT$5index17h3daf59e9e7bb0249E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_3, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17h50a9cf437b618eacE"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::pattern::TwoWaySearcher::byteset_contains
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17h51d696196fb3ccefE(%"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %self, i8 %byte) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 3
  %_5 = load i64, i64* %0, align 8
  %_7 = and i8 %byte, 63
  %_6 = zext i8 %_7 to i64
  %1 = and i64 %_6, 63
  %_4 = lshr i64 %_5, %1
  %_3 = and i64 %_4, 1
  %2 = icmp ne i64 %_3, 0
  ret i1 %2
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern14TwoWaySearcher4next17had5d1c787e1dbed4E(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %self, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, [0 x i8]* nonnull align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #1 {
start:
  %_76 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_72 = alloca { i64, i64 }, align 8
  %start2 = alloca i64, align 8
  %_46 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_41 = alloca { i64, i64 }, align 8
  %start1 = alloca i64, align 8
  %_21 = alloca i8, align 1
  %_10 = alloca i8*, align 8
  %1 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %old_pos = load i64, i64* %1, align 8
  %needle_last = sub i64 %needle.1, 1
  br label %bb1

bb1:                                              ; preds = %bb55, %start
  %2 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_13 = load i64, i64* %2, align 8
  %_12 = add i64 %_13, %needle_last
; call core::slice::<impl [T]>::get
  %3 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h05a01ca2d4cf7cbaE"([0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, i64 %_12)
  store i8* %3, i8** %_10, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast i8** %_10 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_15 = select i1 %6, i64 0, i64 1
  switch i64 %_15, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %7 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  store i64 %haystack.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_20 = load i64, i64* %8, align 8
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17ha9e1bb3cf75be772E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, i64 %old_pos, i64 %_20)
  br label %bb6

bb5:                                              ; preds = %bb2
  %9 = load i8*, i8** %_10, align 8, !nonnull !6
  %b = load i8, i8* %9, align 1
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_22 = call zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h656aff1e9ba37d04E"()
  br label %bb10

bb10:                                             ; preds = %bb5
  br i1 %_22, label %bb8, label %bb7

bb7:                                              ; preds = %bb10
  store i8 0, i8* %_21, align 1
  br label %bb9

bb8:                                              ; preds = %bb10
  %10 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_25 = load i64, i64* %10, align 8
  %_23 = icmp ne i64 %old_pos, %_25
  %11 = zext i1 %_23 to i8
  store i8 %11, i8* %_21, align 1
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %12 = load i8, i8* %_21, align 1, !range !2
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb11, label %bb13

bb13:                                             ; preds = %bb9
; call core::str::pattern::TwoWaySearcher::byteset_contains
  %_29 = call zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17h51d696196fb3ccefE(%"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %self, i8 %b)
  br label %bb14

bb11:                                             ; preds = %bb9
  %14 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_27 = load i64, i64* %14, align 8
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17ha9e1bb3cf75be772E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, i64 %old_pos, i64 %_27)
  br label %bb12

bb12:                                             ; preds = %bb11
  br label %bb56

bb56:                                             ; preds = %bb6, %bb53, %bb12
  ret void

bb14:                                             ; preds = %bb13
  %_28 = xor i1 %_29, true
  br i1 %_28, label %bb15, label %bb18

bb18:                                             ; preds = %bb14
  br i1 %long_period, label %bb19, label %bb20

bb15:                                             ; preds = %bb14
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %16 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %needle.1
  store i64 %18, i64* %15, align 8
  %_34 = xor i1 %long_period, true
  br i1 %_34, label %bb16, label %bb17

bb17:                                             ; preds = %bb16, %bb15
  br label %bb55

bb16:                                             ; preds = %bb15
  %19 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %19, align 8
  br label %bb17

bb55:                                             ; preds = %bb54, %bb17
  br label %bb1

bb20:                                             ; preds = %bb18
  %20 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_38 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %_39 = load i64, i64* %21, align 8
; call core::cmp::max
  %22 = call i64 @_ZN4core3cmp3max17hcbe23ebba52ef57eE(i64 %_38, i64 %_39)
  store i64 %22, i64* %start1, align 8
  br label %bb21

bb19:                                             ; preds = %bb18
  %23 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %start1, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb19
  %_42 = load i64, i64* %start1, align 8
  %25 = bitcast { i64, i64 }* %_41 to i64*
  store i64 %_42, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  store i64 %needle.1, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %31 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h88717dd03e83ae96E"(i64 %28, i64 %30)
  %_40.0 = extractvalue { i64, i64 } %31, 0
  %_40.1 = extractvalue { i64, i64 } %31, 1
  br label %bb23

bb21:                                             ; preds = %bb20
  br label %bb22

bb23:                                             ; preds = %bb22
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_40.0, i64* %32, align 8
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_40.1, i64* %33, align 8
  br label %bb24

bb24:                                             ; preds = %bb34, %bb23
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %34 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2263241b25a82c2eE"({ i64, i64 }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %34, { i64, i64 }* %_46, align 8
  br label %bb25

bb25:                                             ; preds = %bb24
  %35 = bitcast { i64, i64 }* %_46 to i64*
  %_49 = load i64, i64* %35, align 8, !range !5
  switch i64 %_49, label %bb27 [
    i64 0, label %bb28
    i64 1, label %bb26
  ]

bb27:                                             ; preds = %bb25
  unreachable

bb28:                                             ; preds = %bb25
  br i1 %long_period, label %bb35, label %bb36

bb26:                                             ; preds = %bb25
  %36 = bitcast { i64, i64 }* %_46 to %"core::option::Option<usize>::Some"*
  %37 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %36, i32 0, i32 1
  %i = load i64, i64* %37, align 8
  %_55 = icmp ult i64 %i, %needle.1
  %38 = call i1 @llvm.expect.i1(i1 %_55, i1 true)
  br i1 %38, label %bb29, label %panic

bb29:                                             ; preds = %bb26
  %39 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i
  %_52 = load i8, i8* %39, align 1
  %40 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_58 = load i64, i64* %40, align 8
  %_57 = add i64 %_58, %i
  %_61 = icmp ult i64 %_57, %haystack.1
  %41 = call i1 @llvm.expect.i1(i1 %_61, i1 true)
  br i1 %41, label %bb30, label %panic4

panic:                                            ; preds = %bb26
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 %needle.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc754 to %"core::panic::location::Location"*)) #12
  unreachable

bb30:                                             ; preds = %bb29
  %42 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_57
  %_56 = load i8, i8* %42, align 1
  %_51 = icmp ne i8 %_52, %_56
  br i1 %_51, label %bb31, label %bb34

panic4:                                           ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_57, i64 %haystack.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc756 to %"core::panic::location::Location"*)) #12
  unreachable

bb34:                                             ; preds = %bb30
  br label %bb24

bb31:                                             ; preds = %bb30
  %43 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_65 = load i64, i64* %43, align 8
  %_63 = sub i64 %i, %_65
  %_62 = add i64 %_63, 1
  %44 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %45 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %_62
  store i64 %47, i64* %44, align 8
  %_66 = xor i1 %long_period, true
  br i1 %_66, label %bb32, label %bb33

bb33:                                             ; preds = %bb32, %bb31
  br label %bb54

bb32:                                             ; preds = %bb31
  %48 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %48, align 8
  br label %bb33

bb54:                                             ; preds = %bb49, %bb33
  br label %bb55

bb36:                                             ; preds = %bb28
  %49 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %start2, align 8
  br label %bb37

bb35:                                             ; preds = %bb28
  store i64 0, i64* %start2, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35
  %_73 = load i64, i64* %start2, align 8
  %51 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_74 = load i64, i64* %51, align 8
  %52 = bitcast { i64, i64 }* %_72 to i64*
  store i64 %_73, i64* %52, align 8
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  store i64 %_74, i64* %53, align 8
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
; call core::iter::traits::iterator::Iterator::rev
  %58 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h88a84c535c2ee60cE(i64 %55, i64 %57)
  %_71.0 = extractvalue { i64, i64 } %58, 0
  %_71.1 = extractvalue { i64, i64 } %58, 1
  br label %bb38

bb38:                                             ; preds = %bb37
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %59 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac31320b1f9068fcE"(i64 %_71.0, i64 %_71.1)
  %_70.0 = extractvalue { i64, i64 } %59, 0
  %_70.1 = extractvalue { i64, i64 } %59, 1
  br label %bb39

bb39:                                             ; preds = %bb38
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 0
  store i64 %_70.0, i64* %60, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 1
  store i64 %_70.1, i64* %61, align 8
  br label %bb40

bb40:                                             ; preds = %bb50, %bb39
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %62 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd28467a99e0f4855E"({ i64, i64 }* align 8 dereferenceable(16) %iter3)
  store { i64, i64 } %62, { i64, i64 }* %_76, align 8
  br label %bb41

bb41:                                             ; preds = %bb40
  %63 = bitcast { i64, i64 }* %_76 to i64*
  %_79 = load i64, i64* %63, align 8, !range !5
  switch i64 %_79, label %bb43 [
    i64 0, label %bb44
    i64 1, label %bb42
  ]

bb43:                                             ; preds = %bb41
  unreachable

bb44:                                             ; preds = %bb41
  %64 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %match_pos = load i64, i64* %64, align 8
  %65 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %66 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, %needle.1
  store i64 %68, i64* %65, align 8
  %_101 = xor i1 %long_period, true
  br i1 %_101, label %bb51, label %bb52

bb42:                                             ; preds = %bb41
  %69 = bitcast { i64, i64 }* %_76 to %"core::option::Option<usize>::Some"*
  %70 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %69, i32 0, i32 1
  %i5 = load i64, i64* %70, align 8
  %_85 = icmp ult i64 %i5, %needle.1
  %71 = call i1 @llvm.expect.i1(i1 %_85, i1 true)
  br i1 %71, label %bb45, label %panic6

bb45:                                             ; preds = %bb42
  %72 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i5
  %_82 = load i8, i8* %72, align 1
  %73 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_88 = load i64, i64* %73, align 8
  %_87 = add i64 %_88, %i5
  %_91 = icmp ult i64 %_87, %haystack.1
  %74 = call i1 @llvm.expect.i1(i1 %_91, i1 true)
  br i1 %74, label %bb46, label %panic7

panic6:                                           ; preds = %bb42
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i5, i64 %needle.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc758 to %"core::panic::location::Location"*)) #12
  unreachable

bb46:                                             ; preds = %bb45
  %75 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_87
  %_86 = load i8, i8* %75, align 1
  %_81 = icmp ne i8 %_82, %_86
  br i1 %_81, label %bb47, label %bb50

panic7:                                           ; preds = %bb45
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_87, i64 %haystack.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc760 to %"core::panic::location::Location"*)) #12
  unreachable

bb50:                                             ; preds = %bb46
  br label %bb40

bb47:                                             ; preds = %bb46
  %76 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_92 = load i64, i64* %76, align 8
  %77 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %78 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, %_92
  store i64 %80, i64* %77, align 8
  %_93 = xor i1 %long_period, true
  br i1 %_93, label %bb48, label %bb49

bb49:                                             ; preds = %bb48, %bb47
  br label %bb54

bb48:                                             ; preds = %bb47
  %81 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_97 = load i64, i64* %81, align 8
  %82 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %83 = sub i64 %needle.1, %_97
  store i64 %83, i64* %82, align 8
  br label %bb49

bb52:                                             ; preds = %bb51, %bb44
  %_104 = add i64 %match_pos, %needle.1
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h5b36c18d479e081eE"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, i64 %match_pos, i64 %_104)
  br label %bb53

bb51:                                             ; preds = %bb44
  %84 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %84, align 8
  br label %bb52

bb53:                                             ; preds = %bb52
  br label %bb56

bb6:                                              ; preds = %bb3
  br label %bb56
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern14TwoWaySearcher4next17hd220febfead098cfE(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, %"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %self, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, [0 x i8]* nonnull align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #1 {
start:
  %_76 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_72 = alloca { i64, i64 }, align 8
  %start2 = alloca i64, align 8
  %_46 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_41 = alloca { i64, i64 }, align 8
  %start1 = alloca i64, align 8
  %_21 = alloca i8, align 1
  %_10 = alloca i8*, align 8
  %1 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %old_pos = load i64, i64* %1, align 8
  %needle_last = sub i64 %needle.1, 1
  br label %bb1

bb1:                                              ; preds = %bb55, %start
  %2 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_13 = load i64, i64* %2, align 8
  %_12 = add i64 %_13, %needle_last
; call core::slice::<impl [T]>::get
  %3 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h05a01ca2d4cf7cbaE"([0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, i64 %_12)
  store i8* %3, i8** %_10, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast i8** %_10 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_15 = select i1 %6, i64 0, i64 1
  switch i64 %_15, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %7 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  store i64 %haystack.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_20 = load i64, i64* %8, align 8
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hd67ea3511d952eaeE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %old_pos, i64 %_20)
  br label %bb6

bb5:                                              ; preds = %bb2
  %9 = load i8*, i8** %_10, align 8, !nonnull !6
  %b = load i8, i8* %9, align 1
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_22 = call zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h4a07b96dc6ea8c06E"()
  br label %bb10

bb10:                                             ; preds = %bb5
  br i1 %_22, label %bb8, label %bb7

bb7:                                              ; preds = %bb10
  store i8 0, i8* %_21, align 1
  br label %bb9

bb8:                                              ; preds = %bb10
  %10 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_25 = load i64, i64* %10, align 8
  %_23 = icmp ne i64 %old_pos, %_25
  %11 = zext i1 %_23 to i8
  store i8 %11, i8* %_21, align 1
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %12 = load i8, i8* %_21, align 1, !range !2
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb11, label %bb13

bb13:                                             ; preds = %bb9
; call core::str::pattern::TwoWaySearcher::byteset_contains
  %_29 = call zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17h51d696196fb3ccefE(%"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %self, i8 %b)
  br label %bb14

bb11:                                             ; preds = %bb9
  %14 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_27 = load i64, i64* %14, align 8
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hd67ea3511d952eaeE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %old_pos, i64 %_27)
  br label %bb12

bb12:                                             ; preds = %bb11
  br label %bb56

bb56:                                             ; preds = %bb6, %bb53, %bb12
  ret void

bb14:                                             ; preds = %bb13
  %_28 = xor i1 %_29, true
  br i1 %_28, label %bb15, label %bb18

bb18:                                             ; preds = %bb14
  br i1 %long_period, label %bb19, label %bb20

bb15:                                             ; preds = %bb14
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %16 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %needle.1
  store i64 %18, i64* %15, align 8
  %_34 = xor i1 %long_period, true
  br i1 %_34, label %bb16, label %bb17

bb17:                                             ; preds = %bb16, %bb15
  br label %bb55

bb16:                                             ; preds = %bb15
  %19 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %19, align 8
  br label %bb17

bb55:                                             ; preds = %bb54, %bb17
  br label %bb1

bb20:                                             ; preds = %bb18
  %20 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_38 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %_39 = load i64, i64* %21, align 8
; call core::cmp::max
  %22 = call i64 @_ZN4core3cmp3max17hcbe23ebba52ef57eE(i64 %_38, i64 %_39)
  store i64 %22, i64* %start1, align 8
  br label %bb21

bb19:                                             ; preds = %bb18
  %23 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %start1, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb19
  %_42 = load i64, i64* %start1, align 8
  %25 = bitcast { i64, i64 }* %_41 to i64*
  store i64 %_42, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  store i64 %needle.1, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %31 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h88717dd03e83ae96E"(i64 %28, i64 %30)
  %_40.0 = extractvalue { i64, i64 } %31, 0
  %_40.1 = extractvalue { i64, i64 } %31, 1
  br label %bb23

bb21:                                             ; preds = %bb20
  br label %bb22

bb23:                                             ; preds = %bb22
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_40.0, i64* %32, align 8
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_40.1, i64* %33, align 8
  br label %bb24

bb24:                                             ; preds = %bb34, %bb23
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %34 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2263241b25a82c2eE"({ i64, i64 }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %34, { i64, i64 }* %_46, align 8
  br label %bb25

bb25:                                             ; preds = %bb24
  %35 = bitcast { i64, i64 }* %_46 to i64*
  %_49 = load i64, i64* %35, align 8, !range !5
  switch i64 %_49, label %bb27 [
    i64 0, label %bb28
    i64 1, label %bb26
  ]

bb27:                                             ; preds = %bb25
  unreachable

bb28:                                             ; preds = %bb25
  br i1 %long_period, label %bb35, label %bb36

bb26:                                             ; preds = %bb25
  %36 = bitcast { i64, i64 }* %_46 to %"core::option::Option<usize>::Some"*
  %37 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %36, i32 0, i32 1
  %i = load i64, i64* %37, align 8
  %_55 = icmp ult i64 %i, %needle.1
  %38 = call i1 @llvm.expect.i1(i1 %_55, i1 true)
  br i1 %38, label %bb29, label %panic

bb29:                                             ; preds = %bb26
  %39 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i
  %_52 = load i8, i8* %39, align 1
  %40 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_58 = load i64, i64* %40, align 8
  %_57 = add i64 %_58, %i
  %_61 = icmp ult i64 %_57, %haystack.1
  %41 = call i1 @llvm.expect.i1(i1 %_61, i1 true)
  br i1 %41, label %bb30, label %panic4

panic:                                            ; preds = %bb26
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 %needle.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc754 to %"core::panic::location::Location"*)) #12
  unreachable

bb30:                                             ; preds = %bb29
  %42 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_57
  %_56 = load i8, i8* %42, align 1
  %_51 = icmp ne i8 %_52, %_56
  br i1 %_51, label %bb31, label %bb34

panic4:                                           ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_57, i64 %haystack.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc756 to %"core::panic::location::Location"*)) #12
  unreachable

bb34:                                             ; preds = %bb30
  br label %bb24

bb31:                                             ; preds = %bb30
  %43 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_65 = load i64, i64* %43, align 8
  %_63 = sub i64 %i, %_65
  %_62 = add i64 %_63, 1
  %44 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %45 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %_62
  store i64 %47, i64* %44, align 8
  %_66 = xor i1 %long_period, true
  br i1 %_66, label %bb32, label %bb33

bb33:                                             ; preds = %bb32, %bb31
  br label %bb54

bb32:                                             ; preds = %bb31
  %48 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %48, align 8
  br label %bb33

bb54:                                             ; preds = %bb49, %bb33
  br label %bb55

bb36:                                             ; preds = %bb28
  %49 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %start2, align 8
  br label %bb37

bb35:                                             ; preds = %bb28
  store i64 0, i64* %start2, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35
  %_73 = load i64, i64* %start2, align 8
  %51 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_74 = load i64, i64* %51, align 8
  %52 = bitcast { i64, i64 }* %_72 to i64*
  store i64 %_73, i64* %52, align 8
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  store i64 %_74, i64* %53, align 8
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
; call core::iter::traits::iterator::Iterator::rev
  %58 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h88a84c535c2ee60cE(i64 %55, i64 %57)
  %_71.0 = extractvalue { i64, i64 } %58, 0
  %_71.1 = extractvalue { i64, i64 } %58, 1
  br label %bb38

bb38:                                             ; preds = %bb37
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %59 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac31320b1f9068fcE"(i64 %_71.0, i64 %_71.1)
  %_70.0 = extractvalue { i64, i64 } %59, 0
  %_70.1 = extractvalue { i64, i64 } %59, 1
  br label %bb39

bb39:                                             ; preds = %bb38
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 0
  store i64 %_70.0, i64* %60, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 1
  store i64 %_70.1, i64* %61, align 8
  br label %bb40

bb40:                                             ; preds = %bb50, %bb39
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %62 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd28467a99e0f4855E"({ i64, i64 }* align 8 dereferenceable(16) %iter3)
  store { i64, i64 } %62, { i64, i64 }* %_76, align 8
  br label %bb41

bb41:                                             ; preds = %bb40
  %63 = bitcast { i64, i64 }* %_76 to i64*
  %_79 = load i64, i64* %63, align 8, !range !5
  switch i64 %_79, label %bb43 [
    i64 0, label %bb44
    i64 1, label %bb42
  ]

bb43:                                             ; preds = %bb41
  unreachable

bb44:                                             ; preds = %bb41
  %64 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %match_pos = load i64, i64* %64, align 8
  %65 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %66 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, %needle.1
  store i64 %68, i64* %65, align 8
  %_101 = xor i1 %long_period, true
  br i1 %_101, label %bb51, label %bb52

bb42:                                             ; preds = %bb41
  %69 = bitcast { i64, i64 }* %_76 to %"core::option::Option<usize>::Some"*
  %70 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %69, i32 0, i32 1
  %i5 = load i64, i64* %70, align 8
  %_85 = icmp ult i64 %i5, %needle.1
  %71 = call i1 @llvm.expect.i1(i1 %_85, i1 true)
  br i1 %71, label %bb45, label %panic6

bb45:                                             ; preds = %bb42
  %72 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i5
  %_82 = load i8, i8* %72, align 1
  %73 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_88 = load i64, i64* %73, align 8
  %_87 = add i64 %_88, %i5
  %_91 = icmp ult i64 %_87, %haystack.1
  %74 = call i1 @llvm.expect.i1(i1 %_91, i1 true)
  br i1 %74, label %bb46, label %panic7

panic6:                                           ; preds = %bb42
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i5, i64 %needle.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc758 to %"core::panic::location::Location"*)) #12
  unreachable

bb46:                                             ; preds = %bb45
  %75 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_87
  %_86 = load i8, i8* %75, align 1
  %_81 = icmp ne i8 %_82, %_86
  br i1 %_81, label %bb47, label %bb50

panic7:                                           ; preds = %bb45
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_87, i64 %haystack.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc760 to %"core::panic::location::Location"*)) #12
  unreachable

bb50:                                             ; preds = %bb46
  br label %bb40

bb47:                                             ; preds = %bb46
  %76 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_92 = load i64, i64* %76, align 8
  %77 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %78 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, %_92
  store i64 %80, i64* %77, align 8
  %_93 = xor i1 %long_period, true
  br i1 %_93, label %bb48, label %bb49

bb49:                                             ; preds = %bb48, %bb47
  br label %bb54

bb48:                                             ; preds = %bb47
  %81 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_97 = load i64, i64* %81, align 8
  %82 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %83 = sub i64 %needle.1, %_97
  store i64 %83, i64* %82, align 8
  br label %bb49

bb52:                                             ; preds = %bb51, %bb44
  %_104 = add i64 %match_pos, %needle.1
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h4c975af907074088E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %match_pos, i64 %_104)
  br label %bb53

bb51:                                             ; preds = %bb44
  %84 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %84, align 8
  br label %bb52

bb53:                                             ; preds = %bb52
  br label %bb56

bb6:                                              ; preds = %bb3
  br label %bb56
}

; core::str::pattern::Searcher::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern8Searcher10next_match17h26fdb87801680197E(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_7 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::str::pattern::SearchStep", align 8
  br label %bb1

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
  call void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17hf068f787c864f3b8E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %_2, %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* align 8 dereferenceable(40) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::str::pattern::SearchStep"* %_2 to i64*
  %_4 = load i64, i64* %1, align 8, !range !25
  switch i64 %_4, label %bb5 [
    i64 0, label %bb3
    i64 2, label %bb4
  ]

bb5:                                              ; preds = %bb2
  br label %bb1

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Match"*
  %3 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %2, i32 0, i32 1
  %a = load i64, i64* %3, align 8
  %4 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Match"*
  %5 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %4, i32 0, i32 2
  %b = load i64, i64* %5, align 8
  %6 = bitcast { i64, i64 }* %_7 to i64*
  store i64 %a, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  store i64 %b, i64* %7, align 8
  %8 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %11, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %13, i64* %15, align 8
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %16, align 8
  br label %bb6

bb4:                                              ; preds = %bb2
  %17 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %17, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4
  ret void
}

; core::str::pattern::Searcher::next_reject
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern8Searcher11next_reject17h7facdaa57361b2faE(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %self) unnamed_addr #1 {
start:
  %_7 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::str::pattern::SearchStep", align 8
  br label %bb1

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h4e655480c755dc2eE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %_2, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::str::pattern::SearchStep"* %_2 to i64*
  %_4 = load i64, i64* %1, align 8, !range !25
  switch i64 %_4, label %bb5 [
    i64 1, label %bb3
    i64 2, label %bb4
  ]

bb5:                                              ; preds = %bb2
  br label %bb1

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Reject"*
  %3 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %2, i32 0, i32 1
  %a = load i64, i64* %3, align 8
  %4 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Reject"*
  %5 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %4, i32 0, i32 2
  %b = load i64, i64* %5, align 8
  %6 = bitcast { i64, i64 }* %_7 to i64*
  store i64 %a, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  store i64 %b, i64* %7, align 8
  %8 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %11, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %13, i64* %15, align 8
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %16, align 8
  br label %bb6

bb4:                                              ; preds = %bb2
  %17 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %17, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4
  ret void
}

; core::str::converts::from_utf8_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h8933d2e11a4a4655E([0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %v.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %v.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !6
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  ret { [0 x i8]*, i64 } %8
}

; core::str::converts::from_utf8_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17h0deab60eb67b076aE([0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #1 {
start:
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %v.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %v.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::char::convert::char_try_from_u32
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4char7convert17char_try_from_u3217ha09c13e56451151fE(i32 %i) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_6 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %1 = alloca i32, align 4
  %_3 = icmp ugt i32 %i, 1114111
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = icmp uge i32 %i, 55296
  br i1 %_7, label %bb5, label %bb4

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb6, %bb1
  %2 = load i8, i8* %_2, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb7, label %bb8

bb4:                                              ; preds = %bb2
  store i8 0, i8* %_6, align 1
  br label %bb6

bb5:                                              ; preds = %bb2
  %_9 = icmp ule i32 %i, 57343
  %4 = zext i1 %_9 to i8
  store i8 %4, i8* %_6, align 1
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %5 = load i8, i8* %_6, align 1, !range !2
  %6 = trunc i8 %5 to i1
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %_2, align 1
  br label %bb3

bb8:                                              ; preds = %bb3
  store i32 %i, i32* %0, align 4
  %_11 = load i32, i32* %0, align 4, !range !9
  br label %bb9

bb7:                                              ; preds = %bb3
  store i32 1114112, i32* %1, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %8 = load i32, i32* %1, align 4, !range !4
  ret i32 %8

bb9:                                              ; preds = %bb8
  store i32 %_11, i32* %1, align 4
  br label %bb10
}

; core::char::convert::from_u32_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4char7convert18from_u32_unchecked17had6c20ad99e9e552E(i32 %i) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  store i32 %i, i32* %0, align 4
  %1 = load i32, i32* %0, align 4, !range !9
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; core::char::convert::from_u32
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4char7convert8from_u3217hfc48b652e448c2aeE(i32 %i) unnamed_addr #1 {
start:
  %_2 = alloca i32, align 4
  %0 = alloca i32, align 4
; call core::char::convert::char_try_from_u32
  %1 = call i32 @_ZN4core4char7convert17char_try_from_u3217ha09c13e56451151fE(i32 %i), !range !4
  store i32 %1, i32* %_2, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i32, i32* %_2, align 4, !range !4
  %3 = sub i32 %2, 1114112
  %4 = icmp eq i32 %3, 0
  %_4 = select i1 %4, i64 1, i64 0
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %c = load i32, i32* %_2, align 4, !range !9
  store i32 %c, i32* %0, align 4
  br label %bb5

bb2:                                              ; preds = %bb1
  store i32 1114112, i32* %0, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %5 = load i32, i32* %0, align 4, !range !4
  ret i32 %5
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h3f7f0c8ead11b966E(i32 %0, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #1 {
start:
  %_95 = alloca i64, align 8
  %_args = alloca { i64*, i32*, i64* }, align 8
  %_80 = alloca i64, align 8
  %_76 = alloca { i64*, i32*, i64* }, align 8
  %_75 = alloca [3 x { i8*, i64* }], align 8
  %_68 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca { i64, { [0 x i8]*, i64 } }, align 8
  %len = alloca i64, align 8
  %code = alloca i32, align 4
  store i32 %0, i32* %code, align 4
  %_5 = load i32, i32* %code, align 4
; call core::char::methods::len_utf8
  %1 = call i64 @_ZN4core4char7methods8len_utf817h1ab4d0029643f55dE(i32 %_5)
  store i64 %1, i64* %len, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %len, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %2 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb045e568327b2c66E"([0 x i8]* nonnull align 1 %dst.0, i64 %dst.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc762 to %"core::panic::location::Location"*))
  %_9.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*
  store i64 %_7, i64* %3, align 8
  %4 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  store [0 x i8]* %_9.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  store i64 %_9.1, i64* %6, align 8
  %7 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*
  %8 = load i64, i64* %7, align 8
  switch i64 %8, label %bb4 [
    i64 1, label %bb3
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
  ]

bb4:                                              ; preds = %bb3, %bb5, %bb6, %bb7, %bb2
  store i64 %dst.1, i64* %_80, align 8
  %9 = bitcast { i64*, i32*, i64* }* %_76 to i64**
  store i64* %len, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 1
  store i32* %code, i32** %10, align 8
  %11 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 2
  store i64* %_80, i64** %11, align 8
  %12 = bitcast { i64*, i32*, i64* }* %_args to i8*
  %13 = bitcast { i64*, i32*, i64* }* %_76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast { i64*, i32*, i64* }* %_args to i64**
  %_84 = load i64*, i64** %14, align 8, !nonnull !6
; call core::fmt::ArgumentV1::new
  %15 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0596ccb07b5ce96cE(i64* align 8 dereferenceable(8) %_84, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE")
  %_83.0 = extractvalue { i8*, i64* } %15, 0
  %_83.1 = extractvalue { i8*, i64* } %15, 1
  br label %bb12

bb3:                                              ; preds = %bb2
  %16 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0
  %18 = load [0 x i8]*, [0 x i8]** %17, align 8, !nonnull !6
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1
  %_12 = load i64, i64* %19, align 8
  %_14 = icmp uge i64 %_12, 1
  br i1 %_14, label %bb8, label %bb4

bb5:                                              ; preds = %bb2
  %20 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0
  %22 = load [0 x i8]*, [0 x i8]** %21, align 8, !nonnull !6
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1
  %_15 = load i64, i64* %23, align 8
  %_17 = icmp uge i64 %_15, 2
  br i1 %_17, label %bb9, label %bb4

bb6:                                              ; preds = %bb2
  %24 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 0
  %26 = load [0 x i8]*, [0 x i8]** %25, align 8, !nonnull !6
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 1
  %_18 = load i64, i64* %27, align 8
  %_20 = icmp uge i64 %_18, 3
  br i1 %_20, label %bb10, label %bb4

bb7:                                              ; preds = %bb2
  %28 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  %30 = load [0 x i8]*, [0 x i8]** %29, align 8, !nonnull !6
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  %_21 = load i64, i64* %31, align 8
  %_23 = icmp uge i64 %_21, 4
  br i1 %_23, label %bb11, label %bb4

bb11:                                             ; preds = %bb7
  %32 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0
  %34 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !6
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %a = getelementptr inbounds [0 x i8], [0 x i8]* %34, i64 0, i64 0
  %37 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0
  %39 = load [0 x i8]*, [0 x i8]** %38, align 8, !nonnull !6
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %b = getelementptr inbounds [0 x i8], [0 x i8]* %39, i64 0, i64 1
  %42 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 0
  %44 = load [0 x i8]*, [0 x i8]** %43, align 8, !nonnull !6
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %c = getelementptr inbounds [0 x i8], [0 x i8]* %44, i64 0, i64 2
  %47 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 0
  %49 = load [0 x i8]*, [0 x i8]** %48, align 8, !nonnull !6
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %d = getelementptr inbounds [0 x i8], [0 x i8]* %49, i64 0, i64 3
  %_56 = load i32, i32* %code, align 4
  %_55 = lshr i32 %_56, 18
  %_54 = and i32 %_55, 7
  %_53 = trunc i32 %_54 to i8
  %52 = or i8 %_53, -16
  store i8 %52, i8* %a, align 1
  %_60 = load i32, i32* %code, align 4
  %_59 = lshr i32 %_60, 12
  %_58 = and i32 %_59, 63
  %_57 = trunc i32 %_58 to i8
  %53 = or i8 %_57, -128
  store i8 %53, i8* %b, align 1
  %_64 = load i32, i32* %code, align 4
  %_63 = lshr i32 %_64, 6
  %_62 = and i32 %_63, 63
  %_61 = trunc i32 %_62 to i8
  %54 = or i8 %_61, -128
  store i8 %54, i8* %c, align 1
  %_67 = load i32, i32* %code, align 4
  %_66 = and i32 %_67, 63
  %_65 = trunc i32 %_66 to i8
  %55 = or i8 %_65, -128
  store i8 %55, i8* %d, align 1
  br label %bb16

bb16:                                             ; preds = %bb8, %bb9, %bb10, %bb11
  %_96 = load i64, i64* %len, align 8
  store i64 %_96, i64* %_95, align 8
  %56 = load i64, i64* %_95, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %57 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h0eb5ac3afd118e37E"([0 x i8]* nonnull align 1 %dst.0, i64 %dst.1, i64 %56, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc764 to %"core::panic::location::Location"*))
  %_93.0 = extractvalue { [0 x i8]*, i64 } %57, 0
  %_93.1 = extractvalue { [0 x i8]*, i64 } %57, 1
  br label %bb17

bb10:                                             ; preds = %bb6
  %58 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0
  %60 = load [0 x i8]*, [0 x i8]** %59, align 8, !nonnull !6
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %a1 = getelementptr inbounds [0 x i8], [0 x i8]* %60, i64 0, i64 0
  %63 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %63, i32 0, i32 0
  %65 = load [0 x i8]*, [0 x i8]** %64, align 8, !nonnull !6
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %63, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %b2 = getelementptr inbounds [0 x i8], [0 x i8]* %65, i64 0, i64 1
  %68 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 0
  %70 = load [0 x i8]*, [0 x i8]** %69, align 8, !nonnull !6
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %c3 = getelementptr inbounds [0 x i8], [0 x i8]* %70, i64 0, i64 2
  %_41 = load i32, i32* %code, align 4
  %_40 = lshr i32 %_41, 12
  %_39 = and i32 %_40, 15
  %_38 = trunc i32 %_39 to i8
  %73 = or i8 %_38, -32
  store i8 %73, i8* %a1, align 1
  %_45 = load i32, i32* %code, align 4
  %_44 = lshr i32 %_45, 6
  %_43 = and i32 %_44, 63
  %_42 = trunc i32 %_43 to i8
  %74 = or i8 %_42, -128
  store i8 %74, i8* %b2, align 1
  %_48 = load i32, i32* %code, align 4
  %_47 = and i32 %_48, 63
  %_46 = trunc i32 %_47 to i8
  %75 = or i8 %_46, -128
  store i8 %75, i8* %c3, align 1
  br label %bb16

bb9:                                              ; preds = %bb5
  %76 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %76, i32 0, i32 0
  %78 = load [0 x i8]*, [0 x i8]** %77, align 8, !nonnull !6
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %76, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %a4 = getelementptr inbounds [0 x i8], [0 x i8]* %78, i64 0, i64 0
  %81 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %82 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %81, i32 0, i32 0
  %83 = load [0 x i8]*, [0 x i8]** %82, align 8, !nonnull !6
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %81, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %b5 = getelementptr inbounds [0 x i8], [0 x i8]* %83, i64 0, i64 1
  %_31 = load i32, i32* %code, align 4
  %_30 = lshr i32 %_31, 6
  %_29 = and i32 %_30, 31
  %_28 = trunc i32 %_29 to i8
  %86 = or i8 %_28, -64
  store i8 %86, i8* %a4, align 1
  %_34 = load i32, i32* %code, align 4
  %_33 = and i32 %_34, 63
  %_32 = trunc i32 %_33 to i8
  %87 = or i8 %_32, -128
  store i8 %87, i8* %b5, align 1
  br label %bb16

bb8:                                              ; preds = %bb3
  %88 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0
  %90 = load [0 x i8]*, [0 x i8]** %89, align 8, !nonnull !6
  %91 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %a6 = getelementptr inbounds [0 x i8], [0 x i8]* %90, i64 0, i64 0
  %_25 = load i32, i32* %code, align 4
  %93 = trunc i32 %_25 to i8
  store i8 %93, i8* %a6, align 1
  br label %bb16

bb17:                                             ; preds = %bb16
  %94 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_93.0, 0
  %95 = insertvalue { [0 x i8]*, i64 } %94, i64 %_93.1, 1
  ret { [0 x i8]*, i64 } %95

bb12:                                             ; preds = %bb4
  %96 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_args, i32 0, i32 1
  %_87 = load i32*, i32** %96, align 8, !nonnull !6
; call core::fmt::ArgumentV1::new
  %97 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hdbf4a7f7c4eea455E(i32* align 4 dereferenceable(4) %_87, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17hef35279af1b2dff0E")
  %_86.0 = extractvalue { i8*, i64* } %97, 0
  %_86.1 = extractvalue { i8*, i64* } %97, 1
  br label %bb13

bb13:                                             ; preds = %bb12
  %98 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_args, i32 0, i32 2
  %_90 = load i64*, i64** %98, align 8, !nonnull !6
; call core::fmt::ArgumentV1::new
  %99 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0596ccb07b5ce96cE(i64* align 8 dereferenceable(8) %_90, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE")
  %_89.0 = extractvalue { i8*, i64* } %99, 0
  %_89.1 = extractvalue { i8*, i64* } %99, 1
  br label %bb14

bb14:                                             ; preds = %bb13
  %100 = bitcast [3 x { i8*, i64* }]* %_75 to { i8*, i64* }*
  %101 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %100, i32 0, i32 0
  store i8* %_83.0, i8** %101, align 8
  %102 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %100, i32 0, i32 1
  store i64* %_83.1, i64** %102, align 8
  %103 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_75, i32 0, i32 1
  %104 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %103, i32 0, i32 0
  store i8* %_86.0, i8** %104, align 8
  %105 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %103, i32 0, i32 1
  store i64* %_86.1, i64** %105, align 8
  %106 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_75, i32 0, i32 2
  %107 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %106, i32 0, i32 0
  store i8* %_89.0, i8** %107, align 8
  %108 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %106, i32 0, i32 1
  store i64* %_89.1, i64** %108, align 8
  %_72.0 = bitcast [3 x { i8*, i64* }]* %_75 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc4c9b02358f4c330E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_68, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc212 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_72.0, i64 3)
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_68, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc766 to %"core::panic::location::Location"*)) #12
  unreachable
}

; core::char::methods::<impl char>::is_control
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$10is_control17h4a717c0a35f3941bE"(i32 %self) unnamed_addr #1 {
start:
; call core::unicode::unicode_data::cc::lookup
  %0 = call zeroext i1 @_ZN4core7unicode12unicode_data2cc6lookup17h5b745ba203a66c1fE(i32 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::char::methods::<impl char>::encode_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h654239ca93107b29E"(i32 %self, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #1 {
start:
  %0 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %0)
; call core::char::methods::encode_utf8_raw
  %1 = call { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h3f7f0c8ead11b966E(i32 %self, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1)
  %_7.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked_mut
  %2 = call { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17h0deab60eb67b076aE([0 x i8]* nonnull align 1 %_7.0, i64 %_7.1)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_5.0, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %_5.1, 1
  ret { [0 x i8]*, i64 } %4
}

; core::char::methods::<impl char>::escape_debug
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12escape_debug17h70bfdf4178534501E"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %0, i32 %self) unnamed_addr #1 {
start:
  %1 = alloca %"core::char::methods::EscapeDebugExtArgs", align 1
  %2 = bitcast %"core::char::methods::EscapeDebugExtArgs"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @0, i32 0, i32 0, i32 0), i64 3, i1 false)
  %3 = bitcast %"core::char::methods::EscapeDebugExtArgs"* %1 to i24*
  %4 = load i24, i24* %3, align 1
; call core::char::methods::<impl char>::escape_debug_ext
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h3bb66381d768ea68E"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %0, i32 %self, i24 %4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::char::methods::<impl char>::escape_unicode
; Function Attrs: inlinehint nonlazybind uwtable
define internal i128 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$14escape_unicode17h23f8ad0ac40ee08dE"(i32 %self) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca %"core::char::EscapeUnicode", align 8
  %2 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %2)
  %_6 = or i32 %self, 1
  %3 = call i32 @llvm.ctlz.i32(i32 %_6, i1 false)
  store i32 %3, i32* %0, align 4
  %4 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %msb = sub i32 31, %4
  %ms_hex_digit = udiv i32 %msb, 4
  %_11 = zext i32 %ms_hex_digit to i64
  %5 = getelementptr inbounds %"core::char::EscapeUnicode", %"core::char::EscapeUnicode"* %1, i32 0, i32 1
  store i32 %self, i32* %5, align 8
  %6 = getelementptr inbounds %"core::char::EscapeUnicode", %"core::char::EscapeUnicode"* %1, i32 0, i32 2
  store i8 5, i8* %6, align 4
  %7 = bitcast %"core::char::EscapeUnicode"* %1 to i64*
  store i64 %_11, i64* %7, align 8
  %8 = bitcast %"core::char::EscapeUnicode"* %1 to i128*
  %9 = load i128, i128* %8, align 8
  ret i128 %9
}

; core::char::methods::<impl char>::escape_debug_ext
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h3bb66381d768ea68E"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %0, i32 %self, i24 %1) unnamed_addr #1 {
start:
  %2 = alloca i128, align 8
  %3 = alloca i128, align 8
  %_21 = alloca %"core::char::EscapeDefaultState", align 8
  %_20 = alloca %"core::char::EscapeDefault", align 8
  %_18 = alloca %"core::char::EscapeUnicode", align 8
  %_13 = alloca %"core::char::EscapeUnicode", align 8
  %_9 = alloca i8, align 1
  %init_state = alloca %"core::char::EscapeDefaultState", align 8
  %4 = alloca i24, align 4
  %args = alloca %"core::char::methods::EscapeDebugExtArgs", align 1
  store i24 %1, i24* %4, align 4
  %5 = bitcast %"core::char::methods::EscapeDebugExtArgs"* %args to i8*
  %6 = bitcast i24* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 4 %6, i64 3, i1 false)
  switch i32 %self, label %bb11 [
    i32 9, label %bb1
    i32 13, label %bb2
    i32 10, label %bb3
    i32 92, label %bb4
    i32 34, label %bb5
    i32 39, label %bb8
  ]

bb11:                                             ; preds = %bb7, %bb10, %start
  %7 = bitcast %"core::char::methods::EscapeDebugExtArgs"* %args to i8*
  %8 = load i8, i8* %7, align 1, !range !2
  %_10 = trunc i8 %8 to i1
  br i1 %_10, label %bb13, label %bb12

bb1:                                              ; preds = %start
  %9 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Backslash"*
  %10 = getelementptr inbounds %"core::char::EscapeDefaultState::Backslash", %"core::char::EscapeDefaultState::Backslash"* %9, i32 0, i32 1
  store i32 116, i32* %10, align 4
  %11 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 2, i32* %11, align 8
  br label %bb23

bb2:                                              ; preds = %start
  %12 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Backslash"*
  %13 = getelementptr inbounds %"core::char::EscapeDefaultState::Backslash", %"core::char::EscapeDefaultState::Backslash"* %12, i32 0, i32 1
  store i32 114, i32* %13, align 4
  %14 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 2, i32* %14, align 8
  br label %bb23

bb3:                                              ; preds = %start
  %15 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Backslash"*
  %16 = getelementptr inbounds %"core::char::EscapeDefaultState::Backslash", %"core::char::EscapeDefaultState::Backslash"* %15, i32 0, i32 1
  store i32 110, i32* %16, align 4
  %17 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 2, i32* %17, align 8
  br label %bb23

bb4:                                              ; preds = %start
  %18 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Backslash"*
  %19 = getelementptr inbounds %"core::char::EscapeDefaultState::Backslash", %"core::char::EscapeDefaultState::Backslash"* %18, i32 0, i32 1
  store i32 %self, i32* %19, align 4
  %20 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 2, i32* %20, align 8
  br label %bb23

bb5:                                              ; preds = %start
  %21 = getelementptr inbounds %"core::char::methods::EscapeDebugExtArgs", %"core::char::methods::EscapeDebugExtArgs"* %args, i32 0, i32 2
  %22 = load i8, i8* %21, align 1, !range !2
  %_5 = trunc i8 %22 to i1
  br i1 %_5, label %bb6, label %bb7

bb8:                                              ; preds = %start
  %23 = getelementptr inbounds %"core::char::methods::EscapeDebugExtArgs", %"core::char::methods::EscapeDebugExtArgs"* %args, i32 0, i32 1
  %24 = load i8, i8* %23, align 1, !range !2
  %_7 = trunc i8 %24 to i1
  br i1 %_7, label %bb9, label %bb10

bb10:                                             ; preds = %bb8
  br label %bb11

bb9:                                              ; preds = %bb8
  %25 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Backslash"*
  %26 = getelementptr inbounds %"core::char::EscapeDefaultState::Backslash", %"core::char::EscapeDefaultState::Backslash"* %25, i32 0, i32 1
  store i32 %self, i32* %26, align 4
  %27 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 2, i32* %27, align 8
  br label %bb23

bb23:                                             ; preds = %bb1, %bb2, %bb3, %bb4, %bb22, %bb20, %bb18, %bb6, %bb9
  %28 = bitcast %"core::char::EscapeDefaultState"* %_21 to i8*
  %29 = bitcast %"core::char::EscapeDefaultState"* %init_state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false)
  %30 = bitcast %"core::char::EscapeDefault"* %_20 to %"core::char::EscapeDefaultState"*
  %31 = bitcast %"core::char::EscapeDefaultState"* %30 to i8*
  %32 = bitcast %"core::char::EscapeDefaultState"* %_21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false)
  %33 = bitcast %"core::char::EscapeDebug"* %0 to %"core::char::EscapeDefault"*
  %34 = bitcast %"core::char::EscapeDefault"* %33 to i8*
  %35 = bitcast %"core::char::EscapeDefault"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false)
  ret void

bb7:                                              ; preds = %bb5
  br label %bb11

bb6:                                              ; preds = %bb5
  %36 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Backslash"*
  %37 = getelementptr inbounds %"core::char::EscapeDefaultState::Backslash", %"core::char::EscapeDefaultState::Backslash"* %36, i32 0, i32 1
  store i32 %self, i32* %37, align 4
  %38 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 2, i32* %38, align 8
  br label %bb23

bb12:                                             ; preds = %bb11
  store i8 0, i8* %_9, align 1
  br label %bb14

bb13:                                             ; preds = %bb11
; call core::char::methods::<impl char>::is_grapheme_extended
  %_11 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$20is_grapheme_extended17hee5ab0469f24cb20E"(i32 %self)
  br label %bb15

bb15:                                             ; preds = %bb13
  %39 = zext i1 %_11 to i8
  store i8 %39, i8* %_9, align 1
  br label %bb14

bb14:                                             ; preds = %bb12, %bb15
  %40 = load i8, i8* %_9, align 1, !range !2
  %41 = trunc i8 %40 to i1
  br i1 %41, label %bb16, label %bb17

bb17:                                             ; preds = %bb14
; call core::unicode::printable::is_printable
  %_15 = call zeroext i1 @_ZN4core7unicode9printable12is_printable17h838e0e5b00b65dc0E(i32 %self)
  br label %bb19

bb16:                                             ; preds = %bb14
; call core::char::methods::<impl char>::escape_unicode
  %42 = call i128 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$14escape_unicode17h23f8ad0ac40ee08dE"(i32 %self)
  store i128 %42, i128* %3, align 8
  %43 = bitcast %"core::char::EscapeUnicode"* %_13 to i8*
  %44 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  br label %bb18

bb18:                                             ; preds = %bb16
  %45 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Unicode"*
  %46 = getelementptr inbounds %"core::char::EscapeDefaultState::Unicode", %"core::char::EscapeDefaultState::Unicode"* %45, i32 0, i32 1
  %47 = bitcast %"core::char::EscapeUnicode"* %46 to i8*
  %48 = bitcast %"core::char::EscapeUnicode"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 16, i1 false)
  %49 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 3, i32* %49, align 8
  br label %bb23

bb19:                                             ; preds = %bb17
  br i1 %_15, label %bb20, label %bb21

bb21:                                             ; preds = %bb19
; call core::char::methods::<impl char>::escape_unicode
  %50 = call i128 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$14escape_unicode17h23f8ad0ac40ee08dE"(i32 %self)
  store i128 %50, i128* %2, align 8
  %51 = bitcast %"core::char::EscapeUnicode"* %_18 to i8*
  %52 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 16, i1 false)
  br label %bb22

bb20:                                             ; preds = %bb19
  %53 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Char"*
  %54 = getelementptr inbounds %"core::char::EscapeDefaultState::Char", %"core::char::EscapeDefaultState::Char"* %53, i32 0, i32 1
  store i32 %self, i32* %54, align 4
  %55 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 1, i32* %55, align 8
  br label %bb23

bb22:                                             ; preds = %bb21
  %56 = bitcast %"core::char::EscapeDefaultState"* %init_state to %"core::char::EscapeDefaultState::Unicode"*
  %57 = getelementptr inbounds %"core::char::EscapeDefaultState::Unicode", %"core::char::EscapeDefaultState::Unicode"* %56, i32 0, i32 1
  %58 = bitcast %"core::char::EscapeUnicode"* %57 to i8*
  %59 = bitcast %"core::char::EscapeUnicode"* %_18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 16, i1 false)
  %60 = bitcast %"core::char::EscapeDefaultState"* %init_state to i32*
  store i32 3, i32* %60, align 8
  br label %bb23
}

; core::char::methods::<impl char>::is_grapheme_extended
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$20is_grapheme_extended17hee5ab0469f24cb20E"(i32 %self) unnamed_addr #1 {
start:
; call core::unicode::unicode_data::grapheme_extend::lookup
  %0 = call zeroext i1 @_ZN4core7unicode12unicode_data15grapheme_extend6lookup17hd79b3282daeb95c7E(i32 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::char::methods::<impl char>::is_digit
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_digit17ha1909f5c560863b4E"(i32 %self, i32 %radix) unnamed_addr #1 {
start:
  %_4 = alloca { i32, i32 }, align 4
; call core::char::methods::<impl char>::to_digit
  %0 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hf0ad4b1322192492E"(i32 %self, i32 %radix)
  store { i32, i32 } %0, { i32, i32 }* %_4, align 4
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::is_some
  %1 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h592be335c676ecdeE"({ i32, i32 }* align 4 dereferenceable(8) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %1
}

; core::char::methods::<impl char>::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hb7a7a576e39bcc01E"(i32 %self) unnamed_addr #1 {
start:
  %0 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %0)
; call core::char::methods::len_utf8
  %1 = call i64 @_ZN4core4char7methods8len_utf817h1ab4d0029643f55dE(i32 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::char::methods::<impl char>::to_digit
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hf0ad4b1322192492E"(i32 %self, i32 %radix) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %digit = alloca i32, align 4
  %1 = alloca { i32, i32 }, align 4
  %_4 = icmp ule i32 %radix, 36
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %2 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %2)
  %3 = sub i32 %self, 48
  store i32 %3, i32* %digit, align 4
  br label %bb3

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc767 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc769 to %"core::panic::location::Location"*)) #12
  unreachable

bb3:                                              ; preds = %bb2
  %_10 = icmp ugt i32 %radix, 10
  br i1 %_10, label %bb4, label %bb9

bb9:                                              ; preds = %bb8, %bb3
  %_22 = load i32, i32* %digit, align 4
  %_21 = icmp ult i32 %_22, %radix
  br i1 %_21, label %bb10, label %bb11

bb4:                                              ; preds = %bb3
  %_13 = load i32, i32* %digit, align 4
  %_12 = icmp ult i32 %_13, 10
  br i1 %_12, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %4 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %4)
  %_17 = or i32 %self, 32
  %5 = sub i32 %_17, 97
  br label %bb7

bb5:                                              ; preds = %bb4
  %_14 = load i32, i32* %digit, align 4
  %6 = bitcast { i32, i32 }* %1 to %"core::option::Option<u32>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %6, i32 0, i32 1
  store i32 %_14, i32* %7, align 4
  %8 = bitcast { i32, i32 }* %1 to i32*
  store i32 1, i32* %8, align 4
  br label %bb13

bb13:                                             ; preds = %bb12, %bb5
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 0
  %10 = load i32, i32* %9, align 4, !range !24
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = insertvalue { i32, i32 } undef, i32 %10, 0
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1
  ret { i32, i32 } %14

bb7:                                              ; preds = %bb6
  %15 = call i32 @llvm.uadd.sat.i32(i32 %5, i32 10)
  store i32 %15, i32* %0, align 4
  %16 = load i32, i32* %0, align 4
  br label %bb8

bb8:                                              ; preds = %bb7
  store i32 %16, i32* %digit, align 4
  br label %bb9

bb11:                                             ; preds = %bb9
  %17 = bitcast { i32, i32 }* %1 to i32*
  store i32 0, i32* %17, align 4
  br label %bb12

bb10:                                             ; preds = %bb9
  %_24 = load i32, i32* %digit, align 4
  %18 = bitcast { i32, i32 }* %1 to %"core::option::Option<u32>::Some"*
  %19 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %18, i32 0, i32 1
  store i32 %_24, i32* %19, align 4
  %20 = bitcast { i32, i32 }* %1 to i32*
  store i32 1, i32* %20, align 4
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  br label %bb13
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4char7methods8len_utf817h1ab4d0029643f55dE(i32 %code) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %_2 = icmp ult i32 %code, 128
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_4 = icmp ult i32 %code, 2048
  br i1 %_4, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb1
  %1 = load i64, i64* %0, align 8
  ret i64 %1

bb4:                                              ; preds = %bb2
  %_6 = icmp ult i32 %code, 65536
  br i1 %_6, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  store i64 2, i64* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  br label %bb9

bb6:                                              ; preds = %bb4
  store i64 4, i64* %0, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
  store i64 3, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  br label %bb8
}

; core::hint::unreachable_unchecked
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define internal void @_ZN4core4hint21unreachable_unchecked17h25576b3377c9ba52E() unnamed_addr #2 {
start:
  unreachable
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2263241b25a82c2eE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hb78f98ba758db8b3E"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h28e59398174aab79E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hbaa7e8feb64ba927E"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17hbe6b2c7a9bd4473fE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h9ae92f02d8854250E"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17h8381a40ea28ce22aE({ i8*, i8* }* align 8 dereferenceable(16) %self, i64 %init) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca { i64, i8* }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_5 = alloca i8*, align 8
  %accum = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  %f = alloca %"[closure@core::iter::adapters::copied::copy_try_fold<u8, usize, core::ops::control_flow::ControlFlow<usize, usize>, [closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]>::{closure#0}]", align 1
  store i8 0, i8* %_21, align 1
  store i8 1, i8* %_21, align 1
  store i64 %init, i64* %accum, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %2 = invoke align 1 dereferenceable_or_null(1) i8* @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h357f1827470f182bE"({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i8* %2, i8** %_5, align 8
  %3 = bitcast i8** %_5 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_7 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_7, 1
  br i1 %6, label %bb3, label %bb10

bb17:                                             ; preds = %cleanup
  %7 = load i8, i8* %_21, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb16, label %bb14

cleanup:                                          ; preds = %bb8, %bb4, %bb3, %bb11, %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb17

bb3:                                              ; preds = %bb2
  %x = load i8*, i8** %_5, align 8, !nonnull !6
  store i8 0, i8* %_21, align 1
  %_14 = load i64, i64* %accum, align 8
  %14 = bitcast { i64, i8* }* %_13 to i64*
  store i64 %_14, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_13, i32 0, i32 1
  store i8* %x, i8** %15, align 8
  %16 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_13, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_13, i32 0, i32 1
  %19 = load i8*, i8** %18, align 8, !nonnull !6
; invoke core::iter::adapters::copied::copy_try_fold::{{closure}}
  %20 = invoke { i64, i64 } @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17hd93072c4261ac695E"(%"[closure@core::iter::adapters::copied::copy_try_fold<u8, usize, core::ops::control_flow::ControlFlow<usize, usize>, [closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]>::{closure#0}]"* nonnull align 1 %f, i64 %17, i8* align 1 dereferenceable(1) %19)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1
  %_20 = load i64, i64* %accum, align 8
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %21 = invoke { i64, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h15e2cab3bfe8d574E"(i64 %_20)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  store { i64, i64 } %21, { i64, i64 }* %1, align 8
  store i8 0, i8* %_21, align 1
  br label %bb13

bb13:                                             ; preds = %bb9, %bb12
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %23 = load i64, i64* %22, align 8, !range !5
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = insertvalue { i64, i64 } undef, i64 %23, 0
  %27 = insertvalue { i64, i64 } %26, i64 %25, 1
  ret { i64, i64 } %27

bb4:                                              ; preds = %bb3
  %_11.0 = extractvalue { i64, i64 } %20, 0
  %_11.1 = extractvalue { i64, i64 } %20, 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %28 = invoke { i64, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1e9f728e23f08bf1E"(i64 %_11.0, i64 %_11.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store { i64, i64 } %28, { i64, i64 }* %_10, align 8
  %29 = bitcast { i64, i64 }* %_10 to i64*
  %_16 = load i64, i64* %29, align 8, !range !5
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  %30 = bitcast { i64, i64 }* %_10 to %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Continue"*
  %31 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Continue"* %30, i32 0, i32 1
  %val = load i64, i64* %31, align 8
  store i8 1, i8* %_21, align 1
  store i64 %val, i64* %accum, align 8
  br label %bb1

bb8:                                              ; preds = %bb5
  %32 = bitcast { i64, i64 }* %_10 to %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Break"*
  %33 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Break"* %32, i32 0, i32 1
  %residual = load i64, i64* %33, align 8
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %34 = invoke { i64, i64 } @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17he5beb8fd9c52ea86E"(i64 %residual)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  store { i64, i64 } %34, { i64, i64 }* %1, align 8
  store i8 0, i8* %_21, align 1
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  br label %bb15

bb16:                                             ; preds = %bb17
  br label %bb14

bb15:                                             ; preds = %bb14
  %35 = bitcast { i8*, i32 }* %0 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40
}

; core::iter::traits::iterator::Iterator::all
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h026e8a05234574d1E({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
; call core::iter::traits::iterator::Iterator::all::check
  call void @_ZN4core4iter6traits8iterator8Iterator3all5check17h61d9d6c362e0577cE()
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h0e1efa267c796c2cE({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %1 = zext i1 %0 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %2 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hff179cb41b988b43E"(i8* align 1 dereferenceable(1) %_4, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc225, i32 0, i32 0, i32 0))
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %2
}

; core::iter::traits::iterator::Iterator::all
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h203a9d45276baeccE({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
; call core::iter::traits::iterator::Iterator::all::check
  call void @_ZN4core4iter6traits8iterator8Iterator3all5check17hb85460da168134afE()
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h72c52a645c812e14E({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %1 = zext i1 %0 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %2 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hff179cb41b988b43E"(i8* align 1 dereferenceable(1) %_4, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc225, i32 0, i32 0, i32 0))
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %2
}

; core::iter::traits::iterator::Iterator::all
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h781aacead9f0716dE({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
; call core::iter::traits::iterator::Iterator::all::check
  call void @_ZN4core4iter6traits8iterator8Iterator3all5check17h74d413deb8d68fc1E()
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h533d3c2374cb031cE({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %1 = zext i1 %0 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %2 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hff179cb41b988b43E"(i8* align 1 dereferenceable(1) %_4, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc225, i32 0, i32 0, i32 0))
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %2
}

; core::iter::traits::iterator::Iterator::all
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17hfe610d2dd9fa0a3cE({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
; call core::iter::traits::iterator::Iterator::all::check
  call void @_ZN4core4iter6traits8iterator8Iterator3all5check17h59a8ebd32f68fe6cE()
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h6e29e56a133b8937E({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %1 = zext i1 %0 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %2 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hff179cb41b988b43E"(i8* align 1 dereferenceable(1) %_4, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc225, i32 0, i32 0, i32 0))
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %2
}

; core::iter::traits::iterator::Iterator::all::check
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3all5check17h59a8ebd32f68fe6cE() unnamed_addr #1 {
start:
  %0 = alloca %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:102:46: 102:64]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:102:46: 102:64]>::{closure#0}]"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:102:46: 102:64]"*
  ret void
}

; core::iter::traits::iterator::Iterator::all::check
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3all5check17h61d9d6c362e0577cE() unnamed_addr #1 {
start:
  %0 = alloca %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:98:45: 101:10]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:98:45: 101:10]>::{closure#0}]"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:98:45: 101:10]"*
  ret void
}

; core::iter::traits::iterator::Iterator::all::check
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3all5check17h74d413deb8d68fc1E() unnamed_addr #1 {
start:
  %0 = alloca %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:158:72: 161:34]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:158:72: 161:34]>::{closure#0}]"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:158:72: 161:34]"*
  ret void
}

; core::iter::traits::iterator::Iterator::all::check
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3all5check17hb85460da168134afE() unnamed_addr #1 {
start:
  %0 = alloca %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:184:19: 188:6]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:184:19: 188:6]>::{closure#0}]"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:184:19: 188:6]"*
  ret void
}

; core::iter::traits::iterator::Iterator::all::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17ha55a18ea042ceaeaE"(%"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:184:19: 188:6]>::{closure#0}]"* nonnull align 1 %_1, i32 %x) unnamed_addr #1 {
start:
  %_6 = alloca i32, align 4
  %0 = alloca i8, align 1
  %_5 = bitcast %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:184:19: 188:6]>::{closure#0}]"* %_1 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:184:19: 188:6]"*
  store i32 %x, i32* %_6, align 4
  %1 = load i32, i32* %_6, align 4, !range !9
; call rustc_demangle::is_symbol_like::{{closure}}
  %_4 = call zeroext i1 @"_ZN14rustc_demangle14is_symbol_like28_$u7b$$u7b$closure$u7d$$u7d$17h4526f85d2da9a4dfE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:184:19: 188:6]"* nonnull align 1 %_5, i32 %1)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i8, i8* %0, align 1, !range !2
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; core::iter::traits::iterator::Iterator::all::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hcafd3afac7820838E"(%"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:158:72: 161:34]>::{closure#0}]"* nonnull align 1 %_1, i32 %x) unnamed_addr #1 {
start:
  %_6 = alloca i32, align 4
  %0 = alloca i8, align 1
  %_5 = bitcast %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:158:72: 161:34]>::{closure#0}]"* %_1 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:158:72: 161:34]"*
  store i32 %x, i32* %_6, align 4
  %1 = load i32, i32* %_6, align 4, !range !9
; call <rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt::{{closure}}
  %_4 = call zeroext i1 @"_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h8b1b421374e6bb0fE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:158:72: 161:34]"* nonnull align 1 %_5, i32 %1)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i8, i8* %0, align 1, !range !2
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; core::iter::traits::iterator::Iterator::all::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hd210d7f802704776E"(%"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:102:46: 102:64]>::{closure#0}]"* nonnull align 1 %_1, i32 %x) unnamed_addr #1 {
start:
  %_6 = alloca i32, align 4
  %0 = alloca i8, align 1
  %_5 = bitcast %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:102:46: 102:64]>::{closure#0}]"* %_1 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:102:46: 102:64]"*
  store i32 %x, i32* %_6, align 4
  %1 = load i32, i32* %_6, align 4, !range !9
; call rustc_demangle::legacy::is_rust_hash::{{closure}}
  %_4 = call zeroext i1 @"_ZN14rustc_demangle6legacy12is_rust_hash28_$u7b$$u7b$closure$u7d$$u7d$17he46e7eb7324329a5E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:102:46: 102:64]"* nonnull align 1 %_5, i32 %1)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i8, i8* %0, align 1, !range !2
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; core::iter::traits::iterator::Iterator::all::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17he0d8b17c0a32311aE"(%"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:98:45: 101:10]>::{closure#0}]"* nonnull align 1 %_1, i32 %x) unnamed_addr #1 {
start:
  %_6 = alloca i32, align 4
  %0 = alloca i8, align 1
  %_5 = bitcast %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:98:45: 101:10]>::{closure#0}]"* %_1 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:98:45: 101:10]"*
  store i32 %x, i32* %_6, align 4
  %1 = load i32, i32* %_6, align 4, !range !9
; call rustc_demangle::demangle::{{closure}}
  %_4 = call zeroext i1 @"_ZN14rustc_demangle8demangle28_$u7b$$u7b$closure$u7d$$u7d$17h3acdd0c0efd98f98E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:98:45: 101:10]"* nonnull align 1 %_5, i32 %1)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i8, i8* %0, align 1, !range !2
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; core::iter::traits::iterator::Iterator::any
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3any17h21e0438fcffe170cE({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
; call core::iter::traits::iterator::Iterator::any::check
  call void @_ZN4core4iter6traits8iterator8Iterator3any5check17hd011afa1da8fcac1E()
  br label %bb1

bb1:                                              ; preds = %start
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::try_fold
  %0 = call zeroext i1 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17haac65196fec9ddd7E"({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %1 = zext i1 %0 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %2 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hff179cb41b988b43E"(i8* align 1 dereferenceable(1) %_4, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc652, i32 0, i32 0, i32 0))
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %2
}

; core::iter::traits::iterator::Iterator::any
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3any17h4aae2e7ac0af1f00E(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
; call core::iter::traits::iterator::Iterator::any::check
  call void @_ZN4core4iter6traits8iterator8Iterator3any5check17h5b06a6d85709c445E()
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h063c9c09f4ff20a3E(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* align 8 dereferenceable(40) %self)
  %1 = zext i1 %0 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %2 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hff179cb41b988b43E"(i8* align 1 dereferenceable(1) %_4, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc652, i32 0, i32 0, i32 0))
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %2
}

; core::iter::traits::iterator::Iterator::any
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3any17hb4d6333951fb07e9E({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
; call core::iter::traits::iterator::Iterator::any::check
  call void @_ZN4core4iter6traits8iterator8Iterator3any5check17hed7ca45450316565E()
  br label %bb1

bb1:                                              ; preds = %start
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::try_fold
  %0 = call zeroext i1 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17hcd5f86bfc466b052E"({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %1 = zext i1 %0 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %2 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hff179cb41b988b43E"(i8* align 1 dereferenceable(1) %_4, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc652, i32 0, i32 0, i32 0))
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %2
}

; core::iter::traits::iterator::Iterator::any::check
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3any5check17h5b06a6d85709c445E() unnamed_addr #1 {
start:
  %0 = alloca %"[closure@core::iter::traits::iterator::Iterator::any::check<core::result::Result<char, ()>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:362:30: 362:44]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::traits::iterator::Iterator::any::check<core::result::Result<char, ()>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:362:30: 362:44]>::{closure#0}]"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:362:30: 362:44]"*
  ret void
}

; core::iter::traits::iterator::Iterator::any::check
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3any5check17hd011afa1da8fcac1E() unnamed_addr #1 {
start:
  %0 = alloca %"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]"*
  ret void
}

; core::iter::traits::iterator::Iterator::any::check
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3any5check17hed7ca45450316565E() unnamed_addr #1 {
start:
  %0 = alloca %"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]"*
  ret void
}

; core::iter::traits::iterator::Iterator::any::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17h854273bfcae67e33E"(%"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]"* nonnull align 1 %_1, i8 %x) unnamed_addr #1 {
start:
  %_6 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_5 = bitcast %"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]"* %_1 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]"*
  store i8 %x, i8* %_6, align 1
  %1 = load i8, i8* %_6, align 1
; call rustc_demangle::v0::demangle::{{closure}}
  %_4 = call zeroext i1 @"_ZN14rustc_demangle2v08demangle28_$u7b$$u7b$closure$u7d$$u7d$17h4e71fd7bbbbdaf76E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]"* nonnull align 1 %_5, i8 %1)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i8, i8* %0, align 1, !range !2
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; core::iter::traits::iterator::Iterator::any::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17h9b318bdccbe3d559E"(%"[closure@core::iter::traits::iterator::Iterator::any::check<core::result::Result<char, ()>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:362:30: 362:44]>::{closure#0}]"* nonnull align 1 %_1, i32 %x) unnamed_addr #1 {
start:
  %_6 = alloca i32, align 4
  %0 = alloca i8, align 1
  %_5 = bitcast %"[closure@core::iter::traits::iterator::Iterator::any::check<core::result::Result<char, ()>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:362:30: 362:44]>::{closure#0}]"* %_1 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:362:30: 362:44]"*
  store i32 %x, i32* %_6, align 4
  %1 = load i32, i32* %_6, align 4, !range !4
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
  %_4 = call zeroext i1 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17h88529b84fbc36528E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:362:30: 362:44]"* nonnull align 1 %_5, i32 %1)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i8, i8* %0, align 1, !range !2
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; core::iter::traits::iterator::Iterator::any::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17hfeca2be4541ebd4fE"(%"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]"* nonnull align 1 %_1, i8 %x) unnamed_addr #1 {
start:
  %_6 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_5 = bitcast %"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]"* %_1 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]"*
  store i8 %x, i8* %_6, align 1
  %1 = load i8, i8* %_6, align 1
; call rustc_demangle::legacy::demangle::{{closure}}
  %_4 = call zeroext i1 @"_ZN14rustc_demangle6legacy8demangle28_$u7b$$u7b$closure$u7d$$u7d$17h1040d5eca62ea27eE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]"* nonnull align 1 %_5, i8 %1)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i8, i8* %0, align 1, !range !2
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3map17h3b1be6be6abf0ca8E(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>") dereferenceable(40) %0, %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>", align 8
  %1 = bitcast %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* %_3 to i8*
  %2 = bitcast %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h7c22701431b1e421E"(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>") dereferenceable(40) %0, %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* noalias nocapture dereferenceable(40) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @_ZN4core4iter6traits8iterator8Iterator3map17h7302a069922dfdc6E(i8* nonnull %self.0, i8* %self.1) unnamed_addr #1 {
start:
; call core::iter::adapters::map::Map<I,F>::new
  %0 = call { i8*, i8* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17he218bbea01178e34E"(i8* nonnull %self.0, i8* %self.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3map17ha1dda9db72b64fc8E(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>") dereferenceable(40) %0, %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>", align 8
  %1 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %_3 to i8*
  %2 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h0d802325e043b23aE"(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>") dereferenceable(40) %0, %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* noalias nocapture dereferenceable(40) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3map17hb2561f11cd2c38d5E(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>") dereferenceable(40) %0, %"core::slice::iter::ChunksExact<u8>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"core::slice::iter::ChunksExact<u8>", align 8
  %1 = bitcast %"core::slice::iter::ChunksExact<u8>"* %_3 to i8*
  %2 = bitcast %"core::slice::iter::ChunksExact<u8>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h5c247e05304568e6E"(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>") dereferenceable(40) %0, %"core::slice::iter::ChunksExact<u8>"* noalias nocapture dereferenceable(40) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h88a84c535c2ee60cE(i64 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::iter::adapters::rev::Rev<T>::new
  %0 = call { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h6211eb609202a500E"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::sum
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core4iter6traits8iterator8Iterator3sum17h28c24620c4f414f5E(i8* nonnull %self.0, i8* %self.1) unnamed_addr #0 {
start:
; call <usize as core::iter::traits::accum::Sum>::sum
  %0 = call i64 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h4243ce30a270fbbaE"(i8* nonnull %self.0, i8* %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4iter6traits8iterator8Iterator4fold17h388560f5fa2e7218E(i8* nonnull %0, i8* %1, i64 %init) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_10 = alloca { i64, i8* }, align 8
  %_4 = alloca i8*, align 8
  %accum = alloca i64, align 8
  %f = alloca %"[closure@core::iter::adapters::map::map_fold<&u8, usize, usize, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}], [closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]>::{closure#0}]", align 1
  %self = alloca { i8*, i8* }, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %4, align 8
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_13, align 1
  store i64 %init, i64* %accum, align 8
  br label %bb1

bb1:                                              ; preds = %bb4, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %5 = invoke align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h40dc0f323a5db63cE"({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i8* %5, i8** %_4, align 8
  %6 = bitcast i8** %_4 to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_6 = select i1 %8, i64 0, i64 1
  %9 = icmp eq i64 %_6, 1
  br i1 %9, label %bb3, label %bb5

bb13:                                             ; preds = %cleanup
  %10 = load i8, i8* %_13, align 1, !range !2
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb12, label %bb9

cleanup:                                          ; preds = %bb3, %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb13

bb3:                                              ; preds = %bb2
  %x = load i8*, i8** %_4, align 8, !nonnull !6
  store i8 0, i8* %_13, align 1
  %_11 = load i64, i64* %accum, align 8
  %17 = bitcast { i64, i8* }* %_10 to i64*
  store i64 %_11, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_10, i32 0, i32 1
  store i8* %x, i8** %18, align 8
  %19 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_10, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_10, i32 0, i32 1
  %22 = load i8*, i8** %21, align 8, !nonnull !6
; invoke core::iter::adapters::map::map_fold::{{closure}}
  %_8 = invoke i64 @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h332a77680cfe1263E"(%"[closure@core::iter::adapters::map::map_fold<&u8, usize, usize, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}], [closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]>::{closure#0}]"* nonnull align 1 %f, i64 %20, i8* align 1 dereferenceable(1) %22)
          to label %bb4 unwind label %cleanup

bb5:                                              ; preds = %bb2
  br label %bb6

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_13, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %23 = load i64, i64* %accum, align 8
  ret i64 %23

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_13, align 1
  store i64 %_8, i64* %accum, align 8
  br label %bb1

bb9:                                              ; preds = %bb12, %bb13
  br label %bb10

bb12:                                             ; preds = %bb13
  br label %bb9

bb10:                                             ; preds = %bb9
  br label %bb11

bb11:                                             ; preds = %bb10
  %24 = bitcast { i8*, i32 }* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29
}

; core::iter::traits::iterator::Iterator::copied
; Function Attrs: nonlazybind uwtable
define { i8*, i8* } @_ZN4core4iter6traits8iterator8Iterator6copied17h5c043c9882b2aa85E(i8* nonnull %self.0, i8* %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::copied::Copied<I>::new
  %0 = call { i8*, i8* } @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hb8ea7cfebf17cb14E"(i8* nonnull %self.0, i8* %self.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; core::iter::traits::iterator::Iterator::filter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @_ZN4core4iter6traits8iterator8Iterator6filter17h05558af8ef14fad4E(i8* nonnull %self.0, i8* %self.1) unnamed_addr #1 {
start:
; call core::iter::adapters::filter::Filter<I,P>::new
  %0 = call { i8*, i8* } @"_ZN4core4iter8adapters6filter19Filter$LT$I$C$P$GT$3new17h6cf0e0de75d33341E"(i8* nonnull %self.0, i8* %self.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; core::iter::traits::iterator::Iterator::peekable
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8peekable17h1f2270d43063e661E(%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* noalias nocapture sret(%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>") dereferenceable(24) %0, i8* nonnull %self.0, i8* %self.1) unnamed_addr #1 {
start:
; call core::iter::adapters::peekable::Peekable<I>::new
  call void @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$3new17h3edc3b8b148fb59fE"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* noalias nocapture sret(%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>") dereferenceable(24) %0, i8* nonnull %self.0, i8* %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h063c9c09f4ff20a3E(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* align 8 dereferenceable(40) %self) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i32, align 4
  %_10 = alloca i8, align 1
  %_5 = alloca i32, align 4
  %1 = alloca i8, align 1
  %f = alloca %"[closure@core::iter::traits::iterator::Iterator::any::check<core::result::Result<char, ()>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:362:30: 362:44]>::{closure#0}]", align 1
  store i8 0, i8* %_21, align 1
  store i8 1, i8* %_21, align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::iter::sources::from_fn::FromFn<F> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke i32 @"_ZN104_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h661c98826c4a9066E"(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* align 8 dereferenceable(40) %self)
          to label %bb2 unwind label %cleanup, !range !3

bb2:                                              ; preds = %bb1
  store i32 %2, i32* %_5, align 4
  %3 = load i32, i32* %_5, align 4, !range !3
  %4 = sub i32 %3, 1114113
  %5 = icmp eq i32 %4, 0
  %_7 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_7, 1
  br i1 %6, label %bb3, label %bb10

bb17:                                             ; preds = %cleanup
  %7 = load i8, i8* %_21, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb16, label %bb14

cleanup:                                          ; preds = %bb8, %bb4, %bb3, %bb11, %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb17

bb3:                                              ; preds = %bb2
  %x = load i32, i32* %_5, align 4, !range !4
  store i8 0, i8* %_21, align 1
  %14 = bitcast i32* %_13 to {}*
  store i32 %x, i32* %_13, align 4
  %15 = load i32, i32* %_13, align 4, !range !4
; invoke core::iter::traits::iterator::Iterator::any::check::{{closure}}
  %_11 = invoke zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17h9b318bdccbe3d559E"(%"[closure@core::iter::traits::iterator::Iterator::any::check<core::result::Result<char, ()>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:362:30: 362:44]>::{closure#0}]"* nonnull align 1 %f, i32 %15)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %16 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h4f6333053847859eE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb13:                                             ; preds = %bb9, %bb12
  %18 = load i8, i8* %1, align 1, !range !2
  %19 = trunc i8 %18 to i1
  ret i1 %19

bb4:                                              ; preds = %bb3
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %20 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8c2b042322eca335E"(i1 zeroext %_11)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %_10, align 1
  %22 = load i8, i8* %_10, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  store i8 1, i8* %_21, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %24 = invoke zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h25556194ce50ae0bE"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  br label %bb15

bb16:                                             ; preds = %bb17
  br label %bb14

bb15:                                             ; preds = %bb14
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h0e1efa267c796c2cE({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i32, align 4
  %_10 = alloca i8, align 1
  %_5 = alloca i32, align 4
  %1 = alloca i8, align 1
  %f = alloca %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:98:45: 101:10]>::{closure#0}]", align 1
  store i8 0, i8* %_21, align 1
  store i8 1, i8* %_21, align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %2 = invoke i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup, !range !4

bb2:                                              ; preds = %bb1
  store i32 %2, i32* %_5, align 4
  %3 = load i32, i32* %_5, align 4, !range !4
  %4 = sub i32 %3, 1114112
  %5 = icmp eq i32 %4, 0
  %_7 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_7, 1
  br i1 %6, label %bb3, label %bb10

bb17:                                             ; preds = %cleanup
  %7 = load i8, i8* %_21, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb16, label %bb14

cleanup:                                          ; preds = %bb8, %bb4, %bb3, %bb11, %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb17

bb3:                                              ; preds = %bb2
  %x = load i32, i32* %_5, align 4, !range !9
  store i8 0, i8* %_21, align 1
  %14 = bitcast i32* %_13 to {}*
  store i32 %x, i32* %_13, align 4
  %15 = load i32, i32* %_13, align 4, !range !9
; invoke core::iter::traits::iterator::Iterator::all::check::{{closure}}
  %_11 = invoke zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17he0d8b17c0a32311aE"(%"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:98:45: 101:10]>::{closure#0}]"* nonnull align 1 %f, i32 %15)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %16 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h4f6333053847859eE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb13:                                             ; preds = %bb9, %bb12
  %18 = load i8, i8* %1, align 1, !range !2
  %19 = trunc i8 %18 to i1
  ret i1 %19

bb4:                                              ; preds = %bb3
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %20 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8c2b042322eca335E"(i1 zeroext %_11)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %_10, align 1
  %22 = load i8, i8* %_10, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  store i8 1, i8* %_21, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %24 = invoke zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h25556194ce50ae0bE"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  br label %bb15

bb16:                                             ; preds = %bb17
  br label %bb14

bb15:                                             ; preds = %bb14
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h533d3c2374cb031cE({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i32, align 4
  %_10 = alloca i8, align 1
  %_5 = alloca i32, align 4
  %1 = alloca i8, align 1
  %f = alloca %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:158:72: 161:34]>::{closure#0}]", align 1
  store i8 0, i8* %_21, align 1
  store i8 1, i8* %_21, align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %2 = invoke i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup, !range !4

bb2:                                              ; preds = %bb1
  store i32 %2, i32* %_5, align 4
  %3 = load i32, i32* %_5, align 4, !range !4
  %4 = sub i32 %3, 1114112
  %5 = icmp eq i32 %4, 0
  %_7 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_7, 1
  br i1 %6, label %bb3, label %bb10

bb17:                                             ; preds = %cleanup
  %7 = load i8, i8* %_21, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb16, label %bb14

cleanup:                                          ; preds = %bb8, %bb4, %bb3, %bb11, %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb17

bb3:                                              ; preds = %bb2
  %x = load i32, i32* %_5, align 4, !range !9
  store i8 0, i8* %_21, align 1
  %14 = bitcast i32* %_13 to {}*
  store i32 %x, i32* %_13, align 4
  %15 = load i32, i32* %_13, align 4, !range !9
; invoke core::iter::traits::iterator::Iterator::all::check::{{closure}}
  %_11 = invoke zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hcafd3afac7820838E"(%"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:158:72: 161:34]>::{closure#0}]"* nonnull align 1 %f, i32 %15)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %16 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h4f6333053847859eE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb13:                                             ; preds = %bb9, %bb12
  %18 = load i8, i8* %1, align 1, !range !2
  %19 = trunc i8 %18 to i1
  ret i1 %19

bb4:                                              ; preds = %bb3
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %20 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8c2b042322eca335E"(i1 zeroext %_11)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %_10, align 1
  %22 = load i8, i8* %_10, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  store i8 1, i8* %_21, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %24 = invoke zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h25556194ce50ae0bE"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  br label %bb15

bb16:                                             ; preds = %bb17
  br label %bb14

bb15:                                             ; preds = %bb14
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h6e29e56a133b8937E({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i32, align 4
  %_10 = alloca i8, align 1
  %_5 = alloca i32, align 4
  %1 = alloca i8, align 1
  %f = alloca %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:102:46: 102:64]>::{closure#0}]", align 1
  store i8 0, i8* %_21, align 1
  store i8 1, i8* %_21, align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %2 = invoke i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup, !range !4

bb2:                                              ; preds = %bb1
  store i32 %2, i32* %_5, align 4
  %3 = load i32, i32* %_5, align 4, !range !4
  %4 = sub i32 %3, 1114112
  %5 = icmp eq i32 %4, 0
  %_7 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_7, 1
  br i1 %6, label %bb3, label %bb10

bb17:                                             ; preds = %cleanup
  %7 = load i8, i8* %_21, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb16, label %bb14

cleanup:                                          ; preds = %bb8, %bb4, %bb3, %bb11, %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb17

bb3:                                              ; preds = %bb2
  %x = load i32, i32* %_5, align 4, !range !9
  store i8 0, i8* %_21, align 1
  %14 = bitcast i32* %_13 to {}*
  store i32 %x, i32* %_13, align 4
  %15 = load i32, i32* %_13, align 4, !range !9
; invoke core::iter::traits::iterator::Iterator::all::check::{{closure}}
  %_11 = invoke zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hd210d7f802704776E"(%"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:102:46: 102:64]>::{closure#0}]"* nonnull align 1 %f, i32 %15)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %16 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h4f6333053847859eE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb13:                                             ; preds = %bb9, %bb12
  %18 = load i8, i8* %1, align 1, !range !2
  %19 = trunc i8 %18 to i1
  ret i1 %19

bb4:                                              ; preds = %bb3
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %20 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8c2b042322eca335E"(i1 zeroext %_11)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %_10, align 1
  %22 = load i8, i8* %_10, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  store i8 1, i8* %_21, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %24 = invoke zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h25556194ce50ae0bE"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  br label %bb15

bb16:                                             ; preds = %bb17
  br label %bb14

bb15:                                             ; preds = %bb14
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h72c52a645c812e14E({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i32, align 4
  %_10 = alloca i8, align 1
  %_5 = alloca i32, align 4
  %1 = alloca i8, align 1
  %f = alloca %"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:184:19: 188:6]>::{closure#0}]", align 1
  store i8 0, i8* %_21, align 1
  store i8 1, i8* %_21, align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %2 = invoke i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup, !range !4

bb2:                                              ; preds = %bb1
  store i32 %2, i32* %_5, align 4
  %3 = load i32, i32* %_5, align 4, !range !4
  %4 = sub i32 %3, 1114112
  %5 = icmp eq i32 %4, 0
  %_7 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_7, 1
  br i1 %6, label %bb3, label %bb10

bb17:                                             ; preds = %cleanup
  %7 = load i8, i8* %_21, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb16, label %bb14

cleanup:                                          ; preds = %bb8, %bb4, %bb3, %bb11, %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb17

bb3:                                              ; preds = %bb2
  %x = load i32, i32* %_5, align 4, !range !9
  store i8 0, i8* %_21, align 1
  %14 = bitcast i32* %_13 to {}*
  store i32 %x, i32* %_13, align 4
  %15 = load i32, i32* %_13, align 4, !range !9
; invoke core::iter::traits::iterator::Iterator::all::check::{{closure}}
  %_11 = invoke zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17ha55a18ea042ceaeaE"(%"[closure@core::iter::traits::iterator::Iterator::all::check<char, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:184:19: 188:6]>::{closure#0}]"* nonnull align 1 %f, i32 %15)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %16 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h4f6333053847859eE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb13:                                             ; preds = %bb9, %bb12
  %18 = load i8, i8* %1, align 1, !range !2
  %19 = trunc i8 %18 to i1
  ret i1 %19

bb4:                                              ; preds = %bb3
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %20 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8c2b042322eca335E"(i1 zeroext %_11)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %_10, align 1
  %22 = load i8, i8* %_10, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  store i8 1, i8* %_21, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %24 = invoke zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h25556194ce50ae0bE"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  br label %bb15

bb16:                                             ; preds = %bb17
  br label %bb14

bb15:                                             ; preds = %bb14
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17ha30eecd79c35e72dE({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i8*, align 8
  %_10 = alloca i8, align 1
  %_5 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %f = alloca %"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]>::{closure#0}]", align 1
  store i8 0, i8* %_21, align 1
  store i8 1, i8* %_21, align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h40dc0f323a5db63cE"({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i8* %2, i8** %_5, align 8
  %3 = bitcast i8** %_5 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_7 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_7, 1
  br i1 %6, label %bb3, label %bb10

bb17:                                             ; preds = %cleanup
  %7 = load i8, i8* %_21, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb16, label %bb14

cleanup:                                          ; preds = %bb8, %bb4, %bb3, %bb11, %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb17

bb3:                                              ; preds = %bb2
  %x = load i8*, i8** %_5, align 8, !nonnull !6
  store i8 0, i8* %_21, align 1
  %14 = bitcast i8** %_13 to {}*
  store i8* %x, i8** %_13, align 8
  %15 = load i8*, i8** %_13, align 8, !nonnull !6
; invoke core::iter::adapters::copied::copy_try_fold::{{closure}}
  %_11 = invoke zeroext i1 @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17hacf08a8c96a80aa5E"(%"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]>::{closure#0}]"* nonnull align 1 %f, i8* align 1 dereferenceable(1) %15)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %16 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h4f6333053847859eE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb13:                                             ; preds = %bb9, %bb12
  %18 = load i8, i8* %1, align 1, !range !2
  %19 = trunc i8 %18 to i1
  ret i1 %19

bb4:                                              ; preds = %bb3
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %20 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8c2b042322eca335E"(i1 zeroext %_11)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %_10, align 1
  %22 = load i8, i8* %_10, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  store i8 1, i8* %_21, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %24 = invoke zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h25556194ce50ae0bE"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  br label %bb15

bb16:                                             ; preds = %bb17
  br label %bb14

bb15:                                             ; preds = %bb14
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17he2929a0b0d9e99beE({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i8*, align 8
  %_10 = alloca i8, align 1
  %_5 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %f = alloca %"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]>::{closure#0}]", align 1
  store i8 0, i8* %_21, align 1
  store i8 1, i8* %_21, align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h40dc0f323a5db63cE"({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i8* %2, i8** %_5, align 8
  %3 = bitcast i8** %_5 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_7 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_7, 1
  br i1 %6, label %bb3, label %bb10

bb17:                                             ; preds = %cleanup
  %7 = load i8, i8* %_21, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb16, label %bb14

cleanup:                                          ; preds = %bb8, %bb4, %bb3, %bb11, %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb17

bb3:                                              ; preds = %bb2
  %x = load i8*, i8** %_5, align 8, !nonnull !6
  store i8 0, i8* %_21, align 1
  %14 = bitcast i8** %_13 to {}*
  store i8* %x, i8** %_13, align 8
  %15 = load i8*, i8** %_13, align 8, !nonnull !6
; invoke core::iter::adapters::copied::copy_try_fold::{{closure}}
  %_11 = invoke zeroext i1 @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h97cadd3c5b47d37eE"(%"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]>::{closure#0}]"* nonnull align 1 %f, i8* align 1 dereferenceable(1) %15)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %16 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h4f6333053847859eE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb13:                                             ; preds = %bb9, %bb12
  %18 = load i8, i8* %1, align 1, !range !2
  %19 = trunc i8 %18 to i1
  ret i1 %19

bb4:                                              ; preds = %bb3
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %20 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8c2b042322eca335E"(i1 zeroext %_11)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %_10, align 1
  %22 = load i8, i8* %_10, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  store i8 1, i8* %_21, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %24 = invoke zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h25556194ce50ae0bE"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %1, align 1
  store i8 0, i8* %_21, align 1
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  br label %bb15

bb16:                                             ; preds = %bb17
  br label %bb14

bb15:                                             ; preds = %bb14
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::iter::traits::iterator::Iterator::rposition
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator9rposition17ha004128cab28069fE({ i8*, i8* }* align 8 dereferenceable(16) %0) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %self = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %0, { i8*, i8* }** %self, align 8
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
; invoke <&mut I as core::iter::traits::exact_size::ExactSizeIterator>::len
  %n = invoke i64 @"_ZN83_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h29de5ae4289b6795E"({ i8*, i8* }** align 8 dereferenceable(8) %self)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_6 = load { i8*, i8* }*, { i8*, i8* }** %self, align 8, !nonnull !6
  store i8 0, i8* %_10, align 1
; invoke core::iter::traits::iterator::Iterator::rposition::check
  invoke void @_ZN4core4iter6traits8iterator8Iterator9rposition5check17h46ad4315d82453e8E()
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %2 = load i8, i8* %_10, align 1, !range !2
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb6, label %bb5

cleanup:                                          ; preds = %bb3, %bb2, %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
; invoke <core::iter::adapters::copied::Copied<I> as core::iter::traits::double_ended::DoubleEndedIterator>::try_rfold
  %9 = invoke { i64, i64 } @"_ZN119_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9try_rfold17h30dfd1fcdb585122E"({ i8*, i8* }* align 8 dereferenceable(16) %_6, i64 %n)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { i64, i64 } %9, 0
  %_5.1 = extractvalue { i64, i64 } %9, 1
; invoke core::ops::control_flow::ControlFlow<B,C>::break_value
  %10 = invoke { i64, i64 } @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h454a3530bf0fdd1eE"(i64 %_5.0, i64 %_5.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  %13 = insertvalue { i64, i64 } undef, i64 %11, 0
  %14 = insertvalue { i64, i64 } %13, i64 %12, 1
  ret { i64, i64 } %14

bb5:                                              ; preds = %bb6, %bb7
  %15 = bitcast { i8*, i32 }* %1 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::iter::traits::iterator::Iterator::rposition::check
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9rposition5check17h46ad4315d82453e8E() unnamed_addr #1 {
start:
  %0 = alloca %"[closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]"*
  ret void
}

; core::iter::traits::iterator::Iterator::rposition::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter6traits8iterator8Iterator9rposition5check28_$u7b$$u7b$closure$u7d$$u7d$17h69333532bf390b27E"(%"[closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]"* nonnull align 1 %_1, i64 %i, i8 %x) unnamed_addr #1 {
start:
  %_8 = alloca i8, align 1
  %0 = alloca { i64, i64 }, align 8
  %i1 = sub i64 %i, 1
  %_7 = bitcast %"[closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]"* %_1 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]"*
  store i8 %x, i8* %_8, align 1
  %1 = load i8, i8* %_8, align 1
; call rustc_demangle::v0::Parser::ident::{{closure}}
  %_6 = call zeroext i1 @"_ZN14rustc_demangle2v06Parser5ident28_$u7b$$u7b$closure$u7d$$u7d$17h8aea3f94510b481dE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]"* nonnull align 1 %_7, i8 %1)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_6, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %2 = bitcast { i64, i64 }* %0 to %"core::ops::control_flow::ControlFlow<usize, usize>::Continue"*
  %3 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<usize, usize>::Continue", %"core::ops::control_flow::ControlFlow<usize, usize>::Continue"* %2, i32 0, i32 1
  store i64 %i1, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %4, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64, i64 }* %0 to %"core::ops::control_flow::ControlFlow<usize, usize>::Break"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<usize, usize>::Break", %"core::ops::control_flow::ControlFlow<usize, usize>::Break"* %5, i32 0, i32 1
  store i64 %i1, i64* %6, align 8
  %7 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %7, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8, !range !5
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1
  ret { i64, i64 } %13
}

; core::iter::sources::once::once
; Function Attrs: nonlazybind uwtable
define i32 @_ZN4core4iter7sources4once4once17h44f83eb7f6d8e9baE(i32 %value) unnamed_addr #0 {
start:
  %_3 = alloca i32, align 4
  %0 = alloca i32, align 4
  store i32 %value, i32* %_3, align 4
  %1 = load i32, i32* %_3, align 4, !range !4
; call <core::option::Option<T> as core::iter::traits::collect::IntoIterator>::into_iter
  %_2 = call i32 @"_ZN91_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc69a5446e5122bc5E"(i32 %1), !range !4
  br label %bb1

bb1:                                              ; preds = %start
  store i32 %_2, i32* %0, align 4
  %2 = load i32, i32* %0, align 4, !range !4
  ret i32 %2
}

; core::iter::sources::from_fn::from_fn
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter7sources7from_fn7from_fn17hba7d5c0e3c59c158E(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* noalias nocapture sret(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>") dereferenceable(40) %0, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* noalias nocapture dereferenceable(40) %f) unnamed_addr #1 {
start:
  %_2 = alloca %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]", align 8
  %1 = bitcast %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* %_2 to i8*
  %2 = bitcast %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  %3 = bitcast %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"*
  %4 = bitcast %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* %3 to i8*
  %5 = bitcast %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false)
  ret void
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h0d802325e043b23aE"(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>") dereferenceable(40) %0, %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* noalias nocapture dereferenceable(40) %iter) unnamed_addr #0 {
start:
  %_3 = alloca %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>", align 8
  %1 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %_3 to i8*
  %2 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  %3 = bitcast %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* %0 to %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"*
  %4 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %3 to i8*
  %5 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false)
  %6 = bitcast %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]"*
  ret void
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h5c247e05304568e6E"(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>") dereferenceable(40) %0, %"core::slice::iter::ChunksExact<u8>"* noalias nocapture dereferenceable(40) %iter) unnamed_addr #0 {
start:
  %_3 = alloca %"core::slice::iter::ChunksExact<u8>", align 8
  %1 = bitcast %"core::slice::iter::ChunksExact<u8>"* %_3 to i8*
  %2 = bitcast %"core::slice::iter::ChunksExact<u8>"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  %3 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %0 to %"core::slice::iter::ChunksExact<u8>"*
  %4 = bitcast %"core::slice::iter::ChunksExact<u8>"* %3 to i8*
  %5 = bitcast %"core::slice::iter::ChunksExact<u8>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false)
  %6 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]"*
  ret void
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h7c22701431b1e421E"(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>") dereferenceable(40) %0, %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* noalias nocapture dereferenceable(40) %iter) unnamed_addr #0 {
start:
  %_3 = alloca %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>", align 8
  %1 = bitcast %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* %_3 to i8*
  %2 = bitcast %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  %3 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %0 to %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"*
  %4 = bitcast %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* %3 to i8*
  %5 = bitcast %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false)
  %6 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %0 to {}*
  ret void
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define { i8*, i8* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17he218bbea01178e34E"(i8* nonnull %iter.0, i8* %iter.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0
  store i8* %iter.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1
  store i8* %iter.1, i8** %2, align 8
  %3 = bitcast { i8*, i8* }* %0 to %"[closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]"*
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !6
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = insertvalue { i8*, i8* } undef, i8* %5, 0
  %9 = insertvalue { i8*, i8* } %8, i8* %7, 1
  ret { i8*, i8* } %9
}

; core::iter::adapters::map::map_fold
; Function Attrs: nonlazybind uwtable
define void @_ZN4core4iter8adapters3map8map_fold17he16908510340064cE() unnamed_addr #0 {
start:
  %0 = alloca %"[closure@core::iter::adapters::map::map_fold<&u8, usize, usize, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}], [closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::adapters::map::map_fold<&u8, usize, usize, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}], [closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]>::{closure#0}]"* %0 to %"[closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]"*
  %2 = bitcast %"[closure@core::iter::adapters::map::map_fold<&u8, usize, usize, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}], [closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]>::{closure#0}]"* %0 to %"[closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]"*
  ret void
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h332a77680cfe1263E"(%"[closure@core::iter::adapters::map::map_fold<&u8, usize, usize, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}], [closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]>::{closure#0}]"* nonnull align 1 %_1, i64 %acc, i8* align 1 dereferenceable(1) %elt) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca i8*, align 8
  %_5 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_11, align 1
  %_4 = bitcast %"[closure@core::iter::adapters::map::map_fold<&u8, usize, usize, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}], [closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]"*
  store i8 1, i8* %_11, align 1
  %_8 = bitcast %"[closure@core::iter::adapters::map::map_fold<&u8, usize, usize, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}], [closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]"*
  store i8* %elt, i8** %_9, align 8
  %1 = load i8*, i8** %_9, align 8, !nonnull !6
; invoke <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::count::to_usize::{{closure}}
  %_7 = invoke i64 @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count8to_usize28_$u7b$$u7b$closure$u7d$$u7d$17h50a83c589d96a018E"(%"[closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]"* nonnull align 1 %_8, i8* align 1 dereferenceable(1) %1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %2 = bitcast { i64, i64 }* %_5 to i64*
  store i64 %acc, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %_7, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
; invoke <usize as core::iter::traits::accum::Sum>::sum::{{closure}}
  %8 = invoke i64 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17h839f5bfcbafef997E"(%"[closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]"* nonnull align 1 %_4, i64 %5, i64 %7)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %9 = load i8, i8* %_11, align 1, !range !2
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_11, align 1
  ret i64 %8

bb3:                                              ; preds = %bb4, %bb5
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::adapters::rev::Rev<T>::new
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h6211eb609202a500E"(i64 %iter.0, i64 %iter.1) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::iter::adapters::copied::copy_try_fold
; Function Attrs: nonlazybind uwtable
define void @_ZN4core4iter8adapters6copied13copy_try_fold17h9c3f58e2684465b7E() unnamed_addr #0 {
start:
  %0 = alloca %"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]>::{closure#0}]"* %0 to %"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]"*
  ret void
}

; core::iter::adapters::copied::copy_try_fold
; Function Attrs: nonlazybind uwtable
define void @_ZN4core4iter8adapters6copied13copy_try_fold17hf85999fda00d8102E() unnamed_addr #0 {
start:
  %0 = alloca %"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]>::{closure#0}]"* %0 to %"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]"*
  ret void
}

; core::iter::adapters::copied::copy_try_fold
; Function Attrs: nonlazybind uwtable
define void @_ZN4core4iter8adapters6copied13copy_try_fold17hfc753a28a6068e0dE() unnamed_addr #0 {
start:
  %0 = alloca %"[closure@core::iter::adapters::copied::copy_try_fold<u8, usize, core::ops::control_flow::ControlFlow<usize, usize>, [closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]>::{closure#0}]", align 1
  %1 = bitcast %"[closure@core::iter::adapters::copied::copy_try_fold<u8, usize, core::ops::control_flow::ControlFlow<usize, usize>, [closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]>::{closure#0}]"* %0 to %"[closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]"*
  ret void
}

; core::iter::adapters::copied::copy_try_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h97cadd3c5b47d37eE"(%"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]>::{closure#0}]"* nonnull align 1 %_1, i8* align 1 dereferenceable(1) %_3) unnamed_addr #1 {
start:
  %_6 = alloca i8, align 1
  %elt = load i8, i8* %_3, align 1
  %_5 = bitcast %"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]"*
  %0 = bitcast i8* %_6 to {}*
  store i8 %elt, i8* %_6, align 1
  %1 = load i8, i8* %_6, align 1
; call core::iter::traits::iterator::Iterator::any::check::{{closure}}
  %2 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17hfeca2be4541ebd4fE"(%"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]>::{closure#0}]"* nonnull align 1 %_5, i8 %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::iter::adapters::copied::copy_try_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17hacf08a8c96a80aa5E"(%"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]>::{closure#0}]"* nonnull align 1 %_1, i8* align 1 dereferenceable(1) %_3) unnamed_addr #1 {
start:
  %_6 = alloca i8, align 1
  %elt = load i8, i8* %_3, align 1
  %_5 = bitcast %"[closure@core::iter::adapters::copied::copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<()>, [closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]"*
  %0 = bitcast i8* %_6 to {}*
  store i8 %elt, i8* %_6, align 1
  %1 = load i8, i8* %_6, align 1
; call core::iter::traits::iterator::Iterator::any::check::{{closure}}
  %2 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17h854273bfcae67e33E"(%"[closure@core::iter::traits::iterator::Iterator::any::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]>::{closure#0}]"* nonnull align 1 %_5, i8 %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::iter::adapters::copied::copy_try_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17hd93072c4261ac695E"(%"[closure@core::iter::adapters::copied::copy_try_fold<u8, usize, core::ops::control_flow::ControlFlow<usize, usize>, [closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]>::{closure#0}]"* nonnull align 1 %_1, i64 %acc, i8* align 1 dereferenceable(1) %_3) unnamed_addr #1 {
start:
  %_6 = alloca { i64, i8 }, align 8
  %elt = load i8, i8* %_3, align 1
  %_5 = bitcast %"[closure@core::iter::adapters::copied::copy_try_fold<u8, usize, core::ops::control_flow::ControlFlow<usize, usize>, [closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]>::{closure#0}]"* %_1 to %"[closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]"*
  %0 = bitcast { i64, i8 }* %_6 to i64*
  store i64 %acc, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_6, i32 0, i32 1
  store i8 %elt, i8* %1, align 8
  %2 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_6, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_6, i32 0, i32 1
  %5 = load i8, i8* %4, align 8
; call core::iter::traits::iterator::Iterator::rposition::check::{{closure}}
  %6 = call { i64, i64 } @"_ZN4core4iter6traits8iterator8Iterator9rposition5check28_$u7b$$u7b$closure$u7d$$u7d$17h69333532bf390b27E"(%"[closure@core::iter::traits::iterator::Iterator::rposition::check<u8, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]>::{closure#0}]"* nonnull align 1 %_5, i64 %3, i8 %5)
  %7 = extractvalue { i64, i64 } %6, 0
  %8 = extractvalue { i64, i64 } %6, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = insertvalue { i64, i64 } undef, i64 %7, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; core::iter::adapters::copied::Copied<I>::new
; Function Attrs: nonlazybind uwtable
define { i8*, i8* } @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hb8ea7cfebf17cb14E"(i8* nonnull %it.0, i8* %it.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0
  store i8* %it.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1
  store i8* %it.1, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8, !nonnull !6
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = insertvalue { i8*, i8* } undef, i8* %4, 0
  %8 = insertvalue { i8*, i8* } %7, i8* %6, 1
  ret { i8*, i8* } %8
}

; core::iter::adapters::filter::Filter<I,P>::new
; Function Attrs: nonlazybind uwtable
define { i8*, i8* } @"_ZN4core4iter8adapters6filter19Filter$LT$I$C$P$GT$3new17h6cf0e0de75d33341E"(i8* nonnull %iter.0, i8* %iter.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0
  store i8* %iter.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1
  store i8* %iter.1, i8** %2, align 8
  %3 = bitcast { i8*, i8* }* %0 to %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]"*
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !6
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = insertvalue { i8*, i8* } undef, i8* %5, 0
  %9 = insertvalue { i8*, i8* } %8, i8* %7, 1
  ret { i8*, i8* } %9
}

; core::iter::adapters::peekable::Peekable<I>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$3new17h3edc3b8b148fb59fE"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* noalias nocapture sret(%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>") dereferenceable(24) %0, i8* nonnull %iter.0, i8* %iter.1) unnamed_addr #0 {
start:
  %_3 = alloca { i8, i8 }, align 1
  %1 = bitcast { i8, i8 }* %_3 to i8*
  store i8 2, i8* %1, align 1
  %2 = bitcast %"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* %0 to { i8*, i8* }*
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 0
  store i8* %iter.0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  store i8* %iter.1, i8** %4, align 8
  %5 = getelementptr inbounds %"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>", %"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* %0, i32 0, i32 1
  %6 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_3, i32 0, i32 0
  %7 = load i8, i8* %6, align 1, !range !7
  %8 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_3, i32 0, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %5, i32 0, i32 0
  store i8 %7, i8* %10, align 8
  %11 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %5, i32 0, i32 1
  store i8 %9, i8* %11, align 1
  ret void
}

; core::iter::adapters::peekable::Peekable<I>::peek
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17hea9510914d643feaE"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_6 = alloca i64*, align 8
  %iter = alloca { i8*, i8* }*, align 8
  %0 = bitcast %"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* %self to { i8*, i8* }*
  store { i8*, i8* }* %0, { i8*, i8* }** %iter, align 8
  %_5 = getelementptr inbounds %"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>", %"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* %self, i32 0, i32 1
  %1 = bitcast i64** %_6 to { i8*, i8* }***
  store { i8*, i8* }** %iter, { i8*, i8* }*** %1, align 8
  %2 = load i64*, i64** %_6, align 8, !nonnull !6
; call core::option::Option<T>::get_or_insert_with
  %_4 = call align 1 dereferenceable(2) { i8, i8 }* @"_ZN4core6option15Option$LT$T$GT$18get_or_insert_with17h1f6b4bdd4b7e38d2E"({ i8, i8 }* align 1 dereferenceable(2) %_5, i64* align 8 dereferenceable(8) %2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::as_ref
  %3 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core6option15Option$LT$T$GT$6as_ref17hc58d4172db90bc01E"({ i8, i8 }* align 1 dereferenceable(2) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %3
}

; core::iter::adapters::peekable::Peekable<I>::peek::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek28_$u7b$$u7b$closure$u7d$$u7d$17h961ba1c5381166aeE"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #1 {
start:
  %0 = bitcast i64* %_1 to { i8*, i8* }**
  %1 = bitcast i64* %_1 to { i8*, i8* }**
  %_2 = load { i8*, i8* }*, { i8*, i8* }** %1, align 8, !nonnull !6
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
  %2 = call { i8, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h95c99b261dc99a11E"({ i8*, i8* }* align 8 dereferenceable(16) %_2)
  %3 = extractvalue { i8, i8 } %2, 0
  %4 = trunc i8 %3 to i1
  %5 = extractvalue { i8, i8 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %6 = zext i1 %4 to i8
  %7 = insertvalue { i8, i8 } undef, i8 %6, 0
  %8 = insertvalue { i8, i8 } %7, i8 %5, 1
  ret { i8, i8 } %8
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h1d3f777d8c942944E"([128 x i32]* align 4 dereferenceable(512) %self, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_4.0 = bitcast [128 x i32]* %self to [0 x i32]*
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %1 = call { [0 x i32]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h1d3244b438f07788E"([0 x i32]* nonnull align 4 %_4.0, i64 128, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i32]*, i64 } %1, 0
  %3 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %2, 0
  %5 = insertvalue { [0 x i32]*, i64 } %4, i64 %3, 1
  ret { [0 x i32]*, i64 } %5
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17ha445931793992c23E"([4 x i8]* align 1 dereferenceable(4) %self, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_4.0 = bitcast [4 x i8]* %self to [0 x i8]*
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hc5fe5a5806386b9aE"([0 x i8]* nonnull align 1 %_4.0, i64 4, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17hd1623cd06c0ff58bE"([4 x i8]* align 1 dereferenceable(4) %self, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_6.0 = bitcast [4 x i8]* %self to [0 x i8]*
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h0eb5ac3afd118e37E"([0 x i8]* nonnull align 1 %_6.0, i64 4, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::clone::Clone::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core5clone5Clone5clone17h0ef3f928a82cd3dcE(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* noalias nocapture sret(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]") dereferenceable(40) %0, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* align 8 dereferenceable(40) %_1) unnamed_addr #1 {
start:
  %_2 = bitcast %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* %_1 to %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"*
  %1 = bitcast %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* %0 to %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"*
; call <core::iter::adapters::map::Map<I,F> as core::clone::Clone>::clone
  call void @"_ZN82_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hb9ae9c9ca7b01a9eE"(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>") dereferenceable(40) %1, %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* align 8 dereferenceable(40) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::clone::Clone::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core5clone5Clone5clone17h4a267c58539d55a7E(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]"* nonnull align 1 %_1) unnamed_addr #1 {
start:
  ret void
}

; core::clone::Clone::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core5clone5Clone5clone17ha5be340ac35edaf7E(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]"* nonnull align 1 %_1) unnamed_addr #1 {
start:
  ret void
}

; core::clone::impls::<impl core::clone::Clone for u8>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core5clone5impls51_$LT$impl$u20$core..clone..Clone$u20$for$u20$u8$GT$5clone17h920b60f41babf9acE"(i8* align 1 dereferenceable(1) %self) unnamed_addr #1 {
start:
  %0 = load i8, i8* %self, align 1
  ret i8 %0
}

; core::clone::impls::<impl core::clone::Clone for u64>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u64$GT$5clone17h7136b57d2fe92d8fE"(i64* align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hf107f76c081dd3e6E"(i64* align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::slice::<impl [T]>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17hbdf03d74f19db8daE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_15 = alloca i64, align 8
  %_12 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca i8, align 1
  %needle = alloca { [0 x i8]*, i64 }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !6
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1
  %_4.1 = load i64, i64* %6, align 8
  %_5 = icmp uge i64 %self.1, %_4.1
  br i1 %_5, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %2, align 1
  br label %bb3

bb2:                                              ; preds = %start
  store i64 %_4.1, i64* %_15, align 8
  %7 = load i64, i64* %_15, align 8
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %8 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h2819887a04874136E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %7, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc771 to %"core::panic::location::Location"*))
  %_13.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb4

bb4:                                              ; preds = %bb2
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 0
  store [0 x i8]* %_13.0, [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 1
  store i64 %_13.1, i64* %10, align 8
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_9 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h1595aef07d10a2acE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %needle, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %_12)
  br label %bb5

bb5:                                              ; preds = %bb4
  %11 = zext i1 %_9 to i8
  store i8 %11, i8* %2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb5
  %12 = load i8, i8* %2, align 1, !range !2
  %13 = trunc i8 %12 to i1
  ret i1 %13
}

; core::slice::<impl [T]>::chunks_exact
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12chunks_exact17h3b2d26179e600279E"(%"core::slice::iter::ChunksExact<u8>"* noalias nocapture sret(%"core::slice::iter::ChunksExact<u8>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %1) unnamed_addr #1 {
start:
  %_17 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_3 = alloca { i64*, i64* }, align 8
  %chunk_size = alloca i64, align 8
  store i64 %1, i64* %chunk_size, align 8
  %2 = bitcast { i64*, i64* }* %_3 to i64**
  store i64* %chunk_size, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_3, i32 0, i32 1
  store i64* bitcast (<{ [8 x i8] }>* @alloc565 to i64*), i64** %3, align 8
  %4 = bitcast { i64*, i64* }* %_3 to i64**
  %left_val = load i64*, i64** %4, align 8, !nonnull !6
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_3, i32 0, i32 1
  %right_val = load i64*, i64** %5, align 8, !nonnull !6
  %_9 = load i64, i64* %left_val, align 8
  %_10 = load i64, i64* %right_val, align 8
  %_8 = icmp eq i64 %_9, %_10
  br i1 %_8, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_19 = load i64, i64* %chunk_size, align 8
; call core::slice::iter::ChunksExact<T>::new
  call void @"_ZN4core5slice4iter20ChunksExact$LT$T$GT$3new17h90d1f0868fd6a2d3E"(%"core::slice::iter::ChunksExact<u8>"* noalias nocapture sret(%"core::slice::iter::ChunksExact<u8>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %_19)
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %kind, align 1
  %6 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_17 to {}**
  store {}* null, {}** %6, align 8
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hb9880d2d64797ef4E(i8 1, i64* align 8 dereferenceable(8) %left_val, i64* align 8 dereferenceable(8) %right_val, %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %_17, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc773 to %"core::panic::location::Location"*)) #12
  unreachable

bb3:                                              ; preds = %bb2
  ret void
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h328cf13d896b60afE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %0 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hd4b10a7eca336a0fE"(i64 %index, [0 x i8]* %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h72da40fcfc3955a5E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h2aa03c8042ed3f57E"(i64 %index, [0 x i8]* %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %_3
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hce9a5c0861d69f51E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 {
start:
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %0 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hd78d626641d54efcE"(i64 %index, [0 x i8]* %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::<impl [T]>::split_at_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$18split_at_unchecked17h3b7f0737eb662eb6E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %mid) unnamed_addr #1 {
start:
  %_11 = alloca i64, align 8
  %_6 = alloca i64, align 8
  store i64 %mid, i64* %_6, align 8
  %1 = load i64, i64* %_6, align 8
; call core::slice::<impl [T]>::get_unchecked
  %2 = call { [0 x i8]*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h328cf13d896b60afE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %1)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %mid, i64* %_11, align 8
  %3 = load i64, i64* %_11, align 8
; call core::slice::<impl [T]>::get_unchecked
  %4 = call { [0 x i8]*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hce9a5c0861d69f51E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %3)
  %_9.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  store [0 x i8]* %_4.0, [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  store i64 %_4.1, i64* %7, align 8
  %8 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0, i32 0, i32 1
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0
  store [0 x i8]* %_9.0, [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1
  store i64 %_9.1, i64* %10, align 8
  ret void
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h05a01ca2d4cf7cbaE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %0 = call align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h115bade7821ee7cdE"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2690818a89e1963eE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %0 = call align 4 dereferenceable_or_null(4) i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h1bf6ffece4f5d49aE"(i64 %index, [0 x i32]* nonnull align 4 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %0
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hd66e6cf3d7ccdb2dE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1) unnamed_addr #1 {
start:
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %0 = call { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hf3e73147d15e1e18E"(i64 %index.0, i64 %index.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hc55cadacff6dc9d7E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha0f09b408468b811E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1)
  %1 = extractvalue { i32*, i32* } %0, 0
  %2 = extractvalue { i32*, i32* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i32*, i32* } undef, i32* %1, 0
  %4 = insertvalue { i32*, i32* } %3, i32* %2, 1
  ret { i32*, i32* } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17he6a2d7cc33388660E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h4f2bacca2daf2936E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h765735c818f7f7d0E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h88076d13970eb34dE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = bitcast [0 x i32]* %self.0 to i32*
  ret i32* %0
}

; core::slice::<impl [T]>::split_at
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8split_at17hb5f4cb1b326289d9E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %mid) unnamed_addr #1 {
start:
  %_4 = icmp ule i64 %mid, %self.1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$18split_at_unchecked17h3b7f0737eb662eb6E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %mid)
  br label %bb3

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [35 x i8] }>* @alloc774 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc776 to %"core::panic::location::Location"*)) #12
  unreachable

bb3:                                              ; preds = %bb2
  ret void
}

; core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17hb57df59af7fe7445E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #0 {
start:
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %0 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h2db15cfd358509a5E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h6b9502906d7d8cdbE(i8* %data, i64 %len) unnamed_addr #1 {
start:
; call core::slice::raw::debug_check_data_len
  call void @_ZN4core5slice3raw20debug_check_data_len17heaa8ce2a4aa44851E(i8* %data, i64 %len)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hb9ba4c632b53cefcE(i8* %data, i64 %len)
  %_6.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_6.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_6.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::raw::debug_check_data_len
; Function Attrs: nonlazybind uwtable
define void @_ZN4core5slice3raw20debug_check_data_len17heaa8ce2a4aa44851E(i8* %_data, i64 %_len) unnamed_addr #0 {
start:
  ret void
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h4f2bacca2daf2936E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %end = alloca i8*, align 8
  %2 = alloca { i8*, i8* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h765735c818f7f7d0E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h50c74e222c8a4850E"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 1, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %4 = getelementptr i8, i8* %ptr, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1
  store i8* %6, i8** %0, align 8
  %7 = load i8*, i8** %0, align 8
  store i8* %7, i8** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hff0aa147614572c1E"(i8* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  store i8* %5, i8** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load i8*, i8** %end, align 8
  %8 = bitcast { i8*, i8* }* %2 to i8**
  store i8* %_18, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  store i8* %_21, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8, !nonnull !6
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = insertvalue { i8*, i8* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i8* } %14, i8* %13, 1
  ret { i8*, i8* } %15
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17ha0f09b408468b811E"([0 x i32]* nonnull align 4 %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
  %1 = alloca i8*, align 8
  %end = alloca i32*, align 8
  %2 = alloca { i32*, i32* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h88076d13970eb34dE"([0 x i32]* nonnull align 4 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h3b5a74d1b03b19e1E"(i32* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 4, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast i32* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds i32, i32* %ptr, i64 %slice.1
  store i32* %6, i32** %0, align 8
  %7 = load i32*, i32** %0, align 8
  store i32* %7, i32** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1c909d8c0c85fa8eE"(i32* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to i32*
  store i32* %8, i32** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load i32*, i32** %end, align 8
  %9 = bitcast { i32*, i32* }* %2 to i32**
  store i32* %_18, i32** %9, align 8
  %10 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 1
  store i32* %_21, i32** %10, align 8
  %11 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8, !nonnull !6
  %13 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %2, i32 0, i32 1
  %14 = load i32*, i32** %13, align 8
  %15 = insertvalue { i32*, i32* } undef, i32* %12, 0
  %16 = insertvalue { i32*, i32* } %15, i32* %14, 1
  ret { i32*, i32* } %16
}

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h244c7f87283dffd7E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_5.i = alloca i64, align 8
  %1 = bitcast { i8*, i8* }* %self to i8**
  %_4.i = load i8*, i8** %1, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %_4.i)
  %2 = bitcast { i8*, i8* }* %self to i8**
  %start1.i = load i8*, i8** %2, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_9.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i)
  %3 = icmp eq i64 1, 0
  br i1 %3, label %bb4.i, label %bb7.i

bb4.i:                                            ; preds = %start
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_13.i = load i8*, i8** %4, align 8
  %_12.i = ptrtoint i8* %_13.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i)
  %_14.i = ptrtoint i8* %_15.i to i64
  %5 = sub i64 %_12.i, %_14.i
  store i64 %5, i64* %_5.i, align 8
  br label %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h9c438a0c0ab07017E.exit"

bb7.i:                                            ; preds = %start
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_19.i = load i8*, i8** %6, align 8
  %_18.i = ptrtoint i8* %_19.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_21.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i)
  %_20.i = ptrtoint i8* %_21.i to i64
  %7 = sub nuw i64 %_18.i, %_20.i
  store i64 %7, i64* %0, align 8
  %diff.i = load i64, i64* %0, align 8
  %8 = udiv exact i64 %diff.i, 1
  store i64 %8, i64* %_5.i, align 8
  br label %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h9c438a0c0ab07017E.exit"

"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h9c438a0c0ab07017E.exit": ; preds = %bb7.i, %bb4.i
  %9 = load i64, i64* %_5.i, align 8
; call core::slice::raw::from_raw_parts
  %10 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h6b9502906d7d8cdbE(i8* %_3.i, i64 %9)
  %11 = extractvalue { [0 x i8]*, i64 } %10, 0
  %12 = extractvalue { [0 x i8]*, i64 } %10, 1
  %13 = extractvalue { [0 x i8]*, i64 } %10, 0
  %14 = extractvalue { [0 x i8]*, i64 } %10, 1
  br label %bb1

bb1:                                              ; preds = %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h9c438a0c0ab07017E.exit"
  %15 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %16 = insertvalue { [0 x i8]*, i64 } %15, i64 %14, 1
  ret { [0 x i8]*, i64 } %16
}

; core::slice::iter::ChunksExact<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice4iter20ChunksExact$LT$T$GT$3new17h90d1f0868fd6a2d3E"(%"core::slice::iter::ChunksExact<u8>"* noalias nocapture sret(%"core::slice::iter::ChunksExact<u8>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %chunk_size) unnamed_addr #1 {
start:
  %_14 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_7 = icmp eq i64 %chunk_size, 0
  %1 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  %rem = urem i64 %slice.1, %chunk_size
  %fst_len = sub i64 %slice.1, %rem
; call core::slice::<impl [T]>::split_at_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$18split_at_unchecked17h3b7f0737eb662eb6E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %_14, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %fst_len)
  br label %bb2

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([57 x i8]* @str.2 to [0 x i8]*), i64 57, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc778 to %"core::panic::location::Location"*)) #12
  unreachable

bb2:                                              ; preds = %bb1
  %2 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_14 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  %fst.0 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !6
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  %fst.1 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_14, i32 0, i32 1
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %snd.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !6
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %snd.1 = load i64, i64* %7, align 8
  %8 = bitcast %"core::slice::iter::ChunksExact<u8>"* %0 to { [0 x i8]*, i64 }*
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0
  store [0 x i8]* %fst.0, [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1
  store i64 %fst.1, i64* %10, align 8
  %11 = getelementptr inbounds %"core::slice::iter::ChunksExact<u8>", %"core::slice::iter::ChunksExact<u8>"* %0, i32 0, i32 1
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0
  store [0 x i8]* %snd.0, [0 x i8]** %12, align 8
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1
  store i64 %snd.1, i64* %13, align 8
  %14 = getelementptr inbounds %"core::slice::iter::ChunksExact<u8>", %"core::slice::iter::ChunksExact<u8>"* %0, i32 0, i32 2
  store i64 %chunk_size, i64* %14, align 8
  ret void
}

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: nonlazybind uwtable
define { i32*, i32* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h584399c93a289115E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::<impl [T]>::iter
  %0 = call { i32*, i32* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hc55cadacff6dc9d7E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1)
  %1 = extractvalue { i32*, i32* } %0, 0
  %2 = extractvalue { i32*, i32* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i32*, i32* } undef, i32* %1, 0
  %4 = insertvalue { i32*, i32* } %3, i32* %2, 1
  ret { i32*, i32* } %4
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h1d3244b438f07788E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i32]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17he41f8beb3101468dE"(i64 %index, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i32]*, i64 } %1, 0
  %3 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %2, 0
  %5 = insertvalue { [0 x i32]*, i64 } %4, i64 %3, 1
  ret { [0 x i32]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h2819887a04874136E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h898bc9025950b0e3E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hc5fe5a5806386b9aE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h0b11e7dab6218658E"(i64 %index.0, i64 %index.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h0eb5ac3afd118e37E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h80db2fb1cec8524eE"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb045e568327b2c66E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
; call <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h8b5639ba23c9b031E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::slice::memchr::memchr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5slice6memchr6memchr17hea26ef742c48fad3E(i8 %0, [0 x i8]* nonnull align 1 %text.0, i64 %text.1) unnamed_addr #1 {
start:
  %_10 = alloca i8*, align 8
  %_8 = alloca { i8*, i8* }, align 8
  %1 = alloca { i64, i64 }, align 8
  %x = alloca i8, align 1
  store i8 %0, i8* %x, align 1
  %_3 = icmp ult i64 %text.1, 16
  br i1 %_3, label %bb1, label %bb4

bb4:                                              ; preds = %start
  %_12 = load i8, i8* %x, align 1
; call core::slice::memchr::memchr_general_case
  %2 = call { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17h3d12d97f424848f5E(i8 %_12, [0 x i8]* nonnull align 1 %text.0, i64 %text.1)
  store { i64, i64 } %2, { i64, i64 }* %1, align 8
  br label %bb5

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %3 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17he6a2d7cc33388660E"([0 x i8]* nonnull align 1 %text.0, i64 %text.1)
  store { i8*, i8* } %3, { i8*, i8* }* %_8, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8* %x, i8** %_10, align 8
  %4 = load i8*, i8** %_10, align 8, !nonnull !6
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %5 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17hab594483a347aee8E"({ i8*, i8* }* align 8 dereferenceable(16) %_8, i8* align 1 dereferenceable(1) %4)
  store { i64, i64 } %5, { i64, i64 }* %1, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8, !range !5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i64, i64 } undef, i64 %7, 0
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1
  ret { i64, i64 } %11

bb5:                                              ; preds = %bb4
  br label %bb6
}

; core::slice::memchr::memchr::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h6bd344b0ffb4cae4E"(i8** align 8 dereferenceable(8) %_1, i8* align 1 dereferenceable(1) %elt) unnamed_addr #1 {
start:
  %_3 = load i8, i8* %elt, align 1
  %0 = load i8*, i8** %_1, align 8, !nonnull !6
  %_4 = load i8, i8* %0, align 1
  %1 = icmp eq i8 %_3, %_4
  ret i1 %1
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h4f0eb1250534e3baE"(i8 %0, i64* align 8 dereferenceable(8) %f.0, i64* align 8 dereferenceable(8) %f.1) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  store i8 %0, i8* %self, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %2 = load i8, i8* %self, align 1, !range !7
  %3 = sub i8 %2, 2
  %4 = icmp eq i8 %3, 0
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; call <rustc_demangle::v0::Ident as core::fmt::Display>::fmt::{{closure}}
  %5 = call zeroext i1 @"_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h40126978f357dbd4E"(i64* align 8 dereferenceable(8) %f.0, i64* align 8 dereferenceable(8) %f.1)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %start
  %7 = load i8, i8* %self, align 1, !range !2
  %x = trunc i8 %7 to i1
  %8 = zext i1 %x to i8
  store i8 %8, i8* %1, align 1
  br label %bb7

bb7:                                              ; preds = %bb4, %bb3
  %9 = load i8, i8* %_7, align 1, !range !2
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb5

bb4:                                              ; preds = %bb1
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i8, i8* %1, align 1, !range !2
  %12 = trunc i8 %11 to i1
  ret i1 %12

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::unwrap_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable(1) i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h8bd43ba2df660501E"(i8* align 1 dereferenceable_or_null(1) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_3 = alloca i8, align 1
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  store i8 0, i8* %_3, align 1
  store i8 1, i8* %_3, align 1
  %3 = bitcast i8** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_2 = select i1 %5, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17h25576b3377c9ba52E() #12
          to label %unreachable unwind label %cleanup

bb3:                                              ; preds = %start
  store i8 0, i8* %_3, align 1
  %val = load i8*, i8** %self, align 8, !nonnull !6
  ret i8* %val

unreachable:                                      ; preds = %bb1
  unreachable

bb7:                                              ; preds = %cleanup
  %6 = bitcast i8** %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_4 = select i1 %8, i64 0, i64 1
  %9 = icmp eq i64 %_4, 1
  br i1 %9, label %bb5, label %bb4

cleanup:                                          ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb7

bb5:                                              ; preds = %bb7
  %15 = load i8, i8* %_3, align 1, !range !2
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb6, label %bb4

bb4:                                              ; preds = %bb6, %bb5, %bb7
  %17 = bitcast { i8*, i32 }* %2 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

bb6:                                              ; preds = %bb5
  br label %bb4
}

; core::option::Option<T>::unwrap_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable(2) { i8, i8 }* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hdc13396d81eb77d3E"(i8* align 1 dereferenceable_or_null(2) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_3 = alloca i8, align 1
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  store i8 0, i8* %_3, align 1
  store i8 1, i8* %_3, align 1
  %3 = bitcast i8** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_2 = select i1 %5, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17h25576b3377c9ba52E() #12
          to label %unreachable unwind label %cleanup

bb3:                                              ; preds = %start
  store i8 0, i8* %_3, align 1
  %6 = bitcast i8** %self to { i8, i8 }**
  %val = load { i8, i8 }*, { i8, i8 }** %6, align 8, !nonnull !6
  ret { i8, i8 }* %val

unreachable:                                      ; preds = %bb1
  unreachable

bb7:                                              ; preds = %cleanup
  %7 = bitcast i8** %self to {}**
  %8 = load {}*, {}** %7, align 8
  %9 = icmp eq {}* %8, null
  %_4 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_4, 1
  br i1 %10, label %bb5, label %bb4

cleanup:                                          ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb7

bb5:                                              ; preds = %bb7
  %16 = load i8, i8* %_3, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb6, label %bb4

bb4:                                              ; preds = %bb6, %bb5, %bb7
  %18 = bitcast { i8*, i32 }* %2 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb6:                                              ; preds = %bb5
  br label %bb4
}

; core::option::Option<T>::get_or_insert_with
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable(2) { i8, i8 }* @"_ZN4core6option15Option$LT$T$GT$18get_or_insert_with17h1f6b4bdd4b7e38d2E"({ i8, i8 }* align 1 dereferenceable(2) %self, i64* align 8 dereferenceable(8) %f) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_16 = alloca i8, align 1
  %_8 = alloca { i8, i8 }, align 1
  store i8 0, i8* %_16, align 1
  store i8 1, i8* %_16, align 1
  %1 = bitcast { i8, i8 }* %self to i8*
  %2 = load i8, i8* %1, align 1, !range !7
  %3 = sub i8 %2, 2
  %4 = icmp eq i8 %3, 0
  %_5 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_5, 0
  br i1 %5, label %bb1, label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_16, align 1
; invoke core::iter::adapters::peekable::Peekable<I>::peek::{{closure}}
  %6 = invoke { i8, i8 } @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek28_$u7b$$u7b$closure$u7d$$u7d$17h961ba1c5381166aeE"(i64* align 8 dereferenceable(8) %f)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %bb4, %start
; invoke core::option::Option<T>::as_mut
  %_14 = invoke align 1 dereferenceable_or_null(2) i8* @"_ZN4core6option15Option$LT$T$GT$6as_mut17ha293b97e46ffb7a3E"({ i8, i8 }* align 1 dereferenceable(2) %self)
          to label %bb6 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %7 = extractvalue { i8, i8 } %6, 0
  %_9.0 = trunc i8 %7 to i1
  %_9.1 = extractvalue { i8, i8 } %6, 1
  %8 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_8, i32 0, i32 0
  %9 = zext i1 %_9.0 to i8
  store i8 %9, i8* %8, align 1
  %10 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_8, i32 0, i32 1
  store i8 %_9.1, i8* %10, align 1
  %11 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_8, i32 0, i32 0
  %12 = load i8, i8* %11, align 1, !range !7
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_8, i32 0, i32 1
  %14 = load i8, i8* %13, align 1
; invoke core::mem::replace
  %15 = invoke { i8, i8 } @_ZN4core3mem7replace17h468aa3f103b90443E({ i8, i8 }* align 1 dereferenceable(2) %self, i8 %12, i8 %14)
          to label %bb3 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %16 = load i8, i8* %_16, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb11, label %bb9

cleanup:                                          ; preds = %bb6, %bb5, %bb3, %bb2, %bb1
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb12

bb3:                                              ; preds = %bb2
  %_6.0 = extractvalue { i8, i8 } %15, 0
  %_6.1 = extractvalue { i8, i8 } %15, 1
; invoke core::mem::forget
  invoke void @_ZN4core3mem6forget17hdc31cc67693c5d61E(i8 %_6.0, i8 %_6.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br label %bb5

bb6:                                              ; preds = %bb5
; invoke core::option::Option<T>::unwrap_unchecked
  %_13 = invoke align 1 dereferenceable(2) { i8, i8 }* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hdc13396d81eb77d3E"(i8* align 1 dereferenceable_or_null(2) %_14, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc780 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %23 = load i8, i8* %_16, align 1, !range !2
  %24 = trunc i8 %23 to i1
  br i1 %24, label %bb10, label %bb8

bb9:                                              ; preds = %bb11, %bb12
  %25 = bitcast { i8*, i32 }* %0 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = insertvalue { i8*, i32 } undef, i8* %26, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  resume { i8*, i32 } %30

bb11:                                             ; preds = %bb12
  br label %bb9

bb8:                                              ; preds = %bb10, %bb7
  ret { i8, i8 }* %_13

bb10:                                             ; preds = %bb7
  br label %bb8
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h0786bc332bce67c6E"(%"core::option::Option<(usize, usize)>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %1 = bitcast %"core::option::Option<(usize, usize)>"* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %2, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<(usize, usize)>"* %self to %"core::option::Option<(usize, usize)>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0
  %x.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  %x.1 = load i64, i64* %6, align 8
  store i8 0, i8* %_9, align 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  store i64 %x.0, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  store i64 %x.1, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
; call core::str::<impl str>::find::{{closure}}
  %_5 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h38314583fc6f1e77E"(i64 %10, i64 %12)
  br label %bb4

bb4:                                              ; preds = %bb3
  %13 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %13, i32 0, i32 1
  store i64 %_5, i64* %14, align 8
  %15 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %15, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %16 = load i8, i8* %_9, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8, !range !5
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = insertvalue { i64, i64 } undef, i64 %19, 0
  %23 = insertvalue { i64, i64 } %22, i64 %21, 1
  ret { i64, i64 } %23

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17h1f2c8b988a6592deE"(i32 %0, {}* nonnull align 1 %f) unnamed_addr #1 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %1 = alloca i32, align 4
  %self = alloca i32, align 4
  store i32 %0, i32* %self, align 4
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %2 = load i32, i32* %self, align 4, !range !3
  %3 = sub i32 %2, 1114113
  %4 = icmp eq i32 %3, 0
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i32 1114112, i32* %1, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %x = load i32, i32* %self, align 4, !range !4
  store i8 0, i8* %_9, align 1
  store i32 %x, i32* %_7, align 4
  %5 = load i32, i32* %_7, align 4, !range !4
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i32 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h347c22b27da9bc2bE"({}* nonnull align 1 %f, i32 %5), !range !9
  br label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %1, align 4
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %6 = load i8, i8* %_9, align 1, !range !2
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %8 = load i32, i32* %1, align 4, !range !4
  ret i32 %8

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h5ed6493e0addb790E"(%"core::option::Option<(usize, usize)>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %1 = bitcast %"core::option::Option<(usize, usize)>"* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %2, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<(usize, usize)>"* %self to %"core::option::Option<(usize, usize)>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0
  %x.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  %x.1 = load i64, i64* %6, align 8
  store i8 0, i8* %_9, align 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  store i64 %x.0, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  store i64 %x.1, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
; call core::str::<impl str>::find::{{closure}}
  %_5 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h653ac9a31f25c445E"(i64 %10, i64 %12)
  br label %bb4

bb4:                                              ; preds = %bb3
  %13 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %13, i32 0, i32 1
  store i64 %_5, i64* %14, align 8
  %15 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %15, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %16 = load i8, i8* %_9, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8, !range !5
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = insertvalue { i64, i64 } undef, i64 %19, 0
  %23 = insertvalue { i64, i64 } %22, i64 %21, 1
  ret { i64, i64 } %23

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17h97d6adcf3a1a949fE"(i1 zeroext %0, i8 %1, i64* align 8 dereferenceable(40) %f) unnamed_addr #1 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %2 = alloca i32, align 4
  %self = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 0
  %4 = zext i1 %0 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 1
  store i8 %1, i8* %5, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %6 = bitcast { i8, i8 }* %self to i8*
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i32 1114113, i32* %2, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %self to %"core::option::Option<u8>::Some"*
  %10 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %9, i32 0, i32 1
  %x = load i8, i8* %10, align 1
  store i8 0, i8* %_9, align 1
  store i8 %x, i8* %_7, align 1
  %11 = load i8, i8* %_7, align 1
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}
  %_5 = call i32 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17haf1c7ded4398498aE"(i64* align 8 dereferenceable(40) %f, i8 %11), !range !4
  br label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %12 = load i8, i8* %_9, align 1, !range !2
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %14 = load i32, i32* %2, align 4, !range !3
  ret i32 %14

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17hb88321a1c651de49E"(i32 %0, i32 %1) unnamed_addr #1 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i32, i32 }* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !24
  %_3 = zext i32 %6 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i32, i32 }* %self to %"core::option::Option<u32>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %7, i32 0, i32 1
  %x = load i32, i32* %8, align 4
  store i8 0, i8* %_9, align 1
  store i32 %x, i32* %_7, align 4
  %9 = load i32, i32* %_7, align 4
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
  %_5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h347a36d105995ed9E"(i32 %9), !range !9
  br label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %10 = load i8, i8* %_9, align 1, !range !2
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %12 = load i32, i32* %2, align 4, !range !4
  ret i32 %12

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i128 @"_ZN4core6option15Option$LT$T$GT$3map17hd047880ee8307941E"(i8* align 1 %0, i64 %1, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]"* nonnull align 1 %f) unnamed_addr #1 {
start:
  %2 = alloca i128, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca { i8*, i64 }, align 8
  %_5 = alloca [2 x i8*], align 8
  %3 = alloca %"core::option::Option<[&u8; 2]>", align 8
  %self = alloca { i8*, i64 }, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %6 = bitcast { i8*, i64 }* %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_3 = select i1 %8, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %9 = bitcast %"core::option::Option<[&u8; 2]>"* %3 to {}**
  store {}* null, {}** %9, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %10 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0
  %x.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !nonnull !6
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1
  %x.1 = load i64, i64* %12, align 8
  store i8 0, i8* %_9, align 1
  %13 = bitcast { i8*, i64 }* %_7 to { [0 x i8]*, i64 }*
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 0
  store [0 x i8]* %x.0, [0 x i8]** %14, align 8
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 1
  store i64 %x.1, i64* %15, align 8
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8, !nonnull !6
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i8* %17 to [0 x i8]*
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %21 = call i128 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h7e291acd49276ab1E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]"* nonnull align 1 %f, [0 x i8]* nonnull align 1 %20, i64 %19)
  store i128 %21, i128* %2, align 8
  %22 = bitcast [2 x i8*]* %_5 to i8*
  %23 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb3
  %24 = bitcast %"core::option::Option<[&u8; 2]>"* %3 to %"core::option::Option<[&u8; 2]>::Some"*
  %25 = bitcast %"core::option::Option<[&u8; 2]>::Some"* %24 to [2 x i8*]*
  %26 = bitcast [2 x i8*]* %25 to i8*
  %27 = bitcast [2 x i8*]* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %28 = load i8, i8* %_9, align 1, !range !2
  %29 = trunc i8 %28 to i1
  br i1 %29, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %30 = bitcast %"core::option::Option<[&u8; 2]>"* %3 to i128*
  %31 = load i128, i128* %30, align 8
  ret i128 %31

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17he86277a5be7aeb40E"(i128 %0, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]"* nonnull align 1 %f) unnamed_addr #1 {
start:
  %_9 = alloca i8, align 1
  %_8 = alloca [2 x i8*], align 8
  %_7 = alloca { [2 x i8*] }, align 8
  %x = alloca [2 x i8*], align 8
  %1 = alloca { i8, i8 }, align 1
  %2 = alloca i128, align 8
  %self = alloca %"core::option::Option<[&u8; 2]>", align 8
  store i128 %0, i128* %2, align 8
  %3 = bitcast %"core::option::Option<[&u8; 2]>"* %self to i8*
  %4 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast %"core::option::Option<[&u8; 2]>"* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_3 = select i1 %7, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %8 = bitcast { i8, i8 }* %1 to i8*
  store i8 0, i8* %8, align 1
  br label %bb7

bb3:                                              ; preds = %start
  %9 = bitcast %"core::option::Option<[&u8; 2]>"* %self to %"core::option::Option<[&u8; 2]>::Some"*
  %10 = bitcast %"core::option::Option<[&u8; 2]>::Some"* %9 to [2 x i8*]*
  %11 = bitcast [2 x i8*]* %x to i8*
  %12 = bitcast [2 x i8*]* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  store i8 0, i8* %_9, align 1
  %13 = bitcast [2 x i8*]* %_8 to i8*
  %14 = bitcast [2 x i8*]* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false)
  %15 = bitcast { [2 x i8*] }* %_7 to [2 x i8*]*
  %16 = bitcast [2 x i8*]* %15 to i8*
  %17 = bitcast [2 x i8*]* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false)
  %18 = bitcast { [2 x i8*] }* %_7 to [2 x i8*]*
  %19 = bitcast [2 x i8*]* %18 to i128*
  %20 = load i128, i128* %19, align 8
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i8 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17hd3816418f2ba8547E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]"* nonnull align 1 %f, i128 %20)
  br label %bb4

bb4:                                              ; preds = %bb3
  %21 = bitcast { i8, i8 }* %1 to %"core::option::Option<u8>::Some"*
  %22 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %21, i32 0, i32 1
  store i8 %_5, i8* %22, align 1
  %23 = bitcast { i8, i8 }* %1 to i8*
  store i8 1, i8* %23, align 1
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %24 = load i8, i8* %_9, align 1, !range !2
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %26 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %1, i32 0, i32 0
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = trunc i8 %27 to i1
  %29 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %1, i32 0, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i1 %28 to i8
  %32 = insertvalue { i8, i8 } undef, i8 %31, 0
  %33 = insertvalue { i8, i8 } %32, i8 %30, 1
  ret { i8, i8 } %33

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hf6a091b62e7ac156E"(%"core::option::Option<(usize, usize)>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %1 = bitcast %"core::option::Option<(usize, usize)>"* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %2, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<(usize, usize)>"* %self to %"core::option::Option<(usize, usize)>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0
  %x.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  %x.1 = load i64, i64* %6, align 8
  store i8 0, i8* %_9, align 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  store i64 %x.0, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  store i64 %x.1, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
; call core::str::<impl str>::find::{{closure}}
  %_5 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h6965f291c5cf2354E"(i64 %10, i64 %12)
  br label %bb4

bb4:                                              ; preds = %bb3
  %13 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %13, i32 0, i32 1
  store i64 %_5, i64* %14, align 8
  %15 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %15, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %16 = load i8, i8* %_9, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8, !range !5
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = insertvalue { i64, i64 } undef, i64 %19, 0
  %23 = insertvalue { i64, i64 } %22, i64 %21, 1
  ret { i64, i64 } %23

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$4take17h5e77f130621dfb31E"({ i8, i8 }* align 1 dereferenceable(2) %self) unnamed_addr #1 {
start:
  %_3 = alloca { i8, i8 }, align 1
  %0 = bitcast { i8, i8 }* %_3 to i8*
  store i8 2, i8* %0, align 1
  %1 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_3, i32 0, i32 0
  %2 = load i8, i8* %1, align 1, !range !7
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_3, i32 0, i32 1
  %4 = load i8, i8* %3, align 1
; call core::mem::replace
  %5 = call { i8, i8 } @_ZN4core3mem7replace17h468aa3f103b90443E({ i8, i8 }* align 1 dereferenceable(2) %self, i8 %2, i8 %4)
  %6 = extractvalue { i8, i8 } %5, 0
  %7 = extractvalue { i8, i8 } %5, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { i8, i8 } undef, i8 %6, 0
  %9 = insertvalue { i8, i8 } %8, i8 %7, 1
  ret { i8, i8 } %9
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$4take17h9d23f3f67fea5692E"(i32* align 4 dereferenceable(4) %self) unnamed_addr #1 {
start:
  %_3 = alloca i32, align 4
  store i32 1114112, i32* %_3, align 4
  %0 = load i32, i32* %_3, align 4, !range !4
; call core::mem::replace
  %1 = call i32 @_ZN4core3mem7replace17h55a5581228988eedE(i32* align 4 dereferenceable(4) %self, i32 %0), !range !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(64) i64* @"_ZN4core6option15Option$LT$T$GT$4take17hbbc3f46c27946c45E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = alloca i64*, align 8
  %0 = bitcast i64** %_3 to {}**
  store {}* null, {}** %0, align 8
  %1 = load i64*, i64** %_3, align 8
; call core::mem::replace
  %2 = call align 8 dereferenceable_or_null(64) i64* @_ZN4core3mem7replace17hef84fb0c7fad5dceE(i64** align 8 dereferenceable(8) %self, i64* align 8 dereferenceable_or_null(64) %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %2
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h091390f384d7e4a4E"(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, ()>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, ()>::Err", %"core::result::Result<usize, ()>::Err"* %6, i32 0, i32 1
  %8 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %8, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %10 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %9, i32 0, i32 1
  %v = load i64, i64* %10, align 8
  %11 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, ()>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<usize, ()>::Ok", %"core::result::Result<usize, ()>::Ok"* %11, i32 0, i32 1
  store i64 %v, i64* %12, align 8
  %13 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %13, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %14 = load i8, i8* %_7, align 1, !range !2
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8, !range !5
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1
  ret { i64, i64 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h5b738170cd8075b4E"(i1 zeroext %0, i8 %1, i1 zeroext %err) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca { i8, i8 }, align 1
  %self = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 0
  %4 = zext i1 %0 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 1
  store i8 %1, i8* %5, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %6 = bitcast { i8, i8 }* %self to i8*
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %9 = bitcast { i8, i8 }* %2 to %"core::result::Result<u8, v0::ParseError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Err", %"core::result::Result<u8, v0::ParseError>::Err"* %9, i32 0, i32 1
  %11 = zext i1 %err to i8
  store i8 %11, i8* %10, align 1
  %12 = bitcast { i8, i8 }* %2 to i8*
  store i8 1, i8* %12, align 1
  br label %bb6

bb3:                                              ; preds = %start
  %13 = bitcast { i8, i8 }* %self to %"core::option::Option<u8>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %13, i32 0, i32 1
  %v = load i8, i8* %14, align 1
  %15 = bitcast { i8, i8 }* %2 to %"core::result::Result<u8, v0::ParseError>::Ok"*
  %16 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Ok", %"core::result::Result<u8, v0::ParseError>::Ok"* %15, i32 0, i32 1
  store i8 %v, i8* %16, align 1
  %17 = bitcast { i8, i8 }* %2 to i8*
  store i8 0, i8* %17, align 1
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %18 = load i8, i8* %_7, align 1, !range !2
  %19 = trunc i8 %18 to i1
  br i1 %19, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %20 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %2, i32 0, i32 0
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = trunc i8 %21 to i1
  %23 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %2, i32 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = zext i1 %22 to i8
  %26 = insertvalue { i8, i8 } undef, i8 %25, 0
  %27 = insertvalue { i8, i8 } %26, i8 %24, 1
  ret { i8, i8 } %27

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h67fce5b2c1bed47cE"(i32* align 4 dereferenceable_or_null(4) %0) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i32*, align 8
  %self = alloca i32*, align 8
  store i32* %0, i32** %self, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %2 = bitcast i32** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i32** %1 to %"core::result::Result<&char, ()>::Err"*
  %6 = bitcast %"core::result::Result<&char, ()>::Err"* %5 to {}*
  %7 = bitcast i32** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %v = load i32*, i32** %self, align 8, !nonnull !6
  store i32* %v, i32** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %8 = load i8, i8* %_7, align 1, !range !2
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %10 = load i32*, i32** %1, align 8
  ret i32* %10

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$5ok_or17h687a3258cde42d6fE"(i32 %0) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i32, align 4
  %self = alloca i32, align 4
  store i32 %0, i32* %self, align 4
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %2 = load i32, i32* %self, align 4, !range !4
  %3 = sub i32 %2, 1114112
  %4 = icmp eq i32 %3, 0
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i32* %1 to %"core::result::Result<char, ()>::Err"*
  %6 = bitcast %"core::result::Result<char, ()>::Err"* %5 to {}*
  store i32 1114112, i32* %1, align 4
  br label %bb6

bb3:                                              ; preds = %start
  %v = load i32, i32* %self, align 4, !range !9
  store i32 %v, i32* %1, align 4
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %7 = load i8, i8* %_7, align 1, !range !2
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %9 = load i32, i32* %1, align 4, !range !4
  ret i32 %9

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h7710c1b312946b79E"(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, SizeLimitExhausted>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, SizeLimitExhausted>::Err", %"core::result::Result<usize, SizeLimitExhausted>::Err"* %6, i32 0, i32 1
  %8 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %8, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %10 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %9, i32 0, i32 1
  %v = load i64, i64* %10, align 8
  %11 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, SizeLimitExhausted>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<usize, SizeLimitExhausted>::Ok", %"core::result::Result<usize, SizeLimitExhausted>::Ok"* %11, i32 0, i32 1
  store i64 %v, i64* %12, align 8
  %13 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %13, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %14 = load i8, i8* %_7, align 1, !range !2
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8, !range !5
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1
  ret { i64, i64 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hc6dcc6e81174a41bE"(i1 zeroext %0, i8 %1) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca { i8, i8 }, align 1
  %self = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 0
  %4 = zext i1 %0 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 1
  store i8 %1, i8* %5, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %6 = bitcast { i8, i8 }* %self to i8*
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %9 = bitcast { i8, i8 }* %2 to %"core::result::Result<u8, ()>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<u8, ()>::Err", %"core::result::Result<u8, ()>::Err"* %9, i32 0, i32 1
  %11 = bitcast { i8, i8 }* %2 to i8*
  store i8 1, i8* %11, align 1
  br label %bb6

bb3:                                              ; preds = %start
  %12 = bitcast { i8, i8 }* %self to %"core::option::Option<u8>::Some"*
  %13 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %12, i32 0, i32 1
  %v = load i8, i8* %13, align 1
  %14 = bitcast { i8, i8 }* %2 to %"core::result::Result<u8, ()>::Ok"*
  %15 = getelementptr inbounds %"core::result::Result<u8, ()>::Ok", %"core::result::Result<u8, ()>::Ok"* %14, i32 0, i32 1
  store i8 %v, i8* %15, align 1
  %16 = bitcast { i8, i8 }* %2 to i8*
  store i8 0, i8* %16, align 1
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %17 = load i8, i8* %_7, align 1, !range !2
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %19 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %2, i32 0, i32 0
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = trunc i8 %20 to i1
  %22 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %2, i32 0, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i1 %21 to i8
  %25 = insertvalue { i8, i8 } undef, i8 %24, 0
  %26 = insertvalue { i8, i8 } %25, i8 %23, 1
  ret { i8, i8 } %26

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define i128 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he050cb645293fd4cE"(i64 %0, i64 %1, i1 zeroext %err) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast %"core::result::Result<u64, v0::ParseError>"* %2 to %"core::result::Result<u64, v0::ParseError>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Err", %"core::result::Result<u64, v0::ParseError>::Err"* %6, i32 0, i32 1
  %8 = zext i1 %err to i8
  store i8 %8, i8* %7, align 1
  %9 = bitcast %"core::result::Result<u64, v0::ParseError>"* %2 to i8*
  store i8 1, i8* %9, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %10 = bitcast { i64, i64 }* %self to %"core::option::Option<u64>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %10, i32 0, i32 1
  %v = load i64, i64* %11, align 8
  %12 = bitcast %"core::result::Result<u64, v0::ParseError>"* %2 to %"core::result::Result<u64, v0::ParseError>::Ok"*
  %13 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Ok", %"core::result::Result<u64, v0::ParseError>::Ok"* %12, i32 0, i32 1
  store i64 %v, i64* %13, align 8
  %14 = bitcast %"core::result::Result<u64, v0::ParseError>"* %2 to i8*
  store i8 0, i8* %14, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %15 = load i8, i8* %_7, align 1, !range !2
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %17 = bitcast %"core::result::Result<u64, v0::ParseError>"* %2 to i128*
  %18 = load i128, i128* %17, align 8
  ret i128 %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define i128 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he3a5ee6b0011acf6E"(i64 %0, i64 %1, i1 zeroext %err) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca %"core::result::Result<usize, v0::ParseError>", align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast %"core::result::Result<usize, v0::ParseError>"* %2 to %"core::result::Result<usize, v0::ParseError>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, v0::ParseError>::Err", %"core::result::Result<usize, v0::ParseError>::Err"* %6, i32 0, i32 1
  %8 = zext i1 %err to i8
  store i8 %8, i8* %7, align 1
  %9 = bitcast %"core::result::Result<usize, v0::ParseError>"* %2 to i8*
  store i8 1, i8* %9, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %10 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %10, i32 0, i32 1
  %v = load i64, i64* %11, align 8
  %12 = bitcast %"core::result::Result<usize, v0::ParseError>"* %2 to %"core::result::Result<usize, v0::ParseError>::Ok"*
  %13 = getelementptr inbounds %"core::result::Result<usize, v0::ParseError>::Ok", %"core::result::Result<usize, v0::ParseError>::Ok"* %12, i32 0, i32 1
  store i64 %v, i64* %13, align 8
  %14 = bitcast %"core::result::Result<usize, v0::ParseError>"* %2 to i8*
  store i8 0, i8* %14, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %15 = load i8, i8* %_7, align 1, !range !2
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %17 = bitcast %"core::result::Result<usize, v0::ParseError>"* %2 to i128*
  %18 = load i128, i128* %17, align 8
  ret i128 %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::as_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(2) i8* @"_ZN4core6option15Option$LT$T$GT$6as_mut17ha293b97e46ffb7a3E"({ i8, i8 }* align 1 dereferenceable(2) %self) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = bitcast { i8, i8 }* %self to i8*
  %2 = load i8, i8* %1, align 1, !range !7
  %3 = sub i8 %2, 2
  %4 = icmp eq i8 %3, 0
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast i8** %0 to {}**
  store {}* null, {}** %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %6 = bitcast i8** %0 to { i8, i8 }**
  store { i8, i8 }* %self, { i8, i8 }** %6, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %7 = load i8*, i8** %0, align 8
  ret i8* %7
}

; core::option::Option<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN4core6option15Option$LT$T$GT$6as_ref17hc58d4172db90bc01E"({ i8, i8 }* align 1 dereferenceable(2) %self) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = bitcast { i8, i8 }* %self to i8*
  %2 = load i8, i8* %1, align 1, !range !2
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %4 = bitcast i8** %0 to {}**
  store {}* null, {}** %4, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %5 = bitcast { i8, i8 }* %self to %"core::option::Option<u8>::Some"*
  %x = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %5, i32 0, i32 1
  store i8* %x, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i8*, i8** %0, align 8
  ret i8* %6
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core6option15Option$LT$T$GT$6unwrap17h886118702e2ea67cE"(i8* align 1 %0, i64 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #1 {
start:
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc783 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #12
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0
  %val.0 = load [0 x i8]*, [0 x i8]** %9, align 8, !nonnull !6
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1
  %val.1 = load i64, i64* %10, align 8
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %val.0, 0
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %val.1, 1
  ret { [0 x i8]*, i64 } %12
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hdfcc164e87e1f304E"(i32 %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 {
start:
  %self = alloca i32, align 4
  store i32 %0, i32* %self, align 4
  %2 = load i32, i32* %self, align 4, !range !4
  %3 = sub i32 %2, 1114112
  %4 = icmp eq i32 %3, 0
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc783 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #12
  unreachable

bb3:                                              ; preds = %start
  %val = load i32, i32* %self, align 4, !range !9
  ret i32 %val
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hef99ec68164f6688E"(i32 %0, i32 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #1 {
start:
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  %5 = bitcast { i32, i32 }* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !24
  %_2 = zext i32 %6 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc783 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #12
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast { i32, i32 }* %self to %"core::option::Option<u32>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %7, i32 0, i32 1
  %val = load i32, i32* %8, align 4
  ret i32 %val
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h04da669b53138af2E"(i8** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17hc6ca6f7adea47361E"(i8** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hc2d2e1f0a12fbdebE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h31c3afcb6b21d95aE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h2e597aea4b5d1f23E"(%"core::option::Option<DemangleStyle>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"core::option::Option<DemangleStyle>"* %self to i64*
  %2 = load i64, i64* %1, align 8, !range !25
  %3 = sub i64 %2, 2
  %4 = icmp eq i64 %3, 0
  %_2 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_2, 1
  br i1 %5, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %0, align 1, !range !2
  %7 = trunc i8 %6 to i1
  ret i1 %7
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h31c3afcb6b21d95aE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast i64** %self to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 1
  br i1 %4, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, i8* %0, align 1, !range !2
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h592be335c676ecdeE"({ i32, i32 }* align 4 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast { i32, i32 }* %self to i32*
  %2 = load i32, i32* %1, align 4, !range !24
  %_2 = zext i32 %2 to i64
  %3 = icmp eq i64 %_2, 1
  br i1 %3, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %0, align 1, !range !2
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17hc6ca6f7adea47361E"(i8** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast i8** %self to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 1
  br i1 %4, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, i8* %0, align 1, !range !2
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h2828b717261b597dE"(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i64, align 8
  %2 = alloca { i32, i32 }, align 4
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_8, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i32, i32 }* %2 to i32*
  store i32 0, i32* %6, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<u64>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %7, i32 0, i32 1
  %x = load i64, i64* %8, align 8
  store i8 0, i8* %_8, align 1
  store i64 %x, i64* %_6, align 8
  %9 = load i64, i64* %_6, align 8
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %10 = call { i32, i32 } @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h81e9b871d67f5a34E"(i64 %9)
  store { i32, i32 } %10, { i32, i32 }* %2, align 4
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %11 = load i8, i8* %_8, align 1, !range !2
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %2, i32 0, i32 0
  %14 = load i32, i32* %13, align 4, !range !24
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %2, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = insertvalue { i32, i32 } undef, i32 %14, 0
  %18 = insertvalue { i32, i32 } %17, i32 %16, 1
  ret { i32, i32 } %18

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h5a24b6cb548a266aE"(i64 %0, i64 %1, i32* align 4 dereferenceable(4) %f) unnamed_addr #1 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_8, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %6, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  %x = load i64, i64* %8, align 8
  store i8 0, i8* %_8, align 1
  store i64 %x, i64* %_6, align 8
  %9 = load i64, i64* %_6, align 8
; call rustc_demangle::legacy::demangle::{{closure}}
  %10 = call { i64, i64 } @"_ZN14rustc_demangle6legacy8demangle28_$u7b$$u7b$closure$u7d$$u7d$17h1c12283cafbcb3caE"(i32* align 4 dereferenceable(4) %f, i64 %9)
  store { i64, i64 } %10, { i64, i64 }* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %11 = load i8, i8* %_8, align 1, !range !2
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %14 = load i64, i64* %13, align 8, !range !5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1
  ret { i64, i64 } %18

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$8and_then17h6df9945e519e00b8E"(i32 %0, i32 %1) unnamed_addr #1 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_8, align 1
  %5 = bitcast { i32, i32 }* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !24
  %_3 = zext i32 %6 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i32, i32 }* %self to %"core::option::Option<u32>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %7, i32 0, i32 1
  %x = load i32, i32* %8, align 4
  store i8 0, i8* %_8, align 1
  store i32 %x, i32* %_6, align 4
  %9 = load i32, i32* %_6, align 4
; call core::ops::function::FnOnce::call_once
  %10 = call i32 @_ZN4core3ops8function6FnOnce9call_once17h9a192f2f8f21992bE(i32 %9), !range !4
  store i32 %10, i32* %2, align 4
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %11 = load i8, i8* %_8, align 1, !range !2
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %13 = load i32, i32* %2, align 4, !range !4
  ret i32 %13

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<&T>::cloned
; Function Attrs: nonlazybind uwtable
define { i8, i8 } @"_ZN4core6option19Option$LT$$RF$T$GT$6cloned17h087422f4dae00a71E"(i8* align 1 dereferenceable_or_null(1) %0) unnamed_addr #0 {
start:
  %1 = alloca { i8, i8 }, align 1
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast { i8, i8 }* %1 to i8*
  store i8 0, i8* %5, align 1
  br label %bb5

bb3:                                              ; preds = %start
  %t = load i8*, i8** %self, align 8, !nonnull !6
; call core::clone::impls::<impl core::clone::Clone for u8>::clone
  %_4 = call i8 @"_ZN4core5clone5impls51_$LT$impl$u20$core..clone..Clone$u20$for$u20$u8$GT$5clone17h920b60f41babf9acE"(i8* align 1 dereferenceable(1) %t)
  br label %bb4

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8, i8 }* %1 to %"core::option::Option<u8>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %6, i32 0, i32 1
  store i8 %_4, i8* %7, align 1
  %8 = bitcast { i8, i8 }* %1 to i8*
  store i8 1, i8* %8, align 1
  br label %bb5

bb5:                                              ; preds = %bb1, %bb4
  %9 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %1, i32 0, i32 0
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = trunc i8 %10 to i1
  %12 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %1, i32 0, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i1 %11 to i8
  %15 = insertvalue { i8, i8 } undef, i8 %14, 0
  %16 = insertvalue { i8, i8 } %15, i8 %13, 1
  ret { i8, i8 } %16
}

; core::option::Option<&T>::copied
; Function Attrs: nonlazybind uwtable
define { i8, i8 } @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17h309b676e566aa798E"(i8* align 1 dereferenceable_or_null(1) %0) unnamed_addr #0 {
start:
  %1 = alloca { i8, i8 }, align 1
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast { i8, i8 }* %1 to i8*
  store i8 0, i8* %5, align 1
  br label %bb4

bb3:                                              ; preds = %start
  %6 = load i8*, i8** %self, align 8, !nonnull !6
  %v = load i8, i8* %6, align 1
  %7 = bitcast { i8, i8 }* %1 to %"core::option::Option<u8>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %7, i32 0, i32 1
  store i8 %v, i8* %8, align 1
  %9 = bitcast { i8, i8 }* %1 to i8*
  store i8 1, i8* %9, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %10 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %1, i32 0, i32 0
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = trunc i8 %11 to i1
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %1, i32 0, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = zext i1 %12 to i8
  %16 = insertvalue { i8, i8 } undef, i8 %15, 0
  %17 = insertvalue { i8, i8 } %16, i8 %14, 1
  ret { i8, i8 } %17
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h5fc4d32210b8b448E"(i64 %0) unnamed_addr #1 {
start:
  %1 = alloca { i32, i32 }, align 4
  %2 = alloca i64, align 8
  %self = alloca %"core::result::Result<u32, core::num::error::ParseIntError>", align 4
  store i64 %0, i64* %2, align 8
  %3 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %self to i8*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %self to i8*
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = trunc i8 %6 to i1
  %_2 = zext i1 %7 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %self to %"core::result::Result<u32, core::num::error::ParseIntError>::Ok"*
  %9 = getelementptr inbounds %"core::result::Result<u32, core::num::error::ParseIntError>::Ok", %"core::result::Result<u32, core::num::error::ParseIntError>::Ok"* %8, i32 0, i32 1
  %x = load i32, i32* %9, align 4
  %10 = bitcast { i32, i32 }* %1 to %"core::option::Option<u32>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %10, i32 0, i32 1
  store i32 %x, i32* %11, align 4
  %12 = bitcast { i32, i32 }* %1 to i32*
  store i32 1, i32* %12, align 4
  br label %bb6

bb1:                                              ; preds = %start
  %13 = bitcast { i32, i32 }* %1 to i32*
  store i32 0, i32* %13, align 4
  br label %bb6

bb6:                                              ; preds = %bb3, %bb1
  %14 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %self to i8*
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = trunc i8 %15 to i1
  %_5 = zext i1 %16 to i64
  %17 = icmp eq i64 %_5, 0
  br i1 %17, label %bb4, label %bb5

bb4:                                              ; preds = %bb5, %bb6
  %18 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 0
  %19 = load i32, i32* %18, align 4, !range !24
  %20 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = insertvalue { i32, i32 } undef, i32 %19, 0
  %23 = insertvalue { i32, i32 } %22, i32 %21, 1
  ret { i32, i32 } %23

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h721c1538b477e36fE"(i32 %0, i32 %1) unnamed_addr #1 {
start:
  %2 = alloca { i32, i32 }, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  %5 = bitcast { i32, i32 }* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !24
  %_2 = zext i32 %6 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast { i32, i32 }* %self to %"core::result::Result<u32, core::num::error::TryFromIntError>::Ok"*
  %8 = getelementptr inbounds %"core::result::Result<u32, core::num::error::TryFromIntError>::Ok", %"core::result::Result<u32, core::num::error::TryFromIntError>::Ok"* %7, i32 0, i32 1
  %x = load i32, i32* %8, align 4
  %9 = bitcast { i32, i32 }* %2 to %"core::option::Option<u32>::Some"*
  %10 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %9, i32 0, i32 1
  store i32 %x, i32* %10, align 4
  %11 = bitcast { i32, i32 }* %2 to i32*
  store i32 1, i32* %11, align 4
  br label %bb6

bb1:                                              ; preds = %start
  %12 = bitcast { i32, i32 }* %2 to i32*
  store i32 0, i32* %12, align 4
  br label %bb6

bb6:                                              ; preds = %bb3, %bb1
  %13 = bitcast { i32, i32 }* %self to i32*
  %14 = load i32, i32* %13, align 4, !range !24
  %_5 = zext i32 %14 to i64
  %15 = icmp eq i64 %_5, 0
  br i1 %15, label %bb4, label %bb5

bb4:                                              ; preds = %bb5, %bb6
  %16 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %2, i32 0, i32 0
  %17 = load i32, i32* %16, align 4, !range !24
  %18 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %2, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = insertvalue { i32, i32 } undef, i32 %17, 0
  %21 = insertvalue { i32, i32 } %20, i32 %19, 1
  ret { i32, i32 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hb02edfe59f044281E"(i64 %0, i8* %1) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_7 = alloca i64*, align 8
  %2 = alloca i8*, align 8
  %self = alloca { i64, i8* }, align 8
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %4, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = bitcast { i64, i8* }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i8* }* %self to %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Ok", %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Ok"* %6, i32 0, i32 1
  %t = load %"v0::Parser"*, %"v0::Parser"** %7, align 8, !nonnull !6
  store i8 0, i8* %_11, align 1
  %8 = bitcast i64** %_7 to %"v0::Parser"**
  store %"v0::Parser"* %t, %"v0::Parser"** %8, align 8
  %9 = load i64*, i64** %_7, align 8, !nonnull !6
  %10 = bitcast i64* %9 to %"v0::Parser"*
; call rustc_demangle::v0::Printer::print_type::{{closure}}
  call void @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h962a4b96916f6f07E"(%"v0::Parser"* align 8 dereferenceable(32) %10)
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast { i64, i8* }* %self to %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Err", %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Err"* %11, i32 0, i32 1
  %e = load i8*, i8** %12, align 8, !nonnull !6
  store i8* %e, i8** %2, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %13 = load i8, i8* %_11, align 1, !range !2
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  %15 = bitcast i8** %2 to %"core::result::Result<(), &mut v0::ParseError>::Ok"*
  %16 = bitcast %"core::result::Result<(), &mut v0::ParseError>::Ok"* %15 to {}*
  %17 = bitcast i8** %2 to {}**
  store {}* null, {}** %17, align 8
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %18 = load i8*, i8** %2, align 8
  ret i8* %18

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$3map17he02023fbd245ca93E"(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_7 = alloca i64, align 8
  %2 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"core::result::Result<usize, SizeLimitExhausted>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<usize, SizeLimitExhausted>::Ok", %"core::result::Result<usize, SizeLimitExhausted>::Ok"* %6, i32 0, i32 1
  %t = load i64, i64* %7, align 8
  store i8 0, i8* %_11, align 1
  store i64 %t, i64* %_7, align 8
  %8 = load i64, i64* %_7, align 8
; call <rustc_demangle::Demangle as core::fmt::Display>::fmt::{{closure}}
  call void @"_ZN63_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h72f39bcf8f0017acE"(i64 %8)
  br label %bb4

bb1:                                              ; preds = %start
  %9 = bitcast i8* %2 to %"core::result::Result<(), SizeLimitExhausted>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<(), SizeLimitExhausted>::Err", %"core::result::Result<(), SizeLimitExhausted>::Err"* %9, i32 0, i32 1
  store i8 1, i8* %2, align 1
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %11 = load i8, i8* %_11, align 1, !range !2
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  %13 = bitcast i8* %2 to %"core::result::Result<(), SizeLimitExhausted>::Ok"*
  %14 = getelementptr inbounds %"core::result::Result<(), SizeLimitExhausted>::Ok", %"core::result::Result<(), SizeLimitExhausted>::Ok"* %13, i32 0, i32 1
  store i8 0, i8* %2, align 1
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %15 = load i8, i8* %2, align 1, !range !2
  %16 = trunc i8 %15 to i1
  ret i1 %16

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i128 @"_ZN4core6result19Result$LT$T$C$E$GT$3map17he4d44372df29b002E"(i64 %0, i8* %1, i8* align 1 dereferenceable(1) %op) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_7 = alloca i64*, align 8
  %2 = alloca %"core::result::Result<bool, &mut v0::ParseError>", align 8
  %self = alloca { i64, i8* }, align 8
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %4, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = bitcast { i64, i8* }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i8* }* %self to %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Ok", %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Ok"* %6, i32 0, i32 1
  %t = load %"v0::Parser"*, %"v0::Parser"** %7, align 8, !nonnull !6
  store i8 0, i8* %_11, align 1
  %8 = bitcast i64** %_7 to %"v0::Parser"**
  store %"v0::Parser"* %t, %"v0::Parser"** %8, align 8
  %9 = load i64*, i64** %_7, align 8, !nonnull !6
  %10 = bitcast i64* %9 to %"v0::Parser"*
; call rustc_demangle::v0::Printer::eat::{{closure}}
  %_5 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer3eat28_$u7b$$u7b$closure$u7d$$u7d$17hf204a5b1984f9334E"(i8* align 1 dereferenceable(1) %op, %"v0::Parser"* align 8 dereferenceable(32) %10)
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast { i64, i8* }* %self to %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Err", %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Err"* %11, i32 0, i32 1
  %e = load i8*, i8** %12, align 8, !nonnull !6
  %13 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %2 to %"core::result::Result<bool, &mut v0::ParseError>::Err"*
  %14 = getelementptr inbounds %"core::result::Result<bool, &mut v0::ParseError>::Err", %"core::result::Result<bool, &mut v0::ParseError>::Err"* %13, i32 0, i32 1
  store i8* %e, i8** %14, align 8
  %15 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %2 to i8*
  store i8 1, i8* %15, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %16 = load i8, i8* %_11, align 1, !range !2
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  %18 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %2 to %"core::result::Result<bool, &mut v0::ParseError>::Ok"*
  %19 = getelementptr inbounds %"core::result::Result<bool, &mut v0::ParseError>::Ok", %"core::result::Result<bool, &mut v0::ParseError>::Ok"* %18, i32 0, i32 1
  %20 = zext i1 %_5 to i8
  store i8 %20, i8* %19, align 1
  %21 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %2 to i8*
  store i8 0, i8* %21, align 8
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %22 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %2 to i128*
  %23 = load i128, i128* %22, align 8
  ret i128 %23

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1ef963d75672bbf7E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %self to i8*
  %2 = load i8, i8* %1, align 8, !range !2
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, i8* %0, align 1, !range !2
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h712649783a9704c2E"(i8* align 1 dereferenceable(1) %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = load i8, i8* %self, align 1, !range !2
  %2 = trunc i8 %1 to i1
  %_2 = zext i1 %2 to i64
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %0, align 1, !range !2
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h792555df68f6631eE"(i32* align 4 dereferenceable(4) %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = load i32, i32* %self, align 4, !range !4
  %2 = sub i32 %1, 1114112
  %3 = icmp eq i32 %2, 0
  %_2 = select i1 %3, i64 1, i64 0
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, i8* %0, align 1, !range !2
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; core::result::Result<T,E>::as_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i8* } @"_ZN4core6result19Result$LT$T$C$E$GT$6as_mut17he7119a72d6d3e2b7E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = alloca { i64, i8* }, align 8
  %1 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %self to i8*
  %2 = load i8, i8* %1, align 8, !range !2
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %self to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %x1 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %4, i32 0, i32 1
  %5 = bitcast { i64, i8* }* %0 to %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Ok"*
  %6 = getelementptr inbounds %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Ok", %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Ok"* %5, i32 0, i32 1
  store %"v0::Parser"* %x1, %"v0::Parser"** %6, align 8
  %7 = bitcast { i64, i8* }* %0 to i64*
  store i64 0, i64* %7, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %self to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %x = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %8, i32 0, i32 1
  %9 = bitcast { i64, i8* }* %0 to %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Err", %"core::result::Result<&mut v0::Parser, &mut v0::ParseError>::Err"* %9, i32 0, i32 1
  store i8* %x, i8** %10, align 8
  %11 = bitcast { i64, i8* }* %0 to i64*
  store i64 1, i64* %11, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %12 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8, !range !5
  %14 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = insertvalue { i64, i8* } undef, i64 %13, 0
  %17 = insertvalue { i64, i8* } %16, i8* %15, 1
  ret { i64, i8* } %17
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h658fffd2f1d052b0E"(i1 zeroext %0, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::fmt::Error", align 1
  %self = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %self, align 1
  %4 = load i8, i8* %self, align 1, !range !2
  %5 = trunc i8 %4 to i1
  %_3 = zext i1 %5 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  ret void

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"core::fmt::Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hfd53e74d8a8638ccE"(i1 zeroext %0, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %SizeLimitExhausted, align 1
  %self = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %self, align 1
  %4 = load i8, i8* %self, align 1, !range !2
  %5 = trunc i8 %4 to i1
  %_3 = zext i1 %5 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  ret void

bb1:                                              ; preds = %start
  %_6.0 = bitcast %SizeLimitExhausted* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; core::result::Result<T,E>::is_err
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h7c907606ad3d9f39E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
; call core::result::Result<T,E>::is_ok
  %_2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1ef963d75672bbf7E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::result::Result<T,E>::is_err
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h9f2bdadea46698d1E"(i32* align 4 dereferenceable(4) %self) unnamed_addr #1 {
start:
; call core::result::Result<T,E>::is_ok
  %_2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h792555df68f6631eE"(i32* align 4 dereferenceable(4) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h504706230b58785bE"(i32 %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca {}, align 1
  %self = alloca i32, align 4
  store i32 %0, i32* %self, align 4
  %3 = load i32, i32* %self, align 4, !range !4
  %4 = sub i32 %3, 1114112
  %5 = icmp eq i32 %4, 0
  %_2 = select i1 %5, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %t = load i32, i32* %self, align 4, !range !9
  ret i32 %t

bb1:                                              ; preds = %start
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc794 to [0 x i8]*), i64 43, {}* nonnull align 1 %e, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.5 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbbb855763625dd57E"(i128 %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca i8, align 1
  %3 = alloca i128, align 8
  %self = alloca %"core::result::Result<usize, core::num::error::ParseIntError>", align 8
  store i128 %0, i128* %3, align 8
  %4 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %self to i8*
  %5 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %self to i8*
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = trunc i8 %7 to i1
  %_2 = zext i1 %8 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %self to %"core::result::Result<usize, core::num::error::ParseIntError>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<usize, core::num::error::ParseIntError>::Ok", %"core::result::Result<usize, core::num::error::ParseIntError>::Ok"* %9, i32 0, i32 1
  %t = load i64, i64* %10, align 8
  ret i64 %t

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %self to %"core::result::Result<usize, core::num::error::ParseIntError>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<usize, core::num::error::ParseIntError>::Err", %"core::result::Result<usize, core::num::error::ParseIntError>::Err"* %11, i32 0, i32 1
  %13 = load i8, i8* %12, align 1, !range !26
  store i8 %13, i8* %e, align 1
  %_6.0 = bitcast i8* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc794 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.6 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %2 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h09094040bce7e547E"(i128 %0) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %1 = alloca { i64, i64 }, align 8
  %2 = alloca i128, align 8
  %self = alloca %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>", align 8
  store i128 %0, i128* %2, align 8
  %3 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %self to i8*
  %4 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %self to i8*
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = trunc i8 %6 to i1
  %_3 = zext i1 %7 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %self to %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok"*
  %9 = getelementptr inbounds %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok", %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok"* %8, i32 0, i32 1
  %t = load i64, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %1 to %"core::result::Result<usize, ()>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<usize, ()>::Ok", %"core::result::Result<usize, ()>::Ok"* %10, i32 0, i32 1
  store i64 %t, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %12, align 8
  br label %bb7

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %self to %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Err"*
  %14 = getelementptr inbounds %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Err", %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Err"* %13, i32 0, i32 1
  %15 = load i8, i8* %14, align 1, !range !2
  %e = trunc i8 %15 to i1
  store i8 0, i8* %_11, align 1
  %16 = zext i1 %e to i8
  store i8 %16, i8* %_9, align 1
  %17 = load i8, i8* %_9, align 1, !range !2
  %18 = trunc i8 %17 to i1
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}::{{closure}}
  call void @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h20af0f8063e7b7f5E"(i1 zeroext %18)
  br label %bb4

bb4:                                              ; preds = %bb1
  %19 = bitcast { i64, i64 }* %1 to %"core::result::Result<usize, ()>::Err"*
  %20 = getelementptr inbounds %"core::result::Result<usize, ()>::Err", %"core::result::Result<usize, ()>::Err"* %19, i32 0, i32 1
  %21 = bitcast { i64, i64 }* %1 to i64*
  store i64 1, i64* %21, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %22 = load i8, i8* %_11, align 1, !range !2
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %25 = load i64, i64* %24, align 8, !range !5
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = insertvalue { i64, i64 } undef, i64 %25, 0
  %29 = insertvalue { i64, i64 } %28, i64 %27, 1
  ret { i64, i64 } %29

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h51d01d929eb4b0b2E"(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_10 = alloca %"core::str::error::Utf8Error", align 8
  %_9 = alloca { %"core::str::error::Utf8Error" }, align 8
  %e = alloca %"core::str::error::Utf8Error", align 8
  %0 = alloca { i8*, i64 }, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %1 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Ok", %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  %t.0 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !6
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  %t.1 = load i64, i64* %5, align 8
  %6 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 0
  store [0 x i8]* %t.0, [0 x i8]** %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 1
  store i64 %t.1, i64* %8, align 8
  br label %bb7

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Err", %"core::result::Result<&str, core::str::error::Utf8Error>::Err"* %9, i32 0, i32 1
  %11 = bitcast %"core::str::error::Utf8Error"* %e to i8*
  %12 = bitcast %"core::str::error::Utf8Error"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  store i8 0, i8* %_11, align 1
  %13 = bitcast %"core::str::error::Utf8Error"* %_10 to i8*
  %14 = bitcast %"core::str::error::Utf8Error"* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false)
  %15 = bitcast { %"core::str::error::Utf8Error" }* %_9 to %"core::str::error::Utf8Error"*
  %16 = bitcast %"core::str::error::Utf8Error"* %15 to i8*
  %17 = bitcast %"core::str::error::Utf8Error"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false)
  %18 = bitcast { %"core::str::error::Utf8Error" }* %_9 to %"core::str::error::Utf8Error"*
  %19 = bitcast %"core::str::error::Utf8Error"* %18 to i128*
  %20 = load i128, i128* %19, align 8
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}::{{closure}}
  call void @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1e3f3324137a62ffE"(i128 %20)
  br label %bb4

bb4:                                              ; preds = %bb1
  %21 = bitcast { i8*, i64 }* %0 to %"core::result::Result<&str, ()>::Err"*
  %22 = bitcast %"core::result::Result<&str, ()>::Err"* %21 to {}*
  %23 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %23, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !range !2
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = insertvalue { i8*, i64 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i64 } %30, i64 %29, 1
  ret { i8*, i64 } %31

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h17a1542a24a2cca7E"(i64 %0, i64 %1, i64* align 8 dereferenceable(16) %op) unnamed_addr #1 {
start:
  %_10 = alloca i8, align 1
  %_6 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"core::result::Result<usize, SizeLimitExhausted>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<usize, SizeLimitExhausted>::Ok", %"core::result::Result<usize, SizeLimitExhausted>::Ok"* %6, i32 0, i32 1
  %t = load i64, i64* %7, align 8
  store i8 0, i8* %_10, align 1
  store i64 %t, i64* %_6, align 8
  %8 = load i64, i64* %_6, align 8
; call <rustc_demangle::SizeLimitedFmtAdapter<F> as core::fmt::Write>::write_str::{{closure}}
  %9 = call { i64, i64 } @"_ZN83_$LT$rustc_demangle..SizeLimitedFmtAdapter$LT$F$GT$$u20$as$u20$core..fmt..Write$GT$9write_str28_$u7b$$u7b$closure$u7d$$u7d$17h928578f4be15758dE"(i64* align 8 dereferenceable(16) %op, i64 %8)
  store { i64, i64 } %9, { i64, i64 }* %2, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %10 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, SizeLimitExhausted>::Err"*
  %11 = getelementptr inbounds %"core::result::Result<usize, SizeLimitExhausted>::Err", %"core::result::Result<usize, SizeLimitExhausted>::Err"* %10, i32 0, i32 1
  %12 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %12, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %13 = load i8, i8* %_10, align 1, !range !2
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !5
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::convert::num::<impl core::convert::TryFrom<u64> for u32>::try_from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN4core7convert3num67_$LT$impl$u20$core..convert..TryFrom$LT$u64$GT$$u20$for$u20$u32$GT$8try_from17h960134b0d9271c79E"(i64 %u) unnamed_addr #1 {
start:
  %0 = alloca { i32, i32 }, align 4
  %_2 = icmp ugt i64 %u, 4294967295
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_5 = trunc i64 %u to i32
  %1 = bitcast { i32, i32 }* %0 to %"core::result::Result<u32, core::num::error::TryFromIntError>::Ok"*
  %2 = getelementptr inbounds %"core::result::Result<u32, core::num::error::TryFromIntError>::Ok", %"core::result::Result<u32, core::num::error::TryFromIntError>::Ok"* %1, i32 0, i32 1
  store i32 %_5, i32* %2, align 4
  %3 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %3, align 4
  br label %bb3

bb1:                                              ; preds = %start
  %4 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %4, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4, !range !24
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = insertvalue { i32, i32 } undef, i32 %6, 0
  %10 = insertvalue { i32, i32 } %9, i32 %8, 1
  ret { i32, i32 } %10
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define void @_ZN4core9panicking13assert_failed17hb9880d2d64797ef4E(i8 %kind, i64* align 8 dereferenceable(8) %0, i64* align 8 dereferenceable(8) %1, %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %args, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #3 {
start:
  %_12 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca i64*, align 8
  %left = alloca i64*, align 8
  store i64* %0, i64** %left, align 8
  store i64* %1, i64** %right, align 8
  %_6.0 = bitcast i64** %left to {}*
  %_9.0 = bitcast i64** %right to {}*
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_12 to i8*
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false)
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h90ea89642d218837E(i8 %kind, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.7 to [3 x i64]*), {}* nonnull align 1 %_9.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.7 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %_12, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #12
  unreachable
}

; <&mut T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha7adcfaa16c5e981E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !6
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_4.1 = load i64, i64* %1, align 8
; call <[T] as core::fmt::Debug>::fmt
  %2 = call zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h6efc564029b02286E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&mut W as core::fmt::Write>::write_char
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h3d8ef58609487c38E"(%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"** align 8 dereferenceable(8) %self, i32 %c) unnamed_addr #0 {
start:
  %_3 = load %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"*, %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"** %self, align 8, !nonnull !6
; call core::fmt::Write::write_char
  %0 = call zeroext i1 @_ZN4core3fmt5Write10write_char17he76d79e34b403226E(%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* align 8 dereferenceable(24) %_3, i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&mut W as core::fmt::Write>::write_char
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hada9ebba9e27cdacE"(%"core::fmt::Formatter"** align 8 dereferenceable(8) %self, i32 %c) unnamed_addr #0 {
start:
  %_3 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %self, align 8, !nonnull !6
; call <core::fmt::Formatter as core::fmt::Write>::write_char
  %0 = call zeroext i1 @"_ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h6e3d947244c54914E"(%"core::fmt::Formatter"* align 8 dereferenceable(64) %_3, i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&mut W as core::fmt::Write>::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h3861919a25c5869dE"(%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"** align 8 dereferenceable(8) %self, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %args) unnamed_addr #0 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
  %_3 = load %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"*, %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"** %self, align 8, !nonnull !6
  %0 = bitcast %"core::fmt::Arguments"* %_4 to i8*
  %1 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 48, i1 false)
; call core::fmt::Write::write_fmt
  %2 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h0274ba367c0b6dbbE(%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* align 8 dereferenceable(24) %_3, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&mut W as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h5d4ddd8e690608cfE"(%"core::fmt::Formatter"** align 8 dereferenceable(8) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %_3 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %self, align 8, !nonnull !6
; call <core::fmt::Formatter as core::fmt::Write>::write_str
  %0 = call zeroext i1 @"_ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17ha58741d95765acd0E"(%"core::fmt::Formatter"* align 8 dereferenceable(64) %_3, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&mut W as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hfe67b1bf963d4d1dE"(%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"** align 8 dereferenceable(8) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %_3 = load %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"*, %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"** %self, align 8, !nonnull !6
; call <rustc_demangle::SizeLimitedFmtAdapter<F> as core::fmt::Write>::write_str
  %0 = call zeroext i1 @"_ZN83_$LT$rustc_demangle..SizeLimitedFmtAdapter$LT$F$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hc4d620ace92029e6E"(%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* align 8 dereferenceable(24) %_3, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h243d4da6d0107040E"(i1 zeroext %t) unnamed_addr #0 {
start:
  ret i1 %t
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7624c5c2144d251bE"() unnamed_addr #0 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he5f969acef2634a8E"() unnamed_addr #0 {
start:
  ret void
}

; <char as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hdc9feec9eac7b548E"(i32 %self, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 {
start:
  %_9 = alloca [4 x i8], align 1
  %0 = getelementptr inbounds [4 x i8], [4 x i8]* %_9, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 4, i1 false)
  %_6.0 = bitcast [4 x i8]* %_9 to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %1 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h654239ca93107b29E"(i32 %self, [0 x i8]* nonnull align 1 %_6.0, i64 4)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <&str as core::str::pattern::Pattern>::is_prefix_of
  %2 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hed3ead4e7bad1bc9E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %2
}

; <char as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h28496ea10dea2771E"(%"core::str::pattern::CharSearcher"* noalias nocapture sret(%"core::str::pattern::CharSearcher") dereferenceable(48) %0, i32 %self, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 {
start:
  %_16 = alloca [4 x i8], align 1
  %utf8_encoded = alloca [4 x i8], align 1
  %1 = getelementptr inbounds [4 x i8], [4 x i8]* %utf8_encoded, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 4, i1 false)
  %_8.0 = bitcast [4 x i8]* %utf8_encoded to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %2 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h654239ca93107b29E"(i32 %self, [0 x i8]* nonnull align 1 %_8.0, i64 4)
  %_6.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::<impl str>::len
  %utf8_size = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::str::<impl str>::len
  %_12 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast [4 x i8]* %_16 to i8*
  %4 = bitcast [4 x i8]* %utf8_encoded to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 4, i1 false)
  %5 = bitcast %"core::str::pattern::CharSearcher"* %0 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  store i64 %haystack.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 1
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 2
  store i64 %_12, i64* %9, align 8
  %10 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 4
  store i32 %self, i32* %10, align 8
  %11 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 3
  store i64 %utf8_size, i64* %11, align 8
  %12 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 5
  %13 = bitcast [4 x i8]* %12 to i8*
  %14 = bitcast [4 x i8]* %_16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 1 %14, i64 4, i1 false)
  ret void
}

; <F as core::str::pattern::MultiCharEq>::matches
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17h7aab98e272183766E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]"* nonnull align 1 %self, i32 %c) unnamed_addr #1 {
start:
  %_4 = alloca i32, align 4
  store i32 %c, i32* %_4, align 4
  %0 = load i32, i32* %_4, align 4, !range !9
; call <rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt::{{closure}}
  %1 = call zeroext i1 @"_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17hbc1c2e2fcb4ec1fbE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]"* nonnull align 1 %self, i32 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; <&str as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hed3ead4e7bad1bc9E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %haystack.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !6
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %10, align 8
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %self.1, i64* %11, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %13 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !6
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %17 = insertvalue { [0 x i8]*, i64 } %16, i64 %15, 1
  %_7.0 = extractvalue { [0 x i8]*, i64 } %17, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %17, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::slice::<impl [T]>::starts_with
  %18 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17hbdf03d74f19db8daE"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, [0 x i8]* nonnull align 1 %_7.0, i64 %_7.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %18
}

; <&str as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h43552f5c9821a049E"(%"core::str::pattern::StrSearcher"* noalias nocapture sret(%"core::str::pattern::StrSearcher") dereferenceable(104) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 {
start:
; call core::str::pattern::StrSearcher::new
  call void @_ZN4core3str7pattern11StrSearcher3new17h95d68a0534dab867E(%"core::str::pattern::StrSearcher"* noalias nocapture sret(%"core::str::pattern::StrSearcher") dereferenceable(104) %0, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <usize as core::iter::traits::accum::Sum>::sum
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h4243ce30a270fbbaE"(i8* nonnull %iter.0, i8* %iter.1) unnamed_addr #0 {
start:
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  %0 = call i64 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hd668a325c7386fd3E"(i8* nonnull %iter.0, i8* %iter.1, i64 0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; <usize as core::iter::traits::accum::Sum>::sum::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17h839f5bfcbafef997E"(%"[closure@<usize as core::iter::traits::accum::Sum>::sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, [closure@<core::iter::adapters::filter::Filter<I, P> as core::iter::traits::iterator::Iterator>::count::to_usize<&u8, [closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]>::{closure#0}]>>::{closure#0}]"* nonnull align 1 %_1, i64 %a, i64 %b) unnamed_addr #1 {
start:
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %a, i64 %b)
  %_6.0 = extractvalue { i64, i1 } %0, 0
  %_6.1 = extractvalue { i64, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  ret i64 %_6.0

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc802 to %"core::panic::location::Location"*)) #12
  unreachable
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1935eb71789522baE"(i8* nonnull %self.0, i8* %self.1) unnamed_addr #1 {
start:
  %0 = insertvalue { i8*, i8* } undef, i8* %self.0, 0
  %1 = insertvalue { i8*, i8* } %0, i8* %self.1, 1
  ret { i8*, i8* } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h27e4b7cf9f80a07bE"(%"core::str::iter::Split<char>"* noalias nocapture sret(%"core::str::iter::Split<char>") dereferenceable(72) %0, %"core::str::iter::Split<char>"* noalias nocapture dereferenceable(72) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"core::str::iter::Split<char>"* %0 to i8*
  %2 = bitcast %"core::str::iter::Split<char>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 72, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h866b4857384379b2E"(i64 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h877a19d6e7163ebeE"(i32 %self) unnamed_addr #1 {
start:
  ret i32 %self
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h88717dd03e83ae96E"(i64 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h91537a05e6c7d97bE"(i8* nonnull %self.0, i8* %self.1) unnamed_addr #1 {
start:
  %0 = insertvalue { i8*, i8* } undef, i8* %self.0, 0
  %1 = insertvalue { i8*, i8* } %0, i8* %self.1, 1
  ret { i8*, i8* } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac31320b1f9068fcE"(i64 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc436a0fda109a25bE"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %0, %"core::char::EscapeDebug"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"core::char::EscapeDebug"* %0 to i8*
  %2 = bitcast %"core::char::EscapeDebug"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc5d8680ece9eccd7E"(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>") dereferenceable(40) %0, %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  ret void
}

; <core::option::Option<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h0fa86d74c8840347E"({ i8, i8 }* align 1 dereferenceable(2) %self, { i8, i8 }* align 1 dereferenceable(2) %other) unnamed_addr #1 {
start:
  %_13 = alloca { i8*, i8* }, align 8
  %0 = alloca i8, align 1
  %1 = bitcast { i8, i8 }* %self to i8*
  %2 = load i8, i8* %1, align 1, !range !2
  %3 = trunc i8 %2 to i1
  %__self_vi = zext i1 %3 to i64
  %4 = bitcast { i8, i8 }* %other to i8*
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = trunc i8 %5 to i1
  %__arg_1_vi = zext i1 %6 to i64
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb7

bb7:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb8

bb1:                                              ; preds = %start
  %7 = bitcast { i8*, i8* }* %_13 to { i8, i8 }**
  store { i8, i8 }* %self, { i8, i8 }** %7, align 8
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1
  %9 = bitcast i8** %8 to { i8, i8 }**
  store { i8, i8 }* %other, { i8, i8 }** %9, align 8
  %10 = bitcast { i8*, i8* }* %_13 to { i8, i8 }**
  %11 = load { i8, i8 }*, { i8, i8 }** %10, align 8, !nonnull !6
  %12 = bitcast { i8, i8 }* %11 to i8*
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = trunc i8 %13 to i1
  %_17 = zext i1 %14 to i64
  %15 = icmp eq i64 %_17, 1
  br i1 %15, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1
  %17 = bitcast i8** %16 to { i8, i8 }**
  %18 = load { i8, i8 }*, { i8, i8 }** %17, align 8, !nonnull !6
  %19 = bitcast { i8, i8 }* %18 to i8*
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = trunc i8 %20 to i1
  %_16 = zext i1 %21 to i64
  %22 = icmp eq i64 %_16, 1
  br i1 %22, label %bb4, label %bb2

bb2:                                              ; preds = %bb3, %bb1
  store i8 1, i8* %0, align 1
  br label %bb6

bb4:                                              ; preds = %bb3
  %23 = bitcast { i8*, i8* }* %_13 to { i8, i8 }**
  %24 = load { i8, i8 }*, { i8, i8 }** %23, align 8, !nonnull !6
  %25 = bitcast { i8, i8 }* %24 to %"core::option::Option<u8>::Some"*
  %__self_0 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %25, i32 0, i32 1
  %26 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1
  %27 = bitcast i8** %26 to { i8, i8 }**
  %28 = load { i8, i8 }*, { i8, i8 }** %27, align 8, !nonnull !6
  %29 = bitcast { i8, i8 }* %28 to %"core::option::Option<u8>::Some"*
  %__arg_1_0 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %29, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
  %30 = call zeroext i1 @"_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h62048f61fb1c9ea3E"(i8* align 1 dereferenceable(1) %__self_0, i8* align 1 dereferenceable(1) %__arg_1_0)
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %0, align 1
  br label %bb5

bb6:                                              ; preds = %bb5, %bb2
  br label %bb8

bb5:                                              ; preds = %bb4
  br label %bb6

bb8:                                              ; preds = %bb7, %bb6
  %32 = load i8, i8* %0, align 1, !range !2
  %33 = trunc i8 %32 to i1
  ret i1 %33
}

; <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h2db15cfd358509a5E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_3 = icmp ne i64 %self.1, %other.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call core::mem::size_of_val
  %size = call i64 @_ZN4core3mem11size_of_val17hc6a2676329e6796eE([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb1
  %1 = load i8, i8* %0, align 1, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::as_ptr
  %_12 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h765735c818f7f7d0E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::slice::<impl [T]>::as_ptr
  %_15 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h765735c818f7f7d0E"([0 x i8]* nonnull align 1 %other.0, i64 %other.1)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_10 = call i32 @memcmp(i8* %_12, i8* %_15, i64 %size)
  br label %bb6

bb6:                                              ; preds = %bb5
  %3 = icmp eq i32 %_10, 0
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %0, align 1
  br label %bb7
}

; <core::result::Result<T,E> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN74_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17ha98e84b50b76e60cE"(%"core::result::Result<bool, &mut v0::ParseError>"* align 8 dereferenceable(16) %self, %"core::result::Result<bool, &mut v0::ParseError>"* align 8 dereferenceable(16) %other) unnamed_addr #1 {
start:
  %_13 = alloca { i64*, i64* }, align 8
  %0 = alloca i8, align 1
  %1 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %self to i8*
  %2 = load i8, i8* %1, align 8, !range !2
  %3 = trunc i8 %2 to i1
  %__self_vi = zext i1 %3 to i64
  %4 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %other to i8*
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = trunc i8 %5 to i1
  %__arg_1_vi = zext i1 %6 to i64
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb10

bb10:                                             ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb11

bb1:                                              ; preds = %start
  %7 = bitcast { i64*, i64* }* %_13 to %"core::result::Result<bool, &mut v0::ParseError>"**
  store %"core::result::Result<bool, &mut v0::ParseError>"* %self, %"core::result::Result<bool, &mut v0::ParseError>"** %7, align 8
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %9 = bitcast i64** %8 to %"core::result::Result<bool, &mut v0::ParseError>"**
  store %"core::result::Result<bool, &mut v0::ParseError>"* %other, %"core::result::Result<bool, &mut v0::ParseError>"** %9, align 8
  %10 = bitcast { i64*, i64* }* %_13 to %"core::result::Result<bool, &mut v0::ParseError>"**
  %11 = load %"core::result::Result<bool, &mut v0::ParseError>"*, %"core::result::Result<bool, &mut v0::ParseError>"** %10, align 8, !nonnull !6
  %12 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %11 to i8*
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = trunc i8 %13 to i1
  %_18 = zext i1 %14 to i64
  switch i64 %_18, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb2, %bb4, %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %16 = bitcast i64** %15 to %"core::result::Result<bool, &mut v0::ParseError>"**
  %17 = load %"core::result::Result<bool, &mut v0::ParseError>"*, %"core::result::Result<bool, &mut v0::ParseError>"** %16, align 8, !nonnull !6
  %18 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %17 to i8*
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = trunc i8 %19 to i1
  %_16 = zext i1 %20 to i64
  %21 = icmp eq i64 %_16, 0
  br i1 %21, label %bb5, label %bb3

bb4:                                              ; preds = %bb1
  %22 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %23 = bitcast i64** %22 to %"core::result::Result<bool, &mut v0::ParseError>"**
  %24 = load %"core::result::Result<bool, &mut v0::ParseError>"*, %"core::result::Result<bool, &mut v0::ParseError>"** %23, align 8, !nonnull !6
  %25 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %24 to i8*
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = trunc i8 %26 to i1
  %_17 = zext i1 %27 to i64
  %28 = icmp eq i64 %_17, 1
  br i1 %28, label %bb7, label %bb3

bb7:                                              ; preds = %bb4
  %29 = bitcast { i64*, i64* }* %_13 to %"core::result::Result<bool, &mut v0::ParseError>"**
  %30 = load %"core::result::Result<bool, &mut v0::ParseError>"*, %"core::result::Result<bool, &mut v0::ParseError>"** %29, align 8, !nonnull !6
  %31 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %30 to %"core::result::Result<bool, &mut v0::ParseError>::Err"*
  %__self_0 = getelementptr inbounds %"core::result::Result<bool, &mut v0::ParseError>::Err", %"core::result::Result<bool, &mut v0::ParseError>::Err"* %31, i32 0, i32 1
  %32 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %33 = bitcast i64** %32 to %"core::result::Result<bool, &mut v0::ParseError>"**
  %34 = load %"core::result::Result<bool, &mut v0::ParseError>"*, %"core::result::Result<bool, &mut v0::ParseError>"** %33, align 8, !nonnull !6
  %35 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %34 to %"core::result::Result<bool, &mut v0::ParseError>::Err"*
  %__arg_1_0 = getelementptr inbounds %"core::result::Result<bool, &mut v0::ParseError>::Err", %"core::result::Result<bool, &mut v0::ParseError>::Err"* %35, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialEq<&mut B> for &mut A>::eq
  %36 = call zeroext i1 @"_ZN4core3cmp5impls85_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$mut$u20$B$GT$$u20$for$u20$$RF$mut$u20$A$GT$2eq17h380b821674366b1dE"(i8** align 8 dereferenceable(8) %__self_0, i8** align 8 dereferenceable(8) %__arg_1_0)
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
  br label %bb11

bb5:                                              ; preds = %bb2
  %38 = bitcast { i64*, i64* }* %_13 to %"core::result::Result<bool, &mut v0::ParseError>"**
  %39 = load %"core::result::Result<bool, &mut v0::ParseError>"*, %"core::result::Result<bool, &mut v0::ParseError>"** %38, align 8, !nonnull !6
  %40 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %39 to %"core::result::Result<bool, &mut v0::ParseError>::Ok"*
  %__self_01 = getelementptr inbounds %"core::result::Result<bool, &mut v0::ParseError>::Ok", %"core::result::Result<bool, &mut v0::ParseError>::Ok"* %40, i32 0, i32 1
  %41 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %42 = bitcast i64** %41 to %"core::result::Result<bool, &mut v0::ParseError>"**
  %43 = load %"core::result::Result<bool, &mut v0::ParseError>"*, %"core::result::Result<bool, &mut v0::ParseError>"** %42, align 8, !nonnull !6
  %44 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %43 to %"core::result::Result<bool, &mut v0::ParseError>::Ok"*
  %__arg_1_02 = getelementptr inbounds %"core::result::Result<bool, &mut v0::ParseError>::Ok", %"core::result::Result<bool, &mut v0::ParseError>::Ok"* %44, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialEq for bool>::eq
  %45 = call zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$bool$GT$2eq17h62e27c4164f09662E"(i8* align 1 dereferenceable(1) %__self_01, i8* align 1 dereferenceable(1) %__arg_1_02)
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb9

bb11:                                             ; preds = %bb10, %bb9
  %47 = load i8, i8* %0, align 1, !range !2
  %48 = trunc i8 %47 to i1
  ret i1 %48
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h32f7aa648528c1abE"(i8* align 1 dereferenceable_or_null(1) %0) unnamed_addr #1 {
start:
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast i8** %1 to {}**
  store {}* null, {}** %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !6
  store i8* %v, i8** %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i8*, i8** %1, align 8
  ret i8* %6
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17heffdd8925a46a27eE"(i8* align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %8, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %v.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !6
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %v.1 = load i64, i64* %11, align 8
  %12 = bitcast { i8*, i64 }* %2 to { [0 x i8]*, i64 }*
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  store [0 x i8]* %v.0, [0 x i8]** %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  store i64 %v.1, i64* %14, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i8*, i64 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i64 } %19, i64 %18, 1
  ret { i8*, i64 } %20
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h2aa03c8042ed3f57E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h0bbd403b1603ee00E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_3, i64 %self
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h91be9d4051900913E"(i64 %self, [0 x i32]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call i32* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hd1a01c18ddb14691E"([0 x i32]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i32, i32* %_3, i64 %self
  store i32* %1, i32** %0, align 8
  %2 = load i32*, i32** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h115bade7821ee7cdE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %_3 = icmp ult i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast i8** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_9 = call i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h2aa03c8042ed3f57E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8* %_9, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i8*, i8** %0, align 8
  ret i8* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h1bf6ffece4f5d49aE"(i64 %self, [0 x i32]* nonnull align 4 %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
  %_3 = icmp ult i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast i32** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_9 = call i32* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h91be9d4051900913E"(i64 %self, [0 x i32]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i32* %_9, i32** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i32*, i32** %0, align 8
  ret i32* %2
}

; <core::slice::iter::ChunksExact<T> as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define void @"_ZN78_$LT$core..slice..iter..ChunksExact$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hac5828e9ab0ebfffE"(%"core::slice::iter::ChunksExact<u8>"* noalias nocapture sret(%"core::slice::iter::ChunksExact<u8>") dereferenceable(40) %0, %"core::slice::iter::ChunksExact<u8>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::slice::iter::ChunksExact<u8>"* %self to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_2.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !6
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_2.1 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds %"core::slice::iter::ChunksExact<u8>", %"core::slice::iter::ChunksExact<u8>"* %self, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !6
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  %_3.1 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds %"core::slice::iter::ChunksExact<u8>", %"core::slice::iter::ChunksExact<u8>"* %self, i32 0, i32 2
  %_4 = load i64, i64* %7, align 8
  %8 = bitcast %"core::slice::iter::ChunksExact<u8>"* %0 to { [0 x i8]*, i64 }*
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0
  store [0 x i8]* %_2.0, [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1
  store i64 %_2.1, i64* %10, align 8
  %11 = getelementptr inbounds %"core::slice::iter::ChunksExact<u8>", %"core::slice::iter::ChunksExact<u8>"* %0, i32 0, i32 1
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0
  store [0 x i8]* %_3.0, [0 x i8]** %12, align 8
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1
  store i64 %_3.1, i64* %13, align 8
  %14 = getelementptr inbounds %"core::slice::iter::ChunksExact<u8>", %"core::slice::iter::ChunksExact<u8>"* %0, i32 0, i32 2
  store i64 %_4, i64* %14, align 8
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h07e676857e262e08E"(i1 zeroext %0) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, ()>::Err", align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %self, align 1
  %3 = load i8, i8* %self, align 1, !range !2
  %4 = trunc i8 %3 to i1
  %_2 = zext i1 %4 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>>::Continue"* %5, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<core::convert::Infallible, ()>::Err"* %_6 to {}*
  %8 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>>::Break"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>>::Break"* %8, i32 0, i32 1
  store i8 1, i8* %1, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %10 = load i8, i8* %1, align 1, !range !2
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i128 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h109ef566ffce8b55E"(i128 %0) unnamed_addr #1 {
start:
  %_6 = alloca i8, align 1
  %1 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>", align 8
  %2 = alloca i128, align 8
  %self = alloca %"core::result::Result<usize, v0::ParseError>", align 8
  store i128 %0, i128* %2, align 8
  %3 = bitcast %"core::result::Result<usize, v0::ParseError>"* %self to i8*
  %4 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = bitcast %"core::result::Result<usize, v0::ParseError>"* %self to i8*
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = trunc i8 %6 to i1
  %_2 = zext i1 %7 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<usize, v0::ParseError>"* %self to %"core::result::Result<usize, v0::ParseError>::Ok"*
  %9 = getelementptr inbounds %"core::result::Result<usize, v0::ParseError>::Ok", %"core::result::Result<usize, v0::ParseError>::Ok"* %8, i32 0, i32 1
  %v = load i64, i64* %9, align 8
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Continue"*
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Continue"* %10, i32 0, i32 1
  store i64 %v, i64* %11, align 8
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %1 to i8*
  store i8 0, i8* %12, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<usize, v0::ParseError>"* %self to %"core::result::Result<usize, v0::ParseError>::Err"*
  %14 = getelementptr inbounds %"core::result::Result<usize, v0::ParseError>::Err", %"core::result::Result<usize, v0::ParseError>::Err"* %13, i32 0, i32 1
  %15 = load i8, i8* %14, align 1, !range !2
  %e = trunc i8 %15 to i1
  %16 = zext i1 %e to i8
  store i8 %16, i8* %_6, align 1
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Break"* %17, i32 0, i32 1
  %19 = load i8, i8* %_6, align 1, !range !2
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %18, align 1
  %22 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %1 to i8*
  store i8 1, i8* %22, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %1 to i128*
  %24 = load i128, i128* %23, align 8
  ret i128 %24
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %0) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err", align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %self, align 1
  %3 = load i8, i8* %self, align 1, !range !2
  %4 = trunc i8 %3 to i1
  %_2 = zext i1 %4 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Continue"* %5, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err"* %_6 to %"core::fmt::Error"*
  %8 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Break"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Break"* %8, i32 0, i32 1
  store i8 1, i8* %1, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %10 = load i8, i8* %1, align 1, !range !2
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1b2ee57de6fb93eeE"(i32* align 4 dereferenceable_or_null(4) %0) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, ()>::Err", align 1
  %1 = alloca i32*, align 8
  %self = alloca i32*, align 8
  store i32* %0, i32** %self, align 8
  %2 = bitcast i32** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %v = load i32*, i32** %self, align 8, !nonnull !6
  store i32* %v, i32** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<core::convert::Infallible, ()>::Err"* %_6 to {}*
  %6 = bitcast i32** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, &char>::Break"*
  %7 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, &char>::Break"* %6 to %"core::result::Result<core::convert::Infallible, ()>::Err"*
  %8 = bitcast i32** %1 to {}**
  store {}* null, {}** %8, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i32*, i32** %1, align 8
  ret i32* %9
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h443a1d5e2a03c13bE"(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, ()>::Err", align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !5
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"core::result::Result<usize, ()>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<usize, ()>::Ok", %"core::result::Result<usize, ()>::Ok"* %6, i32 0, i32 1
  %v = load i64, i64* %7, align 8
  %8 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"* %8, i32 0, i32 1
  store i64 %v, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::convert::Infallible, ()>::Err"* %_6 to {}*
  %12 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Break"*
  %13 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Break"* %12, i32 0, i32 1
  %14 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %14, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !5
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4a724fb4e3da9317E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>") dereferenceable(40) %0, %"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_6 = alloca i8, align 1
  %_4 = alloca %"v0::Parser", align 8
  %v = alloca %"v0::Parser", align 8
  %1 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %self to i8*
  %2 = load i8, i8* %1, align 8, !range !2
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %self to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %5 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %4, i32 0, i32 1
  %6 = bitcast %"v0::Parser"* %v to i8*
  %7 = bitcast %"v0::Parser"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false)
  %8 = bitcast %"v0::Parser"* %_4 to i8*
  %9 = bitcast %"v0::Parser"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Continue"*
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Continue"* %10, i32 0, i32 1
  %12 = bitcast %"v0::Parser"* %11 to i8*
  %13 = bitcast %"v0::Parser"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false)
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>"* %0 to i8*
  store i8 0, i8* %14, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %15 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %self to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %16 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %15, i32 0, i32 1
  %17 = load i8, i8* %16, align 1, !range !2
  %e = trunc i8 %17 to i1
  %18 = zext i1 %e to i8
  store i8 %18, i8* %_6, align 1
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Break"*
  %20 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Break"* %19, i32 0, i32 1
  %21 = load i8, i8* %_6, align 1, !range !2
  %22 = trunc i8 %21 to i1
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %20, align 1
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>"* %0 to i8*
  store i8 1, i8* %24, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6af829c8431a4fbbE"(i8 %0) unnamed_addr #1 {
start:
  %_6 = alloca i8, align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  store i8 %0, i8* %self, align 1
  %2 = load i8, i8* %self, align 1, !range !7
  %3 = sub i8 %2, 2
  %4 = icmp eq i8 %3, 0
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>>::Continue"*
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>>::Continue"* %5 to {}*
  store i8 2, i8* %1, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %7 = load i8, i8* %self, align 1, !range !2
  %e = trunc i8 %7 to i1
  %8 = zext i1 %e to i8
  store i8 %8, i8* %_6, align 1
  %9 = load i8, i8* %_6, align 1, !range !2
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %1, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %12 = load i8, i8* %1, align 1, !range !7
  ret i8 %12
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h786b9e0d84a4e7b4E"(i1 zeroext %0, i8 %1) unnamed_addr #1 {
start:
  %_6 = alloca i8, align 1
  %2 = alloca { i8, i8 }, align 1
  %self = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 0
  %4 = zext i1 %0 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 1
  store i8 %1, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %self to i8*
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = trunc i8 %7 to i1
  %_2 = zext i1 %8 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %self to %"core::result::Result<u8, v0::ParseError>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Ok", %"core::result::Result<u8, v0::ParseError>::Ok"* %9, i32 0, i32 1
  %v = load i8, i8* %10, align 1
  %11 = bitcast { i8, i8 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue"*
  %12 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue"* %11, i32 0, i32 1
  store i8 %v, i8* %12, align 1
  %13 = bitcast { i8, i8 }* %2 to i8*
  store i8 0, i8* %13, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast { i8, i8 }* %self to %"core::result::Result<u8, v0::ParseError>::Err"*
  %15 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Err", %"core::result::Result<u8, v0::ParseError>::Err"* %14, i32 0, i32 1
  %16 = load i8, i8* %15, align 1, !range !2
  %e = trunc i8 %16 to i1
  %17 = zext i1 %e to i8
  store i8 %17, i8* %_6, align 1
  %18 = bitcast { i8, i8 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break"* %18, i32 0, i32 1
  %20 = load i8, i8* %_6, align 1, !range !2
  %21 = trunc i8 %20 to i1
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %19, align 1
  %23 = bitcast { i8, i8 }* %2 to i8*
  store i8 1, i8* %23, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %24 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %2, i32 0, i32 0
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = trunc i8 %25 to i1
  %27 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %2, i32 0, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i1 %26 to i8
  %30 = insertvalue { i8, i8 } undef, i8 %29, 0
  %31 = insertvalue { i8, i8 } %30, i8 %28, 1
  ret { i8, i8 } %31
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i128 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7b3ee549398ac868E"(i128 %0) unnamed_addr #1 {
start:
  %_6 = alloca i8, align 1
  %1 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>", align 8
  %2 = alloca i128, align 8
  %self = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  store i128 %0, i128* %2, align 8
  %3 = bitcast %"core::result::Result<u64, v0::ParseError>"* %self to i8*
  %4 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = bitcast %"core::result::Result<u64, v0::ParseError>"* %self to i8*
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = trunc i8 %6 to i1
  %_2 = zext i1 %7 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<u64, v0::ParseError>"* %self to %"core::result::Result<u64, v0::ParseError>::Ok"*
  %9 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Ok", %"core::result::Result<u64, v0::ParseError>::Ok"* %8, i32 0, i32 1
  %v = load i64, i64* %9, align 8
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue"*
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue"* %10, i32 0, i32 1
  store i64 %v, i64* %11, align 8
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %1 to i8*
  store i8 0, i8* %12, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<u64, v0::ParseError>"* %self to %"core::result::Result<u64, v0::ParseError>::Err"*
  %14 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Err", %"core::result::Result<u64, v0::ParseError>::Err"* %13, i32 0, i32 1
  %15 = load i8, i8* %14, align 1, !range !2
  %e = trunc i8 %15 to i1
  %16 = zext i1 %e to i8
  store i8 %16, i8* %_6, align 1
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break"* %17, i32 0, i32 1
  %19 = load i8, i8* %_6, align 1, !range !2
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %18, align 1
  %22 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %1 to i8*
  store i8 1, i8* %22, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %1 to i128*
  %24 = load i128, i128* %23, align 8
  ret i128 %24
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h81b60cced47ae1a7E"(i32 %0) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, ()>::Err", align 1
  %1 = alloca i32, align 4
  %self = alloca i32, align 4
  store i32 %0, i32* %self, align 4
  %2 = load i32, i32* %self, align 4, !range !4
  %3 = sub i32 %2, 1114112
  %4 = icmp eq i32 %3, 0
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %v = load i32, i32* %self, align 4, !range !9
  store i32 %v, i32* %1, align 4
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<core::convert::Infallible, ()>::Err"* %_6 to {}*
  %6 = bitcast i32* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, char>::Break"*
  %7 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, char>::Break"* %6 to %"core::result::Result<core::convert::Infallible, ()>::Err"*
  store i32 1114112, i32* %1, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %8 = load i32, i32* %1, align 4, !range !4
  ret i32 %8
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h832531be29ff824aE"(i8* align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, ()>::Err", align 1
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0
  %v.0 = load [0 x i8]*, [0 x i8]** %9, align 8, !nonnull !6
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1
  %v.1 = load i64, i64* %10, align 8
  %11 = bitcast { i8*, i64 }* %2 to { [0 x i8]*, i64 }*
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0
  store [0 x i8]* %v.0, [0 x i8]** %12, align 8
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1
  store i64 %v.1, i64* %13, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<core::convert::Infallible, ()>::Err"* %_6 to {}*
  %15 = bitcast { i8*, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, &str>::Break"*
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, &str>::Break"* %15 to %"core::result::Result<core::convert::Infallible, ()>::Err"*
  %17 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %17, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = insertvalue { i8*, i64 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i64 } %22, i64 %21, 1
  ret { i8*, i64 } %23
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd46a3fe531d61413E"(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err", align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !5
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"core::result::Result<usize, core::fmt::Error>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<usize, core::fmt::Error>::Ok", %"core::result::Result<usize, core::fmt::Error>::Ok"* %6, i32 0, i32 1
  %v = load i64, i64* %7, align 8
  %8 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"* %8, i32 0, i32 1
  store i64 %v, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err"* %_6 to %"core::fmt::Error"*
  %12 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Break"*
  %13 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Break"* %12, i32 0, i32 1
  %14 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %14, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !5
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he461217d26ea2518E"(i8 %0) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err", align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  store i8 %0, i8* %self, align 1
  %2 = load i8, i8* %self, align 1, !range !7
  %3 = sub i8 %2, 2
  %4 = icmp eq i8 %3, 0
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = load i8, i8* %self, align 1, !range !2
  %v = trunc i8 %5 to i1
  %6 = zext i1 %v to i8
  store i8 %6, i8* %1, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err"* %_6 to %"core::fmt::Error"*
  %8 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, bool>::Break"*
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, bool>::Break"* %8 to %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err"*
  store i8 2, i8* %1, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %10 = load i8, i8* %1, align 1, !range !7
  ret i8 %10
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17heb0e5c5083ee921eE"(i1 zeroext %0, i8 %1) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, ()>::Err", align 1
  %2 = alloca { i8, i8 }, align 1
  %self = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 0
  %4 = zext i1 %0 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 1
  store i8 %1, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %self to i8*
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = trunc i8 %7 to i1
  %_2 = zext i1 %8 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %self to %"core::result::Result<u8, ()>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<u8, ()>::Ok", %"core::result::Result<u8, ()>::Ok"* %9, i32 0, i32 1
  %v = load i8, i8* %10, align 1
  %11 = bitcast { i8, i8 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, u8>::Continue"*
  %12 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, u8>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, u8>::Continue"* %11, i32 0, i32 1
  store i8 %v, i8* %12, align 1
  %13 = bitcast { i8, i8 }* %2 to i8*
  store i8 0, i8* %13, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<core::convert::Infallible, ()>::Err"* %_6 to {}*
  %15 = bitcast { i8, i8 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, u8>::Break"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, u8>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, u8>::Break"* %15, i32 0, i32 1
  %17 = bitcast { i8, i8 }* %2 to i8*
  store i8 1, i8* %17, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %2, i32 0, i32 0
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = trunc i8 %19 to i1
  %21 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %2, i32 0, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i1 %20 to i8
  %24 = insertvalue { i8, i8 } undef, i8 %23, 0
  %25 = insertvalue { i8, i8 } %24, i8 %22, 1
  ret { i8, i8 } %25
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h671db233acf35392E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %self) unnamed_addr #1 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %4 = alloca { [0 x i8]*, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_3 = alloca %"core::str::pattern::SearchStep", align 8
  %5 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %6 = bitcast %"core::str::pattern::StrSearcherImpl"* %5 to i64*
  %_2 = load i64, i64* %6, align 8, !range !5
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %8 = bitcast %"core::str::pattern::StrSearcherImpl"* %7 to %"core::str::pattern::StrSearcherImpl::TwoWay"*
  %searcher = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", %"core::str::pattern::StrSearcherImpl::TwoWay"* %8, i32 0, i32 1
  %9 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 6
  %_13 = load i64, i64* %9, align 8
  %is_long = icmp eq i64 %_13, -1
  br i1 %is_long, label %bb10, label %bb14

bb14:                                             ; preds = %bb1
  %10 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0
  %_25.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !nonnull !6
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1
  %_25.1 = load i64, i64* %12, align 8
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %_25.0, [0 x i8]** %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %_25.1, i64* %14, align 8
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  %16 = load [0 x i8]*, [0 x i8]** %15, align 8, !nonnull !6
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %16, 0
  %20 = insertvalue { [0 x i8]*, i64 } %19, i64 %18, 1
  %_24.0 = extractvalue { [0 x i8]*, i64 } %20, 0
  %_24.1 = extractvalue { [0 x i8]*, i64 } %20, 1
  br label %bb15

bb10:                                             ; preds = %bb1
  %21 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 0
  %_18.0 = load [0 x i8]*, [0 x i8]** %22, align 8, !nonnull !6
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 1
  %_18.1 = load i64, i64* %23, align 8
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %_18.0, [0 x i8]** %24, align 8
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %_18.1, i64* %25, align 8
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %27 = load [0 x i8]*, [0 x i8]** %26, align 8, !nonnull !6
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %27, 0
  %31 = insertvalue { [0 x i8]*, i64 } %30, i64 %29, 1
  %_17.0 = extractvalue { [0 x i8]*, i64 } %31, 0
  %_17.1 = extractvalue { [0 x i8]*, i64 } %31, 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %32 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0
  %_21.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !6
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1
  %_21.1 = load i64, i64* %34, align 8
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_21.0, [0 x i8]** %35, align 8
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %_21.1, i64* %36, align 8
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  %38 = load [0 x i8]*, [0 x i8]** %37, align 8, !nonnull !6
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %38, 0
  %42 = insertvalue { [0 x i8]*, i64 } %41, i64 %40, 1
  %_20.0 = extractvalue { [0 x i8]*, i64 } %42, 0
  %_20.1 = extractvalue { [0 x i8]*, i64 } %42, 1
  br label %bb12

bb12:                                             ; preds = %bb11
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17had5d1c787e1dbed4E(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %searcher, [0 x i8]* nonnull align 1 %_17.0, i64 %_17.1, [0 x i8]* nonnull align 1 %_20.0, i64 %_20.1, i1 zeroext true)
  br label %bb13

bb13:                                             ; preds = %bb12
  br label %bb18

bb18:                                             ; preds = %bb17, %bb13
  br label %bb20

bb15:                                             ; preds = %bb14
  %43 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 0
  %_28.0 = load [0 x i8]*, [0 x i8]** %44, align 8, !nonnull !6
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 1
  %_28.1 = load i64, i64* %45, align 8
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  store [0 x i8]* %_28.0, [0 x i8]** %46, align 8
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  store i64 %_28.1, i64* %47, align 8
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  %49 = load [0 x i8]*, [0 x i8]** %48, align 8, !nonnull !6
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %49, 0
  %53 = insertvalue { [0 x i8]*, i64 } %52, i64 %51, 1
  %_27.0 = extractvalue { [0 x i8]*, i64 } %53, 0
  %_27.1 = extractvalue { [0 x i8]*, i64 } %53, 1
  br label %bb16

bb16:                                             ; preds = %bb15
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17had5d1c787e1dbed4E(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %searcher, [0 x i8]* nonnull align 1 %_24.0, i64 %_24.1, [0 x i8]* nonnull align 1 %_27.0, i64 %_27.1, i1 zeroext false)
  br label %bb17

bb17:                                             ; preds = %bb16
  br label %bb18

bb20:                                             ; preds = %bb19, %bb18
  ret void

bb4:                                              ; preds = %bb6, %bb3
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h4e655480c755dc2eE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %_3, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %self)
  br label %bb5

bb5:                                              ; preds = %bb4
  %54 = bitcast %"core::str::pattern::SearchStep"* %_3 to i64*
  %_5 = load i64, i64* %54, align 8, !range !25
  switch i64 %_5, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
    i64 2, label %bb9
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb5
  %55 = bitcast %"core::str::pattern::SearchStep"* %_3 to %"core::str::pattern::SearchStep::Match"*
  %56 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %55, i32 0, i32 1
  %a = load i64, i64* %56, align 8
  %57 = bitcast %"core::str::pattern::SearchStep"* %_3 to %"core::str::pattern::SearchStep::Match"*
  %58 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %57, i32 0, i32 2
  %b = load i64, i64* %58, align 8
  %59 = bitcast { i64, i64 }* %_8 to i64*
  store i64 %a, i64* %59, align 8
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  store i64 %b, i64* %60, align 8
  %61 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*
  %62 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %61, i32 0, i32 1
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %62, i32 0, i32 0
  store i64 %64, i64* %67, align 8
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %62, i32 0, i32 1
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %69, align 8
  br label %bb19

bb6:                                              ; preds = %bb5
  br label %bb4

bb9:                                              ; preds = %bb5
  %70 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %70, align 8
  br label %bb19

bb19:                                             ; preds = %bb8, %bb9
  br label %bb20
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h4e655480c755dc2eE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %self) unnamed_addr #1 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %otherwise = alloca %"core::str::pattern::SearchStep", align 8
  %b = alloca i64, align 8
  %_32 = alloca %"core::str::pattern::SearchStep", align 8
  %_14 = alloca i64, align 8
  %_10 = alloca { i8*, i8* }, align 8
  %_8 = alloca i32, align 4
  %3 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %4 = bitcast %"core::str::pattern::StrSearcherImpl"* %3 to i64*
  %_2 = load i64, i64* %4, align 8, !range !5
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %6 = bitcast %"core::str::pattern::StrSearcherImpl"* %5 to %"core::str::pattern::StrSearcherImpl::Empty"*
  %searcher1 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", %"core::str::pattern::StrSearcherImpl::Empty"* %6, i32 0, i32 1
  %7 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 4
  %8 = load i8, i8* %7, align 2, !range !2
  %_4 = trunc i8 %8 to i1
  br i1 %_4, label %bb4, label %bb5

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %10 = bitcast %"core::str::pattern::StrSearcherImpl"* %9 to %"core::str::pattern::StrSearcherImpl::TwoWay"*
  %searcher = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", %"core::str::pattern::StrSearcherImpl::TwoWay"* %10, i32 0, i32 1
  %11 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4
  %_27 = load i64, i64* %11, align 8
  %12 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  %_29.0 = load [0 x i8]*, [0 x i8]** %13, align 8, !nonnull !6
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  %_29.1 = load i64, i64* %14, align 8
; call core::str::<impl str>::len
  %_28 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %_29.0, i64 %_29.1)
  br label %bb16

bb16:                                             ; preds = %bb1
  %_26 = icmp eq i64 %_27, %_28
  br i1 %_26, label %bb17, label %bb18

bb18:                                             ; preds = %bb16
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 6
  %_31 = load i64, i64* %15, align 8
  %is_long = icmp eq i64 %_31, -1
  %16 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0
  %_36.0 = load [0 x i8]*, [0 x i8]** %17, align 8, !nonnull !6
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1
  %_36.1 = load i64, i64* %18, align 8
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %_36.0, [0 x i8]** %19, align 8
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %_36.1, i64* %20, align 8
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %22 = load [0 x i8]*, [0 x i8]** %21, align 8, !nonnull !6
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %22, 0
  %26 = insertvalue { [0 x i8]*, i64 } %25, i64 %24, 1
  %_35.0 = extractvalue { [0 x i8]*, i64 } %26, 0
  %_35.1 = extractvalue { [0 x i8]*, i64 } %26, 1
  br label %bb19

bb17:                                             ; preds = %bb16
  %27 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %27, align 8
  br label %bb30

bb30:                                             ; preds = %bb15, %bb4, %bb29, %bb17
  ret void

bb19:                                             ; preds = %bb18
  %28 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  %_39.0 = load [0 x i8]*, [0 x i8]** %29, align 8, !nonnull !6
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  %_39.1 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_39.0, [0 x i8]** %31, align 8
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %_39.1, i64* %32, align 8
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  %34 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !6
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %34, 0
  %38 = insertvalue { [0 x i8]*, i64 } %37, i64 %36, 1
  %_38.0 = extractvalue { [0 x i8]*, i64 } %38, 0
  %_38.1 = extractvalue { [0 x i8]*, i64 } %38, 1
  br label %bb20

bb20:                                             ; preds = %bb19
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17hd220febfead098cfE(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %_32, %"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %searcher, [0 x i8]* nonnull align 1 %_35.0, i64 %_35.1, [0 x i8]* nonnull align 1 %_38.0, i64 %_38.1, i1 zeroext %is_long)
  br label %bb21

bb21:                                             ; preds = %bb20
  %39 = bitcast %"core::str::pattern::SearchStep"* %_32 to i64*
  %_41 = load i64, i64* %39, align 8, !range !25
  %40 = icmp eq i64 %_41, 1
  br i1 %40, label %bb23, label %bb22

bb23:                                             ; preds = %bb21
  %41 = bitcast %"core::str::pattern::SearchStep"* %_32 to %"core::str::pattern::SearchStep::Reject"*
  %42 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %41, i32 0, i32 1
  %a = load i64, i64* %42, align 8
  %43 = bitcast %"core::str::pattern::SearchStep"* %_32 to %"core::str::pattern::SearchStep::Reject"*
  %44 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %43, i32 0, i32 2
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %b, align 8
  br label %bb24

bb22:                                             ; preds = %bb21
  %46 = bitcast %"core::str::pattern::SearchStep"* %otherwise to i8*
  %47 = bitcast %"core::str::pattern::SearchStep"* %_32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false)
  %48 = bitcast %"core::str::pattern::SearchStep"* %0 to i8*
  %49 = bitcast %"core::str::pattern::SearchStep"* %otherwise to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false)
  br label %bb29

bb29:                                             ; preds = %bb28, %bb22
  br label %bb30

bb24:                                             ; preds = %bb26, %bb23
  %50 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 0
  %_46.0 = load [0 x i8]*, [0 x i8]** %51, align 8, !nonnull !6
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 1
  %_46.1 = load i64, i64* %52, align 8
  %_47 = load i64, i64* %b, align 8
; call core::str::<impl str>::is_char_boundary
  %_45 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h48c7821a8dd76b85E"([0 x i8]* nonnull align 1 %_46.0, i64 %_46.1, i64 %_47)
  br label %bb25

bb25:                                             ; preds = %bb24
  %_44 = xor i1 %_45, true
  br i1 %_44, label %bb26, label %bb27

bb27:                                             ; preds = %bb25
  %_49 = load i64, i64* %b, align 8
  %53 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4
  %_50 = load i64, i64* %53, align 8
; call core::cmp::max
  %_48 = call i64 @_ZN4core3cmp3max17hcbe23ebba52ef57eE(i64 %_49, i64 %_50)
  br label %bb28

bb26:                                             ; preds = %bb25
  %54 = load i64, i64* %b, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %b, align 8
  br label %bb24

bb28:                                             ; preds = %bb27
  %56 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4
  store i64 %_48, i64* %56, align 8
  %_52 = load i64, i64* %b, align 8
  %57 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %58 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %57, i32 0, i32 1
  store i64 %a, i64* %58, align 8
  %59 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %60 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %59, i32 0, i32 2
  store i64 %_52, i64* %60, align 8
  %61 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %61, align 8
  br label %bb29

bb5:                                              ; preds = %bb3
  %62 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 2
  %63 = load i8, i8* %62, align 8, !range !2
  %is_match = trunc i8 %63 to i1
  %64 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 2
  %65 = load i8, i8* %64, align 8, !range !2
  %_6 = trunc i8 %65 to i1
  %66 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 2
  %67 = xor i1 %_6, true
  %68 = zext i1 %67 to i8
  store i8 %68, i8* %66, align 8
  %69 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %pos = load i64, i64* %69, align 8
  %70 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 0
  %_13.0 = load [0 x i8]*, [0 x i8]** %71, align 8, !nonnull !6
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 1
  %_13.1 = load i64, i64* %72, align 8
  store i64 %pos, i64* %_14, align 8
  %73 = load i64, i64* %_14, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %74 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %_13.0, i64 %_13.1, i64 %73, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc804 to %"core::panic::location::Location"*))
  %_12.0 = extractvalue { [0 x i8]*, i64 } %74, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %74, 1
  br label %bb6

bb4:                                              ; preds = %bb3
  %75 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %75, align 8
  br label %bb30

bb6:                                              ; preds = %bb5
; call core::str::<impl str>::chars
  %76 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %_12.0, i64 %_12.1)
  store { i8*, i8* } %76, { i8*, i8* }* %_10, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %77 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %_10), !range !4
  store i32 %77, i32* %_8, align 4
  br label %bb8

bb8:                                              ; preds = %bb7
  br i1 %is_match, label %bb11, label %bb12

bb12:                                             ; preds = %bb8
  %78 = load i32, i32* %_8, align 4, !range !4
  %79 = sub i32 %78, 1114112
  %80 = icmp eq i32 %79, 0
  %_16 = select i1 %80, i64 0, i64 1
  switch i64 %_16, label %bb10 [
    i64 0, label %bb13
    i64 1, label %bb9
  ]

bb11:                                             ; preds = %bb8
  %81 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %82 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %81, i32 0, i32 1
  store i64 %pos, i64* %82, align 8
  %83 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %84 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %83, i32 0, i32 2
  store i64 %pos, i64* %84, align 8
  %85 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 0, i64* %85, align 8
  br label %bb15

bb15:                                             ; preds = %bb13, %bb14, %bb11
  br label %bb30

bb10:                                             ; preds = %bb12
  unreachable

bb13:                                             ; preds = %bb12
  %86 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 4
  store i8 1, i8* %86, align 2
  %87 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %87, align 8
  br label %bb15

bb9:                                              ; preds = %bb12
  %ch = load i32, i32* %_8, align 4, !range !9
; call core::char::methods::<impl char>::len_utf8
  %_21 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hb7a7a576e39bcc01E"(i32 %ch)
  br label %bb14

bb14:                                             ; preds = %bb9
  %88 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %89 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, %_21
  store i64 %91, i64* %88, align 8
  %92 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %_24 = load i64, i64* %92, align 8
  %93 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %94 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %93, i32 0, i32 1
  store i64 %pos, i64* %94, align 8
  %95 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %96 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %95, i32 0, i32 2
  store i64 %_24, i64* %96, align 8
  %97 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %97, align 8
  br label %bb15
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hbc261904f1c74b27E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::iter::traits::iterator::Iterator::any
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3any17hb4d6333951fb07e9E({ i8*, i8* }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hc9b37fb5d2a0db6aE"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::iter::traits::iterator::Iterator::any
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3any17h21e0438fcffe170cE({ i8*, i8* }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h95c99b261dc99a11E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
  %0 = call { i8, i8 } @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4ad3eef92d7d3dabE"({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i8, i8 } %0, 0
  %2 = trunc i8 %1 to i1
  %3 = extractvalue { i8, i8 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = zext i1 %2 to i8
  %5 = insertvalue { i8, i8 } undef, i8 %4, 0
  %6 = insertvalue { i8, i8 } %5, i8 %3, 1
  ret { i8, i8 } %6
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::rposition
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9rposition17h1b0383100f1b0bdbE"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::iter::traits::iterator::Iterator::rposition
  %0 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator9rposition17ha004128cab28069fE({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17h9fdb2cd43e03bebfE({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i32, i32 } %0, 0
  %_2.1 = extractvalue { i32, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::map
  %1 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17hb88321a1c651de49E"(i32 %_2.0, i32 %_2.1), !range !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %1
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h347a36d105995ed9E"(i32 %ch) unnamed_addr #1 {
start:
; call core::char::convert::from_u32_unchecked
  %0 = call i32 @_ZN4core4char7convert18from_u32_unchecked17had6c20ad99e9e552E(i32 %ch), !range !9
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count17h947ecb6b109b2db6E"(i8* nonnull %self.0, i8* %self.1) unnamed_addr #1 {
start:
; call core::iter::traits::iterator::Iterator::filter
  %0 = call { i8*, i8* } @_ZN4core4iter6traits8iterator8Iterator6filter17h05558af8ef14fad4E(i8* nonnull %self.0, i8* %self.1)
  %_2.0 = extractvalue { i8*, i8* } %0, 0
  %_2.1 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::count
  %1 = call i64 @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count17h0423f2e00dbb5ed8E"(i8* nonnull %_2.0, i8* %_2.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %1
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count28_$u7b$$u7b$closure$u7d$$u7d$17h1132e69db6debe37E"(%"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::{closure#0}]"* nonnull align 1 %_1, i8** align 8 dereferenceable(8) %_2) unnamed_addr #1 {
start:
  %0 = load i8*, i8** %_2, align 8, !nonnull !6
  %byte = load i8, i8* %0, align 1
; call core::str::validations::utf8_is_cont_byte
  %_4 = call zeroext i1 @_ZN4core3str11validations17utf8_is_cont_byte17hb3b32e4af80dc409E(i8 %byte)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = xor i1 %_4, true
  ret i1 %1
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h4ce60acc40096f64E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::CharSearcher"* align 8 dereferenceable(48) %self) unnamed_addr #1 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %_51 = alloca { i64, i64 }, align 8
  %_49 = alloca { i64, i64 }, align 8
  %_46 = alloca { [0 x i8]*, i64 }, align 8
  %slice = alloca { [0 x i8]*, i64 }, align 8
  %_38 = alloca { i64, i64 }, align 8
  %_34 = alloca { i8*, i64 }, align 8
  %_21 = alloca { i64, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %bb21, %start
  %3 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  %_7.0 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !6
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  %_7.1 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %_7.0, [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %_7.1, i64* %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %9 = load [0 x i8]*, [0 x i8]** %8, align 8, !nonnull !6
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1
  %_6.0 = extractvalue { [0 x i8]*, i64 } %13, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %13, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %14 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %_9 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 2
  %_10 = load i64, i64* %15, align 8
  %16 = bitcast { i64, i64 }* %_8 to i64*
  store i64 %_9, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  store i64 %_10, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
; call core::slice::<impl [T]>::get
  %22 = call { i8*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hd66e6cf3d7ccdb2dE"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1, i64 %19, i64 %21)
  %_4.0 = extractvalue { i8*, i64 } %22, 0
  %_4.1 = extractvalue { i8*, i64 } %22, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %23 = call { i8*, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17heffdd8925a46a27eE"(i8* align 1 %_4.0, i64 %_4.1)
  store { i8*, i64 } %23, { i8*, i64 }* %_3, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %24 = bitcast { i8*, i64 }* %_3 to {}**
  %25 = load {}*, {}** %24, align 8
  %26 = icmp eq {}* %25, null
  %_11 = select i1 %26, i64 1, i64 0
  switch i64 %_11, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %27 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 0
  %val.0 = load [0 x i8]*, [0 x i8]** %28, align 8, !nonnull !6
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 1
  %val.1 = load i64, i64* %29, align 8
  %_18 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 5
  %_17.0 = bitcast [4 x i8]* %_18 to [0 x i8]*
  %30 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %_20 = load i64, i64* %30, align 8
  %_19 = sub i64 %_20, 1
; call core::slice::<impl [T]>::get_unchecked
  %_16 = call align 1 dereferenceable(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h72da40fcfc3955a5E"([0 x i8]* nonnull align 1 %_17.0, i64 4, i64 %_19)
  br label %bb9

bb7:                                              ; preds = %bb4
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  call void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hae51c36331db4b67E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0)
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb24

bb24:                                             ; preds = %bb23, %bb8
  ret void

bb9:                                              ; preds = %bb5
  %last_byte = load i8, i8* %_16, align 1
; call core::slice::memchr::memchr
  %31 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17hea26ef742c48fad3E(i8 %last_byte, [0 x i8]* nonnull align 1 %val.0, i64 %val.1)
  store { i64, i64 } %31, { i64, i64 }* %_21, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
  %32 = bitcast { i64, i64 }* %_21 to i64*
  %_24 = load i64, i64* %32, align 8, !range !5
  %33 = icmp eq i64 %_24, 1
  br i1 %33, label %bb11, label %bb22

bb11:                                             ; preds = %bb10
  %34 = bitcast { i64, i64 }* %_21 to %"core::option::Option<usize>::Some"*
  %35 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %34, i32 0, i32 1
  %index = load i64, i64* %35, align 8
  %_26 = add i64 %index, 1
  %36 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %37 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, %_26
  store i64 %39, i64* %36, align 8
  %40 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %_29 = load i64, i64* %40, align 8
  %41 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %_30 = load i64, i64* %41, align 8
  %_28 = icmp uge i64 %_29, %_30
  br i1 %_28, label %bb12, label %bb21

bb22:                                             ; preds = %bb10
  %42 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 2
  %_54 = load i64, i64* %42, align 8
  %43 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  store i64 %_54, i64* %43, align 8
  %44 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %44, align 8
  br label %bb23

bb23:                                             ; preds = %bb18, %bb22
  br label %bb24

bb21:                                             ; preds = %bb20, %bb11
  br label %bb1

bb12:                                             ; preds = %bb11
  %45 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %_32 = load i64, i64* %45, align 8
  %46 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %_33 = load i64, i64* %46, align 8
  %found_char = sub i64 %_32, %_33
  %47 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 0
  %_37.0 = load [0 x i8]*, [0 x i8]** %48, align 8, !nonnull !6
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 1
  %_37.1 = load i64, i64* %49, align 8
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_37.0, [0 x i8]** %50, align 8
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %_37.1, i64* %51, align 8
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  %53 = load [0 x i8]*, [0 x i8]** %52, align 8, !nonnull !6
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %53, 0
  %57 = insertvalue { [0 x i8]*, i64 } %56, i64 %55, 1
  %_36.0 = extractvalue { [0 x i8]*, i64 } %57, 0
  %_36.1 = extractvalue { [0 x i8]*, i64 } %57, 1
  br label %bb13

bb13:                                             ; preds = %bb12
  %58 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %_40 = load i64, i64* %58, align 8
  %59 = bitcast { i64, i64 }* %_38 to i64*
  store i64 %found_char, i64* %59, align 8
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_38, i32 0, i32 1
  store i64 %_40, i64* %60, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_38, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_38, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
; call core::slice::<impl [T]>::get
  %65 = call { i8*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hd66e6cf3d7ccdb2dE"([0 x i8]* nonnull align 1 %_36.0, i64 %_36.1, i64 %62, i64 %64)
  store { i8*, i64 } %65, { i8*, i64 }* %_34, align 8
  br label %bb14

bb14:                                             ; preds = %bb13
  %66 = bitcast { i8*, i64 }* %_34 to {}**
  %67 = load {}*, {}** %66, align 8
  %68 = icmp eq {}* %67, null
  %_41 = select i1 %68, i64 0, i64 1
  %69 = icmp eq i64 %_41, 1
  br i1 %69, label %bb15, label %bb20

bb15:                                             ; preds = %bb14
  %70 = bitcast { i8*, i64 }* %_34 to { [0 x i8]*, i64 }*
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 0
  %72 = load [0 x i8]*, [0 x i8]** %71, align 8, !nonnull !6
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 0
  store [0 x i8]* %72, [0 x i8]** %75, align 8
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 1
  store i64 %74, i64* %76, align 8
  %_48 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 5
  %77 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %_50 = load i64, i64* %77, align 8
  %78 = bitcast { i64, i64 }* %_49 to i64*
  store i64 0, i64* %78, align 8
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1
  store i64 %_50, i64* %79, align 8
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %84 = call { [0 x i8]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17ha445931793992c23E"([4 x i8]* align 1 dereferenceable(4) %_48, i64 %81, i64 %83, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc806 to %"core::panic::location::Location"*))
  %_47.0 = extractvalue { [0 x i8]*, i64 } %84, 0
  %_47.1 = extractvalue { [0 x i8]*, i64 } %84, 1
  br label %bb16

bb20:                                             ; preds = %bb19, %bb14
  br label %bb21

bb16:                                             ; preds = %bb15
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 0
  store [0 x i8]* %_47.0, [0 x i8]** %85, align 8
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 1
  store i64 %_47.1, i64* %86, align 8
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_43 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h1595aef07d10a2acE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %slice, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %_46)
  br label %bb17

bb17:                                             ; preds = %bb16
  br i1 %_43, label %bb18, label %bb19

bb19:                                             ; preds = %bb17
  br label %bb20

bb18:                                             ; preds = %bb17
  %87 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1
  %_53 = load i64, i64* %87, align 8
  %88 = bitcast { i64, i64 }* %_51 to i64*
  store i64 %found_char, i64* %88, align 8
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1
  store i64 %_53, i64* %89, align 8
  %90 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*
  %91 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %90, i32 0, i32 1
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %91, i32 0, i32 0
  store i64 %93, i64* %96, align 8
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %91, i32 0, i32 1
  store i64 %95, i64* %97, align 8
  %98 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %98, align 8
  br label %bb23
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h371a5ff59cec3ad2E"(%"core::str::pattern::CharSearcher"* align 8 dereferenceable(48) %self) unnamed_addr #1 {
start:
  %0 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %2 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !6
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1
  ret { [0 x i8]*, i64 } %6
}

; <core::iter::adapters::map::Map<I,F> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN82_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hb9ae9c9ca7b01a9eE"(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>") dereferenceable(40) %0, %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* align 8 dereferenceable(40) %self) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>", align 8
  %__self_0_0 = bitcast %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* %self to %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"*
  %__self_0_1 = bitcast %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]"*
; call <core::iter::adapters::map::Map<I,F> as core::clone::Clone>::clone
  call void @"_ZN82_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hf50a54b6e5e4bea1E"(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>") dereferenceable(40) %_4, %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* align 8 dereferenceable(40) %__self_0_0)
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::clone::Clone::clone
  invoke void @_ZN4core5clone5Clone5clone17h4a267c58539d55a7E(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]"* nonnull align 1 %__self_0_1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %2 = bitcast %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* %0 to %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"*
  %3 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %2 to i8*
  %4 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  %5 = bitcast %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]"*
  ret void

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %11 = bitcast { i8*, i32 }* %1 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; <core::iter::adapters::map::Map<I,F> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN82_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hf50a54b6e5e4bea1E"(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>") dereferenceable(40) %0, %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* align 8 dereferenceable(40) %self) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca %"core::slice::iter::ChunksExact<u8>", align 8
  %__self_0_0 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %self to %"core::slice::iter::ChunksExact<u8>"*
  %__self_0_1 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]"*
; call <core::slice::iter::ChunksExact<T> as core::clone::Clone>::clone
  call void @"_ZN78_$LT$core..slice..iter..ChunksExact$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hac5828e9ab0ebfffE"(%"core::slice::iter::ChunksExact<u8>"* noalias nocapture sret(%"core::slice::iter::ChunksExact<u8>") dereferenceable(40) %_4, %"core::slice::iter::ChunksExact<u8>"* align 8 dereferenceable(40) %__self_0_0)
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::clone::Clone::clone
  invoke void @_ZN4core5clone5Clone5clone17ha5be340ac35edaf7E(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]"* nonnull align 1 %__self_0_1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %2 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %0 to %"core::slice::iter::ChunksExact<u8>"*
  %3 = bitcast %"core::slice::iter::ChunksExact<u8>"* %2 to i8*
  %4 = bitcast %"core::slice::iter::ChunksExact<u8>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  %5 = bitcast %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]"*
  ret void

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %11 = bitcast { i8*, i32 }* %1 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; <&mut I as core::iter::traits::exact_size::ExactSizeIterator>::len
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN83_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h29de5ae4289b6795E"({ i8*, i8* }** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_2 = load { i8*, i8* }*, { i8*, i8* }** %self, align 8, !nonnull !6
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::exact_size::ExactSizeIterator>::len
  %0 = call i64 @"_ZN115_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h2aa66fa1cb4887baE"({ i8*, i8* }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; <core::iter::sources::from_fn::FromFn<F> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN84_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha5ff1b9498831c45E"(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* noalias nocapture sret(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>") dereferenceable(40) %0, %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]", align 8
  %__self_0_0 = bitcast %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"*
; call core::clone::Clone::clone
  call void @_ZN4core5clone5Clone5clone17h0ef3f928a82cd3dcE(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* noalias nocapture sret(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]") dereferenceable(40) %_3, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* align 8 dereferenceable(40) %__self_0_0)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"*
  %2 = bitcast %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* %1 to i8*
  %3 = bitcast %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 40, i1 false)
  ret void
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h69f1e2c6d9b230a1E"() unnamed_addr #1 {
start:
  %0 = alloca { i32, i32 }, align 4
  %1 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %1, align 4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4, !range !24
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = insertvalue { i32, i32 } undef, i32 %3, 0
  %7 = insertvalue { i32, i32 } %6, i32 %5, 1
  ret { i32, i32 } %7
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hae51c36331db4b67E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0) unnamed_addr #1 {
start:
  %1 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %1, align 8
  ret void
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h656aff1e9ba37d04E"() unnamed_addr #1 {
start:
  ret i1 false
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h5b36c18d479e081eE"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, i64 %a, i64 %b) unnamed_addr #1 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_3 to i64*
  store i64 %a, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %b, i64* %2, align 8
  %3 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  store i64 %8, i64* %10, align 8
  %11 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %11, align 8
  ret void
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17ha9e1bb3cf75be772E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, i64 %_a, i64 %_b) unnamed_addr #1 {
start:
  %1 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %1, align 8
  ret void
}

; <core::option::Item<A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN86_$LT$core..option..Item$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h68bd9f562a3b1708E"(i32* align 4 dereferenceable(4) %self) unnamed_addr #1 {
start:
; call core::option::Option<T>::take
  %0 = call i32 @"_ZN4core6option15Option$LT$T$GT$4take17h9d23f3f67fea5692E"(i32* align 4 dereferenceable(4) %self), !range !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h53580812e28ac9e3E"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %_14 = alloca { i64, i32 }, align 8
  %_4 = alloca i32, align 4
  %4 = alloca { i64, i32 }, align 8
  %_3 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
  %5 = bitcast { i8*, i8* }* %_3 to i8**
  %start1.i1 = load i8*, i8** %5, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i1)
  %6 = icmp eq i64 1, 0
  br i1 %6, label %bb3.i7, label %bb6.i11

bb3.i7:                                           ; preds = %start
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_3, i32 0, i32 1
  %_9.i4 = load i8*, i8** %7, align 8
  %_8.i5 = ptrtoint i8* %_9.i4 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_11.i6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i1)
  %_10.i14 = ptrtoint i8* %_11.i6 to i64
  %8 = sub i64 %_8.i5, %_10.i14
  store i64 %8, i64* %1, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit15"

bb6.i11:                                          ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_3, i32 0, i32 1
  %_15.i8 = load i8*, i8** %9, align 8
  %_14.i9 = ptrtoint i8* %_15.i8 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i10 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i1)
  %_16.i12 = ptrtoint i8* %_17.i10 to i64
  %10 = sub nuw i64 %_14.i9, %_16.i12
  store i64 %10, i64* %0, align 8
  %diff.i13 = load i64, i64* %0, align 8
  %11 = udiv exact i64 %diff.i13, 1
  store i64 %11, i64* %1, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit15"

"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit15": ; preds = %bb6.i11, %bb3.i7
  %12 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit15"
  %_5 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %13 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %_5), !range !4
  store i32 %13, i32* %_4, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %14 = load i32, i32* %_4, align 4, !range !4
  %15 = sub i32 %14, 1114112
  %16 = icmp eq i32 %15, 0
  %_6 = select i1 %16, i64 0, i64 1
  switch i64 %_6, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  store i32 1114112, i32* %17, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  %ch = load i32, i32* %_4, align 4, !range !9
  %18 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %index = load i64, i64* %18, align 8
  %_10 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
  %19 = bitcast { i8*, i8* }* %_10 to i8**
  %start1.i = load i8*, i8** %19, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i)
  %20 = icmp eq i64 1, 0
  br i1 %20, label %bb3.i, label %bb6.i

bb3.i:                                            ; preds = %bb3
  %21 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 1
  %_9.i = load i8*, i8** %21, align 8
  %_8.i = ptrtoint i8* %_9.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_11.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i)
  %_10.i = ptrtoint i8* %_11.i to i64
  %22 = sub i64 %_8.i, %_10.i
  store i64 %22, i64* %3, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit"

bb6.i:                                            ; preds = %bb3
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 1
  %_15.i = load i8*, i8** %23, align 8
  %_14.i = ptrtoint i8* %_15.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i)
  %_16.i = ptrtoint i8* %_17.i to i64
  %24 = sub nuw i64 %_14.i, %_16.i
  store i64 %24, i64* %2, align 8
  %diff.i = load i64, i64* %2, align 8
  %25 = udiv exact i64 %diff.i, 1
  store i64 %25, i64* %3, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit"

"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit": ; preds = %bb6.i, %bb3.i
  %26 = load i64, i64* %3, align 8
  br label %bb6

bb6:                                              ; preds = %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit"
  %_11 = sub i64 %12, %26
  %27 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %28 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, %_11
  store i64 %30, i64* %27, align 8
  %31 = bitcast { i64, i32 }* %_14 to i64*
  store i64 %index, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1
  store i32 %ch, i32* %32, align 8
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1
  %36 = load i32, i32* %35, align 8, !range !9
  %37 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 0
  store i64 %34, i64* %37, align 8
  %38 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  %42 = load i32, i32* %41, align 8, !range !4
  %43 = insertvalue { i64, i32 } undef, i64 %40, 0
  %44 = insertvalue { i64, i32 } %43, i32 %42, 1
  ret { i64, i32 } %44
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h9ae92f02d8854250E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hb0cb608cc0c06902E"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %2 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %2, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hf107f76c081dd3e6E"(i64* align 8 dereferenceable(8) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::backward_unchecked
  %_5 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17hd3903ef0322ec5aeE"(i64 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb9

bb9:                                              ; preds = %bb4
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %_5, i64* %3, align 8
  %_9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_8 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hf107f76c081dd3e6E"(i64* align 8 dereferenceable(8) %_9)
  br label %bb5

bb8:                                              ; No predecessors!
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %_5, i64* %4, align 8
  %5 = bitcast { i8*, i32 }* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb5:                                              ; preds = %bb9
  %11 = bitcast { i64, i64 }* %1 to %"core::option::Option<usize>::Some"*
  %12 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %11, i32 0, i32 1
  store i64 %_8, i64* %12, align 8
  %13 = bitcast { i64, i64 }* %1 to i64*
  store i64 1, i64* %13, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8, !range !5
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hb78f98ba758db8b3E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hb0cb608cc0c06902E"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hf107f76c081dd3e6E"(i64* align 8 dereferenceable(8) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h3c97ce15ff535c2aE"(i64 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17h590260a78c89feeaE(i64* align 8 dereferenceable(8) %_10, i64 %n)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %2, i32 0, i32 1
  store i64 %_8, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %4, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !range !5
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hbaa7e8feb64ba927E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for u64>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u64$GT$2lt17ha2f8159aab2ae82bE"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*
; call core::clone::impls::<impl core::clone::Clone for u64>::clone
  %_6 = call i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u64$GT$5clone17h7136b57d2fe92d8fE"(i64* align 8 dereferenceable(8) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <u64 as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN47_$LT$u64$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h53d338db233fa7b1E"(i64 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17hf486f0634e638c72E(i64* align 8 dereferenceable(8) %_10, i64 %n)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = bitcast { i64, i64 }* %0 to %"core::option::Option<u64>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %2, i32 0, i32 1
  store i64 %_8, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %4, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !range !5
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h4a07b96dc6ea8c06E"() unnamed_addr #1 {
start:
  ret i1 true
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h4c975af907074088E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %a, i64 %b) unnamed_addr #1 {
start:
  %1 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %2 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %1, i32 0, i32 1
  store i64 %a, i64* %2, align 8
  %3 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %4 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %3, i32 0, i32 2
  store i64 %b, i64* %4, align 8
  %5 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 0, i64* %5, align 8
  ret void
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hd67ea3511d952eaeE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %a, i64 %b) unnamed_addr #1 {
start:
  %1 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %2 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %1, i32 0, i32 1
  store i64 %a, i64* %2, align 8
  %3 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %4 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %3, i32 0, i32 2
  store i64 %b, i64* %4, align 8
  %5 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %5, align 8
  ret void
}

; <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hff179cb41b988b43E"(i8* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %other) unnamed_addr #1 {
start:
  %_13 = alloca { i8*, i8* }, align 8
  %0 = alloca i8, align 1
  %1 = load i8, i8* %self, align 1, !range !2
  %2 = trunc i8 %1 to i1
  %__self_vi = zext i1 %2 to i64
  %3 = load i8, i8* %other, align 1, !range !2
  %4 = trunc i8 %3 to i1
  %__arg_1_vi = zext i1 %4 to i64
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb10

bb10:                                             ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb11

bb1:                                              ; preds = %start
  %5 = bitcast { i8*, i8* }* %_13 to i8**
  store i8* %self, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1
  store i8* %other, i8** %6, align 8
  %7 = bitcast { i8*, i8* }* %_13 to i8**
  %8 = load i8*, i8** %7, align 8, !nonnull !6
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = trunc i8 %9 to i1
  %_18 = zext i1 %10 to i64
  switch i64 %_18, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb2, %bb4, %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1
  %12 = load i8*, i8** %11, align 8, !nonnull !6
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = trunc i8 %13 to i1
  %_16 = zext i1 %14 to i64
  %15 = icmp eq i64 %_16, 0
  br i1 %15, label %bb5, label %bb3

bb4:                                              ; preds = %bb1
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1
  %17 = load i8*, i8** %16, align 8, !nonnull !6
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = trunc i8 %18 to i1
  %_17 = zext i1 %19 to i64
  %20 = icmp eq i64 %_17, 1
  br i1 %20, label %bb7, label %bb3

bb7:                                              ; preds = %bb4
  %21 = bitcast { i8*, i8* }* %_13 to i8**
  %22 = load i8*, i8** %21, align 8, !nonnull !6
  %23 = bitcast i8* %22 to %"core::ops::control_flow::ControlFlow<()>::Break"*
  %__self_0 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<()>::Break", %"core::ops::control_flow::ControlFlow<()>::Break"* %23, i32 0, i32 1
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1
  %25 = load i8*, i8** %24, align 8, !nonnull !6
  %26 = bitcast i8* %25 to %"core::ops::control_flow::ControlFlow<()>::Break"*
  %__arg_1_0 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<()>::Break", %"core::ops::control_flow::ControlFlow<()>::Break"* %26, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %27 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17hb6c893e2624e383bE"({}* nonnull align 1 %__self_0, {}* nonnull align 1 %__arg_1_0)
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
  br label %bb11

bb5:                                              ; preds = %bb2
  %29 = bitcast { i8*, i8* }* %_13 to i8**
  %30 = load i8*, i8** %29, align 8, !nonnull !6
  %31 = bitcast i8* %30 to %"core::ops::control_flow::ControlFlow<()>::Continue"*
  %__self_01 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<()>::Continue", %"core::ops::control_flow::ControlFlow<()>::Continue"* %31, i32 0, i32 1
  %32 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1
  %33 = load i8*, i8** %32, align 8, !nonnull !6
  %34 = bitcast i8* %33 to %"core::ops::control_flow::ControlFlow<()>::Continue"*
  %__arg_1_02 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<()>::Continue", %"core::ops::control_flow::ControlFlow<()>::Continue"* %34, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %35 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17hb6c893e2624e383bE"({}* nonnull align 1 %__self_01, {}* nonnull align 1 %__arg_1_02)
  %36 = zext i1 %35 to i8
  store i8 %36, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb9

bb11:                                             ; preds = %bb10, %bb9
  %37 = load i8, i8* %0, align 1, !range !2
  %38 = trunc i8 %37 to i1
  ret i1 %38
}

; <core::option::IntoIter<A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN90_$LT$core..option..IntoIter$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc0faa43dba513b24E"(i32* align 4 dereferenceable(4) %self) unnamed_addr #1 {
start:
; call <core::option::Item<A> as core::iter::traits::iterator::Iterator>::next
  %0 = call i32 @"_ZN86_$LT$core..option..Item$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h68bd9f562a3b1708E"(i32* align 4 dereferenceable(4) %self), !range !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h31aa09f3cec97c4aE"(%"core::str::iter::Split<char>"* align 8 dereferenceable(72) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"core::str::iter::Split<char>"* %self to %"core::str::iter::SplitInternal<char>"*
; call core::str::iter::SplitInternal<P>::next
  %0 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17he453451379a925d7E"(%"core::str::iter::SplitInternal<char>"* align 8 dereferenceable(72) %_2)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::option::Option<T> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN91_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc69a5446e5122bc5E"(i32 %self) unnamed_addr #1 {
start:
  %_2 = alloca i32, align 4
  %0 = alloca i32, align 4
  store i32 %self, i32* %_2, align 4
  %1 = load i32, i32* %_2, align 4, !range !4
  store i32 %1, i32* %0, align 4
  %2 = load i32, i32* %0, align 4, !range !4
  ret i32 %2
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h40dc0f323a5db63cE"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = bitcast { i8*, i8* }* %self to i8**
  %_6 = load i8*, i8** %3, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17haaf9e23b7be33783E"(i8* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 1, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_11 = load i8*, i8** %5, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h50c74e222c8a4850E"(i8* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i8*, i8* }* %self to i8**
  %_15 = load i8*, i8** %6, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_16 = load i8*, i8** %7, align 8
  %_12 = icmp eq i8* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %8 = bitcast { i8*, i8* }* %self to i8**
  %_12.i = load i8*, i8** %8, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %_12.i)
  %9 = bitcast { i8*, i8* }* %self to i8**
  %_16.i = load i8*, i8** %9, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %_16.i)
  %10 = getelementptr inbounds i8, i8* %_15.i, i64 1
  store i8* %10, i8** %0, align 8
  %_3.i.i = load i8*, i8** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hff0aa147614572c1E"(i8* %_3.i.i)
  %11 = bitcast { i8*, i8* }* %self to i8**
  store i8* %_13.i, i8** %11, align 8
  store i8* %old.i, i8** %1, align 8
  %12 = load i8*, i8** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %13 = bitcast i8** %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i8*, i8** %2, align 8
  ret i8* %14

bb13:                                             ; preds = %bb12
  store i8* %12, i8** %2, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable_or_null(4) i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h651fefdc03932377E"({ i32*, i32* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %3 = bitcast { i32*, i32* }* %self to i32**
  %_6 = load i32*, i32** %3, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17had4b2c0c5eba93b6E"(i32* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd9e1a2a51dcca46cE"(i32* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 4, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %_11 = load i32*, i32** %5, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h3b5a74d1b03b19e1E"(i32* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i32*, i32* }* %self to i32**
  %_15 = load i32*, i32** %6, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17had4b2c0c5eba93b6E"(i32* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1
  %_16 = load i32*, i32** %7, align 8
  %_12 = icmp eq i32* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %8 = bitcast { i32*, i32* }* %self to i32**
  %_12.i = load i32*, i32** %8, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17had4b2c0c5eba93b6E"(i32* nonnull %_12.i)
  %9 = bitcast { i32*, i32* }* %self to i32**
  %_16.i = load i32*, i32** %9, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17had4b2c0c5eba93b6E"(i32* nonnull %_16.i)
  %10 = getelementptr inbounds i32, i32* %_15.i, i64 1
  store i32* %10, i32** %0, align 8
  %_3.i.i = load i32*, i32** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1c909d8c0c85fa8eE"(i32* %_3.i.i)
  %11 = bitcast { i32*, i32* }* %self to i32**
  store i32* %_13.i, i32** %11, align 8
  store i32* %old.i, i32** %1, align 8
  %12 = load i32*, i32** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %13 = bitcast i32** %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i32*, i32** %2, align 8
  ret i32* %14

bb13:                                             ; preds = %bb12
  store i32* %12, i32** %2, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17hab594483a347aee8E"({ i8*, i8* }* align 8 dereferenceable(16) %self, i8* align 1 dereferenceable(1) %0) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_30 = alloca i8*, align 8
  %_24 = alloca i8*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %3 = alloca { i64, i64 }, align 8
  %predicate = alloca i8*, align 8
  store i8* %0, i8** %predicate, align 8
  %4 = bitcast { i8*, i8* }* %self to i8**
  %start1 = load i8*, i8** %4, align 8, !nonnull !6
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_7 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  br label %bb2

bb21:                                             ; preds = %cleanup
  br label %bb22

cleanup:                                          ; preds = %panic, %bb13, %bb11, %bb3, %bb6, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb21

bb2:                                              ; preds = %bb1
  %10 = icmp eq i64 1, 0
  br i1 %10, label %bb3, label %bb6

bb3:                                              ; preds = %bb2
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_11 = load i8*, i8** %11, align 8
  %_10 = ptrtoint i8* %_11 to i64
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_13 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1)
          to label %bb4 unwind label %cleanup

bb6:                                              ; preds = %bb2
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_17 = load i8*, i8** %12, align 8
  %_16 = ptrtoint i8* %_17 to i64
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_19 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %_18 = ptrtoint i8* %_19 to i64
  %13 = sub nuw i64 %_16, %_18
  store i64 %13, i64* %1, align 8
  %diff = load i64, i64* %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %14 = udiv exact i64 %diff, 1
  store i64 %14, i64* %n, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb10

bb10:                                             ; preds = %bb5, %bb9
  store i64 0, i64* %i, align 8
  br label %bb11

bb4:                                              ; preds = %bb3
  %_12 = ptrtoint i8* %_13 to i64
  %15 = sub i64 %_10, %_12
  br label %bb5

bb5:                                              ; preds = %bb4
  store i64 %15, i64* %n, align 8
  br label %bb10

bb11:                                             ; preds = %bb18, %bb10
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %16 = invoke align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h40dc0f323a5db63cE"({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  store i8* %16, i8** %_24, align 8
  %17 = bitcast i8** %_24 to {}**
  %18 = load {}*, {}** %17, align 8
  %19 = icmp eq {}* %18, null
  %_26 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_26, 1
  br i1 %20, label %bb13, label %bb19

bb13:                                             ; preds = %bb12
  %x = load i8*, i8** %_24, align 8, !nonnull !6
  store i8* %x, i8** %_30, align 8
  %21 = load i8*, i8** %_30, align 8, !nonnull !6
; invoke core::slice::memchr::memchr::{{closure}}
  %_28 = invoke zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h6bd344b0ffb4cae4E"(i8** align 8 dereferenceable(8) %predicate, i8* align 1 dereferenceable(1) %21)
          to label %bb14 unwind label %cleanup

bb19:                                             ; preds = %bb12
  %22 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %22, align 8
  br label %bb20

bb20:                                             ; preds = %bb16, %bb19
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %24 = load i64, i64* %23, align 8, !range !5
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = insertvalue { i64, i64 } undef, i64 %24, 0
  %28 = insertvalue { i64, i64 } %27, i64 %26, 1
  ret { i64, i64 } %28

bb14:                                             ; preds = %bb13
  br i1 %_28, label %bb15, label %bb17

bb17:                                             ; preds = %bb14
  %29 = load i64, i64* %i, align 8
  %30 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %29, i64 1)
  %_37.0 = extractvalue { i64, i1 } %30, 0
  %_37.1 = extractvalue { i64, i1 } %30, 1
  %31 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false)
  br i1 %31, label %panic, label %bb18

bb15:                                             ; preds = %bb14
  %_34 = load i64, i64* %i, align 8
  %_35 = load i64, i64* %n, align 8
  %_33 = icmp ult i64 %_34, %_35
  call void @llvm.assume(i1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
  %_36 = load i64, i64* %i, align 8
  %32 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %33 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %32, i32 0, i32 1
  store i64 %_36, i64* %33, align 8
  %34 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %34, align 8
  br label %bb20

bb18:                                             ; preds = %bb17
  store i64 %_37.0, i64* %i, align 8
  br label %bb11

panic:                                            ; preds = %bb17
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc808 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb22:                                             ; preds = %bb21
  %35 = bitcast { i8*, i32 }* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h15e2cab3bfe8d574E"(i64 %output) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %0 to %"core::ops::control_flow::ControlFlow<usize, usize>::Continue"*
  %2 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<usize, usize>::Continue", %"core::ops::control_flow::ControlFlow<usize, usize>::Continue"* %1, i32 0, i32 1
  store i64 %output, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !range !5
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h4f6333053847859eE"() unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast i8* %0 to %"core::ops::control_flow::ControlFlow<()>::Continue"*
  %2 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<()>::Continue", %"core::ops::control_flow::ControlFlow<()>::Continue"* %1, i32 0, i32 1
  store i8 0, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1e9f728e23f08bf1E"(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %_6 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !5
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"core::ops::control_flow::ControlFlow<usize, usize>::Continue"*
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<usize, usize>::Continue", %"core::ops::control_flow::ControlFlow<usize, usize>::Continue"* %6, i32 0, i32 1
  %c = load i64, i64* %7, align 8
  %8 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Continue"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Continue"* %8, i32 0, i32 1
  store i64 %c, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast { i64, i64 }* %self to %"core::ops::control_flow::ControlFlow<usize, usize>::Break"*
  %12 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<usize, usize>::Break", %"core::ops::control_flow::ControlFlow<usize, usize>::Break"* %11, i32 0, i32 1
  %b = load i64, i64* %12, align 8
  store i64 %b, i64* %_6, align 8
  %13 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Break"*
  %14 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>::Break"* %13, i32 0, i32 1
  %15 = load i64, i64* %_6, align 8
  store i64 %15, i64* %14, align 8
  %16 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %16, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8, !range !5
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = insertvalue { i64, i64 } undef, i64 %18, 0
  %22 = insertvalue { i64, i64 } %21, i64 %20, 1
  ret { i64, i64 } %22
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8c2b042322eca335E"(i1 zeroext %0) unnamed_addr #1 {
start:
  %_6 = alloca %"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break", align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %self, align 1
  %3 = load i8, i8* %self, align 1, !range !2
  %4 = trunc i8 %3 to i1
  %_2 = zext i1 %4 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Continue", %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Continue"* %5, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::ops::control_flow::ControlFlow<(), core::convert::Infallible>::Break"* %_6 to {}*
  %8 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Break"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Break", %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>>::Break"* %8, i32 0, i32 1
  store i8 1, i8* %1, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %10 = load i8, i8* %1, align 1, !range !2
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

; <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hba101e781c8b081fE"(%"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* noalias nocapture sret(%"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 personality i32 (...)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_5 = alloca %"core::str::iter::CharIndices", align 8
; invoke core::str::<impl str>::char_indices
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hfafb8360d876fb4bE"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %_5, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* %0 to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]"*
  %3 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* %0 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %haystack.1, i64* %5, align 8
  %6 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>", %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* %0, i32 0, i32 2
  %7 = bitcast %"core::str::iter::CharIndices"* %6 to i8*
  %8 = bitcast %"core::str::iter::CharIndices"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  ret void

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %14 = bitcast { i8*, i32 }* %1 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19
}

; <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h8b5639ba23c9b031E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %slice.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %slice.1, 1
  ret { [0 x i8]*, i64 } %2
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17hf068f787c864f3b8E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %_5 = alloca { i64, i32 }, align 8
  %s = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>", %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* %self, i32 0, i32 2
  %_4 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1
  %5 = bitcast { i8*, i8* }* %_4 to i8**
  %start1.i1 = load i8*, i8** %5, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i1)
  %6 = icmp eq i64 1, 0
  br i1 %6, label %bb3.i7, label %bb6.i11

bb3.i7:                                           ; preds = %start
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_4, i32 0, i32 1
  %_9.i4 = load i8*, i8** %7, align 8
  %_8.i5 = ptrtoint i8* %_9.i4 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_11.i6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i1)
  %_10.i14 = ptrtoint i8* %_11.i6 to i64
  %8 = sub i64 %_8.i5, %_10.i14
  store i64 %8, i64* %2, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit15"

bb6.i11:                                          ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_4, i32 0, i32 1
  %_15.i8 = load i8*, i8** %9, align 8
  %_14.i9 = ptrtoint i8* %_15.i8 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i10 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i1)
  %_16.i12 = ptrtoint i8* %_17.i10 to i64
  %10 = sub nuw i64 %_14.i9, %_16.i12
  store i64 %10, i64* %1, align 8
  %diff.i13 = load i64, i64* %1, align 8
  %11 = udiv exact i64 %diff.i13, 1
  store i64 %11, i64* %2, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit15"

"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit15": ; preds = %bb6.i11, %bb3.i7
  %12 = load i64, i64* %2, align 8
  br label %bb1

bb1:                                              ; preds = %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit15"
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %13 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h53580812e28ac9e3E"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %s)
  store { i64, i32 } %13, { i64, i32 }* %_5, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %14 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1
  %15 = load i32, i32* %14, align 8, !range !4
  %16 = sub i32 %15, 1114112
  %17 = icmp eq i32 %16, 0
  %_7 = select i1 %17, i64 0, i64 1
  %18 = icmp eq i64 %_7, 1
  br i1 %18, label %bb3, label %bb8

bb3:                                              ; preds = %bb2
  %19 = bitcast { i64, i32 }* %_5 to i64*
  %i = load i64, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1
  %c = load i32, i32* %20, align 8, !range !9
  %_11 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1
  %21 = bitcast { i8*, i8* }* %_11 to i8**
  %start1.i = load i8*, i8** %21, align 8, !nonnull !6
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i)
  %22 = icmp eq i64 1, 0
  br i1 %22, label %bb3.i, label %bb6.i

bb3.i:                                            ; preds = %bb3
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1
  %_9.i = load i8*, i8** %23, align 8
  %_8.i = ptrtoint i8* %_9.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_11.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i)
  %_10.i = ptrtoint i8* %_11.i to i64
  %24 = sub i64 %_8.i, %_10.i
  store i64 %24, i64* %4, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit"

bb6.i:                                            ; preds = %bb3
  %25 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1
  %_15.i = load i8*, i8** %25, align 8
  %_14.i = ptrtoint i8* %_15.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2669abca1f08135E"(i8* nonnull %start1.i)
  %_16.i = ptrtoint i8* %_17.i to i64
  %26 = sub nuw i64 %_14.i, %_16.i
  store i64 %26, i64* %3, align 8
  %diff.i = load i64, i64* %3, align 8
  %27 = udiv exact i64 %diff.i, 1
  store i64 %27, i64* %4, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit"

"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit": ; preds = %bb6.i, %bb3.i
  %28 = load i64, i64* %4, align 8
  br label %bb4

bb8:                                              ; preds = %bb2
  %29 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %29, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  ret void

bb4:                                              ; preds = %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h163ab480b3f5e220E.exit"
  %char_len = sub i64 %12, %28
  %_16 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* %self to %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]"*
; call <F as core::str::pattern::MultiCharEq>::matches
  %_15 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17h7aab98e272183766E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]"* nonnull align 1 %_16, i32 %c)
  br label %bb5

bb5:                                              ; preds = %bb4
  br i1 %_15, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %_23 = add i64 %i, %char_len
  %30 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %31 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %30, i32 0, i32 1
  store i64 %i, i64* %31, align 8
  %32 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %33 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %32, i32 0, i32 2
  store i64 %_23, i64* %33, align 8
  %34 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %34, align 8
  br label %bb9

bb6:                                              ; preds = %bb5
  %_19 = add i64 %i, %char_len
  %35 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %36 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %35, i32 0, i32 1
  store i64 %i, i64* %36, align 8
  %37 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %38 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %37, i32 0, i32 2
  store i64 %_19, i64* %38, align 8
  %39 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 0, i64* %39, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb6
  br label %bb10
}

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd28467a99e0f4855E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
  %0 = call { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17hbe6b2c7a9bd4473fE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <core::slice::iter::ChunksExact<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN98_$LT$core..slice..iter..ChunksExact$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9627332fef6ec540E"(%"core::slice::iter::ChunksExact<u8>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_8 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast %"core::slice::iter::ChunksExact<u8>"* %self to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !6
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_4.1 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds %"core::slice::iter::ChunksExact<u8>", %"core::slice::iter::ChunksExact<u8>"* %self, i32 0, i32 2
  %_5 = load i64, i64* %4, align 8
  %_2 = icmp ult i64 %_4.1, %_5
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %5 = bitcast %"core::slice::iter::ChunksExact<u8>"* %self to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %_9.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !6
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %_9.1 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds %"core::slice::iter::ChunksExact<u8>", %"core::slice::iter::ChunksExact<u8>"* %self, i32 0, i32 2
  %_10 = load i64, i64* %8, align 8
; call core::slice::<impl [T]>::split_at
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8split_at17hb5f4cb1b326289d9E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) dereferenceable(32) %_8, [0 x i8]* nonnull align 1 %_9.0, i64 %_9.1, i64 %_10)
  br label %bb3

bb1:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %9, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { i8*, i64 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64 } %14, i64 %13, 1
  ret { i8*, i64 } %15

bb3:                                              ; preds = %bb2
  %16 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_8 to { [0 x i8]*, i64 }*
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0
  %fst.0 = load [0 x i8]*, [0 x i8]** %17, align 8, !nonnull !6
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1
  %fst.1 = load i64, i64* %18, align 8
  %19 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_8, i32 0, i32 1
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 0
  %snd.0 = load [0 x i8]*, [0 x i8]** %20, align 8, !nonnull !6
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 1
  %snd.1 = load i64, i64* %21, align 8
  %22 = bitcast %"core::slice::iter::ChunksExact<u8>"* %self to { [0 x i8]*, i64 }*
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 0
  store [0 x i8]* %snd.0, [0 x i8]** %23, align 8
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 1
  store i64 %snd.1, i64* %24, align 8
  %25 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 0
  store [0 x i8]* %fst.0, [0 x i8]** %26, align 8
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 1
  store i64 %fst.1, i64* %27, align 8
  br label %bb4
}

; <core::iter::sources::once::Once<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define i32 @"_ZN99_$LT$core..iter..sources..once..Once$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hdf0554f37c1bb87cE"(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
; call <core::option::IntoIter<A> as core::iter::traits::iterator::Iterator>::next
  %0 = call i32 @"_ZN90_$LT$core..option..IntoIter$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc0faa43dba513b24E"(i32* align 4 dereferenceable(4) %self), !range !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17hc5e673ddd913682eE"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::CharPredicateSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"core::str::pattern::CharPredicateSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* %self to %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"*
; call core::str::pattern::Searcher::next_match
  call void @_ZN4core3str7pattern8Searcher10next_match17h26fdb87801680197E(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::MultiCharEqSearcher<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]>"* align 8 dereferenceable(40) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; rustc_demangle::legacy::demangle
; Function Attrs: nonlazybind uwtable
define internal void @_ZN14rustc_demangle6legacy8demangle17h83495f8ef0ba9165E(%"core::result::Result<(legacy::Demangle, &str), ()>"* noalias nocapture sret(%"core::result::Result<(legacy::Demangle, &str), ()>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %_90 = alloca %"legacy::Demangle", align 8
  %_89 = alloca { %"legacy::Demangle", { [0 x i8]*, i64 } }, align 8
  %_79 = alloca i32, align 4
  %_74 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_71 = alloca { i64, i64 }, align 8
  %_61 = alloca i32, align 4
  %_53 = alloca i32*, align 8
  %_48 = alloca { i64, i64 }, align 8
  %d = alloca i32, align 4
  %_43 = alloca { i32, i32 }, align 4
  %len = alloca i64, align 8
  %_29 = alloca i32, align 4
  %c = alloca i32, align 4
  %chars = alloca { i8*, i8* }, align 8
  %elements = alloca i64, align 8
  %_22 = alloca { i8*, i8* }, align 8
  %_19 = alloca i64, align 8
  %_13 = alloca i64, align 8
  %_8 = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca i64, align 8
  %inner = alloca { [0 x i8]*, i64 }, align 8
; call core::str::<impl str>::starts_with
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hc717f29711ba7aaaE"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc809 to [0 x i8]*), i64 3)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call core::str::<impl str>::starts_with
  %_9 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hc717f29711ba7aaaE"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc812 to [0 x i8]*), i64 2)
  br label %bb5

bb2:                                              ; preds = %bb1
  store i64 3, i64* %_7, align 8
  %1 = load i64, i64* %_7, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, i64 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc811 to %"core::panic::location::Location"*))
  %_5.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  store [0 x i8]* %_5.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  store i64 %_5.1, i64* %4, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  %_23.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !6
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  %_23.1 = load i64, i64* %6, align 8
; call core::str::<impl str>::bytes
  %7 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h7ba8043217c2c4a8E"([0 x i8]* nonnull align 1 %_23.0, i64 %_23.1)
  store { i8*, i8* } %7, { i8*, i8* }* %_22, align 8
  br label %bb15

bb5:                                              ; preds = %bb4
  br i1 %_9, label %bb6, label %bb8

bb8:                                              ; preds = %bb5
; call core::str::<impl str>::starts_with
  %_15 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hc717f29711ba7aaaE"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc815 to [0 x i8]*), i64 4)
  br label %bb9

bb6:                                              ; preds = %bb5
  store i64 2, i64* %_13, align 8
  %8 = load i64, i64* %_13, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %9 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, i64 %8, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc814 to %"core::panic::location::Location"*))
  %_11.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_11.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb7

bb7:                                              ; preds = %bb6
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_8, i32 0, i32 0
  store [0 x i8]* %_11.0, [0 x i8]** %10, align 8
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_8, i32 0, i32 1
  store i64 %_11.1, i64* %11, align 8
  br label %bb13

bb13:                                             ; preds = %bb11, %bb7
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_8, i32 0, i32 0
  %13 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !6
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_8, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  store [0 x i8]* %13, [0 x i8]** %16, align 8
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  store i64 %15, i64* %17, align 8
  br label %bb14

bb9:                                              ; preds = %bb8
  br i1 %_15, label %bb10, label %bb12

bb12:                                             ; preds = %bb9
  %18 = bitcast %"core::result::Result<(legacy::Demangle, &str), ()>"* %0 to {}**
  store {}* null, {}** %18, align 8
  br label %bb63

bb10:                                             ; preds = %bb9
  store i64 4, i64* %_19, align 8
  %19 = load i64, i64* %_19, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %20 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, i64 %19, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc817 to %"core::panic::location::Location"*))
  %_17.0 = extractvalue { [0 x i8]*, i64 } %20, 0
  %_17.1 = extractvalue { [0 x i8]*, i64 } %20, 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_8, i32 0, i32 0
  store [0 x i8]* %_17.0, [0 x i8]** %21, align 8
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_8, i32 0, i32 1
  store i64 %_17.1, i64* %22, align 8
  br label %bb13

bb15:                                             ; preds = %bb14
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::any
  %_20 = call zeroext i1 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hbc261904f1c74b27E"({ i8*, i8* }* align 8 dereferenceable(16) %_22)
  br label %bb16

bb16:                                             ; preds = %bb15
  br i1 %_20, label %bb17, label %bb18

bb18:                                             ; preds = %bb16
  store i64 0, i64* %elements, align 8
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  %_27.0 = load [0 x i8]*, [0 x i8]** %23, align 8, !nonnull !6
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  %_27.1 = load i64, i64* %24, align 8
; call core::str::<impl str>::chars
  %25 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %_27.0, i64 %_27.1)
  store { i8*, i8* } %25, { i8*, i8* }* %chars, align 8
  br label %bb19

bb17:                                             ; preds = %bb16
  %26 = bitcast %"core::result::Result<(legacy::Demangle, &str), ()>"* %0 to {}**
  store {}* null, {}** %26, align 8
  br label %bb63

bb63:                                             ; preds = %bb12, %bb62, %bb46, %bb40, %bb59, %bb29, %bb25, %bb17
  ret void

bb19:                                             ; preds = %bb18
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_31 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !range !4
  br label %bb20

bb20:                                             ; preds = %bb19
; call core::option::Option<T>::ok_or
  %_30 = call i32 @"_ZN4core6option15Option$LT$T$GT$5ok_or17h687a3258cde42d6fE"(i32 %_31), !range !4
  br label %bb21

bb21:                                             ; preds = %bb20
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %27 = call i32 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h81b60cced47ae1a7E"(i32 %_30), !range !4
  store i32 %27, i32* %_29, align 4
  br label %bb22

bb22:                                             ; preds = %bb21
  %28 = load i32, i32* %_29, align 4, !range !4
  %29 = sub i32 %28, 1114112
  %30 = icmp eq i32 %29, 0
  %_34 = select i1 %30, i64 1, i64 0
  switch i64 %_34, label %bb24 [
    i64 0, label %bb23
    i64 1, label %bb25
  ]

bb24:                                             ; preds = %bb22
  unreachable

bb23:                                             ; preds = %bb22
  %val = load i32, i32* %_29, align 4, !range !9
  store i32 %val, i32* %c, align 4
  br label %bb26

bb25:                                             ; preds = %bb22
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3d50551a86845544E"(%"core::result::Result<(legacy::Demangle, &str), ()>"* noalias nocapture sret(%"core::result::Result<(legacy::Demangle, &str), ()>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc819 to %"core::panic::location::Location"*))
  br label %bb63

bb26:                                             ; preds = %bb60, %bb23
  %_38 = load i32, i32* %c, align 4, !range !9
  %31 = icmp eq i32 %_38, 69
  br i1 %31, label %bb61, label %bb27

bb61:                                             ; preds = %bb26
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  %_91.0 = load [0 x i8]*, [0 x i8]** %32, align 8, !nonnull !6
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  %_91.1 = load i64, i64* %33, align 8
  %_92 = load i64, i64* %elements, align 8
  %34 = bitcast %"legacy::Demangle"* %_90 to { [0 x i8]*, i64 }*
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 0
  store [0 x i8]* %_91.0, [0 x i8]** %35, align 8
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 1
  store i64 %_91.1, i64* %36, align 8
  %37 = getelementptr inbounds %"legacy::Demangle", %"legacy::Demangle"* %_90, i32 0, i32 1
  store i64 %_92, i64* %37, align 8
; call core::str::iter::Chars::as_str
  %38 = call { [0 x i8]*, i64 } @_ZN4core3str4iter5Chars6as_str17hef705208b8aa219eE({ i8*, i8* }* align 8 dereferenceable(16) %chars)
  %_94.0 = extractvalue { [0 x i8]*, i64 } %38, 0
  %_94.1 = extractvalue { [0 x i8]*, i64 } %38, 1
  br label %bb62

bb27:                                             ; preds = %bb26
  %_41 = load i32, i32* %c, align 4, !range !9
; call core::char::methods::<impl char>::is_digit
  %_40 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_digit17ha1909f5c560863b4E"(i32 %_41, i32 10)
  br label %bb28

bb28:                                             ; preds = %bb27
  %_39 = xor i1 %_40, true
  br i1 %_39, label %bb29, label %bb30

bb30:                                             ; preds = %bb28
  store i64 0, i64* %len, align 8
  br label %bb31

bb29:                                             ; preds = %bb28
  %39 = bitcast %"core::result::Result<(legacy::Demangle, &str), ()>"* %0 to {}**
  store {}* null, {}** %39, align 8
  br label %bb63

bb31:                                             ; preds = %bb44, %bb30
  %_44 = load i32, i32* %c, align 4, !range !9
; call core::char::methods::<impl char>::to_digit
  %40 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hf0ad4b1322192492E"(i32 %_44, i32 10)
  store { i32, i32 } %40, { i32, i32 }* %_43, align 4
  br label %bb32

bb32:                                             ; preds = %bb31
  %41 = bitcast { i32, i32 }* %_43 to i32*
  %42 = load i32, i32* %41, align 4, !range !24
  %_45 = zext i32 %42 to i64
  %43 = icmp eq i64 %_45, 1
  br i1 %43, label %bb33, label %bb47

bb33:                                             ; preds = %bb32
  %44 = bitcast { i32, i32 }* %_43 to %"core::option::Option<u32>::Some"*
  %45 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %d, align 4
  %_52 = load i64, i64* %len, align 8
; call core::num::<impl usize>::checked_mul
  %47 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17ha878e85f9d206771E"(i64 %_52, i64 10)
  %_51.0 = extractvalue { i64, i64 } %47, 0
  %_51.1 = extractvalue { i64, i64 } %47, 1
  br label %bb34

bb47:                                             ; preds = %bb32
  %_72 = load i64, i64* %len, align 8
  %48 = bitcast { i64, i64 }* %_71 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_71, i32 0, i32 1
  store i64 %_72, i64* %49, align 8
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_71, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_71, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %54 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h88717dd03e83ae96E"(i64 %51, i64 %53)
  %_70.0 = extractvalue { i64, i64 } %54, 0
  %_70.1 = extractvalue { i64, i64 } %54, 1
  br label %bb48

bb48:                                             ; preds = %bb47
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_70.0, i64* %55, align 8
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_70.1, i64* %56, align 8
  br label %bb49

bb49:                                             ; preds = %bb57, %bb48
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %57 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2263241b25a82c2eE"({ i64, i64 }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %57, { i64, i64 }* %_74, align 8
  br label %bb50

bb50:                                             ; preds = %bb49
  %58 = bitcast { i64, i64 }* %_74 to i64*
  %_77 = load i64, i64* %58, align 8, !range !5
  switch i64 %_77, label %bb52 [
    i64 0, label %bb53
    i64 1, label %bb51
  ]

bb52:                                             ; preds = %bb50
  unreachable

bb53:                                             ; preds = %bb50
  %59 = load i64, i64* %elements, align 8
  %60 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %59, i64 1)
  %_88.0 = extractvalue { i64, i1 } %60, 0
  %_88.1 = extractvalue { i64, i1 } %60, 1
  %61 = call i1 @llvm.expect.i1(i1 %_88.1, i1 false)
  br i1 %61, label %panic, label %bb60

bb51:                                             ; preds = %bb50
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_81 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !range !4
  br label %bb54

bb54:                                             ; preds = %bb51
; call core::option::Option<T>::ok_or
  %_80 = call i32 @"_ZN4core6option15Option$LT$T$GT$5ok_or17h687a3258cde42d6fE"(i32 %_81), !range !4
  br label %bb55

bb55:                                             ; preds = %bb54
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %62 = call i32 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h81b60cced47ae1a7E"(i32 %_80), !range !4
  store i32 %62, i32* %_79, align 4
  br label %bb56

bb56:                                             ; preds = %bb55
  %63 = load i32, i32* %_79, align 4, !range !4
  %64 = sub i32 %63, 1114112
  %65 = icmp eq i32 %64, 0
  %_84 = select i1 %65, i64 1, i64 0
  switch i64 %_84, label %bb58 [
    i64 0, label %bb57
    i64 1, label %bb59
  ]

bb58:                                             ; preds = %bb56
  unreachable

bb57:                                             ; preds = %bb56
  %val1 = load i32, i32* %_79, align 4, !range !9
  store i32 %val1, i32* %c, align 4
  br label %bb49

bb59:                                             ; preds = %bb56
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3d50551a86845544E"(%"core::result::Result<(legacy::Demangle, &str), ()>"* noalias nocapture sret(%"core::result::Result<(legacy::Demangle, &str), ()>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc821 to %"core::panic::location::Location"*))
  br label %bb63

bb60:                                             ; preds = %bb53
  store i64 %_88.0, i64* %elements, align 8
  br label %bb26

panic:                                            ; preds = %bb53
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc823 to %"core::panic::location::Location"*)) #12
  unreachable

bb34:                                             ; preds = %bb33
  store i32* %d, i32** %_53, align 8
  %66 = load i32*, i32** %_53, align 8, !nonnull !6
; call core::option::Option<T>::and_then
  %67 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h5a24b6cb548a266aE"(i64 %_51.0, i64 %_51.1, i32* align 4 dereferenceable(4) %66)
  %_50.0 = extractvalue { i64, i64 } %67, 0
  %_50.1 = extractvalue { i64, i64 } %67, 1
  br label %bb35

bb35:                                             ; preds = %bb34
; call core::option::Option<T>::ok_or
  %68 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h091390f384d7e4a4E"(i64 %_50.0, i64 %_50.1)
  %_49.0 = extractvalue { i64, i64 } %68, 0
  %_49.1 = extractvalue { i64, i64 } %68, 1
  br label %bb36

bb36:                                             ; preds = %bb35
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %69 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h443a1d5e2a03c13bE"(i64 %_49.0, i64 %_49.1)
  store { i64, i64 } %69, { i64, i64 }* %_48, align 8
  br label %bb37

bb37:                                             ; preds = %bb36
  %70 = bitcast { i64, i64 }* %_48 to i64*
  %_56 = load i64, i64* %70, align 8, !range !5
  switch i64 %_56, label %bb39 [
    i64 0, label %bb38
    i64 1, label %bb40
  ]

bb39:                                             ; preds = %bb37
  unreachable

bb38:                                             ; preds = %bb37
  %71 = bitcast { i64, i64 }* %_48 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"*
  %72 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"* %71, i32 0, i32 1
  %val2 = load i64, i64* %72, align 8
  store i64 %val2, i64* %len, align 8
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_63 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !range !4
  br label %bb41

bb40:                                             ; preds = %bb37
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3d50551a86845544E"(%"core::result::Result<(legacy::Demangle, &str), ()>"* noalias nocapture sret(%"core::result::Result<(legacy::Demangle, &str), ()>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc825 to %"core::panic::location::Location"*))
  br label %bb63

bb41:                                             ; preds = %bb38
; call core::option::Option<T>::ok_or
  %_62 = call i32 @"_ZN4core6option15Option$LT$T$GT$5ok_or17h687a3258cde42d6fE"(i32 %_63), !range !4
  br label %bb42

bb42:                                             ; preds = %bb41
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %73 = call i32 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h81b60cced47ae1a7E"(i32 %_62), !range !4
  store i32 %73, i32* %_61, align 4
  br label %bb43

bb43:                                             ; preds = %bb42
  %74 = load i32, i32* %_61, align 4, !range !4
  %75 = sub i32 %74, 1114112
  %76 = icmp eq i32 %75, 0
  %_66 = select i1 %76, i64 1, i64 0
  switch i64 %_66, label %bb45 [
    i64 0, label %bb44
    i64 1, label %bb46
  ]

bb45:                                             ; preds = %bb43
  unreachable

bb44:                                             ; preds = %bb43
  %val3 = load i32, i32* %_61, align 4, !range !9
  store i32 %val3, i32* %c, align 4
  br label %bb31

bb46:                                             ; preds = %bb43
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3d50551a86845544E"(%"core::result::Result<(legacy::Demangle, &str), ()>"* noalias nocapture sret(%"core::result::Result<(legacy::Demangle, &str), ()>") dereferenceable(40) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc827 to %"core::panic::location::Location"*))
  br label %bb63

bb62:                                             ; preds = %bb61
  %77 = bitcast { %"legacy::Demangle", { [0 x i8]*, i64 } }* %_89 to %"legacy::Demangle"*
  %78 = bitcast %"legacy::Demangle"* %77 to i8*
  %79 = bitcast %"legacy::Demangle"* %_90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false)
  %80 = getelementptr inbounds { %"legacy::Demangle", { [0 x i8]*, i64 } }, { %"legacy::Demangle", { [0 x i8]*, i64 } }* %_89, i32 0, i32 1
  %81 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %80, i32 0, i32 0
  store [0 x i8]* %_94.0, [0 x i8]** %81, align 8
  %82 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %80, i32 0, i32 1
  store i64 %_94.1, i64* %82, align 8
  %83 = bitcast %"core::result::Result<(legacy::Demangle, &str), ()>"* %0 to %"core::result::Result<(legacy::Demangle, &str), ()>::Ok"*
  %84 = bitcast %"core::result::Result<(legacy::Demangle, &str), ()>::Ok"* %83 to { %"legacy::Demangle", { [0 x i8]*, i64 } }*
  %85 = bitcast { %"legacy::Demangle", { [0 x i8]*, i64 } }* %84 to i8*
  %86 = bitcast { %"legacy::Demangle", { [0 x i8]*, i64 } }* %_89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 40, i1 false)
  br label %bb63
}

; rustc_demangle::legacy::demangle::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle6legacy8demangle28_$u7b$$u7b$closure$u7d$$u7d$17h1040d5eca62ea27eE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:67:26: 67:43]"* nonnull align 1 %_1, i8 %c) unnamed_addr #1 {
start:
  %_3 = and i8 %c, -128
  %0 = icmp ne i8 %_3, 0
  ret i1 %0
}

; rustc_demangle::legacy::demangle::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN14rustc_demangle6legacy8demangle28_$u7b$$u7b$closure$u7d$$u7d$17h1c12283cafbcb3caE"(i32* align 4 dereferenceable(4) %_1, i64 %len) unnamed_addr #1 {
start:
  %_5 = load i32, i32* %_1, align 4
  %_4 = zext i32 %_5 to i64
; call core::num::<impl usize>::checked_add
  %0 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h125bce0a72c69c92E"(i64 %len, i64 %_4)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; rustc_demangle::legacy::is_rust_hash
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle6legacy12is_rust_hash17h5380bca317f1f6eaE([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %_10 = alloca i64, align 8
  %_6 = alloca { i8*, i8* }, align 8
  %0 = alloca i8, align 1
; call core::str::<impl str>::starts_with
  %_2 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h17869e050714381eE"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, i32 104)
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb1

bb1:                                              ; preds = %bb4
  store i8 0, i8* %0, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  store i64 1, i64* %_10, align 8
  %1 = load i64, i64* %_10, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, i64 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc829 to %"core::panic::location::Location"*))
  %_8.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb5

bb5:                                              ; preds = %bb2
; call core::str::<impl str>::chars
  %3 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %_8.0, i64 %_8.1)
  store { i8*, i8* } %3, { i8*, i8* }* %_6, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::iter::traits::iterator::Iterator::all
  %_4 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17hfe610d2dd9fa0a3cE({ i8*, i8* }* align 8 dereferenceable(16) %_6)
  br label %bb7

bb7:                                              ; preds = %bb6
  %4 = zext i1 %_4 to i8
  store i8 %4, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb7
  %5 = load i8, i8* %0, align 1, !range !2
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; rustc_demangle::legacy::is_rust_hash::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle6legacy12is_rust_hash28_$u7b$$u7b$closure$u7d$$u7d$17he46e7eb7324329a5E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:102:46: 102:64]"* nonnull align 1 %_1, i32 %c) unnamed_addr #1 {
start:
; call core::char::methods::<impl char>::is_digit
  %0 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_digit17ha1909f5c560863b4E"(i32 %c, i32 16)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17h43407c2e07fac12cE"(%"legacy::Demangle"* align 8 dereferenceable(24) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i128, align 8
  %_221 = alloca i8, align 1
  %_219 = alloca i64, align 8
  %_209 = alloca i64, align 8
  %_202 = alloca i8, align 1
  %_197 = alloca { i64, i64 }, align 8
  %_188 = alloca i8, align 1
  %_179 = alloca i8, align 1
  %c = alloca i32, align 4
  %_171 = alloca { i8, i32 }, align 4
  %_169 = alloca %"core::result::Result<u32, core::num::error::ParseIntError>", align 4
  %_164 = alloca { i8*, i8* }, align 8
  %_161 = alloca i64, align 8
  %unescaped = alloca { [0 x i8]*, i64 }, align 8
  %_136 = alloca i64, align 8
  %_131 = alloca %"core::ops::range::RangeInclusive<usize>", align 8
  %_125 = alloca i64, align 8
  %_121 = alloca { i64, i64 }, align 8
  %_120 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_115 = alloca i64, align 8
  %_102 = alloca i8, align 1
  %_101 = alloca i64, align 8
  %_88 = alloca i8, align 1
  %_86 = alloca i64, align 8
  %_82 = alloca { i8*, i8* }, align 8
  %_80 = alloca i32, align 4
  %_77 = alloca i64, align 8
  %_62 = alloca i8, align 1
  %_50 = alloca i8, align 1
  %_49 = alloca i8, align 1
  %_47 = alloca i64, align 8
  %_41 = alloca i64, align 8
  %_30 = alloca i64, align 8
  %_26 = alloca %"core::result::Result<usize, core::num::error::ParseIntError>", align 8
  %_24 = alloca i64, align 8
  %_18 = alloca { i8*, i8* }, align 8
  %rest = alloca { [0 x i8]*, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  %inner = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca i8, align 1
  %3 = bitcast %"legacy::Demangle"* %self to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !6
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  store [0 x i8]* %5, [0 x i8]** %8, align 8
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"legacy::Demangle", %"legacy::Demangle"* %self, i32 0, i32 1
  %_6 = load i64, i64* %10, align 8
  %11 = bitcast { i64, i64 }* %_5 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %_6, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %17 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h88717dd03e83ae96E"(i64 %14, i64 %16)
  %_4.0 = extractvalue { i64, i64 } %17, 0
  %_4.1 = extractvalue { i64, i64 } %17, 1
  br label %bb1

bb1:                                              ; preds = %start
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_4.0, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_4.1, i64* %19, align 8
  br label %bb2

bb2:                                              ; preds = %bb131, %bb1
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %20 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2263241b25a82c2eE"({ i64, i64 }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %20, { i64, i64 }* %_8, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %21 = bitcast { i64, i64 }* %_8 to i64*
  %_11 = load i64, i64* %21, align 8, !range !5
  switch i64 %_11, label %bb5 [
    i64 0, label %bb134
    i64 1, label %bb4
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb134:                                            ; preds = %bb24, %bb3
  store i8 0, i8* %2, align 1
  br label %bb135

bb4:                                              ; preds = %bb3
  %22 = bitcast { i64, i64 }* %_8 to %"core::option::Option<usize>::Some"*
  %23 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %22, i32 0, i32 1
  %element = load i64, i64* %23, align 8
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  %25 = load [0 x i8]*, [0 x i8]** %24, align 8, !nonnull !6
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  store [0 x i8]* %25, [0 x i8]** %28, align 8
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  store i64 %27, i64* %29, align 8
  br label %bb6

bb6:                                              ; preds = %bb12, %bb4
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_19.0 = load [0 x i8]*, [0 x i8]** %30, align 8, !nonnull !6
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_19.1 = load i64, i64* %31, align 8
; call core::str::<impl str>::chars
  %32 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %_19.0, i64 %_19.1)
  store { i8*, i8* } %32, { i8*, i8* }* %_18, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_16 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %_18), !range !4
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::option::Option<T>::unwrap
  %_15 = call i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hdfcc164e87e1f304E"(i32 %_16, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc831 to %"core::panic::location::Location"*)), !range !9
  br label %bb9

bb9:                                              ; preds = %bb8
; call core::char::methods::<impl char>::is_digit
  %_14 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_digit17ha1909f5c560863b4E"(i32 %_15, i32 10)
  br label %bb10

bb10:                                             ; preds = %bb9
  br i1 %_14, label %bb11, label %bb13

bb13:                                             ; preds = %bb10
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  %_29.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !6
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  %_29.1 = load i64, i64* %34, align 8
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  %_33.0 = load [0 x i8]*, [0 x i8]** %35, align 8, !nonnull !6
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  %_33.1 = load i64, i64* %36, align 8
; call core::str::<impl str>::len
  %_32 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %_33.0, i64 %_33.1)
  br label %bb14

bb11:                                             ; preds = %bb10
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_23.0 = load [0 x i8]*, [0 x i8]** %37, align 8, !nonnull !6
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_23.1 = load i64, i64* %38, align 8
  store i64 1, i64* %_24, align 8
  %39 = load i64, i64* %_24, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %40 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %_23.0, i64 %_23.1, i64 %39, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc833 to %"core::panic::location::Location"*))
  %_22.0 = extractvalue { [0 x i8]*, i64 } %40, 0
  %_22.1 = extractvalue { [0 x i8]*, i64 } %40, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  store [0 x i8]* %_22.0, [0 x i8]** %41, align 8
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  store i64 %_22.1, i64* %42, align 8
  br label %bb6

bb14:                                             ; preds = %bb13
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_35.0 = load [0 x i8]*, [0 x i8]** %43, align 8, !nonnull !6
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_35.1 = load i64, i64* %44, align 8
; call core::str::<impl str>::len
  %_34 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %_35.0, i64 %_35.1)
  br label %bb15

bb15:                                             ; preds = %bb14
  %45 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_32, i64 %_34)
  %_36.0 = extractvalue { i64, i1 } %45, 0
  %_36.1 = extractvalue { i64, i1 } %45, 1
  %46 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false)
  br i1 %46, label %panic, label %bb16

bb16:                                             ; preds = %bb15
  store i64 %_36.0, i64* %_30, align 8
  %47 = load i64, i64* %_30, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %48 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h1a05bb88631985ceE"([0 x i8]* nonnull align 1 %_29.0, i64 %_29.1, i64 %47, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc837 to %"core::panic::location::Location"*))
  %_28.0 = extractvalue { [0 x i8]*, i64 } %48, 0
  %_28.1 = extractvalue { [0 x i8]*, i64 } %48, 1
  br label %bb17

panic:                                            ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc835 to %"core::panic::location::Location"*)) #12
  unreachable

bb17:                                             ; preds = %bb16
; call core::str::<impl str>::parse
  %49 = call i128 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h4b528cbc76aacb5aE"([0 x i8]* nonnull align 1 %_28.0, i64 %_28.1)
  store i128 %49, i128* %1, align 8
  %50 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %_26 to i8*
  %51 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false)
  br label %bb18

bb18:                                             ; preds = %bb17
  %52 = bitcast %"core::result::Result<usize, core::num::error::ParseIntError>"* %_26 to i128*
  %53 = load i128, i128* %52, align 8
; call core::result::Result<T,E>::unwrap
  %i = call i64 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbbb855763625dd57E"(i128 %53, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc839 to %"core::panic::location::Location"*))
  br label %bb19

bb19:                                             ; preds = %bb18
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_40.0 = load [0 x i8]*, [0 x i8]** %54, align 8, !nonnull !6
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_40.1 = load i64, i64* %55, align 8
  store i64 %i, i64* %_41, align 8
  %56 = load i64, i64* %_41, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %57 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %_40.0, i64 %_40.1, i64 %56, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc841 to %"core::panic::location::Location"*))
  %_39.0 = extractvalue { [0 x i8]*, i64 } %57, 0
  %_39.1 = extractvalue { [0 x i8]*, i64 } %57, 1
  br label %bb20

bb20:                                             ; preds = %bb19
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  store [0 x i8]* %_39.0, [0 x i8]** %58, align 8
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  store i64 %_39.1, i64* %59, align 8
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_46.0 = load [0 x i8]*, [0 x i8]** %60, align 8, !nonnull !6
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_46.1 = load i64, i64* %61, align 8
  store i64 %i, i64* %_47, align 8
  %62 = load i64, i64* %_47, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %63 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h1a05bb88631985ceE"([0 x i8]* nonnull align 1 %_46.0, i64 %_46.1, i64 %62, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc843 to %"core::panic::location::Location"*))
  %_45.0 = extractvalue { [0 x i8]*, i64 } %63, 0
  %_45.1 = extractvalue { [0 x i8]*, i64 } %63, 1
  br label %bb21

bb21:                                             ; preds = %bb20
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  store [0 x i8]* %_45.0, [0 x i8]** %64, align 8
  %65 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  store i64 %_45.1, i64* %65, align 8
; call core::fmt::Formatter::alternate
  %_51 = call zeroext i1 @_ZN4core3fmt9Formatter9alternate17h4cc3cea3d0be51c9E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb28

bb28:                                             ; preds = %bb21
  br i1 %_51, label %bb26, label %bb25

bb25:                                             ; preds = %bb28
  store i8 0, i8* %_50, align 1
  br label %bb27

bb26:                                             ; preds = %bb28
  %66 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %element, i64 1)
  %_56.0 = extractvalue { i64, i1 } %66, 0
  %_56.1 = extractvalue { i64, i1 } %66, 1
  %67 = call i1 @llvm.expect.i1(i1 %_56.1, i1 false)
  br i1 %67, label %panic1, label %bb29

bb29:                                             ; preds = %bb26
  %68 = getelementptr inbounds %"legacy::Demangle", %"legacy::Demangle"* %self, i32 0, i32 1
  %_57 = load i64, i64* %68, align 8
  %_53 = icmp eq i64 %_56.0, %_57
  %69 = zext i1 %_53 to i8
  store i8 %69, i8* %_50, align 1
  br label %bb27

panic1:                                           ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc845 to %"core::panic::location::Location"*)) #12
  unreachable

bb27:                                             ; preds = %bb25, %bb29
  %70 = load i8, i8* %_50, align 1, !range !2
  %71 = trunc i8 %70 to i1
  br i1 %71, label %bb23, label %bb22

bb22:                                             ; preds = %bb27
  store i8 0, i8* %_49, align 1
  br label %bb24

bb23:                                             ; preds = %bb27
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_59.0 = load [0 x i8]*, [0 x i8]** %72, align 8, !nonnull !6
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_59.1 = load i64, i64* %73, align 8
; call rustc_demangle::legacy::is_rust_hash
  %_58 = call zeroext i1 @_ZN14rustc_demangle6legacy12is_rust_hash17h5380bca317f1f6eaE([0 x i8]* nonnull align 1 %_59.0, i64 %_59.1)
  br label %bb30

bb30:                                             ; preds = %bb23
  %74 = zext i1 %_58 to i8
  store i8 %74, i8* %_49, align 1
  br label %bb24

bb24:                                             ; preds = %bb22, %bb30
  %75 = load i8, i8* %_49, align 1, !range !2
  %76 = trunc i8 %75 to i1
  br i1 %76, label %bb134, label %bb31

bb31:                                             ; preds = %bb24
  %77 = icmp eq i64 %element, 0
  br i1 %77, label %bb37, label %bb32

bb37:                                             ; preds = %bb34, %bb31
  %78 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_72.0 = load [0 x i8]*, [0 x i8]** %78, align 8, !nonnull !6
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_72.1 = load i64, i64* %79, align 8
; call core::str::<impl str>::starts_with
  %_71 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hc717f29711ba7aaaE"([0 x i8]* nonnull align 1 %_72.0, i64 %_72.1, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc849 to [0 x i8]*), i64 2)
  br label %bb38

bb32:                                             ; preds = %bb31
; call core::fmt::Formatter::write_str
  %_63 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1257 to [0 x i8]*), i64 2)
  br label %bb33

bb33:                                             ; preds = %bb32
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %80 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_63)
  %81 = zext i1 %80 to i8
  store i8 %81, i8* %_62, align 1
  br label %bb34

bb34:                                             ; preds = %bb33
  %82 = load i8, i8* %_62, align 1, !range !2
  %83 = trunc i8 %82 to i1
  %_67 = zext i1 %83 to i64
  switch i64 %_67, label %bb35 [
    i64 0, label %bb37
    i64 1, label %bb36
  ]

bb35:                                             ; preds = %bb34
  unreachable

bb36:                                             ; preds = %bb34
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %84 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc848 to %"core::panic::location::Location"*))
  %85 = zext i1 %84 to i8
  store i8 %85, i8* %2, align 1
  br label %bb135

bb135:                                            ; preds = %bb134, %bb127, %bb133, %bb112, %bb118, %bb53, %bb60, %bb36
  %86 = load i8, i8* %2, align 1, !range !2
  %87 = trunc i8 %86 to i1
  ret i1 %87

bb38:                                             ; preds = %bb37
  br i1 %_71, label %bb39, label %bb41

bb41:                                             ; preds = %bb128, %bb110, %bb116, %bb54, %bb61, %bb40, %bb38
  %88 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_79.0 = load [0 x i8]*, [0 x i8]** %88, align 8, !nonnull !6
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_79.1 = load i64, i64* %89, align 8
; call core::str::<impl str>::starts_with
  %_78 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h17869e050714381eE"([0 x i8]* nonnull align 1 %_79.0, i64 %_79.1, i32 46)
  br label %bb42

bb39:                                             ; preds = %bb38
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_76.0 = load [0 x i8]*, [0 x i8]** %90, align 8, !nonnull !6
  %91 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_76.1 = load i64, i64* %91, align 8
  store i64 1, i64* %_77, align 8
  %92 = load i64, i64* %_77, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %93 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %_76.0, i64 %_76.1, i64 %92, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc851 to %"core::panic::location::Location"*))
  %_75.0 = extractvalue { [0 x i8]*, i64 } %93, 0
  %_75.1 = extractvalue { [0 x i8]*, i64 } %93, 1
  br label %bb40

bb40:                                             ; preds = %bb39
  %94 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  store [0 x i8]* %_75.0, [0 x i8]** %94, align 8
  %95 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  store i64 %_75.1, i64* %95, align 8
  br label %bb41

bb42:                                             ; preds = %bb41
  br i1 %_78, label %bb43, label %bb62

bb62:                                             ; preds = %bb42
  %96 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_117.0 = load [0 x i8]*, [0 x i8]** %96, align 8, !nonnull !6
  %97 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_117.1 = load i64, i64* %97, align 8
; call core::str::<impl str>::starts_with
  %_116 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h17869e050714381eE"([0 x i8]* nonnull align 1 %_117.0, i64 %_117.1, i32 36)
  br label %bb63

bb43:                                             ; preds = %bb42
  %98 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_85.0 = load [0 x i8]*, [0 x i8]** %98, align 8, !nonnull !6
  %99 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_85.1 = load i64, i64* %99, align 8
  store i64 1, i64* %_86, align 8
  %100 = load i64, i64* %_86, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %101 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %_85.0, i64 %_85.1, i64 %100, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc853 to %"core::panic::location::Location"*))
  %_84.0 = extractvalue { [0 x i8]*, i64 } %101, 0
  %_84.1 = extractvalue { [0 x i8]*, i64 } %101, 1
  br label %bb44

bb44:                                             ; preds = %bb43
; call core::str::<impl str>::chars
  %102 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %_84.0, i64 %_84.1)
  store { i8*, i8* } %102, { i8*, i8* }* %_82, align 8
  br label %bb45

bb45:                                             ; preds = %bb44
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %103 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %_82), !range !4
  store i32 %103, i32* %_80, align 4
  br label %bb46

bb46:                                             ; preds = %bb45
  %104 = load i32, i32* %_80, align 4, !range !4
  %105 = sub i32 %104, 1114112
  %106 = icmp eq i32 %105, 0
  %_87 = select i1 %106, i64 0, i64 1
  %107 = icmp eq i64 %_87, 1
  br i1 %107, label %bb47, label %bb55

bb47:                                             ; preds = %bb46
  %108 = load i32, i32* %_80, align 4, !range !9
  %109 = icmp eq i32 %108, 46
  br i1 %109, label %bb48, label %bb55

bb55:                                             ; preds = %bb47, %bb46
; call core::fmt::Formatter::write_str
  %_103 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc854 to [0 x i8]*), i64 1)
  br label %bb56

bb48:                                             ; preds = %bb47
; call core::fmt::Formatter::write_str
  %_89 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1257 to [0 x i8]*), i64 2)
  br label %bb49

bb56:                                             ; preds = %bb55
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %110 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_103)
  %111 = zext i1 %110 to i8
  store i8 %111, i8* %_102, align 1
  br label %bb57

bb57:                                             ; preds = %bb56
  %112 = load i8, i8* %_102, align 1, !range !2
  %113 = trunc i8 %112 to i1
  %_107 = zext i1 %113 to i64
  switch i64 %_107, label %bb59 [
    i64 0, label %bb58
    i64 1, label %bb60
  ]

bb59:                                             ; preds = %bb57
  unreachable

bb58:                                             ; preds = %bb57
  %114 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_114.0 = load [0 x i8]*, [0 x i8]** %114, align 8, !nonnull !6
  %115 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_114.1 = load i64, i64* %115, align 8
  store i64 1, i64* %_115, align 8
  %116 = load i64, i64* %_115, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %117 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %_114.0, i64 %_114.1, i64 %116, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc858 to %"core::panic::location::Location"*))
  %_113.0 = extractvalue { [0 x i8]*, i64 } %117, 0
  %_113.1 = extractvalue { [0 x i8]*, i64 } %117, 1
  br label %bb61

bb60:                                             ; preds = %bb57
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %118 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc856 to %"core::panic::location::Location"*))
  %119 = zext i1 %118 to i8
  store i8 %119, i8* %2, align 1
  br label %bb135

bb61:                                             ; preds = %bb58
  %120 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  store [0 x i8]* %_113.0, [0 x i8]** %120, align 8
  %121 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  store i64 %_113.1, i64* %121, align 8
  br label %bb41

bb49:                                             ; preds = %bb48
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %122 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_89)
  %123 = zext i1 %122 to i8
  store i8 %123, i8* %_88, align 1
  br label %bb50

bb50:                                             ; preds = %bb49
  %124 = load i8, i8* %_88, align 1, !range !2
  %125 = trunc i8 %124 to i1
  %_93 = zext i1 %125 to i64
  switch i64 %_93, label %bb52 [
    i64 0, label %bb51
    i64 1, label %bb53
  ]

bb52:                                             ; preds = %bb50
  unreachable

bb51:                                             ; preds = %bb50
  %126 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_100.0 = load [0 x i8]*, [0 x i8]** %126, align 8, !nonnull !6
  %127 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_100.1 = load i64, i64* %127, align 8
  store i64 2, i64* %_101, align 8
  %128 = load i64, i64* %_101, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %129 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %_100.0, i64 %_100.1, i64 %128, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc863 to %"core::panic::location::Location"*))
  %_99.0 = extractvalue { [0 x i8]*, i64 } %129, 0
  %_99.1 = extractvalue { [0 x i8]*, i64 } %129, 1
  br label %bb54

bb53:                                             ; preds = %bb50
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %130 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc861 to %"core::panic::location::Location"*))
  %131 = zext i1 %130 to i8
  store i8 %131, i8* %2, align 1
  br label %bb135

bb54:                                             ; preds = %bb51
  %132 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  store [0 x i8]* %_99.0, [0 x i8]** %132, align 8
  %133 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  store i64 %_99.1, i64* %133, align 8
  br label %bb41

bb63:                                             ; preds = %bb62
  br i1 %_116, label %bb64, label %bb119

bb119:                                            ; preds = %bb63
  %134 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_198.0 = load [0 x i8]*, [0 x i8]** %134, align 8, !nonnull !6
  %135 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_198.1 = load i64, i64* %135, align 8
; call core::str::<impl str>::find
  %136 = call { i64, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17h41ecc67da3de3ae3E"([0 x i8]* nonnull align 1 %_198.0, i64 %_198.1)
  store { i64, i64 } %136, { i64, i64 }* %_197, align 8
  br label %bb120

bb64:                                             ; preds = %bb63
  %137 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_124.0 = load [0 x i8]*, [0 x i8]** %137, align 8, !nonnull !6
  %138 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_124.1 = load i64, i64* %138, align 8
  store i64 1, i64* %_125, align 8
  %139 = load i64, i64* %_125, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %140 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %_124.0, i64 %_124.1, i64 %139, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc865 to %"core::panic::location::Location"*))
  %_123.0 = extractvalue { [0 x i8]*, i64 } %140, 0
  %_123.1 = extractvalue { [0 x i8]*, i64 } %140, 1
  br label %bb65

bb65:                                             ; preds = %bb64
; call core::str::<impl str>::find
  %141 = call { i64, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17hf68a4fb6da6fd210E"([0 x i8]* nonnull align 1 %_123.0, i64 %_123.1, i32 36)
  store { i64, i64 } %141, { i64, i64 }* %_121, align 8
  br label %bb66

bb66:                                             ; preds = %bb65
  %142 = bitcast { i64, i64 }* %_121 to i64*
  %_126 = load i64, i64* %142, align 8, !range !5
  %143 = icmp eq i64 %_126, 1
  br i1 %143, label %bb67, label %bb129

bb67:                                             ; preds = %bb66
  %144 = bitcast { i64, i64 }* %_121 to %"core::option::Option<usize>::Some"*
  %145 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %144, i32 0, i32 1
  %end = load i64, i64* %145, align 8
  %146 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_130.0 = load [0 x i8]*, [0 x i8]** %146, align 8, !nonnull !6
  %147 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_130.1 = load i64, i64* %147, align 8
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17he099ca828eec8451E"(%"core::ops::range::RangeInclusive<usize>"* noalias nocapture sret(%"core::ops::range::RangeInclusive<usize>") dereferenceable(24) %_131, i64 1, i64 %end)
  br label %bb68

bb129:                                            ; preds = %bb120, %bb106, %bb104, %bb103, %bb96, %bb66
  %148 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_224.0 = load [0 x i8]*, [0 x i8]** %148, align 8, !nonnull !6
  %149 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_224.1 = load i64, i64* %149, align 8
; call core::fmt::Formatter::write_str
  %_222 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 %_224.0, i64 %_224.1)
  br label %bb130

bb68:                                             ; preds = %bb67
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %150 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h91a99f476193f628E"([0 x i8]* nonnull align 1 %_130.0, i64 %_130.1, %"core::ops::range::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_131, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc867 to %"core::panic::location::Location"*))
  %_129.0 = extractvalue { [0 x i8]*, i64 } %150, 0
  %_129.1 = extractvalue { [0 x i8]*, i64 } %150, 1
  br label %bb69

bb69:                                             ; preds = %bb68
  %151 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_135.0 = load [0 x i8]*, [0 x i8]** %151, align 8, !nonnull !6
  %152 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_135.1 = load i64, i64* %152, align 8
  %153 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %end, i64 2)
  %_139.0 = extractvalue { i64, i1 } %153, 0
  %_139.1 = extractvalue { i64, i1 } %153, 1
  %154 = call i1 @llvm.expect.i1(i1 %_139.1, i1 false)
  br i1 %154, label %panic2, label %bb70

bb70:                                             ; preds = %bb69
  store i64 %_139.0, i64* %_136, align 8
  %155 = load i64, i64* %_136, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %156 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %_135.0, i64 %_135.1, i64 %155, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc871 to %"core::panic::location::Location"*))
  %_134.0 = extractvalue { [0 x i8]*, i64 } %156, 0
  %_134.1 = extractvalue { [0 x i8]*, i64 } %156, 1
  br label %bb71

panic2:                                           ; preds = %bb69
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc869 to %"core::panic::location::Location"*)) #12
  unreachable

bb71:                                             ; preds = %bb70
  %157 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_120 to { [0 x i8]*, i64 }*
  %158 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %157, i32 0, i32 0
  store [0 x i8]* %_129.0, [0 x i8]** %158, align 8
  %159 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %157, i32 0, i32 1
  store i64 %_129.1, i64* %159, align 8
  %160 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_120, i32 0, i32 1
  %161 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %160, i32 0, i32 0
  store [0 x i8]* %_134.0, [0 x i8]** %161, align 8
  %162 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %160, i32 0, i32 1
  store i64 %_134.1, i64* %162, align 8
  %163 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_120 to { [0 x i8]*, i64 }*
  %164 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %163, i32 0, i32 0
  %escape.0 = load [0 x i8]*, [0 x i8]** %164, align 8, !nonnull !6
  %165 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %163, i32 0, i32 1
  %escape.1 = load i64, i64* %165, align 8
  %166 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_120, i32 0, i32 1
  %167 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %166, i32 0, i32 0
  %after_escape.0 = load [0 x i8]*, [0 x i8]** %167, align 8, !nonnull !6
  %168 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %166, i32 0, i32 1
  %after_escape.1 = load i64, i64* %168, align 8
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_141 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h63f97119377eaa7bE"([0 x i8]* nonnull align 1 %escape.0, i64 %escape.1, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc872 to [0 x i8]*), i64 2)
  br label %bb72

bb72:                                             ; preds = %bb71
  br i1 %_141, label %bb88, label %bb73

bb73:                                             ; preds = %bb72
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_142 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h63f97119377eaa7bE"([0 x i8]* nonnull align 1 %escape.0, i64 %escape.1, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc874 to [0 x i8]*), i64 2)
  br label %bb74

bb88:                                             ; preds = %bb72
  %169 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc873 to [0 x i8]*), [0 x i8]** %169, align 8
  %170 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 1
  store i64 1, i64* %170, align 8
  br label %bb113

bb113:                                            ; preds = %bb95, %bb94, %bb93, %bb92, %bb91, %bb90, %bb89, %bb88
  %171 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 0
  %_191.0 = load [0 x i8]*, [0 x i8]** %171, align 8, !nonnull !6
  %172 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 1
  %_191.1 = load i64, i64* %172, align 8
; call core::fmt::Formatter::write_str
  %_189 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 %_191.0, i64 %_191.1)
  br label %bb114

bb74:                                             ; preds = %bb73
  br i1 %_142, label %bb89, label %bb75

bb75:                                             ; preds = %bb74
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_143 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h63f97119377eaa7bE"([0 x i8]* nonnull align 1 %escape.0, i64 %escape.1, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc876 to [0 x i8]*), i64 2)
  br label %bb76

bb89:                                             ; preds = %bb74
  %173 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1514 to [0 x i8]*), [0 x i8]** %173, align 8
  %174 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 1
  store i64 1, i64* %174, align 8
  br label %bb113

bb76:                                             ; preds = %bb75
  br i1 %_143, label %bb90, label %bb77

bb77:                                             ; preds = %bb76
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_144 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h63f97119377eaa7bE"([0 x i8]* nonnull align 1 %escape.0, i64 %escape.1, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc878 to [0 x i8]*), i64 2)
  br label %bb78

bb90:                                             ; preds = %bb76
  %175 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1504 to [0 x i8]*), [0 x i8]** %175, align 8
  %176 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 1
  store i64 1, i64* %176, align 8
  br label %bb113

bb78:                                             ; preds = %bb77
  br i1 %_144, label %bb91, label %bb79

bb79:                                             ; preds = %bb78
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_145 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h63f97119377eaa7bE"([0 x i8]* nonnull align 1 %escape.0, i64 %escape.1, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc880 to [0 x i8]*), i64 2)
  br label %bb80

bb91:                                             ; preds = %bb78
  %177 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1419 to [0 x i8]*), [0 x i8]** %177, align 8
  %178 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 1
  store i64 1, i64* %178, align 8
  br label %bb113

bb80:                                             ; preds = %bb79
  br i1 %_145, label %bb92, label %bb81

bb81:                                             ; preds = %bb80
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_146 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h63f97119377eaa7bE"([0 x i8]* nonnull align 1 %escape.0, i64 %escape.1, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc882 to [0 x i8]*), i64 2)
  br label %bb82

bb92:                                             ; preds = %bb80
  %179 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1435 to [0 x i8]*), [0 x i8]** %179, align 8
  %180 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 1
  store i64 1, i64* %180, align 8
  br label %bb113

bb82:                                             ; preds = %bb81
  br i1 %_146, label %bb93, label %bb83

bb83:                                             ; preds = %bb82
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_147 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h63f97119377eaa7bE"([0 x i8]* nonnull align 1 %escape.0, i64 %escape.1, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc884 to [0 x i8]*), i64 2)
  br label %bb84

bb93:                                             ; preds = %bb82
  %181 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1477 to [0 x i8]*), [0 x i8]** %181, align 8
  %182 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 1
  store i64 1, i64* %182, align 8
  br label %bb113

bb84:                                             ; preds = %bb83
  br i1 %_147, label %bb94, label %bb85

bb85:                                             ; preds = %bb84
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_148 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h63f97119377eaa7bE"([0 x i8]* nonnull align 1 %escape.0, i64 %escape.1, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1360 to [0 x i8]*), i64 1)
  br label %bb86

bb94:                                             ; preds = %bb84
  %183 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1486 to [0 x i8]*), [0 x i8]** %183, align 8
  %184 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 1
  store i64 1, i64* %184, align 8
  br label %bb113

bb86:                                             ; preds = %bb85
  br i1 %_148, label %bb95, label %bb87

bb87:                                             ; preds = %bb86
; call core::str::<impl str>::starts_with
  %_156 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h17869e050714381eE"([0 x i8]* nonnull align 1 %escape.0, i64 %escape.1, i32 117)
  br label %bb96

bb95:                                             ; preds = %bb86
  %185 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1483 to [0 x i8]*), [0 x i8]** %185, align 8
  %186 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %unescaped, i32 0, i32 1
  store i64 1, i64* %186, align 8
  br label %bb113

bb114:                                            ; preds = %bb113
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %187 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_189)
  %188 = zext i1 %187 to i8
  store i8 %188, i8* %_188, align 1
  br label %bb115

bb115:                                            ; preds = %bb114
  %189 = load i8, i8* %_188, align 1, !range !2
  %190 = trunc i8 %189 to i1
  %_192 = zext i1 %190 to i64
  switch i64 %_192, label %bb117 [
    i64 0, label %bb116
    i64 1, label %bb118
  ]

bb117:                                            ; preds = %bb115
  unreachable

bb116:                                            ; preds = %bb115
  %191 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  store [0 x i8]* %after_escape.0, [0 x i8]** %191, align 8
  %192 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  store i64 %after_escape.1, i64* %192, align 8
  br label %bb41

bb118:                                            ; preds = %bb115
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %193 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc889 to %"core::panic::location::Location"*))
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %2, align 1
  br label %bb135

bb96:                                             ; preds = %bb87
  br i1 %_156, label %bb97, label %bb129

bb97:                                             ; preds = %bb96
  store i64 1, i64* %_161, align 8
  %195 = load i64, i64* %_161, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %196 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %escape.0, i64 %escape.1, i64 %195, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc891 to %"core::panic::location::Location"*))
  %_159.0 = extractvalue { [0 x i8]*, i64 } %196, 0
  %_159.1 = extractvalue { [0 x i8]*, i64 } %196, 1
  br label %bb98

bb98:                                             ; preds = %bb97
; call core::str::<impl str>::chars
  %197 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %_159.0, i64 %_159.1)
  store { i8*, i8* } %197, { i8*, i8* }* %_164, align 8
  br label %bb99

bb99:                                             ; preds = %bb98
; call core::iter::traits::iterator::Iterator::all
  %all_lower_hex = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h781aacead9f0716dE({ i8*, i8* }* align 8 dereferenceable(16) %_164)
  br label %bb100

bb100:                                            ; preds = %bb99
; call core::num::<impl u32>::from_str_radix
  %198 = call i64 @"_ZN4core3num21_$LT$impl$u20$u32$GT$14from_str_radix17hdf83223652bb2387E"([0 x i8]* nonnull align 1 %_159.0, i64 %_159.1, i32 16)
  store i64 %198, i64* %0, align 8
  %199 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %_169 to i8*
  %200 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %199, i8* align 8 %200, i64 8, i1 false)
  br label %bb101

bb101:                                            ; preds = %bb100
  %201 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %_169 to i64*
  %202 = load i64, i64* %201, align 4
; call core::result::Result<T,E>::ok
  %203 = call { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h5fc4d32210b8b448E"(i64 %202)
  %_168.0 = extractvalue { i32, i32 } %203, 0
  %_168.1 = extractvalue { i32, i32 } %203, 1
  br label %bb102

bb102:                                            ; preds = %bb101
; call core::option::Option<T>::and_then
  %c3 = call i32 @"_ZN4core6option15Option$LT$T$GT$8and_then17h6df9945e519e00b8E"(i32 %_168.0, i32 %_168.1), !range !4
  br label %bb103

bb103:                                            ; preds = %bb102
  %204 = bitcast { i8, i32 }* %_171 to i8*
  %205 = zext i1 %all_lower_hex to i8
  store i8 %205, i8* %204, align 4
  %206 = getelementptr inbounds { i8, i32 }, { i8, i32 }* %_171, i32 0, i32 1
  store i32 %c3, i32* %206, align 4
  %207 = bitcast { i8, i32 }* %_171 to i8*
  %208 = load i8, i8* %207, align 4, !range !2
  %209 = trunc i8 %208 to i1
  br i1 %209, label %bb104, label %bb129

bb104:                                            ; preds = %bb103
  %210 = getelementptr inbounds { i8, i32 }, { i8, i32 }* %_171, i32 0, i32 1
  %211 = load i32, i32* %210, align 4, !range !4
  %212 = sub i32 %211, 1114112
  %213 = icmp eq i32 %212, 0
  %_174 = select i1 %213, i64 0, i64 1
  %214 = icmp eq i64 %_174, 1
  br i1 %214, label %bb105, label %bb129

bb105:                                            ; preds = %bb104
  %215 = getelementptr inbounds { i8, i32 }, { i8, i32 }* %_171, i32 0, i32 1
  %216 = load i32, i32* %215, align 4, !range !9
  store i32 %216, i32* %c, align 4
  %_178 = load i32, i32* %c, align 4, !range !9
; call core::char::methods::<impl char>::is_control
  %_177 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$10is_control17h4a717c0a35f3941bE"(i32 %_178)
  br label %bb106

bb106:                                            ; preds = %bb105
  %_176 = xor i1 %_177, true
  br i1 %_176, label %bb107, label %bb129

bb107:                                            ; preds = %bb106
; call <char as core::fmt::Display>::fmt
  %_180 = call zeroext i1 @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h011d980131b3c87bE"(i32* align 4 dereferenceable(4) %c, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb108

bb108:                                            ; preds = %bb107
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %217 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_180)
  %218 = zext i1 %217 to i8
  store i8 %218, i8* %_179, align 1
  br label %bb109

bb109:                                            ; preds = %bb108
  %219 = load i8, i8* %_179, align 1, !range !2
  %220 = trunc i8 %219 to i1
  %_183 = zext i1 %220 to i64
  switch i64 %_183, label %bb111 [
    i64 0, label %bb110
    i64 1, label %bb112
  ]

bb111:                                            ; preds = %bb109
  unreachable

bb110:                                            ; preds = %bb109
  %221 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  store [0 x i8]* %after_escape.0, [0 x i8]** %221, align 8
  %222 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  store i64 %after_escape.1, i64* %222, align 8
  br label %bb41

bb112:                                            ; preds = %bb109
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %223 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc893 to %"core::panic::location::Location"*))
  %224 = zext i1 %223 to i8
  store i8 %224, i8* %2, align 1
  br label %bb135

bb120:                                            ; preds = %bb119
  %225 = bitcast { i64, i64 }* %_197 to i64*
  %_200 = load i64, i64* %225, align 8, !range !5
  %226 = icmp eq i64 %_200, 1
  br i1 %226, label %bb121, label %bb129

bb121:                                            ; preds = %bb120
  %227 = bitcast { i64, i64 }* %_197 to %"core::option::Option<usize>::Some"*
  %228 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %227, i32 0, i32 1
  %i4 = load i64, i64* %228, align 8
  %229 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_208.0 = load [0 x i8]*, [0 x i8]** %229, align 8, !nonnull !6
  %230 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_208.1 = load i64, i64* %230, align 8
  store i64 %i4, i64* %_209, align 8
  %231 = load i64, i64* %_209, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %232 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h1a05bb88631985ceE"([0 x i8]* nonnull align 1 %_208.0, i64 %_208.1, i64 %231, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc897 to %"core::panic::location::Location"*))
  %_207.0 = extractvalue { [0 x i8]*, i64 } %232, 0
  %_207.1 = extractvalue { [0 x i8]*, i64 } %232, 1
  br label %bb122

bb130:                                            ; preds = %bb129
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %233 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_222)
  %234 = zext i1 %233 to i8
  store i8 %234, i8* %_221, align 1
  br label %bb131

bb131:                                            ; preds = %bb130
  %235 = load i8, i8* %_221, align 1, !range !2
  %236 = trunc i8 %235 to i1
  %_225 = zext i1 %236 to i64
  switch i64 %_225, label %bb132 [
    i64 0, label %bb2
    i64 1, label %bb133
  ]

bb132:                                            ; preds = %bb131
  unreachable

bb133:                                            ; preds = %bb131
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %237 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc895 to %"core::panic::location::Location"*))
  %238 = zext i1 %237 to i8
  store i8 %238, i8* %2, align 1
  br label %bb135

bb122:                                            ; preds = %bb121
; call core::fmt::Formatter::write_str
  %_203 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 %_207.0, i64 %_207.1)
  br label %bb123

bb123:                                            ; preds = %bb122
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %239 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_203)
  %240 = zext i1 %239 to i8
  store i8 %240, i8* %_202, align 1
  br label %bb124

bb124:                                            ; preds = %bb123
  %241 = load i8, i8* %_202, align 1, !range !2
  %242 = trunc i8 %241 to i1
  %_211 = zext i1 %242 to i64
  switch i64 %_211, label %bb126 [
    i64 0, label %bb125
    i64 1, label %bb127
  ]

bb126:                                            ; preds = %bb124
  unreachable

bb125:                                            ; preds = %bb124
  %243 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  %_218.0 = load [0 x i8]*, [0 x i8]** %243, align 8, !nonnull !6
  %244 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  %_218.1 = load i64, i64* %244, align 8
  store i64 %i4, i64* %_219, align 8
  %245 = load i64, i64* %_219, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %246 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %_218.0, i64 %_218.1, i64 %245, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc901 to %"core::panic::location::Location"*))
  %_217.0 = extractvalue { [0 x i8]*, i64 } %246, 0
  %_217.1 = extractvalue { [0 x i8]*, i64 } %246, 1
  br label %bb128

bb127:                                            ; preds = %bb124
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %247 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc899 to %"core::panic::location::Location"*))
  %248 = zext i1 %247 to i8
  store i8 %248, i8* %2, align 1
  br label %bb135

bb128:                                            ; preds = %bb125
  %249 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 0
  store [0 x i8]* %_217.0, [0 x i8]** %249, align 8
  %250 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %rest, i32 0, i32 1
  store i64 %_217.1, i64* %250, align 8
  br label %bb41
}

; <rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h8b1b421374e6bb0fE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:158:72: 161:34]"* nonnull align 1 %_1, i32 %c) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_5 = icmp ule i32 48, %c
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %bb1, %start
  %_3 = icmp ule i32 97, %c
  br i1 %_3, label %bb3, label %bb4

bb1:                                              ; preds = %start
  %_6 = icmp ule i32 %c, 57
  br i1 %_6, label %bb5, label %bb2

bb5:                                              ; preds = %bb3, %bb1
  store i8 1, i8* %0, align 1
  br label %bb6

bb4:                                              ; preds = %bb3, %bb2
  store i8 0, i8* %0, align 1
  br label %bb6

bb3:                                              ; preds = %bb2
  %_4 = icmp ule i32 %c, 102
  br i1 %_4, label %bb5, label %bb4

bb6:                                              ; preds = %bb4, %bb5
  %1 = load i8, i8* %0, align 1, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; <rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17hbc1c2e2fcb4ec1fbE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/legacy.rs:179:51: 179:75]"* nonnull align 1 %_1, i32 %c) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i32 %c, 36
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb2:                                              ; preds = %start
  %_4 = icmp eq i32 %c, 46
  %2 = zext i1 %_4 to i8
  store i8 %2, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %0, align 1, !range !2
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; rustc_demangle::v0::demangle
; Function Attrs: nonlazybind uwtable
define internal void @_ZN14rustc_demangle2v08demangle17hd18b29623172c0a8E(%"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* noalias nocapture sret(%"core::result::Result<(v0::Demangle, &str), v0::ParseError>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %_85 = alloca i64, align 8
  %_79 = alloca { i8*, i64 }, align 8
  %_78 = alloca { { i8*, i64 }, { [0 x i8]*, i64 } }, align 8
  %val1 = alloca %"v0::Parser", align 8
  %_73 = alloca %"v0::Parser", align 8
  %_72 = alloca { %"v0::Parser" }, align 8
  %_70 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_69 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>", align 8
  %_68 = alloca %"v0::Parser", align 8
  %_60 = alloca i8*, align 8
  %val = alloca %"v0::Parser", align 8
  %_55 = alloca %"v0::Parser", align 8
  %_54 = alloca { %"v0::Parser" }, align 8
  %_52 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_51 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>", align 8
  %_50 = alloca %"v0::Parser", align 8
  %parser = alloca %"v0::Parser", align 8
  %try_parse_path = alloca %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:67:26: 77:6]", align 1
  %_44 = alloca { i8*, i8* }, align 8
  %_34 = alloca i64, align 8
  %_24 = alloca i8, align 1
  %_23 = alloca i64, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i64, align 8
  %_3 = alloca i8, align 1
  %inner = alloca { [0 x i8]*, i64 }, align 8
; call core::str::<impl str>::len
  %_5 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb4

bb4:                                              ; preds = %start
  %_4 = icmp ugt i64 %_5, 2
  br i1 %_4, label %bb2, label %bb1

bb1:                                              ; preds = %bb4
  store i8 0, i8* %_3, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
; call core::str::<impl str>::starts_with
  %_7 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hc717f29711ba7aaaE"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc902 to [0 x i8]*), i64 2)
  br label %bb5

bb5:                                              ; preds = %bb2
  %3 = zext i1 %_7 to i8
  store i8 %3, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb5
  %4 = load i8, i8* %_3, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb6, label %bb8

bb8:                                              ; preds = %bb3
; call core::str::<impl str>::len
  %_15 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb12

bb6:                                              ; preds = %bb3
  store i64 2, i64* %_12, align 8
  %6 = load i64, i64* %_12, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %7 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, i64 %6, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc904 to %"core::panic::location::Location"*))
  %_10.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %_10.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb7

bb7:                                              ; preds = %bb6
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  store [0 x i8]* %_10.0, [0 x i8]** %8, align 8
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  store i64 %_10.1, i64* %9, align 8
  br label %bb25

bb25:                                             ; preds = %bb23, %bb15, %bb7
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  %_36.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !6
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  %_36.1 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %_36.0, [0 x i8]** %12, align 8
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %_36.1, i64* %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %15 = load [0 x i8]*, [0 x i8]** %14, align 8, !nonnull !6
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %15, 0
  %19 = insertvalue { [0 x i8]*, i64 } %18, i64 %17, 1
  %_35.0 = extractvalue { [0 x i8]*, i64 } %19, 0
  %_35.1 = extractvalue { [0 x i8]*, i64 } %19, 1
  br label %bb26

bb12:                                             ; preds = %bb8
  %_14 = icmp ugt i64 %_15, 1
  br i1 %_14, label %bb10, label %bb9

bb9:                                              ; preds = %bb12
  store i8 0, i8* %_13, align 1
  br label %bb11

bb10:                                             ; preds = %bb12
; call core::str::<impl str>::starts_with
  %_17 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h17869e050714381eE"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, i32 82)
  br label %bb13

bb13:                                             ; preds = %bb10
  %20 = zext i1 %_17 to i8
  store i8 %20, i8* %_13, align 1
  br label %bb11

bb11:                                             ; preds = %bb9, %bb13
  %21 = load i8, i8* %_13, align 1, !range !2
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb14, label %bb16

bb16:                                             ; preds = %bb11
; call core::str::<impl str>::len
  %_26 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb20

bb14:                                             ; preds = %bb11
  store i64 1, i64* %_23, align 8
  %23 = load i64, i64* %_23, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %24 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, i64 %23, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc906 to %"core::panic::location::Location"*))
  %_21.0 = extractvalue { [0 x i8]*, i64 } %24, 0
  %_21.1 = extractvalue { [0 x i8]*, i64 } %24, 1
  br label %bb15

bb15:                                             ; preds = %bb14
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  store [0 x i8]* %_21.0, [0 x i8]** %25, align 8
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  store i64 %_21.1, i64* %26, align 8
  br label %bb25

bb20:                                             ; preds = %bb16
  %_25 = icmp ugt i64 %_26, 3
  br i1 %_25, label %bb18, label %bb17

bb17:                                             ; preds = %bb20
  store i8 0, i8* %_24, align 1
  br label %bb19

bb18:                                             ; preds = %bb20
; call core::str::<impl str>::starts_with
  %_28 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hc717f29711ba7aaaE"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc907 to [0 x i8]*), i64 3)
  br label %bb21

bb21:                                             ; preds = %bb18
  %27 = zext i1 %_28 to i8
  store i8 %27, i8* %_24, align 1
  br label %bb19

bb19:                                             ; preds = %bb17, %bb21
  %28 = load i8, i8* %_24, align 1, !range !2
  %29 = trunc i8 %28 to i1
  br i1 %29, label %bb22, label %bb24

bb24:                                             ; preds = %bb19
  %30 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %0 to %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err"*
  %31 = getelementptr inbounds %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err", %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err"* %30, i32 0, i32 1
  store i8 0, i8* %31, align 1
  %32 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %0 to i8*
  store i8 1, i8* %32, align 8
  br label %bb52

bb22:                                             ; preds = %bb19
  store i64 3, i64* %_34, align 8
  %33 = load i64, i64* %_34, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %34 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1, i64 %33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc909 to %"core::panic::location::Location"*))
  %_32.0 = extractvalue { [0 x i8]*, i64 } %34, 0
  %_32.1 = extractvalue { [0 x i8]*, i64 } %34, 1
  br label %bb23

bb23:                                             ; preds = %bb22
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  store [0 x i8]* %_32.0, [0 x i8]** %35, align 8
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  store i64 %_32.1, i64* %36, align 8
  br label %bb25

bb26:                                             ; preds = %bb25
  %_39 = icmp ult i64 0, %_35.1
  %37 = call i1 @llvm.expect.i1(i1 %_39, i1 true)
  br i1 %37, label %bb27, label %panic

bb27:                                             ; preds = %bb26
  %38 = getelementptr inbounds [0 x i8], [0 x i8]* %_35.0, i64 0, i64 0
  %39 = load i8, i8* %38, align 1
  %_40 = icmp ule i8 65, %39
  br i1 %_40, label %bb28, label %bb29

panic:                                            ; preds = %bb26
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 0, i64 %_35.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc911 to %"core::panic::location::Location"*)) #12
  unreachable

bb29:                                             ; preds = %bb28, %bb27
  %40 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %0 to %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err"*
  %41 = getelementptr inbounds %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err", %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err"* %40, i32 0, i32 1
  store i8 0, i8* %41, align 1
  %42 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %0 to i8*
  store i8 1, i8* %42, align 8
  br label %bb52

bb28:                                             ; preds = %bb27
  %43 = getelementptr inbounds [0 x i8], [0 x i8]* %_35.0, i64 0, i64 0
  %44 = load i8, i8* %43, align 1
  %_41 = icmp ule i8 %44, 90
  br i1 %_41, label %bb30, label %bb29

bb30:                                             ; preds = %bb28
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  %_45.0 = load [0 x i8]*, [0 x i8]** %45, align 8, !nonnull !6
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  %_45.1 = load i64, i64* %46, align 8
; call core::str::<impl str>::bytes
  %47 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h7ba8043217c2c4a8E"([0 x i8]* nonnull align 1 %_45.0, i64 %_45.1)
  store { i8*, i8* } %47, { i8*, i8* }* %_44, align 8
  br label %bb31

bb31:                                             ; preds = %bb30
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::any
  %_42 = call zeroext i1 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hc9b37fb5d2a0db6aE"({ i8*, i8* }* align 8 dereferenceable(16) %_44)
  br label %bb32

bb32:                                             ; preds = %bb31
  br i1 %_42, label %bb33, label %bb34

bb34:                                             ; preds = %bb32
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  %_49.0 = load [0 x i8]*, [0 x i8]** %48, align 8, !nonnull !6
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  %_49.1 = load i64, i64* %49, align 8
  %50 = bitcast %"v0::Parser"* %parser to { [0 x i8]*, i64 }*
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 0
  store [0 x i8]* %_49.0, [0 x i8]** %51, align 8
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 1
  store i64 %_49.1, i64* %52, align 8
  %53 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %parser, i32 0, i32 1
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %parser, i32 0, i32 2
  store i32 0, i32* %54, align 8
  %55 = bitcast %"v0::Parser"* %_55 to i8*
  %56 = bitcast %"v0::Parser"* %parser to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 32, i1 false)
  %57 = bitcast { %"v0::Parser" }* %_54 to %"v0::Parser"*
  %58 = bitcast %"v0::Parser"* %57 to i8*
  %59 = bitcast %"v0::Parser"* %_55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 32, i1 false)
  %60 = bitcast { %"v0::Parser" }* %_54 to %"v0::Parser"*
; call rustc_demangle::v0::demangle::{{closure}}
  call void @"_ZN14rustc_demangle2v08demangle28_$u7b$$u7b$closure$u7d$$u7d$17h772daf98e083e1abE"(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %_52, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:67:26: 77:6]"* nonnull align 1 %try_parse_path, %"v0::Parser"* noalias nocapture dereferenceable(32) %60)
  br label %bb35

bb33:                                             ; preds = %bb32
  %61 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %0 to %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err"*
  %62 = getelementptr inbounds %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err", %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err"* %61, i32 0, i32 1
  store i8 0, i8* %62, align 1
  %63 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %0 to i8*
  store i8 1, i8* %63, align 8
  br label %bb52

bb52:                                             ; preds = %bb24, %bb29, %bb51, %bb49, %bb39, %bb33
  ret void

bb35:                                             ; preds = %bb34
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4a724fb4e3da9317E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>") dereferenceable(40) %_51, %"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture dereferenceable(40) %_52)
  br label %bb36

bb36:                                             ; preds = %bb35
  %64 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>"* %_51 to i8*
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = trunc i8 %65 to i1
  %_56 = zext i1 %66 to i64
  switch i64 %_56, label %bb38 [
    i64 0, label %bb37
    i64 1, label %bb39
  ]

bb38:                                             ; preds = %bb36
  unreachable

bb37:                                             ; preds = %bb36
  %67 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>"* %_51 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Continue"*
  %68 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Continue"* %67, i32 0, i32 1
  %69 = bitcast %"v0::Parser"* %val to i8*
  %70 = bitcast %"v0::Parser"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 32, i1 false)
  %71 = bitcast %"v0::Parser"* %_50 to i8*
  %72 = bitcast %"v0::Parser"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 32, i1 false)
  %73 = bitcast %"v0::Parser"* %parser to i8*
  %74 = bitcast %"v0::Parser"* %_50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 32, i1 false)
  %75 = bitcast %"v0::Parser"* %parser to { [0 x i8]*, i64 }*
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %75, i32 0, i32 0
  %_63.0 = load [0 x i8]*, [0 x i8]** %76, align 8, !nonnull !6
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %75, i32 0, i32 1
  %_63.1 = load i64, i64* %77, align 8
  %78 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_63.0, [0 x i8]** %78, align 8
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %_63.1, i64* %79, align 8
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  %81 = load [0 x i8]*, [0 x i8]** %80, align 8, !nonnull !6
  %82 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %81, 0
  %85 = insertvalue { [0 x i8]*, i64 } %84, i64 %83, 1
  %_62.0 = extractvalue { [0 x i8]*, i64 } %85, 0
  %_62.1 = extractvalue { [0 x i8]*, i64 } %85, 1
  br label %bb40

bb39:                                             ; preds = %bb36
  %86 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>"* %_51 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Break"*
  %87 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Break"* %86, i32 0, i32 1
  %88 = load i8, i8* %87, align 1, !range !2
  %residual = trunc i8 %88 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hebb7c3ac93a4d6e0E"(%"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* noalias nocapture sret(%"core::result::Result<(v0::Demangle, &str), v0::ParseError>") dereferenceable(40) %0, i1 zeroext %residual, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc913 to %"core::panic::location::Location"*))
  br label %bb52

bb40:                                             ; preds = %bb37
  %89 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %parser, i32 0, i32 1
  %_64 = load i64, i64* %89, align 8
; call core::slice::<impl [T]>::get
  %90 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h05a01ca2d4cf7cbaE"([0 x i8]* nonnull align 1 %_62.0, i64 %_62.1, i64 %_64)
  store i8* %90, i8** %_60, align 8
  br label %bb41

bb41:                                             ; preds = %bb40
  %91 = bitcast i8** %_60 to {}**
  %92 = load {}*, {}** %91, align 8
  %93 = icmp eq {}* %92, null
  %_67 = select i1 %93, i64 0, i64 1
  %94 = icmp eq i64 %_67, 1
  br i1 %94, label %bb42, label %bb50

bb42:                                             ; preds = %bb41
  %95 = load i8*, i8** %_60, align 8, !nonnull !6
  %96 = load i8, i8* %95, align 1
  %_65 = icmp ule i8 65, %96
  br i1 %_65, label %bb43, label %bb50

bb50:                                             ; preds = %bb47, %bb43, %bb42, %bb41
  %97 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 0
  %_80.0 = load [0 x i8]*, [0 x i8]** %97, align 8, !nonnull !6
  %98 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %inner, i32 0, i32 1
  %_80.1 = load i64, i64* %98, align 8
  %99 = bitcast { i8*, i64 }* %_79 to { [0 x i8]*, i64 }*
  %100 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %99, i32 0, i32 0
  store [0 x i8]* %_80.0, [0 x i8]** %100, align 8
  %101 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %99, i32 0, i32 1
  store i64 %_80.1, i64* %101, align 8
  %102 = bitcast %"v0::Parser"* %parser to { [0 x i8]*, i64 }*
  %103 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %102, i32 0, i32 0
  %_84.0 = load [0 x i8]*, [0 x i8]** %103, align 8, !nonnull !6
  %104 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %102, i32 0, i32 1
  %_84.1 = load i64, i64* %104, align 8
  %105 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %parser, i32 0, i32 1
  %_86 = load i64, i64* %105, align 8
  store i64 %_86, i64* %_85, align 8
  %106 = load i64, i64* %_85, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %107 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %_84.0, i64 %_84.1, i64 %106, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc917 to %"core::panic::location::Location"*))
  %_83.0 = extractvalue { [0 x i8]*, i64 } %107, 0
  %_83.1 = extractvalue { [0 x i8]*, i64 } %107, 1
  br label %bb51

bb43:                                             ; preds = %bb42
  %108 = load i8*, i8** %_60, align 8, !nonnull !6
  %109 = load i8, i8* %108, align 1
  %_66 = icmp ule i8 %109, 90
  br i1 %_66, label %bb44, label %bb50

bb44:                                             ; preds = %bb43
  %110 = bitcast %"v0::Parser"* %_73 to i8*
  %111 = bitcast %"v0::Parser"* %parser to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 32, i1 false)
  %112 = bitcast { %"v0::Parser" }* %_72 to %"v0::Parser"*
  %113 = bitcast %"v0::Parser"* %112 to i8*
  %114 = bitcast %"v0::Parser"* %_73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 32, i1 false)
  %115 = bitcast { %"v0::Parser" }* %_72 to %"v0::Parser"*
; call rustc_demangle::v0::demangle::{{closure}}
  call void @"_ZN14rustc_demangle2v08demangle28_$u7b$$u7b$closure$u7d$$u7d$17h772daf98e083e1abE"(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %_70, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:67:26: 77:6]"* nonnull align 1 %try_parse_path, %"v0::Parser"* noalias nocapture dereferenceable(32) %115)
  br label %bb45

bb45:                                             ; preds = %bb44
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4a724fb4e3da9317E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>") dereferenceable(40) %_69, %"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture dereferenceable(40) %_70)
  br label %bb46

bb46:                                             ; preds = %bb45
  %116 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>"* %_69 to i8*
  %117 = load i8, i8* %116, align 8, !range !2
  %118 = trunc i8 %117 to i1
  %_74 = zext i1 %118 to i64
  switch i64 %_74, label %bb48 [
    i64 0, label %bb47
    i64 1, label %bb49
  ]

bb48:                                             ; preds = %bb46
  unreachable

bb47:                                             ; preds = %bb46
  %119 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>"* %_69 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Continue"*
  %120 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Continue"* %119, i32 0, i32 1
  %121 = bitcast %"v0::Parser"* %val1 to i8*
  %122 = bitcast %"v0::Parser"* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 32, i1 false)
  %123 = bitcast %"v0::Parser"* %_68 to i8*
  %124 = bitcast %"v0::Parser"* %val1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 32, i1 false)
  %125 = bitcast %"v0::Parser"* %parser to i8*
  %126 = bitcast %"v0::Parser"* %_68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 32, i1 false)
  br label %bb50

bb49:                                             ; preds = %bb46
  %127 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>"* %_69 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Break"*
  %128 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, v0::Parser>::Break"* %127, i32 0, i32 1
  %129 = load i8, i8* %128, align 1, !range !2
  %residual2 = trunc i8 %129 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hebb7c3ac93a4d6e0E"(%"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* noalias nocapture sret(%"core::result::Result<(v0::Demangle, &str), v0::ParseError>") dereferenceable(40) %0, i1 zeroext %residual2, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc915 to %"core::panic::location::Location"*))
  br label %bb52

bb51:                                             ; preds = %bb50
  %130 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_78 to { i8*, i64 }*
  %131 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_79, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8, !nonnull !6
  %133 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_79, i32 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %130, i32 0, i32 0
  store i8* %132, i8** %135, align 8
  %136 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %130, i32 0, i32 1
  store i64 %134, i64* %136, align 8
  %137 = getelementptr inbounds { { i8*, i64 }, { [0 x i8]*, i64 } }, { { i8*, i64 }, { [0 x i8]*, i64 } }* %_78, i32 0, i32 1
  %138 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %137, i32 0, i32 0
  store [0 x i8]* %_83.0, [0 x i8]** %138, align 8
  %139 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %137, i32 0, i32 1
  store i64 %_83.1, i64* %139, align 8
  %140 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %0 to %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Ok"*
  %141 = getelementptr inbounds %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Ok", %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Ok"* %140, i32 0, i32 1
  %142 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %141 to i8*
  %143 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %_78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 32, i1 false)
  %144 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %0 to i8*
  store i8 0, i8* %144, align 8
  br label %bb52
}

; rustc_demangle::v0::demangle::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v08demangle28_$u7b$$u7b$closure$u7d$$u7d$17h4e71fd7bbbbdaf76E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:62:26: 62:43]"* nonnull align 1 %_1, i8 %c) unnamed_addr #1 {
start:
  %_3 = and i8 %c, -128
  %0 = icmp ne i8 %_3, 0
  ret i1 %0
}

; rustc_demangle::v0::demangle::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN14rustc_demangle2v08demangle28_$u7b$$u7b$closure$u7d$$u7d$17h772daf98e083e1abE"(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %0, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:67:26: 77:6]"* nonnull align 1 %_1, %"v0::Parser"* noalias nocapture dereferenceable(32) %parser) unnamed_addr #1 {
start:
  %_6 = alloca i64*, align 8
  %_5 = alloca %"v0::Parser", align 8
  %_4 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %dummy_printer = alloca %"v0::Printer", align 8
  %1 = bitcast %"v0::Parser"* %_5 to i8*
  %2 = bitcast %"v0::Parser"* %parser to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  %3 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_4 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %3, i32 0, i32 1
  %5 = bitcast %"v0::Parser"* %4 to i8*
  %6 = bitcast %"v0::Parser"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false)
  %7 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_4 to i8*
  store i8 0, i8* %7, align 8
  %8 = bitcast i64** %_6 to {}**
  store {}* null, {}** %8, align 8
  %9 = bitcast %"v0::Printer"* %dummy_printer to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %10 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %9 to i8*
  %11 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 40, i1 false)
  %12 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %dummy_printer, i32 0, i32 1
  %13 = load i64*, i64** %_6, align 8
  store i64* %13, i64** %12, align 8
  %14 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %dummy_printer, i32 0, i32 2
  store i32 0, i32* %14, align 8
; call rustc_demangle::v0::Printer::print_path
  %_8 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h66709c17d7c9cba4E(%"v0::Printer"* align 8 dereferenceable(56) %dummy_printer, i1 zeroext false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h658fffd2f1d052b0E"(i1 zeroext %_8, [0 x i8]* nonnull align 1 bitcast (<{ [61 x i8] }>* @alloc1121 to [0 x i8]*), i64 61, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc920 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  %15 = bitcast %"v0::Printer"* %dummy_printer to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %16 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %0 to i8*
  %17 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 40, i1 false)
  ret void
}

; <rustc_demangle::v0::Demangle as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN67_$LT$rustc_demangle..v0..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17hacdba5fa921589dfE"({ i8*, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_7 = alloca i64*, align 8
  %_5 = alloca %"v0::Parser", align 8
  %_4 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %printer = alloca %"v0::Printer", align 8
  %0 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !6
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %_6.1 = load i64, i64* %2, align 8
  %3 = bitcast %"v0::Parser"* %_5 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %_6.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %_6.1, i64* %5, align 8
  %6 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %_5, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %_5, i32 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_4 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %9 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %8, i32 0, i32 1
  %10 = bitcast %"v0::Parser"* %9 to i8*
  %11 = bitcast %"v0::Parser"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false)
  %12 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_4 to i8*
  store i8 0, i8* %12, align 8
  %13 = bitcast i64** %_7 to %"core::fmt::Formatter"**
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %13, align 8
  %14 = bitcast %"v0::Printer"* %printer to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %15 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %14 to i8*
  %16 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 40, i1 false)
  %17 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %printer, i32 0, i32 1
  %18 = load i64*, i64** %_7, align 8
  store i64* %18, i64** %17, align 8
  %19 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %printer, i32 0, i32 2
  store i32 0, i32* %19, align 8
; call rustc_demangle::v0::Printer::print_path
  %20 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h66709c17d7c9cba4E(%"v0::Printer"* align 8 dereferenceable(56) %printer, i1 zeroext true)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %20
}

; rustc_demangle::v0::Ident::try_small_punycode_decode
; Function Attrs: nonlazybind uwtable
define internal i8 @_ZN14rustc_demangle2v05Ident25try_small_punycode_decode17h4a222993a24b37adE(%"v0::Ident"* align 8 dereferenceable(32) %self, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_22 = alloca i8, align 1
  %_21 = alloca i8, align 1
  %_19 = alloca i64, align 8
  %_14 = alloca { i32*, i64 }, align 8
  %_7 = alloca { i32*, i64* }, align 8
  %r = alloca i8, align 1
  %out_len = alloca i64, align 8
  %out = alloca [128 x i32], align 4
  %1 = alloca i8, align 1
  store i8 0, i8* %_22, align 1
  store i8 0, i8* %_21, align 1
  store i8 1, i8* %_21, align 1
  %2 = getelementptr inbounds [128 x i32], [128 x i32]* %out, i64 0, i64 0
  %3 = bitcast i32* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 512, i1 false)
  store i64 0, i64* %out_len, align 8
  %4 = bitcast { i32*, i64* }* %_7 to [128 x i32]**
  store [128 x i32]* %out, [128 x i32]** %4, align 8
  %5 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_7, i32 0, i32 1
  store i64* %out_len, i64** %5, align 8
  %6 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_7, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8, !nonnull !6
  %8 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_7, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !6
; invoke rustc_demangle::v0::Ident::punycode_decode
  %10 = invoke zeroext i1 @_ZN14rustc_demangle2v05Ident15punycode_decode17hf81f2811449f53f4E(%"v0::Ident"* align 8 dereferenceable(32) %self, i32* align 4 dereferenceable(512) %7, i64* align 8 dereferenceable(8) %9)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %r, align 1
; invoke core::result::Result<T,E>::is_ok
  %_10 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h712649783a9704c2E"(i8* align 1 dereferenceable(1) %r)
          to label %bb2 unwind label %cleanup

bb14:                                             ; preds = %bb11, %bb12, %cleanup
  %12 = load i8, i8* %_21, align 1, !range !2
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb13, label %bb9

cleanup:                                          ; preds = %bb1, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb14

bb2:                                              ; preds = %bb1
  br i1 %_10, label %bb3, label %bb6

bb6:                                              ; preds = %bb2
  store i8 2, i8* %1, align 1
  br label %bb7

bb3:                                              ; preds = %bb2
  store i8 0, i8* %_21, align 1
  store i8 1, i8* %_22, align 1
  %_20 = load i64, i64* %out_len, align 8
  store i64 %_20, i64* %_19, align 8
  %19 = load i64, i64* %_19, align 8
; invoke core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %20 = invoke { [0 x i32]*, i64 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h1d3f777d8c942944E"([128 x i32]* align 4 dereferenceable(512) %out, i64 %19, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc922 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup1

bb4:                                              ; preds = %bb3
  %_17.0 = extractvalue { [0 x i32]*, i64 } %20, 0
  %_17.1 = extractvalue { [0 x i32]*, i64 } %20, 1
  %21 = bitcast { i32*, i64 }* %_14 to { [0 x i32]*, i64 }*
  %22 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %21, i32 0, i32 0
  store [0 x i32]* %_17.0, [0 x i32]** %22, align 8
  %23 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %21, i32 0, i32 1
  store i64 %_17.1, i64* %23, align 8
  store i8 0, i8* %_22, align 1
  %24 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %_14, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8, !nonnull !6
  %26 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %_14, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i32* %25 to [0 x i32]*
; invoke <rustc_demangle::v0::Ident as core::fmt::Display>::fmt::{{closure}}
  %_12 = invoke zeroext i1 @"_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h95fd8ea3cb6d5a9dE"(i64* align 8 dereferenceable(8) %f, [0 x i32]* nonnull align 4 %28, i64 %27)
          to label %bb5 unwind label %cleanup1

bb12:                                             ; preds = %cleanup1
  %29 = load i8, i8* %_22, align 1, !range !2
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb11, label %bb14

cleanup1:                                         ; preds = %bb4, %bb3
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %33, i32* %35, align 8
  br label %bb12

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_22, align 1
  %36 = zext i1 %_12 to i8
  store i8 %36, i8* %1, align 1
  br label %bb7

bb11:                                             ; preds = %bb12
  br label %bb14

bb9:                                              ; preds = %bb13, %bb14
  %37 = bitcast { i8*, i32 }* %0 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1
  resume { i8*, i32 } %42

bb13:                                             ; preds = %bb14
  br label %bb9

bb7:                                              ; preds = %bb6, %bb5
  %43 = load i8, i8* %_21, align 1, !range !2
  %44 = trunc i8 %43 to i1
  br i1 %44, label %bb10, label %bb8

bb8:                                              ; preds = %bb10, %bb7
  %45 = load i8, i8* %1, align 1, !range !7
  ret i8 %45

bb10:                                             ; preds = %bb7
  br label %bb8
}

; rustc_demangle::v0::Ident::try_small_punycode_decode::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v05Ident25try_small_punycode_decode28_$u7b$$u7b$closure$u7d$$u7d$17hb85bffa76b85c931E"({ i32*, i64* }* align 8 dereferenceable(16) %_1, i64 %i, i32 %c) unnamed_addr #1 {
start:
  %j = alloca i64, align 8
  %_4 = alloca i32*, align 8
  %0 = alloca i8, align 1
  %1 = bitcast { i32*, i64* }* %_1 to [128 x i32]**
  %_8 = load [128 x i32]*, [128 x i32]** %1, align 8, !nonnull !6
  %_7.0 = bitcast [128 x i32]* %_8 to [0 x i32]*
  %2 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_1, i32 0, i32 1
  %3 = load i64*, i64** %2, align 8, !nonnull !6
  %_9 = load i64, i64* %3, align 8
; call core::slice::<impl [T]>::get
  %_6 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2690818a89e1963eE"([0 x i32]* nonnull align 4 %_7.0, i64 128, i64 %_9)
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::ok_or
  %_5 = call align 4 dereferenceable_or_null(4) i32* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h67fce5b2c1bed47cE"(i32* align 4 dereferenceable_or_null(4) %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %4 = call align 4 dereferenceable_or_null(4) i32* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1b2ee57de6fb93eeE"(i32* align 4 dereferenceable_or_null(4) %_5)
  store i32* %4, i32** %_4, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast i32** %_4 to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_11 = select i1 %7, i64 1, i64 0
  switch i64 %_11, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %val = load i32*, i32** %_4, align 8, !nonnull !6
  %8 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_1, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !6
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %j, align 8
  %11 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_1, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8, !nonnull !6
  %13 = load i64, i64* %12, align 8
  %14 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 1)
  %_16.0 = extractvalue { i64, i1 } %14, 0
  %_16.1 = extractvalue { i64, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false)
  br i1 %15, label %panic, label %bb7

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %16 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a67b2acf235fe6eE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc924 to %"core::panic::location::Location"*))
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %0, align 1
  br label %bb16

bb16:                                             ; preds = %bb15, %bb6
  %18 = load i8, i8* %0, align 1, !range !2
  %19 = trunc i8 %18 to i1
  ret i1 %19

bb7:                                              ; preds = %bb4
  %20 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_1, i32 0, i32 1
  %21 = load i64*, i64** %20, align 8, !nonnull !6
  store i64 %_16.0, i64* %21, align 8
  br label %bb8

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc926 to %"core::panic::location::Location"*)) #12
  unreachable

bb8:                                              ; preds = %bb13, %bb7
  %_18 = load i64, i64* %j, align 8
  %_17 = icmp ugt i64 %_18, %i
  br i1 %_17, label %bb9, label %bb14

bb14:                                             ; preds = %bb8
  %_33 = icmp ult i64 %i, 128
  %22 = call i1 @llvm.expect.i1(i1 %_33, i1 true)
  br i1 %22, label %bb15, label %panic5

bb9:                                              ; preds = %bb8
  %_22 = load i64, i64* %j, align 8
  %23 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_22, i64 1)
  %_23.0 = extractvalue { i64, i1 } %23, 0
  %_23.1 = extractvalue { i64, i1 } %23, 1
  %24 = call i1 @llvm.expect.i1(i1 %_23.1, i1 false)
  br i1 %24, label %panic1, label %bb10

bb10:                                             ; preds = %bb9
  %_25 = icmp ult i64 %_23.0, 128
  %25 = call i1 @llvm.expect.i1(i1 %_25, i1 true)
  br i1 %25, label %bb11, label %panic2

panic1:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc928 to %"core::panic::location::Location"*)) #12
  unreachable

bb11:                                             ; preds = %bb10
  %26 = bitcast { i32*, i64* }* %_1 to [128 x i32]**
  %27 = load [128 x i32]*, [128 x i32]** %26, align 8, !nonnull !6
  %28 = getelementptr inbounds [128 x i32], [128 x i32]* %27, i64 0, i64 %_23.0
  %_20 = load i32, i32* %28, align 4, !range !9
  %_26 = load i64, i64* %j, align 8
  %_28 = icmp ult i64 %_26, 128
  %29 = call i1 @llvm.expect.i1(i1 %_28, i1 true)
  br i1 %29, label %bb12, label %panic3

panic2:                                           ; preds = %bb10
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_23.0, i64 128, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc930 to %"core::panic::location::Location"*)) #12
  unreachable

bb12:                                             ; preds = %bb11
  %30 = bitcast { i32*, i64* }* %_1 to [128 x i32]**
  %31 = load [128 x i32]*, [128 x i32]** %30, align 8, !nonnull !6
  %32 = getelementptr inbounds [128 x i32], [128 x i32]* %31, i64 0, i64 %_26
  store i32 %_20, i32* %32, align 4
  %33 = load i64, i64* %j, align 8
  %34 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %33, i64 1)
  %_29.0 = extractvalue { i64, i1 } %34, 0
  %_29.1 = extractvalue { i64, i1 } %34, 1
  %35 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false)
  br i1 %35, label %panic4, label %bb13

panic3:                                           ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_26, i64 128, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc932 to %"core::panic::location::Location"*)) #12
  unreachable

bb13:                                             ; preds = %bb12
  store i64 %_29.0, i64* %j, align 8
  br label %bb8

panic4:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc934 to %"core::panic::location::Location"*)) #12
  unreachable

bb15:                                             ; preds = %bb14
  %36 = bitcast { i32*, i64* }* %_1 to [128 x i32]**
  %37 = load [128 x i32]*, [128 x i32]** %36, align 8, !nonnull !6
  %38 = getelementptr inbounds [128 x i32], [128 x i32]* %37, i64 0, i64 %i
  store i32 %c, i32* %38, align 4
  store i8 0, i8* %0, align 1
  br label %bb16

panic5:                                           ; preds = %bb14
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 128, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc936 to %"core::panic::location::Location"*)) #12
  unreachable
}

; rustc_demangle::v0::Ident::punycode_decode
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v05Ident15punycode_decode17hf81f2811449f53f4E(%"v0::Ident"* align 8 dereferenceable(32) %self, i32* align 4 dereferenceable(512) %0, i64* align 8 dereferenceable(8) %1) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %k1 = alloca i64, align 8
  %_164 = alloca i8*, align 8
  %_154 = alloca { i64, i32 }, align 8
  %_151 = alloca i8, align 1
  %_142 = alloca i32, align 4
  %_120 = alloca { i64, i64 }, align 8
  %_109 = alloca { i64, i64 }, align 8
  %_94 = alloca { i64, i64 }, align 8
  %_75 = alloca { i64, i64 }, align 8
  %_70 = alloca { i64, i64 }, align 8
  %_52 = alloca { i8, i8 }, align 1
  %d = alloca i8, align 1
  %k = alloca i64, align 8
  %w = alloca i64, align 8
  %delta = alloca i64, align 8
  %n = alloca i64, align 8
  %i = alloca i64, align 8
  %bias = alloca i64, align 8
  %damp = alloca i64, align 8
  %_23 = alloca { i64, i32 }, align 8
  %_20 = alloca i8, align 1
  %_15 = alloca i32, align 4
  %iter = alloca { i8*, i8* }, align 8
  %len = alloca i64, align 8
  %_8 = alloca i8*, align 8
  %punycode_bytes = alloca %"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>", align 8
  %4 = alloca i8, align 1
  %insert = alloca { i32*, i64* }, align 8
  %5 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %insert, i32 0, i32 0
  store i32* %0, i32** %5, align 8
  %6 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %insert, i32 0, i32 1
  store i64* %1, i64** %6, align 8
  %7 = getelementptr inbounds %"v0::Ident", %"v0::Ident"* %self, i32 0, i32 1
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %7, i32 0, i32 0
  %_5.0 = load [0 x i8]*, [0 x i8]** %8, align 8, !nonnull !6
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %7, i32 0, i32 1
  %_5.1 = load i64, i64* %9, align 8
; invoke core::str::<impl str>::bytes
  %10 = invoke { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h7ba8043217c2c4a8E"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_4.0 = extractvalue { i8*, i8* } %10, 0
  %_4.1 = extractvalue { i8*, i8* } %10, 1
; invoke core::iter::traits::iterator::Iterator::peekable
  invoke void @_ZN4core4iter6traits8iterator8Iterator8peekable17h1f2270d43063e661E(%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* noalias nocapture sret(%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>") dereferenceable(24) %punycode_bytes, i8* nonnull %_4.0, i8* %_4.1)
          to label %bb2 unwind label %cleanup

bb111:                                            ; preds = %cleanup
  br label %bb112

cleanup:                                          ; preds = %bb58, %bb54, %bb53, %bb52, %panic31, %panic30, %panic29, %panic28, %panic27, %panic26, %panic25, %panic24, %panic23, %panic22, %panic21, %panic20, %panic19, %panic18, %panic17, %bb88, %bb87, %panic16, %bb86, %bb82, %bb78, %bb80, %bb76, %bb75, %bb74, %panic14, %bb72, %bb68, %bb67, %bb66, %panic12, %bb65, %bb61, %bb60, %bb59, %panic10, %bb49, %bb45, %bb44, %bb41, %bb43, %bb39, %bb38, %bb37, %panic7, %panic6, %panic4, %bb25, %bb24, %bb23, %panic2, %panic, %bb18, %bb14, %bb11, %bb9, %bb7, %bb6, %bb3, %bb2, %bb1, %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb111

bb2:                                              ; preds = %bb1
; invoke core::iter::adapters::peekable::Peekable<I>::peek
  %16 = invoke align 1 dereferenceable_or_null(1) i8* @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17hea9510914d643feaE"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* align 8 dereferenceable(24) %punycode_bytes)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i8* %16, i8** %_8, align 8
; invoke core::option::Option<T>::is_none
  %_6 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h04da669b53138af2E"(i8** align 8 dereferenceable(8) %_8)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br i1 %_6, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  store i64 0, i64* %len, align 8
  %17 = bitcast %"v0::Ident"* %self to { [0 x i8]*, i64 }*
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0
  %_13.0 = load [0 x i8]*, [0 x i8]** %18, align 8, !nonnull !6
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1
  %_13.1 = load i64, i64* %19, align 8
; invoke core::str::<impl str>::chars
  %20 = invoke { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %_13.0, i64 %_13.1)
          to label %bb7 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store i8 1, i8* %4, align 1
  br label %bb109

bb109:                                            ; preds = %bb27, %bb116, %bb81, %bb90, %bb120, %bb119, %bb118, %bb117, %bb115, %bb114, %bb113, %bb5
  br label %bb110

bb7:                                              ; preds = %bb6
  %_12.0 = extractvalue { i8*, i8* } %20, 0
  %_12.1 = extractvalue { i8*, i8* } %20, 1
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %21 = invoke { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h91537a05e6c7d97bE"(i8* nonnull %_12.0, i8* %_12.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %_11.0 = extractvalue { i8*, i8* } %21, 0
  %_11.1 = extractvalue { i8*, i8* } %21, 1
  %22 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 0
  store i8* %_11.0, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 1
  store i8* %_11.1, i8** %23, align 8
  br label %bb9

bb9:                                              ; preds = %bb19, %bb8
; invoke <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %24 = invoke i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %iter)
          to label %bb10 unwind label %cleanup, !range !4

bb10:                                             ; preds = %bb9
  store i32 %24, i32* %_15, align 4
  %25 = load i32, i32* %_15, align 4, !range !4
  %26 = sub i32 %25, 1114112
  %27 = icmp eq i32 %26, 0
  %_18 = select i1 %27, i64 0, i64 1
  switch i64 %_18, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  store i64 700, i64* %damp, align 8
  store i64 72, i64* %bias, align 8
  store i64 0, i64* %i, align 8
  store i64 128, i64* %n, align 8
  br label %bb20

bb11:                                             ; preds = %bb10
  %c = load i32, i32* %_15, align 4, !range !9
  %_24 = load i64, i64* %len, align 8
  %28 = bitcast { i64, i32 }* %_23 to i64*
  store i64 %_24, i64* %28, align 8
  %29 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_23, i32 0, i32 1
  store i32 %c, i32* %29, align 8
  %30 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_23, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_23, i32 0, i32 1
  %33 = load i32, i32* %32, align 8, !range !9
; invoke rustc_demangle::v0::Ident::try_small_punycode_decode::{{closure}}
  %_21 = invoke zeroext i1 @"_ZN14rustc_demangle2v05Ident25try_small_punycode_decode28_$u7b$$u7b$closure$u7d$$u7d$17hb85bffa76b85c931E"({ i32*, i64* }* align 8 dereferenceable(16) %insert, i64 %31, i32 %33)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb11
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %34 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h07e676857e262e08E"(i1 zeroext %_21)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %_20, align 1
  %36 = load i8, i8* %_20, align 1, !range !2
  %37 = trunc i8 %36 to i1
  %_26 = zext i1 %37 to i64
  switch i64 %_26, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb15
  unreachable

bb16:                                             ; preds = %bb15
  %38 = load i64, i64* %len, align 8
  %39 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %38, i64 1)
  %_30.0 = extractvalue { i64, i1 } %39, 0
  %_30.1 = extractvalue { i64, i1 } %39, 1
  %40 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %40, label %panic, label %bb19

bb18:                                             ; preds = %bb15
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %41 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a67b2acf235fe6eE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc938 to %"core::panic::location::Location"*))
          to label %bb113 unwind label %cleanup

bb113:                                            ; preds = %bb18
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %4, align 1
  br label %bb109

bb19:                                             ; preds = %bb16
  store i64 %_30.0, i64* %len, align 8
  br label %bb9

panic:                                            ; preds = %bb16
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc940 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic31, %panic30, %panic29, %panic28, %panic27, %panic26, %panic25, %panic24, %panic23, %panic22, %panic21, %panic20, %panic19, %panic18, %panic17, %panic16, %panic14, %panic12, %panic10, %panic7, %panic6, %panic4, %panic2, %panic
  unreachable

bb20:                                             ; preds = %bb108, %bb13
  store i64 0, i64* %delta, align 8
  store i64 1, i64* %w, align 8
  store i64 0, i64* %k, align 8
  br label %bb21

bb21:                                             ; preds = %bb56, %bb20
  %43 = load i64, i64* %k, align 8
  %44 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %43, i64 36)
  %_43.0 = extractvalue { i64, i1 } %44, 0
  %_43.1 = extractvalue { i64, i1 } %44, 1
  %45 = call i1 @llvm.expect.i1(i1 %_43.1, i1 false)
  br i1 %45, label %panic2, label %bb22

bb22:                                             ; preds = %bb21
  store i64 %_43.0, i64* %k, align 8
  %_47 = load i64, i64* %k, align 8
  %_48 = load i64, i64* %bias, align 8
  %46 = call i64 @llvm.usub.sat.i64(i64 %_47, i64 %_48)
  store i64 %46, i64* %2, align 8
  %47 = load i64, i64* %2, align 8
  br label %bb23

panic2:                                           ; preds = %bb21
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc942 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb23:                                             ; preds = %bb22
; invoke core::cmp::max
  %_45 = invoke i64 @_ZN4core3cmp3max17hcbe23ebba52ef57eE(i64 %47, i64 1)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
; invoke core::cmp::min
  %t = invoke i64 @_ZN4core3cmp3min17h660fa9d2c63b659cE(i64 %_45, i64 26)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
; invoke <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %48 = invoke { i8, i8 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2a351a9937e57a3bE"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* align 8 dereferenceable(24) %punycode_bytes)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
  store { i8, i8 } %48, { i8, i8 }* %_52, align 1
  %49 = bitcast { i8, i8 }* %_52 to i8*
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = trunc i8 %50 to i1
  %_58 = zext i1 %51 to i64
  %52 = icmp eq i64 %_58, 1
  br i1 %52, label %bb28, label %bb27

bb28:                                             ; preds = %bb26
  %53 = bitcast { i8, i8 }* %_52 to %"core::option::Option<u8>::Some"*
  %54 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %53, i32 0, i32 1
  %55 = load i8, i8* %54, align 1
  %_56 = icmp ule i8 97, %55
  br i1 %_56, label %bb29, label %bb30

bb27:                                             ; preds = %bb31, %bb30, %bb26
  store i8 1, i8* %4, align 1
  br label %bb109

bb30:                                             ; preds = %bb29, %bb28
  %56 = bitcast { i8, i8 }* %_52 to %"core::option::Option<u8>::Some"*
  %57 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %56, i32 0, i32 1
  %58 = load i8, i8* %57, align 1
  %_54 = icmp ule i8 48, %58
  br i1 %_54, label %bb31, label %bb27

bb29:                                             ; preds = %bb28
  %59 = bitcast { i8, i8 }* %_52 to %"core::option::Option<u8>::Some"*
  %60 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %59, i32 0, i32 1
  %61 = load i8, i8* %60, align 1
  %_57 = icmp ule i8 %61, 122
  br i1 %_57, label %bb32, label %bb30

bb32:                                             ; preds = %bb29
  %62 = bitcast { i8, i8 }* %_52 to %"core::option::Option<u8>::Some"*
  %63 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %62, i32 0, i32 1
  %d3 = load i8, i8* %63, align 1
  %64 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %d3, i8 97)
  %_61.0 = extractvalue { i8, i1 } %64, 0
  %_61.1 = extractvalue { i8, i1 } %64, 1
  %65 = call i1 @llvm.expect.i1(i1 %_61.1, i1 false)
  br i1 %65, label %panic4, label %bb33

bb33:                                             ; preds = %bb32
  store i8 %_61.0, i8* %d, align 1
  br label %bb37

panic4:                                           ; preds = %bb32
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc944 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb37:                                             ; preds = %bb36, %bb33
  %_68 = load i8, i8* %d, align 1
  %d8 = zext i8 %_68 to i64
  %_73 = load i64, i64* %delta, align 8
  %_79 = load i64, i64* %w, align 8
; invoke core::num::<impl usize>::checked_mul
  %66 = invoke { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17ha878e85f9d206771E"(i64 %d8, i64 %_79)
          to label %bb38 unwind label %cleanup

bb31:                                             ; preds = %bb30
  %67 = bitcast { i8, i8 }* %_52 to %"core::option::Option<u8>::Some"*
  %68 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %67, i32 0, i32 1
  %69 = load i8, i8* %68, align 1
  %_55 = icmp ule i8 %69, 57
  br i1 %_55, label %bb34, label %bb27

bb34:                                             ; preds = %bb31
  %70 = bitcast { i8, i8 }* %_52 to %"core::option::Option<u8>::Some"*
  %71 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %70, i32 0, i32 1
  %d5 = load i8, i8* %71, align 1
  %72 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %d5, i8 48)
  %_65.0 = extractvalue { i8, i1 } %72, 0
  %_65.1 = extractvalue { i8, i1 } %72, 1
  %73 = call i1 @llvm.expect.i1(i1 %_65.1, i1 false)
  br i1 %73, label %panic6, label %bb35

bb35:                                             ; preds = %bb34
  %74 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 26, i8 %_65.0)
  %_66.0 = extractvalue { i8, i1 } %74, 0
  %_66.1 = extractvalue { i8, i1 } %74, 1
  %75 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false)
  br i1 %75, label %panic7, label %bb36

panic6:                                           ; preds = %bb34
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc946 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb36:                                             ; preds = %bb35
  store i8 %_66.0, i8* %d, align 1
  br label %bb37

panic7:                                           ; preds = %bb35
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc948 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb38:                                             ; preds = %bb37
  %_77.0 = extractvalue { i64, i64 } %66, 0
  %_77.1 = extractvalue { i64, i64 } %66, 1
; invoke core::option::Option<T>::ok_or
  %76 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h091390f384d7e4a4E"(i64 %_77.0, i64 %_77.1)
          to label %bb39 unwind label %cleanup

bb39:                                             ; preds = %bb38
  %_76.0 = extractvalue { i64, i64 } %76, 0
  %_76.1 = extractvalue { i64, i64 } %76, 1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %77 = invoke { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h443a1d5e2a03c13bE"(i64 %_76.0, i64 %_76.1)
          to label %bb40 unwind label %cleanup

bb40:                                             ; preds = %bb39
  store { i64, i64 } %77, { i64, i64 }* %_75, align 8
  %78 = bitcast { i64, i64 }* %_75 to i64*
  %_81 = load i64, i64* %78, align 8, !range !5
  switch i64 %_81, label %bb42 [
    i64 0, label %bb41
    i64 1, label %bb43
  ]

bb42:                                             ; preds = %bb40
  unreachable

bb41:                                             ; preds = %bb40
  %79 = bitcast { i64, i64 }* %_75 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"*
  %80 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"* %79, i32 0, i32 1
  %val = load i64, i64* %80, align 8
; invoke core::num::<impl usize>::checked_add
  %81 = invoke { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h125bce0a72c69c92E"(i64 %_73, i64 %val)
          to label %bb44 unwind label %cleanup

bb43:                                             ; preds = %bb40
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %82 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a67b2acf235fe6eE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc950 to %"core::panic::location::Location"*))
          to label %bb114 unwind label %cleanup

bb114:                                            ; preds = %bb43
  %83 = zext i1 %82 to i8
  store i8 %83, i8* %4, align 1
  br label %bb109

bb44:                                             ; preds = %bb41
  %_72.0 = extractvalue { i64, i64 } %81, 0
  %_72.1 = extractvalue { i64, i64 } %81, 1
; invoke core::option::Option<T>::ok_or
  %84 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h091390f384d7e4a4E"(i64 %_72.0, i64 %_72.1)
          to label %bb45 unwind label %cleanup

bb45:                                             ; preds = %bb44
  %_71.0 = extractvalue { i64, i64 } %84, 0
  %_71.1 = extractvalue { i64, i64 } %84, 1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %85 = invoke { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h443a1d5e2a03c13bE"(i64 %_71.0, i64 %_71.1)
          to label %bb46 unwind label %cleanup

bb46:                                             ; preds = %bb45
  store { i64, i64 } %85, { i64, i64 }* %_70, align 8
  %86 = bitcast { i64, i64 }* %_70 to i64*
  %_86 = load i64, i64* %86, align 8, !range !5
  switch i64 %_86, label %bb48 [
    i64 0, label %bb47
    i64 1, label %bb49
  ]

bb48:                                             ; preds = %bb46
  unreachable

bb47:                                             ; preds = %bb46
  %87 = bitcast { i64, i64 }* %_70 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"*
  %88 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"* %87, i32 0, i32 1
  %val9 = load i64, i64* %88, align 8
  store i64 %val9, i64* %delta, align 8
  %_90 = icmp ult i64 %d8, %t
  br i1 %_90, label %bb50, label %bb51

bb49:                                             ; preds = %bb46
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %89 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a67b2acf235fe6eE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc952 to %"core::panic::location::Location"*))
          to label %bb115 unwind label %cleanup

bb115:                                            ; preds = %bb49
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %4, align 1
  br label %bb109

bb51:                                             ; preds = %bb47
  %_97 = load i64, i64* %w, align 8
  %91 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 36, i64 %t)
  %_101.0 = extractvalue { i64, i1 } %91, 0
  %_101.1 = extractvalue { i64, i1 } %91, 1
  %92 = call i1 @llvm.expect.i1(i1 %_101.1, i1 false)
  br i1 %92, label %panic31, label %bb52

bb50:                                             ; preds = %bb47
  %93 = load i64, i64* %len, align 8
  %94 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %93, i64 1)
  %_107.0 = extractvalue { i64, i1 } %94, 0
  %_107.1 = extractvalue { i64, i1 } %94, 1
  %95 = call i1 @llvm.expect.i1(i1 %_107.1, i1 false)
  br i1 %95, label %panic10, label %bb59

bb59:                                             ; preds = %bb50
  store i64 %_107.0, i64* %len, align 8
  %_112 = load i64, i64* %i, align 8
  %_113 = load i64, i64* %delta, align 8
; invoke core::num::<impl usize>::checked_add
  %96 = invoke { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h125bce0a72c69c92E"(i64 %_112, i64 %_113)
          to label %bb60 unwind label %cleanup

panic10:                                          ; preds = %bb50
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc954 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb60:                                             ; preds = %bb59
  %_111.0 = extractvalue { i64, i64 } %96, 0
  %_111.1 = extractvalue { i64, i64 } %96, 1
; invoke core::option::Option<T>::ok_or
  %97 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h091390f384d7e4a4E"(i64 %_111.0, i64 %_111.1)
          to label %bb61 unwind label %cleanup

bb61:                                             ; preds = %bb60
  %_110.0 = extractvalue { i64, i64 } %97, 0
  %_110.1 = extractvalue { i64, i64 } %97, 1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %98 = invoke { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h443a1d5e2a03c13bE"(i64 %_110.0, i64 %_110.1)
          to label %bb62 unwind label %cleanup

bb62:                                             ; preds = %bb61
  store { i64, i64 } %98, { i64, i64 }* %_109, align 8
  %99 = bitcast { i64, i64 }* %_109 to i64*
  %_115 = load i64, i64* %99, align 8, !range !5
  switch i64 %_115, label %bb64 [
    i64 0, label %bb63
    i64 1, label %bb65
  ]

bb64:                                             ; preds = %bb62
  unreachable

bb63:                                             ; preds = %bb62
  %100 = bitcast { i64, i64 }* %_109 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"*
  %101 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"* %100, i32 0, i32 1
  %val11 = load i64, i64* %101, align 8
  store i64 %val11, i64* %i, align 8
  %_123 = load i64, i64* %n, align 8
  %_125 = load i64, i64* %i, align 8
  %_126 = load i64, i64* %len, align 8
  %_127 = icmp eq i64 %_126, 0
  %102 = call i1 @llvm.expect.i1(i1 %_127, i1 false)
  br i1 %102, label %panic12, label %bb66

bb65:                                             ; preds = %bb62
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %103 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a67b2acf235fe6eE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc956 to %"core::panic::location::Location"*))
          to label %bb117 unwind label %cleanup

bb117:                                            ; preds = %bb65
  %104 = zext i1 %103 to i8
  store i8 %104, i8* %4, align 1
  br label %bb109

bb66:                                             ; preds = %bb63
  %_124 = udiv i64 %_125, %_126
; invoke core::num::<impl usize>::checked_add
  %105 = invoke { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h125bce0a72c69c92E"(i64 %_123, i64 %_124)
          to label %bb67 unwind label %cleanup

panic12:                                          ; preds = %bb63
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.a to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc958 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb67:                                             ; preds = %bb66
  %_122.0 = extractvalue { i64, i64 } %105, 0
  %_122.1 = extractvalue { i64, i64 } %105, 1
; invoke core::option::Option<T>::ok_or
  %106 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h091390f384d7e4a4E"(i64 %_122.0, i64 %_122.1)
          to label %bb68 unwind label %cleanup

bb68:                                             ; preds = %bb67
  %_121.0 = extractvalue { i64, i64 } %106, 0
  %_121.1 = extractvalue { i64, i64 } %106, 1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %107 = invoke { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h443a1d5e2a03c13bE"(i64 %_121.0, i64 %_121.1)
          to label %bb69 unwind label %cleanup

bb69:                                             ; preds = %bb68
  store { i64, i64 } %107, { i64, i64 }* %_120, align 8
  %108 = bitcast { i64, i64 }* %_120 to i64*
  %_129 = load i64, i64* %108, align 8, !range !5
  switch i64 %_129, label %bb71 [
    i64 0, label %bb70
    i64 1, label %bb72
  ]

bb71:                                             ; preds = %bb69
  unreachable

bb70:                                             ; preds = %bb69
  %109 = bitcast { i64, i64 }* %_120 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"*
  %110 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"* %109, i32 0, i32 1
  %val13 = load i64, i64* %110, align 8
  store i64 %val13, i64* %n, align 8
  %_133 = load i64, i64* %len, align 8
  %_134 = icmp eq i64 %_133, 0
  %111 = call i1 @llvm.expect.i1(i1 %_134, i1 false)
  br i1 %111, label %panic14, label %bb73

bb72:                                             ; preds = %bb69
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %112 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a67b2acf235fe6eE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc960 to %"core::panic::location::Location"*))
          to label %bb118 unwind label %cleanup

bb118:                                            ; preds = %bb72
  %113 = zext i1 %112 to i8
  store i8 %113, i8* %4, align 1
  br label %bb109

bb73:                                             ; preds = %bb70
  %114 = load i64, i64* %i, align 8
  %115 = urem i64 %114, %_133
  store i64 %115, i64* %i, align 8
  %_136 = load i64, i64* %n, align 8
  %n_u32 = trunc i64 %_136 to i32
  %_139 = zext i32 %n_u32 to i64
  %_141 = load i64, i64* %n, align 8
  %_138 = icmp eq i64 %_139, %_141
  br i1 %_138, label %bb74, label %bb81

panic14:                                          ; preds = %bb70
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([57 x i8]* @str.2 to [0 x i8]*), i64 57, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc962 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb81:                                             ; preds = %bb73
  store i8 1, i8* %4, align 1
  br label %bb109

bb74:                                             ; preds = %bb73
; invoke core::char::convert::from_u32
  %_144 = invoke i32 @_ZN4core4char7convert8from_u3217hfc48b652e448c2aeE(i32 %n_u32)
          to label %bb75 unwind label %cleanup, !range !4

bb75:                                             ; preds = %bb74
; invoke core::option::Option<T>::ok_or
  %_143 = invoke i32 @"_ZN4core6option15Option$LT$T$GT$5ok_or17h687a3258cde42d6fE"(i32 %_144)
          to label %bb76 unwind label %cleanup, !range !4

bb76:                                             ; preds = %bb75
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %116 = invoke i32 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h81b60cced47ae1a7E"(i32 %_143)
          to label %bb77 unwind label %cleanup, !range !4

bb77:                                             ; preds = %bb76
  store i32 %116, i32* %_142, align 4
  %117 = load i32, i32* %_142, align 4, !range !4
  %118 = sub i32 %117, 1114112
  %119 = icmp eq i32 %118, 0
  %_147 = select i1 %119, i64 1, i64 0
  switch i64 %_147, label %bb79 [
    i64 0, label %bb78
    i64 1, label %bb80
  ]

bb79:                                             ; preds = %bb77
  unreachable

bb78:                                             ; preds = %bb77
  %val15 = load i32, i32* %_142, align 4, !range !9
  %_155 = load i64, i64* %i, align 8
  %120 = bitcast { i64, i32 }* %_154 to i64*
  store i64 %_155, i64* %120, align 8
  %121 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_154, i32 0, i32 1
  store i32 %val15, i32* %121, align 8
  %122 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_154, i32 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_154, i32 0, i32 1
  %125 = load i32, i32* %124, align 8, !range !9
; invoke rustc_demangle::v0::Ident::try_small_punycode_decode::{{closure}}
  %_152 = invoke zeroext i1 @"_ZN14rustc_demangle2v05Ident25try_small_punycode_decode28_$u7b$$u7b$closure$u7d$$u7d$17hb85bffa76b85c931E"({ i32*, i64* }* align 8 dereferenceable(16) %insert, i64 %123, i32 %125)
          to label %bb82 unwind label %cleanup

bb80:                                             ; preds = %bb77
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %126 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a67b2acf235fe6eE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc964 to %"core::panic::location::Location"*))
          to label %bb119 unwind label %cleanup

bb119:                                            ; preds = %bb80
  %127 = zext i1 %126 to i8
  store i8 %127, i8* %4, align 1
  br label %bb109

bb82:                                             ; preds = %bb78
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %128 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h07e676857e262e08E"(i1 zeroext %_152)
          to label %bb83 unwind label %cleanup

bb83:                                             ; preds = %bb82
  %129 = zext i1 %128 to i8
  store i8 %129, i8* %_151, align 1
  %130 = load i8, i8* %_151, align 1, !range !2
  %131 = trunc i8 %130 to i1
  %_157 = zext i1 %131 to i64
  switch i64 %_157, label %bb85 [
    i64 0, label %bb84
    i64 1, label %bb86
  ]

bb85:                                             ; preds = %bb83
  unreachable

bb84:                                             ; preds = %bb83
  %132 = load i64, i64* %i, align 8
  %133 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %132, i64 1)
  %_161.0 = extractvalue { i64, i1 } %133, 0
  %_161.1 = extractvalue { i64, i1 } %133, 1
  %134 = call i1 @llvm.expect.i1(i1 %_161.1, i1 false)
  br i1 %134, label %panic16, label %bb87

bb86:                                             ; preds = %bb83
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %135 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a67b2acf235fe6eE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc966 to %"core::panic::location::Location"*))
          to label %bb120 unwind label %cleanup

bb120:                                            ; preds = %bb86
  %136 = zext i1 %135 to i8
  store i8 %136, i8* %4, align 1
  br label %bb109

bb87:                                             ; preds = %bb84
  store i64 %_161.0, i64* %i, align 8
; invoke core::iter::adapters::peekable::Peekable<I>::peek
  %137 = invoke align 1 dereferenceable_or_null(1) i8* @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17hea9510914d643feaE"(%"core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>"* align 8 dereferenceable(24) %punycode_bytes)
          to label %bb88 unwind label %cleanup

panic16:                                          ; preds = %bb84
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc968 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb88:                                             ; preds = %bb87
  store i8* %137, i8** %_164, align 8
; invoke core::option::Option<T>::is_none
  %_162 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h04da669b53138af2E"(i8** align 8 dereferenceable(8) %_164)
          to label %bb89 unwind label %cleanup

bb89:                                             ; preds = %bb88
  br i1 %_162, label %bb90, label %bb91

bb91:                                             ; preds = %bb89
  %_166 = load i64, i64* %damp, align 8
  %_167 = icmp eq i64 %_166, 0
  %138 = call i1 @llvm.expect.i1(i1 %_167, i1 false)
  br i1 %138, label %panic17, label %bb92

bb90:                                             ; preds = %bb89
  store i8 0, i8* %4, align 1
  br label %bb109

bb92:                                             ; preds = %bb91
  %139 = load i64, i64* %delta, align 8
  %140 = udiv i64 %139, %_166
  store i64 %140, i64* %delta, align 8
  store i64 2, i64* %damp, align 8
  %_169 = load i64, i64* %delta, align 8
  %_170 = load i64, i64* %len, align 8
  %_171 = icmp eq i64 %_170, 0
  %141 = call i1 @llvm.expect.i1(i1 %_171, i1 false)
  br i1 %141, label %panic18, label %bb93

panic17:                                          ; preds = %bb91
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.a to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc970 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb93:                                             ; preds = %bb92
  %_168 = udiv i64 %_169, %_170
  %142 = load i64, i64* %delta, align 8
  %143 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %142, i64 %_168)
  %_172.0 = extractvalue { i64, i1 } %143, 0
  %_172.1 = extractvalue { i64, i1 } %143, 1
  %144 = call i1 @llvm.expect.i1(i1 %_172.1, i1 false)
  br i1 %144, label %panic19, label %bb94

panic18:                                          ; preds = %bb92
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.a to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc972 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb94:                                             ; preds = %bb93
  store i64 %_172.0, i64* %delta, align 8
  store i64 0, i64* %k1, align 8
  br label %bb95

panic19:                                          ; preds = %bb93
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc974 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb95:                                             ; preds = %bb101, %bb94
  %_175 = load i64, i64* %delta, align 8
  %145 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 36, i64 1)
  %_181.0 = extractvalue { i64, i1 } %145, 0
  %_181.1 = extractvalue { i64, i1 } %145, 1
  %146 = call i1 @llvm.expect.i1(i1 %_181.1, i1 false)
  br i1 %146, label %panic20, label %bb96

bb96:                                             ; preds = %bb95
  %147 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_181.0, i64 26)
  %_183.0 = extractvalue { i64, i1 } %147, 0
  %_183.1 = extractvalue { i64, i1 } %147, 1
  %148 = call i1 @llvm.expect.i1(i1 %_183.1, i1 false)
  br i1 %148, label %panic21, label %bb97

panic20:                                          ; preds = %bb95
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc976 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb97:                                             ; preds = %bb96
  %_176 = udiv i64 %_183.0, 2
  %_174 = icmp ugt i64 %_175, %_176
  br i1 %_174, label %bb98, label %bb102

panic21:                                          ; preds = %bb96
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.b to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc978 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb102:                                            ; preds = %bb97
  %_191 = load i64, i64* %k1, align 8
  %149 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 36, i64 1)
  %_198.0 = extractvalue { i64, i1 } %149, 0
  %_198.1 = extractvalue { i64, i1 } %149, 1
  %150 = call i1 @llvm.expect.i1(i1 %_198.1, i1 false)
  br i1 %150, label %panic25, label %bb103

bb98:                                             ; preds = %bb97
  %151 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 36, i64 1)
  %_187.0 = extractvalue { i64, i1 } %151, 0
  %_187.1 = extractvalue { i64, i1 } %151, 1
  %152 = call i1 @llvm.expect.i1(i1 %_187.1, i1 false)
  br i1 %152, label %panic22, label %bb99

bb99:                                             ; preds = %bb98
  %_188 = icmp eq i64 %_187.0, 0
  %153 = call i1 @llvm.expect.i1(i1 %_188, i1 false)
  br i1 %153, label %panic23, label %bb100

panic22:                                          ; preds = %bb98
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc980 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb100:                                            ; preds = %bb99
  %154 = load i64, i64* %delta, align 8
  %155 = udiv i64 %154, %_187.0
  store i64 %155, i64* %delta, align 8
  %156 = load i64, i64* %k1, align 8
  %157 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %156, i64 36)
  %_190.0 = extractvalue { i64, i1 } %157, 0
  %_190.1 = extractvalue { i64, i1 } %157, 1
  %158 = call i1 @llvm.expect.i1(i1 %_190.1, i1 false)
  br i1 %158, label %panic24, label %bb101

panic23:                                          ; preds = %bb99
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.a to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc982 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb101:                                            ; preds = %bb100
  store i64 %_190.0, i64* %k1, align 8
  br label %bb95

panic24:                                          ; preds = %bb100
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc984 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb103:                                            ; preds = %bb102
  %159 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_198.0, i64 1)
  %_199.0 = extractvalue { i64, i1 } %159, 0
  %_199.1 = extractvalue { i64, i1 } %159, 1
  %160 = call i1 @llvm.expect.i1(i1 %_199.1, i1 false)
  br i1 %160, label %panic26, label %bb104

panic25:                                          ; preds = %bb102
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc986 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb104:                                            ; preds = %bb103
  %_200 = load i64, i64* %delta, align 8
  %161 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_199.0, i64 %_200)
  %_201.0 = extractvalue { i64, i1 } %161, 0
  %_201.1 = extractvalue { i64, i1 } %161, 1
  %162 = call i1 @llvm.expect.i1(i1 %_201.1, i1 false)
  br i1 %162, label %panic27, label %bb105

panic26:                                          ; preds = %bb103
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc988 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb105:                                            ; preds = %bb104
  %_203 = load i64, i64* %delta, align 8
  %163 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_203, i64 38)
  %_205.0 = extractvalue { i64, i1 } %163, 0
  %_205.1 = extractvalue { i64, i1 } %163, 1
  %164 = call i1 @llvm.expect.i1(i1 %_205.1, i1 false)
  br i1 %164, label %panic28, label %bb106

panic27:                                          ; preds = %bb104
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.b to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc990 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb106:                                            ; preds = %bb105
  %_206 = icmp eq i64 %_205.0, 0
  %165 = call i1 @llvm.expect.i1(i1 %_206, i1 false)
  br i1 %165, label %panic29, label %bb107

panic28:                                          ; preds = %bb105
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc992 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb107:                                            ; preds = %bb106
  %_192 = udiv i64 %_201.0, %_205.0
  %166 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_191, i64 %_192)
  %_207.0 = extractvalue { i64, i1 } %166, 0
  %_207.1 = extractvalue { i64, i1 } %166, 1
  %167 = call i1 @llvm.expect.i1(i1 %_207.1, i1 false)
  br i1 %167, label %panic30, label %bb108

panic29:                                          ; preds = %bb106
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.a to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc990 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb108:                                            ; preds = %bb107
  store i64 %_207.0, i64* %bias, align 8
  br label %bb20

panic30:                                          ; preds = %bb107
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc994 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb52:                                             ; preds = %bb51
; invoke core::num::<impl usize>::checked_mul
  %168 = invoke { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17ha878e85f9d206771E"(i64 %_97, i64 %_101.0)
          to label %bb53 unwind label %cleanup

panic31:                                          ; preds = %bb51
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc996 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb53:                                             ; preds = %bb52
  %_96.0 = extractvalue { i64, i64 } %168, 0
  %_96.1 = extractvalue { i64, i64 } %168, 1
; invoke core::option::Option<T>::ok_or
  %169 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h091390f384d7e4a4E"(i64 %_96.0, i64 %_96.1)
          to label %bb54 unwind label %cleanup

bb54:                                             ; preds = %bb53
  %_95.0 = extractvalue { i64, i64 } %169, 0
  %_95.1 = extractvalue { i64, i64 } %169, 1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %170 = invoke { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h443a1d5e2a03c13bE"(i64 %_95.0, i64 %_95.1)
          to label %bb55 unwind label %cleanup

bb55:                                             ; preds = %bb54
  store { i64, i64 } %170, { i64, i64 }* %_94, align 8
  %171 = bitcast { i64, i64 }* %_94 to i64*
  %_103 = load i64, i64* %171, align 8, !range !5
  switch i64 %_103, label %bb57 [
    i64 0, label %bb56
    i64 1, label %bb58
  ]

bb57:                                             ; preds = %bb55
  unreachable

bb56:                                             ; preds = %bb55
  %172 = bitcast { i64, i64 }* %_94 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"*
  %173 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"* %172, i32 0, i32 1
  %val32 = load i64, i64* %173, align 8
  store i64 %val32, i64* %w, align 8
  br label %bb21

bb58:                                             ; preds = %bb55
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %174 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8a67b2acf235fe6eE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc998 to %"core::panic::location::Location"*))
          to label %bb116 unwind label %cleanup

bb116:                                            ; preds = %bb58
  %175 = zext i1 %174 to i8
  store i8 %175, i8* %4, align 1
  br label %bb109

bb112:                                            ; preds = %bb111
  %176 = bitcast { i8*, i32 }* %3 to i8**
  %177 = load i8*, i8** %176, align 8
  %178 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %179 = load i32, i32* %178, align 8
  %180 = insertvalue { i8*, i32 } undef, i8* %177, 0
  %181 = insertvalue { i8*, i32 } %180, i32 %179, 1
  resume { i8*, i32 } %181

bb110:                                            ; preds = %bb109
  %182 = load i8, i8* %4, align 1, !range !2
  %183 = trunc i8 %182 to i1
  ret i1 %183
}

; <rustc_demangle::v0::Ident as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h88f2e10d4b4a2df4E"(%"v0::Ident"* align 8 dereferenceable(32) %0, %"core::fmt::Formatter"* align 8 dereferenceable(64) %1) unnamed_addr #0 {
start:
  %_7 = alloca { i64*, i64* }, align 8
  %_5 = alloca i64*, align 8
  %f = alloca %"core::fmt::Formatter"*, align 8
  %self = alloca %"v0::Ident"*, align 8
  store %"v0::Ident"* %0, %"v0::Ident"** %self, align 8
  store %"core::fmt::Formatter"* %1, %"core::fmt::Formatter"** %f, align 8
  %_4 = load %"v0::Ident"*, %"v0::Ident"** %self, align 8, !nonnull !6
  %2 = bitcast i64** %_5 to %"core::fmt::Formatter"***
  store %"core::fmt::Formatter"** %f, %"core::fmt::Formatter"*** %2, align 8
  %3 = load i64*, i64** %_5, align 8, !nonnull !6
; call rustc_demangle::v0::Ident::try_small_punycode_decode
  %_3 = call i8 @_ZN14rustc_demangle2v05Ident25try_small_punycode_decode17h4a222993a24b37adE(%"v0::Ident"* align 8 dereferenceable(32) %_4, i64* align 8 dereferenceable(8) %3), !range !7
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { i64*, i64* }* %_7 to %"v0::Ident"***
  store %"v0::Ident"** %self, %"v0::Ident"*** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 1
  %6 = bitcast i64** %5 to %"core::fmt::Formatter"***
  store %"core::fmt::Formatter"** %f, %"core::fmt::Formatter"*** %6, align 8
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8, !nonnull !6
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 1
  %10 = load i64*, i64** %9, align 8, !nonnull !6
; call core::option::Option<T>::unwrap_or_else
  %11 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h4f0eb1250534e3baE"(i8 %_3, i64* align 8 dereferenceable(8) %8, i64* align 8 dereferenceable(8) %10)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %11
}

; <rustc_demangle::v0::Ident as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h95fd8ea3cb6d5a9dE"(i64* align 8 dereferenceable(8) %_1, [0 x i32]* nonnull align 4 %chars.0, i64 %chars.1) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %c = alloca i32, align 4
  %_6 = alloca i32*, align 8
  %iter = alloca { i32*, i32* }, align 8
  %0 = alloca i8, align 1
; call core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %1 = call { i32*, i32* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h584399c93a289115E"([0 x i32]* nonnull align 4 %chars.0, i64 %chars.1)
  %_3.0 = extractvalue { i32*, i32* } %1, 0
  %_3.1 = extractvalue { i32*, i32* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %iter, i32 0, i32 0
  store i32* %_3.0, i32** %2, align 8
  %3 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %iter, i32 0, i32 1
  store i32* %_3.1, i32** %3, align 8
  br label %bb2

bb2:                                              ; preds = %bb8, %bb1
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %4 = call align 4 dereferenceable_or_null(4) i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h651fefdc03932377E"({ i32*, i32* }* align 8 dereferenceable(16) %iter)
  store i32* %4, i32** %_6, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast i32** %_6 to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_9 = select i1 %7, i64 0, i64 1
  switch i64 %_9, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  store i8 0, i8* %0, align 1
  br label %bb11

bb4:                                              ; preds = %bb3
  %8 = load i32*, i32** %_6, align 8, !nonnull !6
  %9 = load i32, i32* %8, align 4, !range !9
  store i32 %9, i32* %c, align 4
  %10 = bitcast i64* %_1 to %"core::fmt::Formatter"**
  %11 = bitcast i64* %_1 to %"core::fmt::Formatter"**
  %_14 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %11, align 8, !nonnull !6
; call <char as core::fmt::Display>::fmt
  %_12 = call zeroext i1 @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h011d980131b3c87bE"(i32* align 4 dereferenceable(4) %c, %"core::fmt::Formatter"* align 8 dereferenceable(64) %_14)
  br label %bb7

bb7:                                              ; preds = %bb4
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_12)
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %_11, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %14 = load i8, i8* %_11, align 1, !range !2
  %15 = trunc i8 %14 to i1
  %_15 = zext i1 %15 to i64
  switch i64 %_15, label %bb9 [
    i64 0, label %bb2
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb8
  unreachable

bb10:                                             ; preds = %bb8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %16 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1000 to %"core::panic::location::Location"*))
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %0, align 1
  br label %bb11

bb11:                                             ; preds = %bb6, %bb10
  %18 = load i8, i8* %0, align 1, !range !2
  %19 = trunc i8 %18 to i1
  ret i1 %19
}

; <rustc_demangle::v0::Ident as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h40126978f357dbd4E"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #1 {
start:
  %_34 = alloca i8, align 1
  %_25 = alloca i8, align 1
  %_17 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %0 = alloca i8, align 1
  %1 = bitcast i64* %_1.0 to %"v0::Ident"**
  %2 = bitcast i64* %_1.0 to %"v0::Ident"**
  %3 = bitcast i64* %_1.0 to %"v0::Ident"**
  %4 = load %"v0::Ident"*, %"v0::Ident"** %3, align 8, !nonnull !6
  %5 = getelementptr inbounds %"v0::Ident", %"v0::Ident"* %4, i32 0, i32 1
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !6
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %_4.1 = load i64, i64* %7, align 8
; call core::str::<impl str>::is_empty
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17he6e5338d5d9dd13dE"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb25

bb25:                                             ; preds = %bb1
  %8 = bitcast i64* %_1.1 to %"core::fmt::Formatter"**
  %9 = bitcast i64* %_1.1 to %"core::fmt::Formatter"**
  %_45 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %9, align 8, !nonnull !6
  %10 = bitcast i64* %_1.0 to %"v0::Ident"**
  %11 = bitcast i64* %_1.0 to %"v0::Ident"**
  %12 = bitcast i64* %_1.0 to %"v0::Ident"**
  %13 = load %"v0::Ident"*, %"v0::Ident"** %12, align 8, !nonnull !6
  %14 = bitcast %"v0::Ident"* %13 to { [0 x i8]*, i64 }*
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0
  %_46.0 = load [0 x i8]*, [0 x i8]** %15, align 8, !nonnull !6
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1
  %_46.1 = load i64, i64* %16, align 8
; call core::fmt::Formatter::write_str
  %17 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %_45, [0 x i8]* nonnull align 1 %_46.0, i64 %_46.1)
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %0, align 1
  br label %bb26

bb2:                                              ; preds = %bb1
  %19 = bitcast i64* %_1.1 to %"core::fmt::Formatter"**
  %20 = bitcast i64* %_1.1 to %"core::fmt::Formatter"**
  %_7 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %20, align 8, !nonnull !6
; call core::fmt::Formatter::write_str
  %_6 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [9 x i8] }>* @alloc1001 to [0 x i8]*), i64 9)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_6)
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %_5, align 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %23 = load i8, i8* %_5, align 1, !range !2
  %24 = trunc i8 %23 to i1
  %_10 = zext i1 %24 to i64
  switch i64 %_10, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %25 = bitcast i64* %_1.0 to %"v0::Ident"**
  %26 = bitcast i64* %_1.0 to %"v0::Ident"**
  %27 = bitcast i64* %_1.0 to %"v0::Ident"**
  %28 = load %"v0::Ident"*, %"v0::Ident"** %27, align 8, !nonnull !6
  %29 = bitcast %"v0::Ident"* %28 to { [0 x i8]*, i64 }*
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 0
  %_16.0 = load [0 x i8]*, [0 x i8]** %30, align 8, !nonnull !6
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 1
  %_16.1 = load i64, i64* %31, align 8
; call core::str::<impl str>::is_empty
  %_15 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17he6e5338d5d9dd13dE"([0 x i8]* nonnull align 1 %_16.0, i64 %_16.1)
  br label %bb8

bb7:                                              ; preds = %bb4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %32 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1003 to %"core::panic::location::Location"*))
  %33 = zext i1 %32 to i8
  store i8 %33, i8* %0, align 1
  br label %bb26

bb26:                                             ; preds = %bb25, %bb22, %bb24, %bb18, %bb14, %bb7
  %34 = load i8, i8* %0, align 1, !range !2
  %35 = trunc i8 %34 to i1
  ret i1 %35

bb8:                                              ; preds = %bb5
  %_14 = xor i1 %_15, true
  br i1 %_14, label %bb9, label %bb19

bb19:                                             ; preds = %bb16, %bb8
  %36 = bitcast i64* %_1.1 to %"core::fmt::Formatter"**
  %37 = bitcast i64* %_1.1 to %"core::fmt::Formatter"**
  %_36 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %37, align 8, !nonnull !6
  %38 = bitcast i64* %_1.0 to %"v0::Ident"**
  %39 = bitcast i64* %_1.0 to %"v0::Ident"**
  %40 = bitcast i64* %_1.0 to %"v0::Ident"**
  %41 = load %"v0::Ident"*, %"v0::Ident"** %40, align 8, !nonnull !6
  %42 = getelementptr inbounds %"v0::Ident", %"v0::Ident"* %41, i32 0, i32 1
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 0
  %_37.0 = load [0 x i8]*, [0 x i8]** %43, align 8, !nonnull !6
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 1
  %_37.1 = load i64, i64* %44, align 8
; call core::fmt::Formatter::write_str
  %_35 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %_36, [0 x i8]* nonnull align 1 %_37.0, i64 %_37.1)
  br label %bb20

bb9:                                              ; preds = %bb8
  %45 = bitcast i64* %_1.1 to %"core::fmt::Formatter"**
  %46 = bitcast i64* %_1.1 to %"core::fmt::Formatter"**
  %_19 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %46, align 8, !nonnull !6
  %47 = bitcast i64* %_1.0 to %"v0::Ident"**
  %48 = bitcast i64* %_1.0 to %"v0::Ident"**
  %49 = bitcast i64* %_1.0 to %"v0::Ident"**
  %50 = load %"v0::Ident"*, %"v0::Ident"** %49, align 8, !nonnull !6
  %51 = bitcast %"v0::Ident"* %50 to { [0 x i8]*, i64 }*
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %51, i32 0, i32 0
  %_20.0 = load [0 x i8]*, [0 x i8]** %52, align 8, !nonnull !6
  %53 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %51, i32 0, i32 1
  %_20.1 = load i64, i64* %53, align 8
; call core::fmt::Formatter::write_str
  %_18 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %_19, [0 x i8]* nonnull align 1 %_20.0, i64 %_20.1)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %54 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_18)
  %55 = zext i1 %54 to i8
  store i8 %55, i8* %_17, align 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %56 = load i8, i8* %_17, align 1, !range !2
  %57 = trunc i8 %56 to i1
  %_21 = zext i1 %57 to i64
  switch i64 %_21, label %bb13 [
    i64 0, label %bb12
    i64 1, label %bb14
  ]

bb13:                                             ; preds = %bb11
  unreachable

bb12:                                             ; preds = %bb11
  %58 = bitcast i64* %_1.1 to %"core::fmt::Formatter"**
  %59 = bitcast i64* %_1.1 to %"core::fmt::Formatter"**
  %_27 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %59, align 8, !nonnull !6
; call core::fmt::Formatter::write_str
  %_26 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %_27, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1537 to [0 x i8]*), i64 1)
  br label %bb15

bb14:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %60 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1005 to %"core::panic::location::Location"*))
  %61 = zext i1 %60 to i8
  store i8 %61, i8* %0, align 1
  br label %bb26

bb15:                                             ; preds = %bb12
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %62 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_26)
  %63 = zext i1 %62 to i8
  store i8 %63, i8* %_25, align 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %64 = load i8, i8* %_25, align 1, !range !2
  %65 = trunc i8 %64 to i1
  %_30 = zext i1 %65 to i64
  switch i64 %_30, label %bb17 [
    i64 0, label %bb19
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb16
  unreachable

bb18:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %66 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1008 to %"core::panic::location::Location"*))
  %67 = zext i1 %66 to i8
  store i8 %67, i8* %0, align 1
  br label %bb26

bb20:                                             ; preds = %bb19
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %68 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_35)
  %69 = zext i1 %68 to i8
  store i8 %69, i8* %_34, align 1
  br label %bb21

bb21:                                             ; preds = %bb20
  %70 = load i8, i8* %_34, align 1, !range !2
  %71 = trunc i8 %70 to i1
  %_38 = zext i1 %71 to i64
  switch i64 %_38, label %bb23 [
    i64 0, label %bb22
    i64 1, label %bb24
  ]

bb23:                                             ; preds = %bb21
  unreachable

bb22:                                             ; preds = %bb21
  %72 = bitcast i64* %_1.1 to %"core::fmt::Formatter"**
  %73 = bitcast i64* %_1.1 to %"core::fmt::Formatter"**
  %_42 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %73, align 8, !nonnull !6
; call core::fmt::Formatter::write_str
  %74 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %_42, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1547 to [0 x i8]*), i64 1)
  %75 = zext i1 %74 to i8
  store i8 %75, i8* %0, align 1
  br label %bb26

bb24:                                             ; preds = %bb21
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %76 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1010 to %"core::panic::location::Location"*))
  %77 = zext i1 %76 to i8
  store i8 %77, i8* %0, align 1
  br label %bb26
}

; rustc_demangle::v0::HexNibbles::try_parse_uint
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h4d70f3626eae2246E({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_12 = alloca i32, align 4
  %iter = alloca { i8*, i8* }, align 8
  %v = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !6
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_3.1 = load i64, i64* %3, align 8
; call core::str::<impl str>::trim_start_matches
  %4 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$18trim_start_matches17hb8cc9abd29dec8bfE"([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1012 to [0 x i8]*), i64 1)
  %nibbles.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %nibbles.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::<impl str>::len
  %_5 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %nibbles.0, i64 %nibbles.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = icmp ugt i64 %_5, 16
  br i1 %_4, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  store i64 0, i64* %v, align 8
; call core::str::<impl str>::chars
  %5 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %nibbles.0, i64 %nibbles.1)
  %_9.0 = extractvalue { i8*, i8* } %5, 0
  %_9.1 = extractvalue { i8*, i8* } %5, 1
  br label %bb5

bb3:                                              ; preds = %bb2
  %6 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %6, align 8
  br label %bb15

bb15:                                             ; preds = %bb11, %bb3
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8, !range !5
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12

bb5:                                              ; preds = %bb4
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %13 = call { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h91537a05e6c7d97bE"(i8* nonnull %_9.0, i8* %_9.1)
  %_8.0 = extractvalue { i8*, i8* } %13, 0
  %_8.1 = extractvalue { i8*, i8* } %13, 1
  br label %bb6

bb6:                                              ; preds = %bb5
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 0
  store i8* %_8.0, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 1
  store i8* %_8.1, i8** %15, align 8
  br label %bb7

bb7:                                              ; preds = %bb14, %bb6
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %16 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %iter), !range !4
  store i32 %16, i32* %_12, align 4
  br label %bb8

bb8:                                              ; preds = %bb7
  %17 = load i32, i32* %_12, align 4, !range !4
  %18 = sub i32 %17, 1114112
  %19 = icmp eq i32 %18, 0
  %_15 = select i1 %19, i64 0, i64 1
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb11:                                             ; preds = %bb8
  %_24 = load i64, i64* %v, align 8
  %20 = bitcast { i64, i64 }* %0 to %"core::option::Option<u64>::Some"*
  %21 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %20, i32 0, i32 1
  store i64 %_24, i64* %21, align 8
  %22 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %22, align 8
  br label %bb15

bb9:                                              ; preds = %bb8
  %nibble = load i32, i32* %_12, align 4, !range !9
  %_18 = load i64, i64* %v, align 8
  %_19.0 = shl i64 %_18, 4
  br label %bb12

bb12:                                             ; preds = %bb9
; call core::char::methods::<impl char>::to_digit
  %23 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hf0ad4b1322192492E"(i32 %nibble, i32 16)
  %_22.0 = extractvalue { i32, i32 } %23, 0
  %_22.1 = extractvalue { i32, i32 } %23, 1
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::option::Option<T>::unwrap
  %_21 = call i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hef99ec68164f6688E"(i32 %_22.0, i32 %_22.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1014 to %"core::panic::location::Location"*))
  br label %bb14

bb14:                                             ; preds = %bb13
  %_20 = zext i32 %_21 to i64
  %24 = or i64 %_19.0, %_20
  store i64 %24, i64* %v, align 8
  br label %bb7
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars
; Function Attrs: nonlazybind uwtable
define internal void @_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars17h56ba339a8a2ea2fcE(%"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>"* noalias nocapture sret(%"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>") dereferenceable(40) %0, { i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %_21 = alloca %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>", align 8
  %_20 = alloca %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>", align 8
  %_17 = alloca %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>", align 8
  %_14 = alloca %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]", align 8
  %chars = alloca %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>", align 8
  %_7 = alloca %"core::slice::iter::ChunksExact<u8>", align 8
  %_6 = alloca %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>", align 8
  %bytes = alloca %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>", align 8
  %2 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !6
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  %_4.1 = load i64, i64* %4, align 8
; call core::str::<impl str>::len
  %_3 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = urem i64 %_3, 2
  %5 = icmp eq i64 %_2, 0
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %6 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 0
  %_10.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !6
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 1
  %_10.1 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %_10.0, [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %_10.1, i64* %10, align 8
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %12 = load [0 x i8]*, [0 x i8]** %11, align 8, !nonnull !6
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %12, 0
  %16 = insertvalue { [0 x i8]*, i64 } %15, i64 %14, 1
  %_9.0 = extractvalue { [0 x i8]*, i64 } %16, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %16, 1
  br label %bb4

bb2:                                              ; preds = %bb1
  %17 = bitcast %"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>"* %0 to {}**
  store {}* null, {}** %17, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11, %bb2
  ret void

bb4:                                              ; preds = %bb3
; call core::slice::<impl [T]>::chunks_exact
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12chunks_exact17h3b2d26179e600279E"(%"core::slice::iter::ChunksExact<u8>"* noalias nocapture sret(%"core::slice::iter::ChunksExact<u8>") dereferenceable(40) %_7, [0 x i8]* nonnull align 1 %_9.0, i64 %_9.1, i64 2)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17hb2561f11cd2c38d5E(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>") dereferenceable(40) %_6, %"core::slice::iter::ChunksExact<u8>"* noalias nocapture dereferenceable(40) %_7)
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17ha1dda9db72b64fc8E(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>") dereferenceable(40) %bytes, %"core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>"* noalias nocapture dereferenceable(40) %_6)
  br label %bb7

bb7:                                              ; preds = %bb6
  %18 = bitcast %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* %_14 to %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"*
  %19 = bitcast %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* %18 to i8*
  %20 = bitcast %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* %bytes to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 40, i1 false)
; call core::iter::sources::from_fn::from_fn
  call void @_ZN4core4iter7sources7from_fn7from_fn17hba7d5c0e3c59c158E(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* noalias nocapture sret(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>") dereferenceable(40) %chars, %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* noalias nocapture dereferenceable(40) %_14)
  br label %bb8

bb8:                                              ; preds = %bb7
; call <core::iter::sources::from_fn::FromFn<F> as core::clone::Clone>::clone
  call void @"_ZN84_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha5ff1b9498831c45E"(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* noalias nocapture sret(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>") dereferenceable(40) %_17, %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* align 8 dereferenceable(40) %chars)
  br label %bb9

bb9:                                              ; preds = %bb8
; call core::iter::traits::iterator::Iterator::any
  %_15 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3any17h4aae2e7ac0af1f00E(%"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* align 8 dereferenceable(40) %_17)
  br label %bb10

bb10:                                             ; preds = %bb9
  br i1 %_15, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %21 = bitcast %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* %_21 to i8*
  %22 = bitcast %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* %chars to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 40, i1 false)
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17h3b1be6be6abf0ca8E(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>") dereferenceable(40) %_20, %"core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>"* noalias nocapture dereferenceable(40) %_21)
  br label %bb13

bb11:                                             ; preds = %bb10
  %23 = bitcast %"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>"* %0 to {}**
  store {}* null, {}** %23, align 8
  br label %bb14

bb13:                                             ; preds = %bb12
  %24 = bitcast %"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>"* %0 to %"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>::Some"*
  %25 = bitcast %"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>::Some"* %24 to %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"*
  %26 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %25 to i8*
  %27 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 40, i1 false)
  br label %bb14
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i128 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17h0b5fb5992adee314E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]"* nonnull align 1 %_1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca [2 x i8*], align 8
  %_5 = icmp eq i64 %slice.1, 2
  br i1 %_5, label %bb2, label %bb1

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc1015 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1017 to %"core::panic::location::Location"*)) #12
  unreachable

bb2:                                              ; preds = %start
  %a = getelementptr inbounds [0 x i8], [0 x i8]* %slice.0, i64 0, i64 0
  %b = getelementptr inbounds [0 x i8], [0 x i8]* %slice.0, i64 0, i64 1
  %1 = bitcast [2 x i8*]* %0 to i8**
  store i8* %a, i8** %1, align 8
  %2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %0, i32 0, i32 1
  store i8* %b, i8** %2, align 8
  %3 = bitcast [2 x i8*]* %0 to i128*
  %4 = load i128, i128* %3, align 8
  ret i128 %4
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hede0ede3f18edd24E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:308:28: 308:85]"* nonnull align 1 %_1, i8 %nibble) unnamed_addr #1 {
start:
  %_5 = zext i8 %nibble to i32
; call core::char::methods::<impl char>::to_digit
  %0 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hf0ad4b1322192492E"(i32 %_5, i32 16)
  %_4.0 = extractvalue { i32, i32 } %0, 0
  %_4.1 = extractvalue { i32, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::unwrap
  %_3 = call i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hef99ec68164f6688E"(i32 %_4.0, i32 %_4.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1019 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = trunc i32 %_3 to i8
  ret i8 %1
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17ha8e52f0eb398cdbaE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]"* nonnull align 1 %_1, i128 %0) unnamed_addr #1 {
start:
  %_14 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %half = alloca %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:308:28: 308:85]", align 1
  %1 = alloca i128, align 8
  %_2 = alloca [2 x i8*], align 8
  store i128 %0, i128* %1, align 8
  %2 = bitcast [2 x i8*]* %_2 to i8*
  %3 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  %4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %_2, i64 0, i64 0
  %5 = load i8*, i8** %4, align 8, !nonnull !6
  %hi = load i8, i8* %5, align 1
  %6 = getelementptr inbounds [2 x i8*], [2 x i8*]* %_2, i64 0, i64 1
  %7 = load i8*, i8** %6, align 8, !nonnull !6
  %lo = load i8, i8* %7, align 1
  store i8 %hi, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}
  %_7 = call i8 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hede0ede3f18edd24E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:308:28: 308:85]"* nonnull align 1 %half, i8 %8)
  br label %bb1

bb1:                                              ; preds = %start
  %_11.0 = shl i8 %_7, 4
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8 %lo, i8* %_14, align 1
  %9 = load i8, i8* %_14, align 1
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}
  %_12 = call i8 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hede0ede3f18edd24E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:308:28: 308:85]"* nonnull align 1 %half, i8 %9)
  br label %bb3

bb3:                                              ; preds = %bb2
  %10 = or i8 %_11.0, %_12
  ret i8 %10
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h20af0f8063e7b7f5E"(i1 zeroext %_2) unnamed_addr #1 {
start:
  ret void
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h1e3f3324137a62ffE"(i128 %0) unnamed_addr #1 {
start:
  %1 = alloca i128, align 8
  %_2 = alloca %"core::str::error::Utf8Error", align 8
  store i128 %0, i128* %1, align 8
  %2 = bitcast %"core::str::error::Utf8Error"* %_2 to i8*
  %3 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  ret void
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17haf1c7ded4398498aE"(i64* align 8 dereferenceable(40) %_1, i8 %first_byte) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_args = alloca { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }, align 8
  %_75 = alloca i64, align 8
  %_71 = alloca { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }, align 8
  %_70 = alloca [3 x { i8*, i64* }], align 8
  %_63 = alloca %"core::fmt::Arguments", align 8
  %_54 = alloca { i32, i32 }, align 4
  %chars = alloca { i8*, i8* }, align 8
  %_45 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %_43 = alloca { i8*, i64 }, align 8
  %s = alloca { [0 x i8]*, i64 }, align 8
  %_30 = alloca { i8, i8 }, align 1
  %_24 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_21 = alloca { i64, i64 }, align 8
  %_18 = alloca i64, align 8
  %_16 = alloca [4 x i8], align 1
  %utf8 = alloca { [0 x i8]*, i64 }, align 8
  %_6 = alloca %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>", align 8
  %_4 = alloca { i64, i64 }, align 8
  %1 = alloca i32, align 4
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}::utf8_len_from_first_byte
  %2 = call i128 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$24utf8_len_from_first_byte17hbab01d4cc0e90710E"(i8 %first_byte)
  store i128 %2, i128* %0, align 8
  %3 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %_6 to i8*
  %4 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %_6 to i128*
  %6 = load i128, i128* %5, align 8
; call core::result::Result<T,E>::map_err
  %7 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h09094040bce7e547E"(i128 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %8 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h443a1d5e2a03c13bE"(i64 %_5.0, i64 %_5.1)
  store { i64, i64 } %8, { i64, i64 }* %_4, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %9 = bitcast { i64, i64 }* %_4 to i64*
  %_9 = load i64, i64* %9, align 8, !range !5
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %10 = bitcast { i64, i64 }* %_4 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"*
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>::Continue"* %10, i32 0, i32 1
  %val = load i64, i64* %11, align 8
  %12 = bitcast [4 x i8]* %_16 to i8*
  store i8 %first_byte, i8* %12, align 1
  %13 = getelementptr inbounds [4 x i8], [4 x i8]* %_16, i32 0, i32 1
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %_16, i32 0, i32 2
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds [4 x i8], [4 x i8]* %_16, i32 0, i32 3
  store i8 0, i8* %15, align 1
  store i64 %val, i64* %_18, align 8
  %16 = load i64, i64* %_18, align 8
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %17 = call { [0 x i8]*, i64 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17hd1623cd06c0ff58bE"([4 x i8]* align 1 dereferenceable(4) %_16, i64 %16, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1023 to %"core::panic::location::Location"*))
  %_14.0 = extractvalue { [0 x i8]*, i64 } %17, 0
  %_14.1 = extractvalue { [0 x i8]*, i64 } %17, 1
  br label %bb7

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %18 = call i32 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8cc6fa069c16dfc8E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1021 to %"core::panic::location::Location"*)), !range !4
  store i32 %18, i32* %1, align 4
  br label %bb39

bb39:                                             ; preds = %bb32, %bb26, %bb19, %bb6
  %19 = load i32, i32* %1, align 4, !range !4
  ret i32 %19

bb7:                                              ; preds = %bb4
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %utf8, i32 0, i32 0
  store [0 x i8]* %_14.0, [0 x i8]** %20, align 8
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %utf8, i32 0, i32 1
  store i64 %_14.1, i64* %21, align 8
  %22 = bitcast { i64, i64 }* %_21 to i64*
  store i64 1, i64* %22, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 1
  store i64 %val, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %28 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h88717dd03e83ae96E"(i64 %25, i64 %27)
  %_20.0 = extractvalue { i64, i64 } %28, 0
  %_20.1 = extractvalue { i64, i64 } %28, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_20.0, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_20.1, i64* %30, align 8
  br label %bb9

bb9:                                              ; preds = %bb20, %bb8
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %31 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2263241b25a82c2eE"({ i64, i64 }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %31, { i64, i64 }* %_24, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
  %32 = bitcast { i64, i64 }* %_24 to i64*
  %_27 = load i64, i64* %32, align 8, !range !5
  switch i64 %_27, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %utf8, i32 0, i32 0
  %_46.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !6
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %utf8, i32 0, i32 1
  %_46.1 = load i64, i64* %34, align 8
; call core::str::converts::from_utf8
  call void @_ZN4core3str8converts9from_utf817h787de7ac1138d6f8E(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture sret(%"core::result::Result<&str, core::str::error::Utf8Error>") dereferenceable(24) %_45, [0 x i8]* nonnull align 1 %_46.0, i64 %_46.1)
  br label %bb21

bb11:                                             ; preds = %bb10
  %35 = bitcast { i64, i64 }* %_24 to %"core::option::Option<usize>::Some"*
  %36 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %35, i32 0, i32 1
  %i = load i64, i64* %36, align 8
  %_33 = bitcast i64* %_1 to %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"*
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %37 = call { i8, i8 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha4c259a589defbc2E"(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* align 8 dereferenceable(40) %_33)
  %38 = extractvalue { i8, i8 } %37, 0
  %_32.0 = trunc i8 %38 to i1
  %_32.1 = extractvalue { i8, i8 } %37, 1
  br label %bb14

bb14:                                             ; preds = %bb11
; call core::option::Option<T>::ok_or
  %39 = call { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hc6dcc6e81174a41bE"(i1 zeroext %_32.0, i8 %_32.1)
  %40 = extractvalue { i8, i8 } %39, 0
  %_31.0 = trunc i8 %40 to i1
  %_31.1 = extractvalue { i8, i8 } %39, 1
  br label %bb15

bb15:                                             ; preds = %bb14
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %41 = call { i8, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17heb0e5c5083ee921eE"(i1 zeroext %_31.0, i8 %_31.1)
  store { i8, i8 } %41, { i8, i8 }* %_30, align 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %42 = bitcast { i8, i8 }* %_30 to i8*
  %43 = load i8, i8* %42, align 1, !range !2
  %44 = trunc i8 %43 to i1
  %_35 = zext i1 %44 to i64
  switch i64 %_35, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ]

bb18:                                             ; preds = %bb16
  unreachable

bb17:                                             ; preds = %bb16
  %45 = bitcast { i8, i8 }* %_30 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, u8>::Continue"*
  %46 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, u8>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ()>, u8>::Continue"* %45, i32 0, i32 1
  %val1 = load i8, i8* %46, align 1
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %utf8, i32 0, i32 0
  %48 = load [0 x i8]*, [0 x i8]** %47, align 8, !nonnull !6
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %utf8, i32 0, i32 1
  %_40 = load i64, i64* %49, align 8
  %_41 = icmp ult i64 %i, %_40
  %50 = call i1 @llvm.expect.i1(i1 %_41, i1 true)
  br i1 %50, label %bb20, label %panic

bb19:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %51 = call i32 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8cc6fa069c16dfc8E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1025 to %"core::panic::location::Location"*)), !range !4
  store i32 %51, i32* %1, align 4
  br label %bb39

bb20:                                             ; preds = %bb17
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %utf8, i32 0, i32 0
  %53 = load [0 x i8]*, [0 x i8]** %52, align 8, !nonnull !6
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %utf8, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds [0 x i8], [0 x i8]* %53, i64 0, i64 %i
  store i8 %val1, i8* %56, align 1
  br label %bb9

panic:                                            ; preds = %bb17
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 %_40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1027 to %"core::panic::location::Location"*)) #12
  unreachable

bb21:                                             ; preds = %bb13
; call core::result::Result<T,E>::map_err
  %57 = call { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h51d01d929eb4b0b2E"(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture dereferenceable(24) %_45)
  %_44.0 = extractvalue { i8*, i64 } %57, 0
  %_44.1 = extractvalue { i8*, i64 } %57, 1
  br label %bb22

bb22:                                             ; preds = %bb21
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %58 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h832531be29ff824aE"(i8* align 1 %_44.0, i64 %_44.1)
  store { i8*, i64 } %58, { i8*, i64 }* %_43, align 8
  br label %bb23

bb23:                                             ; preds = %bb22
  %59 = bitcast { i8*, i64 }* %_43 to {}**
  %60 = load {}*, {}** %59, align 8
  %61 = icmp eq {}* %60, null
  %_48 = select i1 %61, i64 1, i64 0
  switch i64 %_48, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ]

bb25:                                             ; preds = %bb23
  unreachable

bb24:                                             ; preds = %bb23
  %62 = bitcast { i8*, i64 }* %_43 to { [0 x i8]*, i64 }*
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 0
  %val.0 = load [0 x i8]*, [0 x i8]** %63, align 8, !nonnull !6
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 1
  %val.1 = load i64, i64* %64, align 8
  %65 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  store [0 x i8]* %val.0, [0 x i8]** %65, align 8
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  store i64 %val.1, i64* %66, align 8
  %67 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_53.0 = load [0 x i8]*, [0 x i8]** %67, align 8, !nonnull !6
  %68 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_53.1 = load i64, i64* %68, align 8
; call core::str::<impl str>::chars
  %69 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %_53.0, i64 %_53.1)
  store { i8*, i8* } %69, { i8*, i8* }* %chars, align 8
  br label %bb27

bb26:                                             ; preds = %bb23
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %70 = call i32 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8cc6fa069c16dfc8E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1029 to %"core::panic::location::Location"*)), !range !4
  store i32 %70, i32* %1, align 4
  br label %bb39

bb27:                                             ; preds = %bb24
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_55 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !range !4
  br label %bb28

bb28:                                             ; preds = %bb27
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_57 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5e77938f1ced37ebE"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !range !4
  br label %bb29

bb29:                                             ; preds = %bb28
  %71 = bitcast { i32, i32 }* %_54 to i32*
  store i32 %_55, i32* %71, align 4
  %72 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_54, i32 0, i32 1
  store i32 %_57, i32* %72, align 4
  %73 = bitcast { i32, i32 }* %_54 to i32*
  %74 = load i32, i32* %73, align 4, !range !4
  %75 = sub i32 %74, 1114112
  %76 = icmp eq i32 %75, 0
  %_60 = select i1 %76, i64 0, i64 1
  %77 = icmp eq i64 %_60, 1
  br i1 %77, label %bb31, label %bb30

bb31:                                             ; preds = %bb29
  %78 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_54, i32 0, i32 1
  %79 = load i32, i32* %78, align 4, !range !4
  %80 = sub i32 %79, 1114112
  %81 = icmp eq i32 %80, 0
  %_59 = select i1 %81, i64 0, i64 1
  %82 = icmp eq i64 %_59, 0
  br i1 %82, label %bb32, label %bb30

bb30:                                             ; preds = %bb31, %bb29
  %83 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_77.0 = load [0 x i8]*, [0 x i8]** %83, align 8, !nonnull !6
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_77.1 = load i64, i64* %84, align 8
; call core::str::<impl str>::chars
  %85 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %_77.0, i64 %_77.1)
  %_76.0 = extractvalue { i8*, i8* } %85, 0
  %_76.1 = extractvalue { i8*, i8* } %85, 1
  br label %bb33

bb32:                                             ; preds = %bb31
  %86 = bitcast { i32, i32 }* %_54 to i32*
  %c = load i32, i32* %86, align 4, !range !9
  store i32 %c, i32* %1, align 4
  br label %bb39

bb33:                                             ; preds = %bb30
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count
  %87 = call i64 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count17h947ecb6b109b2db6E"(i8* nonnull %_76.0, i8* %_76.1)
  store i64 %87, i64* %_75, align 8
  br label %bb34

bb34:                                             ; preds = %bb33
  %88 = bitcast { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }* %_71 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %utf8, { [0 x i8]*, i64 }** %88, align 8
  %89 = getelementptr inbounds { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }, { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }* %_71, i32 0, i32 1
  store { [0 x i8]*, i64 }* %s, { [0 x i8]*, i64 }** %89, align 8
  %90 = getelementptr inbounds { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }, { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }* %_71, i32 0, i32 2
  store i64* %_75, i64** %90, align 8
  %91 = bitcast { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }* %_args to i8*
  %92 = bitcast { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }* %_71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 24, i1 false)
  %93 = bitcast { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }* %_args to { [0 x i8]*, i64 }**
  %_80 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %93, align 8, !nonnull !6
; call core::fmt::ArgumentV1::new
  %94 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h1aac049ee929b6a6E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_80, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN50_$LT$$RF$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha7adcfaa16c5e981E")
  %_79.0 = extractvalue { i8*, i64* } %94, 0
  %_79.1 = extractvalue { i8*, i64* } %94, 1
  br label %bb35

bb35:                                             ; preds = %bb34
  %95 = getelementptr inbounds { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }, { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }* %_args, i32 0, i32 1
  %_83 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %95, align 8, !nonnull !6
; call core::fmt::ArgumentV1::new
  %96 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hacdb529575c30fbaE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_83, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17heda9fb61af40fed1E")
  %_82.0 = extractvalue { i8*, i64* } %96, 0
  %_82.1 = extractvalue { i8*, i64* } %96, 1
  br label %bb36

bb36:                                             ; preds = %bb35
  %97 = getelementptr inbounds { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }, { { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }*, i64* }* %_args, i32 0, i32 2
  %_86 = load i64*, i64** %97, align 8, !nonnull !6
; call core::fmt::ArgumentV1::new
  %98 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0596ccb07b5ce96cE(i64* align 8 dereferenceable(8) %_86, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE")
  %_85.0 = extractvalue { i8*, i64* } %98, 0
  %_85.1 = extractvalue { i8*, i64* } %98, 1
  br label %bb37

bb37:                                             ; preds = %bb36
  %99 = bitcast [3 x { i8*, i64* }]* %_70 to { i8*, i64* }*
  %100 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %99, i32 0, i32 0
  store i8* %_79.0, i8** %100, align 8
  %101 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %99, i32 0, i32 1
  store i64* %_79.1, i64** %101, align 8
  %102 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_70, i32 0, i32 1
  %103 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %102, i32 0, i32 0
  store i8* %_82.0, i8** %103, align 8
  %104 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %102, i32 0, i32 1
  store i64* %_82.1, i64** %104, align 8
  %105 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_70, i32 0, i32 2
  %106 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %105, i32 0, i32 0
  store i8* %_85.0, i8** %106, align 8
  %107 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %105, i32 0, i32 1
  store i64* %_85.1, i64** %107, align 8
  %_67.0 = bitcast [3 x { i8*, i64* }]* %_70 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc4c9b02358f4c330E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_63, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc570 to [0 x { [0 x i8]*, i64 }]*), i64 4, [0 x { i8*, i64* }]* nonnull align 8 %_67.0, i64 3)
  br label %bb38

bb38:                                             ; preds = %bb37
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_63, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1031 to %"core::panic::location::Location"*)) #12
  unreachable
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17hb0130e559dbbf448E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* align 8 dereferenceable(40) %_1) unnamed_addr #1 {
start:
  %_4 = alloca i64*, align 8
  %_3 = bitcast %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* %_1 to %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"*
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %0 = call { i8, i8 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha4c259a589defbc2E"(%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* align 8 dereferenceable(40) %_3)
  %1 = extractvalue { i8, i8 } %0, 0
  %_2.0 = trunc i8 %1 to i1
  %_2.1 = extractvalue { i8, i8 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = bitcast %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]"* %_1 to %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"*
  %2 = bitcast i64** %_4 to %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"**
  store %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"* %_5, %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:303:18: 306:14]>, [closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:307:18: 310:14]>"** %2, align 8
  %3 = load i64*, i64** %_4, align 8, !nonnull !6
; call core::option::Option<T>::map
  %4 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h97d6adcf3a1a949fE"(i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(40) %3), !range !3
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %4
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17h88529b84fbc36528E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:362:30: 362:44]"* nonnull align 1 %_1, i32 %0) unnamed_addr #1 {
start:
  %r = alloca i32, align 4
  store i32 %0, i32* %r, align 4
; call core::result::Result<T,E>::is_err
  %1 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h9f2bdadea46698d1E"(i32* align 4 dereferenceable(4) %r)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}::utf8_len_from_first_byte
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$24utf8_len_from_first_byte17hbab01d4cc0e90710E"(i8 %byte) unnamed_addr #0 {
start:
  %0 = alloca %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>", align 8
  %_12 = icmp ule i8 0, %byte
  br i1 %_12, label %bb1, label %bb2

bb2:                                              ; preds = %bb1, %start
  %_10 = icmp ule i8 -128, %byte
  br i1 %_10, label %bb3, label %bb4

bb1:                                              ; preds = %start
  %_13 = icmp ule i8 %byte, 127
  br i1 %_13, label %bb14, label %bb2

bb14:                                             ; preds = %bb1
  %1 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %0 to %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok"*
  %2 = getelementptr inbounds %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok", %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok"* %1, i32 0, i32 1
  store i64 1, i64* %2, align 8
  %3 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %0 to i8*
  store i8 0, i8* %3, align 8
  br label %bb19

bb19:                                             ; preds = %bb12, %bb18, %bb17, %bb16, %bb15, %bb14
  %4 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %0 to i128*
  %5 = load i128, i128* %4, align 8
  ret i128 %5

bb4:                                              ; preds = %bb3, %bb2
  %_8 = icmp ule i8 -64, %byte
  br i1 %_8, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %_11 = icmp ule i8 %byte, -65
  br i1 %_11, label %bb15, label %bb4

bb15:                                             ; preds = %bb3
  %6 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %0 to %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Err", %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Err"* %6, i32 0, i32 1
  store i8 0, i8* %7, align 1
  %8 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %0 to i8*
  store i8 1, i8* %8, align 8
  br label %bb19

bb6:                                              ; preds = %bb5, %bb4
  %_6 = icmp ule i8 -32, %byte
  br i1 %_6, label %bb7, label %bb8

bb5:                                              ; preds = %bb4
  %_9 = icmp ule i8 %byte, -33
  br i1 %_9, label %bb16, label %bb6

bb16:                                             ; preds = %bb5
  %9 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %0 to %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok", %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok"* %9, i32 0, i32 1
  store i64 2, i64* %10, align 8
  %11 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %0 to i8*
  store i8 0, i8* %11, align 8
  br label %bb19

bb8:                                              ; preds = %bb7, %bb6
  %_4 = icmp ule i8 -16, %byte
  br i1 %_4, label %bb9, label %bb10

bb7:                                              ; preds = %bb6
  %_7 = icmp ule i8 %byte, -17
  br i1 %_7, label %bb17, label %bb8

bb17:                                             ; preds = %bb7
  %12 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %0 to %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok"*
  %13 = getelementptr inbounds %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok", %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok"* %12, i32 0, i32 1
  store i64 3, i64* %13, align 8
  %14 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %0 to i8*
  store i8 0, i8* %14, align 8
  br label %bb19

bb10:                                             ; preds = %bb9, %bb8
  %_2 = icmp ule i8 -8, %byte
  br i1 %_2, label %bb11, label %bb13

bb9:                                              ; preds = %bb8
  %_5 = icmp ule i8 %byte, -9
  br i1 %_5, label %bb18, label %bb10

bb18:                                             ; preds = %bb9
  %15 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %0 to %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok"*
  %16 = getelementptr inbounds %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok", %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Ok"* %15, i32 0, i32 1
  store i64 4, i64* %16, align 8
  %17 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %0 to i8*
  store i8 0, i8* %17, align 8
  br label %bb19

bb13:                                             ; preds = %bb11, %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %_3 = icmp ule i8 %byte, -1
  br i1 %_3, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  %18 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %0 to %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Err"*
  %19 = getelementptr inbounds %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Err", %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>::Err"* %18, i32 0, i32 1
  store i8 1, i8* %19, align 1
  %20 = bitcast %"core::result::Result<usize, v0::HexNibbles<'s>::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>"* %0 to i8*
  store i8 1, i8* %20, align 8
  br label %bb19
}

; rustc_demangle::v0::basic_type
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @_ZN14rustc_demangle2v010basic_type17h33795a1f5cb8549cE(i8 %tag) unnamed_addr #0 {
start:
  %_2 = alloca { [0 x i8]*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
  switch i8 %tag, label %bb1 [
    i8 98, label %bb2
    i8 99, label %bb3
    i8 101, label %bb4
    i8 117, label %bb5
    i8 97, label %bb6
    i8 115, label %bb7
    i8 108, label %bb8
    i8 120, label %bb9
    i8 110, label %bb10
    i8 105, label %bb11
    i8 104, label %bb12
    i8 116, label %bb13
    i8 109, label %bb14
    i8 121, label %bb15
    i8 111, label %bb16
    i8 106, label %bb17
    i8 102, label %bb18
    i8 100, label %bb19
    i8 122, label %bb20
    i8 112, label %bb21
    i8 118, label %bb22
  ]

bb1:                                              ; preds = %start
  %1 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb24

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [4 x i8] }>* @alloc1052 to [0 x i8]*), [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 4, i64* %3, align 8
  br label %bb23

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [4 x i8] }>* @alloc1051 to [0 x i8]*), [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 4, i64* %5, align 8
  br label %bb23

bb4:                                              ; preds = %start
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc1050 to [0 x i8]*), [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 3, i64* %7, align 8
  br label %bb23

bb5:                                              ; preds = %start
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [2 x i8] }>* @alloc1049 to [0 x i8]*), [0 x i8]** %8, align 8
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 2, i64* %9, align 8
  br label %bb23

bb6:                                              ; preds = %start
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [2 x i8] }>* @alloc1048 to [0 x i8]*), [0 x i8]** %10, align 8
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 2, i64* %11, align 8
  br label %bb23

bb7:                                              ; preds = %start
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc1047 to [0 x i8]*), [0 x i8]** %12, align 8
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 3, i64* %13, align 8
  br label %bb23

bb8:                                              ; preds = %start
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc1046 to [0 x i8]*), [0 x i8]** %14, align 8
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 3, i64* %15, align 8
  br label %bb23

bb9:                                              ; preds = %start
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc1045 to [0 x i8]*), [0 x i8]** %16, align 8
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 3, i64* %17, align 8
  br label %bb23

bb10:                                             ; preds = %start
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [4 x i8] }>* @alloc1044 to [0 x i8]*), [0 x i8]** %18, align 8
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 4, i64* %19, align 8
  br label %bb23

bb11:                                             ; preds = %start
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [5 x i8] }>* @alloc1043 to [0 x i8]*), [0 x i8]** %20, align 8
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 5, i64* %21, align 8
  br label %bb23

bb12:                                             ; preds = %start
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [2 x i8] }>* @alloc1042 to [0 x i8]*), [0 x i8]** %22, align 8
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 2, i64* %23, align 8
  br label %bb23

bb13:                                             ; preds = %start
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc1041 to [0 x i8]*), [0 x i8]** %24, align 8
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 3, i64* %25, align 8
  br label %bb23

bb14:                                             ; preds = %start
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc1040 to [0 x i8]*), [0 x i8]** %26, align 8
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 3, i64* %27, align 8
  br label %bb23

bb15:                                             ; preds = %start
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc1039 to [0 x i8]*), [0 x i8]** %28, align 8
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 3, i64* %29, align 8
  br label %bb23

bb16:                                             ; preds = %start
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [4 x i8] }>* @alloc1038 to [0 x i8]*), [0 x i8]** %30, align 8
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 4, i64* %31, align 8
  br label %bb23

bb17:                                             ; preds = %start
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [5 x i8] }>* @alloc1037 to [0 x i8]*), [0 x i8]** %32, align 8
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 5, i64* %33, align 8
  br label %bb23

bb18:                                             ; preds = %start
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc1036 to [0 x i8]*), [0 x i8]** %34, align 8
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 3, i64* %35, align 8
  br label %bb23

bb19:                                             ; preds = %start
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc1035 to [0 x i8]*), [0 x i8]** %36, align 8
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 3, i64* %37, align 8
  br label %bb23

bb20:                                             ; preds = %start
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1034 to [0 x i8]*), [0 x i8]** %38, align 8
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 1, i64* %39, align 8
  br label %bb23

bb21:                                             ; preds = %start
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1544 to [0 x i8]*), [0 x i8]** %40, align 8
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 1, i64* %41, align 8
  br label %bb23

bb22:                                             ; preds = %start
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc1032 to [0 x i8]*), [0 x i8]** %42, align 8
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  store i64 3, i64* %43, align 8
  br label %bb23

bb24:                                             ; preds = %bb23, %bb1
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = insertvalue { i8*, i64 } undef, i8* %45, 0
  %49 = insertvalue { i8*, i64 } %48, i64 %47, 1
  ret { i8*, i64 } %49

bb23:                                             ; preds = %bb2, %bb3, %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13, %bb14, %bb15, %bb16, %bb17, %bb18, %bb19, %bb20, %bb21, %bb22
  %50 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0
  %52 = load [0 x i8]*, [0 x i8]** %51, align 8, !nonnull !6
  %53 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 0
  store [0 x i8]* %52, [0 x i8]** %55, align 8
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 1
  store i64 %54, i64* %56, align 8
  br label %bb24
}

; rustc_demangle::v0::Parser::push_depth
; Function Attrs: nonlazybind uwtable
define internal i8 @_ZN14rustc_demangle2v06Parser10push_depth17hac46607ed685a51dE(%"v0::Parser"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 2
  %2 = load i32, i32* %1, align 8
  %3 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %2, i32 1)
  %_2.0 = extractvalue { i32, i1 } %3, 0
  %_2.1 = extractvalue { i32, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_2.1, i1 false)
  br i1 %4, label %panic, label %bb1

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 2
  store i32 %_2.0, i32* %5, align 8
  %6 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 2
  %_4 = load i32, i32* %6, align 8
  %_3 = icmp ugt i32 %_4, 500
  br i1 %_3, label %bb2, label %bb3

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1054 to %"core::panic::location::Location"*)) #12
  unreachable

bb3:                                              ; preds = %bb1
  store i8 2, i8* %0, align 1
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %7 = load i8, i8* %0, align 1, !range !7
  ret i8 %7
}

; rustc_demangle::v0::Parser::pop_depth
; Function Attrs: nonlazybind uwtable
define internal void @_ZN14rustc_demangle2v06Parser9pop_depth17h06ee69ac48661cfcE(%"v0::Parser"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 2
  %1 = load i32, i32* %0, align 8
  %2 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %1, i32 1)
  %_2.0 = extractvalue { i32, i1 } %2, 0
  %_2.1 = extractvalue { i32, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_2.1, i1 false)
  br i1 %3, label %panic, label %bb1

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 2
  store i32 %_2.0, i32* %4, align 8
  ret void

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1056 to %"core::panic::location::Location"*)) #12
  unreachable
}

; rustc_demangle::v0::Parser::peek
; Function Attrs: nonlazybind uwtable
define internal { i8, i8 } @_ZN14rustc_demangle2v06Parser4peek17h23473333d45e1d18E(%"v0::Parser"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = bitcast %"v0::Parser"* %self to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_5.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !6
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_5.1 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %_5.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %_5.1, i64* %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %7 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !6
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %7, 0
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %11, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %11, 1
  br label %bb1

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  %_6 = load i64, i64* %12, align 8
; call core::slice::<impl [T]>::get
  %_2 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h05a01ca2d4cf7cbaE"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, i64 %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<&T>::cloned
  %13 = call { i8, i8 } @"_ZN4core6option19Option$LT$$RF$T$GT$6cloned17h087422f4dae00a71E"(i8* align 1 dereferenceable_or_null(1) %_2)
  %14 = extractvalue { i8, i8 } %13, 0
  %15 = trunc i8 %14 to i1
  %16 = extractvalue { i8, i8 } %13, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %17 = zext i1 %15 to i8
  %18 = insertvalue { i8, i8 } undef, i8 %17, 0
  %19 = insertvalue { i8, i8 } %18, i8 %16, 1
  ret { i8, i8 } %19
}

; rustc_demangle::v0::Parser::eat
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h5fc186279a20daa4E(%"v0::Parser"* align 8 dereferenceable(32) %self, i8 %b) unnamed_addr #0 {
start:
  %_8 = alloca { i8, i8 }, align 1
  %_5 = alloca { i8, i8 }, align 1
  %0 = alloca i8, align 1
; call rustc_demangle::v0::Parser::peek
  %1 = call { i8, i8 } @_ZN14rustc_demangle2v06Parser4peek17h23473333d45e1d18E(%"v0::Parser"* align 8 dereferenceable(32) %self)
  store { i8, i8 } %1, { i8, i8 }* %_5, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i8, i8 }* %_8 to %"core::option::Option<u8>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %2, i32 0, i32 1
  store i8 %b, i8* %3, align 1
  %4 = bitcast { i8, i8 }* %_8 to i8*
  store i8 1, i8* %4, align 1
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_3 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h0fa86d74c8840347E"({ i8, i8 }* align 1 dereferenceable(2) %_5, { i8, i8 }* align 1 dereferenceable(2) %_8)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_3, label %bb3, label %bb5

bb5:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1
  br label %bb6

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %6, i64 1)
  %_10.0 = extractvalue { i64, i1 } %7, 0
  %_10.1 = extractvalue { i64, i1 } %7, 1
  %8 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false)
  br i1 %8, label %panic, label %bb4

bb4:                                              ; preds = %bb3
  %9 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  store i64 %_10.0, i64* %9, align 8
  store i8 1, i8* %0, align 1
  br label %bb6

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1058 to %"core::panic::location::Location"*)) #12
  unreachable

bb6:                                              ; preds = %bb5, %bb4
  %10 = load i8, i8* %0, align 1, !range !2
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

; rustc_demangle::v0::Parser::next
; Function Attrs: nonlazybind uwtable
define internal { i8, i8 } @_ZN14rustc_demangle2v06Parser4next17hffa0ce9c0a6f9798E(%"v0::Parser"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %_3 = alloca { i8, i8 }, align 1
  %0 = alloca { i8, i8 }, align 1
; call rustc_demangle::v0::Parser::peek
  %1 = call { i8, i8 } @_ZN14rustc_demangle2v06Parser4peek17h23473333d45e1d18E(%"v0::Parser"* align 8 dereferenceable(32) %self)
  %2 = extractvalue { i8, i8 } %1, 0
  %_5.0 = trunc i8 %2 to i1
  %_5.1 = extractvalue { i8, i8 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %3 = load i8, i8* %_7, align 1, !range !2
  %4 = trunc i8 %3 to i1
; call core::option::Option<T>::ok_or
  %5 = call { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h5b738170cd8075b4E"(i1 zeroext %_5.0, i8 %_5.1, i1 zeroext %4)
  %6 = extractvalue { i8, i8 } %5, 0
  %_4.0 = trunc i8 %6 to i1
  %_4.1 = extractvalue { i8, i8 } %5, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %7 = call { i8, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h786b9e0d84a4e7b4E"(i1 zeroext %_4.0, i8 %_4.1)
  store { i8, i8 } %7, { i8, i8 }* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %8 = bitcast { i8, i8 }* %_3 to i8*
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = trunc i8 %9 to i1
  %_8 = zext i1 %10 to i64
  switch i64 %_8, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %11 = bitcast { i8, i8 }* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue"*
  %12 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue"* %11, i32 0, i32 1
  %val = load i8, i8* %12, align 1
  %13 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %14, i64 1)
  %_12.0 = extractvalue { i64, i1 } %15, 0
  %_12.1 = extractvalue { i64, i1 } %15, 1
  %16 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false)
  br i1 %16, label %panic, label %bb7

bb6:                                              ; preds = %bb3
  %17 = bitcast { i8, i8 }* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !2
  %residual = trunc i8 %19 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call { i8, i8 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd66765b7060d3726E"(i1 zeroext %residual, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1060 to %"core::panic::location::Location"*))
  store { i8, i8 } %20, { i8, i8 }* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %21 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %24 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i1 %23 to i8
  %27 = insertvalue { i8, i8 } undef, i8 %26, 0
  %28 = insertvalue { i8, i8 } %27, i8 %25, 1
  ret { i8, i8 } %28

bb7:                                              ; preds = %bb4
  %29 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  store i64 %_12.0, i64* %29, align 8
  %30 = bitcast { i8, i8 }* %0 to %"core::result::Result<u8, v0::ParseError>::Ok"*
  %31 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Ok", %"core::result::Result<u8, v0::ParseError>::Ok"* %30, i32 0, i32 1
  store i8 %val, i8* %31, align 1
  %32 = bitcast { i8, i8 }* %0 to i8*
  store i8 0, i8* %32, align 1
  br label %bb8

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1062 to %"core::panic::location::Location"*)) #12
  unreachable
}

; rustc_demangle::v0::Parser::hex_nibbles
; Function Attrs: nonlazybind uwtable
define internal void @_ZN14rustc_demangle2v06Parser11hex_nibbles17hf1ee692b8fee6ea8E(%"core::result::Result<v0::HexNibbles, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::HexNibbles, v0::ParseError>") dereferenceable(24) %0, %"v0::Parser"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_20 = alloca { i64, i64 }, align 8
  %_15 = alloca { i8*, i64 }, align 8
  %_4 = alloca { i8, i8 }, align 1
  %1 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  %start1 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %bb9, %bb7, %start
; call rustc_demangle::v0::Parser::next
  %2 = call { i8, i8 } @_ZN14rustc_demangle2v06Parser4next17hffa0ce9c0a6f9798E(%"v0::Parser"* align 8 dereferenceable(32) %self)
  %3 = extractvalue { i8, i8 } %2, 0
  %_5.0 = trunc i8 %3 to i1
  %_5.1 = extractvalue { i8, i8 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %4 = call { i8, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h786b9e0d84a4e7b4E"(i1 zeroext %_5.0, i8 %_5.1)
  store { i8, i8 } %4, { i8, i8 }* %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast { i8, i8 }* %_4 to i8*
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = trunc i8 %6 to i1
  %_7 = zext i1 %7 to i64
  switch i64 %_7, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8, i8 }* %_4 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue"* %8, i32 0, i32 1
  %val = load i8, i8* %9, align 1
  %_13 = icmp ule i8 48, %val
  br i1 %_13, label %bb7, label %bb8

bb6:                                              ; preds = %bb3
  %10 = bitcast { i8, i8 }* %_4 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break"*
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break"* %10, i32 0, i32 1
  %12 = load i8, i8* %11, align 1, !range !2
  %residual = trunc i8 %12 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4385f7fae77c4140E"(%"core::result::Result<v0::HexNibbles, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::HexNibbles, v0::ParseError>") dereferenceable(24) %0, i1 zeroext %residual, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1064 to %"core::panic::location::Location"*))
  br label %bb15

bb15:                                             ; preds = %bb14, %bb11, %bb6
  ret void

bb8:                                              ; preds = %bb7, %bb4
  %_11 = icmp ule i8 97, %val
  br i1 %_11, label %bb9, label %bb10

bb7:                                              ; preds = %bb4
  %_14 = icmp ule i8 %val, 57
  br i1 %_14, label %bb1, label %bb8

bb10:                                             ; preds = %bb9, %bb8
  %13 = icmp eq i8 %val, 95
  br i1 %13, label %bb12, label %bb11

bb9:                                              ; preds = %bb8
  %_12 = icmp ule i8 %val, 102
  br i1 %_12, label %bb1, label %bb10

bb12:                                             ; preds = %bb10
  %14 = bitcast %"v0::Parser"* %self to { [0 x i8]*, i64 }*
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0
  %_19.0 = load [0 x i8]*, [0 x i8]** %15, align 8, !nonnull !6
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1
  %_19.1 = load i64, i64* %16, align 8
  %17 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  %_23 = load i64, i64* %17, align 8
  %18 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_23, i64 1)
  %_24.0 = extractvalue { i64, i1 } %18, 0
  %_24.1 = extractvalue { i64, i1 } %18, 1
  %19 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false)
  br i1 %19, label %panic, label %bb13

bb11:                                             ; preds = %bb10
  %20 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %0 to %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err"*
  %21 = getelementptr inbounds %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err", %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err"* %20, i32 0, i32 1
  store i8 0, i8* %21, align 1
  %22 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %0 to i8*
  store i8 1, i8* %22, align 8
  br label %bb15

bb13:                                             ; preds = %bb12
  %23 = bitcast { i64, i64 }* %_20 to i64*
  store i64 %start1, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_20, i32 0, i32 1
  store i64 %_24.0, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_20, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_20, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %29 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h355193264e6bccf0E"([0 x i8]* nonnull align 1 %_19.0, i64 %_19.1, i64 %26, i64 %28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1068 to %"core::panic::location::Location"*))
  %_18.0 = extractvalue { [0 x i8]*, i64 } %29, 0
  %_18.1 = extractvalue { [0 x i8]*, i64 } %29, 1
  br label %bb14

panic:                                            ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1066 to %"core::panic::location::Location"*)) #12
  unreachable

bb14:                                             ; preds = %bb13
  %30 = bitcast { i8*, i64 }* %_15 to { [0 x i8]*, i64 }*
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %30, i32 0, i32 0
  store [0 x i8]* %_18.0, [0 x i8]** %31, align 8
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %30, i32 0, i32 1
  store i64 %_18.1, i64* %32, align 8
  %33 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %0 to %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok"*
  %34 = getelementptr inbounds %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok", %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok"* %33, i32 0, i32 1
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_15, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8, !nonnull !6
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_15, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %34, i32 0, i32 0
  store i8* %36, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %34, i32 0, i32 1
  store i64 %38, i64* %40, align 8
  %41 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %0 to i8*
  store i8 0, i8* %41, align 8
  br label %bb15
}

; rustc_demangle::v0::Parser::digit_10
; Function Attrs: nonlazybind uwtable
define internal { i8, i8 } @_ZN14rustc_demangle2v06Parser8digit_1017h1aaac55765391d7dE(%"v0::Parser"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_3 = alloca { i8, i8 }, align 1
  %0 = alloca { i8, i8 }, align 1
; call rustc_demangle::v0::Parser::peek
  %1 = call { i8, i8 } @_ZN14rustc_demangle2v06Parser4peek17h23473333d45e1d18E(%"v0::Parser"* align 8 dereferenceable(32) %self)
  store { i8, i8 } %1, { i8, i8 }* %_3, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i8, i8 }* %_3 to i8*
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = trunc i8 %3 to i1
  %_7 = zext i1 %4 to i64
  %5 = icmp eq i64 %_7, 1
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %6 = bitcast { i8, i8 }* %_3 to %"core::option::Option<u8>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %_5 = icmp ule i8 48, %8
  br i1 %_5, label %bb4, label %bb2

bb2:                                              ; preds = %bb4, %bb3, %bb1
  %9 = bitcast { i8, i8 }* %0 to %"core::result::Result<u8, v0::ParseError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Err", %"core::result::Result<u8, v0::ParseError>::Err"* %9, i32 0, i32 1
  store i8 0, i8* %10, align 1
  %11 = bitcast { i8, i8 }* %0 to i8*
  store i8 1, i8* %11, align 1
  br label %bb8

bb4:                                              ; preds = %bb3
  %12 = bitcast { i8, i8 }* %_3 to %"core::option::Option<u8>::Some"*
  %13 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %12, i32 0, i32 1
  %14 = load i8, i8* %13, align 1
  %_6 = icmp ule i8 %14, 57
  br i1 %_6, label %bb5, label %bb2

bb5:                                              ; preds = %bb4
  %15 = bitcast { i8, i8 }* %_3 to %"core::option::Option<u8>::Some"*
  %16 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %15, i32 0, i32 1
  %d = load i8, i8* %16, align 1
  %17 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %d, i8 48)
  %_10.0 = extractvalue { i8, i1 } %17, 0
  %_10.1 = extractvalue { i8, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false)
  br i1 %18, label %panic, label %bb6

bb6:                                              ; preds = %bb5
  %19 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 1)
  %_11.0 = extractvalue { i64, i1 } %21, 0
  %_11.1 = extractvalue { i64, i1 } %21, 1
  %22 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false)
  br i1 %22, label %panic1, label %bb7

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1070 to %"core::panic::location::Location"*)) #12
  unreachable

bb7:                                              ; preds = %bb6
  %23 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  store i64 %_11.0, i64* %23, align 8
  %24 = bitcast { i8, i8 }* %0 to %"core::result::Result<u8, v0::ParseError>::Ok"*
  %25 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Ok", %"core::result::Result<u8, v0::ParseError>::Ok"* %24, i32 0, i32 1
  store i8 %_10.0, i8* %25, align 1
  %26 = bitcast { i8, i8 }* %0 to i8*
  store i8 0, i8* %26, align 1
  br label %bb8

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1072 to %"core::panic::location::Location"*)) #12
  unreachable

bb8:                                              ; preds = %bb2, %bb7
  %27 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = trunc i8 %28 to i1
  %30 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = zext i1 %29 to i8
  %33 = insertvalue { i8, i8 } undef, i8 %32, 0
  %34 = insertvalue { i8, i8 } %33, i8 %31, 1
  ret { i8, i8 } %34
}

; rustc_demangle::v0::Parser::digit_62
; Function Attrs: nonlazybind uwtable
define internal { i8, i8 } @_ZN14rustc_demangle2v06Parser8digit_6217h3f62733c48002fe8E(%"v0::Parser"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_3 = alloca { i8, i8 }, align 1
  %d = alloca i8, align 1
  %0 = alloca { i8, i8 }, align 1
; call rustc_demangle::v0::Parser::peek
  %1 = call { i8, i8 } @_ZN14rustc_demangle2v06Parser4peek17h23473333d45e1d18E(%"v0::Parser"* align 8 dereferenceable(32) %self)
  store { i8, i8 } %1, { i8, i8 }* %_3, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i8, i8 }* %_3 to i8*
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = trunc i8 %3 to i1
  %_11 = zext i1 %4 to i64
  %5 = icmp eq i64 %_11, 1
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %6 = bitcast { i8, i8 }* %_3 to %"core::option::Option<u8>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %_9 = icmp ule i8 48, %8
  br i1 %_9, label %bb4, label %bb5

bb2:                                              ; preds = %bb8, %bb7, %bb1
  %9 = bitcast { i8, i8 }* %0 to %"core::result::Result<u8, v0::ParseError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Err", %"core::result::Result<u8, v0::ParseError>::Err"* %9, i32 0, i32 1
  store i8 0, i8* %10, align 1
  %11 = bitcast { i8, i8 }* %0 to i8*
  store i8 1, i8* %11, align 1
  br label %bb19

bb5:                                              ; preds = %bb4, %bb3
  %12 = bitcast { i8, i8 }* %_3 to %"core::option::Option<u8>::Some"*
  %13 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %12, i32 0, i32 1
  %14 = load i8, i8* %13, align 1
  %_7 = icmp ule i8 97, %14
  br i1 %_7, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  %15 = bitcast { i8, i8 }* %_3 to %"core::option::Option<u8>::Some"*
  %16 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %15, i32 0, i32 1
  %17 = load i8, i8* %16, align 1
  %_10 = icmp ule i8 %17, 57
  br i1 %_10, label %bb9, label %bb5

bb9:                                              ; preds = %bb4
  %18 = bitcast { i8, i8 }* %_3 to %"core::option::Option<u8>::Some"*
  %19 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %18, i32 0, i32 1
  %d1 = load i8, i8* %19, align 1
  %20 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %d1, i8 48)
  %_14.0 = extractvalue { i8, i1 } %20, 0
  %_14.1 = extractvalue { i8, i1 } %20, 1
  %21 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false)
  br i1 %21, label %panic, label %bb10

bb10:                                             ; preds = %bb9
  store i8 %_14.0, i8* %d, align 1
  br label %bb17

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1074 to %"core::panic::location::Location"*)) #12
  unreachable

bb17:                                             ; preds = %bb16, %bb13, %bb10
  %22 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %23, i64 1)
  %_26.0 = extractvalue { i64, i1 } %24, 0
  %_26.1 = extractvalue { i64, i1 } %24, 1
  %25 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false)
  br i1 %25, label %panic8, label %bb18

bb7:                                              ; preds = %bb6, %bb5
  %26 = bitcast { i8, i8 }* %_3 to %"core::option::Option<u8>::Some"*
  %27 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %26, i32 0, i32 1
  %28 = load i8, i8* %27, align 1
  %_5 = icmp ule i8 65, %28
  br i1 %_5, label %bb8, label %bb2

bb6:                                              ; preds = %bb5
  %29 = bitcast { i8, i8 }* %_3 to %"core::option::Option<u8>::Some"*
  %30 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %29, i32 0, i32 1
  %31 = load i8, i8* %30, align 1
  %_8 = icmp ule i8 %31, 122
  br i1 %_8, label %bb11, label %bb7

bb11:                                             ; preds = %bb6
  %32 = bitcast { i8, i8 }* %_3 to %"core::option::Option<u8>::Some"*
  %33 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %32, i32 0, i32 1
  %d2 = load i8, i8* %33, align 1
  %34 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %d2, i8 97)
  %_18.0 = extractvalue { i8, i1 } %34, 0
  %_18.1 = extractvalue { i8, i1 } %34, 1
  %35 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false)
  br i1 %35, label %panic3, label %bb12

bb12:                                             ; preds = %bb11
  %36 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 10, i8 %_18.0)
  %_19.0 = extractvalue { i8, i1 } %36, 0
  %_19.1 = extractvalue { i8, i1 } %36, 1
  %37 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false)
  br i1 %37, label %panic4, label %bb13

panic3:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1076 to %"core::panic::location::Location"*)) #12
  unreachable

bb13:                                             ; preds = %bb12
  store i8 %_19.0, i8* %d, align 1
  br label %bb17

panic4:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1078 to %"core::panic::location::Location"*)) #12
  unreachable

bb8:                                              ; preds = %bb7
  %38 = bitcast { i8, i8 }* %_3 to %"core::option::Option<u8>::Some"*
  %39 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %38, i32 0, i32 1
  %40 = load i8, i8* %39, align 1
  %_6 = icmp ule i8 %40, 90
  br i1 %_6, label %bb14, label %bb2

bb14:                                             ; preds = %bb8
  %41 = bitcast { i8, i8 }* %_3 to %"core::option::Option<u8>::Some"*
  %42 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %41, i32 0, i32 1
  %d5 = load i8, i8* %42, align 1
  %43 = call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %d5, i8 65)
  %_24.0 = extractvalue { i8, i1 } %43, 0
  %_24.1 = extractvalue { i8, i1 } %43, 1
  %44 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false)
  br i1 %44, label %panic6, label %bb15

bb15:                                             ; preds = %bb14
  %45 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 36, i8 %_24.0)
  %_25.0 = extractvalue { i8, i1 } %45, 0
  %_25.1 = extractvalue { i8, i1 } %45, 1
  %46 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false)
  br i1 %46, label %panic7, label %bb16

panic6:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1080 to %"core::panic::location::Location"*)) #12
  unreachable

bb16:                                             ; preds = %bb15
  store i8 %_25.0, i8* %d, align 1
  br label %bb17

panic7:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1082 to %"core::panic::location::Location"*)) #12
  unreachable

bb18:                                             ; preds = %bb17
  %47 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  store i64 %_26.0, i64* %47, align 8
  %_27 = load i8, i8* %d, align 1
  %48 = bitcast { i8, i8 }* %0 to %"core::result::Result<u8, v0::ParseError>::Ok"*
  %49 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Ok", %"core::result::Result<u8, v0::ParseError>::Ok"* %48, i32 0, i32 1
  store i8 %_27, i8* %49, align 1
  %50 = bitcast { i8, i8 }* %0 to i8*
  store i8 0, i8* %50, align 1
  br label %bb19

panic8:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1084 to %"core::panic::location::Location"*)) #12
  unreachable

bb19:                                             ; preds = %bb2, %bb18
  %51 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0
  %52 = load i8, i8* %51, align 1, !range !2
  %53 = trunc i8 %52 to i1
  %54 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i1 %53 to i8
  %57 = insertvalue { i8, i8 } undef, i8 %56, 0
  %58 = insertvalue { i8, i8 } %57, i8 %55, 1
  ret { i8, i8 } %58
}

; rustc_demangle::v0::Parser::integer_62
; Function Attrs: nonlazybind uwtable
define internal i128 @_ZN14rustc_demangle2v06Parser10integer_6217h35db8838954219a1E(%"v0::Parser"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %1 = alloca i128, align 8
  %2 = alloca i128, align 8
  %3 = alloca i128, align 8
  %4 = alloca i128, align 8
  %5 = alloca i128, align 8
  %6 = alloca i128, align 8
  %7 = alloca i128, align 8
  %_40 = alloca i8, align 1
  %_33 = alloca i8, align 1
  %_29 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %_28 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>", align 8
  %_22 = alloca i8, align 1
  %_19 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %_18 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>", align 8
  %_10 = alloca { i8, i8 }, align 1
  %x = alloca i64, align 8
  %8 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
; call rustc_demangle::v0::Parser::eat
  %_2 = call zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h5fc186279a20daa4E(%"v0::Parser"* align 8 dereferenceable(32) %self, i8 95)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i64 0, i64* %x, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  %9 = bitcast %"core::result::Result<u64, v0::ParseError>"* %8 to %"core::result::Result<u64, v0::ParseError>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Ok", %"core::result::Result<u64, v0::ParseError>::Ok"* %9, i32 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = bitcast %"core::result::Result<u64, v0::ParseError>"* %8 to i8*
  store i8 0, i8* %11, align 8
  br label %bb26

bb26:                                             ; preds = %bb25, %bb23, %bb17, %bb11, %bb2
  %12 = bitcast %"core::result::Result<u64, v0::ParseError>"* %8 to i128*
  %13 = load i128, i128* %12, align 8
  ret i128 %13

bb4:                                              ; preds = %bb21, %bb3
; call rustc_demangle::v0::Parser::eat
  %_6 = call zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h5fc186279a20daa4E(%"v0::Parser"* align 8 dereferenceable(32) %self, i8 95)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_5 = xor i1 %_6, true
  br i1 %_5, label %bb6, label %bb24

bb24:                                             ; preds = %bb5
  %_39 = load i64, i64* %x, align 8
; call core::num::<impl u64>::checked_add
  %14 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_add17h05d373c1ebaf853eE"(i64 %_39, i64 1)
  %_38.0 = extractvalue { i64, i64 } %14, 0
  %_38.1 = extractvalue { i64, i64 } %14, 1
  br label %bb25

bb6:                                              ; preds = %bb5
; call rustc_demangle::v0::Parser::digit_62
  %15 = call { i8, i8 } @_ZN14rustc_demangle2v06Parser8digit_6217h3f62733c48002fe8E(%"v0::Parser"* align 8 dereferenceable(32) %self)
  %16 = extractvalue { i8, i8 } %15, 0
  %_11.0 = trunc i8 %16 to i1
  %_11.1 = extractvalue { i8, i8 } %15, 1
  br label %bb7

bb7:                                              ; preds = %bb6
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %17 = call { i8, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h786b9e0d84a4e7b4E"(i1 zeroext %_11.0, i8 %_11.1)
  store { i8, i8 } %17, { i8, i8 }* %_10, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %18 = bitcast { i8, i8 }* %_10 to i8*
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = trunc i8 %19 to i1
  %_13 = zext i1 %20 to i64
  switch i64 %_13, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb9:                                              ; preds = %bb8
  %21 = bitcast { i8, i8 }* %_10 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue"*
  %22 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue"* %21, i32 0, i32 1
  %val = load i8, i8* %22, align 1
  %d = zext i8 %val to i64
  %_21 = load i64, i64* %x, align 8
; call core::num::<impl u64>::checked_mul
  %23 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_mul17h5f6c101cbfe60859E"(i64 %_21, i64 62)
  %_20.0 = extractvalue { i64, i64 } %23, 0
  %_20.1 = extractvalue { i64, i64 } %23, 1
  br label %bb12

bb11:                                             ; preds = %bb8
  %24 = bitcast { i8, i8 }* %_10 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break"*
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break"* %24, i32 0, i32 1
  %26 = load i8, i8* %25, align 1, !range !2
  %residual = trunc i8 %26 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %27 = call i128 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3ffd37c3f1b0beecE"(i1 zeroext %residual, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1086 to %"core::panic::location::Location"*))
  store i128 %27, i128* %7, align 8
  %28 = bitcast %"core::result::Result<u64, v0::ParseError>"* %8 to i8*
  %29 = bitcast i128* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false)
  br label %bb26

bb12:                                             ; preds = %bb9
  store i8 0, i8* %_22, align 1
  %30 = load i8, i8* %_22, align 1, !range !2
  %31 = trunc i8 %30 to i1
; call core::option::Option<T>::ok_or
  %32 = call i128 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he050cb645293fd4cE"(i64 %_20.0, i64 %_20.1, i1 zeroext %31)
  store i128 %32, i128* %6, align 8
  %33 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_19 to i8*
  %34 = bitcast i128* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false)
  br label %bb13

bb13:                                             ; preds = %bb12
  %35 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_19 to i128*
  %36 = load i128, i128* %35, align 8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %37 = call i128 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7b3ee549398ac868E"(i128 %36)
  store i128 %37, i128* %5, align 8
  %38 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_18 to i8*
  %39 = bitcast i128* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 16, i1 false)
  br label %bb14

bb14:                                             ; preds = %bb13
  %40 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_18 to i8*
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = trunc i8 %41 to i1
  %_23 = zext i1 %42 to i64
  switch i64 %_23, label %bb16 [
    i64 0, label %bb15
    i64 1, label %bb17
  ]

bb16:                                             ; preds = %bb14
  unreachable

bb15:                                             ; preds = %bb14
  %43 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_18 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue"*
  %44 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue"* %43, i32 0, i32 1
  %val2 = load i64, i64* %44, align 8
  store i64 %val2, i64* %x, align 8
  %_31 = load i64, i64* %x, align 8
; call core::num::<impl u64>::checked_add
  %45 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_add17h05d373c1ebaf853eE"(i64 %_31, i64 %d)
  %_30.0 = extractvalue { i64, i64 } %45, 0
  %_30.1 = extractvalue { i64, i64 } %45, 1
  br label %bb18

bb17:                                             ; preds = %bb14
  %46 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_18 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break"*
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break"* %46, i32 0, i32 1
  %48 = load i8, i8* %47, align 1, !range !2
  %residual1 = trunc i8 %48 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %49 = call i128 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3ffd37c3f1b0beecE"(i1 zeroext %residual1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1088 to %"core::panic::location::Location"*))
  store i128 %49, i128* %4, align 8
  %50 = bitcast %"core::result::Result<u64, v0::ParseError>"* %8 to i8*
  %51 = bitcast i128* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false)
  br label %bb26

bb18:                                             ; preds = %bb15
  store i8 0, i8* %_33, align 1
  %52 = load i8, i8* %_33, align 1, !range !2
  %53 = trunc i8 %52 to i1
; call core::option::Option<T>::ok_or
  %54 = call i128 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he050cb645293fd4cE"(i64 %_30.0, i64 %_30.1, i1 zeroext %53)
  store i128 %54, i128* %3, align 8
  %55 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_29 to i8*
  %56 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 16, i1 false)
  br label %bb19

bb19:                                             ; preds = %bb18
  %57 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_29 to i128*
  %58 = load i128, i128* %57, align 8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %59 = call i128 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7b3ee549398ac868E"(i128 %58)
  store i128 %59, i128* %2, align 8
  %60 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_28 to i8*
  %61 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false)
  br label %bb20

bb20:                                             ; preds = %bb19
  %62 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_28 to i8*
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = trunc i8 %63 to i1
  %_34 = zext i1 %64 to i64
  switch i64 %_34, label %bb22 [
    i64 0, label %bb21
    i64 1, label %bb23
  ]

bb22:                                             ; preds = %bb20
  unreachable

bb21:                                             ; preds = %bb20
  %65 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_28 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue"*
  %66 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue"* %65, i32 0, i32 1
  %val4 = load i64, i64* %66, align 8
  store i64 %val4, i64* %x, align 8
  br label %bb4

bb23:                                             ; preds = %bb20
  %67 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_28 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break"*
  %68 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break"* %67, i32 0, i32 1
  %69 = load i8, i8* %68, align 1, !range !2
  %residual3 = trunc i8 %69 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %70 = call i128 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3ffd37c3f1b0beecE"(i1 zeroext %residual3, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1090 to %"core::panic::location::Location"*))
  store i128 %70, i128* %1, align 8
  %71 = bitcast %"core::result::Result<u64, v0::ParseError>"* %8 to i8*
  %72 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 16, i1 false)
  br label %bb26

bb25:                                             ; preds = %bb24
  store i8 0, i8* %_40, align 1
  %73 = load i8, i8* %_40, align 1, !range !2
  %74 = trunc i8 %73 to i1
; call core::option::Option<T>::ok_or
  %75 = call i128 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he050cb645293fd4cE"(i64 %_38.0, i64 %_38.1, i1 zeroext %74)
  store i128 %75, i128* %0, align 8
  %76 = bitcast %"core::result::Result<u64, v0::ParseError>"* %8 to i8*
  %77 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 16, i1 false)
  br label %bb26
}

; rustc_demangle::v0::Parser::opt_integer_62
; Function Attrs: nonlazybind uwtable
define internal i128 @_ZN14rustc_demangle2v06Parser14opt_integer_6217h1fd77ea6ab130d33E(%"v0::Parser"* align 8 dereferenceable(32) %self, i8 %tag) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %1 = alloca i128, align 8
  %2 = alloca i128, align 8
  %3 = alloca i128, align 8
  %_16 = alloca i8, align 1
  %_10 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %_9 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>", align 8
  %4 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
; call rustc_demangle::v0::Parser::eat
  %_4 = call zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h5fc186279a20daa4E(%"v0::Parser"* align 8 dereferenceable(32) %self, i8 %tag)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
; call rustc_demangle::v0::Parser::integer_62
  %5 = call i128 @_ZN14rustc_demangle2v06Parser10integer_6217h35db8838954219a1E(%"v0::Parser"* align 8 dereferenceable(32) %self)
  store i128 %5, i128* %3, align 8
  %6 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_10 to i8*
  %7 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false)
  br label %bb4

bb2:                                              ; preds = %bb1
  %8 = bitcast %"core::result::Result<u64, v0::ParseError>"* %4 to %"core::result::Result<u64, v0::ParseError>::Ok"*
  %9 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Ok", %"core::result::Result<u64, v0::ParseError>::Ok"* %8, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = bitcast %"core::result::Result<u64, v0::ParseError>"* %4 to i8*
  store i8 0, i8* %10, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8, %bb2
  %11 = bitcast %"core::result::Result<u64, v0::ParseError>"* %4 to i128*
  %12 = load i128, i128* %11, align 8
  ret i128 %12

bb4:                                              ; preds = %bb3
  %13 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_10 to i128*
  %14 = load i128, i128* %13, align 8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %15 = call i128 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7b3ee549398ac868E"(i128 %14)
  store i128 %15, i128* %2, align 8
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_9 to i8*
  %17 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_9 to i8*
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = trunc i8 %19 to i1
  %_12 = zext i1 %20 to i64
  switch i64 %_12, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  %21 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_9 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue"*
  %22 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue"* %21, i32 0, i32 1
  %val = load i64, i64* %22, align 8
; call core::num::<impl u64>::checked_add
  %23 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_add17h05d373c1ebaf853eE"(i64 %val, i64 1)
  %_7.0 = extractvalue { i64, i64 } %23, 0
  %_7.1 = extractvalue { i64, i64 } %23, 1
  br label %bb9

bb8:                                              ; preds = %bb5
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_9 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break"*
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break"* %24, i32 0, i32 1
  %26 = load i8, i8* %25, align 1, !range !2
  %residual = trunc i8 %26 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %27 = call i128 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3ffd37c3f1b0beecE"(i1 zeroext %residual, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1092 to %"core::panic::location::Location"*))
  store i128 %27, i128* %1, align 8
  %28 = bitcast %"core::result::Result<u64, v0::ParseError>"* %4 to i8*
  %29 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false)
  br label %bb10

bb9:                                              ; preds = %bb6
  store i8 0, i8* %_16, align 1
  %30 = load i8, i8* %_16, align 1, !range !2
  %31 = trunc i8 %30 to i1
; call core::option::Option<T>::ok_or
  %32 = call i128 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he050cb645293fd4cE"(i64 %_7.0, i64 %_7.1, i1 zeroext %31)
  store i128 %32, i128* %0, align 8
  %33 = bitcast %"core::result::Result<u64, v0::ParseError>"* %4 to i8*
  %34 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false)
  br label %bb10
}

; rustc_demangle::v0::Parser::disambiguator
; Function Attrs: nonlazybind uwtable
define internal i128 @_ZN14rustc_demangle2v06Parser13disambiguator17hcecc09e50a8e1526E(%"v0::Parser"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %1 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
; call rustc_demangle::v0::Parser::opt_integer_62
  %2 = call i128 @_ZN14rustc_demangle2v06Parser14opt_integer_6217h1fd77ea6ab130d33E(%"v0::Parser"* align 8 dereferenceable(32) %self, i8 115)
  store i128 %2, i128* %0, align 8
  %3 = bitcast %"core::result::Result<u64, v0::ParseError>"* %1 to i8*
  %4 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<u64, v0::ParseError>"* %1 to i128*
  %6 = load i128, i128* %5, align 8
  ret i128 %6
}

; rustc_demangle::v0::Parser::namespace
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN14rustc_demangle2v06Parser9namespace17h3e49aa7fc810456eE(%"v0::Parser"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_15 = alloca i32, align 4
  %_3 = alloca { i8, i8 }, align 1
  %1 = alloca %"core::result::Result<core::option::Option<char>, v0::ParseError>", align 4
; call rustc_demangle::v0::Parser::next
  %2 = call { i8, i8 } @_ZN14rustc_demangle2v06Parser4next17hffa0ce9c0a6f9798E(%"v0::Parser"* align 8 dereferenceable(32) %self)
  %3 = extractvalue { i8, i8 } %2, 0
  %_4.0 = trunc i8 %3 to i1
  %_4.1 = extractvalue { i8, i8 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %4 = call { i8, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h786b9e0d84a4e7b4E"(i1 zeroext %_4.0, i8 %_4.1)
  store { i8, i8 } %4, { i8, i8 }* %_3, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8, i8 }* %_3 to i8*
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = trunc i8 %6 to i1
  %_6 = zext i1 %7 to i64
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %8 = bitcast { i8, i8 }* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue"* %8, i32 0, i32 1
  %val = load i8, i8* %9, align 1
  %_12 = icmp ule i8 65, %val
  br i1 %_12, label %bb6, label %bb7

bb5:                                              ; preds = %bb2
  %10 = bitcast { i8, i8 }* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break"*
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break"* %10, i32 0, i32 1
  %12 = load i8, i8* %11, align 1, !range !2
  %residual = trunc i8 %12 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %13 = call i64 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbfa6c0cb1aaf632eE"(i1 zeroext %residual, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1094 to %"core::panic::location::Location"*))
  store i64 %13, i64* %0, align 8
  %14 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %1 to i8*
  %15 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 8 %15, i64 8, i1 false)
  br label %bb12

bb12:                                             ; preds = %bb9, %bb11, %bb10, %bb5
  %16 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %1 to i64*
  %17 = load i64, i64* %16, align 4
  ret i64 %17

bb7:                                              ; preds = %bb6, %bb3
  %_10 = icmp ule i8 97, %val
  br i1 %_10, label %bb8, label %bb9

bb6:                                              ; preds = %bb3
  %_13 = icmp ule i8 %val, 90
  br i1 %_13, label %bb10, label %bb7

bb10:                                             ; preds = %bb6
  %_16 = zext i8 %val to i32
  store i32 %_16, i32* %_15, align 4
  %18 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %1 to %"core::result::Result<core::option::Option<char>, v0::ParseError>::Ok"*
  %19 = getelementptr inbounds %"core::result::Result<core::option::Option<char>, v0::ParseError>::Ok", %"core::result::Result<core::option::Option<char>, v0::ParseError>::Ok"* %18, i32 0, i32 1
  %20 = load i32, i32* %_15, align 4, !range !4
  store i32 %20, i32* %19, align 4
  %21 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %1 to i8*
  store i8 0, i8* %21, align 4
  br label %bb12

bb9:                                              ; preds = %bb8, %bb7
  %22 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %1 to %"core::result::Result<core::option::Option<char>, v0::ParseError>::Err"*
  %23 = getelementptr inbounds %"core::result::Result<core::option::Option<char>, v0::ParseError>::Err", %"core::result::Result<core::option::Option<char>, v0::ParseError>::Err"* %22, i32 0, i32 1
  store i8 0, i8* %23, align 1
  %24 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %1 to i8*
  store i8 1, i8* %24, align 4
  br label %bb12

bb8:                                              ; preds = %bb7
  %_11 = icmp ule i8 %val, 122
  br i1 %_11, label %bb11, label %bb9

bb11:                                             ; preds = %bb8
  %25 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %1 to %"core::result::Result<core::option::Option<char>, v0::ParseError>::Ok"*
  %26 = getelementptr inbounds %"core::result::Result<core::option::Option<char>, v0::ParseError>::Ok", %"core::result::Result<core::option::Option<char>, v0::ParseError>::Ok"* %25, i32 0, i32 1
  store i32 1114112, i32* %26, align 4
  %27 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %1 to i8*
  store i8 0, i8* %27, align 4
  br label %bb12
}

; rustc_demangle::v0::Parser::backref
; Function Attrs: nonlazybind uwtable
define internal void @_ZN14rustc_demangle2v06Parser7backref17h49206b6974cbc217E(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %0, %"v0::Parser"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %1 = alloca i128, align 8
  %2 = alloca i128, align 8
  %_29 = alloca %"v0::Parser", align 8
  %_22 = alloca i8, align 1
  %new_parser = alloca %"v0::Parser", align 8
  %_7 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %_6 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>", align 8
  %3 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  %_3 = load i64, i64* %3, align 8
  %4 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_3, i64 1)
  %_4.0 = extractvalue { i64, i1 } %4, 0
  %_4.1 = extractvalue { i64, i1 } %4, 1
  %5 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %5, label %panic, label %bb1

bb1:                                              ; preds = %start
; call rustc_demangle::v0::Parser::integer_62
  %6 = call i128 @_ZN14rustc_demangle2v06Parser10integer_6217h35db8838954219a1E(%"v0::Parser"* align 8 dereferenceable(32) %self)
  store i128 %6, i128* %2, align 8
  %7 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_7 to i8*
  %8 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  br label %bb2

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1096 to %"core::panic::location::Location"*)) #12
  unreachable

bb2:                                              ; preds = %bb1
  %9 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_7 to i128*
  %10 = load i128, i128* %9, align 8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %11 = call i128 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7b3ee549398ac868E"(i128 %10)
  store i128 %11, i128* %1, align 8
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_6 to i8*
  %13 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_6 to i8*
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = trunc i8 %15 to i1
  %_9 = zext i1 %16 to i64
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_6 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Continue"* %17, i32 0, i32 1
  %val = load i64, i64* %18, align 8
  %_13 = icmp uge i64 %val, %_4.0
  br i1 %_13, label %bb7, label %bb8

bb6:                                              ; preds = %bb3
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>"* %_6 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break"*
  %20 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u64>::Break"* %19, i32 0, i32 1
  %21 = load i8, i8* %20, align 1, !range !2
  %residual = trunc i8 %21 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h84715860e414811aE"(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %0, i1 zeroext %residual, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1098 to %"core::panic::location::Location"*))
  br label %bb14

bb14:                                             ; preds = %bb11, %bb13, %bb7, %bb6
  ret void

bb8:                                              ; preds = %bb4
  %22 = bitcast %"v0::Parser"* %self to { [0 x i8]*, i64 }*
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 0
  %_18.0 = load [0 x i8]*, [0 x i8]** %23, align 8, !nonnull !6
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 1
  %_18.1 = load i64, i64* %24, align 8
  %25 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 2
  %_21 = load i32, i32* %25, align 8
  %26 = bitcast %"v0::Parser"* %new_parser to { [0 x i8]*, i64 }*
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0
  store [0 x i8]* %_18.0, [0 x i8]** %27, align 8
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1
  store i64 %_18.1, i64* %28, align 8
  %29 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %new_parser, i32 0, i32 1
  store i64 %val, i64* %29, align 8
  %30 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %new_parser, i32 0, i32 2
  store i32 %_21, i32* %30, align 8
; call rustc_demangle::v0::Parser::push_depth
  %_23 = call i8 @_ZN14rustc_demangle2v06Parser10push_depth17hac46607ed685a51dE(%"v0::Parser"* align 8 dereferenceable(32) %new_parser), !range !7
  br label %bb9

bb7:                                              ; preds = %bb4
  %31 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %0 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %32 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %31, i32 0, i32 1
  store i8 0, i8* %32, align 1
  %33 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %0 to i8*
  store i8 1, i8* %33, align 8
  br label %bb14

bb9:                                              ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %34 = call i8 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6af829c8431a4fbbE"(i8 %_23), !range !7
  store i8 %34, i8* %_22, align 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %35 = load i8, i8* %_22, align 1, !range !7
  %36 = sub i8 %35, 2
  %37 = icmp eq i8 %36, 0
  %_25 = select i1 %37, i64 0, i64 1
  switch i64 %_25, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %38 = bitcast %"v0::Parser"* %_29 to i8*
  %39 = bitcast %"v0::Parser"* %new_parser to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 32, i1 false)
  %40 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %0 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %41 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %40, i32 0, i32 1
  %42 = bitcast %"v0::Parser"* %41 to i8*
  %43 = bitcast %"v0::Parser"* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 32, i1 false)
  %44 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %0 to i8*
  store i8 0, i8* %44, align 8
  br label %bb14

bb13:                                             ; preds = %bb10
  %45 = load i8, i8* %_22, align 1, !range !2
  %residual1 = trunc i8 %45 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h84715860e414811aE"(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %0, i1 zeroext %residual1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1100 to %"core::panic::location::Location"*))
  br label %bb14
}

; rustc_demangle::v0::Parser::ident
; Function Attrs: nonlazybind uwtable
define internal void @_ZN14rustc_demangle2v06Parser5ident17hc0ec47da9313c876E(%"core::result::Result<v0::Ident, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Ident, v0::ParseError>") dereferenceable(40) %0, %"v0::Parser"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %1 = alloca i128, align 8
  %2 = alloca i128, align 8
  %3 = alloca i128, align 8
  %4 = alloca i128, align 8
  %5 = alloca i128, align 8
  %6 = alloca i128, align 8
  %_93 = alloca %"v0::Ident", align 8
  %_92 = alloca %"v0::Ident", align 8
  %_83 = alloca i64, align 8
  %_77 = alloca i64, align 8
  %_68 = alloca { i8*, i8* }, align 8
  %_66 = alloca { i64, i64 }, align 8
  %ident = alloca %"v0::Ident", align 8
  %_61 = alloca { i64, i64 }, align 8
  %_49 = alloca i8, align 1
  %_45 = alloca %"core::result::Result<usize, v0::ParseError>", align 8
  %_44 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>", align 8
  %_35 = alloca i8, align 1
  %_30 = alloca %"core::result::Result<usize, v0::ParseError>", align 8
  %_29 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>", align 8
  %_23 = alloca i8, align 1
  %_20 = alloca %"core::result::Result<usize, v0::ParseError>", align 8
  %_19 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>", align 8
  %_14 = alloca { i8, i8 }, align 1
  %_6 = alloca { i8, i8 }, align 1
  %len = alloca i64, align 8
; call rustc_demangle::v0::Parser::eat
  %is_punycode = call zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h5fc186279a20daa4E(%"v0::Parser"* align 8 dereferenceable(32) %self, i8 117)
  br label %bb1

bb1:                                              ; preds = %start
; call rustc_demangle::v0::Parser::digit_10
  %7 = call { i8, i8 } @_ZN14rustc_demangle2v06Parser8digit_1017h1aaac55765391d7dE(%"v0::Parser"* align 8 dereferenceable(32) %self)
  %8 = extractvalue { i8, i8 } %7, 0
  %_7.0 = trunc i8 %8 to i1
  %_7.1 = extractvalue { i8, i8 } %7, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %9 = call { i8, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h786b9e0d84a4e7b4E"(i1 zeroext %_7.0, i8 %_7.1)
  store { i8, i8 } %9, { i8, i8 }* %_6, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %10 = bitcast { i8, i8 }* %_6 to i8*
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = trunc i8 %11 to i1
  %_9 = zext i1 %12 to i64
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %13 = bitcast { i8, i8 }* %_6 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue"*
  %14 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Continue"* %13, i32 0, i32 1
  %val = load i8, i8* %14, align 1
  %15 = zext i8 %val to i64
  store i64 %15, i64* %len, align 8
  %_13 = load i64, i64* %len, align 8
  %16 = icmp eq i64 %_13, 0
  br i1 %16, label %bb22, label %bb7

bb6:                                              ; preds = %bb3
  %17 = bitcast { i8, i8 }* %_6 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, u8>::Break"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !2
  %residual = trunc i8 %19 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h093845971151bc84E"(%"core::result::Result<v0::Ident, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Ident, v0::ParseError>") dereferenceable(40) %0, i1 zeroext %residual, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1102 to %"core::panic::location::Location"*))
  br label %bb48

bb48:                                             ; preds = %bb47, %bb46, %bb45, %bb31, %bb29, %bb21, %bb15, %bb6
  ret void

bb22:                                             ; preds = %bb8, %bb4
; call rustc_demangle::v0::Parser::eat
  %_40 = call zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h5fc186279a20daa4E(%"v0::Parser"* align 8 dereferenceable(32) %self, i8 95)
  br label %bb23

bb7:                                              ; preds = %bb19, %bb4
; call rustc_demangle::v0::Parser::digit_10
  %20 = call { i8, i8 } @_ZN14rustc_demangle2v06Parser8digit_1017h1aaac55765391d7dE(%"v0::Parser"* align 8 dereferenceable(32) %self)
  store { i8, i8 } %20, { i8, i8 }* %_14, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %21 = bitcast { i8, i8 }* %_14 to i8*
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  %24 = icmp eq i64 %_16, 0
  br i1 %24, label %bb9, label %bb22

bb9:                                              ; preds = %bb8
  %25 = bitcast { i8, i8 }* %_14 to %"core::result::Result<u8, v0::ParseError>::Ok"*
  %26 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Ok", %"core::result::Result<u8, v0::ParseError>::Ok"* %25, i32 0, i32 1
  %d = load i8, i8* %26, align 1
  %_22 = load i64, i64* %len, align 8
; call core::num::<impl usize>::checked_mul
  %27 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17ha878e85f9d206771E"(i64 %_22, i64 10)
  %_21.0 = extractvalue { i64, i64 } %27, 0
  %_21.1 = extractvalue { i64, i64 } %27, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  store i8 0, i8* %_23, align 1
  %28 = load i8, i8* %_23, align 1, !range !2
  %29 = trunc i8 %28 to i1
; call core::option::Option<T>::ok_or
  %30 = call i128 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he3a5ee6b0011acf6E"(i64 %_21.0, i64 %_21.1, i1 zeroext %29)
  store i128 %30, i128* %6, align 8
  %31 = bitcast %"core::result::Result<usize, v0::ParseError>"* %_20 to i8*
  %32 = bitcast i128* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false)
  br label %bb11

bb11:                                             ; preds = %bb10
  %33 = bitcast %"core::result::Result<usize, v0::ParseError>"* %_20 to i128*
  %34 = load i128, i128* %33, align 8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %35 = call i128 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h109ef566ffce8b55E"(i128 %34)
  store i128 %35, i128* %5, align 8
  %36 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %_19 to i8*
  %37 = bitcast i128* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false)
  br label %bb12

bb12:                                             ; preds = %bb11
  %38 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %_19 to i8*
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = trunc i8 %39 to i1
  %_24 = zext i1 %40 to i64
  switch i64 %_24, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ]

bb14:                                             ; preds = %bb12
  unreachable

bb13:                                             ; preds = %bb12
  %41 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %_19 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Continue"*
  %42 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Continue"* %41, i32 0, i32 1
  %val2 = load i64, i64* %42, align 8
  store i64 %val2, i64* %len, align 8
  %_32 = load i64, i64* %len, align 8
  %_33 = zext i8 %d to i64
; call core::num::<impl usize>::checked_add
  %43 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h125bce0a72c69c92E"(i64 %_32, i64 %_33)
  %_31.0 = extractvalue { i64, i64 } %43, 0
  %_31.1 = extractvalue { i64, i64 } %43, 1
  br label %bb16

bb15:                                             ; preds = %bb12
  %44 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %_19 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Break"*
  %45 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Break"* %44, i32 0, i32 1
  %46 = load i8, i8* %45, align 1, !range !2
  %residual1 = trunc i8 %46 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h093845971151bc84E"(%"core::result::Result<v0::Ident, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Ident, v0::ParseError>") dereferenceable(40) %0, i1 zeroext %residual1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1104 to %"core::panic::location::Location"*))
  br label %bb48

bb16:                                             ; preds = %bb13
  store i8 0, i8* %_35, align 1
  %47 = load i8, i8* %_35, align 1, !range !2
  %48 = trunc i8 %47 to i1
; call core::option::Option<T>::ok_or
  %49 = call i128 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he3a5ee6b0011acf6E"(i64 %_31.0, i64 %_31.1, i1 zeroext %48)
  store i128 %49, i128* %4, align 8
  %50 = bitcast %"core::result::Result<usize, v0::ParseError>"* %_30 to i8*
  %51 = bitcast i128* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false)
  br label %bb17

bb17:                                             ; preds = %bb16
  %52 = bitcast %"core::result::Result<usize, v0::ParseError>"* %_30 to i128*
  %53 = load i128, i128* %52, align 8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %54 = call i128 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h109ef566ffce8b55E"(i128 %53)
  store i128 %54, i128* %3, align 8
  %55 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %_29 to i8*
  %56 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 16, i1 false)
  br label %bb18

bb18:                                             ; preds = %bb17
  %57 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %_29 to i8*
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = trunc i8 %58 to i1
  %_36 = zext i1 %59 to i64
  switch i64 %_36, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ]

bb20:                                             ; preds = %bb18
  unreachable

bb19:                                             ; preds = %bb18
  %60 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %_29 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Continue"*
  %61 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Continue"* %60, i32 0, i32 1
  %val4 = load i64, i64* %61, align 8
  store i64 %val4, i64* %len, align 8
  br label %bb7

bb21:                                             ; preds = %bb18
  %62 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %_29 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Break"*
  %63 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Break"* %62, i32 0, i32 1
  %64 = load i8, i8* %63, align 1, !range !2
  %residual3 = trunc i8 %64 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h093845971151bc84E"(%"core::result::Result<v0::Ident, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Ident, v0::ParseError>") dereferenceable(40) %0, i1 zeroext %residual3, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1106 to %"core::panic::location::Location"*))
  br label %bb48

bb23:                                             ; preds = %bb22
  %65 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  %start5 = load i64, i64* %65, align 8
  %66 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  %_47 = load i64, i64* %66, align 8
  %_48 = load i64, i64* %len, align 8
; call core::num::<impl usize>::checked_add
  %67 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h125bce0a72c69c92E"(i64 %_47, i64 %_48)
  %_46.0 = extractvalue { i64, i64 } %67, 0
  %_46.1 = extractvalue { i64, i64 } %67, 1
  br label %bb24

bb24:                                             ; preds = %bb23
  store i8 0, i8* %_49, align 1
  %68 = load i8, i8* %_49, align 1, !range !2
  %69 = trunc i8 %68 to i1
; call core::option::Option<T>::ok_or
  %70 = call i128 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he3a5ee6b0011acf6E"(i64 %_46.0, i64 %_46.1, i1 zeroext %69)
  store i128 %70, i128* %2, align 8
  %71 = bitcast %"core::result::Result<usize, v0::ParseError>"* %_45 to i8*
  %72 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 16, i1 false)
  br label %bb25

bb25:                                             ; preds = %bb24
  %73 = bitcast %"core::result::Result<usize, v0::ParseError>"* %_45 to i128*
  %74 = load i128, i128* %73, align 8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %75 = call i128 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h109ef566ffce8b55E"(i128 %74)
  store i128 %75, i128* %1, align 8
  %76 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %_44 to i8*
  %77 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 16, i1 false)
  br label %bb26

bb26:                                             ; preds = %bb25
  %78 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %_44 to i8*
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = trunc i8 %79 to i1
  %_50 = zext i1 %80 to i64
  switch i64 %_50, label %bb28 [
    i64 0, label %bb27
    i64 1, label %bb29
  ]

bb28:                                             ; preds = %bb26
  unreachable

bb27:                                             ; preds = %bb26
  %81 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %_44 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Continue"*
  %82 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Continue"* %81, i32 0, i32 1
  %val7 = load i64, i64* %82, align 8
  %83 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  store i64 %val7, i64* %83, align 8
  %84 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  %_55 = load i64, i64* %84, align 8
  %85 = bitcast %"v0::Parser"* %self to { [0 x i8]*, i64 }*
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %85, i32 0, i32 0
  %_57.0 = load [0 x i8]*, [0 x i8]** %86, align 8, !nonnull !6
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %85, i32 0, i32 1
  %_57.1 = load i64, i64* %87, align 8
; call core::str::<impl str>::len
  %_56 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %_57.0, i64 %_57.1)
  br label %bb30

bb29:                                             ; preds = %bb26
  %88 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>"* %_44 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Break"*
  %89 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, v0::ParseError>, usize>::Break"* %88, i32 0, i32 1
  %90 = load i8, i8* %89, align 1, !range !2
  %residual6 = trunc i8 %90 to i1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h093845971151bc84E"(%"core::result::Result<v0::Ident, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Ident, v0::ParseError>") dereferenceable(40) %0, i1 zeroext %residual6, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1108 to %"core::panic::location::Location"*))
  br label %bb48

bb30:                                             ; preds = %bb27
  %_54 = icmp ugt i64 %_55, %_56
  br i1 %_54, label %bb31, label %bb32

bb32:                                             ; preds = %bb30
  %91 = bitcast %"v0::Parser"* %self to { [0 x i8]*, i64 }*
  %92 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %91, i32 0, i32 0
  %_60.0 = load [0 x i8]*, [0 x i8]** %92, align 8, !nonnull !6
  %93 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %91, i32 0, i32 1
  %_60.1 = load i64, i64* %93, align 8
  %94 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %self, i32 0, i32 1
  %_63 = load i64, i64* %94, align 8
  %95 = bitcast { i64, i64 }* %_61 to i64*
  store i64 %start5, i64* %95, align 8
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_61, i32 0, i32 1
  store i64 %_63, i64* %96, align 8
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_61, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_61, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %101 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h355193264e6bccf0E"([0 x i8]* nonnull align 1 %_60.0, i64 %_60.1, i64 %98, i64 %100, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1110 to %"core::panic::location::Location"*))
  %_59.0 = extractvalue { [0 x i8]*, i64 } %101, 0
  %_59.1 = extractvalue { [0 x i8]*, i64 } %101, 1
  br label %bb33

bb31:                                             ; preds = %bb30
  %102 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %0 to %"core::result::Result<v0::Ident, v0::ParseError>::Err"*
  %103 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Err", %"core::result::Result<v0::Ident, v0::ParseError>::Err"* %102, i32 0, i32 1
  store i8 0, i8* %103, align 1
  %104 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %0 to i8*
  store i8 1, i8* %104, align 8
  br label %bb48

bb33:                                             ; preds = %bb32
  br i1 %is_punycode, label %bb34, label %bb47

bb47:                                             ; preds = %bb33
  %105 = bitcast %"v0::Ident"* %_93 to { [0 x i8]*, i64 }*
  %106 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %105, i32 0, i32 0
  store [0 x i8]* %_59.0, [0 x i8]** %106, align 8
  %107 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %105, i32 0, i32 1
  store i64 %_59.1, i64* %107, align 8
  %108 = getelementptr inbounds %"v0::Ident", %"v0::Ident"* %_93, i32 0, i32 1
  %109 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %108, i32 0, i32 0
  store [0 x i8]* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc703, i32 0, i32 0), [0 x i8]** %109, align 8
  %110 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %108, i32 0, i32 1
  store i64 0, i64* %110, align 8
  %111 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %0 to %"core::result::Result<v0::Ident, v0::ParseError>::Ok"*
  %112 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Ok", %"core::result::Result<v0::Ident, v0::ParseError>::Ok"* %111, i32 0, i32 1
  %113 = bitcast %"v0::Ident"* %112 to i8*
  %114 = bitcast %"v0::Ident"* %_93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 32, i1 false)
  %115 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %0 to i8*
  store i8 0, i8* %115, align 8
  br label %bb48

bb34:                                             ; preds = %bb33
; call core::str::<impl str>::bytes
  %116 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17h7ba8043217c2c4a8E"([0 x i8]* nonnull align 1 %_59.0, i64 %_59.1)
  store { i8*, i8* } %116, { i8*, i8* }* %_68, align 8
  br label %bb35

bb35:                                             ; preds = %bb34
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::rposition
  %117 = call { i64, i64 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9rposition17h1b0383100f1b0bdbE"({ i8*, i8* }* align 8 dereferenceable(16) %_68)
  store { i64, i64 } %117, { i64, i64 }* %_66, align 8
  br label %bb36

bb36:                                             ; preds = %bb35
  %118 = bitcast { i64, i64 }* %_66 to i64*
  %_71 = load i64, i64* %118, align 8, !range !5
  switch i64 %_71, label %bb38 [
    i64 0, label %bb37
    i64 1, label %bb39
  ]

bb38:                                             ; preds = %bb36
  unreachable

bb37:                                             ; preds = %bb36
  %119 = bitcast %"v0::Ident"* %ident to { [0 x i8]*, i64 }*
  %120 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %119, i32 0, i32 0
  store [0 x i8]* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc703, i32 0, i32 0), [0 x i8]** %120, align 8
  %121 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %119, i32 0, i32 1
  store i64 0, i64* %121, align 8
  %122 = getelementptr inbounds %"v0::Ident", %"v0::Ident"* %ident, i32 0, i32 1
  %123 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %122, i32 0, i32 0
  store [0 x i8]* %_59.0, [0 x i8]** %123, align 8
  %124 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %122, i32 0, i32 1
  store i64 %_59.1, i64* %124, align 8
  br label %bb43

bb39:                                             ; preds = %bb36
  %125 = bitcast { i64, i64 }* %_66 to %"core::option::Option<usize>::Some"*
  %126 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %125, i32 0, i32 1
  %i = load i64, i64* %126, align 8
  store i64 %i, i64* %_77, align 8
  %127 = load i64, i64* %_77, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %128 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h1a05bb88631985ceE"([0 x i8]* nonnull align 1 %_59.0, i64 %_59.1, i64 %127, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1112 to %"core::panic::location::Location"*))
  %_75.0 = extractvalue { [0 x i8]*, i64 } %128, 0
  %_75.1 = extractvalue { [0 x i8]*, i64 } %128, 1
  br label %bb40

bb40:                                             ; preds = %bb39
  %129 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 1)
  %_86.0 = extractvalue { i64, i1 } %129, 0
  %_86.1 = extractvalue { i64, i1 } %129, 1
  %130 = call i1 @llvm.expect.i1(i1 %_86.1, i1 false)
  br i1 %130, label %panic, label %bb41

bb41:                                             ; preds = %bb40
  store i64 %_86.0, i64* %_83, align 8
  %131 = load i64, i64* %_83, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %132 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %_59.0, i64 %_59.1, i64 %131, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1116 to %"core::panic::location::Location"*))
  %_81.0 = extractvalue { [0 x i8]*, i64 } %132, 0
  %_81.1 = extractvalue { [0 x i8]*, i64 } %132, 1
  br label %bb42

panic:                                            ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1114 to %"core::panic::location::Location"*)) #12
  unreachable

bb42:                                             ; preds = %bb41
  %133 = bitcast %"v0::Ident"* %ident to { [0 x i8]*, i64 }*
  %134 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %133, i32 0, i32 0
  store [0 x i8]* %_75.0, [0 x i8]** %134, align 8
  %135 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %133, i32 0, i32 1
  store i64 %_75.1, i64* %135, align 8
  %136 = getelementptr inbounds %"v0::Ident", %"v0::Ident"* %ident, i32 0, i32 1
  %137 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %136, i32 0, i32 0
  store [0 x i8]* %_81.0, [0 x i8]** %137, align 8
  %138 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %136, i32 0, i32 1
  store i64 %_81.1, i64* %138, align 8
  br label %bb43

bb43:                                             ; preds = %bb37, %bb42
  %139 = getelementptr inbounds %"v0::Ident", %"v0::Ident"* %ident, i32 0, i32 1
  %140 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %139, i32 0, i32 0
  %_91.0 = load [0 x i8]*, [0 x i8]** %140, align 8, !nonnull !6
  %141 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %139, i32 0, i32 1
  %_91.1 = load i64, i64* %141, align 8
; call core::str::<impl str>::is_empty
  %_90 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17he6e5338d5d9dd13dE"([0 x i8]* nonnull align 1 %_91.0, i64 %_91.1)
  br label %bb44

bb44:                                             ; preds = %bb43
  br i1 %_90, label %bb45, label %bb46

bb46:                                             ; preds = %bb44
  %142 = bitcast %"v0::Ident"* %_92 to i8*
  %143 = bitcast %"v0::Ident"* %ident to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 32, i1 false)
  %144 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %0 to %"core::result::Result<v0::Ident, v0::ParseError>::Ok"*
  %145 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Ok", %"core::result::Result<v0::Ident, v0::ParseError>::Ok"* %144, i32 0, i32 1
  %146 = bitcast %"v0::Ident"* %145 to i8*
  %147 = bitcast %"v0::Ident"* %_92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 32, i1 false)
  %148 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %0 to i8*
  store i8 0, i8* %148, align 8
  br label %bb48

bb45:                                             ; preds = %bb44
  %149 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %0 to %"core::result::Result<v0::Ident, v0::ParseError>::Err"*
  %150 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Err", %"core::result::Result<v0::Ident, v0::ParseError>::Err"* %149, i32 0, i32 1
  store i8 0, i8* %150, align 1
  %151 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %0 to i8*
  store i8 1, i8* %151, align 8
  br label %bb48
}

; rustc_demangle::v0::Parser::ident::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v06Parser5ident28_$u7b$$u7b$closure$u7d$$u7d$17h8aea3f94510b481dE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:545:55: 545:68]"* nonnull align 1 %_1, i8 %b) unnamed_addr #1 {
start:
  %0 = icmp eq i8 %b, 95
  ret i1 %0
}

; rustc_demangle::v0::ParseError::message
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = load i8, i8* %self, align 1, !range !2
  %2 = trunc i8 %1 to i1
  %_2 = zext i1 %2 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [16 x i8] }>* @alloc1120 to [0 x i8]*), [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 16, i64* %4, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [25 x i8] }>* @alloc1119 to [0 x i8]*), [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 25, i64* %6, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %8 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !6
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1
  ret { [0 x i8]*, i64 } %12
}

; rustc_demangle::v0::Printer::eat
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 %0) unnamed_addr #0 {
start:
  %1 = alloca i128, align 8
  %_7 = alloca i8*, align 8
  %_4 = alloca %"core::result::Result<bool, &mut v0::ParseError>", align 8
  %b = alloca i8, align 1
  store i8 %0, i8* %b, align 1
  %_6 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
; call core::result::Result<T,E>::as_mut
  %2 = call { i64, i8* } @"_ZN4core6result19Result$LT$T$C$E$GT$6as_mut17he7119a72d6d3e2b7E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_6)
  %_5.0 = extractvalue { i64, i8* } %2, 0
  %_5.1 = extractvalue { i64, i8* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  store i8* %b, i8** %_7, align 8
  %3 = load i8*, i8** %_7, align 8, !nonnull !6
; call core::result::Result<T,E>::map
  %4 = call i128 @"_ZN4core6result19Result$LT$T$C$E$GT$3map17he4d44372df29b002E"(i64 %_5.0, i8* %_5.1, i8* align 1 dereferenceable(1) %3)
  store i128 %4, i128* %1, align 8
  %5 = bitcast %"core::result::Result<bool, &mut v0::ParseError>"* %_4 to i8*
  %6 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::cmp::PartialEq>::eq
  %7 = call zeroext i1 @"_ZN74_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17ha98e84b50b76e60cE"(%"core::result::Result<bool, &mut v0::ParseError>"* align 8 dereferenceable(16) %_4, %"core::result::Result<bool, &mut v0::ParseError>"* align 8 dereferenceable(16) bitcast (<{ [16 x i8] }>* @alloc454 to %"core::result::Result<bool, &mut v0::ParseError>"*))
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %7
}

; rustc_demangle::v0::Printer::eat::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer3eat28_$u7b$$u7b$closure$u7d$$u7d$17hf204a5b1984f9334E"(i8* align 1 dereferenceable(1) %_1, %"v0::Parser"* align 8 dereferenceable(32) %p) unnamed_addr #1 {
start:
  %_4 = load i8, i8* %_1, align 1
; call rustc_demangle::v0::Parser::eat
  %0 = call zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h5fc186279a20daa4E(%"v0::Parser"* align 8 dereferenceable(32) %p, i8 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; rustc_demangle::v0::Printer::skipping_printing
; Function Attrs: nonlazybind uwtable
define internal void @_ZN14rustc_demangle2v07Printer17skipping_printing17hddcc7f2833ef1143E(%"v0::Printer"* align 8 dereferenceable(56) %self) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_8 = alloca i64*, align 8
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_13, align 1
  %_4 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
; invoke core::option::Option<T>::take
  %orig_out = invoke align 8 dereferenceable_or_null(64) i64* @"_ZN4core6option15Option$LT$T$GT$4take17hbbc3f46c27946c45E"(i64** align 8 dereferenceable(8) %_4)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_13, align 1
  %1 = bitcast i64** %_8 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %1, align 8
  %2 = load i64*, i64** %_8, align 8, !nonnull !6
  %3 = bitcast i64* %2 to %"v0::Printer"*
; invoke rustc_demangle::v0::Printer::print_path::{{closure}}
  %_6 = invoke zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_path28_$u7b$$u7b$closure$u7d$$u7d$17h8dd1fa54beaab1c2E"(%"v0::Printer"* align 8 dereferenceable(56) %3)
          to label %bb2 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  %4 = load i8, i8* %_13, align 1, !range !2
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb4

cleanup:                                          ; preds = %bb2, %bb1, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h658fffd2f1d052b0E"(i1 zeroext %_6, [0 x i8]* nonnull align 1 bitcast (<{ [61 x i8] }>* @alloc1121 to [0 x i8]*), i64 61, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1123 to %"core::panic::location::Location"*))
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %11 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
  store i64* %orig_out, i64** %11, align 8
  ret void

bb4:                                              ; preds = %bb5, %bb6
  %12 = bitcast { i8*, i32 }* %0 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17

bb5:                                              ; preds = %bb6
  br label %bb4
}

; rustc_demangle::v0::Printer::print_backref
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17h6c097dee35180904E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8* align 1 dereferenceable(1) %f) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_35 = alloca i8, align 1
  %_34 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_32 = alloca i64*, align 8
  %_29 = alloca %"v0::Parser", align 8
  %_28 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %orig_parser = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_20 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_11 = alloca i8, align 1
  %err = alloca i8, align 1
  %x = alloca %"v0::Parser", align 8
  %_6 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %backref_parser = alloca %"v0::Parser", align 8
  %1 = alloca i8, align 1
  store i8 0, i8* %_35, align 1
  store i8 1, i8* %_35, align 1
  %2 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %3 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %2 to i8*
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = trunc i8 %4 to i1
  %_4 = zext i1 %5 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %7 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %6 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %7, i32 0, i32 1
; invoke rustc_demangle::v0::Parser::backref
  invoke void @_ZN14rustc_demangle2v06Parser7backref17h49206b6974cbc217E(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %_6, %"v0::Parser"* align 8 dereferenceable(32) %parser)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke rustc_demangle::v0::Printer::print
  %8 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb1
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %1, align 1
  br label %bb19

bb23:                                             ; preds = %cleanup
  %10 = load i8, i8* %_35, align 1, !range !2
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb22, label %bb21

cleanup:                                          ; preds = %bb17, %bb16, %bb7, %bb13, %bb9, %bb8, %bb5, %bb3, %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb23

bb19:                                             ; preds = %bb15, %bb11, %bb25, %bb24
  br label %bb20

bb4:                                              ; preds = %bb3
  %17 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_6 to i8*
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = trunc i8 %18 to i1
  %_8 = zext i1 %19 to i64
  switch i64 %_8, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %20 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_6 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %21 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %20, i32 0, i32 1
  %22 = bitcast %"v0::Parser"* %x to i8*
  %23 = bitcast %"v0::Parser"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false)
  %24 = bitcast %"v0::Parser"* %backref_parser to i8*
  %25 = bitcast %"v0::Parser"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false)
  %_24 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
; invoke core::option::Option<T>::is_none
  %_23 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hc2d2e1f0a12fbdebE"(i64** align 8 dereferenceable(8) %_24)
          to label %bb14 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %26 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_6 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %27 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %26, i32 0, i32 1
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = trunc i8 %28 to i1
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %err, align 1
; invoke rustc_demangle::v0::ParseError::message
  %31 = invoke { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb5
  %_14.0 = extractvalue { [0 x i8]*, i64 } %31, 0
  %_14.1 = extractvalue { [0 x i8]*, i64 } %31, 1
; invoke rustc_demangle::v0::Printer::print
  %_12 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_14.0, i64 %_14.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %32 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %33 = zext i1 %32 to i8
  store i8 %33, i8* %_11, align 1
  %34 = load i8, i8* %_11, align 1, !range !2
  %35 = trunc i8 %34 to i1
  %_16 = zext i1 %35 to i64
  switch i64 %_16, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %36 = load i8, i8* %err, align 1, !range !2
  %_21 = trunc i8 %36 to i1
  %37 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %38 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %37, i32 0, i32 1
  %39 = zext i1 %_21 to i8
  store i8 %39, i8* %38, align 1
  %40 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  store i8 1, i8* %40, align 8
  %41 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %42 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %41 to i8*
  %43 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb19

bb13:                                             ; preds = %bb10
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %44 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1126 to %"core::panic::location::Location"*))
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb13
  %45 = zext i1 %44 to i8
  store i8 %45, i8* %1, align 1
  br label %bb19

bb14:                                             ; preds = %bb7
  br i1 %_23, label %bb15, label %bb16

bb16:                                             ; preds = %bb14
  %_27 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %46 = bitcast %"v0::Parser"* %_29 to i8*
  %47 = bitcast %"v0::Parser"* %backref_parser to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 32, i1 false)
  %48 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_28 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %49 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %48, i32 0, i32 1
  %50 = bitcast %"v0::Parser"* %49 to i8*
  %51 = bitcast %"v0::Parser"* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 32, i1 false)
  %52 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_28 to i8*
  store i8 0, i8* %52, align 8
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17hcc3afc7582409685E(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %orig_parser, %"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_27, %"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture dereferenceable(40) %_28)
          to label %bb17 unwind label %cleanup

bb15:                                             ; preds = %bb14
  store i8 0, i8* %1, align 1
  br label %bb19

bb20:                                             ; preds = %bb18, %bb19
  %53 = load i8, i8* %1, align 1, !range !2
  %54 = trunc i8 %53 to i1
  ret i1 %54

bb17:                                             ; preds = %bb16
  store i8 0, i8* %_35, align 1
  %55 = bitcast i64** %_32 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %55, align 8
  %56 = load i64*, i64** %_32, align 8, !nonnull !6
  %57 = bitcast i64* %56 to %"v0::Printer"*
; invoke rustc_demangle::v0::Printer::print_const::{{closure}}
  %r = invoke zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hf43c359d94b9c0c9E"(i8* align 1 dereferenceable(1) %f, %"v0::Printer"* align 8 dereferenceable(56) %57)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb17
  %58 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_34 to i8*
  %59 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %orig_parser to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 40, i1 false)
  %60 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %61 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %60 to i8*
  %62 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 40, i1 false)
  %63 = zext i1 %r to i8
  store i8 %63, i8* %1, align 1
  br label %bb20

bb21:                                             ; preds = %bb22, %bb23
  %64 = bitcast { i8*, i32 }* %0 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  resume { i8*, i32 } %69

bb22:                                             ; preds = %bb23
  br label %bb21
}

; rustc_demangle::v0::Printer::print_backref
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17ha5a50e9743381614E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8* align 1 dereferenceable(1) %f) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_35 = alloca i8, align 1
  %_34 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_32 = alloca i64*, align 8
  %_29 = alloca %"v0::Parser", align 8
  %_28 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %orig_parser = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_20 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_11 = alloca i8, align 1
  %err = alloca i8, align 1
  %x = alloca %"v0::Parser", align 8
  %_6 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %backref_parser = alloca %"v0::Parser", align 8
  %1 = alloca i8, align 1
  store i8 0, i8* %_35, align 1
  store i8 1, i8* %_35, align 1
  %2 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %3 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %2 to i8*
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = trunc i8 %4 to i1
  %_4 = zext i1 %5 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %7 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %6 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %7, i32 0, i32 1
; invoke rustc_demangle::v0::Parser::backref
  invoke void @_ZN14rustc_demangle2v06Parser7backref17h49206b6974cbc217E(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %_6, %"v0::Parser"* align 8 dereferenceable(32) %parser)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke rustc_demangle::v0::Printer::print
  %8 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb1
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %1, align 1
  br label %bb19

bb23:                                             ; preds = %cleanup
  %10 = load i8, i8* %_35, align 1, !range !2
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb22, label %bb21

cleanup:                                          ; preds = %bb17, %bb16, %bb7, %bb13, %bb9, %bb8, %bb5, %bb3, %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb23

bb19:                                             ; preds = %bb15, %bb11, %bb25, %bb24
  br label %bb20

bb4:                                              ; preds = %bb3
  %17 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_6 to i8*
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = trunc i8 %18 to i1
  %_8 = zext i1 %19 to i64
  switch i64 %_8, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %20 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_6 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %21 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %20, i32 0, i32 1
  %22 = bitcast %"v0::Parser"* %x to i8*
  %23 = bitcast %"v0::Parser"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false)
  %24 = bitcast %"v0::Parser"* %backref_parser to i8*
  %25 = bitcast %"v0::Parser"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false)
  %_24 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
; invoke core::option::Option<T>::is_none
  %_23 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hc2d2e1f0a12fbdebE"(i64** align 8 dereferenceable(8) %_24)
          to label %bb14 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %26 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_6 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %27 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %26, i32 0, i32 1
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = trunc i8 %28 to i1
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %err, align 1
; invoke rustc_demangle::v0::ParseError::message
  %31 = invoke { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb5
  %_14.0 = extractvalue { [0 x i8]*, i64 } %31, 0
  %_14.1 = extractvalue { [0 x i8]*, i64 } %31, 1
; invoke rustc_demangle::v0::Printer::print
  %_12 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_14.0, i64 %_14.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %32 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %33 = zext i1 %32 to i8
  store i8 %33, i8* %_11, align 1
  %34 = load i8, i8* %_11, align 1, !range !2
  %35 = trunc i8 %34 to i1
  %_16 = zext i1 %35 to i64
  switch i64 %_16, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %36 = load i8, i8* %err, align 1, !range !2
  %_21 = trunc i8 %36 to i1
  %37 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %38 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %37, i32 0, i32 1
  %39 = zext i1 %_21 to i8
  store i8 %39, i8* %38, align 1
  %40 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  store i8 1, i8* %40, align 8
  %41 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %42 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %41 to i8*
  %43 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb19

bb13:                                             ; preds = %bb10
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %44 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1126 to %"core::panic::location::Location"*))
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb13
  %45 = zext i1 %44 to i8
  store i8 %45, i8* %1, align 1
  br label %bb19

bb14:                                             ; preds = %bb7
  br i1 %_23, label %bb15, label %bb16

bb16:                                             ; preds = %bb14
  %_27 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %46 = bitcast %"v0::Parser"* %_29 to i8*
  %47 = bitcast %"v0::Parser"* %backref_parser to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 32, i1 false)
  %48 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_28 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %49 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %48, i32 0, i32 1
  %50 = bitcast %"v0::Parser"* %49 to i8*
  %51 = bitcast %"v0::Parser"* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 32, i1 false)
  %52 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_28 to i8*
  store i8 0, i8* %52, align 8
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17hcc3afc7582409685E(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %orig_parser, %"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_27, %"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture dereferenceable(40) %_28)
          to label %bb17 unwind label %cleanup

bb15:                                             ; preds = %bb14
  store i8 0, i8* %1, align 1
  br label %bb19

bb20:                                             ; preds = %bb18, %bb19
  %53 = load i8, i8* %1, align 1, !range !2
  %54 = trunc i8 %53 to i1
  ret i1 %54

bb17:                                             ; preds = %bb16
  store i8 0, i8* %_35, align 1
  %55 = bitcast i64** %_32 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %55, align 8
  %56 = load i64*, i64** %_32, align 8, !nonnull !6
  %57 = bitcast i64* %56 to %"v0::Printer"*
; invoke rustc_demangle::v0::Printer::print_path::{{closure}}
  %r = invoke zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_path28_$u7b$$u7b$closure$u7d$$u7d$17h66f1850a24316431E"(i8* align 1 dereferenceable(1) %f, %"v0::Printer"* align 8 dereferenceable(56) %57)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb17
  %58 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_34 to i8*
  %59 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %orig_parser to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 40, i1 false)
  %60 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %61 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %60 to i8*
  %62 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 40, i1 false)
  %63 = zext i1 %r to i8
  store i8 %63, i8* %1, align 1
  br label %bb20

bb21:                                             ; preds = %bb22, %bb23
  %64 = bitcast { i8*, i32 }* %0 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  resume { i8*, i32 } %69

bb22:                                             ; preds = %bb23
  br label %bb21
}

; rustc_demangle::v0::Printer::print_backref
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17hd2b4f4e5f01ac6a4E(%"v0::Printer"* align 8 dereferenceable(56) %self) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_35 = alloca i8, align 1
  %_34 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_32 = alloca i64*, align 8
  %_29 = alloca %"v0::Parser", align 8
  %_28 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %orig_parser = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_20 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_11 = alloca i8, align 1
  %err = alloca i8, align 1
  %x = alloca %"v0::Parser", align 8
  %_6 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %backref_parser = alloca %"v0::Parser", align 8
  %1 = alloca i8, align 1
  store i8 0, i8* %_35, align 1
  store i8 1, i8* %_35, align 1
  %2 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %3 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %2 to i8*
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = trunc i8 %4 to i1
  %_4 = zext i1 %5 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %7 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %6 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %7, i32 0, i32 1
; invoke rustc_demangle::v0::Parser::backref
  invoke void @_ZN14rustc_demangle2v06Parser7backref17h49206b6974cbc217E(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %_6, %"v0::Parser"* align 8 dereferenceable(32) %parser)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke rustc_demangle::v0::Printer::print
  %8 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb1
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %1, align 1
  br label %bb19

bb23:                                             ; preds = %cleanup
  %10 = load i8, i8* %_35, align 1, !range !2
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb22, label %bb21

cleanup:                                          ; preds = %bb17, %bb16, %bb7, %bb13, %bb9, %bb8, %bb5, %bb3, %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb23

bb19:                                             ; preds = %bb15, %bb11, %bb25, %bb24
  br label %bb20

bb4:                                              ; preds = %bb3
  %17 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_6 to i8*
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = trunc i8 %18 to i1
  %_8 = zext i1 %19 to i64
  switch i64 %_8, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %20 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_6 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %21 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %20, i32 0, i32 1
  %22 = bitcast %"v0::Parser"* %x to i8*
  %23 = bitcast %"v0::Parser"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false)
  %24 = bitcast %"v0::Parser"* %backref_parser to i8*
  %25 = bitcast %"v0::Parser"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false)
  %_24 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
; invoke core::option::Option<T>::is_none
  %_23 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hc2d2e1f0a12fbdebE"(i64** align 8 dereferenceable(8) %_24)
          to label %bb14 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %26 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_6 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %27 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %26, i32 0, i32 1
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = trunc i8 %28 to i1
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %err, align 1
; invoke rustc_demangle::v0::ParseError::message
  %31 = invoke { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb5
  %_14.0 = extractvalue { [0 x i8]*, i64 } %31, 0
  %_14.1 = extractvalue { [0 x i8]*, i64 } %31, 1
; invoke rustc_demangle::v0::Printer::print
  %_12 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_14.0, i64 %_14.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %32 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %33 = zext i1 %32 to i8
  store i8 %33, i8* %_11, align 1
  %34 = load i8, i8* %_11, align 1, !range !2
  %35 = trunc i8 %34 to i1
  %_16 = zext i1 %35 to i64
  switch i64 %_16, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %36 = load i8, i8* %err, align 1, !range !2
  %_21 = trunc i8 %36 to i1
  %37 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %38 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %37, i32 0, i32 1
  %39 = zext i1 %_21 to i8
  store i8 %39, i8* %38, align 1
  %40 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  store i8 1, i8* %40, align 8
  %41 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %42 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %41 to i8*
  %43 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb19

bb13:                                             ; preds = %bb10
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %44 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1126 to %"core::panic::location::Location"*))
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb13
  %45 = zext i1 %44 to i8
  store i8 %45, i8* %1, align 1
  br label %bb19

bb14:                                             ; preds = %bb7
  br i1 %_23, label %bb15, label %bb16

bb16:                                             ; preds = %bb14
  %_27 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %46 = bitcast %"v0::Parser"* %_29 to i8*
  %47 = bitcast %"v0::Parser"* %backref_parser to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 32, i1 false)
  %48 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_28 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %49 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %48, i32 0, i32 1
  %50 = bitcast %"v0::Parser"* %49 to i8*
  %51 = bitcast %"v0::Parser"* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 32, i1 false)
  %52 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_28 to i8*
  store i8 0, i8* %52, align 8
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17hcc3afc7582409685E(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %orig_parser, %"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_27, %"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture dereferenceable(40) %_28)
          to label %bb17 unwind label %cleanup

bb15:                                             ; preds = %bb14
  store i8 0, i8* %1, align 1
  br label %bb19

bb20:                                             ; preds = %bb18, %bb19
  %53 = load i8, i8* %1, align 1, !range !2
  %54 = trunc i8 %53 to i1
  ret i1 %54

bb17:                                             ; preds = %bb16
  store i8 0, i8* %_35, align 1
  %55 = bitcast i64** %_32 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %55, align 8
  %56 = load i64*, i64** %_32, align 8, !nonnull !6
  %57 = bitcast i64* %56 to %"v0::Printer"*
; invoke core::ops::function::FnOnce::call_once
  %r = invoke zeroext i1 @_ZN4core3ops8function6FnOnce9call_once17h267d0e67031ab014E(%"v0::Printer"* align 8 dereferenceable(56) %57)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb17
  %58 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_34 to i8*
  %59 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %orig_parser to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 40, i1 false)
  %60 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %61 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %60 to i8*
  %62 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 40, i1 false)
  %63 = zext i1 %r to i8
  store i8 %63, i8* %1, align 1
  br label %bb20

bb21:                                             ; preds = %bb22, %bb23
  %64 = bitcast { i8*, i32 }* %0 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  resume { i8*, i32 } %69

bb22:                                             ; preds = %bb23
  br label %bb21
}

; rustc_demangle::v0::Printer::print_backref
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17hd9c15367e15d8d25E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8* align 1 dereferenceable(1) %f) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_35 = alloca i8, align 1
  %_34 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_32 = alloca i64*, align 8
  %_29 = alloca %"v0::Parser", align 8
  %_28 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %orig_parser = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_20 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_11 = alloca i8, align 1
  %err = alloca i8, align 1
  %x = alloca %"v0::Parser", align 8
  %_6 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %backref_parser = alloca %"v0::Parser", align 8
  %1 = alloca i8, align 1
  store i8 0, i8* %_35, align 1
  store i8 1, i8* %_35, align 1
  %2 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %3 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %2 to i8*
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = trunc i8 %4 to i1
  %_4 = zext i1 %5 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %7 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %6 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %7, i32 0, i32 1
; invoke rustc_demangle::v0::Parser::backref
  invoke void @_ZN14rustc_demangle2v06Parser7backref17h49206b6974cbc217E(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %_6, %"v0::Parser"* align 8 dereferenceable(32) %parser)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke rustc_demangle::v0::Printer::print
  %8 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb1
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %1, align 1
  br label %bb19

bb23:                                             ; preds = %cleanup
  %10 = load i8, i8* %_35, align 1, !range !2
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb22, label %bb21

cleanup:                                          ; preds = %bb17, %bb16, %bb7, %bb13, %bb9, %bb8, %bb5, %bb3, %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb23

bb19:                                             ; preds = %bb15, %bb11, %bb25, %bb24
  br label %bb20

bb4:                                              ; preds = %bb3
  %17 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_6 to i8*
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = trunc i8 %18 to i1
  %_8 = zext i1 %19 to i64
  switch i64 %_8, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %20 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_6 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %21 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %20, i32 0, i32 1
  %22 = bitcast %"v0::Parser"* %x to i8*
  %23 = bitcast %"v0::Parser"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false)
  %24 = bitcast %"v0::Parser"* %backref_parser to i8*
  %25 = bitcast %"v0::Parser"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false)
  %_24 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
; invoke core::option::Option<T>::is_none
  %_23 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hc2d2e1f0a12fbdebE"(i64** align 8 dereferenceable(8) %_24)
          to label %bb14 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %26 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_6 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %27 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %26, i32 0, i32 1
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = trunc i8 %28 to i1
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %err, align 1
; invoke rustc_demangle::v0::ParseError::message
  %31 = invoke { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb5
  %_14.0 = extractvalue { [0 x i8]*, i64 } %31, 0
  %_14.1 = extractvalue { [0 x i8]*, i64 } %31, 1
; invoke rustc_demangle::v0::Printer::print
  %_12 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_14.0, i64 %_14.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %32 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %33 = zext i1 %32 to i8
  store i8 %33, i8* %_11, align 1
  %34 = load i8, i8* %_11, align 1, !range !2
  %35 = trunc i8 %34 to i1
  %_16 = zext i1 %35 to i64
  switch i64 %_16, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %36 = load i8, i8* %err, align 1, !range !2
  %_21 = trunc i8 %36 to i1
  %37 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %38 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %37, i32 0, i32 1
  %39 = zext i1 %_21 to i8
  store i8 %39, i8* %38, align 1
  %40 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  store i8 1, i8* %40, align 8
  %41 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %42 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %41 to i8*
  %43 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb19

bb13:                                             ; preds = %bb10
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %44 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1126 to %"core::panic::location::Location"*))
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb13
  %45 = zext i1 %44 to i8
  store i8 %45, i8* %1, align 1
  br label %bb19

bb14:                                             ; preds = %bb7
  br i1 %_23, label %bb15, label %bb16

bb16:                                             ; preds = %bb14
  %_27 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %46 = bitcast %"v0::Parser"* %_29 to i8*
  %47 = bitcast %"v0::Parser"* %backref_parser to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 32, i1 false)
  %48 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_28 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %49 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %48, i32 0, i32 1
  %50 = bitcast %"v0::Parser"* %49 to i8*
  %51 = bitcast %"v0::Parser"* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 32, i1 false)
  %52 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_28 to i8*
  store i8 0, i8* %52, align 8
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17hcc3afc7582409685E(%"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Parser, v0::ParseError>") dereferenceable(40) %orig_parser, %"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_27, %"core::result::Result<v0::Parser, v0::ParseError>"* noalias nocapture dereferenceable(40) %_28)
          to label %bb17 unwind label %cleanup

bb15:                                             ; preds = %bb14
  store i8 0, i8* %1, align 1
  br label %bb19

bb20:                                             ; preds = %bb18, %bb19
  %53 = load i8, i8* %1, align 1, !range !2
  %54 = trunc i8 %53 to i1
  ret i1 %54

bb17:                                             ; preds = %bb16
  store i8 0, i8* %_35, align 1
  %55 = bitcast i64** %_32 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %55, align 8
  %56 = load i64*, i64** %_32, align 8, !nonnull !6
  %57 = bitcast i64* %56 to %"v0::Printer"*
; invoke rustc_demangle::v0::Printer::print_path_maybe_open_generics::{{closure}}
  %r = invoke zeroext i1 @"_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics28_$u7b$$u7b$closure$u7d$$u7d$17ha881572837132005E"(i8* align 1 dereferenceable(1) %f, %"v0::Printer"* align 8 dereferenceable(56) %57)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb17
  %58 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_34 to i8*
  %59 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %orig_parser to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 40, i1 false)
  %60 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %61 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %60 to i8*
  %62 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 40, i1 false)
  %63 = zext i1 %r to i8
  store i8 %63, i8* %1, align 1
  br label %bb20

bb21:                                             ; preds = %bb22, %bb23
  %64 = bitcast { i8*, i32 }* %0 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  resume { i8*, i32 } %69

bb22:                                             ; preds = %bb23
  br label %bb21
}

; rustc_demangle::v0::Printer::pop_depth
; Function Attrs: nonlazybind uwtable
define internal void @_ZN14rustc_demangle2v07Printer9pop_depth17haf2f855b2c6bd27fE(%"v0::Printer"* align 8 dereferenceable(56) %self) unnamed_addr #0 {
start:
  %0 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %1 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %0 to i8*
  %2 = load i8, i8* %1, align 8, !range !2
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %start
  %5 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %6 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %5 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %6, i32 0, i32 1
; call rustc_demangle::v0::Parser::pop_depth
  call void @_ZN14rustc_demangle2v06Parser9pop_depth17h06ee69ac48661cfcE(%"v0::Parser"* align 8 dereferenceable(32) %parser)
  br label %bb2

bb2:                                              ; preds = %bb1, %start
  ret void
}

; rustc_demangle::v0::Printer::print
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h1918e57e7c0165a9E(%"v0::Printer"* align 8 dereferenceable(56) %self, i32 %0) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %2 = alloca i8, align 1
  %x = alloca i32, align 4
  store i32 %0, i32* %x, align 4
  %_3 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
  %3 = bitcast i64** %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_4 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_4, 1
  br i1 %6, label %bb1, label %bb7

bb1:                                              ; preds = %start
  %out = bitcast i64** %_3 to %"core::fmt::Formatter"**
  %_10 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %out, align 8, !nonnull !6
; invoke <char as core::fmt::Display>::fmt
  %_7 = invoke zeroext i1 @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h011d980131b3c87bE"(i32* align 4 dereferenceable(4) %x, %"core::fmt::Formatter"* align 8 dereferenceable(64) %_10)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %bb3, %start
  store i8 0, i8* %2, align 1
  br label %bb8

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %7 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_7)
          to label %bb3 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  br label %bb10

cleanup:                                          ; preds = %bb5, %bb2, %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb9

bb3:                                              ; preds = %bb2
  %13 = zext i1 %7 to i8
  store i8 %13, i8* %_6, align 1
  %14 = load i8, i8* %_6, align 1, !range !2
  %15 = trunc i8 %14 to i1
  %_11 = zext i1 %15 to i64
  switch i64 %_11, label %bb4 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb3
  unreachable

bb5:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %16 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1131 to %"core::panic::location::Location"*))
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  br label %bb8

bb10:                                             ; preds = %bb9
  %18 = bitcast { i8*, i32 }* %1 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb8:                                              ; preds = %bb7, %bb6
  %24 = load i8, i8* %2, align 1, !range !2
  %25 = trunc i8 %24 to i1
  ret i1 %25
}

; rustc_demangle::v0::Printer::print
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %3 = alloca i8, align 1
  %x = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  %_3 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
  %6 = bitcast i64** %_3 to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_4 = select i1 %8, i64 0, i64 1
  %9 = icmp eq i64 %_4, 1
  br i1 %9, label %bb1, label %bb7

bb1:                                              ; preds = %start
  %out = bitcast i64** %_3 to %"core::fmt::Formatter"**
  %_10 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %out, align 8, !nonnull !6
; invoke <&T as core::fmt::Display>::fmt
  %_7 = invoke zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h98f21a87b6d74e74E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %x, %"core::fmt::Formatter"* align 8 dereferenceable(64) %_10)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %bb3, %start
  store i8 0, i8* %3, align 1
  br label %bb8

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %10 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_7)
          to label %bb3 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  br label %bb10

cleanup:                                          ; preds = %bb5, %bb2, %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb9

bb3:                                              ; preds = %bb2
  %16 = zext i1 %10 to i8
  store i8 %16, i8* %_6, align 1
  %17 = load i8, i8* %_6, align 1, !range !2
  %18 = trunc i8 %17 to i1
  %_11 = zext i1 %18 to i64
  switch i64 %_11, label %bb4 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb3
  unreachable

bb5:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %19 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1131 to %"core::panic::location::Location"*))
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %3, align 1
  br label %bb8

bb10:                                             ; preds = %bb9
  %21 = bitcast { i8*, i32 }* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26

bb8:                                              ; preds = %bb7, %bb6
  %27 = load i8, i8* %3, align 1, !range !2
  %28 = trunc i8 %27 to i1
  ret i1 %28
}

; rustc_demangle::v0::Printer::print
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hd06624edb242fe49E(%"v0::Printer"* align 8 dereferenceable(56) %self, i64 %0) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %2 = alloca i8, align 1
  %x = alloca i64, align 8
  store i64 %0, i64* %x, align 8
  %_3 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
  %3 = bitcast i64** %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_4 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_4, 1
  br i1 %6, label %bb1, label %bb7

bb1:                                              ; preds = %start
  %out = bitcast i64** %_3 to %"core::fmt::Formatter"**
  %_10 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %out, align 8, !nonnull !6
; invoke core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
  %_7 = invoke zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hc0f7594e99de2828E"(i64* align 8 dereferenceable(8) %x, %"core::fmt::Formatter"* align 8 dereferenceable(64) %_10)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %bb3, %start
  store i8 0, i8* %2, align 1
  br label %bb8

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %7 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_7)
          to label %bb3 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  br label %bb10

cleanup:                                          ; preds = %bb5, %bb2, %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb9

bb3:                                              ; preds = %bb2
  %13 = zext i1 %7 to i8
  store i8 %13, i8* %_6, align 1
  %14 = load i8, i8* %_6, align 1, !range !2
  %15 = trunc i8 %14 to i1
  %_11 = zext i1 %15 to i64
  switch i64 %_11, label %bb4 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb3
  unreachable

bb5:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %16 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1131 to %"core::panic::location::Location"*))
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  br label %bb8

bb10:                                             ; preds = %bb9
  %18 = bitcast { i8*, i32 }* %1 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb8:                                              ; preds = %bb7, %bb6
  %24 = load i8, i8* %2, align 1, !range !2
  %25 = trunc i8 %24 to i1
  ret i1 %25
}

; rustc_demangle::v0::Printer::print
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hea9e22d055e9d00aE(%"v0::Printer"* align 8 dereferenceable(56) %self, %"v0::Ident"* noalias nocapture dereferenceable(32) %x) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %1 = alloca i8, align 1
  %_3 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
  %2 = bitcast i64** %_3 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_4 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_4, 1
  br i1 %5, label %bb1, label %bb7

bb1:                                              ; preds = %start
  %out = bitcast i64** %_3 to %"core::fmt::Formatter"**
  %_10 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %out, align 8, !nonnull !6
; invoke <rustc_demangle::v0::Ident as core::fmt::Display>::fmt
  %_7 = invoke zeroext i1 @"_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h88f2e10d4b4a2df4E"(%"v0::Ident"* align 8 dereferenceable(32) %x, %"core::fmt::Formatter"* align 8 dereferenceable(64) %_10)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %bb3, %start
  store i8 0, i8* %1, align 1
  br label %bb8

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %6 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_7)
          to label %bb3 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  br label %bb10

cleanup:                                          ; preds = %bb5, %bb2, %bb1
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb9

bb3:                                              ; preds = %bb2
  %12 = zext i1 %6 to i8
  store i8 %12, i8* %_6, align 1
  %13 = load i8, i8* %_6, align 1, !range !2
  %14 = trunc i8 %13 to i1
  %_11 = zext i1 %14 to i64
  switch i64 %_11, label %bb4 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb3
  unreachable

bb5:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %15 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1131 to %"core::panic::location::Location"*))
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %1, align 1
  br label %bb8

bb10:                                             ; preds = %bb9
  %17 = bitcast { i8*, i32 }* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

bb8:                                              ; preds = %bb7, %bb6
  %23 = load i8, i8* %1, align 1, !range !2
  %24 = trunc i8 %23 to i1
  ret i1 %24
}

; rustc_demangle::v0::Printer::print_quoted_escaped_chars
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17h37ad00f0698f2f7dE(%"v0::Printer"* align 8 dereferenceable(56) %self, i32 %quote, i32 %chars) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_60 = alloca i8, align 1
  %_52 = alloca i8, align 1
  %_44 = alloca i8, align 1
  %_39 = alloca i32, align 4
  %iter1 = alloca %"core::char::EscapeDebug", align 8
  %_36 = alloca %"core::char::EscapeDebug", align 8
  %_35 = alloca %"core::char::EscapeDebug", align 8
  %_27 = alloca i8, align 1
  %_24 = alloca { i32, i32 }, align 4
  %_23 = alloca i8, align 1
  %_18 = alloca i32, align 4
  %iter = alloca i32, align 4
  %_7 = alloca i8, align 1
  %1 = alloca i8, align 1
  store i8 0, i8* %_60, align 1
  store i8 1, i8* %_60, align 1
  %_4 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
  %2 = bitcast i64** %_4 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_5 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_5, 1
  br i1 %5, label %bb1, label %bb39

bb1:                                              ; preds = %start
  %out = bitcast i64** %_4 to %"core::fmt::Formatter"**
; invoke <&mut W as core::fmt::Write>::write_char
  %_8 = invoke zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hada9ebba9e27cdacE"(%"core::fmt::Formatter"** align 8 dereferenceable(8) %out, i32 %quote)
          to label %bb2 unwind label %cleanup

bb39:                                             ; preds = %bb36, %start
  store i8 0, i8* %1, align 1
  %6 = load i8, i8* %_60, align 1, !range !2
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb45, label %bb42

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %8 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_8)
          to label %bb3 unwind label %cleanup

bb48:                                             ; preds = %bb43, %cleanup
  %9 = load i8, i8* %_60, align 1, !range !2
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb47, label %bb44

cleanup:                                          ; preds = %bb38, %bb35, %bb34, %bb4, %bb6, %bb2, %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb48

bb3:                                              ; preds = %bb2
  %16 = zext i1 %8 to i8
  store i8 %16, i8* %_7, align 1
  %17 = load i8, i8* %_7, align 1, !range !2
  %18 = trunc i8 %17 to i1
  %_11 = zext i1 %18 to i64
  switch i64 %_11, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_60, align 1
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_15 = invoke i32 @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h877a19d6e7163ebeE"(i32 %chars)
          to label %bb7 unwind label %cleanup, !range !4

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %19 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1133 to %"core::panic::location::Location"*))
          to label %bb49 unwind label %cleanup

bb49:                                             ; preds = %bb6
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %1, align 1
  br label %bb41

bb41:                                             ; preds = %bb52, %bb40, %bb49
  %21 = load i8, i8* %_60, align 1, !range !2
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb46, label %bb42

bb7:                                              ; preds = %bb4
  store i32 %_15, i32* %iter, align 4
  br label %bb8

bb8:                                              ; preds = %bb27, %bb20, %bb7
; invoke <core::iter::sources::once::Once<T> as core::iter::traits::iterator::Iterator>::next
  %23 = invoke i32 @"_ZN99_$LT$core..iter..sources..once..Once$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hdf0554f37c1bb87cE"(i32* align 4 dereferenceable(4) %iter)
          to label %bb9 unwind label %cleanup2, !range !4

bb9:                                              ; preds = %bb8
  store i32 %23, i32* %_18, align 4
  %24 = load i32, i32* %_18, align 4, !range !4
  %25 = sub i32 %24, 1114112
  %26 = icmp eq i32 %25, 0
  %_21 = select i1 %26, i64 0, i64 1
  switch i64 %_21, label %bb11 [
    i64 0, label %bb12
    i64 1, label %bb10
  ]

bb43:                                             ; preds = %cleanup2
  br label %bb48

cleanup2:                                         ; preds = %bb33, %bb30, %bb28, %bb26, %bb24, %bb23, %bb22, %bb19, %bb18, %bb8
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb43

bb11:                                             ; preds = %bb9
  unreachable

bb12:                                             ; preds = %bb9
  br label %bb34

bb10:                                             ; preds = %bb9
  %c = load i32, i32* %_18, align 4, !range !9
  %32 = bitcast { i32, i32 }* %_24 to i32*
  store i32 %quote, i32* %32, align 4
  %33 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_24, i32 0, i32 1
  store i32 %c, i32* %33, align 4
  %34 = bitcast { i32, i32 }* %_24 to i32*
  %35 = load i32, i32* %34, align 4, !range !9
  switch i32 %35, label %bb14 [
    i32 39, label %bb13
    i32 34, label %bb15
  ]

bb14:                                             ; preds = %bb13, %bb15, %bb10
  store i8 0, i8* %_23, align 1
  br label %bb17

bb13:                                             ; preds = %bb10
  %36 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_24, i32 0, i32 1
  %37 = load i32, i32* %36, align 4, !range !9
  %38 = icmp eq i32 %37, 34
  br i1 %38, label %bb16, label %bb14

bb15:                                             ; preds = %bb10
  %39 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_24, i32 0, i32 1
  %40 = load i32, i32* %39, align 4, !range !9
  %41 = icmp eq i32 %40, 39
  br i1 %41, label %bb16, label %bb14

bb16:                                             ; preds = %bb13, %bb15
  store i8 1, i8* %_23, align 1
  br label %bb17

bb17:                                             ; preds = %bb16, %bb14
  %42 = load i8, i8* %_23, align 1, !range !2
  %43 = trunc i8 %42 to i1
  br i1 %43, label %bb18, label %bb23

bb23:                                             ; preds = %bb17
; invoke core::char::methods::<impl char>::escape_debug
  invoke void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12escape_debug17h70bfdf4178534501E"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %_36, i32 %c)
          to label %bb24 unwind label %cleanup2

bb18:                                             ; preds = %bb17
; invoke <&mut W as core::fmt::Write>::write_char
  %_28 = invoke zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hada9ebba9e27cdacE"(%"core::fmt::Formatter"** align 8 dereferenceable(8) %out, i32 %c)
          to label %bb19 unwind label %cleanup2

bb19:                                             ; preds = %bb18
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %44 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_28)
          to label %bb20 unwind label %cleanup2

bb20:                                             ; preds = %bb19
  %45 = zext i1 %44 to i8
  store i8 %45, i8* %_27, align 1
  %46 = load i8, i8* %_27, align 1, !range !2
  %47 = trunc i8 %46 to i1
  %_31 = zext i1 %47 to i64
  switch i64 %_31, label %bb21 [
    i64 0, label %bb8
    i64 1, label %bb22
  ]

bb21:                                             ; preds = %bb20
  unreachable

bb22:                                             ; preds = %bb20
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %48 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1135 to %"core::panic::location::Location"*))
          to label %bb50 unwind label %cleanup2

bb50:                                             ; preds = %bb22
  %49 = zext i1 %48 to i8
  store i8 %49, i8* %1, align 1
  br label %bb40

bb40:                                             ; preds = %bb51, %bb50
  br label %bb41

bb24:                                             ; preds = %bb23
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc436a0fda109a25bE"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %_35, %"core::char::EscapeDebug"* noalias nocapture dereferenceable(24) %_36)
          to label %bb25 unwind label %cleanup2

bb25:                                             ; preds = %bb24
  %50 = bitcast %"core::char::EscapeDebug"* %iter1 to i8*
  %51 = bitcast %"core::char::EscapeDebug"* %_35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 24, i1 false)
  br label %bb26

bb26:                                             ; preds = %bb31, %bb25
; invoke <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next
  %52 = invoke i32 @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h27e5bcc26268a1b2E"(%"core::char::EscapeDebug"* align 8 dereferenceable(24) %iter1)
          to label %bb27 unwind label %cleanup2, !range !4

bb27:                                             ; preds = %bb26
  store i32 %52, i32* %_39, align 4
  %53 = load i32, i32* %_39, align 4, !range !4
  %54 = sub i32 %53, 1114112
  %55 = icmp eq i32 %54, 0
  %_42 = select i1 %55, i64 0, i64 1
  switch i64 %_42, label %bb29 [
    i64 0, label %bb8
    i64 1, label %bb28
  ]

bb29:                                             ; preds = %bb27
  unreachable

bb28:                                             ; preds = %bb27
  %escaped = load i32, i32* %_39, align 4, !range !9
; invoke <&mut W as core::fmt::Write>::write_char
  %_45 = invoke zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hada9ebba9e27cdacE"(%"core::fmt::Formatter"** align 8 dereferenceable(8) %out, i32 %escaped)
          to label %bb30 unwind label %cleanup2

bb30:                                             ; preds = %bb28
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %56 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_45)
          to label %bb31 unwind label %cleanup2

bb31:                                             ; preds = %bb30
  %57 = zext i1 %56 to i8
  store i8 %57, i8* %_44, align 1
  %58 = load i8, i8* %_44, align 1, !range !2
  %59 = trunc i8 %58 to i1
  %_48 = zext i1 %59 to i64
  switch i64 %_48, label %bb32 [
    i64 0, label %bb26
    i64 1, label %bb33
  ]

bb32:                                             ; preds = %bb31
  unreachable

bb33:                                             ; preds = %bb31
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %60 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1137 to %"core::panic::location::Location"*))
          to label %bb51 unwind label %cleanup2

bb51:                                             ; preds = %bb33
  %61 = zext i1 %60 to i8
  store i8 %61, i8* %1, align 1
  br label %bb40

bb34:                                             ; preds = %bb12
; invoke <&mut W as core::fmt::Write>::write_char
  %_53 = invoke zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hada9ebba9e27cdacE"(%"core::fmt::Formatter"** align 8 dereferenceable(8) %out, i32 %quote)
          to label %bb35 unwind label %cleanup

bb35:                                             ; preds = %bb34
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %62 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_53)
          to label %bb36 unwind label %cleanup

bb36:                                             ; preds = %bb35
  %63 = zext i1 %62 to i8
  store i8 %63, i8* %_52, align 1
  %64 = load i8, i8* %_52, align 1, !range !2
  %65 = trunc i8 %64 to i1
  %_56 = zext i1 %65 to i64
  switch i64 %_56, label %bb37 [
    i64 0, label %bb39
    i64 1, label %bb38
  ]

bb37:                                             ; preds = %bb36
  unreachable

bb38:                                             ; preds = %bb36
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %66 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1139 to %"core::panic::location::Location"*))
          to label %bb52 unwind label %cleanup

bb52:                                             ; preds = %bb38
  %67 = zext i1 %66 to i8
  store i8 %67, i8* %1, align 1
  br label %bb41

bb44:                                             ; preds = %bb47, %bb48
  %68 = bitcast { i8*, i32 }* %0 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = insertvalue { i8*, i32 } undef, i8* %69, 0
  %73 = insertvalue { i8*, i32 } %72, i32 %71, 1
  resume { i8*, i32 } %73

bb47:                                             ; preds = %bb48
  br label %bb44

bb42:                                             ; preds = %bb45, %bb39, %bb46, %bb41
  %74 = load i8, i8* %1, align 1, !range !2
  %75 = trunc i8 %74 to i1
  ret i1 %75

bb46:                                             ; preds = %bb41
  br label %bb42

bb45:                                             ; preds = %bb39
  br label %bb42
}

; rustc_demangle::v0::Printer::print_quoted_escaped_chars
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17hfe730131329b21fdE(%"v0::Printer"* align 8 dereferenceable(56) %self, i32 %quote, %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* noalias nocapture dereferenceable(40) %chars) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_60 = alloca i8, align 1
  %_52 = alloca i8, align 1
  %_44 = alloca i8, align 1
  %_39 = alloca i32, align 4
  %iter1 = alloca %"core::char::EscapeDebug", align 8
  %_36 = alloca %"core::char::EscapeDebug", align 8
  %_35 = alloca %"core::char::EscapeDebug", align 8
  %_27 = alloca i8, align 1
  %_24 = alloca { i32, i32 }, align 4
  %_23 = alloca i8, align 1
  %_18 = alloca i32, align 4
  %iter = alloca %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>", align 8
  %_16 = alloca %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>", align 8
  %_15 = alloca %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>", align 8
  %_7 = alloca i8, align 1
  %1 = alloca i8, align 1
  store i8 0, i8* %_60, align 1
  store i8 1, i8* %_60, align 1
  %_4 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
  %2 = bitcast i64** %_4 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_5 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_5, 1
  br i1 %5, label %bb1, label %bb39

bb1:                                              ; preds = %start
  %out = bitcast i64** %_4 to %"core::fmt::Formatter"**
; invoke <&mut W as core::fmt::Write>::write_char
  %_8 = invoke zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hada9ebba9e27cdacE"(%"core::fmt::Formatter"** align 8 dereferenceable(8) %out, i32 %quote)
          to label %bb2 unwind label %cleanup

bb39:                                             ; preds = %bb36, %start
  store i8 0, i8* %1, align 1
  %6 = load i8, i8* %_60, align 1, !range !2
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb45, label %bb42

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %8 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_8)
          to label %bb3 unwind label %cleanup

bb48:                                             ; preds = %bb43, %cleanup
  %9 = load i8, i8* %_60, align 1, !range !2
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb47, label %bb44

cleanup:                                          ; preds = %bb38, %bb35, %bb34, %bb4, %bb6, %bb2, %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb48

bb3:                                              ; preds = %bb2
  %16 = zext i1 %8 to i8
  store i8 %16, i8* %_7, align 1
  %17 = load i8, i8* %_7, align 1, !range !2
  %18 = trunc i8 %17 to i1
  %_11 = zext i1 %18 to i64
  switch i64 %_11, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_60, align 1
  %19 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %_16 to i8*
  %20 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %chars to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 40, i1 false)
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc5d8680ece9eccd7E"(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* noalias nocapture sret(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>") dereferenceable(40) %_15, %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* noalias nocapture dereferenceable(40) %_16)
          to label %bb7 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %21 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1133 to %"core::panic::location::Location"*))
          to label %bb49 unwind label %cleanup

bb49:                                             ; preds = %bb6
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %1, align 1
  br label %bb41

bb41:                                             ; preds = %bb52, %bb40, %bb49
  %23 = load i8, i8* %_60, align 1, !range !2
  %24 = trunc i8 %23 to i1
  br i1 %24, label %bb46, label %bb42

bb7:                                              ; preds = %bb4
  %25 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %iter to i8*
  %26 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %_15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 40, i1 false)
  br label %bb8

bb8:                                              ; preds = %bb27, %bb20, %bb7
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %27 = invoke i32 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb70265196394d8fbE"(%"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* align 8 dereferenceable(40) %iter)
          to label %bb9 unwind label %cleanup2, !range !4

bb9:                                              ; preds = %bb8
  store i32 %27, i32* %_18, align 4
  %28 = load i32, i32* %_18, align 4, !range !4
  %29 = sub i32 %28, 1114112
  %30 = icmp eq i32 %29, 0
  %_21 = select i1 %30, i64 0, i64 1
  switch i64 %_21, label %bb11 [
    i64 0, label %bb12
    i64 1, label %bb10
  ]

bb43:                                             ; preds = %cleanup2
  br label %bb48

cleanup2:                                         ; preds = %bb33, %bb30, %bb28, %bb26, %bb24, %bb23, %bb22, %bb19, %bb18, %bb8
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %33, i32* %35, align 8
  br label %bb43

bb11:                                             ; preds = %bb9
  unreachable

bb12:                                             ; preds = %bb9
  br label %bb34

bb10:                                             ; preds = %bb9
  %c = load i32, i32* %_18, align 4, !range !9
  %36 = bitcast { i32, i32 }* %_24 to i32*
  store i32 %quote, i32* %36, align 4
  %37 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_24, i32 0, i32 1
  store i32 %c, i32* %37, align 4
  %38 = bitcast { i32, i32 }* %_24 to i32*
  %39 = load i32, i32* %38, align 4, !range !9
  switch i32 %39, label %bb14 [
    i32 39, label %bb13
    i32 34, label %bb15
  ]

bb14:                                             ; preds = %bb13, %bb15, %bb10
  store i8 0, i8* %_23, align 1
  br label %bb17

bb13:                                             ; preds = %bb10
  %40 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_24, i32 0, i32 1
  %41 = load i32, i32* %40, align 4, !range !9
  %42 = icmp eq i32 %41, 34
  br i1 %42, label %bb16, label %bb14

bb15:                                             ; preds = %bb10
  %43 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_24, i32 0, i32 1
  %44 = load i32, i32* %43, align 4, !range !9
  %45 = icmp eq i32 %44, 39
  br i1 %45, label %bb16, label %bb14

bb16:                                             ; preds = %bb13, %bb15
  store i8 1, i8* %_23, align 1
  br label %bb17

bb17:                                             ; preds = %bb16, %bb14
  %46 = load i8, i8* %_23, align 1, !range !2
  %47 = trunc i8 %46 to i1
  br i1 %47, label %bb18, label %bb23

bb23:                                             ; preds = %bb17
; invoke core::char::methods::<impl char>::escape_debug
  invoke void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12escape_debug17h70bfdf4178534501E"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %_36, i32 %c)
          to label %bb24 unwind label %cleanup2

bb18:                                             ; preds = %bb17
; invoke <&mut W as core::fmt::Write>::write_char
  %_28 = invoke zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hada9ebba9e27cdacE"(%"core::fmt::Formatter"** align 8 dereferenceable(8) %out, i32 %c)
          to label %bb19 unwind label %cleanup2

bb19:                                             ; preds = %bb18
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %48 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_28)
          to label %bb20 unwind label %cleanup2

bb20:                                             ; preds = %bb19
  %49 = zext i1 %48 to i8
  store i8 %49, i8* %_27, align 1
  %50 = load i8, i8* %_27, align 1, !range !2
  %51 = trunc i8 %50 to i1
  %_31 = zext i1 %51 to i64
  switch i64 %_31, label %bb21 [
    i64 0, label %bb8
    i64 1, label %bb22
  ]

bb21:                                             ; preds = %bb20
  unreachable

bb22:                                             ; preds = %bb20
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %52 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1135 to %"core::panic::location::Location"*))
          to label %bb50 unwind label %cleanup2

bb50:                                             ; preds = %bb22
  %53 = zext i1 %52 to i8
  store i8 %53, i8* %1, align 1
  br label %bb40

bb40:                                             ; preds = %bb51, %bb50
  br label %bb41

bb24:                                             ; preds = %bb23
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc436a0fda109a25bE"(%"core::char::EscapeDebug"* noalias nocapture sret(%"core::char::EscapeDebug") dereferenceable(24) %_35, %"core::char::EscapeDebug"* noalias nocapture dereferenceable(24) %_36)
          to label %bb25 unwind label %cleanup2

bb25:                                             ; preds = %bb24
  %54 = bitcast %"core::char::EscapeDebug"* %iter1 to i8*
  %55 = bitcast %"core::char::EscapeDebug"* %_35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false)
  br label %bb26

bb26:                                             ; preds = %bb31, %bb25
; invoke <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next
  %56 = invoke i32 @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h27e5bcc26268a1b2E"(%"core::char::EscapeDebug"* align 8 dereferenceable(24) %iter1)
          to label %bb27 unwind label %cleanup2, !range !4

bb27:                                             ; preds = %bb26
  store i32 %56, i32* %_39, align 4
  %57 = load i32, i32* %_39, align 4, !range !4
  %58 = sub i32 %57, 1114112
  %59 = icmp eq i32 %58, 0
  %_42 = select i1 %59, i64 0, i64 1
  switch i64 %_42, label %bb29 [
    i64 0, label %bb8
    i64 1, label %bb28
  ]

bb29:                                             ; preds = %bb27
  unreachable

bb28:                                             ; preds = %bb27
  %escaped = load i32, i32* %_39, align 4, !range !9
; invoke <&mut W as core::fmt::Write>::write_char
  %_45 = invoke zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hada9ebba9e27cdacE"(%"core::fmt::Formatter"** align 8 dereferenceable(8) %out, i32 %escaped)
          to label %bb30 unwind label %cleanup2

bb30:                                             ; preds = %bb28
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %60 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_45)
          to label %bb31 unwind label %cleanup2

bb31:                                             ; preds = %bb30
  %61 = zext i1 %60 to i8
  store i8 %61, i8* %_44, align 1
  %62 = load i8, i8* %_44, align 1, !range !2
  %63 = trunc i8 %62 to i1
  %_48 = zext i1 %63 to i64
  switch i64 %_48, label %bb32 [
    i64 0, label %bb26
    i64 1, label %bb33
  ]

bb32:                                             ; preds = %bb31
  unreachable

bb33:                                             ; preds = %bb31
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %64 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1137 to %"core::panic::location::Location"*))
          to label %bb51 unwind label %cleanup2

bb51:                                             ; preds = %bb33
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %1, align 1
  br label %bb40

bb34:                                             ; preds = %bb12
; invoke <&mut W as core::fmt::Write>::write_char
  %_53 = invoke zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hada9ebba9e27cdacE"(%"core::fmt::Formatter"** align 8 dereferenceable(8) %out, i32 %quote)
          to label %bb35 unwind label %cleanup

bb35:                                             ; preds = %bb34
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %66 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_53)
          to label %bb36 unwind label %cleanup

bb36:                                             ; preds = %bb35
  %67 = zext i1 %66 to i8
  store i8 %67, i8* %_52, align 1
  %68 = load i8, i8* %_52, align 1, !range !2
  %69 = trunc i8 %68 to i1
  %_56 = zext i1 %69 to i64
  switch i64 %_56, label %bb37 [
    i64 0, label %bb39
    i64 1, label %bb38
  ]

bb37:                                             ; preds = %bb36
  unreachable

bb38:                                             ; preds = %bb36
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %70 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1139 to %"core::panic::location::Location"*))
          to label %bb52 unwind label %cleanup

bb52:                                             ; preds = %bb38
  %71 = zext i1 %70 to i8
  store i8 %71, i8* %1, align 1
  br label %bb41

bb44:                                             ; preds = %bb47, %bb48
  %72 = bitcast { i8*, i32 }* %0 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = insertvalue { i8*, i32 } undef, i8* %73, 0
  %77 = insertvalue { i8*, i32 } %76, i32 %75, 1
  resume { i8*, i32 } %77

bb47:                                             ; preds = %bb48
  br label %bb44

bb42:                                             ; preds = %bb45, %bb39, %bb46, %bb41
  %78 = load i8, i8* %1, align 1, !range !2
  %79 = trunc i8 %78 to i1
  ret i1 %79

bb46:                                             ; preds = %bb41
  br label %bb42

bb45:                                             ; preds = %bb39
  br label %bb42
}

; rustc_demangle::v0::Printer::print_lifetime_from_index
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17hb43ff9896c40678dE(%"v0::Printer"* align 8 dereferenceable(56) %self, i64 %lt) unnamed_addr #0 {
start:
  %_48 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_39 = alloca i8, align 1
  %err = alloca i8, align 1
  %_29 = alloca i8, align 1
  %_14 = alloca { i64, i64 }, align 8
  %_5 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_4 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
; call core::option::Option<T>::is_none
  %_3 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hc2d2e1f0a12fbdebE"(i64** align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
; call rustc_demangle::v0::Printer::print
  %_6 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1140 to [0 x i8]*), i64 1)
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb29

bb29:                                             ; preds = %bb9, %bb26, %bb28, %bb20, %bb22, %bb16, %bb8, %bb2
  %1 = load i8, i8* %0, align 1, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2

bb4:                                              ; preds = %bb3
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_6)
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %_5, align 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %5 = load i8, i8* %_5, align 1, !range !2
  %6 = trunc i8 %5 to i1
  %_8 = zext i1 %6 to i64
  switch i64 %_8, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  %7 = icmp eq i64 %lt, 0
  br i1 %7, label %bb9, label %bb10

bb8:                                              ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1142 to %"core::panic::location::Location"*))
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %0, align 1
  br label %bb29

bb9:                                              ; preds = %bb6
; call rustc_demangle::v0::Printer::print
  %10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1544 to [0 x i8]*), i64 1)
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %0, align 1
  br label %bb29

bb10:                                             ; preds = %bb6
  %12 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 2
  %_16 = load i32, i32* %12, align 8
  %_15 = zext i32 %_16 to i64
; call core::num::<impl u64>::checked_sub
  %13 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_sub17h1ce47e90fcca30f1E"(i64 %_15, i64 %lt)
  store { i64, i64 } %13, { i64, i64 }* %_14, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  %14 = bitcast { i64, i64 }* %_14 to i64*
  %_18 = load i64, i64* %14, align 8, !range !5
  switch i64 %_18, label %bb13 [
    i64 0, label %bb12
    i64 1, label %bb14
  ]

bb13:                                             ; preds = %bb11
  unreachable

bb12:                                             ; preds = %bb11
  store i8 0, i8* %err, align 1
; call rustc_demangle::v0::ParseError::message
  %15 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
  %_42.0 = extractvalue { [0 x i8]*, i64 } %15, 0
  %_42.1 = extractvalue { [0 x i8]*, i64 } %15, 1
  br label %bb23

bb14:                                             ; preds = %bb11
  %16 = bitcast { i64, i64 }* %_14 to %"core::option::Option<u64>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %16, i32 0, i32 1
  %depth = load i64, i64* %17, align 8
  %_20 = icmp ult i64 %depth, 26
  br i1 %_20, label %bb15, label %bb17

bb17:                                             ; preds = %bb14
; call rustc_demangle::v0::Printer::print
  %_30 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1544 to [0 x i8]*), i64 1)
  br label %bb18

bb15:                                             ; preds = %bb14
  %_24 = trunc i64 %depth to i8
  %18 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 97, i8 %_24)
  %_26.0 = extractvalue { i8, i1 } %18, 0
  %_26.1 = extractvalue { i8, i1 } %18, 1
  %19 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false)
  br i1 %19, label %panic, label %bb16

bb16:                                             ; preds = %bb15
  %c = zext i8 %_26.0 to i32
; call rustc_demangle::v0::Printer::print
  %20 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h1918e57e7c0165a9E(%"v0::Printer"* align 8 dereferenceable(56) %self, i32 %c)
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %0, align 1
  br label %bb29

panic:                                            ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1144 to %"core::panic::location::Location"*)) #12
  unreachable

bb18:                                             ; preds = %bb17
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %22 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_30)
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %_29, align 1
  br label %bb19

bb19:                                             ; preds = %bb18
  %24 = load i8, i8* %_29, align 1, !range !2
  %25 = trunc i8 %24 to i1
  %_32 = zext i1 %25 to i64
  switch i64 %_32, label %bb21 [
    i64 0, label %bb20
    i64 1, label %bb22
  ]

bb21:                                             ; preds = %bb19
  unreachable

bb20:                                             ; preds = %bb19
; call rustc_demangle::v0::Printer::print
  %26 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hd06624edb242fe49E(%"v0::Printer"* align 8 dereferenceable(56) %self, i64 %depth)
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %0, align 1
  br label %bb29

bb22:                                             ; preds = %bb19
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %28 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1147 to %"core::panic::location::Location"*))
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %0, align 1
  br label %bb29

bb23:                                             ; preds = %bb12
; call rustc_demangle::v0::Printer::print
  %_40 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_42.0, i64 %_42.1)
  br label %bb24

bb24:                                             ; preds = %bb23
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %30 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_40)
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %_39, align 1
  br label %bb25

bb25:                                             ; preds = %bb24
  %32 = load i8, i8* %_39, align 1, !range !2
  %33 = trunc i8 %32 to i1
  %_44 = zext i1 %33 to i64
  switch i64 %_44, label %bb27 [
    i64 0, label %bb26
    i64 1, label %bb28
  ]

bb27:                                             ; preds = %bb25
  unreachable

bb26:                                             ; preds = %bb25
  %34 = load i8, i8* %err, align 1, !range !2
  %_49 = trunc i8 %34 to i1
  %35 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_48 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %36 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %35, i32 0, i32 1
  %37 = zext i1 %_49 to i8
  store i8 %37, i8* %36, align 1
  %38 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_48 to i8*
  store i8 1, i8* %38, align 8
  %39 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %40 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %39 to i8*
  %41 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 40, i1 false)
  store i8 0, i8* %0, align 1
  br label %bb29

bb28:                                             ; preds = %bb25
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %42 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1149 to %"core::panic::location::Location"*))
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %0, align 1
  br label %bb29
}

; rustc_demangle::v0::Printer::in_binder
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer9in_binder17h71e9bc6469b548e0E(%"v0::Printer"* align 8 dereferenceable(56) %self) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_77 = alloca i8, align 1
  %_72 = alloca i64*, align 8
  %_63 = alloca i8, align 1
  %_56 = alloca i8, align 1
  %_48 = alloca i8, align 1
  %_41 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_38 = alloca { i64, i64 }, align 8
  %_30 = alloca i8, align 1
  %_26 = alloca i64*, align 8
  %_20 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_11 = alloca i8, align 1
  %err = alloca i8, align 1
  %_6 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %2 = alloca i8, align 1
  store i8 0, i8* %_77, align 1
  store i8 1, i8* %_77, align 1
  %3 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %4 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %3 to i8*
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = trunc i8 %5 to i1
  %_4 = zext i1 %6 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %8 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %7 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %8, i32 0, i32 1
; invoke rustc_demangle::v0::Parser::opt_integer_62
  %9 = invoke i128 @_ZN14rustc_demangle2v06Parser14opt_integer_6217h1fd77ea6ab130d33E(%"v0::Parser"* align 8 dereferenceable(32) %parser, i8 71)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke rustc_demangle::v0::Printer::print
  %10 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
          to label %bb53 unwind label %cleanup

bb53:                                             ; preds = %bb1
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %2, align 1
  br label %bb47

bb52:                                             ; preds = %cleanup
  %12 = load i8, i8* %_77, align 1, !range !2
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb51, label %bb49

cleanup:                                          ; preds = %panic1, %bb44, %bb43, %bb40, %bb28, %bb39, %bb36, %bb35, %panic, %bb33, %bb30, %bb29, %bb24, %bb20, %bb22, %bb18, %bb17, %bb15, %bb7, %bb13, %bb9, %bb8, %bb5, %bb3, %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb52

bb47:                                             ; preds = %bb59, %bb58, %bb57, %bb56, %bb55, %bb11, %bb54, %bb53
  %19 = load i8, i8* %_77, align 1, !range !2
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb50, label %bb48

bb4:                                              ; preds = %bb3
  store i128 %9, i128* %0, align 8
  %21 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_6 to i8*
  %22 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false)
  %23 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_6 to i8*
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = trunc i8 %24 to i1
  %_8 = zext i1 %25 to i64
  switch i64 %_8, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %26 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_6 to %"core::result::Result<u64, v0::ParseError>::Ok"*
  %27 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Ok", %"core::result::Result<u64, v0::ParseError>::Ok"* %26, i32 0, i32 1
  %x = load i64, i64* %27, align 8
  %_24 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
; invoke core::option::Option<T>::is_none
  %_23 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hc2d2e1f0a12fbdebE"(i64** align 8 dereferenceable(8) %_24)
          to label %bb14 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %28 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_6 to %"core::result::Result<u64, v0::ParseError>::Err"*
  %29 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Err", %"core::result::Result<u64, v0::ParseError>::Err"* %28, i32 0, i32 1
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = trunc i8 %30 to i1
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %err, align 1
; invoke rustc_demangle::v0::ParseError::message
  %33 = invoke { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb5
  %_14.0 = extractvalue { [0 x i8]*, i64 } %33, 0
  %_14.1 = extractvalue { [0 x i8]*, i64 } %33, 1
; invoke rustc_demangle::v0::Printer::print
  %_12 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_14.0, i64 %_14.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %34 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %_11, align 1
  %36 = load i8, i8* %_11, align 1, !range !2
  %37 = trunc i8 %36 to i1
  %_16 = zext i1 %37 to i64
  switch i64 %_16, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %38 = load i8, i8* %err, align 1, !range !2
  %_21 = trunc i8 %38 to i1
  %39 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %40 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %39, i32 0, i32 1
  %41 = zext i1 %_21 to i8
  store i8 %41, i8* %40, align 1
  %42 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  store i8 1, i8* %42, align 8
  %43 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %44 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %43 to i8*
  %45 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 40, i1 false)
  store i8 0, i8* %2, align 1
  br label %bb47

bb13:                                             ; preds = %bb10
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %46 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1153 to %"core::panic::location::Location"*))
          to label %bb54 unwind label %cleanup

bb54:                                             ; preds = %bb13
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %2, align 1
  br label %bb47

bb14:                                             ; preds = %bb7
  br i1 %_23, label %bb15, label %bb16

bb16:                                             ; preds = %bb14
  %_28 = icmp ugt i64 %x, 0
  br i1 %_28, label %bb17, label %bb44

bb15:                                             ; preds = %bb14
  store i8 0, i8* %_77, align 1
  %48 = bitcast i64** %_26 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %48, align 8
  %49 = load i64*, i64** %_26, align 8, !nonnull !6
  %50 = bitcast i64* %49 to %"v0::Printer"*
; invoke rustc_demangle::v0::Printer::print_type::{{closure}}
  %51 = invoke zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h0a341ed5847fa860E"(%"v0::Printer"* align 8 dereferenceable(56) %50)
          to label %bb55 unwind label %cleanup

bb55:                                             ; preds = %bb15
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %2, align 1
  br label %bb47

bb44:                                             ; preds = %bb41, %bb16
  store i8 0, i8* %_77, align 1
  %53 = bitcast i64** %_72 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %53, align 8
  %54 = load i64*, i64** %_72, align 8, !nonnull !6
  %55 = bitcast i64* %54 to %"v0::Printer"*
; invoke rustc_demangle::v0::Printer::print_type::{{closure}}
  %r = invoke zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h0a341ed5847fa860E"(%"v0::Printer"* align 8 dereferenceable(56) %55)
          to label %bb45 unwind label %cleanup

bb17:                                             ; preds = %bb16
; invoke rustc_demangle::v0::Printer::print
  %_31 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1170 to [0 x i8]*), i64 4)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb17
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %56 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_31)
          to label %bb19 unwind label %cleanup

bb19:                                             ; preds = %bb18
  %57 = zext i1 %56 to i8
  store i8 %57, i8* %_30, align 1
  %58 = load i8, i8* %_30, align 1, !range !2
  %59 = trunc i8 %58 to i1
  %_33 = zext i1 %59 to i64
  switch i64 %_33, label %bb21 [
    i64 0, label %bb20
    i64 1, label %bb22
  ]

bb21:                                             ; preds = %bb19
  unreachable

bb20:                                             ; preds = %bb19
  %60 = bitcast { i64, i64 }* %_38 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_38, i32 0, i32 1
  store i64 %x, i64* %61, align 8
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_38, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_38, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %66 = invoke { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h866b4857384379b2E"(i64 %63, i64 %65)
          to label %bb23 unwind label %cleanup

bb22:                                             ; preds = %bb19
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %67 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1156 to %"core::panic::location::Location"*))
          to label %bb56 unwind label %cleanup

bb56:                                             ; preds = %bb22
  %68 = zext i1 %67 to i8
  store i8 %68, i8* %2, align 1
  br label %bb47

bb23:                                             ; preds = %bb20
  %_37.0 = extractvalue { i64, i64 } %66, 0
  %_37.1 = extractvalue { i64, i64 } %66, 1
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_37.0, i64* %69, align 8
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_37.1, i64* %70, align 8
  br label %bb24

bb24:                                             ; preds = %bb37, %bb23
; invoke core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %71 = invoke { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h28e59398174aab79E"({ i64, i64 }* align 8 dereferenceable(16) %iter)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
  store { i64, i64 } %71, { i64, i64 }* %_41, align 8
  %72 = bitcast { i64, i64 }* %_41 to i64*
  %_44 = load i64, i64* %72, align 8, !range !5
  switch i64 %_44, label %bb27 [
    i64 0, label %bb28
    i64 1, label %bb26
  ]

bb27:                                             ; preds = %bb25
  unreachable

bb28:                                             ; preds = %bb25
; invoke rustc_demangle::v0::Printer::print
  %_64 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1172 to [0 x i8]*), i64 2)
          to label %bb40 unwind label %cleanup

bb26:                                             ; preds = %bb25
  %73 = bitcast { i64, i64 }* %_41 to %"core::option::Option<u64>::Some"*
  %74 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %73, i32 0, i32 1
  %i = load i64, i64* %74, align 8
  %_46 = icmp ugt i64 %i, 0
  br i1 %_46, label %bb29, label %bb34

bb34:                                             ; preds = %bb31, %bb26
  %75 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %76, i32 1)
  %_55.0 = extractvalue { i32, i1 } %77, 0
  %_55.1 = extractvalue { i32, i1 } %77, 1
  %78 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false)
  br i1 %78, label %panic, label %bb35

bb29:                                             ; preds = %bb26
; invoke rustc_demangle::v0::Printer::print
  %_49 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1494 to [0 x i8]*), i64 2)
          to label %bb30 unwind label %cleanup

bb30:                                             ; preds = %bb29
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %79 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_49)
          to label %bb31 unwind label %cleanup

bb31:                                             ; preds = %bb30
  %80 = zext i1 %79 to i8
  store i8 %80, i8* %_48, align 1
  %81 = load i8, i8* %_48, align 1, !range !2
  %82 = trunc i8 %81 to i1
  %_51 = zext i1 %82 to i64
  switch i64 %_51, label %bb32 [
    i64 0, label %bb34
    i64 1, label %bb33
  ]

bb32:                                             ; preds = %bb31
  unreachable

bb33:                                             ; preds = %bb31
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %83 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1159 to %"core::panic::location::Location"*))
          to label %bb57 unwind label %cleanup

bb57:                                             ; preds = %bb33
  %84 = zext i1 %83 to i8
  store i8 %84, i8* %2, align 1
  br label %bb47

bb35:                                             ; preds = %bb34
  %85 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 2
  store i32 %_55.0, i32* %85, align 8
; invoke rustc_demangle::v0::Printer::print_lifetime_from_index
  %_57 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17hb43ff9896c40678dE(%"v0::Printer"* align 8 dereferenceable(56) %self, i64 1)
          to label %bb36 unwind label %cleanup

panic:                                            ; preds = %bb34
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1161 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic1, %panic
  unreachable

bb36:                                             ; preds = %bb35
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %86 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_57)
          to label %bb37 unwind label %cleanup

bb37:                                             ; preds = %bb36
  %87 = zext i1 %86 to i8
  store i8 %87, i8* %_56, align 1
  %88 = load i8, i8* %_56, align 1, !range !2
  %89 = trunc i8 %88 to i1
  %_59 = zext i1 %89 to i64
  switch i64 %_59, label %bb38 [
    i64 0, label %bb24
    i64 1, label %bb39
  ]

bb38:                                             ; preds = %bb37
  unreachable

bb39:                                             ; preds = %bb37
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %90 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1163 to %"core::panic::location::Location"*))
          to label %bb58 unwind label %cleanup

bb58:                                             ; preds = %bb39
  %91 = zext i1 %90 to i8
  store i8 %91, i8* %2, align 1
  br label %bb47

bb40:                                             ; preds = %bb28
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %92 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_64)
          to label %bb41 unwind label %cleanup

bb41:                                             ; preds = %bb40
  %93 = zext i1 %92 to i8
  store i8 %93, i8* %_63, align 1
  %94 = load i8, i8* %_63, align 1, !range !2
  %95 = trunc i8 %94 to i1
  %_66 = zext i1 %95 to i64
  switch i64 %_66, label %bb42 [
    i64 0, label %bb44
    i64 1, label %bb43
  ]

bb42:                                             ; preds = %bb41
  unreachable

bb43:                                             ; preds = %bb41
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %96 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1166 to %"core::panic::location::Location"*))
          to label %bb59 unwind label %cleanup

bb59:                                             ; preds = %bb43
  %97 = zext i1 %96 to i8
  store i8 %97, i8* %2, align 1
  br label %bb47

bb48:                                             ; preds = %bb46, %bb50, %bb47
  %98 = load i8, i8* %2, align 1, !range !2
  %99 = trunc i8 %98 to i1
  ret i1 %99

bb50:                                             ; preds = %bb47
  br label %bb48

bb45:                                             ; preds = %bb44
  %_74 = trunc i64 %x to i32
  %100 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 2
  %101 = load i32, i32* %100, align 8
  %102 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %101, i32 %_74)
  %_76.0 = extractvalue { i32, i1 } %102, 0
  %_76.1 = extractvalue { i32, i1 } %102, 1
  %103 = call i1 @llvm.expect.i1(i1 %_76.1, i1 false)
  br i1 %103, label %panic1, label %bb46

bb46:                                             ; preds = %bb45
  %104 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 2
  store i32 %_76.0, i32* %104, align 8
  %105 = zext i1 %r to i8
  store i8 %105, i8* %2, align 1
  br label %bb48

panic1:                                           ; preds = %bb45
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1168 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb49:                                             ; preds = %bb51, %bb52
  %106 = bitcast { i8*, i32 }* %1 to i8**
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = insertvalue { i8*, i32 } undef, i8* %107, 0
  %111 = insertvalue { i8*, i32 } %110, i32 %109, 1
  resume { i8*, i32 } %111

bb51:                                             ; preds = %bb52
  br label %bb49
}

; rustc_demangle::v0::Printer::in_binder
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer9in_binder17hb38e7ec356fa7782E(%"v0::Printer"* align 8 dereferenceable(56) %self) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_77 = alloca i8, align 1
  %_72 = alloca i64*, align 8
  %_63 = alloca i8, align 1
  %_56 = alloca i8, align 1
  %_48 = alloca i8, align 1
  %_41 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_38 = alloca { i64, i64 }, align 8
  %_30 = alloca i8, align 1
  %_26 = alloca i64*, align 8
  %_20 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_11 = alloca i8, align 1
  %err = alloca i8, align 1
  %_6 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %2 = alloca i8, align 1
  store i8 0, i8* %_77, align 1
  store i8 1, i8* %_77, align 1
  %3 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %4 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %3 to i8*
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = trunc i8 %5 to i1
  %_4 = zext i1 %6 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %8 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %7 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %8, i32 0, i32 1
; invoke rustc_demangle::v0::Parser::opt_integer_62
  %9 = invoke i128 @_ZN14rustc_demangle2v06Parser14opt_integer_6217h1fd77ea6ab130d33E(%"v0::Parser"* align 8 dereferenceable(32) %parser, i8 71)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke rustc_demangle::v0::Printer::print
  %10 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
          to label %bb53 unwind label %cleanup

bb53:                                             ; preds = %bb1
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %2, align 1
  br label %bb47

bb52:                                             ; preds = %cleanup
  %12 = load i8, i8* %_77, align 1, !range !2
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb51, label %bb49

cleanup:                                          ; preds = %panic1, %bb44, %bb43, %bb40, %bb28, %bb39, %bb36, %bb35, %panic, %bb33, %bb30, %bb29, %bb24, %bb20, %bb22, %bb18, %bb17, %bb15, %bb7, %bb13, %bb9, %bb8, %bb5, %bb3, %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb52

bb47:                                             ; preds = %bb59, %bb58, %bb57, %bb56, %bb55, %bb11, %bb54, %bb53
  %19 = load i8, i8* %_77, align 1, !range !2
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb50, label %bb48

bb4:                                              ; preds = %bb3
  store i128 %9, i128* %0, align 8
  %21 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_6 to i8*
  %22 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false)
  %23 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_6 to i8*
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = trunc i8 %24 to i1
  %_8 = zext i1 %25 to i64
  switch i64 %_8, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %26 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_6 to %"core::result::Result<u64, v0::ParseError>::Ok"*
  %27 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Ok", %"core::result::Result<u64, v0::ParseError>::Ok"* %26, i32 0, i32 1
  %x = load i64, i64* %27, align 8
  %_24 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
; invoke core::option::Option<T>::is_none
  %_23 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hc2d2e1f0a12fbdebE"(i64** align 8 dereferenceable(8) %_24)
          to label %bb14 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %28 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_6 to %"core::result::Result<u64, v0::ParseError>::Err"*
  %29 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Err", %"core::result::Result<u64, v0::ParseError>::Err"* %28, i32 0, i32 1
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = trunc i8 %30 to i1
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %err, align 1
; invoke rustc_demangle::v0::ParseError::message
  %33 = invoke { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb5
  %_14.0 = extractvalue { [0 x i8]*, i64 } %33, 0
  %_14.1 = extractvalue { [0 x i8]*, i64 } %33, 1
; invoke rustc_demangle::v0::Printer::print
  %_12 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_14.0, i64 %_14.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %34 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %_11, align 1
  %36 = load i8, i8* %_11, align 1, !range !2
  %37 = trunc i8 %36 to i1
  %_16 = zext i1 %37 to i64
  switch i64 %_16, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %38 = load i8, i8* %err, align 1, !range !2
  %_21 = trunc i8 %38 to i1
  %39 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %40 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %39, i32 0, i32 1
  %41 = zext i1 %_21 to i8
  store i8 %41, i8* %40, align 1
  %42 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  store i8 1, i8* %42, align 8
  %43 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %44 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %43 to i8*
  %45 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 40, i1 false)
  store i8 0, i8* %2, align 1
  br label %bb47

bb13:                                             ; preds = %bb10
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %46 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1153 to %"core::panic::location::Location"*))
          to label %bb54 unwind label %cleanup

bb54:                                             ; preds = %bb13
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %2, align 1
  br label %bb47

bb14:                                             ; preds = %bb7
  br i1 %_23, label %bb15, label %bb16

bb16:                                             ; preds = %bb14
  %_28 = icmp ugt i64 %x, 0
  br i1 %_28, label %bb17, label %bb44

bb15:                                             ; preds = %bb14
  store i8 0, i8* %_77, align 1
  %48 = bitcast i64** %_26 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %48, align 8
  %49 = load i64*, i64** %_26, align 8, !nonnull !6
  %50 = bitcast i64* %49 to %"v0::Printer"*
; invoke rustc_demangle::v0::Printer::print_type::{{closure}}
  %51 = invoke zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17hb9fc06000f423aa8E"(%"v0::Printer"* align 8 dereferenceable(56) %50)
          to label %bb55 unwind label %cleanup

bb55:                                             ; preds = %bb15
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %2, align 1
  br label %bb47

bb44:                                             ; preds = %bb41, %bb16
  store i8 0, i8* %_77, align 1
  %53 = bitcast i64** %_72 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %53, align 8
  %54 = load i64*, i64** %_72, align 8, !nonnull !6
  %55 = bitcast i64* %54 to %"v0::Printer"*
; invoke rustc_demangle::v0::Printer::print_type::{{closure}}
  %r = invoke zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17hb9fc06000f423aa8E"(%"v0::Printer"* align 8 dereferenceable(56) %55)
          to label %bb45 unwind label %cleanup

bb17:                                             ; preds = %bb16
; invoke rustc_demangle::v0::Printer::print
  %_31 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1170 to [0 x i8]*), i64 4)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb17
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %56 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_31)
          to label %bb19 unwind label %cleanup

bb19:                                             ; preds = %bb18
  %57 = zext i1 %56 to i8
  store i8 %57, i8* %_30, align 1
  %58 = load i8, i8* %_30, align 1, !range !2
  %59 = trunc i8 %58 to i1
  %_33 = zext i1 %59 to i64
  switch i64 %_33, label %bb21 [
    i64 0, label %bb20
    i64 1, label %bb22
  ]

bb21:                                             ; preds = %bb19
  unreachable

bb20:                                             ; preds = %bb19
  %60 = bitcast { i64, i64 }* %_38 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_38, i32 0, i32 1
  store i64 %x, i64* %61, align 8
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_38, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_38, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %66 = invoke { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h866b4857384379b2E"(i64 %63, i64 %65)
          to label %bb23 unwind label %cleanup

bb22:                                             ; preds = %bb19
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %67 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1156 to %"core::panic::location::Location"*))
          to label %bb56 unwind label %cleanup

bb56:                                             ; preds = %bb22
  %68 = zext i1 %67 to i8
  store i8 %68, i8* %2, align 1
  br label %bb47

bb23:                                             ; preds = %bb20
  %_37.0 = extractvalue { i64, i64 } %66, 0
  %_37.1 = extractvalue { i64, i64 } %66, 1
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_37.0, i64* %69, align 8
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_37.1, i64* %70, align 8
  br label %bb24

bb24:                                             ; preds = %bb37, %bb23
; invoke core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %71 = invoke { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h28e59398174aab79E"({ i64, i64 }* align 8 dereferenceable(16) %iter)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
  store { i64, i64 } %71, { i64, i64 }* %_41, align 8
  %72 = bitcast { i64, i64 }* %_41 to i64*
  %_44 = load i64, i64* %72, align 8, !range !5
  switch i64 %_44, label %bb27 [
    i64 0, label %bb28
    i64 1, label %bb26
  ]

bb27:                                             ; preds = %bb25
  unreachable

bb28:                                             ; preds = %bb25
; invoke rustc_demangle::v0::Printer::print
  %_64 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1172 to [0 x i8]*), i64 2)
          to label %bb40 unwind label %cleanup

bb26:                                             ; preds = %bb25
  %73 = bitcast { i64, i64 }* %_41 to %"core::option::Option<u64>::Some"*
  %74 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %73, i32 0, i32 1
  %i = load i64, i64* %74, align 8
  %_46 = icmp ugt i64 %i, 0
  br i1 %_46, label %bb29, label %bb34

bb34:                                             ; preds = %bb31, %bb26
  %75 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %76, i32 1)
  %_55.0 = extractvalue { i32, i1 } %77, 0
  %_55.1 = extractvalue { i32, i1 } %77, 1
  %78 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false)
  br i1 %78, label %panic, label %bb35

bb29:                                             ; preds = %bb26
; invoke rustc_demangle::v0::Printer::print
  %_49 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1494 to [0 x i8]*), i64 2)
          to label %bb30 unwind label %cleanup

bb30:                                             ; preds = %bb29
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %79 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_49)
          to label %bb31 unwind label %cleanup

bb31:                                             ; preds = %bb30
  %80 = zext i1 %79 to i8
  store i8 %80, i8* %_48, align 1
  %81 = load i8, i8* %_48, align 1, !range !2
  %82 = trunc i8 %81 to i1
  %_51 = zext i1 %82 to i64
  switch i64 %_51, label %bb32 [
    i64 0, label %bb34
    i64 1, label %bb33
  ]

bb32:                                             ; preds = %bb31
  unreachable

bb33:                                             ; preds = %bb31
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %83 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1159 to %"core::panic::location::Location"*))
          to label %bb57 unwind label %cleanup

bb57:                                             ; preds = %bb33
  %84 = zext i1 %83 to i8
  store i8 %84, i8* %2, align 1
  br label %bb47

bb35:                                             ; preds = %bb34
  %85 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 2
  store i32 %_55.0, i32* %85, align 8
; invoke rustc_demangle::v0::Printer::print_lifetime_from_index
  %_57 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17hb43ff9896c40678dE(%"v0::Printer"* align 8 dereferenceable(56) %self, i64 1)
          to label %bb36 unwind label %cleanup

panic:                                            ; preds = %bb34
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1161 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic1, %panic
  unreachable

bb36:                                             ; preds = %bb35
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %86 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_57)
          to label %bb37 unwind label %cleanup

bb37:                                             ; preds = %bb36
  %87 = zext i1 %86 to i8
  store i8 %87, i8* %_56, align 1
  %88 = load i8, i8* %_56, align 1, !range !2
  %89 = trunc i8 %88 to i1
  %_59 = zext i1 %89 to i64
  switch i64 %_59, label %bb38 [
    i64 0, label %bb24
    i64 1, label %bb39
  ]

bb38:                                             ; preds = %bb37
  unreachable

bb39:                                             ; preds = %bb37
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %90 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1163 to %"core::panic::location::Location"*))
          to label %bb58 unwind label %cleanup

bb58:                                             ; preds = %bb39
  %91 = zext i1 %90 to i8
  store i8 %91, i8* %2, align 1
  br label %bb47

bb40:                                             ; preds = %bb28
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %92 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_64)
          to label %bb41 unwind label %cleanup

bb41:                                             ; preds = %bb40
  %93 = zext i1 %92 to i8
  store i8 %93, i8* %_63, align 1
  %94 = load i8, i8* %_63, align 1, !range !2
  %95 = trunc i8 %94 to i1
  %_66 = zext i1 %95 to i64
  switch i64 %_66, label %bb42 [
    i64 0, label %bb44
    i64 1, label %bb43
  ]

bb42:                                             ; preds = %bb41
  unreachable

bb43:                                             ; preds = %bb41
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %96 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1166 to %"core::panic::location::Location"*))
          to label %bb59 unwind label %cleanup

bb59:                                             ; preds = %bb43
  %97 = zext i1 %96 to i8
  store i8 %97, i8* %2, align 1
  br label %bb47

bb48:                                             ; preds = %bb46, %bb50, %bb47
  %98 = load i8, i8* %2, align 1, !range !2
  %99 = trunc i8 %98 to i1
  ret i1 %99

bb50:                                             ; preds = %bb47
  br label %bb48

bb45:                                             ; preds = %bb44
  %_74 = trunc i64 %x to i32
  %100 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 2
  %101 = load i32, i32* %100, align 8
  %102 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %101, i32 %_74)
  %_76.0 = extractvalue { i32, i1 } %102, 0
  %_76.1 = extractvalue { i32, i1 } %102, 1
  %103 = call i1 @llvm.expect.i1(i1 %_76.1, i1 false)
  br i1 %103, label %panic1, label %bb46

bb46:                                             ; preds = %bb45
  %104 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 2
  store i32 %_76.0, i32* %104, align 8
  %105 = zext i1 %r to i8
  store i8 %105, i8* %2, align 1
  br label %bb48

panic1:                                           ; preds = %bb45
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1168 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

bb49:                                             ; preds = %bb51, %bb52
  %106 = bitcast { i8*, i32 }* %1 to i8**
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = insertvalue { i8*, i32 } undef, i8* %107, 0
  %111 = insertvalue { i8*, i32 } %110, i32 %109, 1
  resume { i8*, i32 } %111

bb51:                                             ; preds = %bb52
  br label %bb49
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h1466d0aa3c953d40E(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_24 = alloca i64*, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %i = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  %f = alloca {}, align 1
  store i64 0, i64* %i, align 8
  br label %bb1

bb1:                                              ; preds = %bb19, %start
  %_7 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
; invoke core::result::Result<T,E>::is_ok
  %_6 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1ef963d75672bbf7E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_7)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb1
  br i1 %_6, label %bb3, label %bb2

bb23:                                             ; preds = %cleanup
  br label %bb24

cleanup:                                          ; preds = %panic, %bb18, %bb14, %bb13, %bb12, %bb9, %bb8, %bb3, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb23

bb2:                                              ; preds = %bb5
  store i8 0, i8* %_5, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
; invoke rustc_demangle::v0::Printer::eat
  %_9 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 69)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb3
  %_8 = xor i1 %_9, true
  %7 = zext i1 %_8 to i8
  store i8 %7, i8* %_5, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb6
  %8 = load i8, i8* %_5, align 1, !range !2
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb7, label %bb20

bb20:                                             ; preds = %bb4
  %_31 = load i64, i64* %i, align 8
  %10 = bitcast { i64, i64 }* %1 to %"core::result::Result<usize, core::fmt::Error>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<usize, core::fmt::Error>::Ok", %"core::result::Result<usize, core::fmt::Error>::Ok"* %10, i32 0, i32 1
  store i64 %_31, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %12, align 8
  br label %bb22

bb7:                                              ; preds = %bb4
  %_12 = load i64, i64* %i, align 8
  %_11 = icmp ugt i64 %_12, 0
  br i1 %_11, label %bb8, label %bb13

bb13:                                             ; preds = %bb10, %bb7
  %13 = bitcast i64** %_24 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %13, align 8
  %14 = load i64*, i64** %_24, align 8, !nonnull !6
  %15 = bitcast i64* %14 to %"v0::Printer"*
; invoke core::ops::function::Fn::call
  %_22 = invoke zeroext i1 @_ZN4core3ops8function2Fn4call17h11bcb3c74663f26aE({}* nonnull align 1 %f, %"v0::Printer"* align 8 dereferenceable(56) %15)
          to label %bb14 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke rustc_demangle::v0::Printer::print
  %_14 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %16 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_14)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %_13, align 1
  %18 = load i8, i8* %_13, align 1, !range !2
  %19 = trunc i8 %18 to i1
  %_17 = zext i1 %19 to i64
  switch i64 %_17, label %bb11 [
    i64 0, label %bb13
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb10
  unreachable

bb12:                                             ; preds = %bb10
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1174 to %"core::panic::location::Location"*))
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb12
  store { i64, i64 } %20, { i64, i64 }* %1, align 8
  br label %bb21

bb21:                                             ; preds = %bb26, %bb25
  br label %bb22

bb14:                                             ; preds = %bb13
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_22)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %_21, align 1
  %23 = load i8, i8* %_21, align 1, !range !2
  %24 = trunc i8 %23 to i1
  %_26 = zext i1 %24 to i64
  switch i64 %_26, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb15
  unreachable

bb16:                                             ; preds = %bb15
  %25 = load i64, i64* %i, align 8
  %26 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %25, i64 1)
  %_30.0 = extractvalue { i64, i1 } %26, 0
  %_30.1 = extractvalue { i64, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %27, label %panic, label %bb19

bb18:                                             ; preds = %bb15
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %28 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1176 to %"core::panic::location::Location"*))
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb18
  store { i64, i64 } %28, { i64, i64 }* %1, align 8
  br label %bb21

bb22:                                             ; preds = %bb20, %bb21
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %30 = load i64, i64* %29, align 8, !range !5
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = insertvalue { i64, i64 } undef, i64 %30, 0
  %34 = insertvalue { i64, i64 } %33, i64 %32, 1
  ret { i64, i64 } %34

bb19:                                             ; preds = %bb16
  store i64 %_30.0, i64* %i, align 8
  br label %bb1

panic:                                            ; preds = %bb16
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1178 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb24:                                             ; preds = %bb23
  %35 = bitcast { i8*, i32 }* %0 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h493d038399b7f126E(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_24 = alloca i64*, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %i = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  %f = alloca %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1164:49: 1164:78]", align 1
  store i64 0, i64* %i, align 8
  br label %bb1

bb1:                                              ; preds = %bb19, %start
  %_7 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
; invoke core::result::Result<T,E>::is_ok
  %_6 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1ef963d75672bbf7E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_7)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb1
  br i1 %_6, label %bb3, label %bb2

bb23:                                             ; preds = %cleanup
  br label %bb24

cleanup:                                          ; preds = %panic, %bb18, %bb14, %bb13, %bb12, %bb9, %bb8, %bb3, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb23

bb2:                                              ; preds = %bb5
  store i8 0, i8* %_5, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
; invoke rustc_demangle::v0::Printer::eat
  %_9 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 69)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb3
  %_8 = xor i1 %_9, true
  %7 = zext i1 %_8 to i8
  store i8 %7, i8* %_5, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb6
  %8 = load i8, i8* %_5, align 1, !range !2
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb7, label %bb20

bb20:                                             ; preds = %bb4
  %_31 = load i64, i64* %i, align 8
  %10 = bitcast { i64, i64 }* %1 to %"core::result::Result<usize, core::fmt::Error>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<usize, core::fmt::Error>::Ok", %"core::result::Result<usize, core::fmt::Error>::Ok"* %10, i32 0, i32 1
  store i64 %_31, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %12, align 8
  br label %bb22

bb7:                                              ; preds = %bb4
  %_12 = load i64, i64* %i, align 8
  %_11 = icmp ugt i64 %_12, 0
  br i1 %_11, label %bb8, label %bb13

bb13:                                             ; preds = %bb10, %bb7
  %13 = bitcast i64** %_24 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %13, align 8
  %14 = load i64*, i64** %_24, align 8, !nonnull !6
  %15 = bitcast i64* %14 to %"v0::Printer"*
; invoke rustc_demangle::v0::Printer::print_const::{{closure}}
  %_22 = invoke zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h940a05d6e396a419E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1164:49: 1164:78]"* nonnull align 1 %f, %"v0::Printer"* align 8 dereferenceable(56) %15)
          to label %bb14 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke rustc_demangle::v0::Printer::print
  %_14 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %16 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_14)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %_13, align 1
  %18 = load i8, i8* %_13, align 1, !range !2
  %19 = trunc i8 %18 to i1
  %_17 = zext i1 %19 to i64
  switch i64 %_17, label %bb11 [
    i64 0, label %bb13
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb10
  unreachable

bb12:                                             ; preds = %bb10
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1174 to %"core::panic::location::Location"*))
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb12
  store { i64, i64 } %20, { i64, i64 }* %1, align 8
  br label %bb21

bb21:                                             ; preds = %bb26, %bb25
  br label %bb22

bb14:                                             ; preds = %bb13
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_22)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %_21, align 1
  %23 = load i8, i8* %_21, align 1, !range !2
  %24 = trunc i8 %23 to i1
  %_26 = zext i1 %24 to i64
  switch i64 %_26, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb15
  unreachable

bb16:                                             ; preds = %bb15
  %25 = load i64, i64* %i, align 8
  %26 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %25, i64 1)
  %_30.0 = extractvalue { i64, i1 } %26, 0
  %_30.1 = extractvalue { i64, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %27, label %panic, label %bb19

bb18:                                             ; preds = %bb15
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %28 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1176 to %"core::panic::location::Location"*))
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb18
  store { i64, i64 } %28, { i64, i64 }* %1, align 8
  br label %bb21

bb22:                                             ; preds = %bb20, %bb21
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %30 = load i64, i64* %29, align 8, !range !5
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = insertvalue { i64, i64 } undef, i64 %30, 0
  %34 = insertvalue { i64, i64 } %33, i64 %32, 1
  ret { i64, i64 } %34

bb19:                                             ; preds = %bb16
  store i64 %_30.0, i64* %i, align 8
  br label %bb1

panic:                                            ; preds = %bb16
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1178 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb24:                                             ; preds = %bb23
  %35 = bitcast { i8*, i32 }* %0 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h58c0789ac6806da3E(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_24 = alloca i64*, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %i = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  %f = alloca {}, align 1
  store i64 0, i64* %i, align 8
  br label %bb1

bb1:                                              ; preds = %bb19, %start
  %_7 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
; invoke core::result::Result<T,E>::is_ok
  %_6 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1ef963d75672bbf7E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_7)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb1
  br i1 %_6, label %bb3, label %bb2

bb23:                                             ; preds = %cleanup
  br label %bb24

cleanup:                                          ; preds = %panic, %bb18, %bb14, %bb13, %bb12, %bb9, %bb8, %bb3, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb23

bb2:                                              ; preds = %bb5
  store i8 0, i8* %_5, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
; invoke rustc_demangle::v0::Printer::eat
  %_9 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 69)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb3
  %_8 = xor i1 %_9, true
  %7 = zext i1 %_8 to i8
  store i8 %7, i8* %_5, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb6
  %8 = load i8, i8* %_5, align 1, !range !2
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb7, label %bb20

bb20:                                             ; preds = %bb4
  %_31 = load i64, i64* %i, align 8
  %10 = bitcast { i64, i64 }* %1 to %"core::result::Result<usize, core::fmt::Error>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<usize, core::fmt::Error>::Ok", %"core::result::Result<usize, core::fmt::Error>::Ok"* %10, i32 0, i32 1
  store i64 %_31, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %12, align 8
  br label %bb22

bb7:                                              ; preds = %bb4
  %_12 = load i64, i64* %i, align 8
  %_11 = icmp ugt i64 %_12, 0
  br i1 %_11, label %bb8, label %bb13

bb13:                                             ; preds = %bb10, %bb7
  %13 = bitcast i64** %_24 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %13, align 8
  %14 = load i64*, i64** %_24, align 8, !nonnull !6
  %15 = bitcast i64* %14 to %"v0::Printer"*
; invoke core::ops::function::Fn::call
  %_22 = invoke zeroext i1 @_ZN4core3ops8function2Fn4call17hdd22a645d04468dbE({}* nonnull align 1 %f, %"v0::Printer"* align 8 dereferenceable(56) %15)
          to label %bb14 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke rustc_demangle::v0::Printer::print
  %_14 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %16 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_14)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %_13, align 1
  %18 = load i8, i8* %_13, align 1, !range !2
  %19 = trunc i8 %18 to i1
  %_17 = zext i1 %19 to i64
  switch i64 %_17, label %bb11 [
    i64 0, label %bb13
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb10
  unreachable

bb12:                                             ; preds = %bb10
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1174 to %"core::panic::location::Location"*))
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb12
  store { i64, i64 } %20, { i64, i64 }* %1, align 8
  br label %bb21

bb21:                                             ; preds = %bb26, %bb25
  br label %bb22

bb14:                                             ; preds = %bb13
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_22)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %_21, align 1
  %23 = load i8, i8* %_21, align 1, !range !2
  %24 = trunc i8 %23 to i1
  %_26 = zext i1 %24 to i64
  switch i64 %_26, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb15
  unreachable

bb16:                                             ; preds = %bb15
  %25 = load i64, i64* %i, align 8
  %26 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %25, i64 1)
  %_30.0 = extractvalue { i64, i1 } %26, 0
  %_30.1 = extractvalue { i64, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %27, label %panic, label %bb19

bb18:                                             ; preds = %bb15
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %28 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1176 to %"core::panic::location::Location"*))
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb18
  store { i64, i64 } %28, { i64, i64 }* %1, align 8
  br label %bb21

bb22:                                             ; preds = %bb20, %bb21
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %30 = load i64, i64* %29, align 8, !range !5
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = insertvalue { i64, i64 } undef, i64 %30, 0
  %34 = insertvalue { i64, i64 } %33, i64 %32, 1
  ret { i64, i64 } %34

bb19:                                             ; preds = %bb16
  store i64 %_30.0, i64* %i, align 8
  br label %bb1

panic:                                            ; preds = %bb16
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1178 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb24:                                             ; preds = %bb23
  %35 = bitcast { i8*, i32 }* %0 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h8f84a8329fd6d9daE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_24 = alloca i64*, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %i = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  %f = alloca {}, align 1
  store i64 0, i64* %i, align 8
  br label %bb1

bb1:                                              ; preds = %bb19, %start
  %_7 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
; invoke core::result::Result<T,E>::is_ok
  %_6 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1ef963d75672bbf7E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_7)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb1
  br i1 %_6, label %bb3, label %bb2

bb23:                                             ; preds = %cleanup
  br label %bb24

cleanup:                                          ; preds = %panic, %bb18, %bb14, %bb13, %bb12, %bb9, %bb8, %bb3, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb23

bb2:                                              ; preds = %bb5
  store i8 0, i8* %_5, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
; invoke rustc_demangle::v0::Printer::eat
  %_9 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 69)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb3
  %_8 = xor i1 %_9, true
  %7 = zext i1 %_8 to i8
  store i8 %7, i8* %_5, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb6
  %8 = load i8, i8* %_5, align 1, !range !2
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb7, label %bb20

bb20:                                             ; preds = %bb4
  %_31 = load i64, i64* %i, align 8
  %10 = bitcast { i64, i64 }* %1 to %"core::result::Result<usize, core::fmt::Error>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<usize, core::fmt::Error>::Ok", %"core::result::Result<usize, core::fmt::Error>::Ok"* %10, i32 0, i32 1
  store i64 %_31, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %12, align 8
  br label %bb22

bb7:                                              ; preds = %bb4
  %_12 = load i64, i64* %i, align 8
  %_11 = icmp ugt i64 %_12, 0
  br i1 %_11, label %bb8, label %bb13

bb13:                                             ; preds = %bb10, %bb7
  %13 = bitcast i64** %_24 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %13, align 8
  %14 = load i64*, i64** %_24, align 8, !nonnull !6
  %15 = bitcast i64* %14 to %"v0::Printer"*
; invoke core::ops::function::Fn::call
  %_22 = invoke zeroext i1 @_ZN4core3ops8function2Fn4call17hd040ae53d8e1b970E({}* nonnull align 1 %f, %"v0::Printer"* align 8 dereferenceable(56) %15)
          to label %bb14 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke rustc_demangle::v0::Printer::print
  %_14 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %16 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_14)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %_13, align 1
  %18 = load i8, i8* %_13, align 1, !range !2
  %19 = trunc i8 %18 to i1
  %_17 = zext i1 %19 to i64
  switch i64 %_17, label %bb11 [
    i64 0, label %bb13
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb10
  unreachable

bb12:                                             ; preds = %bb10
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1174 to %"core::panic::location::Location"*))
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb12
  store { i64, i64 } %20, { i64, i64 }* %1, align 8
  br label %bb21

bb21:                                             ; preds = %bb26, %bb25
  br label %bb22

bb14:                                             ; preds = %bb13
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_22)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %_21, align 1
  %23 = load i8, i8* %_21, align 1, !range !2
  %24 = trunc i8 %23 to i1
  %_26 = zext i1 %24 to i64
  switch i64 %_26, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb15
  unreachable

bb16:                                             ; preds = %bb15
  %25 = load i64, i64* %i, align 8
  %26 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %25, i64 1)
  %_30.0 = extractvalue { i64, i1 } %26, 0
  %_30.1 = extractvalue { i64, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %27, label %panic, label %bb19

bb18:                                             ; preds = %bb15
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %28 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1176 to %"core::panic::location::Location"*))
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb18
  store { i64, i64 } %28, { i64, i64 }* %1, align 8
  br label %bb21

bb22:                                             ; preds = %bb20, %bb21
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %30 = load i64, i64* %29, align 8, !range !5
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = insertvalue { i64, i64 } undef, i64 %30, 0
  %34 = insertvalue { i64, i64 } %33, i64 %32, 1
  ret { i64, i64 } %34

bb19:                                             ; preds = %bb16
  store i64 %_30.0, i64* %i, align 8
  br label %bb1

panic:                                            ; preds = %bb16
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1178 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb24:                                             ; preds = %bb23
  %35 = bitcast { i8*, i32 }* %0 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hb0ded62cbed97e33E(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_24 = alloca i64*, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %i = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  %f = alloca %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1158:37: 1158:66]", align 1
  store i64 0, i64* %i, align 8
  br label %bb1

bb1:                                              ; preds = %bb19, %start
  %_7 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
; invoke core::result::Result<T,E>::is_ok
  %_6 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1ef963d75672bbf7E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_7)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb1
  br i1 %_6, label %bb3, label %bb2

bb23:                                             ; preds = %cleanup
  br label %bb24

cleanup:                                          ; preds = %panic, %bb18, %bb14, %bb13, %bb12, %bb9, %bb8, %bb3, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb23

bb2:                                              ; preds = %bb5
  store i8 0, i8* %_5, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
; invoke rustc_demangle::v0::Printer::eat
  %_9 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 69)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb3
  %_8 = xor i1 %_9, true
  %7 = zext i1 %_8 to i8
  store i8 %7, i8* %_5, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb6
  %8 = load i8, i8* %_5, align 1, !range !2
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb7, label %bb20

bb20:                                             ; preds = %bb4
  %_31 = load i64, i64* %i, align 8
  %10 = bitcast { i64, i64 }* %1 to %"core::result::Result<usize, core::fmt::Error>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<usize, core::fmt::Error>::Ok", %"core::result::Result<usize, core::fmt::Error>::Ok"* %10, i32 0, i32 1
  store i64 %_31, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %12, align 8
  br label %bb22

bb7:                                              ; preds = %bb4
  %_12 = load i64, i64* %i, align 8
  %_11 = icmp ugt i64 %_12, 0
  br i1 %_11, label %bb8, label %bb13

bb13:                                             ; preds = %bb10, %bb7
  %13 = bitcast i64** %_24 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %13, align 8
  %14 = load i64*, i64** %_24, align 8, !nonnull !6
  %15 = bitcast i64* %14 to %"v0::Printer"*
; invoke rustc_demangle::v0::Printer::print_const::{{closure}}
  %_22 = invoke zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h65e5758d942a4008E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1158:37: 1158:66]"* nonnull align 1 %f, %"v0::Printer"* align 8 dereferenceable(56) %15)
          to label %bb14 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke rustc_demangle::v0::Printer::print
  %_14 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %16 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_14)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %_13, align 1
  %18 = load i8, i8* %_13, align 1, !range !2
  %19 = trunc i8 %18 to i1
  %_17 = zext i1 %19 to i64
  switch i64 %_17, label %bb11 [
    i64 0, label %bb13
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb10
  unreachable

bb12:                                             ; preds = %bb10
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1174 to %"core::panic::location::Location"*))
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb12
  store { i64, i64 } %20, { i64, i64 }* %1, align 8
  br label %bb21

bb21:                                             ; preds = %bb26, %bb25
  br label %bb22

bb14:                                             ; preds = %bb13
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_22)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %_21, align 1
  %23 = load i8, i8* %_21, align 1, !range !2
  %24 = trunc i8 %23 to i1
  %_26 = zext i1 %24 to i64
  switch i64 %_26, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb15
  unreachable

bb16:                                             ; preds = %bb15
  %25 = load i64, i64* %i, align 8
  %26 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %25, i64 1)
  %_30.0 = extractvalue { i64, i1 } %26, 0
  %_30.1 = extractvalue { i64, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %27, label %panic, label %bb19

bb18:                                             ; preds = %bb15
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %28 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1176 to %"core::panic::location::Location"*))
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb18
  store { i64, i64 } %28, { i64, i64 }* %1, align 8
  br label %bb21

bb22:                                             ; preds = %bb20, %bb21
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %30 = load i64, i64* %29, align 8, !range !5
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = insertvalue { i64, i64 } undef, i64 %30, 0
  %34 = insertvalue { i64, i64 } %33, i64 %32, 1
  ret { i64, i64 } %34

bb19:                                             ; preds = %bb16
  store i64 %_30.0, i64* %i, align 8
  br label %bb1

panic:                                            ; preds = %bb16
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1178 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb24:                                             ; preds = %bb23
  %35 = bitcast { i8*, i32 }* %0 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hd20fdd11d8a855f4E(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_24 = alloca i64*, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %i = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  %f = alloca %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1177:45: 1177:74]", align 1
  store i64 0, i64* %i, align 8
  br label %bb1

bb1:                                              ; preds = %bb19, %start
  %_7 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
; invoke core::result::Result<T,E>::is_ok
  %_6 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1ef963d75672bbf7E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_7)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb1
  br i1 %_6, label %bb3, label %bb2

bb23:                                             ; preds = %cleanup
  br label %bb24

cleanup:                                          ; preds = %panic, %bb18, %bb14, %bb13, %bb12, %bb9, %bb8, %bb3, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb23

bb2:                                              ; preds = %bb5
  store i8 0, i8* %_5, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
; invoke rustc_demangle::v0::Printer::eat
  %_9 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 69)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb3
  %_8 = xor i1 %_9, true
  %7 = zext i1 %_8 to i8
  store i8 %7, i8* %_5, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb6
  %8 = load i8, i8* %_5, align 1, !range !2
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb7, label %bb20

bb20:                                             ; preds = %bb4
  %_31 = load i64, i64* %i, align 8
  %10 = bitcast { i64, i64 }* %1 to %"core::result::Result<usize, core::fmt::Error>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<usize, core::fmt::Error>::Ok", %"core::result::Result<usize, core::fmt::Error>::Ok"* %10, i32 0, i32 1
  store i64 %_31, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %12, align 8
  br label %bb22

bb7:                                              ; preds = %bb4
  %_12 = load i64, i64* %i, align 8
  %_11 = icmp ugt i64 %_12, 0
  br i1 %_11, label %bb8, label %bb13

bb13:                                             ; preds = %bb10, %bb7
  %13 = bitcast i64** %_24 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %13, align 8
  %14 = load i64*, i64** %_24, align 8, !nonnull !6
  %15 = bitcast i64* %14 to %"v0::Printer"*
; invoke rustc_demangle::v0::Printer::print_const::{{closure}}
  %_22 = invoke zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h026e7b3b45ee2a10E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1177:45: 1177:74]"* nonnull align 1 %f, %"v0::Printer"* align 8 dereferenceable(56) %15)
          to label %bb14 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke rustc_demangle::v0::Printer::print
  %_14 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %16 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_14)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %_13, align 1
  %18 = load i8, i8* %_13, align 1, !range !2
  %19 = trunc i8 %18 to i1
  %_17 = zext i1 %19 to i64
  switch i64 %_17, label %bb11 [
    i64 0, label %bb13
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb10
  unreachable

bb12:                                             ; preds = %bb10
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1174 to %"core::panic::location::Location"*))
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb12
  store { i64, i64 } %20, { i64, i64 }* %1, align 8
  br label %bb21

bb21:                                             ; preds = %bb26, %bb25
  br label %bb22

bb14:                                             ; preds = %bb13
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_22)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %_21, align 1
  %23 = load i8, i8* %_21, align 1, !range !2
  %24 = trunc i8 %23 to i1
  %_26 = zext i1 %24 to i64
  switch i64 %_26, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb15
  unreachable

bb16:                                             ; preds = %bb15
  %25 = load i64, i64* %i, align 8
  %26 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %25, i64 1)
  %_30.0 = extractvalue { i64, i1 } %26, 0
  %_30.1 = extractvalue { i64, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %27, label %panic, label %bb19

bb18:                                             ; preds = %bb15
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %28 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1176 to %"core::panic::location::Location"*))
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb18
  store { i64, i64 } %28, { i64, i64 }* %1, align 8
  br label %bb21

bb22:                                             ; preds = %bb20, %bb21
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %30 = load i64, i64* %29, align 8, !range !5
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = insertvalue { i64, i64 } undef, i64 %30, 0
  %34 = insertvalue { i64, i64 } %33, i64 %32, 1
  ret { i64, i64 } %34

bb19:                                             ; preds = %bb16
  store i64 %_30.0, i64* %i, align 8
  br label %bb1

panic:                                            ; preds = %bb16
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1178 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb24:                                             ; preds = %bb23
  %35 = bitcast { i8*, i32 }* %0 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hfc46b8b09216015cE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1) unnamed_addr #0 personality i32 (...)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_24 = alloca i64*, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %i = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  %f = alloca %"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1183:29: 1189:30]", align 1
  store i64 0, i64* %i, align 8
  br label %bb1

bb1:                                              ; preds = %bb19, %start
  %_7 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
; invoke core::result::Result<T,E>::is_ok
  %_6 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1ef963d75672bbf7E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_7)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb1
  br i1 %_6, label %bb3, label %bb2

bb23:                                             ; preds = %cleanup
  br label %bb24

cleanup:                                          ; preds = %panic, %bb18, %bb14, %bb13, %bb12, %bb9, %bb8, %bb3, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb23

bb2:                                              ; preds = %bb5
  store i8 0, i8* %_5, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
; invoke rustc_demangle::v0::Printer::eat
  %_9 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 69)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb3
  %_8 = xor i1 %_9, true
  %7 = zext i1 %_8 to i8
  store i8 %7, i8* %_5, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb6
  %8 = load i8, i8* %_5, align 1, !range !2
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb7, label %bb20

bb20:                                             ; preds = %bb4
  %_31 = load i64, i64* %i, align 8
  %10 = bitcast { i64, i64 }* %1 to %"core::result::Result<usize, core::fmt::Error>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<usize, core::fmt::Error>::Ok", %"core::result::Result<usize, core::fmt::Error>::Ok"* %10, i32 0, i32 1
  store i64 %_31, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %12, align 8
  br label %bb22

bb7:                                              ; preds = %bb4
  %_12 = load i64, i64* %i, align 8
  %_11 = icmp ugt i64 %_12, 0
  br i1 %_11, label %bb8, label %bb13

bb13:                                             ; preds = %bb10, %bb7
  %13 = bitcast i64** %_24 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %13, align 8
  %14 = load i64*, i64** %_24, align 8, !nonnull !6
  %15 = bitcast i64* %14 to %"v0::Printer"*
; invoke rustc_demangle::v0::Printer::print_const::{{closure}}
  %_22 = invoke zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h5eb5129954e2132cE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1183:29: 1189:30]"* nonnull align 1 %f, %"v0::Printer"* align 8 dereferenceable(56) %15)
          to label %bb14 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke rustc_demangle::v0::Printer::print
  %_14 = invoke zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %sep.0, i64 %sep.1)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %16 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_14)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %_13, align 1
  %18 = load i8, i8* %_13, align 1, !range !2
  %19 = trunc i8 %18 to i1
  %_17 = zext i1 %19 to i64
  switch i64 %_17, label %bb11 [
    i64 0, label %bb13
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb10
  unreachable

bb12:                                             ; preds = %bb10
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1174 to %"core::panic::location::Location"*))
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb12
  store { i64, i64 } %20, { i64, i64 }* %1, align 8
  br label %bb21

bb21:                                             ; preds = %bb26, %bb25
  br label %bb22

bb14:                                             ; preds = %bb13
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_22)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %_21, align 1
  %23 = load i8, i8* %_21, align 1, !range !2
  %24 = trunc i8 %23 to i1
  %_26 = zext i1 %24 to i64
  switch i64 %_26, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb15
  unreachable

bb16:                                             ; preds = %bb15
  %25 = load i64, i64* %i, align 8
  %26 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %25, i64 1)
  %_30.0 = extractvalue { i64, i1 } %26, 0
  %_30.1 = extractvalue { i64, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %27, label %panic, label %bb19

bb18:                                             ; preds = %bb15
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %28 = invoke { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf67854dcb6298083E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1176 to %"core::panic::location::Location"*))
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb18
  store { i64, i64 } %28, { i64, i64 }* %1, align 8
  br label %bb21

bb22:                                             ; preds = %bb20, %bb21
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %30 = load i64, i64* %29, align 8, !range !5
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = insertvalue { i64, i64 } undef, i64 %30, 0
  %34 = insertvalue { i64, i64 } %33, i64 %32, 1
  ret { i64, i64 } %34

bb19:                                             ; preds = %bb16
  store i64 %_30.0, i64* %i, align 8
  br label %bb1

panic:                                            ; preds = %bb16
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1178 to %"core::panic::location::Location"*)) #12
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb24:                                             ; preds = %bb23
  %35 = bitcast { i8*, i32 }* %0 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1
  resume { i8*, i32 } %40
}

; rustc_demangle::v0::Printer::print_path
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h66709c17d7c9cba4E(%"v0::Printer"* align 8 dereferenceable(56) %self, i1 zeroext %0) unnamed_addr #0 {
start:
  %1 = alloca i128, align 8
  %2 = alloca i128, align 8
  %3 = alloca i64, align 8
  %4 = alloca i128, align 8
  %_414 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_405 = alloca i8, align 1
  %err10 = alloca i8, align 1
  %_398 = alloca i8*, align 8
  %_395 = alloca i8, align 1
  %_388 = alloca i8, align 1
  %_379 = alloca { i64, i64 }, align 8
  %_372 = alloca i8, align 1
  %_365 = alloca i8, align 1
  %_356 = alloca i8, align 1
  %_349 = alloca i8, align 1
  %_342 = alloca i8, align 1
  %_335 = alloca i8, align 1
  %_327 = alloca i8, align 1
  %_320 = alloca i8, align 1
  %_314 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_305 = alloca i8, align 1
  %err9 = alloca i8, align 1
  %_300 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %_292 = alloca %"v0::Ident", align 8
  %_289 = alloca i8, align 1
  %_282 = alloca i8, align 1
  %_275 = alloca i8, align 1
  %_268 = alloca i8, align 1
  %_260 = alloca i8, align 1
  %_253 = alloca i8, align 1
  %_248 = alloca %"v0::Ident", align 8
  %_245 = alloca i8, align 1
  %_238 = alloca i8, align 1
  %_231 = alloca i8, align 1
  %_223 = alloca i8, align 1
  %_216 = alloca i8, align 1
  %_209 = alloca i8, align 1
  %_202 = alloca i8, align 1
  %_197 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_188 = alloca i8, align 1
  %err8 = alloca i8, align 1
  %x7 = alloca %"v0::Ident", align 8
  %_183 = alloca %"core::result::Result<v0::Ident, v0::ParseError>", align 8
  %name6 = alloca %"v0::Ident", align 8
  %_177 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_168 = alloca i8, align 1
  %err5 = alloca i8, align 1
  %_163 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %_153 = alloca i8, align 1
  %_143 = alloca i8, align 1
  %_140 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_131 = alloca i8, align 1
  %err4 = alloca i8, align 1
  %_126 = alloca %"core::result::Result<core::option::Option<char>, v0::ParseError>", align 4
  %ns = alloca i32, align 4
  %_114 = alloca i8, align 1
  %_105 = alloca i8, align 1
  %_96 = alloca i8, align 1
  %_85 = alloca %"v0::Ident", align 8
  %_82 = alloca i8, align 1
  %_79 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_70 = alloca i8, align 1
  %err3 = alloca i8, align 1
  %x = alloca %"v0::Ident", align 8
  %_65 = alloca %"core::result::Result<v0::Ident, v0::ParseError>", align 8
  %name = alloca %"v0::Ident", align 8
  %_59 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_50 = alloca i8, align 1
  %err2 = alloca i8, align 1
  %_45 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %dis = alloca i64, align 8
  %_39 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_30 = alloca i8, align 1
  %err1 = alloca i8, align 1
  %_25 = alloca { i8, i8 }, align 1
  %_19 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_10 = alloca i8, align 1
  %err = alloca i8, align 1
  %_5 = alloca i8, align 1
  %5 = alloca i8, align 1
  %in_value = alloca i8, align 1
  %6 = zext i1 %0 to i8
  store i8 %6, i8* %in_value, align 1
  %7 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %8 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %7 to i8*
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = trunc i8 %9 to i1
  %_3 = zext i1 %10 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %11 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %12 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %11 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %12, i32 0, i32 1
; call rustc_demangle::v0::Parser::push_depth
  %13 = call i8 @_ZN14rustc_demangle2v06Parser10push_depth17hac46607ed685a51dE(%"v0::Parser"* align 8 dereferenceable(32) %parser), !range !7
  store i8 %13, i8* %_5, align 1
  br label %bb4

bb1:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %14 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %5, align 1
  br label %bb278

bb278:                                            ; preds = %bb277, %bb76, %bb72, %bb67, %bb59, %bb52, %bb54, %bb42, %bb39, %bb41, %bb29, %bb197, %bb193, %bb182, %bb178, %bb173, %bb167, %bb163, %bb142, %bb147, %bb151, %bb136, %bb126, %bb128, %bb116, %bb113, %bb115, %bb103, %bb101, %bb95, %bb88, %bb90, %bb78, %bb238, %bb233, %bb229, %bb223, %bb218, %bb210, %bb212, %bb200, %bb264, %bb260, %bb255, %bb249, %bb244, %bb269, %bb273, %bb275, %bb24, %bb26, %bb14, %bb11, %bb13, %bb1
  %16 = load i8, i8* %5, align 1, !range !2
  %17 = trunc i8 %16 to i1
  ret i1 %17

bb4:                                              ; preds = %bb3
  %18 = load i8, i8* %_5, align 1, !range !7
  %19 = sub i8 %18, 2
  %20 = icmp eq i8 %19, 0
  %_7 = select i1 %20, i64 0, i64 1
  switch i64 %_7, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %21 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %22 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %21 to i8*
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = trunc i8 %23 to i1
  %_23 = zext i1 %24 to i64
  switch i64 %_23, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb5:                                              ; preds = %bb4
  %25 = load i8, i8* %_5, align 1, !range !2
  %26 = trunc i8 %25 to i1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %err, align 1
; call rustc_demangle::v0::ParseError::message
  %28 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %28, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %28, 1
  br label %bb8

bb8:                                              ; preds = %bb5
; call rustc_demangle::v0::Printer::print
  %_11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_13.0, i64 %_13.1)
  br label %bb9

bb9:                                              ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %29 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_11)
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %_10, align 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %31 = load i8, i8* %_10, align 1, !range !2
  %32 = trunc i8 %31 to i1
  %_15 = zext i1 %32 to i64
  switch i64 %_15, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %33 = load i8, i8* %err, align 1, !range !2
  %_20 = trunc i8 %33 to i1
  %34 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_19 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %35 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %34, i32 0, i32 1
  %36 = zext i1 %_20 to i8
  store i8 %36, i8* %35, align 1
  %37 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_19 to i8*
  store i8 1, i8* %37, align 8
  %38 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %39 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %38 to i8*
  %40 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 40, i1 false)
  store i8 0, i8* %5, align 1
  br label %bb278

bb13:                                             ; preds = %bb10
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %41 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1181 to %"core::panic::location::Location"*))
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %5, align 1
  br label %bb278

bb15:                                             ; preds = %bb7
  unreachable

bb16:                                             ; preds = %bb7
  %43 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %44 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %43 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser11 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %44, i32 0, i32 1
; call rustc_demangle::v0::Parser::next
  %45 = call { i8, i8 } @_ZN14rustc_demangle2v06Parser4next17hffa0ce9c0a6f9798E(%"v0::Parser"* align 8 dereferenceable(32) %parser11)
  store { i8, i8 } %45, { i8, i8 }* %_25, align 1
  br label %bb17

bb14:                                             ; preds = %bb7
; call rustc_demangle::v0::Printer::print
  %46 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %5, align 1
  br label %bb278

bb17:                                             ; preds = %bb16
  %48 = bitcast { i8, i8 }* %_25 to i8*
  %49 = load i8, i8* %48, align 1, !range !2
  %50 = trunc i8 %49 to i1
  %_27 = zext i1 %50 to i64
  switch i64 %_27, label %bb19 [
    i64 0, label %bb20
    i64 1, label %bb18
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb20:                                             ; preds = %bb17
  %51 = bitcast { i8, i8 }* %_25 to %"core::result::Result<u8, v0::ParseError>::Ok"*
  %52 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Ok", %"core::result::Result<u8, v0::ParseError>::Ok"* %51, i32 0, i32 1
  %x12 = load i8, i8* %52, align 1
  switch i8 %x12, label %bb27 [
    i8 67, label %bb28
    i8 78, label %bb77
    i8 77, label %bb198
    i8 88, label %bb198
    i8 89, label %bb198
    i8 73, label %bb239
    i8 66, label %bb265
  ]

bb18:                                             ; preds = %bb17
  %53 = bitcast { i8, i8 }* %_25 to %"core::result::Result<u8, v0::ParseError>::Err"*
  %54 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Err", %"core::result::Result<u8, v0::ParseError>::Err"* %53, i32 0, i32 1
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = trunc i8 %55 to i1
  %57 = zext i1 %56 to i8
  store i8 %57, i8* %err1, align 1
; call rustc_demangle::v0::ParseError::message
  %58 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err1)
  %_33.0 = extractvalue { [0 x i8]*, i64 } %58, 0
  %_33.1 = extractvalue { [0 x i8]*, i64 } %58, 1
  br label %bb21

bb21:                                             ; preds = %bb18
; call rustc_demangle::v0::Printer::print
  %_31 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_33.0, i64 %_33.1)
  br label %bb22

bb22:                                             ; preds = %bb21
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %59 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_31)
  %60 = zext i1 %59 to i8
  store i8 %60, i8* %_30, align 1
  br label %bb23

bb23:                                             ; preds = %bb22
  %61 = load i8, i8* %_30, align 1, !range !2
  %62 = trunc i8 %61 to i1
  %_35 = zext i1 %62 to i64
  switch i64 %_35, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ]

bb25:                                             ; preds = %bb23
  unreachable

bb24:                                             ; preds = %bb23
  %63 = load i8, i8* %err1, align 1, !range !2
  %_40 = trunc i8 %63 to i1
  %64 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_39 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %65 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %64, i32 0, i32 1
  %66 = zext i1 %_40 to i8
  store i8 %66, i8* %65, align 1
  %67 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_39 to i8*
  store i8 1, i8* %67, align 8
  %68 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %69 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %68 to i8*
  %70 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 40, i1 false)
  store i8 0, i8* %5, align 1
  br label %bb278

bb26:                                             ; preds = %bb23
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %71 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1184 to %"core::panic::location::Location"*))
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %5, align 1
  br label %bb278

bb27:                                             ; preds = %bb20
  store i8 0, i8* %err10, align 1
; call rustc_demangle::v0::ParseError::message
  %73 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err10)
  %_408.0 = extractvalue { [0 x i8]*, i64 } %73, 0
  %_408.1 = extractvalue { [0 x i8]*, i64 } %73, 1
  br label %bb270

bb28:                                             ; preds = %bb20
  %74 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %75 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %74 to i8*
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = trunc i8 %76 to i1
  %_43 = zext i1 %77 to i64
  switch i64 %_43, label %bb30 [
    i64 0, label %bb31
    i64 1, label %bb29
  ]

bb77:                                             ; preds = %bb20
  %78 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %79 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %78 to i8*
  %80 = load i8, i8* %79, align 8, !range !2
  %81 = trunc i8 %80 to i1
  %_124 = zext i1 %81 to i64
  switch i64 %_124, label %bb79 [
    i64 0, label %bb80
    i64 1, label %bb78
  ]

bb198:                                            ; preds = %bb20, %bb20, %bb20
  %82 = icmp eq i8 %x12, 89
  br i1 %82, label %bb213, label %bb199

bb239:                                            ; preds = %bb20
  %83 = load i8, i8* %in_value, align 1, !range !2
  %_359 = trunc i8 %83 to i1
; call rustc_demangle::v0::Printer::print_path
  %_357 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h66709c17d7c9cba4E(%"v0::Printer"* align 8 dereferenceable(56) %self, i1 zeroext %_359)
  br label %bb240

bb265:                                            ; preds = %bb20
  store i8* %in_value, i8** %_398, align 8
  %84 = load i8*, i8** %_398, align 8, !nonnull !6
; call rustc_demangle::v0::Printer::print_backref
  %_396 = call zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17ha5a50e9743381614E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8* align 1 dereferenceable(1) %84)
  br label %bb266

bb270:                                            ; preds = %bb27
; call rustc_demangle::v0::Printer::print
  %_406 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_408.0, i64 %_408.1)
  br label %bb271

bb271:                                            ; preds = %bb270
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %85 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_406)
  %86 = zext i1 %85 to i8
  store i8 %86, i8* %_405, align 1
  br label %bb272

bb272:                                            ; preds = %bb271
  %87 = load i8, i8* %_405, align 1, !range !2
  %88 = trunc i8 %87 to i1
  %_410 = zext i1 %88 to i64
  switch i64 %_410, label %bb274 [
    i64 0, label %bb273
    i64 1, label %bb275
  ]

bb274:                                            ; preds = %bb272
  unreachable

bb273:                                            ; preds = %bb272
  %89 = load i8, i8* %err10, align 1, !range !2
  %_415 = trunc i8 %89 to i1
  %90 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_414 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %91 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %90, i32 0, i32 1
  %92 = zext i1 %_415 to i8
  store i8 %92, i8* %91, align 1
  %93 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_414 to i8*
  store i8 1, i8* %93, align 8
  %94 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %95 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %94 to i8*
  %96 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_414 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 40, i1 false)
  store i8 0, i8* %5, align 1
  br label %bb278

bb275:                                            ; preds = %bb272
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %97 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1186 to %"core::panic::location::Location"*))
  %98 = zext i1 %97 to i8
  store i8 %98, i8* %5, align 1
  br label %bb278

bb266:                                            ; preds = %bb265
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %99 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_396)
  %100 = zext i1 %99 to i8
  store i8 %100, i8* %_395, align 1
  br label %bb267

bb267:                                            ; preds = %bb266
  %101 = load i8, i8* %_395, align 1, !range !2
  %102 = trunc i8 %101 to i1
  %_400 = zext i1 %102 to i64
  switch i64 %_400, label %bb268 [
    i64 0, label %bb276
    i64 1, label %bb269
  ]

bb268:                                            ; preds = %bb267
  unreachable

bb276:                                            ; preds = %bb74, %bb61, %bb57, %bb195, %bb185, %bb180, %bb236, %bb262, %bb267
; call rustc_demangle::v0::Printer::pop_depth
  call void @_ZN14rustc_demangle2v07Printer9pop_depth17haf2f855b2c6bd27fE(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb277

bb269:                                            ; preds = %bb267
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %103 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1188 to %"core::panic::location::Location"*))
  %104 = zext i1 %103 to i8
  store i8 %104, i8* %5, align 1
  br label %bb278

bb240:                                            ; preds = %bb239
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %105 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_357)
  %106 = zext i1 %105 to i8
  store i8 %106, i8* %_356, align 1
  br label %bb241

bb241:                                            ; preds = %bb240
  %107 = load i8, i8* %_356, align 1, !range !2
  %108 = trunc i8 %107 to i1
  %_360 = zext i1 %108 to i64
  switch i64 %_360, label %bb243 [
    i64 0, label %bb242
    i64 1, label %bb244
  ]

bb243:                                            ; preds = %bb241
  unreachable

bb242:                                            ; preds = %bb241
  %109 = load i8, i8* %in_value, align 1, !range !2
  %_364 = trunc i8 %109 to i1
  br i1 %_364, label %bb245, label %bb250

bb244:                                            ; preds = %bb241
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %110 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1190 to %"core::panic::location::Location"*))
  %111 = zext i1 %110 to i8
  store i8 %111, i8* %5, align 1
  br label %bb278

bb250:                                            ; preds = %bb247, %bb242
; call rustc_demangle::v0::Printer::print
  %_373 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1419 to [0 x i8]*), i64 1)
  br label %bb251

bb245:                                            ; preds = %bb242
; call rustc_demangle::v0::Printer::print
  %_366 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1257 to [0 x i8]*), i64 2)
  br label %bb246

bb246:                                            ; preds = %bb245
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %112 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_366)
  %113 = zext i1 %112 to i8
  store i8 %113, i8* %_365, align 1
  br label %bb247

bb247:                                            ; preds = %bb246
  %114 = load i8, i8* %_365, align 1, !range !2
  %115 = trunc i8 %114 to i1
  %_368 = zext i1 %115 to i64
  switch i64 %_368, label %bb248 [
    i64 0, label %bb250
    i64 1, label %bb249
  ]

bb248:                                            ; preds = %bb247
  unreachable

bb249:                                            ; preds = %bb247
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %116 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1193 to %"core::panic::location::Location"*))
  %117 = zext i1 %116 to i8
  store i8 %117, i8* %5, align 1
  br label %bb278

bb251:                                            ; preds = %bb250
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %118 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_373)
  %119 = zext i1 %118 to i8
  store i8 %119, i8* %_372, align 1
  br label %bb252

bb252:                                            ; preds = %bb251
  %120 = load i8, i8* %_372, align 1, !range !2
  %121 = trunc i8 %120 to i1
  %_375 = zext i1 %121 to i64
  switch i64 %_375, label %bb254 [
    i64 0, label %bb253
    i64 1, label %bb255
  ]

bb254:                                            ; preds = %bb252
  unreachable

bb253:                                            ; preds = %bb252
; call rustc_demangle::v0::Printer::print_sep_list
  %122 = call { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h8f84a8329fd6d9daE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1494 to [0 x i8]*), i64 2)
  %_380.0 = extractvalue { i64, i64 } %122, 0
  %_380.1 = extractvalue { i64, i64 } %122, 1
  br label %bb256

bb255:                                            ; preds = %bb252
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %123 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1196 to %"core::panic::location::Location"*))
  %124 = zext i1 %123 to i8
  store i8 %124, i8* %5, align 1
  br label %bb278

bb256:                                            ; preds = %bb253
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %125 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd46a3fe531d61413E"(i64 %_380.0, i64 %_380.1)
  store { i64, i64 } %125, { i64, i64 }* %_379, align 8
  br label %bb257

bb257:                                            ; preds = %bb256
  %126 = bitcast { i64, i64 }* %_379 to i64*
  %_384 = load i64, i64* %126, align 8, !range !5
  switch i64 %_384, label %bb259 [
    i64 0, label %bb258
    i64 1, label %bb260
  ]

bb259:                                            ; preds = %bb257
  unreachable

bb258:                                            ; preds = %bb257
  %127 = bitcast { i64, i64 }* %_379 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"*
  %128 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"* %127, i32 0, i32 1
  %val = load i64, i64* %128, align 8
; call rustc_demangle::v0::Printer::print
  %_389 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1435 to [0 x i8]*), i64 1)
  br label %bb261

bb260:                                            ; preds = %bb257
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %129 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1199 to %"core::panic::location::Location"*))
  %130 = zext i1 %129 to i8
  store i8 %130, i8* %5, align 1
  br label %bb278

bb261:                                            ; preds = %bb258
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %131 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_389)
  %132 = zext i1 %131 to i8
  store i8 %132, i8* %_388, align 1
  br label %bb262

bb262:                                            ; preds = %bb261
  %133 = load i8, i8* %_388, align 1, !range !2
  %134 = trunc i8 %133 to i1
  %_391 = zext i1 %134 to i64
  switch i64 %_391, label %bb263 [
    i64 0, label %bb276
    i64 1, label %bb264
  ]

bb263:                                            ; preds = %bb262
  unreachable

bb264:                                            ; preds = %bb262
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %135 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1202 to %"core::panic::location::Location"*))
  %136 = zext i1 %135 to i8
  store i8 %136, i8* %5, align 1
  br label %bb278

bb213:                                            ; preds = %bb206, %bb198
; call rustc_demangle::v0::Printer::print
  %_321 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1419 to [0 x i8]*), i64 1)
  br label %bb214

bb199:                                            ; preds = %bb198
  %137 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %138 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %137 to i8*
  %139 = load i8, i8* %138, align 8, !range !2
  %140 = trunc i8 %139 to i1
  %_298 = zext i1 %140 to i64
  switch i64 %_298, label %bb201 [
    i64 0, label %bb202
    i64 1, label %bb200
  ]

bb201:                                            ; preds = %bb199
  unreachable

bb202:                                            ; preds = %bb199
  %141 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %142 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %141 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser13 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %142, i32 0, i32 1
; call rustc_demangle::v0::Parser::disambiguator
  %143 = call i128 @_ZN14rustc_demangle2v06Parser13disambiguator17hcecc09e50a8e1526E(%"v0::Parser"* align 8 dereferenceable(32) %parser13)
  store i128 %143, i128* %4, align 8
  %144 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_300 to i8*
  %145 = bitcast i128* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 16, i1 false)
  br label %bb203

bb200:                                            ; preds = %bb199
; call rustc_demangle::v0::Printer::print
  %146 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %147 = zext i1 %146 to i8
  store i8 %147, i8* %5, align 1
  br label %bb278

bb203:                                            ; preds = %bb202
  %148 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_300 to i8*
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = trunc i8 %149 to i1
  %_302 = zext i1 %150 to i64
  switch i64 %_302, label %bb205 [
    i64 0, label %bb206
    i64 1, label %bb204
  ]

bb205:                                            ; preds = %bb203
  unreachable

bb206:                                            ; preds = %bb203
  %151 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_300 to %"core::result::Result<u64, v0::ParseError>::Ok"*
  %152 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Ok", %"core::result::Result<u64, v0::ParseError>::Ok"* %151, i32 0, i32 1
  %x14 = load i64, i64* %152, align 8
; call rustc_demangle::v0::Printer::skipping_printing
  call void @_ZN14rustc_demangle2v07Printer17skipping_printing17hddcc7f2833ef1143E(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb213

bb204:                                            ; preds = %bb203
  %153 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_300 to %"core::result::Result<u64, v0::ParseError>::Err"*
  %154 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Err", %"core::result::Result<u64, v0::ParseError>::Err"* %153, i32 0, i32 1
  %155 = load i8, i8* %154, align 1, !range !2
  %156 = trunc i8 %155 to i1
  %157 = zext i1 %156 to i8
  store i8 %157, i8* %err9, align 1
; call rustc_demangle::v0::ParseError::message
  %158 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err9)
  %_308.0 = extractvalue { [0 x i8]*, i64 } %158, 0
  %_308.1 = extractvalue { [0 x i8]*, i64 } %158, 1
  br label %bb207

bb207:                                            ; preds = %bb204
; call rustc_demangle::v0::Printer::print
  %_306 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_308.0, i64 %_308.1)
  br label %bb208

bb208:                                            ; preds = %bb207
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %159 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_306)
  %160 = zext i1 %159 to i8
  store i8 %160, i8* %_305, align 1
  br label %bb209

bb209:                                            ; preds = %bb208
  %161 = load i8, i8* %_305, align 1, !range !2
  %162 = trunc i8 %161 to i1
  %_310 = zext i1 %162 to i64
  switch i64 %_310, label %bb211 [
    i64 0, label %bb210
    i64 1, label %bb212
  ]

bb211:                                            ; preds = %bb209
  unreachable

bb210:                                            ; preds = %bb209
  %163 = load i8, i8* %err9, align 1, !range !2
  %_315 = trunc i8 %163 to i1
  %164 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_314 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %165 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %164, i32 0, i32 1
  %166 = zext i1 %_315 to i8
  store i8 %166, i8* %165, align 1
  %167 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_314 to i8*
  store i8 1, i8* %167, align 8
  %168 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %169 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %168 to i8*
  %170 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_314 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 40, i1 false)
  store i8 0, i8* %5, align 1
  br label %bb278

bb212:                                            ; preds = %bb209
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %171 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1205 to %"core::panic::location::Location"*))
  %172 = zext i1 %171 to i8
  store i8 %172, i8* %5, align 1
  br label %bb278

bb214:                                            ; preds = %bb213
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %173 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_321)
  %174 = zext i1 %173 to i8
  store i8 %174, i8* %_320, align 1
  br label %bb215

bb215:                                            ; preds = %bb214
  %175 = load i8, i8* %_320, align 1, !range !2
  %176 = trunc i8 %175 to i1
  %_323 = zext i1 %176 to i64
  switch i64 %_323, label %bb217 [
    i64 0, label %bb216
    i64 1, label %bb218
  ]

bb217:                                            ; preds = %bb215
  unreachable

bb216:                                            ; preds = %bb215
; call rustc_demangle::v0::Printer::print_type
  %_328 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17hd30efff67a15e4baE(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb219

bb218:                                            ; preds = %bb215
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %177 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1208 to %"core::panic::location::Location"*))
  %178 = zext i1 %177 to i8
  store i8 %178, i8* %5, align 1
  br label %bb278

bb219:                                            ; preds = %bb216
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %179 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_328)
  %180 = zext i1 %179 to i8
  store i8 %180, i8* %_327, align 1
  br label %bb220

bb220:                                            ; preds = %bb219
  %181 = load i8, i8* %_327, align 1, !range !2
  %182 = trunc i8 %181 to i1
  %_330 = zext i1 %182 to i64
  switch i64 %_330, label %bb222 [
    i64 0, label %bb221
    i64 1, label %bb223
  ]

bb222:                                            ; preds = %bb220
  unreachable

bb221:                                            ; preds = %bb220
  %183 = icmp eq i8 %x12, 77
  br i1 %183, label %bb234, label %bb224

bb223:                                            ; preds = %bb220
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %184 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1210 to %"core::panic::location::Location"*))
  %185 = zext i1 %184 to i8
  store i8 %185, i8* %5, align 1
  br label %bb278

bb234:                                            ; preds = %bb231, %bb221
; call rustc_demangle::v0::Printer::print
  %_350 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1435 to [0 x i8]*), i64 1)
  br label %bb235

bb224:                                            ; preds = %bb221
; call rustc_demangle::v0::Printer::print
  %_336 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1211 to [0 x i8]*), i64 4)
  br label %bb225

bb225:                                            ; preds = %bb224
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %186 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_336)
  %187 = zext i1 %186 to i8
  store i8 %187, i8* %_335, align 1
  br label %bb226

bb226:                                            ; preds = %bb225
  %188 = load i8, i8* %_335, align 1, !range !2
  %189 = trunc i8 %188 to i1
  %_338 = zext i1 %189 to i64
  switch i64 %_338, label %bb228 [
    i64 0, label %bb227
    i64 1, label %bb229
  ]

bb228:                                            ; preds = %bb226
  unreachable

bb227:                                            ; preds = %bb226
; call rustc_demangle::v0::Printer::print_path
  %_343 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h66709c17d7c9cba4E(%"v0::Printer"* align 8 dereferenceable(56) %self, i1 zeroext false)
  br label %bb230

bb229:                                            ; preds = %bb226
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %190 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1213 to %"core::panic::location::Location"*))
  %191 = zext i1 %190 to i8
  store i8 %191, i8* %5, align 1
  br label %bb278

bb230:                                            ; preds = %bb227
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %192 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_343)
  %193 = zext i1 %192 to i8
  store i8 %193, i8* %_342, align 1
  br label %bb231

bb231:                                            ; preds = %bb230
  %194 = load i8, i8* %_342, align 1, !range !2
  %195 = trunc i8 %194 to i1
  %_345 = zext i1 %195 to i64
  switch i64 %_345, label %bb232 [
    i64 0, label %bb234
    i64 1, label %bb233
  ]

bb232:                                            ; preds = %bb231
  unreachable

bb233:                                            ; preds = %bb231
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %196 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1215 to %"core::panic::location::Location"*))
  %197 = zext i1 %196 to i8
  store i8 %197, i8* %5, align 1
  br label %bb278

bb235:                                            ; preds = %bb234
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %198 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_350)
  %199 = zext i1 %198 to i8
  store i8 %199, i8* %_349, align 1
  br label %bb236

bb236:                                            ; preds = %bb235
  %200 = load i8, i8* %_349, align 1, !range !2
  %201 = trunc i8 %200 to i1
  %_352 = zext i1 %201 to i64
  switch i64 %_352, label %bb237 [
    i64 0, label %bb276
    i64 1, label %bb238
  ]

bb237:                                            ; preds = %bb236
  unreachable

bb238:                                            ; preds = %bb236
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %202 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1218 to %"core::panic::location::Location"*))
  %203 = zext i1 %202 to i8
  store i8 %203, i8* %5, align 1
  br label %bb278

bb79:                                             ; preds = %bb77
  unreachable

bb80:                                             ; preds = %bb77
  %204 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %205 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %204 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser15 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %205, i32 0, i32 1
; call rustc_demangle::v0::Parser::namespace
  %206 = call i64 @_ZN14rustc_demangle2v06Parser9namespace17h3e49aa7fc810456eE(%"v0::Parser"* align 8 dereferenceable(32) %parser15)
  store i64 %206, i64* %3, align 8
  %207 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %_126 to i8*
  %208 = bitcast i64* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 8 %208, i64 8, i1 false)
  br label %bb81

bb78:                                             ; preds = %bb77
; call rustc_demangle::v0::Printer::print
  %209 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %210 = zext i1 %209 to i8
  store i8 %210, i8* %5, align 1
  br label %bb278

bb81:                                             ; preds = %bb80
  %211 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %_126 to i8*
  %212 = load i8, i8* %211, align 4, !range !2
  %213 = trunc i8 %212 to i1
  %_128 = zext i1 %213 to i64
  switch i64 %_128, label %bb83 [
    i64 0, label %bb84
    i64 1, label %bb82
  ]

bb83:                                             ; preds = %bb81
  unreachable

bb84:                                             ; preds = %bb81
  %214 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %_126 to %"core::result::Result<core::option::Option<char>, v0::ParseError>::Ok"*
  %215 = getelementptr inbounds %"core::result::Result<core::option::Option<char>, v0::ParseError>::Ok", %"core::result::Result<core::option::Option<char>, v0::ParseError>::Ok"* %214, i32 0, i32 1
  %x16 = load i32, i32* %215, align 4, !range !4
  store i32 %x16, i32* %ns, align 4
  %216 = load i8, i8* %in_value, align 1, !range !2
  %_146 = trunc i8 %216 to i1
; call rustc_demangle::v0::Printer::print_path
  %_144 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h66709c17d7c9cba4E(%"v0::Printer"* align 8 dereferenceable(56) %self, i1 zeroext %_146)
  br label %bb91

bb82:                                             ; preds = %bb81
  %217 = bitcast %"core::result::Result<core::option::Option<char>, v0::ParseError>"* %_126 to %"core::result::Result<core::option::Option<char>, v0::ParseError>::Err"*
  %218 = getelementptr inbounds %"core::result::Result<core::option::Option<char>, v0::ParseError>::Err", %"core::result::Result<core::option::Option<char>, v0::ParseError>::Err"* %217, i32 0, i32 1
  %219 = load i8, i8* %218, align 1, !range !2
  %220 = trunc i8 %219 to i1
  %221 = zext i1 %220 to i8
  store i8 %221, i8* %err4, align 1
; call rustc_demangle::v0::ParseError::message
  %222 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err4)
  %_134.0 = extractvalue { [0 x i8]*, i64 } %222, 0
  %_134.1 = extractvalue { [0 x i8]*, i64 } %222, 1
  br label %bb85

bb85:                                             ; preds = %bb82
; call rustc_demangle::v0::Printer::print
  %_132 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_134.0, i64 %_134.1)
  br label %bb86

bb86:                                             ; preds = %bb85
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %223 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_132)
  %224 = zext i1 %223 to i8
  store i8 %224, i8* %_131, align 1
  br label %bb87

bb87:                                             ; preds = %bb86
  %225 = load i8, i8* %_131, align 1, !range !2
  %226 = trunc i8 %225 to i1
  %_136 = zext i1 %226 to i64
  switch i64 %_136, label %bb89 [
    i64 0, label %bb88
    i64 1, label %bb90
  ]

bb89:                                             ; preds = %bb87
  unreachable

bb88:                                             ; preds = %bb87
  %227 = load i8, i8* %err4, align 1, !range !2
  %_141 = trunc i8 %227 to i1
  %228 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_140 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %229 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %228, i32 0, i32 1
  %230 = zext i1 %_141 to i8
  store i8 %230, i8* %229, align 1
  %231 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_140 to i8*
  store i8 1, i8* %231, align 8
  %232 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %233 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %232 to i8*
  %234 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 40, i1 false)
  store i8 0, i8* %5, align 1
  br label %bb278

bb90:                                             ; preds = %bb87
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %235 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1221 to %"core::panic::location::Location"*))
  %236 = zext i1 %235 to i8
  store i8 %236, i8* %5, align 1
  br label %bb278

bb91:                                             ; preds = %bb84
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %237 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_144)
  %238 = zext i1 %237 to i8
  store i8 %238, i8* %_143, align 1
  br label %bb92

bb92:                                             ; preds = %bb91
  %239 = load i8, i8* %_143, align 1, !range !2
  %240 = trunc i8 %239 to i1
  %_147 = zext i1 %240 to i64
  switch i64 %_147, label %bb94 [
    i64 0, label %bb93
    i64 1, label %bb95
  ]

bb94:                                             ; preds = %bb92
  unreachable

bb93:                                             ; preds = %bb92
  %_152 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
; call core::result::Result<T,E>::is_err
  %_151 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h7c907606ad3d9f39E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_152)
  br label %bb96

bb95:                                             ; preds = %bb92
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %241 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1223 to %"core::panic::location::Location"*))
  %242 = zext i1 %241 to i8
  store i8 %242, i8* %5, align 1
  br label %bb278

bb96:                                             ; preds = %bb93
  br i1 %_151, label %bb97, label %bb102

bb102:                                            ; preds = %bb99, %bb96
  %243 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %244 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %243 to i8*
  %245 = load i8, i8* %244, align 8, !range !2
  %246 = trunc i8 %245 to i1
  %_161 = zext i1 %246 to i64
  switch i64 %_161, label %bb104 [
    i64 0, label %bb105
    i64 1, label %bb103
  ]

bb97:                                             ; preds = %bb96
; call rustc_demangle::v0::Printer::print
  %_154 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1257 to [0 x i8]*), i64 2)
  br label %bb98

bb98:                                             ; preds = %bb97
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %247 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_154)
  %248 = zext i1 %247 to i8
  store i8 %248, i8* %_153, align 1
  br label %bb99

bb99:                                             ; preds = %bb98
  %249 = load i8, i8* %_153, align 1, !range !2
  %250 = trunc i8 %249 to i1
  %_156 = zext i1 %250 to i64
  switch i64 %_156, label %bb100 [
    i64 0, label %bb102
    i64 1, label %bb101
  ]

bb100:                                            ; preds = %bb99
  unreachable

bb101:                                            ; preds = %bb99
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %251 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1226 to %"core::panic::location::Location"*))
  %252 = zext i1 %251 to i8
  store i8 %252, i8* %5, align 1
  br label %bb278

bb104:                                            ; preds = %bb102
  unreachable

bb105:                                            ; preds = %bb102
  %253 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %254 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %253 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser17 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %254, i32 0, i32 1
; call rustc_demangle::v0::Parser::disambiguator
  %255 = call i128 @_ZN14rustc_demangle2v06Parser13disambiguator17hcecc09e50a8e1526E(%"v0::Parser"* align 8 dereferenceable(32) %parser17)
  store i128 %255, i128* %2, align 8
  %256 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_163 to i8*
  %257 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 16, i1 false)
  br label %bb106

bb103:                                            ; preds = %bb102
; call rustc_demangle::v0::Printer::print
  %258 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %259 = zext i1 %258 to i8
  store i8 %259, i8* %5, align 1
  br label %bb278

bb106:                                            ; preds = %bb105
  %260 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_163 to i8*
  %261 = load i8, i8* %260, align 8, !range !2
  %262 = trunc i8 %261 to i1
  %_165 = zext i1 %262 to i64
  switch i64 %_165, label %bb108 [
    i64 0, label %bb109
    i64 1, label %bb107
  ]

bb108:                                            ; preds = %bb106
  unreachable

bb109:                                            ; preds = %bb106
  %263 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_163 to %"core::result::Result<u64, v0::ParseError>::Ok"*
  %264 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Ok", %"core::result::Result<u64, v0::ParseError>::Ok"* %263, i32 0, i32 1
  %x18 = load i64, i64* %264, align 8
  %265 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %266 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %265 to i8*
  %267 = load i8, i8* %266, align 8, !range !2
  %268 = trunc i8 %267 to i1
  %_181 = zext i1 %268 to i64
  switch i64 %_181, label %bb117 [
    i64 0, label %bb118
    i64 1, label %bb116
  ]

bb107:                                            ; preds = %bb106
  %269 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_163 to %"core::result::Result<u64, v0::ParseError>::Err"*
  %270 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Err", %"core::result::Result<u64, v0::ParseError>::Err"* %269, i32 0, i32 1
  %271 = load i8, i8* %270, align 1, !range !2
  %272 = trunc i8 %271 to i1
  %273 = zext i1 %272 to i8
  store i8 %273, i8* %err5, align 1
; call rustc_demangle::v0::ParseError::message
  %274 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err5)
  %_171.0 = extractvalue { [0 x i8]*, i64 } %274, 0
  %_171.1 = extractvalue { [0 x i8]*, i64 } %274, 1
  br label %bb110

bb110:                                            ; preds = %bb107
; call rustc_demangle::v0::Printer::print
  %_169 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_171.0, i64 %_171.1)
  br label %bb111

bb111:                                            ; preds = %bb110
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %275 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_169)
  %276 = zext i1 %275 to i8
  store i8 %276, i8* %_168, align 1
  br label %bb112

bb112:                                            ; preds = %bb111
  %277 = load i8, i8* %_168, align 1, !range !2
  %278 = trunc i8 %277 to i1
  %_173 = zext i1 %278 to i64
  switch i64 %_173, label %bb114 [
    i64 0, label %bb113
    i64 1, label %bb115
  ]

bb114:                                            ; preds = %bb112
  unreachable

bb113:                                            ; preds = %bb112
  %279 = load i8, i8* %err5, align 1, !range !2
  %_178 = trunc i8 %279 to i1
  %280 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_177 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %281 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %280, i32 0, i32 1
  %282 = zext i1 %_178 to i8
  store i8 %282, i8* %281, align 1
  %283 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_177 to i8*
  store i8 1, i8* %283, align 8
  %284 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %285 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %284 to i8*
  %286 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_177 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %285, i8* align 8 %286, i64 40, i1 false)
  store i8 0, i8* %5, align 1
  br label %bb278

bb115:                                            ; preds = %bb112
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %287 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1229 to %"core::panic::location::Location"*))
  %288 = zext i1 %287 to i8
  store i8 %288, i8* %5, align 1
  br label %bb278

bb117:                                            ; preds = %bb109
  unreachable

bb118:                                            ; preds = %bb109
  %289 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %290 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %289 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser19 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %290, i32 0, i32 1
; call rustc_demangle::v0::Parser::ident
  call void @_ZN14rustc_demangle2v06Parser5ident17hc0ec47da9313c876E(%"core::result::Result<v0::Ident, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Ident, v0::ParseError>") dereferenceable(40) %_183, %"v0::Parser"* align 8 dereferenceable(32) %parser19)
  br label %bb119

bb116:                                            ; preds = %bb109
; call rustc_demangle::v0::Printer::print
  %291 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %292 = zext i1 %291 to i8
  store i8 %292, i8* %5, align 1
  br label %bb278

bb119:                                            ; preds = %bb118
  %293 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_183 to i8*
  %294 = load i8, i8* %293, align 8, !range !2
  %295 = trunc i8 %294 to i1
  %_185 = zext i1 %295 to i64
  switch i64 %_185, label %bb121 [
    i64 0, label %bb122
    i64 1, label %bb120
  ]

bb121:                                            ; preds = %bb119
  unreachable

bb122:                                            ; preds = %bb119
  %296 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_183 to %"core::result::Result<v0::Ident, v0::ParseError>::Ok"*
  %297 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Ok", %"core::result::Result<v0::Ident, v0::ParseError>::Ok"* %296, i32 0, i32 1
  %298 = bitcast %"v0::Ident"* %x7 to i8*
  %299 = bitcast %"v0::Ident"* %297 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %298, i8* align 8 %299, i64 32, i1 false)
  %300 = bitcast %"v0::Ident"* %name6 to i8*
  %301 = bitcast %"v0::Ident"* %x7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 %301, i64 32, i1 false)
  %302 = load i32, i32* %ns, align 4, !range !4
  %303 = sub i32 %302, 1114112
  %304 = icmp eq i32 %303, 0
  %_200 = select i1 %304, i64 0, i64 1
  switch i64 %_200, label %bb130 [
    i64 0, label %bb129
    i64 1, label %bb131
  ]

bb120:                                            ; preds = %bb119
  %305 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_183 to %"core::result::Result<v0::Ident, v0::ParseError>::Err"*
  %306 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Err", %"core::result::Result<v0::Ident, v0::ParseError>::Err"* %305, i32 0, i32 1
  %307 = load i8, i8* %306, align 1, !range !2
  %308 = trunc i8 %307 to i1
  %309 = zext i1 %308 to i8
  store i8 %309, i8* %err8, align 1
; call rustc_demangle::v0::ParseError::message
  %310 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err8)
  %_191.0 = extractvalue { [0 x i8]*, i64 } %310, 0
  %_191.1 = extractvalue { [0 x i8]*, i64 } %310, 1
  br label %bb123

bb123:                                            ; preds = %bb120
; call rustc_demangle::v0::Printer::print
  %_189 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_191.0, i64 %_191.1)
  br label %bb124

bb124:                                            ; preds = %bb123
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %311 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_189)
  %312 = zext i1 %311 to i8
  store i8 %312, i8* %_188, align 1
  br label %bb125

bb125:                                            ; preds = %bb124
  %313 = load i8, i8* %_188, align 1, !range !2
  %314 = trunc i8 %313 to i1
  %_193 = zext i1 %314 to i64
  switch i64 %_193, label %bb127 [
    i64 0, label %bb126
    i64 1, label %bb128
  ]

bb127:                                            ; preds = %bb125
  unreachable

bb126:                                            ; preds = %bb125
  %315 = load i8, i8* %err8, align 1, !range !2
  %_198 = trunc i8 %315 to i1
  %316 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_197 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %317 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %316, i32 0, i32 1
  %318 = zext i1 %_198 to i8
  store i8 %318, i8* %317, align 1
  %319 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_197 to i8*
  store i8 1, i8* %319, align 8
  %320 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %321 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %320 to i8*
  %322 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %321, i8* align 8 %322, i64 40, i1 false)
  store i8 0, i8* %5, align 1
  br label %bb278

bb128:                                            ; preds = %bb125
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %323 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1232 to %"core::panic::location::Location"*))
  %324 = zext i1 %323 to i8
  store i8 %324, i8* %5, align 1
  br label %bb278

bb130:                                            ; preds = %bb122
  unreachable

bb129:                                            ; preds = %bb122
  %325 = bitcast %"v0::Ident"* %name6 to { [0 x i8]*, i64 }*
  %326 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %325, i32 0, i32 0
  %_278.0 = load [0 x i8]*, [0 x i8]** %326, align 8, !nonnull !6
  %327 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %325, i32 0, i32 1
  %_278.1 = load i64, i64* %327, align 8
; call core::str::<impl str>::is_empty
  %_277 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17he6e5338d5d9dd13dE"([0 x i8]* nonnull align 1 %_278.0, i64 %_278.1)
  br label %bb186

bb131:                                            ; preds = %bb122
  %ns20 = load i32, i32* %ns, align 4, !range !9
; call rustc_demangle::v0::Printer::print
  %_203 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1233 to [0 x i8]*), i64 3)
  br label %bb132

bb132:                                            ; preds = %bb131
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %328 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_203)
  %329 = zext i1 %328 to i8
  store i8 %329, i8* %_202, align 1
  br label %bb133

bb133:                                            ; preds = %bb132
  %330 = load i8, i8* %_202, align 1, !range !2
  %331 = trunc i8 %330 to i1
  %_205 = zext i1 %331 to i64
  switch i64 %_205, label %bb135 [
    i64 0, label %bb134
    i64 1, label %bb136
  ]

bb135:                                            ; preds = %bb133
  unreachable

bb134:                                            ; preds = %bb133
  switch i32 %ns20, label %bb137 [
    i32 67, label %bb138
    i32 83, label %bb143
  ]

bb136:                                            ; preds = %bb133
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %332 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1235 to %"core::panic::location::Location"*))
  %333 = zext i1 %332 to i8
  store i8 %333, i8* %5, align 1
  br label %bb278

bb137:                                            ; preds = %bb134
; call rustc_demangle::v0::Printer::print
  %_224 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h1918e57e7c0165a9E(%"v0::Printer"* align 8 dereferenceable(56) %self, i32 %ns20)
  br label %bb148

bb138:                                            ; preds = %bb134
; call rustc_demangle::v0::Printer::print
  %_210 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1241 to [0 x i8]*), i64 7)
  br label %bb139

bb143:                                            ; preds = %bb134
; call rustc_demangle::v0::Printer::print
  %_217 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1238 to [0 x i8]*), i64 4)
  br label %bb144

bb148:                                            ; preds = %bb137
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %334 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_224)
  %335 = zext i1 %334 to i8
  store i8 %335, i8* %_223, align 1
  br label %bb149

bb149:                                            ; preds = %bb148
  %336 = load i8, i8* %_223, align 1, !range !2
  %337 = trunc i8 %336 to i1
  %_227 = zext i1 %337 to i64
  switch i64 %_227, label %bb150 [
    i64 0, label %bb152
    i64 1, label %bb151
  ]

bb150:                                            ; preds = %bb149
  unreachable

bb152:                                            ; preds = %bb140, %bb145, %bb149
  %338 = bitcast %"v0::Ident"* %name6 to { [0 x i8]*, i64 }*
  %339 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %338, i32 0, i32 0
  %_234.0 = load [0 x i8]*, [0 x i8]** %339, align 8, !nonnull !6
  %340 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %338, i32 0, i32 1
  %_234.1 = load i64, i64* %340, align 8
; call core::str::<impl str>::is_empty
  %_233 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17he6e5338d5d9dd13dE"([0 x i8]* nonnull align 1 %_234.0, i64 %_234.1)
  br label %bb156

bb151:                                            ; preds = %bb149
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %341 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1237 to %"core::panic::location::Location"*))
  %342 = zext i1 %341 to i8
  store i8 %342, i8* %5, align 1
  br label %bb278

bb144:                                            ; preds = %bb143
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %343 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_217)
  %344 = zext i1 %343 to i8
  store i8 %344, i8* %_216, align 1
  br label %bb145

bb145:                                            ; preds = %bb144
  %345 = load i8, i8* %_216, align 1, !range !2
  %346 = trunc i8 %345 to i1
  %_219 = zext i1 %346 to i64
  switch i64 %_219, label %bb146 [
    i64 0, label %bb152
    i64 1, label %bb147
  ]

bb146:                                            ; preds = %bb145
  unreachable

bb147:                                            ; preds = %bb145
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %347 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1240 to %"core::panic::location::Location"*))
  %348 = zext i1 %347 to i8
  store i8 %348, i8* %5, align 1
  br label %bb278

bb139:                                            ; preds = %bb138
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %349 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_210)
  %350 = zext i1 %349 to i8
  store i8 %350, i8* %_209, align 1
  br label %bb140

bb140:                                            ; preds = %bb139
  %351 = load i8, i8* %_209, align 1, !range !2
  %352 = trunc i8 %351 to i1
  %_212 = zext i1 %352 to i64
  switch i64 %_212, label %bb141 [
    i64 0, label %bb152
    i64 1, label %bb142
  ]

bb141:                                            ; preds = %bb140
  unreachable

bb142:                                            ; preds = %bb140
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %353 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1243 to %"core::panic::location::Location"*))
  %354 = zext i1 %353 to i8
  store i8 %354, i8* %5, align 1
  br label %bb278

bb156:                                            ; preds = %bb152
  %_232 = xor i1 %_233, true
  br i1 %_232, label %bb153, label %bb154

bb154:                                            ; preds = %bb156
  %355 = getelementptr inbounds %"v0::Ident", %"v0::Ident"* %name6, i32 0, i32 1
  %356 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %355, i32 0, i32 0
  %_237.0 = load [0 x i8]*, [0 x i8]** %356, align 8, !nonnull !6
  %357 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %355, i32 0, i32 1
  %_237.1 = load i64, i64* %357, align 8
; call core::str::<impl str>::is_empty
  %_236 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17he6e5338d5d9dd13dE"([0 x i8]* nonnull align 1 %_237.0, i64 %_237.1)
  br label %bb157

bb153:                                            ; preds = %bb156
  store i8 1, i8* %_231, align 1
  br label %bb155

bb155:                                            ; preds = %bb157, %bb153
  %358 = load i8, i8* %_231, align 1, !range !2
  %359 = trunc i8 %358 to i1
  br i1 %359, label %bb158, label %bb168

bb157:                                            ; preds = %bb154
  %_235 = xor i1 %_236, true
  %360 = zext i1 %_235 to i8
  store i8 %360, i8* %_231, align 1
  br label %bb155

bb168:                                            ; preds = %bb165, %bb155
; call rustc_demangle::v0::Printer::print
  %_254 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1249 to [0 x i8]*), i64 1)
  br label %bb169

bb158:                                            ; preds = %bb155
; call rustc_demangle::v0::Printer::print
  %_239 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1244 to [0 x i8]*), i64 1)
  br label %bb159

bb159:                                            ; preds = %bb158
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %361 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_239)
  %362 = zext i1 %361 to i8
  store i8 %362, i8* %_238, align 1
  br label %bb160

bb160:                                            ; preds = %bb159
  %363 = load i8, i8* %_238, align 1, !range !2
  %364 = trunc i8 %363 to i1
  %_241 = zext i1 %364 to i64
  switch i64 %_241, label %bb162 [
    i64 0, label %bb161
    i64 1, label %bb163
  ]

bb162:                                            ; preds = %bb160
  unreachable

bb161:                                            ; preds = %bb160
  %365 = bitcast %"v0::Ident"* %_248 to i8*
  %366 = bitcast %"v0::Ident"* %name6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %365, i8* align 8 %366, i64 32, i1 false)
; call rustc_demangle::v0::Printer::print
  %_246 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hea9e22d055e9d00aE(%"v0::Printer"* align 8 dereferenceable(56) %self, %"v0::Ident"* noalias nocapture dereferenceable(32) %_248)
  br label %bb164

bb163:                                            ; preds = %bb160
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %367 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1246 to %"core::panic::location::Location"*))
  %368 = zext i1 %367 to i8
  store i8 %368, i8* %5, align 1
  br label %bb278

bb164:                                            ; preds = %bb161
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %369 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_246)
  %370 = zext i1 %369 to i8
  store i8 %370, i8* %_245, align 1
  br label %bb165

bb165:                                            ; preds = %bb164
  %371 = load i8, i8* %_245, align 1, !range !2
  %372 = trunc i8 %371 to i1
  %_249 = zext i1 %372 to i64
  switch i64 %_249, label %bb166 [
    i64 0, label %bb168
    i64 1, label %bb167
  ]

bb166:                                            ; preds = %bb165
  unreachable

bb167:                                            ; preds = %bb165
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %373 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1248 to %"core::panic::location::Location"*))
  %374 = zext i1 %373 to i8
  store i8 %374, i8* %5, align 1
  br label %bb278

bb169:                                            ; preds = %bb168
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %375 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_254)
  %376 = zext i1 %375 to i8
  store i8 %376, i8* %_253, align 1
  br label %bb170

bb170:                                            ; preds = %bb169
  %377 = load i8, i8* %_253, align 1, !range !2
  %378 = trunc i8 %377 to i1
  %_256 = zext i1 %378 to i64
  switch i64 %_256, label %bb172 [
    i64 0, label %bb171
    i64 1, label %bb173
  ]

bb172:                                            ; preds = %bb170
  unreachable

bb171:                                            ; preds = %bb170
; call rustc_demangle::v0::Printer::print
  %_261 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hd06624edb242fe49E(%"v0::Printer"* align 8 dereferenceable(56) %self, i64 %x18)
  br label %bb174

bb173:                                            ; preds = %bb170
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %379 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1251 to %"core::panic::location::Location"*))
  %380 = zext i1 %379 to i8
  store i8 %380, i8* %5, align 1
  br label %bb278

bb174:                                            ; preds = %bb171
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %381 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_261)
  %382 = zext i1 %381 to i8
  store i8 %382, i8* %_260, align 1
  br label %bb175

bb175:                                            ; preds = %bb174
  %383 = load i8, i8* %_260, align 1, !range !2
  %384 = trunc i8 %383 to i1
  %_264 = zext i1 %384 to i64
  switch i64 %_264, label %bb177 [
    i64 0, label %bb176
    i64 1, label %bb178
  ]

bb177:                                            ; preds = %bb175
  unreachable

bb176:                                            ; preds = %bb175
; call rustc_demangle::v0::Printer::print
  %_269 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1547 to [0 x i8]*), i64 1)
  br label %bb179

bb178:                                            ; preds = %bb175
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %385 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1253 to %"core::panic::location::Location"*))
  %386 = zext i1 %385 to i8
  store i8 %386, i8* %5, align 1
  br label %bb278

bb179:                                            ; preds = %bb176
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %387 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_269)
  %388 = zext i1 %387 to i8
  store i8 %388, i8* %_268, align 1
  br label %bb180

bb180:                                            ; preds = %bb179
  %389 = load i8, i8* %_268, align 1, !range !2
  %390 = trunc i8 %389 to i1
  %_271 = zext i1 %390 to i64
  switch i64 %_271, label %bb181 [
    i64 0, label %bb276
    i64 1, label %bb182
  ]

bb181:                                            ; preds = %bb180
  unreachable

bb182:                                            ; preds = %bb180
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %391 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1256 to %"core::panic::location::Location"*))
  %392 = zext i1 %391 to i8
  store i8 %392, i8* %5, align 1
  br label %bb278

bb186:                                            ; preds = %bb129
  %_276 = xor i1 %_277, true
  br i1 %_276, label %bb183, label %bb184

bb184:                                            ; preds = %bb186
  %393 = getelementptr inbounds %"v0::Ident", %"v0::Ident"* %name6, i32 0, i32 1
  %394 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %393, i32 0, i32 0
  %_281.0 = load [0 x i8]*, [0 x i8]** %394, align 8, !nonnull !6
  %395 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %393, i32 0, i32 1
  %_281.1 = load i64, i64* %395, align 8
; call core::str::<impl str>::is_empty
  %_280 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17he6e5338d5d9dd13dE"([0 x i8]* nonnull align 1 %_281.0, i64 %_281.1)
  br label %bb187

bb183:                                            ; preds = %bb186
  store i8 1, i8* %_275, align 1
  br label %bb185

bb185:                                            ; preds = %bb187, %bb183
  %396 = load i8, i8* %_275, align 1, !range !2
  %397 = trunc i8 %396 to i1
  br i1 %397, label %bb188, label %bb276

bb187:                                            ; preds = %bb184
  %_279 = xor i1 %_280, true
  %398 = zext i1 %_279 to i8
  store i8 %398, i8* %_275, align 1
  br label %bb185

bb188:                                            ; preds = %bb185
; call rustc_demangle::v0::Printer::print
  %_283 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1257 to [0 x i8]*), i64 2)
  br label %bb189

bb189:                                            ; preds = %bb188
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %399 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_283)
  %400 = zext i1 %399 to i8
  store i8 %400, i8* %_282, align 1
  br label %bb190

bb190:                                            ; preds = %bb189
  %401 = load i8, i8* %_282, align 1, !range !2
  %402 = trunc i8 %401 to i1
  %_285 = zext i1 %402 to i64
  switch i64 %_285, label %bb192 [
    i64 0, label %bb191
    i64 1, label %bb193
  ]

bb192:                                            ; preds = %bb190
  unreachable

bb191:                                            ; preds = %bb190
  %403 = bitcast %"v0::Ident"* %_292 to i8*
  %404 = bitcast %"v0::Ident"* %name6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %403, i8* align 8 %404, i64 32, i1 false)
; call rustc_demangle::v0::Printer::print
  %_290 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hea9e22d055e9d00aE(%"v0::Printer"* align 8 dereferenceable(56) %self, %"v0::Ident"* noalias nocapture dereferenceable(32) %_292)
  br label %bb194

bb193:                                            ; preds = %bb190
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %405 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1259 to %"core::panic::location::Location"*))
  %406 = zext i1 %405 to i8
  store i8 %406, i8* %5, align 1
  br label %bb278

bb194:                                            ; preds = %bb191
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %407 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_290)
  %408 = zext i1 %407 to i8
  store i8 %408, i8* %_289, align 1
  br label %bb195

bb195:                                            ; preds = %bb194
  %409 = load i8, i8* %_289, align 1, !range !2
  %410 = trunc i8 %409 to i1
  %_293 = zext i1 %410 to i64
  switch i64 %_293, label %bb196 [
    i64 0, label %bb276
    i64 1, label %bb197
  ]

bb196:                                            ; preds = %bb195
  unreachable

bb197:                                            ; preds = %bb195
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %411 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1261 to %"core::panic::location::Location"*))
  %412 = zext i1 %411 to i8
  store i8 %412, i8* %5, align 1
  br label %bb278

bb30:                                             ; preds = %bb28
  unreachable

bb31:                                             ; preds = %bb28
  %413 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %414 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %413 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser21 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %414, i32 0, i32 1
; call rustc_demangle::v0::Parser::disambiguator
  %415 = call i128 @_ZN14rustc_demangle2v06Parser13disambiguator17hcecc09e50a8e1526E(%"v0::Parser"* align 8 dereferenceable(32) %parser21)
  store i128 %415, i128* %1, align 8
  %416 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_45 to i8*
  %417 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %416, i8* align 8 %417, i64 16, i1 false)
  br label %bb32

bb29:                                             ; preds = %bb28
; call rustc_demangle::v0::Printer::print
  %418 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %419 = zext i1 %418 to i8
  store i8 %419, i8* %5, align 1
  br label %bb278

bb32:                                             ; preds = %bb31
  %420 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_45 to i8*
  %421 = load i8, i8* %420, align 8, !range !2
  %422 = trunc i8 %421 to i1
  %_47 = zext i1 %422 to i64
  switch i64 %_47, label %bb34 [
    i64 0, label %bb35
    i64 1, label %bb33
  ]

bb34:                                             ; preds = %bb32
  unreachable

bb35:                                             ; preds = %bb32
  %423 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_45 to %"core::result::Result<u64, v0::ParseError>::Ok"*
  %424 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Ok", %"core::result::Result<u64, v0::ParseError>::Ok"* %423, i32 0, i32 1
  %x22 = load i64, i64* %424, align 8
  store i64 %x22, i64* %dis, align 8
  %425 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %426 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %425 to i8*
  %427 = load i8, i8* %426, align 8, !range !2
  %428 = trunc i8 %427 to i1
  %_63 = zext i1 %428 to i64
  switch i64 %_63, label %bb43 [
    i64 0, label %bb44
    i64 1, label %bb42
  ]

bb33:                                             ; preds = %bb32
  %429 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_45 to %"core::result::Result<u64, v0::ParseError>::Err"*
  %430 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Err", %"core::result::Result<u64, v0::ParseError>::Err"* %429, i32 0, i32 1
  %431 = load i8, i8* %430, align 1, !range !2
  %432 = trunc i8 %431 to i1
  %433 = zext i1 %432 to i8
  store i8 %433, i8* %err2, align 1
; call rustc_demangle::v0::ParseError::message
  %434 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err2)
  %_53.0 = extractvalue { [0 x i8]*, i64 } %434, 0
  %_53.1 = extractvalue { [0 x i8]*, i64 } %434, 1
  br label %bb36

bb36:                                             ; preds = %bb33
; call rustc_demangle::v0::Printer::print
  %_51 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_53.0, i64 %_53.1)
  br label %bb37

bb37:                                             ; preds = %bb36
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %435 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_51)
  %436 = zext i1 %435 to i8
  store i8 %436, i8* %_50, align 1
  br label %bb38

bb38:                                             ; preds = %bb37
  %437 = load i8, i8* %_50, align 1, !range !2
  %438 = trunc i8 %437 to i1
  %_55 = zext i1 %438 to i64
  switch i64 %_55, label %bb40 [
    i64 0, label %bb39
    i64 1, label %bb41
  ]

bb40:                                             ; preds = %bb38
  unreachable

bb39:                                             ; preds = %bb38
  %439 = load i8, i8* %err2, align 1, !range !2
  %_60 = trunc i8 %439 to i1
  %440 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_59 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %441 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %440, i32 0, i32 1
  %442 = zext i1 %_60 to i8
  store i8 %442, i8* %441, align 1
  %443 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_59 to i8*
  store i8 1, i8* %443, align 8
  %444 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %445 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %444 to i8*
  %446 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %445, i8* align 8 %446, i64 40, i1 false)
  store i8 0, i8* %5, align 1
  br label %bb278

bb41:                                             ; preds = %bb38
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %447 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1264 to %"core::panic::location::Location"*))
  %448 = zext i1 %447 to i8
  store i8 %448, i8* %5, align 1
  br label %bb278

bb43:                                             ; preds = %bb35
  unreachable

bb44:                                             ; preds = %bb35
  %449 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %450 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %449 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser23 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %450, i32 0, i32 1
; call rustc_demangle::v0::Parser::ident
  call void @_ZN14rustc_demangle2v06Parser5ident17hc0ec47da9313c876E(%"core::result::Result<v0::Ident, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Ident, v0::ParseError>") dereferenceable(40) %_65, %"v0::Parser"* align 8 dereferenceable(32) %parser23)
  br label %bb45

bb42:                                             ; preds = %bb35
; call rustc_demangle::v0::Printer::print
  %451 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %452 = zext i1 %451 to i8
  store i8 %452, i8* %5, align 1
  br label %bb278

bb45:                                             ; preds = %bb44
  %453 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_65 to i8*
  %454 = load i8, i8* %453, align 8, !range !2
  %455 = trunc i8 %454 to i1
  %_67 = zext i1 %455 to i64
  switch i64 %_67, label %bb47 [
    i64 0, label %bb48
    i64 1, label %bb46
  ]

bb47:                                             ; preds = %bb45
  unreachable

bb48:                                             ; preds = %bb45
  %456 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_65 to %"core::result::Result<v0::Ident, v0::ParseError>::Ok"*
  %457 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Ok", %"core::result::Result<v0::Ident, v0::ParseError>::Ok"* %456, i32 0, i32 1
  %458 = bitcast %"v0::Ident"* %x to i8*
  %459 = bitcast %"v0::Ident"* %457 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %458, i8* align 8 %459, i64 32, i1 false)
  %460 = bitcast %"v0::Ident"* %name to i8*
  %461 = bitcast %"v0::Ident"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %460, i8* align 8 %461, i64 32, i1 false)
  %462 = bitcast %"v0::Ident"* %_85 to i8*
  %463 = bitcast %"v0::Ident"* %name to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %462, i8* align 8 %463, i64 32, i1 false)
; call rustc_demangle::v0::Printer::print
  %_83 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hea9e22d055e9d00aE(%"v0::Printer"* align 8 dereferenceable(56) %self, %"v0::Ident"* noalias nocapture dereferenceable(32) %_85)
  br label %bb55

bb46:                                             ; preds = %bb45
  %464 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_65 to %"core::result::Result<v0::Ident, v0::ParseError>::Err"*
  %465 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Err", %"core::result::Result<v0::Ident, v0::ParseError>::Err"* %464, i32 0, i32 1
  %466 = load i8, i8* %465, align 1, !range !2
  %467 = trunc i8 %466 to i1
  %468 = zext i1 %467 to i8
  store i8 %468, i8* %err3, align 1
; call rustc_demangle::v0::ParseError::message
  %469 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err3)
  %_73.0 = extractvalue { [0 x i8]*, i64 } %469, 0
  %_73.1 = extractvalue { [0 x i8]*, i64 } %469, 1
  br label %bb49

bb49:                                             ; preds = %bb46
; call rustc_demangle::v0::Printer::print
  %_71 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_73.0, i64 %_73.1)
  br label %bb50

bb50:                                             ; preds = %bb49
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %470 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_71)
  %471 = zext i1 %470 to i8
  store i8 %471, i8* %_70, align 1
  br label %bb51

bb51:                                             ; preds = %bb50
  %472 = load i8, i8* %_70, align 1, !range !2
  %473 = trunc i8 %472 to i1
  %_75 = zext i1 %473 to i64
  switch i64 %_75, label %bb53 [
    i64 0, label %bb52
    i64 1, label %bb54
  ]

bb53:                                             ; preds = %bb51
  unreachable

bb52:                                             ; preds = %bb51
  %474 = load i8, i8* %err3, align 1, !range !2
  %_80 = trunc i8 %474 to i1
  %475 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_79 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %476 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %475, i32 0, i32 1
  %477 = zext i1 %_80 to i8
  store i8 %477, i8* %476, align 1
  %478 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_79 to i8*
  store i8 1, i8* %478, align 8
  %479 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %480 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %479 to i8*
  %481 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %480, i8* align 8 %481, i64 40, i1 false)
  store i8 0, i8* %5, align 1
  br label %bb278

bb54:                                             ; preds = %bb51
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %482 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1267 to %"core::panic::location::Location"*))
  %483 = zext i1 %482 to i8
  store i8 %483, i8* %5, align 1
  br label %bb278

bb55:                                             ; preds = %bb48
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %484 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_83)
  %485 = zext i1 %484 to i8
  store i8 %485, i8* %_82, align 1
  br label %bb56

bb56:                                             ; preds = %bb55
  %486 = load i8, i8* %_82, align 1, !range !2
  %487 = trunc i8 %486 to i1
  %_86 = zext i1 %487 to i64
  switch i64 %_86, label %bb58 [
    i64 0, label %bb57
    i64 1, label %bb59
  ]

bb58:                                             ; preds = %bb56
  unreachable

bb57:                                             ; preds = %bb56
  %_90 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
  %488 = bitcast i64** %_90 to {}**
  %489 = load {}*, {}** %488, align 8
  %490 = icmp eq {}* %489, null
  %_91 = select i1 %490, i64 0, i64 1
  %491 = icmp eq i64 %_91, 1
  br i1 %491, label %bb60, label %bb276

bb59:                                             ; preds = %bb56
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %492 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1269 to %"core::panic::location::Location"*))
  %493 = zext i1 %492 to i8
  store i8 %493, i8* %5, align 1
  br label %bb278

bb60:                                             ; preds = %bb57
  %out = bitcast i64** %_90 to %"core::fmt::Formatter"**
  %_95 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %out, align 8, !nonnull !6
; call core::fmt::Formatter::alternate
  %_94 = call zeroext i1 @_ZN4core3fmt9Formatter9alternate17h4cc3cea3d0be51c9E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %_95)
  br label %bb61

bb61:                                             ; preds = %bb60
  %_93 = xor i1 %_94, true
  br i1 %_93, label %bb62, label %bb276

bb62:                                             ; preds = %bb61
  %_98 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %out, align 8, !nonnull !6
; call core::fmt::Formatter::write_str
  %_97 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %_98, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1491 to [0 x i8]*), i64 1)
  br label %bb63

bb63:                                             ; preds = %bb62
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %494 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_97)
  %495 = zext i1 %494 to i8
  store i8 %495, i8* %_96, align 1
  br label %bb64

bb64:                                             ; preds = %bb63
  %496 = load i8, i8* %_96, align 1, !range !2
  %497 = trunc i8 %496 to i1
  %_101 = zext i1 %497 to i64
  switch i64 %_101, label %bb66 [
    i64 0, label %bb65
    i64 1, label %bb67
  ]

bb66:                                             ; preds = %bb64
  unreachable

bb65:                                             ; preds = %bb64
  %_109 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %out, align 8, !nonnull !6
; call core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
  %_106 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17h8c1e5a0343078d18E"(i64* align 8 dereferenceable(8) %dis, %"core::fmt::Formatter"* align 8 dereferenceable(64) %_109)
  br label %bb68

bb67:                                             ; preds = %bb64
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %498 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1272 to %"core::panic::location::Location"*))
  %499 = zext i1 %498 to i8
  store i8 %499, i8* %5, align 1
  br label %bb278

bb68:                                             ; preds = %bb65
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %500 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_106)
  %501 = zext i1 %500 to i8
  store i8 %501, i8* %_105, align 1
  br label %bb69

bb69:                                             ; preds = %bb68
  %502 = load i8, i8* %_105, align 1, !range !2
  %503 = trunc i8 %502 to i1
  %_110 = zext i1 %503 to i64
  switch i64 %_110, label %bb71 [
    i64 0, label %bb70
    i64 1, label %bb72
  ]

bb71:                                             ; preds = %bb69
  unreachable

bb70:                                             ; preds = %bb69
  %_116 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %out, align 8, !nonnull !6
; call core::fmt::Formatter::write_str
  %_115 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %_116, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1497 to [0 x i8]*), i64 1)
  br label %bb73

bb72:                                             ; preds = %bb69
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %504 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1274 to %"core::panic::location::Location"*))
  %505 = zext i1 %504 to i8
  store i8 %505, i8* %5, align 1
  br label %bb278

bb73:                                             ; preds = %bb70
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %506 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_115)
  %507 = zext i1 %506 to i8
  store i8 %507, i8* %_114, align 1
  br label %bb74

bb74:                                             ; preds = %bb73
  %508 = load i8, i8* %_114, align 1, !range !2
  %509 = trunc i8 %508 to i1
  %_119 = zext i1 %509 to i64
  switch i64 %_119, label %bb75 [
    i64 0, label %bb276
    i64 1, label %bb76
  ]

bb75:                                             ; preds = %bb74
  unreachable

bb76:                                             ; preds = %bb74
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %510 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1277 to %"core::panic::location::Location"*))
  %511 = zext i1 %510 to i8
  store i8 %511, i8* %5, align 1
  br label %bb278

bb277:                                            ; preds = %bb276
  store i8 0, i8* %5, align 1
  br label %bb278
}

; rustc_demangle::v0::Printer::print_path::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_path28_$u7b$$u7b$closure$u7d$$u7d$17h8dd1fa54beaab1c2E"(%"v0::Printer"* align 8 dereferenceable(56) %this) unnamed_addr #1 {
start:
; call rustc_demangle::v0::Printer::print_path
  %0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h66709c17d7c9cba4E(%"v0::Printer"* align 8 dereferenceable(56) %this, i1 zeroext false)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; rustc_demangle::v0::Printer::print_path::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_path28_$u7b$$u7b$closure$u7d$$u7d$17h66f1850a24316431E"(i8* align 1 dereferenceable(1) %_1, %"v0::Printer"* align 8 dereferenceable(56) %this) unnamed_addr #1 {
start:
  %0 = load i8, i8* %_1, align 1, !range !2
  %_4 = trunc i8 %0 to i1
; call rustc_demangle::v0::Printer::print_path
  %1 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h66709c17d7c9cba4E(%"v0::Printer"* align 8 dereferenceable(56) %this, i1 zeroext %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; rustc_demangle::v0::Printer::print_generic_arg
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer17print_generic_arg17hdd8938f33b431ecbE(%"v0::Printer"* align 8 dereferenceable(56) %self) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %_21 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_12 = alloca i8, align 1
  %err = alloca i8, align 1
  %_7 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %1 = alloca i8, align 1
; call rustc_demangle::v0::Printer::eat
  %_2 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 76)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb16

bb16:                                             ; preds = %bb1
; call rustc_demangle::v0::Printer::eat
  %_26 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 75)
  br label %bb17

bb2:                                              ; preds = %bb1
  %2 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %3 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %2 to i8*
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = trunc i8 %4 to i1
  %_5 = zext i1 %5 to i64
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %6 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %7 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %6 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %7, i32 0, i32 1
; call rustc_demangle::v0::Parser::integer_62
  %8 = call i128 @_ZN14rustc_demangle2v06Parser10integer_6217h35db8838954219a1E(%"v0::Parser"* align 8 dereferenceable(32) %parser)
  store i128 %8, i128* %0, align 8
  %9 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_7 to i8*
  %10 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  br label %bb6

bb3:                                              ; preds = %bb2
; call rustc_demangle::v0::Printer::print
  %11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %1, align 1
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18, %bb9, %bb13, %bb15, %bb3
  %13 = load i8, i8* %1, align 1, !range !2
  %14 = trunc i8 %13 to i1
  ret i1 %14

bb6:                                              ; preds = %bb5
  %15 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_7 to i8*
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = trunc i8 %16 to i1
  %_9 = zext i1 %17 to i64
  switch i64 %_9, label %bb8 [
    i64 0, label %bb9
    i64 1, label %bb7
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb9:                                              ; preds = %bb6
  %18 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_7 to %"core::result::Result<u64, v0::ParseError>::Ok"*
  %19 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Ok", %"core::result::Result<u64, v0::ParseError>::Ok"* %18, i32 0, i32 1
  %x = load i64, i64* %19, align 8
; call rustc_demangle::v0::Printer::print_lifetime_from_index
  %20 = call zeroext i1 @_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17hb43ff9896c40678dE(%"v0::Printer"* align 8 dereferenceable(56) %self, i64 %x)
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %1, align 1
  br label %bb20

bb7:                                              ; preds = %bb6
  %22 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_7 to %"core::result::Result<u64, v0::ParseError>::Err"*
  %23 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Err", %"core::result::Result<u64, v0::ParseError>::Err"* %22, i32 0, i32 1
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = trunc i8 %24 to i1
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %err, align 1
; call rustc_demangle::v0::ParseError::message
  %27 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
  %_15.0 = extractvalue { [0 x i8]*, i64 } %27, 0
  %_15.1 = extractvalue { [0 x i8]*, i64 } %27, 1
  br label %bb10

bb10:                                             ; preds = %bb7
; call rustc_demangle::v0::Printer::print
  %_13 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_15.0, i64 %_15.1)
  br label %bb11

bb11:                                             ; preds = %bb10
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %28 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_13)
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %_12, align 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %30 = load i8, i8* %_12, align 1, !range !2
  %31 = trunc i8 %30 to i1
  %_17 = zext i1 %31 to i64
  switch i64 %_17, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ]

bb14:                                             ; preds = %bb12
  unreachable

bb13:                                             ; preds = %bb12
  %32 = load i8, i8* %err, align 1, !range !2
  %_22 = trunc i8 %32 to i1
  %33 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_21 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %34 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %33, i32 0, i32 1
  %35 = zext i1 %_22 to i8
  store i8 %35, i8* %34, align 1
  %36 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_21 to i8*
  store i8 1, i8* %36, align 8
  %37 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %38 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %37 to i8*
  %39 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb20

bb15:                                             ; preds = %bb12
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %40 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1280 to %"core::panic::location::Location"*))
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %1, align 1
  br label %bb20

bb17:                                             ; preds = %bb16
  br i1 %_26, label %bb18, label %bb19

bb19:                                             ; preds = %bb17
; call rustc_demangle::v0::Printer::print_type
  %42 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17hd30efff67a15e4baE(%"v0::Printer"* align 8 dereferenceable(56) %self)
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %1, align 1
  br label %bb20

bb18:                                             ; preds = %bb17
; call rustc_demangle::v0::Printer::print_const
  %44 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h782f5700abcab82fE(%"v0::Printer"* align 8 dereferenceable(56) %self, i1 zeroext false)
  %45 = zext i1 %44 to i8
  store i8 %45, i8* %1, align 1
  br label %bb20
}

; rustc_demangle::v0::Printer::print_type
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17hd30efff67a15e4baE(%"v0::Printer"* align 8 dereferenceable(56) %self) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %1 = alloca i128, align 8
  %_289 = alloca i8, align 1
  %_278 = alloca i8, align 1
  %_270 = alloca i8, align 1
  %_263 = alloca i8, align 1
  %_259 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_250 = alloca i8, align 1
  %err4 = alloca i8, align 1
  %_245 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %_240 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_231 = alloca i8, align 1
  %err3 = alloca i8, align 1
  %_219 = alloca i8, align 1
  %_212 = alloca i8, align 1
  %_204 = alloca i8, align 1
  %_197 = alloca i8, align 1
  %_190 = alloca i8, align 1
  %_180 = alloca { i64, i64 }, align 8
  %_172 = alloca i8, align 1
  %_165 = alloca i8, align 1
  %_158 = alloca i8, align 1
  %_151 = alloca i8, align 1
  %_143 = alloca i8, align 1
  %_136 = alloca i8, align 1
  %_129 = alloca i8, align 1
  %_122 = alloca i8, align 1
  %_115 = alloca i8, align 1
  %_107 = alloca i8, align 1
  %_100 = alloca i8, align 1
  %_93 = alloca i8, align 1
  %_85 = alloca i8, align 1
  %_77 = alloca i8, align 1
  %_73 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_64 = alloca i8, align 1
  %err2 = alloca i8, align 1
  %_59 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %_47 = alloca i8, align 1
  %_44 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_35 = alloca i8, align 1
  %err1 = alloca i8, align 1
  %_30 = alloca i8, align 1
  %_22 = alloca { i8*, i64 }, align 8
  %_19 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_10 = alloca i8, align 1
  %err = alloca i8, align 1
  %_5 = alloca { i8, i8 }, align 1
  %2 = alloca i8, align 1
  %3 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %4 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %3 to i8*
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = trunc i8 %5 to i1
  %_3 = zext i1 %6 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %8 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %7 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %8, i32 0, i32 1
; call rustc_demangle::v0::Parser::next
  %9 = call { i8, i8 } @_ZN14rustc_demangle2v06Parser4next17hffa0ce9c0a6f9798E(%"v0::Parser"* align 8 dereferenceable(32) %parser)
  store { i8, i8 } %9, { i8, i8 }* %_5, align 1
  br label %bb4

bb1:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %2, align 1
  br label %bb202

bb202:                                            ; preds = %bb15, %bb201, %bb72, %bb67, %bb61, %bb57, %bb49, %bb51, %bb39, %bb36, %bb93, %bb88, %bb84, %bb78, %bb119, %bb114, %bb110, %bb104, %bb99, %bb140, %bb135, %bb130, %bb125, %bb145, %bb188, %bb184, %bb176, %bb178, %bb166, %bb162, %bb164, %bb156, %bb151, %bb193, %bb199, %bb27, %bb29, %bb17, %bb11, %bb13, %bb1
  %12 = load i8, i8* %2, align 1, !range !2
  %13 = trunc i8 %12 to i1
  ret i1 %13

bb4:                                              ; preds = %bb3
  %14 = bitcast { i8, i8 }* %_5 to i8*
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = trunc i8 %15 to i1
  %_7 = zext i1 %16 to i64
  switch i64 %_7, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %17 = bitcast { i8, i8 }* %_5 to %"core::result::Result<u8, v0::ParseError>::Ok"*
  %18 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Ok", %"core::result::Result<u8, v0::ParseError>::Ok"* %17, i32 0, i32 1
  %x = load i8, i8* %18, align 1
; call rustc_demangle::v0::basic_type
  %19 = call { i8*, i64 } @_ZN14rustc_demangle2v010basic_type17h33795a1f5cb8549cE(i8 %x)
  store { i8*, i64 } %19, { i8*, i64 }* %_22, align 8
  br label %bb14

bb5:                                              ; preds = %bb4
  %20 = bitcast { i8, i8 }* %_5 to %"core::result::Result<u8, v0::ParseError>::Err"*
  %21 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Err", %"core::result::Result<u8, v0::ParseError>::Err"* %20, i32 0, i32 1
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %err, align 1
; call rustc_demangle::v0::ParseError::message
  %25 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %25, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %25, 1
  br label %bb8

bb8:                                              ; preds = %bb5
; call rustc_demangle::v0::Printer::print
  %_11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_13.0, i64 %_13.1)
  br label %bb9

bb9:                                              ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %26 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_11)
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %_10, align 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %28 = load i8, i8* %_10, align 1, !range !2
  %29 = trunc i8 %28 to i1
  %_15 = zext i1 %29 to i64
  switch i64 %_15, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %30 = load i8, i8* %err, align 1, !range !2
  %_20 = trunc i8 %30 to i1
  %31 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_19 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %32 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %31, i32 0, i32 1
  %33 = zext i1 %_20 to i8
  store i8 %33, i8* %32, align 1
  %34 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_19 to i8*
  store i8 1, i8* %34, align 8
  %35 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %36 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %35 to i8*
  %37 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 40, i1 false)
  store i8 0, i8* %2, align 1
  br label %bb202

bb13:                                             ; preds = %bb10
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %38 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1283 to %"core::panic::location::Location"*))
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %2, align 1
  br label %bb202

bb14:                                             ; preds = %bb7
  %40 = bitcast { i8*, i64 }* %_22 to {}**
  %41 = load {}*, {}** %40, align 8
  %42 = icmp eq {}* %41, null
  %_24 = select i1 %42, i64 0, i64 1
  %43 = icmp eq i64 %_24, 1
  br i1 %43, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %44 = bitcast { i8*, i64 }* %_22 to { [0 x i8]*, i64 }*
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %44, i32 0, i32 0
  %ty.0 = load [0 x i8]*, [0 x i8]** %45, align 8, !nonnull !6
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %44, i32 0, i32 1
  %ty.1 = load i64, i64* %46, align 8
; call rustc_demangle::v0::Printer::print
  %47 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %ty.0, i64 %ty.1)
  %48 = zext i1 %47 to i8
  store i8 %48, i8* %2, align 1
  br label %bb202

bb16:                                             ; preds = %bb14
  %49 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %50 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %49 to i8*
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = trunc i8 %51 to i1
  %_28 = zext i1 %52 to i64
  switch i64 %_28, label %bb18 [
    i64 0, label %bb19
    i64 1, label %bb17
  ]

bb18:                                             ; preds = %bb16
  unreachable

bb19:                                             ; preds = %bb16
  %53 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %54 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %53 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser5 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %54, i32 0, i32 1
; call rustc_demangle::v0::Parser::push_depth
  %55 = call i8 @_ZN14rustc_demangle2v06Parser10push_depth17hac46607ed685a51dE(%"v0::Parser"* align 8 dereferenceable(32) %parser5), !range !7
  store i8 %55, i8* %_30, align 1
  br label %bb20

bb17:                                             ; preds = %bb16
; call rustc_demangle::v0::Printer::print
  %56 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %57 = zext i1 %56 to i8
  store i8 %57, i8* %2, align 1
  br label %bb202

bb20:                                             ; preds = %bb19
  %58 = load i8, i8* %_30, align 1, !range !7
  %59 = sub i8 %58, 2
  %60 = icmp eq i8 %59, 0
  %_32 = select i1 %60, i64 0, i64 1
  switch i64 %_32, label %bb22 [
    i64 0, label %bb23
    i64 1, label %bb21
  ]

bb22:                                             ; preds = %bb20
  unreachable

bb23:                                             ; preds = %bb20
  switch i8 %x, label %bb30 [
    i8 82, label %bb31
    i8 81, label %bb31
    i8 80, label %bb73
    i8 79, label %bb73
    i8 65, label %bb94
    i8 83, label %bb94
    i8 84, label %bb120
    i8 70, label %bb141
    i8 68, label %bb146
    i8 66, label %bb189
  ]

bb21:                                             ; preds = %bb20
  %61 = load i8, i8* %_30, align 1, !range !2
  %62 = trunc i8 %61 to i1
  %63 = zext i1 %62 to i8
  store i8 %63, i8* %err1, align 1
; call rustc_demangle::v0::ParseError::message
  %64 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err1)
  %_38.0 = extractvalue { [0 x i8]*, i64 } %64, 0
  %_38.1 = extractvalue { [0 x i8]*, i64 } %64, 1
  br label %bb24

bb24:                                             ; preds = %bb21
; call rustc_demangle::v0::Printer::print
  %_36 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_38.0, i64 %_38.1)
  br label %bb25

bb25:                                             ; preds = %bb24
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %65 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_36)
  %66 = zext i1 %65 to i8
  store i8 %66, i8* %_35, align 1
  br label %bb26

bb26:                                             ; preds = %bb25
  %67 = load i8, i8* %_35, align 1, !range !2
  %68 = trunc i8 %67 to i1
  %_40 = zext i1 %68 to i64
  switch i64 %_40, label %bb28 [
    i64 0, label %bb27
    i64 1, label %bb29
  ]

bb28:                                             ; preds = %bb26
  unreachable

bb27:                                             ; preds = %bb26
  %69 = load i8, i8* %err1, align 1, !range !2
  %_45 = trunc i8 %69 to i1
  %70 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_44 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %71 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %70, i32 0, i32 1
  %72 = zext i1 %_45 to i8
  store i8 %72, i8* %71, align 1
  %73 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_44 to i8*
  store i8 1, i8* %73, align 8
  %74 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %75 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %74 to i8*
  %76 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 40, i1 false)
  store i8 0, i8* %2, align 1
  br label %bb202

bb29:                                             ; preds = %bb26
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %77 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1286 to %"core::panic::location::Location"*))
  %78 = zext i1 %77 to i8
  store i8 %78, i8* %2, align 1
  br label %bb202

bb30:                                             ; preds = %bb23
  %_287 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
; call core::result::Result<T,E>::as_mut
  %79 = call { i64, i8* } @"_ZN4core6result19Result$LT$T$C$E$GT$6as_mut17he7119a72d6d3e2b7E"(%"core::result::Result<v0::Parser, v0::ParseError>"* align 8 dereferenceable(40) %_287)
  %_286.0 = extractvalue { i64, i8* } %79, 0
  %_286.1 = extractvalue { i64, i8* } %79, 1
  br label %bb194

bb31:                                             ; preds = %bb23, %bb23
; call rustc_demangle::v0::Printer::print
  %_48 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1504 to [0 x i8]*), i64 1)
  br label %bb32

bb73:                                             ; preds = %bb23, %bb23
; call rustc_demangle::v0::Printer::print
  %_108 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1514 to [0 x i8]*), i64 1)
  br label %bb74

bb94:                                             ; preds = %bb23, %bb23
; call rustc_demangle::v0::Printer::print
  %_137 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1491 to [0 x i8]*), i64 1)
  br label %bb95

bb120:                                            ; preds = %bb23
; call rustc_demangle::v0::Printer::print
  %_173 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1477 to [0 x i8]*), i64 1)
  br label %bb121

bb141:                                            ; preds = %bb23
; call rustc_demangle::v0::Printer::in_binder
  %_205 = call zeroext i1 @_ZN14rustc_demangle2v07Printer9in_binder17h71e9bc6469b548e0E(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb142

bb146:                                            ; preds = %bb23
; call rustc_demangle::v0::Printer::print
  %_213 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1291 to [0 x i8]*), i64 4)
  br label %bb147

bb189:                                            ; preds = %bb23
; call rustc_demangle::v0::Printer::print_backref
  %_279 = call zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17hd2b4f4e5f01ac6a4E(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb190

bb194:                                            ; preds = %bb30
; call core::result::Result<T,E>::map
  %_285 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hb02edfe59f044281E"(i64 %_286.0, i8* %_286.1)
  br label %bb195

bb195:                                            ; preds = %bb194
; call rustc_demangle::v0::Printer::print_path
  %_290 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h66709c17d7c9cba4E(%"v0::Printer"* align 8 dereferenceable(56) %self, i1 zeroext false)
  br label %bb196

bb196:                                            ; preds = %bb195
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %80 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_290)
  %81 = zext i1 %80 to i8
  store i8 %81, i8* %_289, align 1
  br label %bb197

bb197:                                            ; preds = %bb196
  %82 = load i8, i8* %_289, align 1, !range !2
  %83 = trunc i8 %82 to i1
  %_292 = zext i1 %83 to i64
  switch i64 %_292, label %bb198 [
    i64 0, label %bb200
    i64 1, label %bb199
  ]

bb198:                                            ; preds = %bb197
  unreachable

bb200:                                            ; preds = %bb70, %bb91, %bb117, %bb138, %bb143, %bb186, %bb172, %bb191, %bb197
; call rustc_demangle::v0::Printer::pop_depth
  call void @_ZN14rustc_demangle2v07Printer9pop_depth17haf2f855b2c6bd27fE(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb201

bb199:                                            ; preds = %bb197
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %84 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1288 to %"core::panic::location::Location"*))
  %85 = zext i1 %84 to i8
  store i8 %85, i8* %2, align 1
  br label %bb202

bb190:                                            ; preds = %bb189
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %86 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_279)
  %87 = zext i1 %86 to i8
  store i8 %87, i8* %_278, align 1
  br label %bb191

bb191:                                            ; preds = %bb190
  %88 = load i8, i8* %_278, align 1, !range !2
  %89 = trunc i8 %88 to i1
  %_281 = zext i1 %89 to i64
  switch i64 %_281, label %bb192 [
    i64 0, label %bb200
    i64 1, label %bb193
  ]

bb192:                                            ; preds = %bb191
  unreachable

bb193:                                            ; preds = %bb191
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %90 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1290 to %"core::panic::location::Location"*))
  %91 = zext i1 %90 to i8
  store i8 %91, i8* %2, align 1
  br label %bb202

bb147:                                            ; preds = %bb146
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %92 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_213)
  %93 = zext i1 %92 to i8
  store i8 %93, i8* %_212, align 1
  br label %bb148

bb148:                                            ; preds = %bb147
  %94 = load i8, i8* %_212, align 1, !range !2
  %95 = trunc i8 %94 to i1
  %_215 = zext i1 %95 to i64
  switch i64 %_215, label %bb150 [
    i64 0, label %bb149
    i64 1, label %bb151
  ]

bb150:                                            ; preds = %bb148
  unreachable

bb149:                                            ; preds = %bb148
; call rustc_demangle::v0::Printer::in_binder
  %_220 = call zeroext i1 @_ZN14rustc_demangle2v07Printer9in_binder17hb38e7ec356fa7782E(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb152

bb151:                                            ; preds = %bb148
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %96 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1293 to %"core::panic::location::Location"*))
  %97 = zext i1 %96 to i8
  store i8 %97, i8* %2, align 1
  br label %bb202

bb152:                                            ; preds = %bb149
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %98 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_220)
  %99 = zext i1 %98 to i8
  store i8 %99, i8* %_219, align 1
  br label %bb153

bb153:                                            ; preds = %bb152
  %100 = load i8, i8* %_219, align 1, !range !2
  %101 = trunc i8 %100 to i1
  %_223 = zext i1 %101 to i64
  switch i64 %_223, label %bb155 [
    i64 0, label %bb154
    i64 1, label %bb156
  ]

bb155:                                            ; preds = %bb153
  unreachable

bb154:                                            ; preds = %bb153
; call rustc_demangle::v0::Printer::eat
  %_228 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 76)
  br label %bb157

bb156:                                            ; preds = %bb153
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %102 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1295 to %"core::panic::location::Location"*))
  %103 = zext i1 %102 to i8
  store i8 %103, i8* %2, align 1
  br label %bb202

bb157:                                            ; preds = %bb154
  %_227 = xor i1 %_228, true
  br i1 %_227, label %bb158, label %bb165

bb165:                                            ; preds = %bb157
  %104 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %105 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %104 to i8*
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = trunc i8 %106 to i1
  %_243 = zext i1 %107 to i64
  switch i64 %_243, label %bb167 [
    i64 0, label %bb168
    i64 1, label %bb166
  ]

bb158:                                            ; preds = %bb157
  store i8 0, i8* %err3, align 1
; call rustc_demangle::v0::ParseError::message
  %108 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err3)
  %_234.0 = extractvalue { [0 x i8]*, i64 } %108, 0
  %_234.1 = extractvalue { [0 x i8]*, i64 } %108, 1
  br label %bb159

bb159:                                            ; preds = %bb158
; call rustc_demangle::v0::Printer::print
  %_232 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_234.0, i64 %_234.1)
  br label %bb160

bb160:                                            ; preds = %bb159
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %109 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_232)
  %110 = zext i1 %109 to i8
  store i8 %110, i8* %_231, align 1
  br label %bb161

bb161:                                            ; preds = %bb160
  %111 = load i8, i8* %_231, align 1, !range !2
  %112 = trunc i8 %111 to i1
  %_236 = zext i1 %112 to i64
  switch i64 %_236, label %bb163 [
    i64 0, label %bb162
    i64 1, label %bb164
  ]

bb163:                                            ; preds = %bb161
  unreachable

bb162:                                            ; preds = %bb161
  %113 = load i8, i8* %err3, align 1, !range !2
  %_241 = trunc i8 %113 to i1
  %114 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_240 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %115 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %114, i32 0, i32 1
  %116 = zext i1 %_241 to i8
  store i8 %116, i8* %115, align 1
  %117 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_240 to i8*
  store i8 1, i8* %117, align 8
  %118 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %119 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %118 to i8*
  %120 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 40, i1 false)
  store i8 0, i8* %2, align 1
  br label %bb202

bb164:                                            ; preds = %bb161
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %121 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1297 to %"core::panic::location::Location"*))
  %122 = zext i1 %121 to i8
  store i8 %122, i8* %2, align 1
  br label %bb202

bb167:                                            ; preds = %bb165
  unreachable

bb168:                                            ; preds = %bb165
  %123 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %124 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %123 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser6 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %124, i32 0, i32 1
; call rustc_demangle::v0::Parser::integer_62
  %125 = call i128 @_ZN14rustc_demangle2v06Parser10integer_6217h35db8838954219a1E(%"v0::Parser"* align 8 dereferenceable(32) %parser6)
  store i128 %125, i128* %1, align 8
  %126 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_245 to i8*
  %127 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false)
  br label %bb169

bb166:                                            ; preds = %bb165
; call rustc_demangle::v0::Printer::print
  %128 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %129 = zext i1 %128 to i8
  store i8 %129, i8* %2, align 1
  br label %bb202

bb169:                                            ; preds = %bb168
  %130 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_245 to i8*
  %131 = load i8, i8* %130, align 8, !range !2
  %132 = trunc i8 %131 to i1
  %_247 = zext i1 %132 to i64
  switch i64 %_247, label %bb171 [
    i64 0, label %bb172
    i64 1, label %bb170
  ]

bb171:                                            ; preds = %bb169
  unreachable

bb172:                                            ; preds = %bb169
  %133 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_245 to %"core::result::Result<u64, v0::ParseError>::Ok"*
  %134 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Ok", %"core::result::Result<u64, v0::ParseError>::Ok"* %133, i32 0, i32 1
  %x7 = load i64, i64* %134, align 8
  %135 = icmp eq i64 %x7, 0
  br i1 %135, label %bb200, label %bb179

bb170:                                            ; preds = %bb169
  %136 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_245 to %"core::result::Result<u64, v0::ParseError>::Err"*
  %137 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Err", %"core::result::Result<u64, v0::ParseError>::Err"* %136, i32 0, i32 1
  %138 = load i8, i8* %137, align 1, !range !2
  %139 = trunc i8 %138 to i1
  %140 = zext i1 %139 to i8
  store i8 %140, i8* %err4, align 1
; call rustc_demangle::v0::ParseError::message
  %141 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err4)
  %_253.0 = extractvalue { [0 x i8]*, i64 } %141, 0
  %_253.1 = extractvalue { [0 x i8]*, i64 } %141, 1
  br label %bb173

bb173:                                            ; preds = %bb170
; call rustc_demangle::v0::Printer::print
  %_251 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_253.0, i64 %_253.1)
  br label %bb174

bb174:                                            ; preds = %bb173
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %142 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_251)
  %143 = zext i1 %142 to i8
  store i8 %143, i8* %_250, align 1
  br label %bb175

bb175:                                            ; preds = %bb174
  %144 = load i8, i8* %_250, align 1, !range !2
  %145 = trunc i8 %144 to i1
  %_255 = zext i1 %145 to i64
  switch i64 %_255, label %bb177 [
    i64 0, label %bb176
    i64 1, label %bb178
  ]

bb177:                                            ; preds = %bb175
  unreachable

bb176:                                            ; preds = %bb175
  %146 = load i8, i8* %err4, align 1, !range !2
  %_260 = trunc i8 %146 to i1
  %147 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_259 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %148 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %147, i32 0, i32 1
  %149 = zext i1 %_260 to i8
  store i8 %149, i8* %148, align 1
  %150 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_259 to i8*
  store i8 1, i8* %150, align 8
  %151 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %152 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %151 to i8*
  %153 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_259 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 40, i1 false)
  store i8 0, i8* %2, align 1
  br label %bb202

bb178:                                            ; preds = %bb175
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %154 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1300 to %"core::panic::location::Location"*))
  %155 = zext i1 %154 to i8
  store i8 %155, i8* %2, align 1
  br label %bb202

bb179:                                            ; preds = %bb172
; call rustc_demangle::v0::Printer::print
  %_264 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1398 to [0 x i8]*), i64 3)
  br label %bb180

bb180:                                            ; preds = %bb179
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %156 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_264)
  %157 = zext i1 %156 to i8
  store i8 %157, i8* %_263, align 1
  br label %bb181

bb181:                                            ; preds = %bb180
  %158 = load i8, i8* %_263, align 1, !range !2
  %159 = trunc i8 %158 to i1
  %_266 = zext i1 %159 to i64
  switch i64 %_266, label %bb183 [
    i64 0, label %bb182
    i64 1, label %bb184
  ]

bb183:                                            ; preds = %bb181
  unreachable

bb182:                                            ; preds = %bb181
; call rustc_demangle::v0::Printer::print_lifetime_from_index
  %_271 = call zeroext i1 @_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17hb43ff9896c40678dE(%"v0::Printer"* align 8 dereferenceable(56) %self, i64 %x7)
  br label %bb185

bb184:                                            ; preds = %bb181
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %160 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1303 to %"core::panic::location::Location"*))
  %161 = zext i1 %160 to i8
  store i8 %161, i8* %2, align 1
  br label %bb202

bb185:                                            ; preds = %bb182
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %162 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_271)
  %163 = zext i1 %162 to i8
  store i8 %163, i8* %_270, align 1
  br label %bb186

bb186:                                            ; preds = %bb185
  %164 = load i8, i8* %_270, align 1, !range !2
  %165 = trunc i8 %164 to i1
  %_274 = zext i1 %165 to i64
  switch i64 %_274, label %bb187 [
    i64 0, label %bb200
    i64 1, label %bb188
  ]

bb187:                                            ; preds = %bb186
  unreachable

bb188:                                            ; preds = %bb186
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %166 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1305 to %"core::panic::location::Location"*))
  %167 = zext i1 %166 to i8
  store i8 %167, i8* %2, align 1
  br label %bb202

bb142:                                            ; preds = %bb141
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %168 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_205)
  %169 = zext i1 %168 to i8
  store i8 %169, i8* %_204, align 1
  br label %bb143

bb143:                                            ; preds = %bb142
  %170 = load i8, i8* %_204, align 1, !range !2
  %171 = trunc i8 %170 to i1
  %_208 = zext i1 %171 to i64
  switch i64 %_208, label %bb144 [
    i64 0, label %bb200
    i64 1, label %bb145
  ]

bb144:                                            ; preds = %bb143
  unreachable

bb145:                                            ; preds = %bb143
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %172 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1307 to %"core::panic::location::Location"*))
  %173 = zext i1 %172 to i8
  store i8 %173, i8* %2, align 1
  br label %bb202

bb121:                                            ; preds = %bb120
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %174 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_173)
  %175 = zext i1 %174 to i8
  store i8 %175, i8* %_172, align 1
  br label %bb122

bb122:                                            ; preds = %bb121
  %176 = load i8, i8* %_172, align 1, !range !2
  %177 = trunc i8 %176 to i1
  %_175 = zext i1 %177 to i64
  switch i64 %_175, label %bb124 [
    i64 0, label %bb123
    i64 1, label %bb125
  ]

bb124:                                            ; preds = %bb122
  unreachable

bb123:                                            ; preds = %bb122
; call rustc_demangle::v0::Printer::print_sep_list
  %178 = call { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h58c0789ac6806da3E(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1494 to [0 x i8]*), i64 2)
  %_181.0 = extractvalue { i64, i64 } %178, 0
  %_181.1 = extractvalue { i64, i64 } %178, 1
  br label %bb126

bb125:                                            ; preds = %bb122
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %179 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1310 to %"core::panic::location::Location"*))
  %180 = zext i1 %179 to i8
  store i8 %180, i8* %2, align 1
  br label %bb202

bb126:                                            ; preds = %bb123
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %181 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd46a3fe531d61413E"(i64 %_181.0, i64 %_181.1)
  store { i64, i64 } %181, { i64, i64 }* %_180, align 8
  br label %bb127

bb127:                                            ; preds = %bb126
  %182 = bitcast { i64, i64 }* %_180 to i64*
  %_185 = load i64, i64* %182, align 8, !range !5
  switch i64 %_185, label %bb129 [
    i64 0, label %bb128
    i64 1, label %bb130
  ]

bb129:                                            ; preds = %bb127
  unreachable

bb128:                                            ; preds = %bb127
  %183 = bitcast { i64, i64 }* %_180 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"*
  %184 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"* %183, i32 0, i32 1
  %val = load i64, i64* %184, align 8
  %185 = icmp eq i64 %val, 1
  br i1 %185, label %bb131, label %bb136

bb130:                                            ; preds = %bb127
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %186 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1313 to %"core::panic::location::Location"*))
  %187 = zext i1 %186 to i8
  store i8 %187, i8* %2, align 1
  br label %bb202

bb131:                                            ; preds = %bb128
; call rustc_demangle::v0::Printer::print
  %_191 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1483 to [0 x i8]*), i64 1)
  br label %bb132

bb136:                                            ; preds = %bb133, %bb128
; call rustc_demangle::v0::Printer::print
  %_198 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1486 to [0 x i8]*), i64 1)
  br label %bb137

bb132:                                            ; preds = %bb131
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %188 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_191)
  %189 = zext i1 %188 to i8
  store i8 %189, i8* %_190, align 1
  br label %bb133

bb133:                                            ; preds = %bb132
  %190 = load i8, i8* %_190, align 1, !range !2
  %191 = trunc i8 %190 to i1
  %_193 = zext i1 %191 to i64
  switch i64 %_193, label %bb134 [
    i64 0, label %bb136
    i64 1, label %bb135
  ]

bb134:                                            ; preds = %bb133
  unreachable

bb135:                                            ; preds = %bb133
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %192 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1316 to %"core::panic::location::Location"*))
  %193 = zext i1 %192 to i8
  store i8 %193, i8* %2, align 1
  br label %bb202

bb137:                                            ; preds = %bb136
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %194 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_198)
  %195 = zext i1 %194 to i8
  store i8 %195, i8* %_197, align 1
  br label %bb138

bb138:                                            ; preds = %bb137
  %196 = load i8, i8* %_197, align 1, !range !2
  %197 = trunc i8 %196 to i1
  %_200 = zext i1 %197 to i64
  switch i64 %_200, label %bb139 [
    i64 0, label %bb200
    i64 1, label %bb140
  ]

bb139:                                            ; preds = %bb138
  unreachable

bb140:                                            ; preds = %bb138
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %198 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1319 to %"core::panic::location::Location"*))
  %199 = zext i1 %198 to i8
  store i8 %199, i8* %2, align 1
  br label %bb202

bb95:                                             ; preds = %bb94
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %200 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_137)
  %201 = zext i1 %200 to i8
  store i8 %201, i8* %_136, align 1
  br label %bb96

bb96:                                             ; preds = %bb95
  %202 = load i8, i8* %_136, align 1, !range !2
  %203 = trunc i8 %202 to i1
  %_139 = zext i1 %203 to i64
  switch i64 %_139, label %bb98 [
    i64 0, label %bb97
    i64 1, label %bb99
  ]

bb98:                                             ; preds = %bb96
  unreachable

bb97:                                             ; preds = %bb96
; call rustc_demangle::v0::Printer::print_type
  %_144 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17hd30efff67a15e4baE(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb100

bb99:                                             ; preds = %bb96
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %204 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1322 to %"core::panic::location::Location"*))
  %205 = zext i1 %204 to i8
  store i8 %205, i8* %2, align 1
  br label %bb202

bb100:                                            ; preds = %bb97
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %206 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_144)
  %207 = zext i1 %206 to i8
  store i8 %207, i8* %_143, align 1
  br label %bb101

bb101:                                            ; preds = %bb100
  %208 = load i8, i8* %_143, align 1, !range !2
  %209 = trunc i8 %208 to i1
  %_146 = zext i1 %209 to i64
  switch i64 %_146, label %bb103 [
    i64 0, label %bb102
    i64 1, label %bb104
  ]

bb103:                                            ; preds = %bb101
  unreachable

bb102:                                            ; preds = %bb101
  %210 = icmp eq i8 %x, 65
  br i1 %210, label %bb105, label %bb115

bb104:                                            ; preds = %bb101
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %211 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1324 to %"core::panic::location::Location"*))
  %212 = zext i1 %211 to i8
  store i8 %212, i8* %2, align 1
  br label %bb202

bb105:                                            ; preds = %bb102
; call rustc_demangle::v0::Printer::print
  %_152 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1325 to [0 x i8]*), i64 2)
  br label %bb106

bb115:                                            ; preds = %bb112, %bb102
; call rustc_demangle::v0::Printer::print
  %_166 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1497 to [0 x i8]*), i64 1)
  br label %bb116

bb106:                                            ; preds = %bb105
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %213 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_152)
  %214 = zext i1 %213 to i8
  store i8 %214, i8* %_151, align 1
  br label %bb107

bb107:                                            ; preds = %bb106
  %215 = load i8, i8* %_151, align 1, !range !2
  %216 = trunc i8 %215 to i1
  %_154 = zext i1 %216 to i64
  switch i64 %_154, label %bb109 [
    i64 0, label %bb108
    i64 1, label %bb110
  ]

bb109:                                            ; preds = %bb107
  unreachable

bb108:                                            ; preds = %bb107
; call rustc_demangle::v0::Printer::print_const
  %_159 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h782f5700abcab82fE(%"v0::Printer"* align 8 dereferenceable(56) %self, i1 zeroext true)
  br label %bb111

bb110:                                            ; preds = %bb107
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %217 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1327 to %"core::panic::location::Location"*))
  %218 = zext i1 %217 to i8
  store i8 %218, i8* %2, align 1
  br label %bb202

bb111:                                            ; preds = %bb108
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %219 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_159)
  %220 = zext i1 %219 to i8
  store i8 %220, i8* %_158, align 1
  br label %bb112

bb112:                                            ; preds = %bb111
  %221 = load i8, i8* %_158, align 1, !range !2
  %222 = trunc i8 %221 to i1
  %_161 = zext i1 %222 to i64
  switch i64 %_161, label %bb113 [
    i64 0, label %bb115
    i64 1, label %bb114
  ]

bb113:                                            ; preds = %bb112
  unreachable

bb114:                                            ; preds = %bb112
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %223 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1329 to %"core::panic::location::Location"*))
  %224 = zext i1 %223 to i8
  store i8 %224, i8* %2, align 1
  br label %bb202

bb116:                                            ; preds = %bb115
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %225 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_166)
  %226 = zext i1 %225 to i8
  store i8 %226, i8* %_165, align 1
  br label %bb117

bb117:                                            ; preds = %bb116
  %227 = load i8, i8* %_165, align 1, !range !2
  %228 = trunc i8 %227 to i1
  %_168 = zext i1 %228 to i64
  switch i64 %_168, label %bb118 [
    i64 0, label %bb200
    i64 1, label %bb119
  ]

bb118:                                            ; preds = %bb117
  unreachable

bb119:                                            ; preds = %bb117
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %229 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1332 to %"core::panic::location::Location"*))
  %230 = zext i1 %229 to i8
  store i8 %230, i8* %2, align 1
  br label %bb202

bb74:                                             ; preds = %bb73
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %231 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_108)
  %232 = zext i1 %231 to i8
  store i8 %232, i8* %_107, align 1
  br label %bb75

bb75:                                             ; preds = %bb74
  %233 = load i8, i8* %_107, align 1, !range !2
  %234 = trunc i8 %233 to i1
  %_110 = zext i1 %234 to i64
  switch i64 %_110, label %bb77 [
    i64 0, label %bb76
    i64 1, label %bb78
  ]

bb77:                                             ; preds = %bb75
  unreachable

bb76:                                             ; preds = %bb75
  %235 = icmp eq i8 %x, 80
  br i1 %235, label %bb80, label %bb79

bb78:                                             ; preds = %bb75
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %236 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1335 to %"core::panic::location::Location"*))
  %237 = zext i1 %236 to i8
  store i8 %237, i8* %2, align 1
  br label %bb202

bb80:                                             ; preds = %bb76
; call rustc_demangle::v0::Printer::print
  %_123 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1339 to [0 x i8]*), i64 6)
  br label %bb85

bb79:                                             ; preds = %bb76
; call rustc_demangle::v0::Printer::print
  %_116 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1507 to [0 x i8]*), i64 4)
  br label %bb81

bb81:                                             ; preds = %bb79
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %238 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_116)
  %239 = zext i1 %238 to i8
  store i8 %239, i8* %_115, align 1
  br label %bb82

bb82:                                             ; preds = %bb81
  %240 = load i8, i8* %_115, align 1, !range !2
  %241 = trunc i8 %240 to i1
  %_118 = zext i1 %241 to i64
  switch i64 %_118, label %bb83 [
    i64 0, label %bb89
    i64 1, label %bb84
  ]

bb83:                                             ; preds = %bb82
  unreachable

bb89:                                             ; preds = %bb86, %bb82
; call rustc_demangle::v0::Printer::print_type
  %_130 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17hd30efff67a15e4baE(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb90

bb84:                                             ; preds = %bb82
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %242 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1338 to %"core::panic::location::Location"*))
  %243 = zext i1 %242 to i8
  store i8 %243, i8* %2, align 1
  br label %bb202

bb85:                                             ; preds = %bb80
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %244 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_123)
  %245 = zext i1 %244 to i8
  store i8 %245, i8* %_122, align 1
  br label %bb86

bb86:                                             ; preds = %bb85
  %246 = load i8, i8* %_122, align 1, !range !2
  %247 = trunc i8 %246 to i1
  %_125 = zext i1 %247 to i64
  switch i64 %_125, label %bb87 [
    i64 0, label %bb89
    i64 1, label %bb88
  ]

bb87:                                             ; preds = %bb86
  unreachable

bb88:                                             ; preds = %bb86
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %248 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1341 to %"core::panic::location::Location"*))
  %249 = zext i1 %248 to i8
  store i8 %249, i8* %2, align 1
  br label %bb202

bb90:                                             ; preds = %bb89
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %250 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_130)
  %251 = zext i1 %250 to i8
  store i8 %251, i8* %_129, align 1
  br label %bb91

bb91:                                             ; preds = %bb90
  %252 = load i8, i8* %_129, align 1, !range !2
  %253 = trunc i8 %252 to i1
  %_132 = zext i1 %253 to i64
  switch i64 %_132, label %bb92 [
    i64 0, label %bb200
    i64 1, label %bb93
  ]

bb92:                                             ; preds = %bb91
  unreachable

bb93:                                             ; preds = %bb91
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %254 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1343 to %"core::panic::location::Location"*))
  %255 = zext i1 %254 to i8
  store i8 %255, i8* %2, align 1
  br label %bb202

bb32:                                             ; preds = %bb31
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %256 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_48)
  %257 = zext i1 %256 to i8
  store i8 %257, i8* %_47, align 1
  br label %bb33

bb33:                                             ; preds = %bb32
  %258 = load i8, i8* %_47, align 1, !range !2
  %259 = trunc i8 %258 to i1
  %_50 = zext i1 %259 to i64
  switch i64 %_50, label %bb35 [
    i64 0, label %bb34
    i64 1, label %bb36
  ]

bb35:                                             ; preds = %bb33
  unreachable

bb34:                                             ; preds = %bb33
; call rustc_demangle::v0::Printer::eat
  %_54 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 76)
  br label %bb37

bb36:                                             ; preds = %bb33
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %260 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1346 to %"core::panic::location::Location"*))
  %261 = zext i1 %260 to i8
  store i8 %261, i8* %2, align 1
  br label %bb202

bb37:                                             ; preds = %bb34
  br i1 %_54, label %bb38, label %bb62

bb62:                                             ; preds = %bb59, %bb45, %bb37
  %262 = icmp eq i8 %x, 82
  br i1 %262, label %bb68, label %bb63

bb38:                                             ; preds = %bb37
  %263 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %264 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %263 to i8*
  %265 = load i8, i8* %264, align 8, !range !2
  %266 = trunc i8 %265 to i1
  %_57 = zext i1 %266 to i64
  switch i64 %_57, label %bb40 [
    i64 0, label %bb41
    i64 1, label %bb39
  ]

bb40:                                             ; preds = %bb38
  unreachable

bb41:                                             ; preds = %bb38
  %267 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %268 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %267 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser8 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %268, i32 0, i32 1
; call rustc_demangle::v0::Parser::integer_62
  %269 = call i128 @_ZN14rustc_demangle2v06Parser10integer_6217h35db8838954219a1E(%"v0::Parser"* align 8 dereferenceable(32) %parser8)
  store i128 %269, i128* %0, align 8
  %270 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_59 to i8*
  %271 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %270, i8* align 8 %271, i64 16, i1 false)
  br label %bb42

bb39:                                             ; preds = %bb38
; call rustc_demangle::v0::Printer::print
  %272 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %273 = zext i1 %272 to i8
  store i8 %273, i8* %2, align 1
  br label %bb202

bb42:                                             ; preds = %bb41
  %274 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_59 to i8*
  %275 = load i8, i8* %274, align 8, !range !2
  %276 = trunc i8 %275 to i1
  %_61 = zext i1 %276 to i64
  switch i64 %_61, label %bb44 [
    i64 0, label %bb45
    i64 1, label %bb43
  ]

bb44:                                             ; preds = %bb42
  unreachable

bb45:                                             ; preds = %bb42
  %277 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_59 to %"core::result::Result<u64, v0::ParseError>::Ok"*
  %278 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Ok", %"core::result::Result<u64, v0::ParseError>::Ok"* %277, i32 0, i32 1
  %x9 = load i64, i64* %278, align 8
  %279 = icmp eq i64 %x9, 0
  br i1 %279, label %bb62, label %bb52

bb43:                                             ; preds = %bb42
  %280 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_59 to %"core::result::Result<u64, v0::ParseError>::Err"*
  %281 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Err", %"core::result::Result<u64, v0::ParseError>::Err"* %280, i32 0, i32 1
  %282 = load i8, i8* %281, align 1, !range !2
  %283 = trunc i8 %282 to i1
  %284 = zext i1 %283 to i8
  store i8 %284, i8* %err2, align 1
; call rustc_demangle::v0::ParseError::message
  %285 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err2)
  %_67.0 = extractvalue { [0 x i8]*, i64 } %285, 0
  %_67.1 = extractvalue { [0 x i8]*, i64 } %285, 1
  br label %bb46

bb46:                                             ; preds = %bb43
; call rustc_demangle::v0::Printer::print
  %_65 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_67.0, i64 %_67.1)
  br label %bb47

bb47:                                             ; preds = %bb46
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %286 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_65)
  %287 = zext i1 %286 to i8
  store i8 %287, i8* %_64, align 1
  br label %bb48

bb48:                                             ; preds = %bb47
  %288 = load i8, i8* %_64, align 1, !range !2
  %289 = trunc i8 %288 to i1
  %_69 = zext i1 %289 to i64
  switch i64 %_69, label %bb50 [
    i64 0, label %bb49
    i64 1, label %bb51
  ]

bb50:                                             ; preds = %bb48
  unreachable

bb49:                                             ; preds = %bb48
  %290 = load i8, i8* %err2, align 1, !range !2
  %_74 = trunc i8 %290 to i1
  %291 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_73 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %292 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %291, i32 0, i32 1
  %293 = zext i1 %_74 to i8
  store i8 %293, i8* %292, align 1
  %294 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_73 to i8*
  store i8 1, i8* %294, align 8
  %295 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %296 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %295 to i8*
  %297 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %296, i8* align 8 %297, i64 40, i1 false)
  store i8 0, i8* %2, align 1
  br label %bb202

bb51:                                             ; preds = %bb48
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %298 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1349 to %"core::panic::location::Location"*))
  %299 = zext i1 %298 to i8
  store i8 %299, i8* %2, align 1
  br label %bb202

bb52:                                             ; preds = %bb45
; call rustc_demangle::v0::Printer::print_lifetime_from_index
  %_78 = call zeroext i1 @_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17hb43ff9896c40678dE(%"v0::Printer"* align 8 dereferenceable(56) %self, i64 %x9)
  br label %bb53

bb53:                                             ; preds = %bb52
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %300 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_78)
  %301 = zext i1 %300 to i8
  store i8 %301, i8* %_77, align 1
  br label %bb54

bb54:                                             ; preds = %bb53
  %302 = load i8, i8* %_77, align 1, !range !2
  %303 = trunc i8 %302 to i1
  %_81 = zext i1 %303 to i64
  switch i64 %_81, label %bb56 [
    i64 0, label %bb55
    i64 1, label %bb57
  ]

bb56:                                             ; preds = %bb54
  unreachable

bb55:                                             ; preds = %bb54
; call rustc_demangle::v0::Printer::print
  %_86 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1352 to [0 x i8]*), i64 1)
  br label %bb58

bb57:                                             ; preds = %bb54
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %304 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1351 to %"core::panic::location::Location"*))
  %305 = zext i1 %304 to i8
  store i8 %305, i8* %2, align 1
  br label %bb202

bb58:                                             ; preds = %bb55
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %306 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_86)
  %307 = zext i1 %306 to i8
  store i8 %307, i8* %_85, align 1
  br label %bb59

bb59:                                             ; preds = %bb58
  %308 = load i8, i8* %_85, align 1, !range !2
  %309 = trunc i8 %308 to i1
  %_88 = zext i1 %309 to i64
  switch i64 %_88, label %bb60 [
    i64 0, label %bb62
    i64 1, label %bb61
  ]

bb60:                                             ; preds = %bb59
  unreachable

bb61:                                             ; preds = %bb59
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %310 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1354 to %"core::panic::location::Location"*))
  %311 = zext i1 %310 to i8
  store i8 %311, i8* %2, align 1
  br label %bb202

bb68:                                             ; preds = %bb65, %bb62
; call rustc_demangle::v0::Printer::print_type
  %_101 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17hd30efff67a15e4baE(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb69

bb63:                                             ; preds = %bb62
; call rustc_demangle::v0::Printer::print
  %_94 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1507 to [0 x i8]*), i64 4)
  br label %bb64

bb64:                                             ; preds = %bb63
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %312 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_94)
  %313 = zext i1 %312 to i8
  store i8 %313, i8* %_93, align 1
  br label %bb65

bb65:                                             ; preds = %bb64
  %314 = load i8, i8* %_93, align 1, !range !2
  %315 = trunc i8 %314 to i1
  %_96 = zext i1 %315 to i64
  switch i64 %_96, label %bb66 [
    i64 0, label %bb68
    i64 1, label %bb67
  ]

bb66:                                             ; preds = %bb65
  unreachable

bb67:                                             ; preds = %bb65
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %316 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1357 to %"core::panic::location::Location"*))
  %317 = zext i1 %316 to i8
  store i8 %317, i8* %2, align 1
  br label %bb202

bb69:                                             ; preds = %bb68
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %318 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_101)
  %319 = zext i1 %318 to i8
  store i8 %319, i8* %_100, align 1
  br label %bb70

bb70:                                             ; preds = %bb69
  %320 = load i8, i8* %_100, align 1, !range !2
  %321 = trunc i8 %320 to i1
  %_103 = zext i1 %321 to i64
  switch i64 %_103, label %bb71 [
    i64 0, label %bb200
    i64 1, label %bb72
  ]

bb71:                                             ; preds = %bb70
  unreachable

bb72:                                             ; preds = %bb70
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %322 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1359 to %"core::panic::location::Location"*))
  %323 = zext i1 %322 to i8
  store i8 %323, i8* %2, align 1
  br label %bb202

bb201:                                            ; preds = %bb200
  store i8 0, i8* %2, align 1
  br label %bb202
}

; rustc_demangle::v0::Printer::print_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h0a341ed5847fa860E"(%"v0::Printer"* align 8 dereferenceable(56) %this) unnamed_addr #1 {
start:
  %_140 = alloca i8, align 1
  %_133 = alloca i8, align 1
  %_124 = alloca i8, align 1
  %_115 = alloca { i64, i64 }, align 8
  %_108 = alloca i8, align 1
  %_101 = alloca i8, align 1
  %_93 = alloca i8, align 1
  %_86 = alloca i8, align 1
  %_81 = alloca { i8*, i64 }, align 8
  %iter = alloca %"core::str::iter::Split<char>", align 8
  %_79 = alloca %"core::str::iter::Split<char>", align 8
  %_78 = alloca %"core::str::iter::Split<char>", align 8
  %_68 = alloca i8, align 1
  %parts = alloca %"core::str::iter::Split<char>", align 8
  %_59 = alloca i8, align 1
  %_50 = alloca i8, align 1
  %_46 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_37 = alloca i8, align 1
  %err2 = alloca i8, align 1
  %_30 = alloca i8, align 1
  %_27 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_18 = alloca i8, align 1
  %err = alloca i8, align 1
  %x = alloca %"v0::Ident", align 8
  %_13 = alloca %"core::result::Result<v0::Ident, v0::ParseError>", align 8
  %abi1 = alloca %"v0::Ident", align 8
  %abi = alloca { i8*, i64 }, align 8
  %0 = alloca i8, align 1
; call rustc_demangle::v0::Printer::eat
  %is_unsafe = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %this, i8 85)
  br label %bb1

bb1:                                              ; preds = %start
; call rustc_demangle::v0::Printer::eat
  %_6 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %this, i8 75)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_6, label %bb3, label %bb33

bb33:                                             ; preds = %bb2
  %1 = bitcast { i8*, i64 }* %abi to {}**
  store {}* null, {}** %1, align 8
  br label %bb34

bb3:                                              ; preds = %bb2
; call rustc_demangle::v0::Printer::eat
  %_8 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %this, i8 67)
  br label %bb4

bb4:                                              ; preds = %bb3
  br i1 %_8, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %2 = bitcast %"v0::Printer"* %this to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %3 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %2 to i8*
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = trunc i8 %4 to i1
  %_11 = zext i1 %5 to i64
  switch i64 %_11, label %bb8 [
    i64 0, label %bb9
    i64 1, label %bb7
  ]

bb5:                                              ; preds = %bb4
  %6 = bitcast { i8*, i64 }* %abi to { [0 x i8]*, i64 }*
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1360 to [0 x i8]*), [0 x i8]** %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 1
  store i64 1, i64* %8, align 8
  br label %bb34

bb34:                                             ; preds = %bb33, %bb32, %bb5
  br i1 %is_unsafe, label %bb35, label %bb40

bb8:                                              ; preds = %bb6
  unreachable

bb9:                                              ; preds = %bb6
  %9 = bitcast %"v0::Printer"* %this to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %10 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %9 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %10, i32 0, i32 1
; call rustc_demangle::v0::Parser::ident
  call void @_ZN14rustc_demangle2v06Parser5ident17hc0ec47da9313c876E(%"core::result::Result<v0::Ident, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Ident, v0::ParseError>") dereferenceable(40) %_13, %"v0::Parser"* align 8 dereferenceable(32) %parser)
  br label %bb10

bb7:                                              ; preds = %bb6
; call rustc_demangle::v0::Printer::print
  %11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %0, align 1
  br label %bb102

bb102:                                            ; preds = %bb101, %bb100, %bb96, %bb89, %bb84, %bb79, %bb73, %bb69, %bb65, %bb54, %bb46, %bb39, %bb29, %bb31, %bb17, %bb19, %bb7
  %13 = load i8, i8* %0, align 1, !range !2
  %14 = trunc i8 %13 to i1
  ret i1 %14

bb10:                                             ; preds = %bb9
  %15 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_13 to i8*
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = trunc i8 %16 to i1
  %_15 = zext i1 %17 to i64
  switch i64 %_15, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  %18 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_13 to %"core::result::Result<v0::Ident, v0::ParseError>::Ok"*
  %19 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Ok", %"core::result::Result<v0::Ident, v0::ParseError>::Ok"* %18, i32 0, i32 1
  %20 = bitcast %"v0::Ident"* %x to i8*
  %21 = bitcast %"v0::Ident"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 32, i1 false)
  %22 = bitcast %"v0::Ident"* %abi1 to i8*
  %23 = bitcast %"v0::Ident"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false)
  %24 = bitcast %"v0::Ident"* %abi1 to { [0 x i8]*, i64 }*
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 0
  %_32.0 = load [0 x i8]*, [0 x i8]** %25, align 8, !nonnull !6
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 1
  %_32.1 = load i64, i64* %26, align 8
; call core::str::<impl str>::is_empty
  %_31 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17he6e5338d5d9dd13dE"([0 x i8]* nonnull align 1 %_32.0, i64 %_32.1)
  br label %bb23

bb11:                                             ; preds = %bb10
  %27 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_13 to %"core::result::Result<v0::Ident, v0::ParseError>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Err", %"core::result::Result<v0::Ident, v0::ParseError>::Err"* %27, i32 0, i32 1
  %29 = load i8, i8* %28, align 1, !range !2
  %30 = trunc i8 %29 to i1
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %err, align 1
; call rustc_demangle::v0::ParseError::message
  %32 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
  %_21.0 = extractvalue { [0 x i8]*, i64 } %32, 0
  %_21.1 = extractvalue { [0 x i8]*, i64 } %32, 1
  br label %bb14

bb14:                                             ; preds = %bb11
; call rustc_demangle::v0::Printer::print
  %_19 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 %_21.0, i64 %_21.1)
  br label %bb15

bb15:                                             ; preds = %bb14
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %33 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_19)
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %_18, align 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %35 = load i8, i8* %_18, align 1, !range !2
  %36 = trunc i8 %35 to i1
  %_23 = zext i1 %36 to i64
  switch i64 %_23, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ]

bb18:                                             ; preds = %bb16
  unreachable

bb17:                                             ; preds = %bb16
  %37 = load i8, i8* %err, align 1, !range !2
  %_28 = trunc i8 %37 to i1
  %38 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_27 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %39 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %38, i32 0, i32 1
  %40 = zext i1 %_28 to i8
  store i8 %40, i8* %39, align 1
  %41 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_27 to i8*
  store i8 1, i8* %41, align 8
  %42 = bitcast %"v0::Printer"* %this to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %43 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %42 to i8*
  %44 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 40, i1 false)
  store i8 0, i8* %0, align 1
  br label %bb102

bb19:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %45 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1363 to %"core::panic::location::Location"*))
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %0, align 1
  br label %bb102

bb23:                                             ; preds = %bb13
  br i1 %_31, label %bb20, label %bb21

bb21:                                             ; preds = %bb23
  %47 = getelementptr inbounds %"v0::Ident", %"v0::Ident"* %abi1, i32 0, i32 1
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 0
  %_35.0 = load [0 x i8]*, [0 x i8]** %48, align 8, !nonnull !6
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 1
  %_35.1 = load i64, i64* %49, align 8
; call core::str::<impl str>::is_empty
  %_34 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17he6e5338d5d9dd13dE"([0 x i8]* nonnull align 1 %_35.0, i64 %_35.1)
  br label %bb24

bb20:                                             ; preds = %bb23
  store i8 1, i8* %_30, align 1
  br label %bb22

bb22:                                             ; preds = %bb24, %bb20
  %50 = load i8, i8* %_30, align 1, !range !2
  %51 = trunc i8 %50 to i1
  br i1 %51, label %bb25, label %bb32

bb24:                                             ; preds = %bb21
  %_33 = xor i1 %_34, true
  %52 = zext i1 %_33 to i8
  store i8 %52, i8* %_30, align 1
  br label %bb22

bb32:                                             ; preds = %bb22
  %53 = bitcast %"v0::Ident"* %abi1 to { [0 x i8]*, i64 }*
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 0
  %_48.0 = load [0 x i8]*, [0 x i8]** %54, align 8, !nonnull !6
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 1
  %_48.1 = load i64, i64* %55, align 8
  %56 = bitcast { i8*, i64 }* %abi to { [0 x i8]*, i64 }*
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 0
  store [0 x i8]* %_48.0, [0 x i8]** %57, align 8
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 1
  store i64 %_48.1, i64* %58, align 8
  br label %bb34

bb25:                                             ; preds = %bb22
  store i8 0, i8* %err2, align 1
; call rustc_demangle::v0::ParseError::message
  %59 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err2)
  %_40.0 = extractvalue { [0 x i8]*, i64 } %59, 0
  %_40.1 = extractvalue { [0 x i8]*, i64 } %59, 1
  br label %bb26

bb26:                                             ; preds = %bb25
; call rustc_demangle::v0::Printer::print
  %_38 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 %_40.0, i64 %_40.1)
  br label %bb27

bb27:                                             ; preds = %bb26
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %60 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_38)
  %61 = zext i1 %60 to i8
  store i8 %61, i8* %_37, align 1
  br label %bb28

bb28:                                             ; preds = %bb27
  %62 = load i8, i8* %_37, align 1, !range !2
  %63 = trunc i8 %62 to i1
  %_42 = zext i1 %63 to i64
  switch i64 %_42, label %bb30 [
    i64 0, label %bb29
    i64 1, label %bb31
  ]

bb30:                                             ; preds = %bb28
  unreachable

bb29:                                             ; preds = %bb28
  %64 = load i8, i8* %err2, align 1, !range !2
  %_47 = trunc i8 %64 to i1
  %65 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_46 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %66 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %65, i32 0, i32 1
  %67 = zext i1 %_47 to i8
  store i8 %67, i8* %66, align 1
  %68 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_46 to i8*
  store i8 1, i8* %68, align 8
  %69 = bitcast %"v0::Printer"* %this to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %70 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %69 to i8*
  %71 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 40, i1 false)
  store i8 0, i8* %0, align 1
  br label %bb102

bb31:                                             ; preds = %bb28
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %72 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1365 to %"core::panic::location::Location"*))
  %73 = zext i1 %72 to i8
  store i8 %73, i8* %0, align 1
  br label %bb102

bb40:                                             ; preds = %bb37, %bb34
  %74 = bitcast { i8*, i64 }* %abi to {}**
  %75 = load {}*, {}** %74, align 8
  %76 = icmp eq {}* %75, null
  %_57 = select i1 %76, i64 0, i64 1
  %77 = icmp eq i64 %_57, 1
  br i1 %77, label %bb41, label %bb74

bb35:                                             ; preds = %bb34
; call rustc_demangle::v0::Printer::print
  %_51 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1366 to [0 x i8]*), i64 7)
  br label %bb36

bb36:                                             ; preds = %bb35
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %78 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_51)
  %79 = zext i1 %78 to i8
  store i8 %79, i8* %_50, align 1
  br label %bb37

bb37:                                             ; preds = %bb36
  %80 = load i8, i8* %_50, align 1, !range !2
  %81 = trunc i8 %80 to i1
  %_53 = zext i1 %81 to i64
  switch i64 %_53, label %bb38 [
    i64 0, label %bb40
    i64 1, label %bb39
  ]

bb38:                                             ; preds = %bb37
  unreachable

bb39:                                             ; preds = %bb37
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %82 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1368 to %"core::panic::location::Location"*))
  %83 = zext i1 %82 to i8
  store i8 %83, i8* %0, align 1
  br label %bb102

bb41:                                             ; preds = %bb40
  %84 = bitcast { i8*, i64 }* %abi to { [0 x i8]*, i64 }*
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %84, i32 0, i32 0
  %abi.0 = load [0 x i8]*, [0 x i8]** %85, align 8, !nonnull !6
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %84, i32 0, i32 1
  %abi.1 = load i64, i64* %86, align 8
; call rustc_demangle::v0::Printer::print
  %_60 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc1369 to [0 x i8]*), i64 8)
  br label %bb42

bb74:                                             ; preds = %bb71, %bb40
; call rustc_demangle::v0::Printer::print
  %_109 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1384 to [0 x i8]*), i64 3)
  br label %bb75

bb42:                                             ; preds = %bb41
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %87 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_60)
  %88 = zext i1 %87 to i8
  store i8 %88, i8* %_59, align 1
  br label %bb43

bb43:                                             ; preds = %bb42
  %89 = load i8, i8* %_59, align 1, !range !2
  %90 = trunc i8 %89 to i1
  %_62 = zext i1 %90 to i64
  switch i64 %_62, label %bb45 [
    i64 0, label %bb44
    i64 1, label %bb46
  ]

bb45:                                             ; preds = %bb43
  unreachable

bb44:                                             ; preds = %bb43
; call core::str::<impl str>::split
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h91a70761629a9e2dE"(%"core::str::iter::Split<char>"* noalias nocapture sret(%"core::str::iter::Split<char>") dereferenceable(72) %parts, [0 x i8]* nonnull align 1 %abi.0, i64 %abi.1, i32 95)
  br label %bb47

bb46:                                             ; preds = %bb43
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %91 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1371 to %"core::panic::location::Location"*))
  %92 = zext i1 %91 to i8
  store i8 %92, i8* %0, align 1
  br label %bb102

bb47:                                             ; preds = %bb44
; call <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %93 = call { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h31aa09f3cec97c4aE"(%"core::str::iter::Split<char>"* align 8 dereferenceable(72) %parts)
  %_72.0 = extractvalue { i8*, i64 } %93, 0
  %_72.1 = extractvalue { i8*, i64 } %93, 1
  br label %bb48

bb48:                                             ; preds = %bb47
; call core::option::Option<T>::unwrap
  %94 = call { [0 x i8]*, i64 } @"_ZN4core6option15Option$LT$T$GT$6unwrap17h886118702e2ea67cE"(i8* align 1 %_72.0, i64 %_72.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1373 to %"core::panic::location::Location"*))
  %_71.0 = extractvalue { [0 x i8]*, i64 } %94, 0
  %_71.1 = extractvalue { [0 x i8]*, i64 } %94, 1
  br label %bb49

bb49:                                             ; preds = %bb48
; call rustc_demangle::v0::Printer::print
  %_69 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 %_71.0, i64 %_71.1)
  br label %bb50

bb50:                                             ; preds = %bb49
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %95 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_69)
  %96 = zext i1 %95 to i8
  store i8 %96, i8* %_68, align 1
  br label %bb51

bb51:                                             ; preds = %bb50
  %97 = load i8, i8* %_68, align 1, !range !2
  %98 = trunc i8 %97 to i1
  %_74 = zext i1 %98 to i64
  switch i64 %_74, label %bb53 [
    i64 0, label %bb52
    i64 1, label %bb54
  ]

bb53:                                             ; preds = %bb51
  unreachable

bb52:                                             ; preds = %bb51
  %99 = bitcast %"core::str::iter::Split<char>"* %_79 to i8*
  %100 = bitcast %"core::str::iter::Split<char>"* %parts to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 72, i1 false)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h27e4b7cf9f80a07bE"(%"core::str::iter::Split<char>"* noalias nocapture sret(%"core::str::iter::Split<char>") dereferenceable(72) %_78, %"core::str::iter::Split<char>"* noalias nocapture dereferenceable(72) %_79)
  br label %bb55

bb54:                                             ; preds = %bb51
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %101 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1375 to %"core::panic::location::Location"*))
  %102 = zext i1 %101 to i8
  store i8 %102, i8* %0, align 1
  br label %bb102

bb55:                                             ; preds = %bb52
  %103 = bitcast %"core::str::iter::Split<char>"* %iter to i8*
  %104 = bitcast %"core::str::iter::Split<char>"* %_78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 72, i1 false)
  br label %bb56

bb56:                                             ; preds = %bb67, %bb55
; call <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %105 = call { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h31aa09f3cec97c4aE"(%"core::str::iter::Split<char>"* align 8 dereferenceable(72) %iter)
  store { i8*, i64 } %105, { i8*, i64 }* %_81, align 8
  br label %bb57

bb57:                                             ; preds = %bb56
  %106 = bitcast { i8*, i64 }* %_81 to {}**
  %107 = load {}*, {}** %106, align 8
  %108 = icmp eq {}* %107, null
  %_84 = select i1 %108, i64 0, i64 1
  switch i64 %_84, label %bb59 [
    i64 0, label %bb60
    i64 1, label %bb58
  ]

bb59:                                             ; preds = %bb57
  unreachable

bb60:                                             ; preds = %bb57
; call rustc_demangle::v0::Printer::print
  %_102 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1381 to [0 x i8]*), i64 2)
  br label %bb70

bb58:                                             ; preds = %bb57
  %109 = bitcast { i8*, i64 }* %_81 to { [0 x i8]*, i64 }*
  %110 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %109, i32 0, i32 0
  %part.0 = load [0 x i8]*, [0 x i8]** %110, align 8, !nonnull !6
  %111 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %109, i32 0, i32 1
  %part.1 = load i64, i64* %111, align 8
; call rustc_demangle::v0::Printer::print
  %_87 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1537 to [0 x i8]*), i64 1)
  br label %bb61

bb61:                                             ; preds = %bb58
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %112 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_87)
  %113 = zext i1 %112 to i8
  store i8 %113, i8* %_86, align 1
  br label %bb62

bb62:                                             ; preds = %bb61
  %114 = load i8, i8* %_86, align 1, !range !2
  %115 = trunc i8 %114 to i1
  %_89 = zext i1 %115 to i64
  switch i64 %_89, label %bb64 [
    i64 0, label %bb63
    i64 1, label %bb65
  ]

bb64:                                             ; preds = %bb62
  unreachable

bb63:                                             ; preds = %bb62
; call rustc_demangle::v0::Printer::print
  %_94 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 %part.0, i64 %part.1)
  br label %bb66

bb65:                                             ; preds = %bb62
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %116 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1378 to %"core::panic::location::Location"*))
  %117 = zext i1 %116 to i8
  store i8 %117, i8* %0, align 1
  br label %bb102

bb66:                                             ; preds = %bb63
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %118 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_94)
  %119 = zext i1 %118 to i8
  store i8 %119, i8* %_93, align 1
  br label %bb67

bb67:                                             ; preds = %bb66
  %120 = load i8, i8* %_93, align 1, !range !2
  %121 = trunc i8 %120 to i1
  %_97 = zext i1 %121 to i64
  switch i64 %_97, label %bb68 [
    i64 0, label %bb56
    i64 1, label %bb69
  ]

bb68:                                             ; preds = %bb67
  unreachable

bb69:                                             ; preds = %bb67
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %122 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1380 to %"core::panic::location::Location"*))
  %123 = zext i1 %122 to i8
  store i8 %123, i8* %0, align 1
  br label %bb102

bb70:                                             ; preds = %bb60
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %124 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_102)
  %125 = zext i1 %124 to i8
  store i8 %125, i8* %_101, align 1
  br label %bb71

bb71:                                             ; preds = %bb70
  %126 = load i8, i8* %_101, align 1, !range !2
  %127 = trunc i8 %126 to i1
  %_104 = zext i1 %127 to i64
  switch i64 %_104, label %bb72 [
    i64 0, label %bb74
    i64 1, label %bb73
  ]

bb72:                                             ; preds = %bb71
  unreachable

bb73:                                             ; preds = %bb71
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %128 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1383 to %"core::panic::location::Location"*))
  %129 = zext i1 %128 to i8
  store i8 %129, i8* %0, align 1
  br label %bb102

bb75:                                             ; preds = %bb74
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %130 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_109)
  %131 = zext i1 %130 to i8
  store i8 %131, i8* %_108, align 1
  br label %bb76

bb76:                                             ; preds = %bb75
  %132 = load i8, i8* %_108, align 1, !range !2
  %133 = trunc i8 %132 to i1
  %_111 = zext i1 %133 to i64
  switch i64 %_111, label %bb78 [
    i64 0, label %bb77
    i64 1, label %bb79
  ]

bb78:                                             ; preds = %bb76
  unreachable

bb77:                                             ; preds = %bb76
; call rustc_demangle::v0::Printer::print_sep_list
  %134 = call { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h58c0789ac6806da3E(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1494 to [0 x i8]*), i64 2)
  %_116.0 = extractvalue { i64, i64 } %134, 0
  %_116.1 = extractvalue { i64, i64 } %134, 1
  br label %bb80

bb79:                                             ; preds = %bb76
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %135 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1386 to %"core::panic::location::Location"*))
  %136 = zext i1 %135 to i8
  store i8 %136, i8* %0, align 1
  br label %bb102

bb80:                                             ; preds = %bb77
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %137 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd46a3fe531d61413E"(i64 %_116.0, i64 %_116.1)
  store { i64, i64 } %137, { i64, i64 }* %_115, align 8
  br label %bb81

bb81:                                             ; preds = %bb80
  %138 = bitcast { i64, i64 }* %_115 to i64*
  %_120 = load i64, i64* %138, align 8, !range !5
  switch i64 %_120, label %bb83 [
    i64 0, label %bb82
    i64 1, label %bb84
  ]

bb83:                                             ; preds = %bb81
  unreachable

bb82:                                             ; preds = %bb81
  %139 = bitcast { i64, i64 }* %_115 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"*
  %140 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"* %139, i32 0, i32 1
  %val = load i64, i64* %140, align 8
; call rustc_demangle::v0::Printer::print
  %_125 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1486 to [0 x i8]*), i64 1)
  br label %bb85

bb84:                                             ; preds = %bb81
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %141 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1389 to %"core::panic::location::Location"*))
  %142 = zext i1 %141 to i8
  store i8 %142, i8* %0, align 1
  br label %bb102

bb85:                                             ; preds = %bb82
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %143 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_125)
  %144 = zext i1 %143 to i8
  store i8 %144, i8* %_124, align 1
  br label %bb86

bb86:                                             ; preds = %bb85
  %145 = load i8, i8* %_124, align 1, !range !2
  %146 = trunc i8 %145 to i1
  %_127 = zext i1 %146 to i64
  switch i64 %_127, label %bb88 [
    i64 0, label %bb87
    i64 1, label %bb89
  ]

bb88:                                             ; preds = %bb86
  unreachable

bb87:                                             ; preds = %bb86
; call rustc_demangle::v0::Printer::eat
  %_131 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %this, i8 117)
  br label %bb90

bb89:                                             ; preds = %bb86
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %147 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1392 to %"core::panic::location::Location"*))
  %148 = zext i1 %147 to i8
  store i8 %148, i8* %0, align 1
  br label %bb102

bb90:                                             ; preds = %bb87
  br i1 %_131, label %bb101, label %bb91

bb91:                                             ; preds = %bb90
; call rustc_demangle::v0::Printer::print
  %_134 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1393 to [0 x i8]*), i64 4)
  br label %bb92

bb101:                                            ; preds = %bb98, %bb90
  store i8 0, i8* %0, align 1
  br label %bb102

bb92:                                             ; preds = %bb91
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %149 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_134)
  %150 = zext i1 %149 to i8
  store i8 %150, i8* %_133, align 1
  br label %bb93

bb93:                                             ; preds = %bb92
  %151 = load i8, i8* %_133, align 1, !range !2
  %152 = trunc i8 %151 to i1
  %_136 = zext i1 %152 to i64
  switch i64 %_136, label %bb95 [
    i64 0, label %bb94
    i64 1, label %bb96
  ]

bb95:                                             ; preds = %bb93
  unreachable

bb94:                                             ; preds = %bb93
; call rustc_demangle::v0::Printer::print_type
  %_141 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17hd30efff67a15e4baE(%"v0::Printer"* align 8 dereferenceable(56) %this)
  br label %bb97

bb96:                                             ; preds = %bb93
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %153 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1395 to %"core::panic::location::Location"*))
  %154 = zext i1 %153 to i8
  store i8 %154, i8* %0, align 1
  br label %bb102

bb97:                                             ; preds = %bb94
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %155 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_141)
  %156 = zext i1 %155 to i8
  store i8 %156, i8* %_140, align 1
  br label %bb98

bb98:                                             ; preds = %bb97
  %157 = load i8, i8* %_140, align 1, !range !2
  %158 = trunc i8 %157 to i1
  %_143 = zext i1 %158 to i64
  switch i64 %_143, label %bb99 [
    i64 0, label %bb101
    i64 1, label %bb100
  ]

bb99:                                             ; preds = %bb98
  unreachable

bb100:                                            ; preds = %bb98
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %159 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1397 to %"core::panic::location::Location"*))
  %160 = zext i1 %159 to i8
  store i8 %160, i8* %0, align 1
  br label %bb102
}

; rustc_demangle::v0::Printer::print_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17hb9fc06000f423aa8E"(%"v0::Printer"* align 8 dereferenceable(56) %this) unnamed_addr #1 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca i8, align 1
; call rustc_demangle::v0::Printer::print_sep_list
  %1 = call { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h1466d0aa3c953d40E(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1398 to [0 x i8]*), i64 3)
  %_4.0 = extractvalue { i64, i64 } %1, 0
  %_4.1 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %2 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd46a3fe531d61413E"(i64 %_4.0, i64 %_4.1)
  store { i64, i64 } %2, { i64, i64 }* %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, i64 }* %_3 to i64*
  %_8 = load i64, i64* %3, align 8, !range !5
  switch i64 %_8, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %4 = bitcast { i64, i64 }* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"*
  %5 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"* %4, i32 0, i32 1
  %val = load i64, i64* %5, align 8
  store i8 0, i8* %0, align 1
  br label %bb6

bb5:                                              ; preds = %bb2
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %6 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1400 to %"core::panic::location::Location"*))
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb3, %bb5
  %8 = load i8, i8* %0, align 1, !range !2
  %9 = trunc i8 %8 to i1
  ret i1 %9
}

; rustc_demangle::v0::Printer::print_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h962a4b96916f6f07E"(%"v0::Parser"* align 8 dereferenceable(32) %p) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %p, i32 0, i32 1
  %1 = load i64, i64* %0, align 8
  %2 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %1, i64 1)
  %_3.0 = extractvalue { i64, i1 } %2, 0
  %_3.1 = extractvalue { i64, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_3.1, i1 false)
  br i1 %3, label %panic, label %bb1

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds %"v0::Parser", %"v0::Parser"* %p, i32 0, i32 1
  store i64 %_3.0, i64* %4, align 8
  ret void

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1402 to %"core::panic::location::Location"*)) #12
  unreachable
}

; rustc_demangle::v0::Printer::print_path_maybe_open_generics
; Function Attrs: nonlazybind uwtable
define internal i8 @_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17h50a7269c43e590afE(%"v0::Printer"* align 8 dereferenceable(56) %self) unnamed_addr #0 {
start:
  %_40 = alloca i8, align 1
  %_31 = alloca { i64, i64 }, align 8
  %_24 = alloca i8, align 1
  %_17 = alloca i8, align 1
  %_8 = alloca i8*, align 8
  %_5 = alloca i8, align 1
  %open = alloca i8, align 1
  %0 = alloca i8, align 1
; call rustc_demangle::v0::Printer::eat
  %_2 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 66)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb8

bb8:                                              ; preds = %bb1
; call rustc_demangle::v0::Printer::eat
  %_15 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 73)
  br label %bb9

bb2:                                              ; preds = %bb1
  store i8 0, i8* %open, align 1
  store i8* %open, i8** %_8, align 8
  %1 = load i8*, i8** %_8, align 8, !nonnull !6
; call rustc_demangle::v0::Printer::print_backref
  %_6 = call zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17hd9c15367e15d8d25E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8* align 1 dereferenceable(1) %1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %2 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_6)
  %3 = zext i1 %2 to i8
  store i8 %3, i8* %_5, align 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = load i8, i8* %_5, align 1, !range !2
  %5 = trunc i8 %4 to i1
  %_10 = zext i1 %5 to i64
  switch i64 %_10, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %6 = load i8, i8* %open, align 1, !range !2
  %_14 = trunc i8 %6 to i1
  %7 = zext i1 %_14 to i8
  store i8 %7, i8* %0, align 1
  br label %bb32

bb7:                                              ; preds = %bb4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call i8 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3683105cc7f4c7c0E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1404 to %"core::panic::location::Location"*)), !range !7
  store i8 %8, i8* %0, align 1
  br label %bb32

bb32:                                             ; preds = %bb29, %bb31, %bb23, %bb25, %bb20, %bb15, %bb5, %bb7
  %9 = load i8, i8* %0, align 1, !range !7
  ret i8 %9

bb9:                                              ; preds = %bb8
  br i1 %_15, label %bb10, label %bb26

bb26:                                             ; preds = %bb9
; call rustc_demangle::v0::Printer::print_path
  %_41 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h66709c17d7c9cba4E(%"v0::Printer"* align 8 dereferenceable(56) %self, i1 zeroext false)
  br label %bb27

bb10:                                             ; preds = %bb9
; call rustc_demangle::v0::Printer::print_path
  %_18 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h66709c17d7c9cba4E(%"v0::Printer"* align 8 dereferenceable(56) %self, i1 zeroext false)
  br label %bb11

bb11:                                             ; preds = %bb10
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %10 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_18)
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %_17, align 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %12 = load i8, i8* %_17, align 1, !range !2
  %13 = trunc i8 %12 to i1
  %_20 = zext i1 %13 to i64
  switch i64 %_20, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ]

bb14:                                             ; preds = %bb12
  unreachable

bb13:                                             ; preds = %bb12
; call rustc_demangle::v0::Printer::print
  %_25 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1419 to [0 x i8]*), i64 1)
  br label %bb16

bb15:                                             ; preds = %bb12
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %14 = call i8 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3683105cc7f4c7c0E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1406 to %"core::panic::location::Location"*)), !range !7
  store i8 %14, i8* %0, align 1
  br label %bb32

bb16:                                             ; preds = %bb13
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %15 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_25)
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %_24, align 1
  br label %bb17

bb17:                                             ; preds = %bb16
  %17 = load i8, i8* %_24, align 1, !range !2
  %18 = trunc i8 %17 to i1
  %_27 = zext i1 %18 to i64
  switch i64 %_27, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
; call rustc_demangle::v0::Printer::print_sep_list
  %19 = call { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h8f84a8329fd6d9daE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1494 to [0 x i8]*), i64 2)
  %_32.0 = extractvalue { i64, i64 } %19, 0
  %_32.1 = extractvalue { i64, i64 } %19, 1
  br label %bb21

bb20:                                             ; preds = %bb17
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call i8 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3683105cc7f4c7c0E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1409 to %"core::panic::location::Location"*)), !range !7
  store i8 %20, i8* %0, align 1
  br label %bb32

bb21:                                             ; preds = %bb18
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd46a3fe531d61413E"(i64 %_32.0, i64 %_32.1)
  store { i64, i64 } %21, { i64, i64 }* %_31, align 8
  br label %bb22

bb22:                                             ; preds = %bb21
  %22 = bitcast { i64, i64 }* %_31 to i64*
  %_36 = load i64, i64* %22, align 8, !range !5
  switch i64 %_36, label %bb24 [
    i64 0, label %bb23
    i64 1, label %bb25
  ]

bb24:                                             ; preds = %bb22
  unreachable

bb23:                                             ; preds = %bb22
  %23 = bitcast { i64, i64 }* %_31 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"*
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"* %23, i32 0, i32 1
  %val = load i64, i64* %24, align 8
  store i8 1, i8* %0, align 1
  br label %bb32

bb25:                                             ; preds = %bb22
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %25 = call i8 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3683105cc7f4c7c0E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1412 to %"core::panic::location::Location"*)), !range !7
  store i8 %25, i8* %0, align 1
  br label %bb32

bb27:                                             ; preds = %bb26
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %26 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_41)
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %_40, align 1
  br label %bb28

bb28:                                             ; preds = %bb27
  %28 = load i8, i8* %_40, align 1, !range !2
  %29 = trunc i8 %28 to i1
  %_43 = zext i1 %29 to i64
  switch i64 %_43, label %bb30 [
    i64 0, label %bb29
    i64 1, label %bb31
  ]

bb30:                                             ; preds = %bb28
  unreachable

bb29:                                             ; preds = %bb28
  store i8 0, i8* %0, align 1
  br label %bb32

bb31:                                             ; preds = %bb28
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %30 = call i8 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3683105cc7f4c7c0E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1414 to %"core::panic::location::Location"*)), !range !7
  store i8 %30, i8* %0, align 1
  br label %bb32
}

; rustc_demangle::v0::Printer::print_path_maybe_open_generics::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics28_$u7b$$u7b$closure$u7d$$u7d$17ha881572837132005E"(i8* align 1 dereferenceable(1) %_1, %"v0::Printer"* align 8 dereferenceable(56) %this) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  %0 = alloca i8, align 1
; call rustc_demangle::v0::Printer::print_path_maybe_open_generics
  %_5 = call i8 @_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17h50a7269c43e590afE(%"v0::Printer"* align 8 dereferenceable(56) %this), !range !7
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %1 = call i8 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he461217d26ea2518E"(i8 %_5), !range !7
  store i8 %1, i8* %_4, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = load i8, i8* %_4, align 1, !range !7
  %3 = sub i8 %2, 2
  %4 = icmp eq i8 %3, 0
  %_7 = select i1 %4, i64 1, i64 0
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %5 = load i8, i8* %_4, align 1, !range !2
  %val = trunc i8 %5 to i1
  %6 = zext i1 %val to i8
  store i8 %6, i8* %_1, align 1
  store i8 0, i8* %0, align 1
  br label %bb6

bb5:                                              ; preds = %bb2
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1416 to %"core::panic::location::Location"*))
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb3, %bb5
  %9 = load i8, i8* %0, align 1, !range !2
  %10 = trunc i8 %9 to i1
  ret i1 %10
}

; rustc_demangle::v0::Printer::print_dyn_trait
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer15print_dyn_trait17h59039264df61c7fbE(%"v0::Printer"* align 8 dereferenceable(56) %self) unnamed_addr #0 {
start:
  %_71 = alloca i8, align 1
  %_63 = alloca i8, align 1
  %_56 = alloca i8, align 1
  %_51 = alloca %"v0::Ident", align 8
  %_48 = alloca i8, align 1
  %_45 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_36 = alloca i8, align 1
  %err = alloca i8, align 1
  %x = alloca %"v0::Ident", align 8
  %_31 = alloca %"core::result::Result<v0::Ident, v0::ParseError>", align 8
  %name = alloca %"v0::Ident", align 8
  %_21 = alloca i8, align 1
  %_14 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %open = alloca i8, align 1
  %0 = alloca i8, align 1
; call rustc_demangle::v0::Printer::print_path_maybe_open_generics
  %_4 = call i8 @_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17h50a7269c43e590afE(%"v0::Printer"* align 8 dereferenceable(56) %self), !range !7
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %1 = call i8 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he461217d26ea2518E"(i8 %_4), !range !7
  store i8 %1, i8* %_3, align 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = load i8, i8* %_3, align 1, !range !7
  %3 = sub i8 %2, 2
  %4 = icmp eq i8 %3, 0
  %_6 = select i1 %4, i64 1, i64 0
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %5 = load i8, i8* %_3, align 1, !range !2
  %val = trunc i8 %5 to i1
  %6 = zext i1 %val to i8
  store i8 %6, i8* %open, align 1
  br label %bb6

bb5:                                              ; preds = %bb2
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1418 to %"core::panic::location::Location"*))
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb55

bb55:                                             ; preds = %bb54, %bb53, %bb47, %bb43, %bb38, %bb31, %bb33, %bb21, %bb19, %bb14, %bb5
  %9 = load i8, i8* %0, align 1, !range !2
  %10 = trunc i8 %9 to i1
  ret i1 %10

bb6:                                              ; preds = %bb45, %bb3
; call rustc_demangle::v0::Printer::eat
  %_10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 112)
  br label %bb7

bb7:                                              ; preds = %bb6
  br i1 %_10, label %bb8, label %bb48

bb48:                                             ; preds = %bb7
  %11 = load i8, i8* %open, align 1, !range !2
  %_70 = trunc i8 %11 to i1
  br i1 %_70, label %bb49, label %bb54

bb8:                                              ; preds = %bb7
  %12 = load i8, i8* %open, align 1, !range !2
  %_13 = trunc i8 %12 to i1
  %_12 = xor i1 %_13, true
  br i1 %_12, label %bb9, label %bb15

bb15:                                             ; preds = %bb8
; call rustc_demangle::v0::Printer::print
  %_22 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1494 to [0 x i8]*), i64 2)
  br label %bb16

bb9:                                              ; preds = %bb8
; call rustc_demangle::v0::Printer::print
  %_15 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1419 to [0 x i8]*), i64 1)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %13 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_15)
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %_14, align 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %15 = load i8, i8* %_14, align 1, !range !2
  %16 = trunc i8 %15 to i1
  %_17 = zext i1 %16 to i64
  switch i64 %_17, label %bb13 [
    i64 0, label %bb12
    i64 1, label %bb14
  ]

bb13:                                             ; preds = %bb11
  unreachable

bb12:                                             ; preds = %bb11
  store i8 1, i8* %open, align 1
  br label %bb20

bb14:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %17 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1421 to %"core::panic::location::Location"*))
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %0, align 1
  br label %bb55

bb20:                                             ; preds = %bb17, %bb12
  %19 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %20 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %19 to i8*
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = trunc i8 %21 to i1
  %_29 = zext i1 %22 to i64
  switch i64 %_29, label %bb22 [
    i64 0, label %bb23
    i64 1, label %bb21
  ]

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %23 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_22)
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %_21, align 1
  br label %bb17

bb17:                                             ; preds = %bb16
  %25 = load i8, i8* %_21, align 1, !range !2
  %26 = trunc i8 %25 to i1
  %_24 = zext i1 %26 to i64
  switch i64 %_24, label %bb18 [
    i64 0, label %bb20
    i64 1, label %bb19
  ]

bb18:                                             ; preds = %bb17
  unreachable

bb19:                                             ; preds = %bb17
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %27 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1424 to %"core::panic::location::Location"*))
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %0, align 1
  br label %bb55

bb22:                                             ; preds = %bb20
  unreachable

bb23:                                             ; preds = %bb20
  %29 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %30 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %29 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %30, i32 0, i32 1
; call rustc_demangle::v0::Parser::ident
  call void @_ZN14rustc_demangle2v06Parser5ident17hc0ec47da9313c876E(%"core::result::Result<v0::Ident, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Ident, v0::ParseError>") dereferenceable(40) %_31, %"v0::Parser"* align 8 dereferenceable(32) %parser)
  br label %bb24

bb21:                                             ; preds = %bb20
; call rustc_demangle::v0::Printer::print
  %31 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %0, align 1
  br label %bb55

bb24:                                             ; preds = %bb23
  %33 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_31 to i8*
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = trunc i8 %34 to i1
  %_33 = zext i1 %35 to i64
  switch i64 %_33, label %bb26 [
    i64 0, label %bb27
    i64 1, label %bb25
  ]

bb26:                                             ; preds = %bb24
  unreachable

bb27:                                             ; preds = %bb24
  %36 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_31 to %"core::result::Result<v0::Ident, v0::ParseError>::Ok"*
  %37 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Ok", %"core::result::Result<v0::Ident, v0::ParseError>::Ok"* %36, i32 0, i32 1
  %38 = bitcast %"v0::Ident"* %x to i8*
  %39 = bitcast %"v0::Ident"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 32, i1 false)
  %40 = bitcast %"v0::Ident"* %name to i8*
  %41 = bitcast %"v0::Ident"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 32, i1 false)
  %42 = bitcast %"v0::Ident"* %_51 to i8*
  %43 = bitcast %"v0::Ident"* %name to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 32, i1 false)
; call rustc_demangle::v0::Printer::print
  %_49 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hea9e22d055e9d00aE(%"v0::Printer"* align 8 dereferenceable(56) %self, %"v0::Ident"* noalias nocapture dereferenceable(32) %_51)
  br label %bb34

bb25:                                             ; preds = %bb24
  %44 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_31 to %"core::result::Result<v0::Ident, v0::ParseError>::Err"*
  %45 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Err", %"core::result::Result<v0::Ident, v0::ParseError>::Err"* %44, i32 0, i32 1
  %46 = load i8, i8* %45, align 1, !range !2
  %47 = trunc i8 %46 to i1
  %48 = zext i1 %47 to i8
  store i8 %48, i8* %err, align 1
; call rustc_demangle::v0::ParseError::message
  %49 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
  %_39.0 = extractvalue { [0 x i8]*, i64 } %49, 0
  %_39.1 = extractvalue { [0 x i8]*, i64 } %49, 1
  br label %bb28

bb28:                                             ; preds = %bb25
; call rustc_demangle::v0::Printer::print
  %_37 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_39.0, i64 %_39.1)
  br label %bb29

bb29:                                             ; preds = %bb28
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %50 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_37)
  %51 = zext i1 %50 to i8
  store i8 %51, i8* %_36, align 1
  br label %bb30

bb30:                                             ; preds = %bb29
  %52 = load i8, i8* %_36, align 1, !range !2
  %53 = trunc i8 %52 to i1
  %_41 = zext i1 %53 to i64
  switch i64 %_41, label %bb32 [
    i64 0, label %bb31
    i64 1, label %bb33
  ]

bb32:                                             ; preds = %bb30
  unreachable

bb31:                                             ; preds = %bb30
  %54 = load i8, i8* %err, align 1, !range !2
  %_46 = trunc i8 %54 to i1
  %55 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_45 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %56 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %55, i32 0, i32 1
  %57 = zext i1 %_46 to i8
  store i8 %57, i8* %56, align 1
  %58 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_45 to i8*
  store i8 1, i8* %58, align 8
  %59 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %60 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %59 to i8*
  %61 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 40, i1 false)
  store i8 0, i8* %0, align 1
  br label %bb55

bb33:                                             ; preds = %bb30
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %62 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1427 to %"core::panic::location::Location"*))
  %63 = zext i1 %62 to i8
  store i8 %63, i8* %0, align 1
  br label %bb55

bb34:                                             ; preds = %bb27
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %64 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_49)
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %_48, align 1
  br label %bb35

bb35:                                             ; preds = %bb34
  %66 = load i8, i8* %_48, align 1, !range !2
  %67 = trunc i8 %66 to i1
  %_52 = zext i1 %67 to i64
  switch i64 %_52, label %bb37 [
    i64 0, label %bb36
    i64 1, label %bb38
  ]

bb37:                                             ; preds = %bb35
  unreachable

bb36:                                             ; preds = %bb35
; call rustc_demangle::v0::Printer::print
  %_57 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1430 to [0 x i8]*), i64 3)
  br label %bb39

bb38:                                             ; preds = %bb35
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %68 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1429 to %"core::panic::location::Location"*))
  %69 = zext i1 %68 to i8
  store i8 %69, i8* %0, align 1
  br label %bb55

bb39:                                             ; preds = %bb36
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %70 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_57)
  %71 = zext i1 %70 to i8
  store i8 %71, i8* %_56, align 1
  br label %bb40

bb40:                                             ; preds = %bb39
  %72 = load i8, i8* %_56, align 1, !range !2
  %73 = trunc i8 %72 to i1
  %_59 = zext i1 %73 to i64
  switch i64 %_59, label %bb42 [
    i64 0, label %bb41
    i64 1, label %bb43
  ]

bb42:                                             ; preds = %bb40
  unreachable

bb41:                                             ; preds = %bb40
; call rustc_demangle::v0::Printer::print_type
  %_64 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17hd30efff67a15e4baE(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb44

bb43:                                             ; preds = %bb40
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %74 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1432 to %"core::panic::location::Location"*))
  %75 = zext i1 %74 to i8
  store i8 %75, i8* %0, align 1
  br label %bb55

bb44:                                             ; preds = %bb41
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %76 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_64)
  %77 = zext i1 %76 to i8
  store i8 %77, i8* %_63, align 1
  br label %bb45

bb45:                                             ; preds = %bb44
  %78 = load i8, i8* %_63, align 1, !range !2
  %79 = trunc i8 %78 to i1
  %_66 = zext i1 %79 to i64
  switch i64 %_66, label %bb46 [
    i64 0, label %bb6
    i64 1, label %bb47
  ]

bb46:                                             ; preds = %bb45
  unreachable

bb47:                                             ; preds = %bb45
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %80 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1434 to %"core::panic::location::Location"*))
  %81 = zext i1 %80 to i8
  store i8 %81, i8* %0, align 1
  br label %bb55

bb54:                                             ; preds = %bb51, %bb48
  store i8 0, i8* %0, align 1
  br label %bb55

bb49:                                             ; preds = %bb48
; call rustc_demangle::v0::Printer::print
  %_72 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1435 to [0 x i8]*), i64 1)
  br label %bb50

bb50:                                             ; preds = %bb49
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %82 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_72)
  %83 = zext i1 %82 to i8
  store i8 %83, i8* %_71, align 1
  br label %bb51

bb51:                                             ; preds = %bb50
  %84 = load i8, i8* %_71, align 1, !range !2
  %85 = trunc i8 %84 to i1
  %_74 = zext i1 %85 to i64
  switch i64 %_74, label %bb52 [
    i64 0, label %bb54
    i64 1, label %bb53
  ]

bb52:                                             ; preds = %bb51
  unreachable

bb53:                                             ; preds = %bb51
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %86 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1437 to %"core::panic::location::Location"*))
  %87 = zext i1 %86 to i8
  store i8 %87, i8* %0, align 1
  br label %bb55
}

; rustc_demangle::v0::Printer::print_const
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h782f5700abcab82fE(%"v0::Printer"* align 8 dereferenceable(56) %self, i1 zeroext %0) unnamed_addr #0 {
start:
  %_433 = alloca i8, align 1
  %_430 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_421 = alloca i8, align 1
  %err8 = alloca i8, align 1
  %_414 = alloca i8*, align 8
  %_411 = alloca i8, align 1
  %_409 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_400 = alloca i8, align 1
  %err7 = alloca i8, align 1
  %_392 = alloca i8, align 1
  %_382 = alloca { i64, i64 }, align 8
  %_375 = alloca i8, align 1
  %_368 = alloca i8, align 1
  %_358 = alloca { i64, i64 }, align 8
  %_351 = alloca i8, align 1
  %_348 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_339 = alloca i8, align 1
  %err6 = alloca i8, align 1
  %_334 = alloca { i8, i8 }, align 1
  %_324 = alloca i8, align 1
  %_318 = alloca i64*, align 8
  %_315 = alloca i8, align 1
  %_308 = alloca i8, align 1
  %_301 = alloca i8, align 1
  %_290 = alloca { i64, i64 }, align 8
  %_282 = alloca i8, align 1
  %_276 = alloca i64*, align 8
  %_273 = alloca i8, align 1
  %_266 = alloca i8, align 1
  %_256 = alloca { i64, i64 }, align 8
  %_249 = alloca i8, align 1
  %_243 = alloca i64*, align 8
  %_240 = alloca i8, align 1
  %_233 = alloca i8, align 1
  %_226 = alloca i8, align 1
  %_218 = alloca i8, align 1
  %_212 = alloca i64*, align 8
  %_209 = alloca i8, align 1
  %_202 = alloca i8, align 1
  %_198 = alloca i8, align 1
  %_191 = alloca i8, align 1
  %_184 = alloca i8, align 1
  %_178 = alloca i64*, align 8
  %_175 = alloca i8, align 1
  %_173 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_164 = alloca i8, align 1
  %err5 = alloca i8, align 1
  %_154 = alloca i8, align 1
  %_148 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_139 = alloca i8, align 1
  %err4 = alloca i8, align 1
  %_134 = alloca %"core::result::Result<v0::HexNibbles, v0::ParseError>", align 8
  %_131 = alloca { i8*, i64 }, align 8
  %valid_char = alloca i32, align 4
  %_125 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_116 = alloca i8, align 1
  %err3 = alloca i8, align 1
  %_108 = alloca i8, align 1
  %_101 = alloca i8, align 1
  %_97 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_88 = alloca i8, align 1
  %err2 = alloca i8, align 1
  %_83 = alloca %"core::result::Result<v0::HexNibbles, v0::ParseError>", align 8
  %_80 = alloca { i8*, i64 }, align 8
  %_78 = alloca { i64, i64 }, align 8
  %_70 = alloca i8, align 1
  %_63 = alloca i8, align 1
  %_53 = alloca i8, align 1
  %_46 = alloca i8, align 1
  %open_brace_if_outside_expr = alloca { i8*, i8* }, align 8
  %opened_brace = alloca i8, align 1
  %_39 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_30 = alloca i8, align 1
  %err1 = alloca i8, align 1
  %_25 = alloca i8, align 1
  %_20 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_11 = alloca i8, align 1
  %err = alloca i8, align 1
  %_6 = alloca { i8, i8 }, align 1
  %1 = alloca i8, align 1
  %in_value = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %in_value, align 1
  %3 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %4 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %3 to i8*
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = trunc i8 %5 to i1
  %_4 = zext i1 %6 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %8 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %7 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %8, i32 0, i32 1
; call rustc_demangle::v0::Parser::next
  %9 = call { i8, i8 } @_ZN14rustc_demangle2v06Parser4next17hffa0ce9c0a6f9798E(%"v0::Parser"* align 8 dereferenceable(32) %parser)
  store { i8, i8 } %9, { i8, i8 }* %_6, align 1
  br label %bb4

bb1:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %1, align 1
  br label %bb286

bb286:                                            ; preds = %bb285, %bb283, %bb32, %bb37, %bb49, %bb44, %bb71, %bb76, %bb80, %bb82, %bb61, %bb63, %bb51, %bb111, %bb113, %bb107, %bb94, %bb96, %bb84, %bb128, %bb124, %bb119, %bb159, %bb154, %bb149, %bb144, %bb138, %bb179, %bb175, %bb170, %bb165, %bb205, %bb200, %bb195, %bb190, %bb185, %bb245, %bb241, %bb236, %bb260, %bb256, %bb251, %bb264, %bb266, %bb227, %bb229, %bb217, %bb216, %bb211, %bb271, %bb275, %bb277, %bb24, %bb26, %bb14, %bb11, %bb13, %bb1
  %12 = load i8, i8* %1, align 1, !range !2
  %13 = trunc i8 %12 to i1
  ret i1 %13

bb4:                                              ; preds = %bb3
  %14 = bitcast { i8, i8 }* %_6 to i8*
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = trunc i8 %15 to i1
  %_8 = zext i1 %16 to i64
  switch i64 %_8, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %17 = bitcast { i8, i8 }* %_6 to %"core::result::Result<u8, v0::ParseError>::Ok"*
  %18 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Ok", %"core::result::Result<u8, v0::ParseError>::Ok"* %17, i32 0, i32 1
  %x = load i8, i8* %18, align 1
  %19 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %20 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %19 to i8*
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = trunc i8 %21 to i1
  %_23 = zext i1 %22 to i64
  switch i64 %_23, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb5:                                              ; preds = %bb4
  %23 = bitcast { i8, i8 }* %_6 to %"core::result::Result<u8, v0::ParseError>::Err"*
  %24 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Err", %"core::result::Result<u8, v0::ParseError>::Err"* %23, i32 0, i32 1
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = trunc i8 %25 to i1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %err, align 1
; call rustc_demangle::v0::ParseError::message
  %28 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
  %_14.0 = extractvalue { [0 x i8]*, i64 } %28, 0
  %_14.1 = extractvalue { [0 x i8]*, i64 } %28, 1
  br label %bb8

bb8:                                              ; preds = %bb5
; call rustc_demangle::v0::Printer::print
  %_12 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_14.0, i64 %_14.1)
  br label %bb9

bb9:                                              ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %29 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_12)
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %_11, align 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %31 = load i8, i8* %_11, align 1, !range !2
  %32 = trunc i8 %31 to i1
  %_16 = zext i1 %32 to i64
  switch i64 %_16, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %33 = load i8, i8* %err, align 1, !range !2
  %_21 = trunc i8 %33 to i1
  %34 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %35 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %34, i32 0, i32 1
  %36 = zext i1 %_21 to i8
  store i8 %36, i8* %35, align 1
  %37 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  store i8 1, i8* %37, align 8
  %38 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %39 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %38 to i8*
  %40 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb286

bb13:                                             ; preds = %bb10
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %41 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1440 to %"core::panic::location::Location"*))
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %1, align 1
  br label %bb286

bb15:                                             ; preds = %bb7
  unreachable

bb16:                                             ; preds = %bb7
  %43 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %44 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %43 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser9 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %44, i32 0, i32 1
; call rustc_demangle::v0::Parser::push_depth
  %45 = call i8 @_ZN14rustc_demangle2v06Parser10push_depth17hac46607ed685a51dE(%"v0::Parser"* align 8 dereferenceable(32) %parser9), !range !7
  store i8 %45, i8* %_25, align 1
  br label %bb17

bb14:                                             ; preds = %bb7
; call rustc_demangle::v0::Printer::print
  %46 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %1, align 1
  br label %bb286

bb17:                                             ; preds = %bb16
  %48 = load i8, i8* %_25, align 1, !range !7
  %49 = sub i8 %48, 2
  %50 = icmp eq i8 %49, 0
  %_27 = select i1 %50, i64 0, i64 1
  switch i64 %_27, label %bb19 [
    i64 0, label %bb20
    i64 1, label %bb18
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb20:                                             ; preds = %bb17
  store i8 0, i8* %opened_brace, align 1
  %51 = bitcast { i8*, i8* }* %open_brace_if_outside_expr to i8**
  store i8* %in_value, i8** %51, align 8
  %52 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %open_brace_if_outside_expr, i32 0, i32 1
  store i8* %opened_brace, i8** %52, align 8
  switch i8 %x, label %bb27 [
    i8 112, label %bb28
    i8 104, label %bb33
    i8 116, label %bb33
    i8 109, label %bb33
    i8 121, label %bb33
    i8 111, label %bb33
    i8 106, label %bb33
    i8 97, label %bb38
    i8 115, label %bb38
    i8 108, label %bb38
    i8 120, label %bb38
    i8 110, label %bb38
    i8 105, label %bb38
    i8 98, label %bb50
    i8 99, label %bb83
    i8 101, label %bb114
    i8 82, label %bb129
    i8 81, label %bb129
    i8 65, label %bb160
    i8 84, label %bb180
    i8 86, label %bb206
    i8 66, label %bb267
  ]

bb18:                                             ; preds = %bb17
  %53 = load i8, i8* %_25, align 1, !range !2
  %54 = trunc i8 %53 to i1
  %55 = zext i1 %54 to i8
  store i8 %55, i8* %err1, align 1
; call rustc_demangle::v0::ParseError::message
  %56 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err1)
  %_33.0 = extractvalue { [0 x i8]*, i64 } %56, 0
  %_33.1 = extractvalue { [0 x i8]*, i64 } %56, 1
  br label %bb21

bb21:                                             ; preds = %bb18
; call rustc_demangle::v0::Printer::print
  %_31 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_33.0, i64 %_33.1)
  br label %bb22

bb22:                                             ; preds = %bb21
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %57 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_31)
  %58 = zext i1 %57 to i8
  store i8 %58, i8* %_30, align 1
  br label %bb23

bb23:                                             ; preds = %bb22
  %59 = load i8, i8* %_30, align 1, !range !2
  %60 = trunc i8 %59 to i1
  %_35 = zext i1 %60 to i64
  switch i64 %_35, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ]

bb25:                                             ; preds = %bb23
  unreachable

bb24:                                             ; preds = %bb23
  %61 = load i8, i8* %err1, align 1, !range !2
  %_40 = trunc i8 %61 to i1
  %62 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_39 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %63 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %62, i32 0, i32 1
  %64 = zext i1 %_40 to i8
  store i8 %64, i8* %63, align 1
  %65 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_39 to i8*
  store i8 1, i8* %65, align 8
  %66 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %67 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %66 to i8*
  %68 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb286

bb26:                                             ; preds = %bb23
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %69 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1443 to %"core::panic::location::Location"*))
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %1, align 1
  br label %bb286

bb27:                                             ; preds = %bb20
  store i8 0, i8* %err8, align 1
; call rustc_demangle::v0::ParseError::message
  %71 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err8)
  %_424.0 = extractvalue { [0 x i8]*, i64 } %71, 0
  %_424.1 = extractvalue { [0 x i8]*, i64 } %71, 1
  br label %bb272

bb28:                                             ; preds = %bb20
; call rustc_demangle::v0::Printer::print
  %_47 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1544 to [0 x i8]*), i64 1)
  br label %bb29

bb33:                                             ; preds = %bb20, %bb20, %bb20, %bb20, %bb20, %bb20
; call rustc_demangle::v0::Printer::print_const_uint
  %_54 = call zeroext i1 @_ZN14rustc_demangle2v07Printer16print_const_uint17hc1ad12546970801fE(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 %x)
  br label %bb34

bb38:                                             ; preds = %bb20, %bb20, %bb20, %bb20, %bb20, %bb20
; call rustc_demangle::v0::Printer::eat
  %_61 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 110)
  br label %bb39

bb50:                                             ; preds = %bb20
  %72 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %73 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %72 to i8*
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = trunc i8 %74 to i1
  %_81 = zext i1 %75 to i64
  switch i64 %_81, label %bb52 [
    i64 0, label %bb53
    i64 1, label %bb51
  ]

bb83:                                             ; preds = %bb20
  %76 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %77 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %76 to i8*
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = trunc i8 %78 to i1
  %_132 = zext i1 %79 to i64
  switch i64 %_132, label %bb85 [
    i64 0, label %bb86
    i64 1, label %bb84
  ]

bb114:                                            ; preds = %bb20
  %80 = bitcast i64** %_178 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %80, align 8
  %81 = load i64*, i64** %_178, align 8, !nonnull !6
  %82 = bitcast i64* %81 to %"v0::Printer"*
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_176 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hc91faf6d790ac3c1E"({ i8*, i8* }* align 8 dereferenceable(16) %open_brace_if_outside_expr, %"v0::Printer"* align 8 dereferenceable(56) %82)
  br label %bb115

bb129:                                            ; preds = %bb20, %bb20
  %83 = icmp eq i8 %x, 82
  br i1 %83, label %bb131, label %bb130

bb160:                                            ; preds = %bb20
  %84 = bitcast i64** %_243 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %84, align 8
  %85 = load i64*, i64** %_243, align 8, !nonnull !6
  %86 = bitcast i64* %85 to %"v0::Printer"*
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_241 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hc91faf6d790ac3c1E"({ i8*, i8* }* align 8 dereferenceable(16) %open_brace_if_outside_expr, %"v0::Printer"* align 8 dereferenceable(56) %86)
  br label %bb161

bb180:                                            ; preds = %bb20
  %87 = bitcast i64** %_276 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %87, align 8
  %88 = load i64*, i64** %_276, align 8, !nonnull !6
  %89 = bitcast i64* %88 to %"v0::Printer"*
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_274 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hc91faf6d790ac3c1E"({ i8*, i8* }* align 8 dereferenceable(16) %open_brace_if_outside_expr, %"v0::Printer"* align 8 dereferenceable(56) %89)
  br label %bb181

bb206:                                            ; preds = %bb20
  %90 = bitcast i64** %_318 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %90, align 8
  %91 = load i64*, i64** %_318, align 8, !nonnull !6
  %92 = bitcast i64* %91 to %"v0::Printer"*
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_316 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hc91faf6d790ac3c1E"({ i8*, i8* }* align 8 dereferenceable(16) %open_brace_if_outside_expr, %"v0::Printer"* align 8 dereferenceable(56) %92)
  br label %bb207

bb267:                                            ; preds = %bb20
  store i8* %in_value, i8** %_414, align 8
  %93 = load i8*, i8** %_414, align 8, !nonnull !6
; call rustc_demangle::v0::Printer::print_backref
  %_412 = call zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17h6c097dee35180904E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8* align 1 dereferenceable(1) %93)
  br label %bb268

bb272:                                            ; preds = %bb27
; call rustc_demangle::v0::Printer::print
  %_422 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_424.0, i64 %_424.1)
  br label %bb273

bb273:                                            ; preds = %bb272
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %94 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_422)
  %95 = zext i1 %94 to i8
  store i8 %95, i8* %_421, align 1
  br label %bb274

bb274:                                            ; preds = %bb273
  %96 = load i8, i8* %_421, align 1, !range !2
  %97 = trunc i8 %96 to i1
  %_426 = zext i1 %97 to i64
  switch i64 %_426, label %bb276 [
    i64 0, label %bb275
    i64 1, label %bb277
  ]

bb276:                                            ; preds = %bb274
  unreachable

bb275:                                            ; preds = %bb274
  %98 = load i8, i8* %err8, align 1, !range !2
  %_431 = trunc i8 %98 to i1
  %99 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_430 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %100 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %99, i32 0, i32 1
  %101 = zext i1 %_431 to i8
  store i8 %101, i8* %100, align 1
  %102 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_430 to i8*
  store i8 1, i8* %102, align 8
  %103 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %104 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %103 to i8*
  %105 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_430 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb286

bb277:                                            ; preds = %bb274
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %106 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1445 to %"core::panic::location::Location"*))
  %107 = zext i1 %106 to i8
  store i8 %107, i8* %1, align 1
  br label %bb286

bb268:                                            ; preds = %bb267
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %108 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_412)
  %109 = zext i1 %108 to i8
  store i8 %109, i8* %_411, align 1
  br label %bb269

bb269:                                            ; preds = %bb268
  %110 = load i8, i8* %_411, align 1, !range !2
  %111 = trunc i8 %110 to i1
  %_416 = zext i1 %111 to i64
  switch i64 %_416, label %bb270 [
    i64 0, label %bb278
    i64 1, label %bb271
  ]

bb270:                                            ; preds = %bb269
  unreachable

bb278:                                            ; preds = %bb30, %bb35, %bb47, %bb69, %bb74, %bb105, %bb126, %bb157, %bb136, %bb177, %bb203, %bb243, %bb258, %bb223, %bb269
  %112 = load i8, i8* %opened_brace, align 1, !range !2
  %_432 = trunc i8 %112 to i1
  br i1 %_432, label %bb279, label %bb284

bb271:                                            ; preds = %bb269
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %113 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1447 to %"core::panic::location::Location"*))
  %114 = zext i1 %113 to i8
  store i8 %114, i8* %1, align 1
  br label %bb286

bb207:                                            ; preds = %bb206
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %115 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_316)
  %116 = zext i1 %115 to i8
  store i8 %116, i8* %_315, align 1
  br label %bb208

bb208:                                            ; preds = %bb207
  %117 = load i8, i8* %_315, align 1, !range !2
  %118 = trunc i8 %117 to i1
  %_320 = zext i1 %118 to i64
  switch i64 %_320, label %bb210 [
    i64 0, label %bb209
    i64 1, label %bb211
  ]

bb210:                                            ; preds = %bb208
  unreachable

bb209:                                            ; preds = %bb208
; call rustc_demangle::v0::Printer::print_path
  %_325 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h66709c17d7c9cba4E(%"v0::Printer"* align 8 dereferenceable(56) %self, i1 zeroext true)
  br label %bb212

bb211:                                            ; preds = %bb208
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %119 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1449 to %"core::panic::location::Location"*))
  %120 = zext i1 %119 to i8
  store i8 %120, i8* %1, align 1
  br label %bb286

bb212:                                            ; preds = %bb209
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %121 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_325)
  %122 = zext i1 %121 to i8
  store i8 %122, i8* %_324, align 1
  br label %bb213

bb213:                                            ; preds = %bb212
  %123 = load i8, i8* %_324, align 1, !range !2
  %124 = trunc i8 %123 to i1
  %_327 = zext i1 %124 to i64
  switch i64 %_327, label %bb215 [
    i64 0, label %bb214
    i64 1, label %bb216
  ]

bb215:                                            ; preds = %bb213
  unreachable

bb214:                                            ; preds = %bb213
  %125 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %126 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %125 to i8*
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = trunc i8 %127 to i1
  %_332 = zext i1 %128 to i64
  switch i64 %_332, label %bb218 [
    i64 0, label %bb219
    i64 1, label %bb217
  ]

bb216:                                            ; preds = %bb213
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %129 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1451 to %"core::panic::location::Location"*))
  %130 = zext i1 %129 to i8
  store i8 %130, i8* %1, align 1
  br label %bb286

bb218:                                            ; preds = %bb214
  unreachable

bb219:                                            ; preds = %bb214
  %131 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %132 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %131 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser10 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %132, i32 0, i32 1
; call rustc_demangle::v0::Parser::next
  %133 = call { i8, i8 } @_ZN14rustc_demangle2v06Parser4next17hffa0ce9c0a6f9798E(%"v0::Parser"* align 8 dereferenceable(32) %parser10)
  store { i8, i8 } %133, { i8, i8 }* %_334, align 1
  br label %bb220

bb217:                                            ; preds = %bb214
; call rustc_demangle::v0::Printer::print
  %134 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %135 = zext i1 %134 to i8
  store i8 %135, i8* %1, align 1
  br label %bb286

bb220:                                            ; preds = %bb219
  %136 = bitcast { i8, i8 }* %_334 to i8*
  %137 = load i8, i8* %136, align 1, !range !2
  %138 = trunc i8 %137 to i1
  %_336 = zext i1 %138 to i64
  switch i64 %_336, label %bb222 [
    i64 0, label %bb223
    i64 1, label %bb221
  ]

bb222:                                            ; preds = %bb220
  unreachable

bb223:                                            ; preds = %bb220
  %139 = bitcast { i8, i8 }* %_334 to %"core::result::Result<u8, v0::ParseError>::Ok"*
  %140 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Ok", %"core::result::Result<u8, v0::ParseError>::Ok"* %139, i32 0, i32 1
  %x11 = load i8, i8* %140, align 1
  switch i8 %x11, label %bb230 [
    i8 85, label %bb278
    i8 84, label %bb231
    i8 83, label %bb246
  ]

bb221:                                            ; preds = %bb220
  %141 = bitcast { i8, i8 }* %_334 to %"core::result::Result<u8, v0::ParseError>::Err"*
  %142 = getelementptr inbounds %"core::result::Result<u8, v0::ParseError>::Err", %"core::result::Result<u8, v0::ParseError>::Err"* %141, i32 0, i32 1
  %143 = load i8, i8* %142, align 1, !range !2
  %144 = trunc i8 %143 to i1
  %145 = zext i1 %144 to i8
  store i8 %145, i8* %err6, align 1
; call rustc_demangle::v0::ParseError::message
  %146 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err6)
  %_342.0 = extractvalue { [0 x i8]*, i64 } %146, 0
  %_342.1 = extractvalue { [0 x i8]*, i64 } %146, 1
  br label %bb224

bb224:                                            ; preds = %bb221
; call rustc_demangle::v0::Printer::print
  %_340 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_342.0, i64 %_342.1)
  br label %bb225

bb225:                                            ; preds = %bb224
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %147 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_340)
  %148 = zext i1 %147 to i8
  store i8 %148, i8* %_339, align 1
  br label %bb226

bb226:                                            ; preds = %bb225
  %149 = load i8, i8* %_339, align 1, !range !2
  %150 = trunc i8 %149 to i1
  %_344 = zext i1 %150 to i64
  switch i64 %_344, label %bb228 [
    i64 0, label %bb227
    i64 1, label %bb229
  ]

bb228:                                            ; preds = %bb226
  unreachable

bb227:                                            ; preds = %bb226
  %151 = load i8, i8* %err6, align 1, !range !2
  %_349 = trunc i8 %151 to i1
  %152 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_348 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %153 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %152, i32 0, i32 1
  %154 = zext i1 %_349 to i8
  store i8 %154, i8* %153, align 1
  %155 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_348 to i8*
  store i8 1, i8* %155, align 8
  %156 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %157 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %156 to i8*
  %158 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_348 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb286

bb229:                                            ; preds = %bb226
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %159 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1454 to %"core::panic::location::Location"*))
  %160 = zext i1 %159 to i8
  store i8 %160, i8* %1, align 1
  br label %bb286

bb230:                                            ; preds = %bb223
  store i8 0, i8* %err7, align 1
; call rustc_demangle::v0::ParseError::message
  %161 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err7)
  %_403.0 = extractvalue { [0 x i8]*, i64 } %161, 0
  %_403.1 = extractvalue { [0 x i8]*, i64 } %161, 1
  br label %bb261

bb231:                                            ; preds = %bb223
; call rustc_demangle::v0::Printer::print
  %_352 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1477 to [0 x i8]*), i64 1)
  br label %bb232

bb246:                                            ; preds = %bb223
; call rustc_demangle::v0::Printer::print
  %_376 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1457 to [0 x i8]*), i64 3)
  br label %bb247

bb261:                                            ; preds = %bb230
; call rustc_demangle::v0::Printer::print
  %_401 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_403.0, i64 %_403.1)
  br label %bb262

bb262:                                            ; preds = %bb261
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %162 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_401)
  %163 = zext i1 %162 to i8
  store i8 %163, i8* %_400, align 1
  br label %bb263

bb263:                                            ; preds = %bb262
  %164 = load i8, i8* %_400, align 1, !range !2
  %165 = trunc i8 %164 to i1
  %_405 = zext i1 %165 to i64
  switch i64 %_405, label %bb265 [
    i64 0, label %bb264
    i64 1, label %bb266
  ]

bb265:                                            ; preds = %bb263
  unreachable

bb264:                                            ; preds = %bb263
  %166 = load i8, i8* %err7, align 1, !range !2
  %_410 = trunc i8 %166 to i1
  %167 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_409 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %168 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %167, i32 0, i32 1
  %169 = zext i1 %_410 to i8
  store i8 %169, i8* %168, align 1
  %170 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_409 to i8*
  store i8 1, i8* %170, align 8
  %171 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %172 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %171 to i8*
  %173 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_409 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb286

bb266:                                            ; preds = %bb263
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %174 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1456 to %"core::panic::location::Location"*))
  %175 = zext i1 %174 to i8
  store i8 %175, i8* %1, align 1
  br label %bb286

bb247:                                            ; preds = %bb246
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %176 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_376)
  %177 = zext i1 %176 to i8
  store i8 %177, i8* %_375, align 1
  br label %bb248

bb248:                                            ; preds = %bb247
  %178 = load i8, i8* %_375, align 1, !range !2
  %179 = trunc i8 %178 to i1
  %_378 = zext i1 %179 to i64
  switch i64 %_378, label %bb250 [
    i64 0, label %bb249
    i64 1, label %bb251
  ]

bb250:                                            ; preds = %bb248
  unreachable

bb249:                                            ; preds = %bb248
; call rustc_demangle::v0::Printer::print_sep_list
  %180 = call { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hfc46b8b09216015cE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1494 to [0 x i8]*), i64 2)
  %_383.0 = extractvalue { i64, i64 } %180, 0
  %_383.1 = extractvalue { i64, i64 } %180, 1
  br label %bb252

bb251:                                            ; preds = %bb248
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %181 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1459 to %"core::panic::location::Location"*))
  %182 = zext i1 %181 to i8
  store i8 %182, i8* %1, align 1
  br label %bb286

bb252:                                            ; preds = %bb249
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %183 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd46a3fe531d61413E"(i64 %_383.0, i64 %_383.1)
  store { i64, i64 } %183, { i64, i64 }* %_382, align 8
  br label %bb253

bb253:                                            ; preds = %bb252
  %184 = bitcast { i64, i64 }* %_382 to i64*
  %_388 = load i64, i64* %184, align 8, !range !5
  switch i64 %_388, label %bb255 [
    i64 0, label %bb254
    i64 1, label %bb256
  ]

bb255:                                            ; preds = %bb253
  unreachable

bb254:                                            ; preds = %bb253
  %185 = bitcast { i64, i64 }* %_382 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"*
  %186 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"* %185, i32 0, i32 1
  %val = load i64, i64* %186, align 8
; call rustc_demangle::v0::Printer::print
  %_393 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1463 to [0 x i8]*), i64 2)
  br label %bb257

bb256:                                            ; preds = %bb253
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %187 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1462 to %"core::panic::location::Location"*))
  %188 = zext i1 %187 to i8
  store i8 %188, i8* %1, align 1
  br label %bb286

bb257:                                            ; preds = %bb254
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %189 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_393)
  %190 = zext i1 %189 to i8
  store i8 %190, i8* %_392, align 1
  br label %bb258

bb258:                                            ; preds = %bb257
  %191 = load i8, i8* %_392, align 1, !range !2
  %192 = trunc i8 %191 to i1
  %_395 = zext i1 %192 to i64
  switch i64 %_395, label %bb259 [
    i64 0, label %bb278
    i64 1, label %bb260
  ]

bb259:                                            ; preds = %bb258
  unreachable

bb260:                                            ; preds = %bb258
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %193 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1465 to %"core::panic::location::Location"*))
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %1, align 1
  br label %bb286

bb232:                                            ; preds = %bb231
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %195 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_352)
  %196 = zext i1 %195 to i8
  store i8 %196, i8* %_351, align 1
  br label %bb233

bb233:                                            ; preds = %bb232
  %197 = load i8, i8* %_351, align 1, !range !2
  %198 = trunc i8 %197 to i1
  %_354 = zext i1 %198 to i64
  switch i64 %_354, label %bb235 [
    i64 0, label %bb234
    i64 1, label %bb236
  ]

bb235:                                            ; preds = %bb233
  unreachable

bb234:                                            ; preds = %bb233
; call rustc_demangle::v0::Printer::print_sep_list
  %199 = call { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hd20fdd11d8a855f4E(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1494 to [0 x i8]*), i64 2)
  %_359.0 = extractvalue { i64, i64 } %199, 0
  %_359.1 = extractvalue { i64, i64 } %199, 1
  br label %bb237

bb236:                                            ; preds = %bb233
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %200 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1468 to %"core::panic::location::Location"*))
  %201 = zext i1 %200 to i8
  store i8 %201, i8* %1, align 1
  br label %bb286

bb237:                                            ; preds = %bb234
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %202 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd46a3fe531d61413E"(i64 %_359.0, i64 %_359.1)
  store { i64, i64 } %202, { i64, i64 }* %_358, align 8
  br label %bb238

bb238:                                            ; preds = %bb237
  %203 = bitcast { i64, i64 }* %_358 to i64*
  %_364 = load i64, i64* %203, align 8, !range !5
  switch i64 %_364, label %bb240 [
    i64 0, label %bb239
    i64 1, label %bb241
  ]

bb240:                                            ; preds = %bb238
  unreachable

bb239:                                            ; preds = %bb238
  %204 = bitcast { i64, i64 }* %_358 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"*
  %205 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"* %204, i32 0, i32 1
  %val12 = load i64, i64* %205, align 8
; call rustc_demangle::v0::Printer::print
  %_369 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1486 to [0 x i8]*), i64 1)
  br label %bb242

bb241:                                            ; preds = %bb238
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %206 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1471 to %"core::panic::location::Location"*))
  %207 = zext i1 %206 to i8
  store i8 %207, i8* %1, align 1
  br label %bb286

bb242:                                            ; preds = %bb239
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %208 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_369)
  %209 = zext i1 %208 to i8
  store i8 %209, i8* %_368, align 1
  br label %bb243

bb243:                                            ; preds = %bb242
  %210 = load i8, i8* %_368, align 1, !range !2
  %211 = trunc i8 %210 to i1
  %_371 = zext i1 %211 to i64
  switch i64 %_371, label %bb244 [
    i64 0, label %bb278
    i64 1, label %bb245
  ]

bb244:                                            ; preds = %bb243
  unreachable

bb245:                                            ; preds = %bb243
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %212 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1474 to %"core::panic::location::Location"*))
  %213 = zext i1 %212 to i8
  store i8 %213, i8* %1, align 1
  br label %bb286

bb181:                                            ; preds = %bb180
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %214 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_274)
  %215 = zext i1 %214 to i8
  store i8 %215, i8* %_273, align 1
  br label %bb182

bb182:                                            ; preds = %bb181
  %216 = load i8, i8* %_273, align 1, !range !2
  %217 = trunc i8 %216 to i1
  %_278 = zext i1 %217 to i64
  switch i64 %_278, label %bb184 [
    i64 0, label %bb183
    i64 1, label %bb185
  ]

bb184:                                            ; preds = %bb182
  unreachable

bb183:                                            ; preds = %bb182
; call rustc_demangle::v0::Printer::print
  %_283 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1477 to [0 x i8]*), i64 1)
  br label %bb186

bb185:                                            ; preds = %bb182
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %218 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1476 to %"core::panic::location::Location"*))
  %219 = zext i1 %218 to i8
  store i8 %219, i8* %1, align 1
  br label %bb286

bb186:                                            ; preds = %bb183
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %220 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_283)
  %221 = zext i1 %220 to i8
  store i8 %221, i8* %_282, align 1
  br label %bb187

bb187:                                            ; preds = %bb186
  %222 = load i8, i8* %_282, align 1, !range !2
  %223 = trunc i8 %222 to i1
  %_285 = zext i1 %223 to i64
  switch i64 %_285, label %bb189 [
    i64 0, label %bb188
    i64 1, label %bb190
  ]

bb189:                                            ; preds = %bb187
  unreachable

bb188:                                            ; preds = %bb187
; call rustc_demangle::v0::Printer::print_sep_list
  %224 = call { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h493d038399b7f126E(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1494 to [0 x i8]*), i64 2)
  %_291.0 = extractvalue { i64, i64 } %224, 0
  %_291.1 = extractvalue { i64, i64 } %224, 1
  br label %bb191

bb190:                                            ; preds = %bb187
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %225 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1479 to %"core::panic::location::Location"*))
  %226 = zext i1 %225 to i8
  store i8 %226, i8* %1, align 1
  br label %bb286

bb191:                                            ; preds = %bb188
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %227 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd46a3fe531d61413E"(i64 %_291.0, i64 %_291.1)
  store { i64, i64 } %227, { i64, i64 }* %_290, align 8
  br label %bb192

bb192:                                            ; preds = %bb191
  %228 = bitcast { i64, i64 }* %_290 to i64*
  %_296 = load i64, i64* %228, align 8, !range !5
  switch i64 %_296, label %bb194 [
    i64 0, label %bb193
    i64 1, label %bb195
  ]

bb194:                                            ; preds = %bb192
  unreachable

bb193:                                            ; preds = %bb192
  %229 = bitcast { i64, i64 }* %_290 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"*
  %230 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"* %229, i32 0, i32 1
  %val13 = load i64, i64* %230, align 8
  %231 = icmp eq i64 %val13, 1
  br i1 %231, label %bb196, label %bb201

bb195:                                            ; preds = %bb192
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %232 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1482 to %"core::panic::location::Location"*))
  %233 = zext i1 %232 to i8
  store i8 %233, i8* %1, align 1
  br label %bb286

bb196:                                            ; preds = %bb193
; call rustc_demangle::v0::Printer::print
  %_302 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1483 to [0 x i8]*), i64 1)
  br label %bb197

bb201:                                            ; preds = %bb198, %bb193
; call rustc_demangle::v0::Printer::print
  %_309 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1486 to [0 x i8]*), i64 1)
  br label %bb202

bb197:                                            ; preds = %bb196
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %234 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_302)
  %235 = zext i1 %234 to i8
  store i8 %235, i8* %_301, align 1
  br label %bb198

bb198:                                            ; preds = %bb197
  %236 = load i8, i8* %_301, align 1, !range !2
  %237 = trunc i8 %236 to i1
  %_304 = zext i1 %237 to i64
  switch i64 %_304, label %bb199 [
    i64 0, label %bb201
    i64 1, label %bb200
  ]

bb199:                                            ; preds = %bb198
  unreachable

bb200:                                            ; preds = %bb198
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %238 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1485 to %"core::panic::location::Location"*))
  %239 = zext i1 %238 to i8
  store i8 %239, i8* %1, align 1
  br label %bb286

bb202:                                            ; preds = %bb201
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %240 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_309)
  %241 = zext i1 %240 to i8
  store i8 %241, i8* %_308, align 1
  br label %bb203

bb203:                                            ; preds = %bb202
  %242 = load i8, i8* %_308, align 1, !range !2
  %243 = trunc i8 %242 to i1
  %_311 = zext i1 %243 to i64
  switch i64 %_311, label %bb204 [
    i64 0, label %bb278
    i64 1, label %bb205
  ]

bb204:                                            ; preds = %bb203
  unreachable

bb205:                                            ; preds = %bb203
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %244 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1488 to %"core::panic::location::Location"*))
  %245 = zext i1 %244 to i8
  store i8 %245, i8* %1, align 1
  br label %bb286

bb161:                                            ; preds = %bb160
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %246 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_241)
  %247 = zext i1 %246 to i8
  store i8 %247, i8* %_240, align 1
  br label %bb162

bb162:                                            ; preds = %bb161
  %248 = load i8, i8* %_240, align 1, !range !2
  %249 = trunc i8 %248 to i1
  %_245 = zext i1 %249 to i64
  switch i64 %_245, label %bb164 [
    i64 0, label %bb163
    i64 1, label %bb165
  ]

bb164:                                            ; preds = %bb162
  unreachable

bb163:                                            ; preds = %bb162
; call rustc_demangle::v0::Printer::print
  %_250 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1491 to [0 x i8]*), i64 1)
  br label %bb166

bb165:                                            ; preds = %bb162
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %250 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1490 to %"core::panic::location::Location"*))
  %251 = zext i1 %250 to i8
  store i8 %251, i8* %1, align 1
  br label %bb286

bb166:                                            ; preds = %bb163
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %252 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_250)
  %253 = zext i1 %252 to i8
  store i8 %253, i8* %_249, align 1
  br label %bb167

bb167:                                            ; preds = %bb166
  %254 = load i8, i8* %_249, align 1, !range !2
  %255 = trunc i8 %254 to i1
  %_252 = zext i1 %255 to i64
  switch i64 %_252, label %bb169 [
    i64 0, label %bb168
    i64 1, label %bb170
  ]

bb169:                                            ; preds = %bb167
  unreachable

bb168:                                            ; preds = %bb167
; call rustc_demangle::v0::Printer::print_sep_list
  %256 = call { i64, i64 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hb0ded62cbed97e33E(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1494 to [0 x i8]*), i64 2)
  %_257.0 = extractvalue { i64, i64 } %256, 0
  %_257.1 = extractvalue { i64, i64 } %256, 1
  br label %bb171

bb170:                                            ; preds = %bb167
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %257 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1493 to %"core::panic::location::Location"*))
  %258 = zext i1 %257 to i8
  store i8 %258, i8* %1, align 1
  br label %bb286

bb171:                                            ; preds = %bb168
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %259 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd46a3fe531d61413E"(i64 %_257.0, i64 %_257.1)
  store { i64, i64 } %259, { i64, i64 }* %_256, align 8
  br label %bb172

bb172:                                            ; preds = %bb171
  %260 = bitcast { i64, i64 }* %_256 to i64*
  %_262 = load i64, i64* %260, align 8, !range !5
  switch i64 %_262, label %bb174 [
    i64 0, label %bb173
    i64 1, label %bb175
  ]

bb174:                                            ; preds = %bb172
  unreachable

bb173:                                            ; preds = %bb172
  %261 = bitcast { i64, i64 }* %_256 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"*
  %262 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>::Continue"* %261, i32 0, i32 1
  %val14 = load i64, i64* %262, align 8
; call rustc_demangle::v0::Printer::print
  %_267 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1497 to [0 x i8]*), i64 1)
  br label %bb176

bb175:                                            ; preds = %bb172
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %263 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1496 to %"core::panic::location::Location"*))
  %264 = zext i1 %263 to i8
  store i8 %264, i8* %1, align 1
  br label %bb286

bb176:                                            ; preds = %bb173
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %265 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_267)
  %266 = zext i1 %265 to i8
  store i8 %266, i8* %_266, align 1
  br label %bb177

bb177:                                            ; preds = %bb176
  %267 = load i8, i8* %_266, align 1, !range !2
  %268 = trunc i8 %267 to i1
  %_269 = zext i1 %268 to i64
  switch i64 %_269, label %bb178 [
    i64 0, label %bb278
    i64 1, label %bb179
  ]

bb178:                                            ; preds = %bb177
  unreachable

bb179:                                            ; preds = %bb177
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %269 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1499 to %"core::panic::location::Location"*))
  %270 = zext i1 %269 to i8
  store i8 %270, i8* %1, align 1
  br label %bb286

bb131:                                            ; preds = %bb129
; call rustc_demangle::v0::Printer::eat
  %_200 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17hd821f7525551b659E(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 101)
  br label %bb133

bb130:                                            ; preds = %bb129
  store i8 0, i8* %_198, align 1
  br label %bb132

bb132:                                            ; preds = %bb133, %bb130
  %271 = load i8, i8* %_198, align 1, !range !2
  %272 = trunc i8 %271 to i1
  br i1 %272, label %bb134, label %bb139

bb133:                                            ; preds = %bb131
  %273 = zext i1 %_200 to i8
  store i8 %273, i8* %_198, align 1
  br label %bb132

bb139:                                            ; preds = %bb132
  %274 = bitcast i64** %_212 to %"v0::Printer"**
  store %"v0::Printer"* %self, %"v0::Printer"** %274, align 8
  %275 = load i64*, i64** %_212, align 8, !nonnull !6
  %276 = bitcast i64* %275 to %"v0::Printer"*
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_210 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hc91faf6d790ac3c1E"({ i8*, i8* }* align 8 dereferenceable(16) %open_brace_if_outside_expr, %"v0::Printer"* align 8 dereferenceable(56) %276)
  br label %bb140

bb134:                                            ; preds = %bb132
; call rustc_demangle::v0::Printer::print_const_str_literal
  %_203 = call zeroext i1 @_ZN14rustc_demangle2v07Printer23print_const_str_literal17h62d011c3bf068ff8E(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb135

bb135:                                            ; preds = %bb134
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %277 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_203)
  %278 = zext i1 %277 to i8
  store i8 %278, i8* %_202, align 1
  br label %bb136

bb136:                                            ; preds = %bb135
  %279 = load i8, i8* %_202, align 1, !range !2
  %280 = trunc i8 %279 to i1
  %_205 = zext i1 %280 to i64
  switch i64 %_205, label %bb137 [
    i64 0, label %bb278
    i64 1, label %bb138
  ]

bb137:                                            ; preds = %bb136
  unreachable

bb138:                                            ; preds = %bb136
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %281 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1501 to %"core::panic::location::Location"*))
  %282 = zext i1 %281 to i8
  store i8 %282, i8* %1, align 1
  br label %bb286

bb140:                                            ; preds = %bb139
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %283 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_210)
  %284 = zext i1 %283 to i8
  store i8 %284, i8* %_209, align 1
  br label %bb141

bb141:                                            ; preds = %bb140
  %285 = load i8, i8* %_209, align 1, !range !2
  %286 = trunc i8 %285 to i1
  %_214 = zext i1 %286 to i64
  switch i64 %_214, label %bb143 [
    i64 0, label %bb142
    i64 1, label %bb144
  ]

bb143:                                            ; preds = %bb141
  unreachable

bb142:                                            ; preds = %bb141
; call rustc_demangle::v0::Printer::print
  %_219 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1504 to [0 x i8]*), i64 1)
  br label %bb145

bb144:                                            ; preds = %bb141
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %287 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1503 to %"core::panic::location::Location"*))
  %288 = zext i1 %287 to i8
  store i8 %288, i8* %1, align 1
  br label %bb286

bb145:                                            ; preds = %bb142
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %289 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_219)
  %290 = zext i1 %289 to i8
  store i8 %290, i8* %_218, align 1
  br label %bb146

bb146:                                            ; preds = %bb145
  %291 = load i8, i8* %_218, align 1, !range !2
  %292 = trunc i8 %291 to i1
  %_221 = zext i1 %292 to i64
  switch i64 %_221, label %bb148 [
    i64 0, label %bb147
    i64 1, label %bb149
  ]

bb148:                                            ; preds = %bb146
  unreachable

bb147:                                            ; preds = %bb146
  %293 = icmp eq i8 %x, 82
  br i1 %293, label %bb155, label %bb150

bb149:                                            ; preds = %bb146
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %294 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1506 to %"core::panic::location::Location"*))
  %295 = zext i1 %294 to i8
  store i8 %295, i8* %1, align 1
  br label %bb286

bb155:                                            ; preds = %bb152, %bb147
; call rustc_demangle::v0::Printer::print_const
  %_234 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h782f5700abcab82fE(%"v0::Printer"* align 8 dereferenceable(56) %self, i1 zeroext true)
  br label %bb156

bb150:                                            ; preds = %bb147
; call rustc_demangle::v0::Printer::print
  %_227 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1507 to [0 x i8]*), i64 4)
  br label %bb151

bb151:                                            ; preds = %bb150
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %296 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_227)
  %297 = zext i1 %296 to i8
  store i8 %297, i8* %_226, align 1
  br label %bb152

bb152:                                            ; preds = %bb151
  %298 = load i8, i8* %_226, align 1, !range !2
  %299 = trunc i8 %298 to i1
  %_229 = zext i1 %299 to i64
  switch i64 %_229, label %bb153 [
    i64 0, label %bb155
    i64 1, label %bb154
  ]

bb153:                                            ; preds = %bb152
  unreachable

bb154:                                            ; preds = %bb152
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %300 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1509 to %"core::panic::location::Location"*))
  %301 = zext i1 %300 to i8
  store i8 %301, i8* %1, align 1
  br label %bb286

bb156:                                            ; preds = %bb155
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %302 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_234)
  %303 = zext i1 %302 to i8
  store i8 %303, i8* %_233, align 1
  br label %bb157

bb157:                                            ; preds = %bb156
  %304 = load i8, i8* %_233, align 1, !range !2
  %305 = trunc i8 %304 to i1
  %_236 = zext i1 %305 to i64
  switch i64 %_236, label %bb158 [
    i64 0, label %bb278
    i64 1, label %bb159
  ]

bb158:                                            ; preds = %bb157
  unreachable

bb159:                                            ; preds = %bb157
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %306 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1511 to %"core::panic::location::Location"*))
  %307 = zext i1 %306 to i8
  store i8 %307, i8* %1, align 1
  br label %bb286

bb115:                                            ; preds = %bb114
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %308 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_176)
  %309 = zext i1 %308 to i8
  store i8 %309, i8* %_175, align 1
  br label %bb116

bb116:                                            ; preds = %bb115
  %310 = load i8, i8* %_175, align 1, !range !2
  %311 = trunc i8 %310 to i1
  %_180 = zext i1 %311 to i64
  switch i64 %_180, label %bb118 [
    i64 0, label %bb117
    i64 1, label %bb119
  ]

bb118:                                            ; preds = %bb116
  unreachable

bb117:                                            ; preds = %bb116
; call rustc_demangle::v0::Printer::print
  %_185 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1514 to [0 x i8]*), i64 1)
  br label %bb120

bb119:                                            ; preds = %bb116
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %312 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1513 to %"core::panic::location::Location"*))
  %313 = zext i1 %312 to i8
  store i8 %313, i8* %1, align 1
  br label %bb286

bb120:                                            ; preds = %bb117
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %314 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_185)
  %315 = zext i1 %314 to i8
  store i8 %315, i8* %_184, align 1
  br label %bb121

bb121:                                            ; preds = %bb120
  %316 = load i8, i8* %_184, align 1, !range !2
  %317 = trunc i8 %316 to i1
  %_187 = zext i1 %317 to i64
  switch i64 %_187, label %bb123 [
    i64 0, label %bb122
    i64 1, label %bb124
  ]

bb123:                                            ; preds = %bb121
  unreachable

bb122:                                            ; preds = %bb121
; call rustc_demangle::v0::Printer::print_const_str_literal
  %_192 = call zeroext i1 @_ZN14rustc_demangle2v07Printer23print_const_str_literal17h62d011c3bf068ff8E(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb125

bb124:                                            ; preds = %bb121
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %318 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1516 to %"core::panic::location::Location"*))
  %319 = zext i1 %318 to i8
  store i8 %319, i8* %1, align 1
  br label %bb286

bb125:                                            ; preds = %bb122
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %320 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_192)
  %321 = zext i1 %320 to i8
  store i8 %321, i8* %_191, align 1
  br label %bb126

bb126:                                            ; preds = %bb125
  %322 = load i8, i8* %_191, align 1, !range !2
  %323 = trunc i8 %322 to i1
  %_194 = zext i1 %323 to i64
  switch i64 %_194, label %bb127 [
    i64 0, label %bb278
    i64 1, label %bb128
  ]

bb127:                                            ; preds = %bb126
  unreachable

bb128:                                            ; preds = %bb126
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %324 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1518 to %"core::panic::location::Location"*))
  %325 = zext i1 %324 to i8
  store i8 %325, i8* %1, align 1
  br label %bb286

bb85:                                             ; preds = %bb83
  unreachable

bb86:                                             ; preds = %bb83
  %326 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %327 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %326 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser15 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %327, i32 0, i32 1
; call rustc_demangle::v0::Parser::hex_nibbles
  call void @_ZN14rustc_demangle2v06Parser11hex_nibbles17hf1ee692b8fee6ea8E(%"core::result::Result<v0::HexNibbles, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::HexNibbles, v0::ParseError>") dereferenceable(24) %_134, %"v0::Parser"* align 8 dereferenceable(32) %parser15)
  br label %bb87

bb84:                                             ; preds = %bb83
; call rustc_demangle::v0::Printer::print
  %328 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %329 = zext i1 %328 to i8
  store i8 %329, i8* %1, align 1
  br label %bb286

bb87:                                             ; preds = %bb86
  %330 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %_134 to i8*
  %331 = load i8, i8* %330, align 8, !range !2
  %332 = trunc i8 %331 to i1
  %_136 = zext i1 %332 to i64
  switch i64 %_136, label %bb89 [
    i64 0, label %bb90
    i64 1, label %bb88
  ]

bb89:                                             ; preds = %bb87
  unreachable

bb90:                                             ; preds = %bb87
  %333 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %_134 to %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok"*
  %334 = getelementptr inbounds %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok", %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok"* %333, i32 0, i32 1
  %335 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %334, i32 0, i32 0
  %x.0 = load i8*, i8** %335, align 8, !nonnull !6
  %336 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %334, i32 0, i32 1
  %x.1 = load i64, i64* %336, align 8
  %337 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_131, i32 0, i32 0
  store i8* %x.0, i8** %337, align 8
  %338 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_131, i32 0, i32 1
  store i64 %x.1, i64* %338, align 8
; call rustc_demangle::v0::HexNibbles::try_parse_uint
  %339 = call { i64, i64 } @_ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h4d70f3626eae2246E({ i8*, i64 }* align 8 dereferenceable(16) %_131)
  %_129.0 = extractvalue { i64, i64 } %339, 0
  %_129.1 = extractvalue { i64, i64 } %339, 1
  br label %bb97

bb88:                                             ; preds = %bb87
  %340 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %_134 to %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err"*
  %341 = getelementptr inbounds %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err", %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err"* %340, i32 0, i32 1
  %342 = load i8, i8* %341, align 1, !range !2
  %343 = trunc i8 %342 to i1
  %344 = zext i1 %343 to i8
  store i8 %344, i8* %err4, align 1
; call rustc_demangle::v0::ParseError::message
  %345 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err4)
  %_142.0 = extractvalue { [0 x i8]*, i64 } %345, 0
  %_142.1 = extractvalue { [0 x i8]*, i64 } %345, 1
  br label %bb91

bb91:                                             ; preds = %bb88
; call rustc_demangle::v0::Printer::print
  %_140 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_142.0, i64 %_142.1)
  br label %bb92

bb92:                                             ; preds = %bb91
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %346 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_140)
  %347 = zext i1 %346 to i8
  store i8 %347, i8* %_139, align 1
  br label %bb93

bb93:                                             ; preds = %bb92
  %348 = load i8, i8* %_139, align 1, !range !2
  %349 = trunc i8 %348 to i1
  %_144 = zext i1 %349 to i64
  switch i64 %_144, label %bb95 [
    i64 0, label %bb94
    i64 1, label %bb96
  ]

bb95:                                             ; preds = %bb93
  unreachable

bb94:                                             ; preds = %bb93
  %350 = load i8, i8* %err4, align 1, !range !2
  %_149 = trunc i8 %350 to i1
  %351 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_148 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %352 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %351, i32 0, i32 1
  %353 = zext i1 %_149 to i8
  store i8 %353, i8* %352, align 1
  %354 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_148 to i8*
  store i8 1, i8* %354, align 8
  %355 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %356 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %355 to i8*
  %357 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %356, i8* align 8 %357, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb286

bb96:                                             ; preds = %bb93
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %358 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1521 to %"core::panic::location::Location"*))
  %359 = zext i1 %358 to i8
  store i8 %359, i8* %1, align 1
  br label %bb286

bb97:                                             ; preds = %bb90
; call core::option::Option<T>::and_then
  %360 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h2828b717261b597dE"(i64 %_129.0, i64 %_129.1)
  %_128.0 = extractvalue { i32, i32 } %360, 0
  %_128.1 = extractvalue { i32, i32 } %360, 1
  br label %bb98

bb98:                                             ; preds = %bb97
; call core::option::Option<T>::and_then
  %361 = call i32 @"_ZN4core6option15Option$LT$T$GT$8and_then17h6df9945e519e00b8E"(i32 %_128.0, i32 %_128.1), !range !4
  store i32 %361, i32* %valid_char, align 4
  br label %bb99

bb99:                                             ; preds = %bb98
  %362 = load i32, i32* %valid_char, align 4, !range !4
  %363 = sub i32 %362, 1114112
  %364 = icmp eq i32 %363, 0
  %_152 = select i1 %364, i64 0, i64 1
  switch i64 %_152, label %bb101 [
    i64 0, label %bb100
    i64 1, label %bb102
  ]

bb101:                                            ; preds = %bb99
  unreachable

bb100:                                            ; preds = %bb99
  store i8 0, i8* %err5, align 1
; call rustc_demangle::v0::ParseError::message
  %365 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err5)
  %_167.0 = extractvalue { [0 x i8]*, i64 } %365, 0
  %_167.1 = extractvalue { [0 x i8]*, i64 } %365, 1
  br label %bb108

bb102:                                            ; preds = %bb99
  %c = load i32, i32* %valid_char, align 4, !range !9
; call core::iter::sources::once::once
  %_157 = call i32 @_ZN4core4iter7sources4once4once17h44f83eb7f6d8e9baE(i32 %c), !range !4
  br label %bb103

bb103:                                            ; preds = %bb102
; call rustc_demangle::v0::Printer::print_quoted_escaped_chars
  %_155 = call zeroext i1 @_ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17h37ad00f0698f2f7dE(%"v0::Printer"* align 8 dereferenceable(56) %self, i32 39, i32 %_157)
  br label %bb104

bb104:                                            ; preds = %bb103
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %366 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_155)
  %367 = zext i1 %366 to i8
  store i8 %367, i8* %_154, align 1
  br label %bb105

bb105:                                            ; preds = %bb104
  %368 = load i8, i8* %_154, align 1, !range !2
  %369 = trunc i8 %368 to i1
  %_159 = zext i1 %369 to i64
  switch i64 %_159, label %bb106 [
    i64 0, label %bb278
    i64 1, label %bb107
  ]

bb106:                                            ; preds = %bb105
  unreachable

bb107:                                            ; preds = %bb105
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %370 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1523 to %"core::panic::location::Location"*))
  %371 = zext i1 %370 to i8
  store i8 %371, i8* %1, align 1
  br label %bb286

bb108:                                            ; preds = %bb100
; call rustc_demangle::v0::Printer::print
  %_165 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_167.0, i64 %_167.1)
  br label %bb109

bb109:                                            ; preds = %bb108
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %372 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_165)
  %373 = zext i1 %372 to i8
  store i8 %373, i8* %_164, align 1
  br label %bb110

bb110:                                            ; preds = %bb109
  %374 = load i8, i8* %_164, align 1, !range !2
  %375 = trunc i8 %374 to i1
  %_169 = zext i1 %375 to i64
  switch i64 %_169, label %bb112 [
    i64 0, label %bb111
    i64 1, label %bb113
  ]

bb112:                                            ; preds = %bb110
  unreachable

bb111:                                            ; preds = %bb110
  %376 = load i8, i8* %err5, align 1, !range !2
  %_174 = trunc i8 %376 to i1
  %377 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_173 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %378 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %377, i32 0, i32 1
  %379 = zext i1 %_174 to i8
  store i8 %379, i8* %378, align 1
  %380 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_173 to i8*
  store i8 1, i8* %380, align 8
  %381 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %382 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %381 to i8*
  %383 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_173 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %382, i8* align 8 %383, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb286

bb113:                                            ; preds = %bb110
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %384 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1525 to %"core::panic::location::Location"*))
  %385 = zext i1 %384 to i8
  store i8 %385, i8* %1, align 1
  br label %bb286

bb52:                                             ; preds = %bb50
  unreachable

bb53:                                             ; preds = %bb50
  %386 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %387 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %386 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser16 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %387, i32 0, i32 1
; call rustc_demangle::v0::Parser::hex_nibbles
  call void @_ZN14rustc_demangle2v06Parser11hex_nibbles17hf1ee692b8fee6ea8E(%"core::result::Result<v0::HexNibbles, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::HexNibbles, v0::ParseError>") dereferenceable(24) %_83, %"v0::Parser"* align 8 dereferenceable(32) %parser16)
  br label %bb54

bb51:                                             ; preds = %bb50
; call rustc_demangle::v0::Printer::print
  %388 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %389 = zext i1 %388 to i8
  store i8 %389, i8* %1, align 1
  br label %bb286

bb54:                                             ; preds = %bb53
  %390 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %_83 to i8*
  %391 = load i8, i8* %390, align 8, !range !2
  %392 = trunc i8 %391 to i1
  %_85 = zext i1 %392 to i64
  switch i64 %_85, label %bb56 [
    i64 0, label %bb57
    i64 1, label %bb55
  ]

bb56:                                             ; preds = %bb54
  unreachable

bb57:                                             ; preds = %bb54
  %393 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %_83 to %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok"*
  %394 = getelementptr inbounds %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok", %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok"* %393, i32 0, i32 1
  %395 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %394, i32 0, i32 0
  %x.017 = load i8*, i8** %395, align 8, !nonnull !6
  %396 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %394, i32 0, i32 1
  %x.118 = load i64, i64* %396, align 8
  %397 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_80, i32 0, i32 0
  store i8* %x.017, i8** %397, align 8
  %398 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_80, i32 0, i32 1
  store i64 %x.118, i64* %398, align 8
; call rustc_demangle::v0::HexNibbles::try_parse_uint
  %399 = call { i64, i64 } @_ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h4d70f3626eae2246E({ i8*, i64 }* align 8 dereferenceable(16) %_80)
  store { i64, i64 } %399, { i64, i64 }* %_78, align 8
  br label %bb64

bb55:                                             ; preds = %bb54
  %400 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %_83 to %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err"*
  %401 = getelementptr inbounds %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err", %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err"* %400, i32 0, i32 1
  %402 = load i8, i8* %401, align 1, !range !2
  %403 = trunc i8 %402 to i1
  %404 = zext i1 %403 to i8
  store i8 %404, i8* %err2, align 1
; call rustc_demangle::v0::ParseError::message
  %405 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err2)
  %_91.0 = extractvalue { [0 x i8]*, i64 } %405, 0
  %_91.1 = extractvalue { [0 x i8]*, i64 } %405, 1
  br label %bb58

bb58:                                             ; preds = %bb55
; call rustc_demangle::v0::Printer::print
  %_89 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_91.0, i64 %_91.1)
  br label %bb59

bb59:                                             ; preds = %bb58
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %406 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_89)
  %407 = zext i1 %406 to i8
  store i8 %407, i8* %_88, align 1
  br label %bb60

bb60:                                             ; preds = %bb59
  %408 = load i8, i8* %_88, align 1, !range !2
  %409 = trunc i8 %408 to i1
  %_93 = zext i1 %409 to i64
  switch i64 %_93, label %bb62 [
    i64 0, label %bb61
    i64 1, label %bb63
  ]

bb62:                                             ; preds = %bb60
  unreachable

bb61:                                             ; preds = %bb60
  %410 = load i8, i8* %err2, align 1, !range !2
  %_98 = trunc i8 %410 to i1
  %411 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_97 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %412 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %411, i32 0, i32 1
  %413 = zext i1 %_98 to i8
  store i8 %413, i8* %412, align 1
  %414 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_97 to i8*
  store i8 1, i8* %414, align 8
  %415 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %416 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %415 to i8*
  %417 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %416, i8* align 8 %417, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb286

bb63:                                             ; preds = %bb60
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %418 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1528 to %"core::panic::location::Location"*))
  %419 = zext i1 %418 to i8
  store i8 %419, i8* %1, align 1
  br label %bb286

bb64:                                             ; preds = %bb57
  %420 = bitcast { i64, i64 }* %_78 to i64*
  %_100 = load i64, i64* %420, align 8, !range !5
  %421 = icmp eq i64 %_100, 1
  br i1 %421, label %bb66, label %bb65

bb66:                                             ; preds = %bb64
  %422 = bitcast { i64, i64 }* %_78 to %"core::option::Option<u64>::Some"*
  %423 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %422, i32 0, i32 1
  %424 = load i64, i64* %423, align 8
  switch i64 %424, label %bb65 [
    i64 0, label %bb67
    i64 1, label %bb72
  ]

bb65:                                             ; preds = %bb66, %bb64
  store i8 0, i8* %err3, align 1
; call rustc_demangle::v0::ParseError::message
  %425 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err3)
  %_119.0 = extractvalue { [0 x i8]*, i64 } %425, 0
  %_119.1 = extractvalue { [0 x i8]*, i64 } %425, 1
  br label %bb77

bb67:                                             ; preds = %bb66
; call rustc_demangle::v0::Printer::print
  %_102 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1534 to [0 x i8]*), i64 5)
  br label %bb68

bb72:                                             ; preds = %bb66
; call rustc_demangle::v0::Printer::print
  %_109 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1531 to [0 x i8]*), i64 4)
  br label %bb73

bb77:                                             ; preds = %bb65
; call rustc_demangle::v0::Printer::print
  %_117 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_119.0, i64 %_119.1)
  br label %bb78

bb78:                                             ; preds = %bb77
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %426 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_117)
  %427 = zext i1 %426 to i8
  store i8 %427, i8* %_116, align 1
  br label %bb79

bb79:                                             ; preds = %bb78
  %428 = load i8, i8* %_116, align 1, !range !2
  %429 = trunc i8 %428 to i1
  %_121 = zext i1 %429 to i64
  switch i64 %_121, label %bb81 [
    i64 0, label %bb80
    i64 1, label %bb82
  ]

bb81:                                             ; preds = %bb79
  unreachable

bb80:                                             ; preds = %bb79
  %430 = load i8, i8* %err3, align 1, !range !2
  %_126 = trunc i8 %430 to i1
  %431 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_125 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %432 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %431, i32 0, i32 1
  %433 = zext i1 %_126 to i8
  store i8 %433, i8* %432, align 1
  %434 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_125 to i8*
  store i8 1, i8* %434, align 8
  %435 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %436 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %435 to i8*
  %437 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %436, i8* align 8 %437, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb286

bb82:                                             ; preds = %bb79
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %438 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1530 to %"core::panic::location::Location"*))
  %439 = zext i1 %438 to i8
  store i8 %439, i8* %1, align 1
  br label %bb286

bb73:                                             ; preds = %bb72
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %440 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_109)
  %441 = zext i1 %440 to i8
  store i8 %441, i8* %_108, align 1
  br label %bb74

bb74:                                             ; preds = %bb73
  %442 = load i8, i8* %_108, align 1, !range !2
  %443 = trunc i8 %442 to i1
  %_111 = zext i1 %443 to i64
  switch i64 %_111, label %bb75 [
    i64 0, label %bb278
    i64 1, label %bb76
  ]

bb75:                                             ; preds = %bb74
  unreachable

bb76:                                             ; preds = %bb74
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %444 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1533 to %"core::panic::location::Location"*))
  %445 = zext i1 %444 to i8
  store i8 %445, i8* %1, align 1
  br label %bb286

bb68:                                             ; preds = %bb67
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %446 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_102)
  %447 = zext i1 %446 to i8
  store i8 %447, i8* %_101, align 1
  br label %bb69

bb69:                                             ; preds = %bb68
  %448 = load i8, i8* %_101, align 1, !range !2
  %449 = trunc i8 %448 to i1
  %_104 = zext i1 %449 to i64
  switch i64 %_104, label %bb70 [
    i64 0, label %bb278
    i64 1, label %bb71
  ]

bb70:                                             ; preds = %bb69
  unreachable

bb71:                                             ; preds = %bb69
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %450 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1536 to %"core::panic::location::Location"*))
  %451 = zext i1 %450 to i8
  store i8 %451, i8* %1, align 1
  br label %bb286

bb39:                                             ; preds = %bb38
  br i1 %_61, label %bb40, label %bb45

bb45:                                             ; preds = %bb42, %bb39
; call rustc_demangle::v0::Printer::print_const_uint
  %_71 = call zeroext i1 @_ZN14rustc_demangle2v07Printer16print_const_uint17hc1ad12546970801fE(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 %x)
  br label %bb46

bb40:                                             ; preds = %bb39
; call rustc_demangle::v0::Printer::print
  %_64 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1537 to [0 x i8]*), i64 1)
  br label %bb41

bb41:                                             ; preds = %bb40
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %452 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_64)
  %453 = zext i1 %452 to i8
  store i8 %453, i8* %_63, align 1
  br label %bb42

bb42:                                             ; preds = %bb41
  %454 = load i8, i8* %_63, align 1, !range !2
  %455 = trunc i8 %454 to i1
  %_66 = zext i1 %455 to i64
  switch i64 %_66, label %bb43 [
    i64 0, label %bb45
    i64 1, label %bb44
  ]

bb43:                                             ; preds = %bb42
  unreachable

bb44:                                             ; preds = %bb42
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %456 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1539 to %"core::panic::location::Location"*))
  %457 = zext i1 %456 to i8
  store i8 %457, i8* %1, align 1
  br label %bb286

bb46:                                             ; preds = %bb45
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %458 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_71)
  %459 = zext i1 %458 to i8
  store i8 %459, i8* %_70, align 1
  br label %bb47

bb47:                                             ; preds = %bb46
  %460 = load i8, i8* %_70, align 1, !range !2
  %461 = trunc i8 %460 to i1
  %_74 = zext i1 %461 to i64
  switch i64 %_74, label %bb48 [
    i64 0, label %bb278
    i64 1, label %bb49
  ]

bb48:                                             ; preds = %bb47
  unreachable

bb49:                                             ; preds = %bb47
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %462 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1541 to %"core::panic::location::Location"*))
  %463 = zext i1 %462 to i8
  store i8 %463, i8* %1, align 1
  br label %bb286

bb34:                                             ; preds = %bb33
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %464 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_54)
  %465 = zext i1 %464 to i8
  store i8 %465, i8* %_53, align 1
  br label %bb35

bb35:                                             ; preds = %bb34
  %466 = load i8, i8* %_53, align 1, !range !2
  %467 = trunc i8 %466 to i1
  %_57 = zext i1 %467 to i64
  switch i64 %_57, label %bb36 [
    i64 0, label %bb278
    i64 1, label %bb37
  ]

bb36:                                             ; preds = %bb35
  unreachable

bb37:                                             ; preds = %bb35
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %468 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1543 to %"core::panic::location::Location"*))
  %469 = zext i1 %468 to i8
  store i8 %469, i8* %1, align 1
  br label %bb286

bb29:                                             ; preds = %bb28
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %470 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_47)
  %471 = zext i1 %470 to i8
  store i8 %471, i8* %_46, align 1
  br label %bb30

bb30:                                             ; preds = %bb29
  %472 = load i8, i8* %_46, align 1, !range !2
  %473 = trunc i8 %472 to i1
  %_49 = zext i1 %473 to i64
  switch i64 %_49, label %bb31 [
    i64 0, label %bb278
    i64 1, label %bb32
  ]

bb31:                                             ; preds = %bb30
  unreachable

bb32:                                             ; preds = %bb30
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %474 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1546 to %"core::panic::location::Location"*))
  %475 = zext i1 %474 to i8
  store i8 %475, i8* %1, align 1
  br label %bb286

bb284:                                            ; preds = %bb281, %bb278
; call rustc_demangle::v0::Printer::pop_depth
  call void @_ZN14rustc_demangle2v07Printer9pop_depth17haf2f855b2c6bd27fE(%"v0::Printer"* align 8 dereferenceable(56) %self)
  br label %bb285

bb279:                                            ; preds = %bb278
; call rustc_demangle::v0::Printer::print
  %_434 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1547 to [0 x i8]*), i64 1)
  br label %bb280

bb280:                                            ; preds = %bb279
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %476 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_434)
  %477 = zext i1 %476 to i8
  store i8 %477, i8* %_433, align 1
  br label %bb281

bb281:                                            ; preds = %bb280
  %478 = load i8, i8* %_433, align 1, !range !2
  %479 = trunc i8 %478 to i1
  %_436 = zext i1 %479 to i64
  switch i64 %_436, label %bb282 [
    i64 0, label %bb284
    i64 1, label %bb283
  ]

bb282:                                            ; preds = %bb281
  unreachable

bb283:                                            ; preds = %bb281
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %480 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1549 to %"core::panic::location::Location"*))
  %481 = zext i1 %480 to i8
  store i8 %481, i8* %1, align 1
  br label %bb286

bb285:                                            ; preds = %bb284
  store i8 0, i8* %1, align 1
  br label %bb286
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hc91faf6d790ac3c1E"({ i8*, i8* }* align 8 dereferenceable(16) %_1, %"v0::Printer"* align 8 dereferenceable(56) %this) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast { i8*, i8* }* %_1 to i8**
  %2 = load i8*, i8** %1, align 8, !nonnull !6
  %3 = load i8, i8* %2, align 1, !range !2
  %_3 = trunc i8 %3 to i1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_1, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8, !nonnull !6
  store i8 1, i8* %5, align 1
; call rustc_demangle::v0::Printer::print
  %6 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1550 to [0 x i8]*), i64 1)
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %8 = load i8, i8* %0, align 1, !range !2
  %9 = trunc i8 %8 to i1
  ret i1 %9
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h81e9b871d67f5a34E"(i64 %v) unnamed_addr #1 {
start:
; call core::convert::num::<impl core::convert::TryFrom<u64> for u32>::try_from
  %0 = call { i32, i32 } @"_ZN4core7convert3num67_$LT$impl$u20$core..convert..TryFrom$LT$u64$GT$$u20$for$u20$u32$GT$8try_from17h960134b0d9271c79E"(i64 %v)
  %_3.0 = extractvalue { i32, i32 } %0, 0
  %_3.1 = extractvalue { i32, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::ok
  %1 = call { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h721c1538b477e36fE"(i32 %_3.0, i32 %_3.1)
  %2 = extractvalue { i32, i32 } %1, 0
  %3 = extractvalue { i32, i32 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i32, i32 } undef, i32 %2, 0
  %5 = insertvalue { i32, i32 } %4, i32 %3, 1
  ret { i32, i32 } %5
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h65e5758d942a4008E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1158:37: 1158:66]"* nonnull align 1 %_1, %"v0::Printer"* align 8 dereferenceable(56) %this) unnamed_addr #1 {
start:
; call rustc_demangle::v0::Printer::print_const
  %0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h782f5700abcab82fE(%"v0::Printer"* align 8 dereferenceable(56) %this, i1 zeroext true)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h940a05d6e396a419E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1164:49: 1164:78]"* nonnull align 1 %_1, %"v0::Printer"* align 8 dereferenceable(56) %this) unnamed_addr #1 {
start:
; call rustc_demangle::v0::Printer::print_const
  %0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h782f5700abcab82fE(%"v0::Printer"* align 8 dereferenceable(56) %this, i1 zeroext true)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h026e7b3b45ee2a10E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1177:45: 1177:74]"* nonnull align 1 %_1, %"v0::Printer"* align 8 dereferenceable(56) %this) unnamed_addr #1 {
start:
; call rustc_demangle::v0::Printer::print_const
  %0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h782f5700abcab82fE(%"v0::Printer"* align 8 dereferenceable(56) %this, i1 zeroext true)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h5eb5129954e2132cE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:1183:29: 1189:30]"* nonnull align 1 %_1, %"v0::Printer"* align 8 dereferenceable(56) %this) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_50 = alloca i8, align 1
  %_45 = alloca %"v0::Ident", align 8
  %_42 = alloca i8, align 1
  %_39 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_30 = alloca i8, align 1
  %err1 = alloca i8, align 1
  %x = alloca %"v0::Ident", align 8
  %_25 = alloca %"core::result::Result<v0::Ident, v0::ParseError>", align 8
  %name = alloca %"v0::Ident", align 8
  %_19 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_10 = alloca i8, align 1
  %err = alloca i8, align 1
  %_5 = alloca %"core::result::Result<u64, v0::ParseError>", align 8
  %1 = alloca i8, align 1
  %2 = bitcast %"v0::Printer"* %this to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %3 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %2 to i8*
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = trunc i8 %4 to i1
  %_3 = zext i1 %5 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast %"v0::Printer"* %this to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %7 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %6 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %7, i32 0, i32 1
; call rustc_demangle::v0::Parser::disambiguator
  %8 = call i128 @_ZN14rustc_demangle2v06Parser13disambiguator17hcecc09e50a8e1526E(%"v0::Parser"* align 8 dereferenceable(32) %parser)
  store i128 %8, i128* %0, align 8
  %9 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_5 to i8*
  %10 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %1, align 1
  br label %bb37

bb37:                                             ; preds = %bb34, %bb36, %bb31, %bb24, %bb26, %bb14, %bb11, %bb13, %bb1
  %13 = load i8, i8* %1, align 1, !range !2
  %14 = trunc i8 %13 to i1
  ret i1 %14

bb4:                                              ; preds = %bb3
  %15 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_5 to i8*
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = trunc i8 %16 to i1
  %_7 = zext i1 %17 to i64
  switch i64 %_7, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %18 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_5 to %"core::result::Result<u64, v0::ParseError>::Ok"*
  %19 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Ok", %"core::result::Result<u64, v0::ParseError>::Ok"* %18, i32 0, i32 1
  %x2 = load i64, i64* %19, align 8
  %20 = bitcast %"v0::Printer"* %this to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %21 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %20 to i8*
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = trunc i8 %22 to i1
  %_23 = zext i1 %23 to i64
  switch i64 %_23, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb5:                                              ; preds = %bb4
  %24 = bitcast %"core::result::Result<u64, v0::ParseError>"* %_5 to %"core::result::Result<u64, v0::ParseError>::Err"*
  %25 = getelementptr inbounds %"core::result::Result<u64, v0::ParseError>::Err", %"core::result::Result<u64, v0::ParseError>::Err"* %24, i32 0, i32 1
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = trunc i8 %26 to i1
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %err, align 1
; call rustc_demangle::v0::ParseError::message
  %29 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %29, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %29, 1
  br label %bb8

bb8:                                              ; preds = %bb5
; call rustc_demangle::v0::Printer::print
  %_11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 %_13.0, i64 %_13.1)
  br label %bb9

bb9:                                              ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %30 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_11)
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %_10, align 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %32 = load i8, i8* %_10, align 1, !range !2
  %33 = trunc i8 %32 to i1
  %_15 = zext i1 %33 to i64
  switch i64 %_15, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %34 = load i8, i8* %err, align 1, !range !2
  %_20 = trunc i8 %34 to i1
  %35 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_19 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %36 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %35, i32 0, i32 1
  %37 = zext i1 %_20 to i8
  store i8 %37, i8* %36, align 1
  %38 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_19 to i8*
  store i8 1, i8* %38, align 8
  %39 = bitcast %"v0::Printer"* %this to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %40 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %39 to i8*
  %41 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb37

bb13:                                             ; preds = %bb10
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %42 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1553 to %"core::panic::location::Location"*))
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %1, align 1
  br label %bb37

bb15:                                             ; preds = %bb7
  unreachable

bb16:                                             ; preds = %bb7
  %44 = bitcast %"v0::Printer"* %this to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %45 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %44 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser3 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %45, i32 0, i32 1
; call rustc_demangle::v0::Parser::ident
  call void @_ZN14rustc_demangle2v06Parser5ident17hc0ec47da9313c876E(%"core::result::Result<v0::Ident, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::Ident, v0::ParseError>") dereferenceable(40) %_25, %"v0::Parser"* align 8 dereferenceable(32) %parser3)
  br label %bb17

bb14:                                             ; preds = %bb7
; call rustc_demangle::v0::Printer::print
  %46 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %1, align 1
  br label %bb37

bb17:                                             ; preds = %bb16
  %48 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_25 to i8*
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = trunc i8 %49 to i1
  %_27 = zext i1 %50 to i64
  switch i64 %_27, label %bb19 [
    i64 0, label %bb20
    i64 1, label %bb18
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb20:                                             ; preds = %bb17
  %51 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_25 to %"core::result::Result<v0::Ident, v0::ParseError>::Ok"*
  %52 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Ok", %"core::result::Result<v0::Ident, v0::ParseError>::Ok"* %51, i32 0, i32 1
  %53 = bitcast %"v0::Ident"* %x to i8*
  %54 = bitcast %"v0::Ident"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 32, i1 false)
  %55 = bitcast %"v0::Ident"* %name to i8*
  %56 = bitcast %"v0::Ident"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 32, i1 false)
  %57 = bitcast %"v0::Ident"* %_45 to i8*
  %58 = bitcast %"v0::Ident"* %name to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 32, i1 false)
; call rustc_demangle::v0::Printer::print
  %_43 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hea9e22d055e9d00aE(%"v0::Printer"* align 8 dereferenceable(56) %this, %"v0::Ident"* noalias nocapture dereferenceable(32) %_45)
  br label %bb27

bb18:                                             ; preds = %bb17
  %59 = bitcast %"core::result::Result<v0::Ident, v0::ParseError>"* %_25 to %"core::result::Result<v0::Ident, v0::ParseError>::Err"*
  %60 = getelementptr inbounds %"core::result::Result<v0::Ident, v0::ParseError>::Err", %"core::result::Result<v0::Ident, v0::ParseError>::Err"* %59, i32 0, i32 1
  %61 = load i8, i8* %60, align 1, !range !2
  %62 = trunc i8 %61 to i1
  %63 = zext i1 %62 to i8
  store i8 %63, i8* %err1, align 1
; call rustc_demangle::v0::ParseError::message
  %64 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err1)
  %_33.0 = extractvalue { [0 x i8]*, i64 } %64, 0
  %_33.1 = extractvalue { [0 x i8]*, i64 } %64, 1
  br label %bb21

bb21:                                             ; preds = %bb18
; call rustc_demangle::v0::Printer::print
  %_31 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 %_33.0, i64 %_33.1)
  br label %bb22

bb22:                                             ; preds = %bb21
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %65 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_31)
  %66 = zext i1 %65 to i8
  store i8 %66, i8* %_30, align 1
  br label %bb23

bb23:                                             ; preds = %bb22
  %67 = load i8, i8* %_30, align 1, !range !2
  %68 = trunc i8 %67 to i1
  %_35 = zext i1 %68 to i64
  switch i64 %_35, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ]

bb25:                                             ; preds = %bb23
  unreachable

bb24:                                             ; preds = %bb23
  %69 = load i8, i8* %err1, align 1, !range !2
  %_40 = trunc i8 %69 to i1
  %70 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_39 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %71 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %70, i32 0, i32 1
  %72 = zext i1 %_40 to i8
  store i8 %72, i8* %71, align 1
  %73 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_39 to i8*
  store i8 1, i8* %73, align 8
  %74 = bitcast %"v0::Printer"* %this to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %75 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %74 to i8*
  %76 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 40, i1 false)
  store i8 0, i8* %1, align 1
  br label %bb37

bb26:                                             ; preds = %bb23
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %77 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1556 to %"core::panic::location::Location"*))
  %78 = zext i1 %77 to i8
  store i8 %78, i8* %1, align 1
  br label %bb37

bb27:                                             ; preds = %bb20
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %79 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_43)
  %80 = zext i1 %79 to i8
  store i8 %80, i8* %_42, align 1
  br label %bb28

bb28:                                             ; preds = %bb27
  %81 = load i8, i8* %_42, align 1, !range !2
  %82 = trunc i8 %81 to i1
  %_46 = zext i1 %82 to i64
  switch i64 %_46, label %bb30 [
    i64 0, label %bb29
    i64 1, label %bb31
  ]

bb30:                                             ; preds = %bb28
  unreachable

bb29:                                             ; preds = %bb28
; call rustc_demangle::v0::Printer::print
  %_51 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %this, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1559 to [0 x i8]*), i64 2)
  br label %bb32

bb31:                                             ; preds = %bb28
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %83 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1558 to %"core::panic::location::Location"*))
  %84 = zext i1 %83 to i8
  store i8 %84, i8* %1, align 1
  br label %bb37

bb32:                                             ; preds = %bb29
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %85 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_51)
  %86 = zext i1 %85 to i8
  store i8 %86, i8* %_50, align 1
  br label %bb33

bb33:                                             ; preds = %bb32
  %87 = load i8, i8* %_50, align 1, !range !2
  %88 = trunc i8 %87 to i1
  %_53 = zext i1 %88 to i64
  switch i64 %_53, label %bb35 [
    i64 0, label %bb34
    i64 1, label %bb36
  ]

bb35:                                             ; preds = %bb33
  unreachable

bb34:                                             ; preds = %bb33
; call rustc_demangle::v0::Printer::print_const
  %89 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h782f5700abcab82fE(%"v0::Printer"* align 8 dereferenceable(56) %this, i1 zeroext true)
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %1, align 1
  br label %bb37

bb36:                                             ; preds = %bb33
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %91 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1561 to %"core::panic::location::Location"*))
  %92 = zext i1 %91 to i8
  store i8 %92, i8* %1, align 1
  br label %bb37
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hf43c359d94b9c0c9E"(i8* align 1 dereferenceable(1) %_1, %"v0::Printer"* align 8 dereferenceable(56) %this) unnamed_addr #1 {
start:
  %0 = load i8, i8* %_1, align 1, !range !2
  %_4 = trunc i8 %0 to i1
; call rustc_demangle::v0::Printer::print_const
  %1 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h782f5700abcab82fE(%"v0::Printer"* align 8 dereferenceable(56) %this, i1 zeroext %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; rustc_demangle::v0::Printer::print_const_uint
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer16print_const_uint17hc1ad12546970801fE(%"v0::Printer"* align 8 dereferenceable(56) %self, i8 %ty_tag) unnamed_addr #0 {
start:
  %_59 = alloca i8, align 1
  %_42 = alloca i8, align 1
  %_35 = alloca i8, align 1
  %_27 = alloca i8, align 1
  %_23 = alloca { i64, i64 }, align 8
  %_20 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_11 = alloca i8, align 1
  %err = alloca i8, align 1
  %_6 = alloca %"core::result::Result<v0::HexNibbles, v0::ParseError>", align 8
  %hex = alloca { i8*, i64 }, align 8
  %0 = alloca i8, align 1
  %1 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %2 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %1 to i8*
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = trunc i8 %3 to i1
  %_4 = zext i1 %4 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %6 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %5 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %6, i32 0, i32 1
; call rustc_demangle::v0::Parser::hex_nibbles
  call void @_ZN14rustc_demangle2v06Parser11hex_nibbles17hf1ee692b8fee6ea8E(%"core::result::Result<v0::HexNibbles, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::HexNibbles, v0::ParseError>") dereferenceable(24) %_6, %"v0::Parser"* align 8 dereferenceable(32) %parser)
  br label %bb4

bb1:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %7 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb42

bb42:                                             ; preds = %bb41, %bb40, %bb30, %bb26, %bb21, %bb11, %bb13, %bb1
  %9 = load i8, i8* %0, align 1, !range !2
  %10 = trunc i8 %9 to i1
  ret i1 %10

bb4:                                              ; preds = %bb3
  %11 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %_6 to i8*
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = trunc i8 %12 to i1
  %_8 = zext i1 %13 to i64
  switch i64 %_8, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %14 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %_6 to %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok"*
  %15 = getelementptr inbounds %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok", %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok"* %14, i32 0, i32 1
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %15, i32 0, i32 0
  %x.0 = load i8*, i8** %16, align 8, !nonnull !6
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %15, i32 0, i32 1
  %x.1 = load i64, i64* %17, align 8
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %hex, i32 0, i32 0
  store i8* %x.0, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %hex, i32 0, i32 1
  store i64 %x.1, i64* %19, align 8
; call rustc_demangle::v0::HexNibbles::try_parse_uint
  %20 = call { i64, i64 } @_ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h4d70f3626eae2246E({ i8*, i64 }* align 8 dereferenceable(16) %hex)
  store { i64, i64 } %20, { i64, i64 }* %_23, align 8
  br label %bb14

bb5:                                              ; preds = %bb4
  %21 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %_6 to %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err"*
  %22 = getelementptr inbounds %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err", %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err"* %21, i32 0, i32 1
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = trunc i8 %23 to i1
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %err, align 1
; call rustc_demangle::v0::ParseError::message
  %26 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
  %_14.0 = extractvalue { [0 x i8]*, i64 } %26, 0
  %_14.1 = extractvalue { [0 x i8]*, i64 } %26, 1
  br label %bb8

bb8:                                              ; preds = %bb5
; call rustc_demangle::v0::Printer::print
  %_12 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_14.0, i64 %_14.1)
  br label %bb9

bb9:                                              ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %27 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_12)
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %_11, align 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %29 = load i8, i8* %_11, align 1, !range !2
  %30 = trunc i8 %29 to i1
  %_16 = zext i1 %30 to i64
  switch i64 %_16, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %31 = load i8, i8* %err, align 1, !range !2
  %_21 = trunc i8 %31 to i1
  %32 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %33 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %32, i32 0, i32 1
  %34 = zext i1 %_21 to i8
  store i8 %34, i8* %33, align 1
  %35 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  store i8 1, i8* %35, align 8
  %36 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %37 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %36 to i8*
  %38 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 40, i1 false)
  store i8 0, i8* %0, align 1
  br label %bb42

bb13:                                             ; preds = %bb10
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %39 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1564 to %"core::panic::location::Location"*))
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %0, align 1
  br label %bb42

bb14:                                             ; preds = %bb7
  %41 = bitcast { i64, i64 }* %_23 to i64*
  %_25 = load i64, i64* %41, align 8, !range !5
  switch i64 %_25, label %bb16 [
    i64 0, label %bb15
    i64 1, label %bb17
  ]

bb16:                                             ; preds = %bb14
  unreachable

bb15:                                             ; preds = %bb14
; call rustc_demangle::v0::Printer::print
  %_36 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1567 to [0 x i8]*), i64 2)
  br label %bb22

bb17:                                             ; preds = %bb14
  %42 = bitcast { i64, i64 }* %_23 to %"core::option::Option<u64>::Some"*
  %43 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %42, i32 0, i32 1
  %v = load i64, i64* %43, align 8
; call rustc_demangle::v0::Printer::print
  %_28 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hd06624edb242fe49E(%"v0::Printer"* align 8 dereferenceable(56) %self, i64 %v)
  br label %bb18

bb18:                                             ; preds = %bb17
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %44 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_28)
  %45 = zext i1 %44 to i8
  store i8 %45, i8* %_27, align 1
  br label %bb19

bb19:                                             ; preds = %bb18
  %46 = load i8, i8* %_27, align 1, !range !2
  %47 = trunc i8 %46 to i1
  %_31 = zext i1 %47 to i64
  switch i64 %_31, label %bb20 [
    i64 0, label %bb31
    i64 1, label %bb21
  ]

bb20:                                             ; preds = %bb19
  unreachable

bb31:                                             ; preds = %bb28, %bb19
  %_50 = getelementptr inbounds %"v0::Printer", %"v0::Printer"* %self, i32 0, i32 1
  %48 = bitcast i64** %_50 to {}**
  %49 = load {}*, {}** %48, align 8
  %50 = icmp eq {}* %49, null
  %_51 = select i1 %50, i64 0, i64 1
  %51 = icmp eq i64 %_51, 1
  br i1 %51, label %bb32, label %bb41

bb21:                                             ; preds = %bb19
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %52 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1566 to %"core::panic::location::Location"*))
  %53 = zext i1 %52 to i8
  store i8 %53, i8* %0, align 1
  br label %bb42

bb22:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %54 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_36)
  %55 = zext i1 %54 to i8
  store i8 %55, i8* %_35, align 1
  br label %bb23

bb23:                                             ; preds = %bb22
  %56 = load i8, i8* %_35, align 1, !range !2
  %57 = trunc i8 %56 to i1
  %_38 = zext i1 %57 to i64
  switch i64 %_38, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ]

bb25:                                             ; preds = %bb23
  unreachable

bb24:                                             ; preds = %bb23
  %58 = bitcast { i8*, i64 }* %hex to { [0 x i8]*, i64 }*
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0
  %_45.0 = load [0 x i8]*, [0 x i8]** %59, align 8, !nonnull !6
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1
  %_45.1 = load i64, i64* %60, align 8
; call rustc_demangle::v0::Printer::print
  %_43 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_45.0, i64 %_45.1)
  br label %bb27

bb26:                                             ; preds = %bb23
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %61 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1569 to %"core::panic::location::Location"*))
  %62 = zext i1 %61 to i8
  store i8 %62, i8* %0, align 1
  br label %bb42

bb27:                                             ; preds = %bb24
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %63 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_43)
  %64 = zext i1 %63 to i8
  store i8 %64, i8* %_42, align 1
  br label %bb28

bb28:                                             ; preds = %bb27
  %65 = load i8, i8* %_42, align 1, !range !2
  %66 = trunc i8 %65 to i1
  %_46 = zext i1 %66 to i64
  switch i64 %_46, label %bb29 [
    i64 0, label %bb31
    i64 1, label %bb30
  ]

bb29:                                             ; preds = %bb28
  unreachable

bb30:                                             ; preds = %bb28
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %67 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1571 to %"core::panic::location::Location"*))
  %68 = zext i1 %67 to i8
  store i8 %68, i8* %0, align 1
  br label %bb42

bb32:                                             ; preds = %bb31
  %out = bitcast i64** %_50 to %"core::fmt::Formatter"**
  %_55 = load %"core::fmt::Formatter"*, %"core::fmt::Formatter"** %out, align 8, !nonnull !6
; call core::fmt::Formatter::alternate
  %_54 = call zeroext i1 @_ZN4core3fmt9Formatter9alternate17h4cc3cea3d0be51c9E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %_55)
  br label %bb33

bb41:                                             ; preds = %bb38, %bb33, %bb31
  store i8 0, i8* %0, align 1
  br label %bb42

bb33:                                             ; preds = %bb32
  %_53 = xor i1 %_54, true
  br i1 %_53, label %bb34, label %bb41

bb34:                                             ; preds = %bb33
; call rustc_demangle::v0::basic_type
  %69 = call { i8*, i64 } @_ZN14rustc_demangle2v010basic_type17h33795a1f5cb8549cE(i8 %ty_tag)
  %_57.0 = extractvalue { i8*, i64 } %69, 0
  %_57.1 = extractvalue { i8*, i64 } %69, 1
  br label %bb35

bb35:                                             ; preds = %bb34
; call core::option::Option<T>::unwrap
  %70 = call { [0 x i8]*, i64 } @"_ZN4core6option15Option$LT$T$GT$6unwrap17h886118702e2ea67cE"(i8* align 1 %_57.0, i64 %_57.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1573 to %"core::panic::location::Location"*))
  %ty.0 = extractvalue { [0 x i8]*, i64 } %70, 0
  %ty.1 = extractvalue { [0 x i8]*, i64 } %70, 1
  br label %bb36

bb36:                                             ; preds = %bb35
; call rustc_demangle::v0::Printer::print
  %_60 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %ty.0, i64 %ty.1)
  br label %bb37

bb37:                                             ; preds = %bb36
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %71 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_60)
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %_59, align 1
  br label %bb38

bb38:                                             ; preds = %bb37
  %73 = load i8, i8* %_59, align 1, !range !2
  %74 = trunc i8 %73 to i1
  %_63 = zext i1 %74 to i64
  switch i64 %_63, label %bb39 [
    i64 0, label %bb41
    i64 1, label %bb40
  ]

bb39:                                             ; preds = %bb38
  unreachable

bb40:                                             ; preds = %bb38
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %75 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1575 to %"core::panic::location::Location"*))
  %76 = zext i1 %75 to i8
  store i8 %76, i8* %0, align 1
  br label %bb42
}

; rustc_demangle::v0::Printer::print_const_str_literal
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer23print_const_str_literal17h62d011c3bf068ff8E(%"v0::Printer"* align 8 dereferenceable(56) %self) unnamed_addr #0 {
start:
  %_38 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_29 = alloca i8, align 1
  %err1 = alloca i8, align 1
  %_27 = alloca %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>", align 8
  %chars = alloca %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>", align 8
  %_21 = alloca %"core::result::Result<v0::Parser, v0::ParseError>", align 8
  %_12 = alloca i8, align 1
  %err = alloca i8, align 1
  %_7 = alloca %"core::result::Result<v0::HexNibbles, v0::ParseError>", align 8
  %_4 = alloca { i8*, i64 }, align 8
  %_2 = alloca %"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>", align 8
  %0 = alloca i8, align 1
  %1 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %2 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %1 to i8*
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = trunc i8 %3 to i1
  %_5 = zext i1 %4 to i64
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %6 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %5 to %"core::result::Result<v0::Parser, v0::ParseError>::Ok"*
  %parser = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Ok", %"core::result::Result<v0::Parser, v0::ParseError>::Ok"* %6, i32 0, i32 1
; call rustc_demangle::v0::Parser::hex_nibbles
  call void @_ZN14rustc_demangle2v06Parser11hex_nibbles17hf1ee692b8fee6ea8E(%"core::result::Result<v0::HexNibbles, v0::ParseError>"* noalias nocapture sret(%"core::result::Result<v0::HexNibbles, v0::ParseError>") dereferenceable(24) %_7, %"v0::Parser"* align 8 dereferenceable(32) %parser)
  br label %bb4

bb1:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %7 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1576 to [0 x i8]*), i64 1)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb24

bb24:                                             ; preds = %bb21, %bb23, %bb17, %bb11, %bb13, %bb1
  %9 = load i8, i8* %0, align 1, !range !2
  %10 = trunc i8 %9 to i1
  ret i1 %10

bb4:                                              ; preds = %bb3
  %11 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %_7 to i8*
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = trunc i8 %12 to i1
  %_9 = zext i1 %13 to i64
  switch i64 %_9, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %14 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %_7 to %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok"*
  %15 = getelementptr inbounds %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok", %"core::result::Result<v0::HexNibbles, v0::ParseError>::Ok"* %14, i32 0, i32 1
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %15, i32 0, i32 0
  %x.0 = load i8*, i8** %16, align 8, !nonnull !6
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %15, i32 0, i32 1
  %x.1 = load i64, i64* %17, align 8
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  store i8* %x.0, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %x.1, i64* %19, align 8
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars
  call void @_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars17h56ba339a8a2ea2fcE(%"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>"* noalias nocapture sret(%"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>") dereferenceable(40) %_2, { i8*, i64 }* align 8 dereferenceable(16) %_4)
  br label %bb14

bb5:                                              ; preds = %bb4
  %20 = bitcast %"core::result::Result<v0::HexNibbles, v0::ParseError>"* %_7 to %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err"*
  %21 = getelementptr inbounds %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err", %"core::result::Result<v0::HexNibbles, v0::ParseError>::Err"* %20, i32 0, i32 1
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = trunc i8 %22 to i1
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %err, align 1
; call rustc_demangle::v0::ParseError::message
  %25 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err)
  %_15.0 = extractvalue { [0 x i8]*, i64 } %25, 0
  %_15.1 = extractvalue { [0 x i8]*, i64 } %25, 1
  br label %bb8

bb8:                                              ; preds = %bb5
; call rustc_demangle::v0::Printer::print
  %_13 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_15.0, i64 %_15.1)
  br label %bb9

bb9:                                              ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %26 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_13)
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %_12, align 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %28 = load i8, i8* %_12, align 1, !range !2
  %29 = trunc i8 %28 to i1
  %_17 = zext i1 %29 to i64
  switch i64 %_17, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  %30 = load i8, i8* %err, align 1, !range !2
  %_22 = trunc i8 %30 to i1
  %31 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_21 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %32 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %31, i32 0, i32 1
  %33 = zext i1 %_22 to i8
  store i8 %33, i8* %32, align 1
  %34 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_21 to i8*
  store i8 1, i8* %34, align 8
  %35 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %36 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %35 to i8*
  %37 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 40, i1 false)
  store i8 0, i8* %0, align 1
  br label %bb24

bb13:                                             ; preds = %bb10
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %38 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1578 to %"core::panic::location::Location"*))
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %0, align 1
  br label %bb24

bb14:                                             ; preds = %bb7
  %40 = bitcast %"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>"* %_2 to {}**
  %41 = load {}*, {}** %40, align 8
  %42 = icmp eq {}* %41, null
  %_24 = select i1 %42, i64 0, i64 1
  switch i64 %_24, label %bb16 [
    i64 0, label %bb15
    i64 1, label %bb17
  ]

bb16:                                             ; preds = %bb14
  unreachable

bb15:                                             ; preds = %bb14
  store i8 0, i8* %err1, align 1
; call rustc_demangle::v0::ParseError::message
  %43 = call { [0 x i8]*, i64 } @_ZN14rustc_demangle2v010ParseError7message17hf07e98086d64fce1E(i8* align 1 dereferenceable(1) %err1)
  %_32.0 = extractvalue { [0 x i8]*, i64 } %43, 0
  %_32.1 = extractvalue { [0 x i8]*, i64 } %43, 1
  br label %bb18

bb17:                                             ; preds = %bb14
  %44 = bitcast %"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>"* %_2 to %"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>::Some"*
  %45 = bitcast %"core::option::Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>>::Some"* %44 to %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"*
  %46 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %chars to i8*
  %47 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 40, i1 false)
  %48 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %_27 to i8*
  %49 = bitcast %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* %chars to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 40, i1 false)
; call rustc_demangle::v0::Printer::print_quoted_escaped_chars
  %50 = call zeroext i1 @_ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17hfe730131329b21fdE(%"v0::Printer"* align 8 dereferenceable(56) %self, i32 34, %"core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/v0.rs:312:35: 357:10]>, fn(core::result::Result<char, ()>) -> char {core::result::Result::<char, ()>::unwrap}>"* noalias nocapture dereferenceable(40) %_27)
  %51 = zext i1 %50 to i8
  store i8 %51, i8* %0, align 1
  br label %bb24

bb18:                                             ; preds = %bb15
; call rustc_demangle::v0::Printer::print
  %_30 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h3859901bc5eaad3dE(%"v0::Printer"* align 8 dereferenceable(56) %self, [0 x i8]* nonnull align 1 %_32.0, i64 %_32.1)
  br label %bb19

bb19:                                             ; preds = %bb18
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %52 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_30)
  %53 = zext i1 %52 to i8
  store i8 %53, i8* %_29, align 1
  br label %bb20

bb20:                                             ; preds = %bb19
  %54 = load i8, i8* %_29, align 1, !range !2
  %55 = trunc i8 %54 to i1
  %_34 = zext i1 %55 to i64
  switch i64 %_34, label %bb22 [
    i64 0, label %bb21
    i64 1, label %bb23
  ]

bb22:                                             ; preds = %bb20
  unreachable

bb21:                                             ; preds = %bb20
  %56 = load i8, i8* %err1, align 1, !range !2
  %_39 = trunc i8 %56 to i1
  %57 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_38 to %"core::result::Result<v0::Parser, v0::ParseError>::Err"*
  %58 = getelementptr inbounds %"core::result::Result<v0::Parser, v0::ParseError>::Err", %"core::result::Result<v0::Parser, v0::ParseError>::Err"* %57, i32 0, i32 1
  %59 = zext i1 %_39 to i8
  store i8 %59, i8* %58, align 1
  %60 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_38 to i8*
  store i8 1, i8* %60, align 8
  %61 = bitcast %"v0::Printer"* %self to %"core::result::Result<v0::Parser, v0::ParseError>"*
  %62 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %61 to i8*
  %63 = bitcast %"core::result::Result<v0::Parser, v0::ParseError>"* %_38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 40, i1 false)
  store i8 0, i8* %0, align 1
  br label %bb24

bb23:                                             ; preds = %bb20
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %64 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1580 to %"core::panic::location::Location"*))
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %0, align 1
  br label %bb24
}

; rustc_demangle::demangle
; Function Attrs: nonlazybind uwtable
define void @_ZN14rustc_demangle8demangle17h6ffa883f887a06beE(%Demangle* noalias nocapture sret(%Demangle) dereferenceable(64) %0, [0 x i8]* nonnull align 1 %1, i64 %2) unnamed_addr #0 {
start:
  %_59 = alloca %"core::option::Option<DemangleStyle>", align 8
  %_58 = alloca %"core::option::Option<DemangleStyle>", align 8
  %_51 = alloca i8, align 1
  %_46 = alloca %DemangleStyle, align 8
  %_39 = alloca %"core::result::Result<(v0::Demangle, &str), v0::ParseError>", align 8
  %_38 = alloca %"legacy::Demangle", align 8
  %_37 = alloca %DemangleStyle, align 8
  %d = alloca %"legacy::Demangle", align 8
  %_31 = alloca %"core::result::Result<(legacy::Demangle, &str), ()>", align 8
  %style = alloca %"core::option::Option<DemangleStyle>", align 8
  %suffix = alloca { [0 x i8]*, i64 }, align 8
  %_27 = alloca i64, align 8
  %_19 = alloca { i8*, i8* }, align 8
  %_11 = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  %s = alloca { [0 x i8]*, i64 }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !6
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_4.1 = load i64, i64* %6, align 8
; call core::str::<impl str>::find
  %7 = call { i64, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17hbb8c4a36cdf0e183E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1581 to [0 x i8]*), i64 6)
  store { i64, i64 } %7, { i64, i64 }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast { i64, i64 }* %_3 to i64*
  %_6 = load i64, i64* %8, align 8, !range !5
  %9 = icmp eq i64 %_6, 1
  br i1 %9, label %bb2, label %bb10

bb2:                                              ; preds = %bb1
  %10 = bitcast { i64, i64 }* %_3 to %"core::option::Option<usize>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %10, i32 0, i32 1
  %i = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_10.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !6
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_10.1 = load i64, i64* %13, align 8
; call core::str::<impl str>::len
  %_14 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1581 to [0 x i8]*), i64 6)
  br label %bb3

bb10:                                             ; preds = %bb9, %bb7, %bb1
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 0
  store [0 x i8]* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc703, i32 0, i32 0), [0 x i8]** %14, align 8
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 1
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_32.0 = load [0 x i8]*, [0 x i8]** %16, align 8, !nonnull !6
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_32.1 = load i64, i64* %17, align 8
; call rustc_demangle::legacy::demangle
  call void @_ZN14rustc_demangle6legacy8demangle17h83495f8ef0ba9165E(%"core::result::Result<(legacy::Demangle, &str), ()>"* noalias nocapture sret(%"core::result::Result<(legacy::Demangle, &str), ()>") dereferenceable(40) %_31, [0 x i8]* nonnull align 1 %_32.0, i64 %_32.1)
  br label %bb11

bb3:                                              ; preds = %bb2
  %18 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 %_14)
  %_16.0 = extractvalue { i64, i1 } %18, 0
  %_16.1 = extractvalue { i64, i1 } %18, 1
  %19 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false)
  br i1 %19, label %panic, label %bb4

bb4:                                              ; preds = %bb3
  store i64 %_16.0, i64* %_11, align 8
  %20 = load i64, i64* %_11, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %21 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h9fd3e4c8e5f704a4E"([0 x i8]* nonnull align 1 %_10.0, i64 %_10.1, i64 %20, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1585 to %"core::panic::location::Location"*))
  %_9.0 = extractvalue { [0 x i8]*, i64 } %21, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %21, 1
  br label %bb5

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1583 to %"core::panic::location::Location"*)) #12
  unreachable

bb5:                                              ; preds = %bb4
; call core::str::<impl str>::chars
  %22 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %_9.0, i64 %_9.1)
  store { i8*, i8* } %22, { i8*, i8* }* %_19, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::iter::traits::iterator::Iterator::all
  %all_hex = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h026e8a05234574d1E({ i8*, i8* }* align 8 dereferenceable(16) %_19)
  br label %bb7

bb7:                                              ; preds = %bb6
  br i1 %all_hex, label %bb8, label %bb10

bb8:                                              ; preds = %bb7
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_26.0 = load [0 x i8]*, [0 x i8]** %23, align 8, !nonnull !6
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_26.1 = load i64, i64* %24, align 8
  store i64 %i, i64* %_27, align 8
  %25 = load i64, i64* %_27, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %26 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h1a05bb88631985ceE"([0 x i8]* nonnull align 1 %_26.0, i64 %_26.1, i64 %25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1587 to %"core::panic::location::Location"*))
  %_25.0 = extractvalue { [0 x i8]*, i64 } %26, 0
  %_25.1 = extractvalue { [0 x i8]*, i64 } %26, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  store [0 x i8]* %_25.0, [0 x i8]** %27, align 8
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  store i64 %_25.1, i64* %28, align 8
  br label %bb10

bb11:                                             ; preds = %bb10
  %29 = bitcast %"core::result::Result<(legacy::Demangle, &str), ()>"* %_31 to {}**
  %30 = load {}*, {}** %29, align 8
  %31 = icmp eq {}* %30, null
  %_33 = select i1 %31, i64 1, i64 0
  switch i64 %_33, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ]

bb13:                                             ; preds = %bb11
  unreachable

bb14:                                             ; preds = %bb11
  %32 = bitcast %"core::result::Result<(legacy::Demangle, &str), ()>"* %_31 to %"core::result::Result<(legacy::Demangle, &str), ()>::Ok"*
  %33 = bitcast %"core::result::Result<(legacy::Demangle, &str), ()>::Ok"* %32 to { %"legacy::Demangle", { [0 x i8]*, i64 } }*
  %34 = bitcast { %"legacy::Demangle", { [0 x i8]*, i64 } }* %33 to %"legacy::Demangle"*
  %35 = bitcast %"legacy::Demangle"* %d to i8*
  %36 = bitcast %"legacy::Demangle"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false)
  %37 = bitcast %"core::result::Result<(legacy::Demangle, &str), ()>"* %_31 to %"core::result::Result<(legacy::Demangle, &str), ()>::Ok"*
  %38 = bitcast %"core::result::Result<(legacy::Demangle, &str), ()>::Ok"* %37 to { %"legacy::Demangle", { [0 x i8]*, i64 } }*
  %39 = getelementptr inbounds { %"legacy::Demangle", { [0 x i8]*, i64 } }, { %"legacy::Demangle", { [0 x i8]*, i64 } }* %38, i32 0, i32 1
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %39, i32 0, i32 0
  %s.01 = load [0 x i8]*, [0 x i8]** %40, align 8, !nonnull !6
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %39, i32 0, i32 1
  %s.12 = load i64, i64* %41, align 8
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 0
  store [0 x i8]* %s.01, [0 x i8]** %42, align 8
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 1
  store i64 %s.12, i64* %43, align 8
  %44 = bitcast %"legacy::Demangle"* %_38 to i8*
  %45 = bitcast %"legacy::Demangle"* %d to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 24, i1 false)
  %46 = bitcast %DemangleStyle* %_37 to %"DemangleStyle::Legacy"*
  %47 = getelementptr inbounds %"DemangleStyle::Legacy", %"DemangleStyle::Legacy"* %46, i32 0, i32 1
  %48 = bitcast %"legacy::Demangle"* %47 to i8*
  %49 = bitcast %"legacy::Demangle"* %_38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false)
  %50 = bitcast %DemangleStyle* %_37 to i64*
  store i64 0, i64* %50, align 8
  %51 = bitcast %"core::option::Option<DemangleStyle>"* %style to %"core::option::Option<DemangleStyle>::Some"*
  %52 = bitcast %"core::option::Option<DemangleStyle>::Some"* %51 to %DemangleStyle*
  %53 = bitcast %DemangleStyle* %52 to i8*
  %54 = bitcast %DemangleStyle* %_37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 32, i1 false)
  br label %bb20

bb12:                                             ; preds = %bb11
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_40.0 = load [0 x i8]*, [0 x i8]** %55, align 8, !nonnull !6
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_40.1 = load i64, i64* %56, align 8
; call rustc_demangle::v0::demangle
  call void @_ZN14rustc_demangle2v08demangle17hd18b29623172c0a8E(%"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* noalias nocapture sret(%"core::result::Result<(v0::Demangle, &str), v0::ParseError>") dereferenceable(40) %_39, [0 x i8]* nonnull align 1 %_40.0, i64 %_40.1)
  br label %bb15

bb15:                                             ; preds = %bb12
  %57 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %_39 to i8*
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = trunc i8 %58 to i1
  %_42 = zext i1 %59 to i64
  switch i64 %_42, label %bb17 [
    i64 0, label %bb18
    i64 1, label %bb16
  ]

bb17:                                             ; preds = %bb16, %bb15
  unreachable

bb18:                                             ; preds = %bb15
  %60 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %_39 to %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Ok"*
  %61 = getelementptr inbounds %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Ok", %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Ok"* %60, i32 0, i32 1
  %62 = bitcast { { i8*, i64 }, { [0 x i8]*, i64 } }* %61 to { i8*, i64 }*
  %63 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %62, i32 0, i32 0
  %d.0 = load i8*, i8** %63, align 8, !nonnull !6
  %64 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %62, i32 0, i32 1
  %d.1 = load i64, i64* %64, align 8
  %65 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %_39 to %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Ok"*
  %66 = getelementptr inbounds %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Ok", %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Ok"* %65, i32 0, i32 1
  %67 = getelementptr inbounds { { i8*, i64 }, { [0 x i8]*, i64 } }, { { i8*, i64 }, { [0 x i8]*, i64 } }* %66, i32 0, i32 1
  %68 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %67, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %68, align 8, !nonnull !6
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %67, i32 0, i32 1
  %s.1 = load i64, i64* %69, align 8
  %70 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %70, align 8
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 1
  store i64 %s.1, i64* %71, align 8
  %72 = bitcast %DemangleStyle* %_46 to %"DemangleStyle::V0"*
  %73 = getelementptr inbounds %"DemangleStyle::V0", %"DemangleStyle::V0"* %72, i32 0, i32 1
  %74 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %73, i32 0, i32 0
  store i8* %d.0, i8** %74, align 8
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %73, i32 0, i32 1
  store i64 %d.1, i64* %75, align 8
  %76 = bitcast %DemangleStyle* %_46 to i64*
  store i64 1, i64* %76, align 8
  %77 = bitcast %"core::option::Option<DemangleStyle>"* %style to %"core::option::Option<DemangleStyle>::Some"*
  %78 = bitcast %"core::option::Option<DemangleStyle>::Some"* %77 to %DemangleStyle*
  %79 = bitcast %DemangleStyle* %78 to i8*
  %80 = bitcast %DemangleStyle* %_46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 32, i1 false)
  br label %bb20

bb16:                                             ; preds = %bb15
  %81 = bitcast %"core::result::Result<(v0::Demangle, &str), v0::ParseError>"* %_39 to %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err"*
  %82 = getelementptr inbounds %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err", %"core::result::Result<(v0::Demangle, &str), v0::ParseError>::Err"* %81, i32 0, i32 1
  %83 = load i8, i8* %82, align 1, !range !2
  %84 = trunc i8 %83 to i1
  %_41 = zext i1 %84 to i64
  switch i64 %_41, label %bb17 [
    i64 0, label %bb19
    i64 1, label %bb19
  ]

bb19:                                             ; preds = %bb16, %bb16
  %85 = bitcast %"core::option::Option<DemangleStyle>"* %style to i64*
  store i64 2, i64* %85, align 8
  br label %bb20

bb20:                                             ; preds = %bb14, %bb18, %bb19
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 0
  %_50.0 = load [0 x i8]*, [0 x i8]** %86, align 8, !nonnull !6
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 1
  %_50.1 = load i64, i64* %87, align 8
; call core::str::<impl str>::is_empty
  %_49 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17he6e5338d5d9dd13dE"([0 x i8]* nonnull align 1 %_50.0, i64 %_50.1)
  br label %bb21

bb21:                                             ; preds = %bb20
  %_48 = xor i1 %_49, true
  br i1 %_48, label %bb22, label %bb29

bb29:                                             ; preds = %bb28, %bb25, %bb21
  %88 = bitcast %"core::option::Option<DemangleStyle>"* %_59 to i8*
  %89 = bitcast %"core::option::Option<DemangleStyle>"* %style to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 32, i1 false)
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_60.0 = load [0 x i8]*, [0 x i8]** %90, align 8, !nonnull !6
  %91 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_60.1 = load i64, i64* %91, align 8
  %92 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 0
  %_61.0 = load [0 x i8]*, [0 x i8]** %92, align 8, !nonnull !6
  %93 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 1
  %_61.1 = load i64, i64* %93, align 8
  %94 = bitcast %Demangle* %0 to %"core::option::Option<DemangleStyle>"*
  %95 = bitcast %"core::option::Option<DemangleStyle>"* %94 to i8*
  %96 = bitcast %"core::option::Option<DemangleStyle>"* %_59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 32, i1 false)
  %97 = getelementptr inbounds %Demangle, %Demangle* %0, i32 0, i32 1
  %98 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %97, i32 0, i32 0
  store [0 x i8]* %_60.0, [0 x i8]** %98, align 8
  %99 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %97, i32 0, i32 1
  store i64 %_60.1, i64* %99, align 8
  %100 = getelementptr inbounds %Demangle, %Demangle* %0, i32 0, i32 2
  %101 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %100, i32 0, i32 0
  store [0 x i8]* %_61.0, [0 x i8]** %101, align 8
  %102 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %100, i32 0, i32 1
  store i64 %_61.1, i64* %102, align 8
  ret void

bb22:                                             ; preds = %bb21
  %103 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 0
  %_53.0 = load [0 x i8]*, [0 x i8]** %103, align 8, !nonnull !6
  %104 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 1
  %_53.1 = load i64, i64* %104, align 8
; call core::str::<impl str>::starts_with
  %_52 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h17869e050714381eE"([0 x i8]* nonnull align 1 %_53.0, i64 %_53.1, i32 46)
  br label %bb26

bb26:                                             ; preds = %bb22
  br i1 %_52, label %bb24, label %bb23

bb23:                                             ; preds = %bb26
  store i8 0, i8* %_51, align 1
  br label %bb25

bb24:                                             ; preds = %bb26
  %105 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 0
  %_55.0 = load [0 x i8]*, [0 x i8]** %105, align 8, !nonnull !6
  %106 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 1
  %_55.1 = load i64, i64* %106, align 8
; call rustc_demangle::is_symbol_like
  %_54 = call zeroext i1 @_ZN14rustc_demangle14is_symbol_like17h805c975bfb100e54E([0 x i8]* nonnull align 1 %_55.0, i64 %_55.1)
  br label %bb27

bb27:                                             ; preds = %bb24
  %107 = zext i1 %_54 to i8
  store i8 %107, i8* %_51, align 1
  br label %bb25

bb25:                                             ; preds = %bb23, %bb27
  %108 = load i8, i8* %_51, align 1, !range !2
  %109 = trunc i8 %108 to i1
  br i1 %109, label %bb29, label %bb28

bb28:                                             ; preds = %bb25
  %110 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 0
  store [0 x i8]* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc703, i32 0, i32 0), [0 x i8]** %110, align 8
  %111 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %suffix, i32 0, i32 1
  store i64 0, i64* %111, align 8
  %112 = bitcast %"core::option::Option<DemangleStyle>"* %_58 to i64*
  store i64 2, i64* %112, align 8
  %113 = bitcast %"core::option::Option<DemangleStyle>"* %style to i8*
  %114 = bitcast %"core::option::Option<DemangleStyle>"* %_58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 32, i1 false)
  br label %bb29
}

; rustc_demangle::demangle::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle8demangle28_$u7b$$u7b$closure$u7d$$u7d$17h3acdd0c0efd98f98E"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:98:45: 101:10]"* nonnull align 1 %_1, i32 %c) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_5 = icmp ule i32 65, %c
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %bb1, %start
  %_3 = icmp ule i32 48, %c
  br i1 %_3, label %bb3, label %bb4

bb1:                                              ; preds = %start
  %_6 = icmp ule i32 %c, 70
  br i1 %_6, label %bb6, label %bb2

bb6:                                              ; preds = %bb4, %bb3, %bb1
  store i8 1, i8* %0, align 1
  br label %bb7

bb4:                                              ; preds = %bb3, %bb2
  %1 = icmp eq i32 %c, 64
  br i1 %1, label %bb6, label %bb5

bb3:                                              ; preds = %bb2
  %_4 = icmp ule i32 %c, 57
  br i1 %_4, label %bb6, label %bb4

bb5:                                              ; preds = %bb4
  store i8 0, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %2 = load i8, i8* %0, align 1, !range !2
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; rustc_demangle::try_demangle
; Function Attrs: nonlazybind uwtable
define void @_ZN14rustc_demangle12try_demangle17h4d71eb6e64ede9e7E(%"core::result::Result<Demangle, TryDemangleError>"* noalias nocapture sret(%"core::result::Result<Demangle, TryDemangleError>") dereferenceable(64) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %_6 = alloca %Demangle, align 8
  %sym = alloca %Demangle, align 8
; call rustc_demangle::demangle
  call void @_ZN14rustc_demangle8demangle17h6ffa883f887a06beE(%Demangle* noalias nocapture sret(%Demangle) dereferenceable(64) %sym, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = bitcast %Demangle* %sym to %"core::option::Option<DemangleStyle>"*
; call core::option::Option<T>::is_some
  %_4 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h2e597aea4b5d1f23E"(%"core::option::Option<DemangleStyle>"* align 8 dereferenceable(32) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_4, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %1 = bitcast %"core::result::Result<Demangle, TryDemangleError>"* %0 to i64*
  store i64 3, i64* %1, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %2 = bitcast %Demangle* %_6 to i8*
  %3 = bitcast %Demangle* %sym to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 64, i1 false)
  %4 = bitcast %"core::result::Result<Demangle, TryDemangleError>"* %0 to %"core::result::Result<Demangle, TryDemangleError>::Ok"*
  %5 = bitcast %"core::result::Result<Demangle, TryDemangleError>::Ok"* %4 to %Demangle*
  %6 = bitcast %Demangle* %5 to i8*
  %7 = bitcast %Demangle* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 64, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  ret void
}

; rustc_demangle::Demangle::as_str
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN14rustc_demangle8Demangle6as_str17h513e1bc00fb00492E(%Demangle* align 8 dereferenceable(64) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %Demangle, %Demangle* %self, i32 0, i32 1
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %2 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !6
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1
  ret { [0 x i8]*, i64 } %6
}

; rustc_demangle::is_symbol_like
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle14is_symbol_like17h805c975bfb100e54E([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %_3 = alloca { i8*, i8* }, align 8
; call core::str::<impl str>::chars
  %0 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h5ba2f14fb446b2d3E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  store { i8*, i8* } %0, { i8*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::all
  %1 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h203a9d45276baeccE({ i8*, i8* }* align 8 dereferenceable(16) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %1
}

; rustc_demangle::is_symbol_like::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN14rustc_demangle14is_symbol_like28_$u7b$$u7b$closure$u7d$$u7d$17h4526f85d2da9a4dfE"(%"[closure@/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.21/src/lib.rs:184:19: 188:6]"* nonnull align 1 %_1, i32 %c) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
; call rustc_demangle::is_ascii_alphanumeric
  %_3 = call zeroext i1 @_ZN14rustc_demangle21is_ascii_alphanumeric17ha7db4fa700e83ab2E(i32 %c)
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
; call rustc_demangle::is_ascii_punctuation
  %_5 = call zeroext i1 @_ZN14rustc_demangle20is_ascii_punctuation17h3a319bb7c3996e5eE(i32 %c)
  br label %bb5

bb1:                                              ; preds = %bb4
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2

bb5:                                              ; preds = %bb2
  %3 = zext i1 %_5 to i8
  store i8 %3, i8* %0, align 1
  br label %bb3
}

; rustc_demangle::is_ascii_alphanumeric
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle21is_ascii_alphanumeric17ha7db4fa700e83ab2E(i32 %c) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_6 = icmp ule i32 65, %c
  br i1 %_6, label %bb1, label %bb2

bb2:                                              ; preds = %bb1, %start
  %_4 = icmp ule i32 97, %c
  br i1 %_4, label %bb3, label %bb4

bb1:                                              ; preds = %start
  %_7 = icmp ule i32 %c, 90
  br i1 %_7, label %bb7, label %bb2

bb7:                                              ; preds = %bb5, %bb3, %bb1
  store i8 1, i8* %0, align 1
  br label %bb8

bb4:                                              ; preds = %bb3, %bb2
  %_2 = icmp ule i32 48, %c
  br i1 %_2, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %_5 = icmp ule i32 %c, 122
  br i1 %_5, label %bb7, label %bb4

bb6:                                              ; preds = %bb5, %bb4
  store i8 0, i8* %0, align 1
  br label %bb8

bb5:                                              ; preds = %bb4
  %_3 = icmp ule i32 %c, 57
  br i1 %_3, label %bb7, label %bb6

bb8:                                              ; preds = %bb6, %bb7
  %1 = load i8, i8* %0, align 1, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; rustc_demangle::is_ascii_punctuation
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN14rustc_demangle20is_ascii_punctuation17h3a319bb7c3996e5eE(i32 %c) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_8 = icmp ule i32 33, %c
  br i1 %_8, label %bb1, label %bb2

bb2:                                              ; preds = %bb1, %start
  %_6 = icmp ule i32 58, %c
  br i1 %_6, label %bb3, label %bb4

bb1:                                              ; preds = %start
  %_9 = icmp ule i32 %c, 47
  br i1 %_9, label %bb9, label %bb2

bb9:                                              ; preds = %bb7, %bb5, %bb3, %bb1
  store i8 1, i8* %0, align 1
  br label %bb10

bb4:                                              ; preds = %bb3, %bb2
  %_4 = icmp ule i32 91, %c
  br i1 %_4, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %_7 = icmp ule i32 %c, 64
  br i1 %_7, label %bb9, label %bb4

bb6:                                              ; preds = %bb5, %bb4
  %_2 = icmp ule i32 123, %c
  br i1 %_2, label %bb7, label %bb8

bb5:                                              ; preds = %bb4
  %_5 = icmp ule i32 %c, 96
  br i1 %_5, label %bb9, label %bb6

bb8:                                              ; preds = %bb7, %bb6
  store i8 0, i8* %0, align 1
  br label %bb10

bb7:                                              ; preds = %bb6
  %_3 = icmp ule i32 %c, 126
  br i1 %_3, label %bb9, label %bb8

bb10:                                             ; preds = %bb8, %bb9
  %1 = load i8, i8* %0, align 1, !range !2
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; <rustc_demangle::DemangleStyle as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN68_$LT$rustc_demangle..DemangleStyle$u20$as$u20$core..fmt..Display$GT$3fmt17h879870c26aaa0a7cE"(%DemangleStyle* align 8 dereferenceable(32) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %DemangleStyle* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !5
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %DemangleStyle* %self to %"DemangleStyle::Legacy"*
  %d1 = getelementptr inbounds %"DemangleStyle::Legacy", %"DemangleStyle::Legacy"* %2, i32 0, i32 1
; call <rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt
  %3 = call zeroext i1 @"_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17h43407c2e07fac12cE"(%"legacy::Demangle"* align 8 dereferenceable(24) %d1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %DemangleStyle* %self to %"DemangleStyle::V0"*
  %d = getelementptr inbounds %"DemangleStyle::V0", %"DemangleStyle::V0"* %5, i32 0, i32 1
; call <rustc_demangle::v0::Demangle as core::fmt::Display>::fmt
  %6 = call zeroext i1 @"_ZN67_$LT$rustc_demangle..v0..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17hacdba5fa921589dfE"({ i8*, i64 }* align 8 dereferenceable(16) %d, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %8 = load i8, i8* %0, align 1, !range !2
  %9 = trunc i8 %8 to i1
  ret i1 %9
}

; <rustc_demangle::SizeLimitedFmtAdapter<F> as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN83_$LT$rustc_demangle..SizeLimitedFmtAdapter$LT$F$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hc4d620ace92029e6E"(%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_5 = alloca i64*, align 8
  %2 = alloca i8, align 1
  %s = alloca { [0 x i8]*, i64 }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* %self to { i64, i64 }*
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0
  %_4.0 = load i64, i64* %6, align 8, !range !5
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1
  %_4.1 = load i64, i64* %7, align 8
  %8 = bitcast i64** %_5 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %s, { [0 x i8]*, i64 }** %8, align 8
  %9 = load i64*, i64** %_5, align 8, !nonnull !6
; call core::result::Result<T,E>::and_then
  %10 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h17a1542a24a2cca7E"(i64 %_4.0, i64 %_4.1, i64* align 8 dereferenceable(16) %9)
  %_3.0 = extractvalue { i64, i64 } %10, 0
  %_3.1 = extractvalue { i64, i64 } %10, 1
  br label %bb1

bb1:                                              ; preds = %start
  %11 = bitcast %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* %self to { i64, i64 }*
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %_3.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %_3.1, i64* %13, align 8
  %14 = bitcast %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* %self to { i64, i64 }*
  %15 = bitcast { i64, i64 }* %14 to i64*
  %_7 = load i64, i64* %15, align 8, !range !5
  switch i64 %_7, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %_8 = getelementptr inbounds %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>", %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* %self, i32 0, i32 1
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_9.0 = load [0 x i8]*, [0 x i8]** %16, align 8, !nonnull !6
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_9.1 = load i64, i64* %17, align 8
; call <&mut W as core::fmt::Write>::write_str
  %18 = call zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h5d4ddd8e690608cfE"(%"core::fmt::Formatter"** align 8 dereferenceable(8) %_8, [0 x i8]* nonnull align 1 %_9.0, i64 %_9.1)
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %2, align 1
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 1, i8* %2, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load i8, i8* %2, align 1, !range !2
  %21 = trunc i8 %20 to i1
  ret i1 %21
}

; <rustc_demangle::SizeLimitedFmtAdapter<F> as core::fmt::Write>::write_str::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN83_$LT$rustc_demangle..SizeLimitedFmtAdapter$LT$F$GT$$u20$as$u20$core..fmt..Write$GT$9write_str28_$u7b$$u7b$closure$u7d$$u7d$17h928578f4be15758dE"(i64* align 8 dereferenceable(16) %_1, i64 %r) unnamed_addr #1 {
start:
  %0 = bitcast i64* %_1 to { [0 x i8]*, i64 }*
  %1 = bitcast i64* %_1 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !6
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_6.1 = load i64, i64* %3, align 8
; call core::str::<impl str>::len
  %_5 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hef42c3b6ddc8dd66E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_sub
  %4 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h286b2e3881dd5503E"(i64 %r, i64 %_5)
  %_3.0 = extractvalue { i64, i64 } %4, 0
  %_3.1 = extractvalue { i64, i64 } %4, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::ok_or
  %5 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h7710c1b312946b79E"(i64 %_3.0, i64 %_3.1)
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = extractvalue { i64, i64 } %5, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %8 = insertvalue { i64, i64 } undef, i64 %6, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; <rustc_demangle::Demangle as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN63_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17h5c6b923e8b2e2221E"(%Demangle* align 8 dereferenceable(64) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_71 = alloca i8, align 1
  %_62 = alloca i8, align 1
  %_57 = alloca { i8, i8 }, align 1
  %_48 = alloca i64*, align 8
  %_47 = alloca [1 x { i8*, i64* }], align 8
  %_40 = alloca %"core::fmt::Arguments", align 8
  %_29 = alloca i64*, align 8
  %_28 = alloca [1 x { i8*, i64* }], align 8
  %_21 = alloca %"core::fmt::Arguments", align 8
  %fmt_result = alloca i8, align 1
  %_16 = alloca { i64, i64 }, align 8
  %size_limited_fmt = alloca %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>", align 8
  %d = alloca %DemangleStyle*, align 8
  %_4 = alloca i8, align 1
  %0 = alloca i8, align 1
  %1 = bitcast %Demangle* %self to %"core::option::Option<DemangleStyle>"*
  %2 = bitcast %"core::option::Option<DemangleStyle>"* %1 to i64*
  %3 = load i64, i64* %2, align 8, !range !25
  %4 = sub i64 %3, 2
  %5 = icmp eq i64 %4, 0
  %_3 = select i1 %5, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds %Demangle, %Demangle* %self, i32 0, i32 1
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 0
  %_7.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !6
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 1
  %_7.1 = load i64, i64* %8, align 8
; call core::fmt::Formatter::write_str
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 %_7.0, i64 %_7.1)
  br label %bb4

bb1:                                              ; preds = %start
  %9 = bitcast %Demangle* %self to %"core::option::Option<DemangleStyle>"*
  %10 = bitcast %"core::option::Option<DemangleStyle>"* %9 to %"core::option::Option<DemangleStyle>::Some"*
  %11 = bitcast %"core::option::Option<DemangleStyle>::Some"* %10 to %DemangleStyle*
  store %DemangleStyle* %11, %DemangleStyle** %d, align 8
; call core::fmt::Formatter::alternate
  %alternate = call zeroext i1 @_ZN4core3fmt9Formatter9alternate17h4cc3cea3d0be51c9E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb8

bb8:                                              ; preds = %bb1
  %12 = bitcast { i64, i64 }* %_16 to %"core::result::Result<usize, SizeLimitExhausted>::Ok"*
  %13 = getelementptr inbounds %"core::result::Result<usize, SizeLimitExhausted>::Ok", %"core::result::Result<usize, SizeLimitExhausted>::Ok"* %12, i32 0, i32 1
  store i64 1000000, i64* %13, align 8
  %14 = bitcast { i64, i64 }* %_16 to i64*
  store i64 0, i64* %14, align 8
  %15 = bitcast %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* %size_limited_fmt to { i64, i64 }*
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_16, i32 0, i32 0
  %17 = load i64, i64* %16, align 8, !range !5
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_16, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0
  store i64 %17, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1
  store i64 %19, i64* %21, align 8
  %22 = getelementptr inbounds %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>", %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* %size_limited_fmt, i32 0, i32 1
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %22, align 8
  br i1 %alternate, label %bb9, label %bb13

bb13:                                             ; preds = %bb8
  %23 = bitcast i64** %_48 to %DemangleStyle***
  store %DemangleStyle** %d, %DemangleStyle*** %23, align 8
  %_args1 = load i64*, i64** %_48, align 8, !nonnull !6
  %_52 = bitcast i64* %_args1 to %DemangleStyle**
; call core::fmt::ArgumentV1::new
  %24 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hdfd8cba830abf1e4E(%DemangleStyle** align 8 dereferenceable(8) %_52, i1 (%DemangleStyle**, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h580d49e7475ddc0eE")
  %_51.0 = extractvalue { i8*, i64* } %24, 0
  %_51.1 = extractvalue { i8*, i64* } %24, 1
  br label %bb14

bb9:                                              ; preds = %bb8
  %25 = bitcast i64** %_29 to %DemangleStyle***
  store %DemangleStyle** %d, %DemangleStyle*** %25, align 8
  %_args = load i64*, i64** %_29, align 8, !nonnull !6
  %_33 = bitcast i64* %_args to %DemangleStyle**
; call core::fmt::ArgumentV1::new
  %26 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hdfd8cba830abf1e4E(%DemangleStyle** align 8 dereferenceable(8) %_33, i1 (%DemangleStyle**, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h580d49e7475ddc0eE")
  %_32.0 = extractvalue { i8*, i64* } %26, 0
  %_32.1 = extractvalue { i8*, i64* } %26, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %27 = bitcast [1 x { i8*, i64* }]* %_28 to { i8*, i64* }*
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %27, i32 0, i32 0
  store i8* %_32.0, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %27, i32 0, i32 1
  store i64* %_32.1, i64** %29, align 8
  %_25.0 = bitcast [1 x { i8*, i64* }]* %_28 to [0 x { i8*, i64* }]*
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17h48b252f7f696ed0bE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_21, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc704 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_25.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc701 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb12

bb12:                                             ; preds = %bb11
; call core::fmt::Write::write_fmt
  %30 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h0274ba367c0b6dbbE(%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* align 8 dereferenceable(24) %size_limited_fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_21)
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %fmt_result, align 1
  br label %bb16

bb16:                                             ; preds = %bb15, %bb12
  %32 = bitcast %"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* %size_limited_fmt to { i64, i64 }*
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i32 0, i32 0
  %_55.0 = load i64, i64* %33, align 8, !range !5
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i32 0, i32 1
  %_55.1 = load i64, i64* %34, align 8
; call core::result::Result<T,E>::map
  %size_limit_result = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$3map17he02023fbd245ca93E"(i64 %_55.0, i64 %_55.1)
  br label %bb17

bb14:                                             ; preds = %bb13
  %35 = bitcast [1 x { i8*, i64* }]* %_47 to { i8*, i64* }*
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %35, i32 0, i32 0
  store i8* %_51.0, i8** %36, align 8
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %35, i32 0, i32 1
  store i64* %_51.1, i64** %37, align 8
  %_44.0 = bitcast [1 x { i8*, i64* }]* %_47 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hc4c9b02358f4c330E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_40, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc704 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_44.0, i64 1)
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::fmt::Write::write_fmt
  %38 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h0274ba367c0b6dbbE(%"SizeLimitedFmtAdapter<&mut core::fmt::Formatter>"* align 8 dereferenceable(24) %size_limited_fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_40)
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %fmt_result, align 1
  br label %bb16

bb17:                                             ; preds = %bb16
  %40 = load i8, i8* %fmt_result, align 1, !range !2
  %_58 = trunc i8 %40 to i1
  %41 = bitcast { i8, i8 }* %_57 to i8*
  %42 = zext i1 %_58 to i8
  store i8 %42, i8* %41, align 1
  %43 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_57, i32 0, i32 1
  %44 = zext i1 %size_limit_result to i8
  store i8 %44, i8* %43, align 1
  %45 = bitcast { i8, i8 }* %_57 to i8*
  %46 = load i8, i8* %45, align 1, !range !2
  %47 = trunc i8 %46 to i1
  %_61 = zext i1 %47 to i64
  %48 = icmp eq i64 %_61, 1
  br i1 %48, label %bb19, label %bb18

bb19:                                             ; preds = %bb17
  %49 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_57, i32 0, i32 1
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = trunc i8 %50 to i1
  %_60 = zext i1 %51 to i64
  %52 = icmp eq i64 %_60, 1
  br i1 %52, label %bb20, label %bb18

bb18:                                             ; preds = %bb19, %bb17
  %53 = load i8, i8* %fmt_result, align 1, !range !2
  %_72 = trunc i8 %53 to i1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %54 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_72)
  %55 = zext i1 %54 to i8
  store i8 %55, i8* %_71, align 1
  br label %bb25

bb20:                                             ; preds = %bb19
; call core::fmt::Formatter::write_str
  %_63 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [20 x i8] }>* @alloc1595 to [0 x i8]*), i64 20)
  br label %bb21

bb25:                                             ; preds = %bb18
  %56 = load i8, i8* %_71, align 1, !range !2
  %57 = trunc i8 %56 to i1
  %_73 = zext i1 %57 to i64
  switch i64 %_73, label %bb27 [
    i64 0, label %bb26
    i64 1, label %bb28
  ]

bb27:                                             ; preds = %bb25
  unreachable

bb26:                                             ; preds = %bb25
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hfd53e74d8a8638ccE"(i1 zeroext %size_limit_result, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1592 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1594 to %"core::panic::location::Location"*))
  br label %bb29

bb28:                                             ; preds = %bb25
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %58 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1591 to %"core::panic::location::Location"*))
  %59 = zext i1 %58 to i8
  store i8 %59, i8* %0, align 1
  br label %bb30

bb30:                                             ; preds = %bb29, %bb7, %bb24, %bb28
  %60 = load i8, i8* %0, align 1, !range !2
  %61 = trunc i8 %60 to i1
  ret i1 %61

bb29:                                             ; preds = %bb5, %bb22, %bb26
  %62 = getelementptr inbounds %Demangle, %Demangle* %self, i32 0, i32 2
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 0
  %_82.0 = load [0 x i8]*, [0 x i8]** %63, align 8, !nonnull !6
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 1
  %_82.1 = load i64, i64* %64, align 8
; call core::fmt::Formatter::write_str
  %65 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 %_82.0, i64 %_82.1)
  %66 = zext i1 %65 to i8
  store i8 %66, i8* %0, align 1
  br label %bb30

bb21:                                             ; preds = %bb20
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %67 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_63)
  %68 = zext i1 %67 to i8
  store i8 %68, i8* %_62, align 1
  br label %bb22

bb22:                                             ; preds = %bb21
  %69 = load i8, i8* %_62, align 1, !range !2
  %70 = trunc i8 %69 to i1
  %_67 = zext i1 %70 to i64
  switch i64 %_67, label %bb23 [
    i64 0, label %bb29
    i64 1, label %bb24
  ]

bb23:                                             ; preds = %bb22
  unreachable

bb24:                                             ; preds = %bb22
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %71 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1597 to %"core::panic::location::Location"*))
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %0, align 1
  br label %bb30

bb4:                                              ; preds = %bb3
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %73 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1a44e88b28c1af89E"(i1 zeroext %_5)
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %_4, align 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %75 = load i8, i8* %_4, align 1, !range !2
  %76 = trunc i8 %75 to i1
  %_8 = zext i1 %76 to i64
  switch i64 %_8, label %bb6 [
    i64 0, label %bb29
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb5
  unreachable

bb7:                                              ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %77 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6566001acf974e48E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1599 to %"core::panic::location::Location"*))
  %78 = zext i1 %77 to i8
  store i8 %78, i8* %0, align 1
  br label %bb30
}

; <rustc_demangle::Demangle as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h72f39bcf8f0017acE"(i64 %_2) unnamed_addr #1 {
start:
  ret void
}

; <rustc_demangle::Demangle as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN61_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Debug$GT$3fmt17he369cd6bd1efc623E"(%Demangle* align 8 dereferenceable(64) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
; call <rustc_demangle::Demangle as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN63_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17h5c6b923e8b2e2221E"(%Demangle* align 8 dereferenceable(64) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <rustc_demangle::v0::ParseError as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN71_$LT$rustc_demangle..v0..ParseError$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9fedc0a08922f032E"(i8* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %other) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = load i8, i8* %self, align 1, !range !2
  %2 = trunc i8 %1 to i1
  %__self_vi = zext i1 %2 to i64
  %3 = load i8, i8* %other, align 1, !range !2
  %4 = trunc i8 %3 to i1
  %__arg_1_vi = zext i1 %4 to i64
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, i8* %0, align 1, !range !2
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; <rustc_demangle::v0::ParseError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN67_$LT$rustc_demangle..v0..ParseError$u20$as$u20$core..fmt..Debug$GT$3fmt17h270de2adae7e9c2aE"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_3 = alloca i8*, align 8
  %0 = alloca i8, align 1
  store i8* %self, i8** %_3, align 8
  %1 = load i8*, i8** %_3, align 8, !nonnull !6
  %2 = load i8, i8* %1, align 1, !range !2
  %3 = trunc i8 %2 to i1
  %_5 = zext i1 %3 to i64
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %4 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1601 to [0 x i8]*), i64 7)
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %6 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [15 x i8] }>* @alloc1600 to [0 x i8]*), i64 15)
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %8 = load i8, i8* %0, align 1, !range !2
  %9 = trunc i8 %8 to i1
  ret i1 %9
}

; <rustc_demangle::TryDemangleError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN69_$LT$rustc_demangle..TryDemangleError$u20$as$u20$core..fmt..Debug$GT$3fmt17h5642aa3b87ee59bfE"(%TryDemangleError* nonnull align 1 %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %_16 = alloca {}*, align 8
  %_5 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast %TryDemangleError* %self to {}*
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [16 x i8] }>* @alloc1602 to [0 x i8]*), i64 16)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_5 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store {}* %__self_0_0, {}** %_16, align 8
  %_13.0 = bitcast {}** %_16 to {}*
; call core::fmt::builders::DebugStruct::field
  %_9 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1603 to [0 x i8]*), i64 5, {}* nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.c to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %4
}

; <rustc_demangle::SizeLimitExhausted as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN71_$LT$rustc_demangle..SizeLimitExhausted$u20$as$u20$core..fmt..Debug$GT$3fmt17hd6a254d6850695d3E"(%SizeLimitExhausted* nonnull align 1 %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
; call core::fmt::Formatter::write_str
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [18 x i8] }>* @alloc1607 to [0 x i8]*), i64 18)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; Function Attrs: nonlazybind
declare i32 @rust_eh_personality(...) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #7

; <str as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17hec7dec34a2bb4d4fE"([0 x i8]* nonnull align 1, i64, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h4fb653153270e40aE"([0 x i8]* nonnull align 1, i64, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::Formatter::pad
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter3pad17hbc77db69b6df6cc2E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #0

; core::fmt::Formatter::debug_list
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN4core3fmt9Formatter10debug_list17hea40b725812e3b83E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::builders::DebugList::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17hf48e4debbea8211aE(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16)) unnamed_addr #0

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17hc1ea778f34506390E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17h302b98f72f36962dE"(i8* align 1 dereferenceable(1), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9143b4968b3afd78E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17hae1e0652414f7084E"(i8* align 1 dereferenceable(1), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17ha60d145af3203aeeE"(i8* align 1 dereferenceable(1), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h15400e4abae8bbbeE"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17ha63680436de3943cE"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; core::fmt::write
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt5write17h0200d27bf417ad61E({}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #0

; core::fmt::builders::DebugList::entry
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(16) %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17hfd5de0649c122df2E(%"core::fmt::builders::DebugList"* align 8 dereferenceable(16), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #0

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.uadd.sat.i32(i32, i32) #9

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #10

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #9

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #9

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.usub.sat.i64(i64, i64) #9

; core::num::<impl core::str::traits::FromStr for usize>::from_str
; Function Attrs: nonlazybind uwtable
declare i128 @"_ZN4core3num62_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$usize$GT$8from_str17hb268c63d5f3c609dE"([0 x i8]* nonnull align 1, i64) unnamed_addr #0

; core::str::slice_error_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core3str16slice_error_fail17ha499ccf9a8f75ce3E([0 x i8]* nonnull align 1, i64, i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; core::str::traits::str_index_overflow_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core3str6traits23str_index_overflow_fail17h7d1701bcb00132c1E(%"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17hef35279af1b2dff0E"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; core::unicode::unicode_data::cc::lookup
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core7unicode12unicode_data2cc6lookup17h5b745ba203a66c1fE(i32) unnamed_addr #0

; core::unicode::printable::is_printable
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core7unicode9printable12is_printable17h838e0e5b00b65dc0E(i32) unnamed_addr #0

; core::unicode::unicode_data::grapheme_extend::lookup
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core7unicode12unicode_data15grapheme_extend6lookup17hd79b3282daeb95c7E(i32) unnamed_addr #0

; core::slice::memchr::memchr_general_case
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17h3d12d97f424848f5E(i8, [0 x i8]* nonnull align 1, i64) unnamed_addr #0

; <core::fmt::Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17ha6e04a2ac8dde238E"(%"core::fmt::Error"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #6

; <core::num::error::ParseIntError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN68_$LT$core..num..error..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17ha670dd37272806deE"(i8* align 1 dereferenceable(1), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::panicking::assert_failed_inner
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN4core9panicking19assert_failed_inner17h90ea89642d218837E(i8, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #11

; <core::fmt::Formatter as core::fmt::Write>::write_char
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h6e3d947244c54914E"(%"core::fmt::Formatter"* align 8 dereferenceable(64), i32) unnamed_addr #0

; <core::fmt::Formatter as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17ha58741d95765acd0E"(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #0

; core::str::pattern::StrSearcher::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str7pattern11StrSearcher3new17h95d68a0534dab867E(%"core::str::pattern::StrSearcher"* noalias nocapture sret(%"core::str::pattern::StrSearcher") dereferenceable(104), [0 x i8]* nonnull align 1, i64, [0 x i8]* nonnull align 1, i64) unnamed_addr #0

; Function Attrs: nonlazybind uwtable
declare i32 @memcmp(i8*, i8*, i64) unnamed_addr #0

; core::fmt::Formatter::alternate
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9alternate17h4cc3cea3d0be51c9E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::Formatter::write_str
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #0

; core::num::<impl u32>::from_str_radix
; Function Attrs: nonlazybind uwtable
declare i64 @"_ZN4core3num21_$LT$impl$u20$u32$GT$14from_str_radix17hdf83223652bb2387E"([0 x i8]* nonnull align 1, i64, i32) unnamed_addr #0

; <char as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h011d980131b3c87bE"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i8, i1 } @llvm.usub.with.overflow.i8(i8, i8) #9

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i8, i1 } @llvm.uadd.with.overflow.i8(i8, i8) #9

; core::str::converts::from_utf8
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str8converts9from_utf817h787de7ac1138d6f8E(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture sret(%"core::result::Result<&str, core::str::error::Utf8Error>") dereferenceable(24), [0 x i8]* nonnull align 1, i64) unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #9

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.usub.with.overflow.i32(i32, i32) #9

; core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17hc0f7594e99de2828E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
declare i32 @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h27e5bcc26268a1b2E"(%"core::char::EscapeDebug"* align 8 dereferenceable(24)) unnamed_addr #0

; core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17h8c1e5a0343078d18E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::Formatter::debug_struct
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #0

; core::fmt::builders::DebugStruct::field
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16), [0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #0

; core::fmt::builders::DebugStruct::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16)) unnamed_addr #0

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #7

attributes #0 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { inlinehint noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { nonlazybind "target-cpu"="x86-64" }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #7 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #8 = { argmemonly nofree nounwind willreturn writeonly }
attributes #9 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #10 = { nofree nosync nounwind readnone willreturn }
attributes #11 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #12 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 7, !"PIC Level", i32 2}
!1 = !{i32 2, !"RtLibUseGOT", i32 1}
!2 = !{i8 0, i8 2}
!3 = !{i32 0, i32 1114114}
!4 = !{i32 0, i32 1114113}
!5 = !{i64 0, i64 2}
!6 = !{}
!7 = !{i8 0, i8 3}
!8 = !{i8 -1, i8 2}
!9 = !{i32 0, i32 1114112}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h6c303e0673ab36ceE: argument 0"}
!12 = distinct !{!12, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h6c303e0673ab36ceE"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h77c6e2ed1cb973f4E: argument 0"}
!15 = distinct !{!15, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h77c6e2ed1cb973f4E"}
!16 = !{!17}
!17 = distinct !{!17, !15, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h77c6e2ed1cb973f4E: %self"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h14efff891523232bE: argument 0"}
!20 = distinct !{!20, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h14efff891523232bE"}
!21 = !{!22}
!22 = distinct !{!22, !20, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h14efff891523232bE: %slot"}
!23 = !{!19, !22}
!24 = !{i32 0, i32 2}
!25 = !{i64 0, i64 3}
!26 = !{i8 0, i8 5}
