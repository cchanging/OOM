; ModuleID = 'time.42225855-cgu.0'
source_filename = "time.42225855-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"core::iter::adapters::take::Take<core::str::iter::CharIndices>" = type { %"core::str::iter::CharIndices", i64 }
%"core::str::iter::CharIndices" = type { i64, { i8*, i8* } }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"alloc::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"core::result::Result<(), alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::alloc::AllocError" = type {}
%"core::result::Result<(), core::fmt::Error>::Err" = type { [1 x i8], %"core::fmt::Error" }
%"core::fmt::Error" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<Tm, ParseError>" = type { i32, [11 x i32] }
%ParseError = type { i32, [2 x i32] }
%"core::result::Result<core::convert::Infallible, ParseError>::Err" = type { %ParseError }
%"core::result::Result<Tm, ParseError>::Err" = type { [1 x i32], %ParseError }
%"[closure@std::panicking::begin_panic<&str>::{closure#0}]" = type { { [0 x i8]*, i64 }, %"core::panic::location::Location"* }
%"std::io::error::Error" = type { %"std::io::error::Repr" }
%"std::io::error::Repr" = type { i8, [15 x i8] }
%"std::io::error::Repr::Os" = type { [1 x i32], i32 }
%Fmt = type { i64, [2 x i64] }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%Tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"alloc::string::String" = type { %"alloc::vec::Vec<u8>" }
%TmFmt = type { %Tm*, %Fmt }
%"libc::unix::linux_like::tm" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i64, i8* }
%"core::fmt::Opaque" = type {}
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"core::fmt::rt::v1::Argument" = type { i64, %"core::fmt::rt::v1::FormatSpec" }
%"core::fmt::rt::v1::FormatSpec" = type { { i64, i64 }, { i64, i64 }, i32, i32, i8, [7 x i8] }
%"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>" = type { [7 x i64] }
%"core::option::Option<i64>::Some" = type { [1 x i64], i64 }
%"core::option::Option<u64>::Some" = type { [1 x i64], i64 }
%"core::option::Option<usize>::Some" = type { [1 x i64], i64 }
%"std::io::error::Repr::Custom" = type { [1 x i64], %"std::io::error::Custom"* }
%"std::io::error::Custom" = type { { {}*, [3 x i64]* }, i8, [7 x i8] }
%"alloc::alloc::Global" = type {}
%"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>" = type { [0 x i8] }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"core::option::Option<u32>::Some" = type { [1 x i32], i32 }
%"core::option::Option<(usize, usize)>" = type { i64, [2 x i64] }
%"core::str::pattern::StrSearcher" = type { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, %"core::str::pattern::StrSearcherImpl" }
%"core::str::pattern::StrSearcherImpl" = type { i64, [8 x i64] }
%"core::option::Option<(usize, usize)>::Some" = type { [1 x i64], { i64, i64 } }
%"core::str::pattern::TwoWaySearcher" = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%"core::str::pattern::SearchStep" = type { i64, [2 x i64] }
%"core::str::pattern::SearchStep::Reject" = type { [1 x i64], i64, i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue" = type { [1 x i64], i64 }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, core::alloc::layout::LayoutError>::Err" = type { [8 x i8], %"core::alloc::layout::LayoutError" }
%"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::result::Result<alloc::string::String, ParseError>" = type { i32, [7 x i32] }
%"core::result::Result<TmFmt, ParseError>" = type { i32, [9 x i32] }
%"core::result::Result<TmFmt, ParseError>::Ok" = type { [1 x i64], %TmFmt }
%"core::result::Result<TmFmt, ParseError>::Err" = type { [1 x i32], %ParseError }
%"core::result::Result<alloc::string::String, ParseError>::Err" = type { [1 x i32], %ParseError }
%"core::result::Result<alloc::string::String, ParseError>::Ok" = type { [1 x i64], %"alloc::string::String" }
%"core::result::Result<(), ParseError>" = type { i32, [2 x i32] }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok" = type { [8 x i8], {} }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<(), ParseError>::Err" = type { %ParseError }
%"core::option::Option<core::fmt::Arguments>" = type { {}*, [5 x i64] }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { {}*, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>" = type { i32, [2 x i32] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>::Continue" = type { {} }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>::Break" = type { %"core::result::Result<core::convert::Infallible, ParseError>::Err" }
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break" = type { %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue" = type { [8 x i8], {} }
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break" = type { [8 x i8], %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" }
%"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err" = type { %"core::fmt::Error" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Continue" = type { [1 x i8], {} }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Break" = type { [1 x i8], %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err" }
%"core::str::pattern::StrSearcherImpl::Empty" = type { [1 x i64], %"core::str::pattern::EmptyNeedle" }
%"core::str::pattern::EmptyNeedle" = type { i64, i64, i8, i8, i8, [5 x i8] }
%"core::str::pattern::StrSearcherImpl::TwoWay" = type { [1 x i64], %"core::str::pattern::TwoWaySearcher" }
%"core::str::pattern::SearchStep::Match" = type { [1 x i64], i64, i64 }
%"Fmt::Str" = type { [1 x i64], { [0 x i8]*, i64 } }
%"core::option::Option<duration::Duration>" = type { i64, [2 x i64] }
%"core::option::Option<duration::Duration>::Some" = type { [1 x i64], { i64, i32 } }
%"core::result::Result<duration::Duration, duration::OutOfRangeError>" = type { i64, [2 x i64] }
%"core::result::Result<duration::Duration, duration::OutOfRangeError>::Ok" = type { [1 x i64], { i64, i32 } }
%"core::result::Result<core::time::Duration, duration::OutOfRangeError>" = type { i64, [2 x i64] }
%"core::result::Result<core::time::Duration, duration::OutOfRangeError>::Ok" = type { [1 x i64], { i64, i32 } }
%"duration::OutOfRangeError" = type { {} }
%"core::result::Result<Tm, ParseError>::Ok" = type { [1 x i32], %Tm }
%"ParseError::InvalidFormatSpecifier" = type { [1 x i32], i32 }
%"core::option::Option<i32>::Some" = type { [1 x i32], i32 }
%"ParseError::UnexpectedCharacter" = type { [1 x i32], i32, i32 }
%"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>" = type { %"libc::unix::linux_like::tm" }
%"core::fmt::builders::DebugStruct" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"core::fmt::builders::DebugTuple" = type { %"core::fmt::Formatter"*, i64, i8, i8, [6 x i8] }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, [0 x i8] }> <{ i8* bitcast (void ({ i8*, i64 }*)* @"_ZN4core3ptr77drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$$RF$str$GT$$GT$17hdc1bdfc1a3753d44E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast ({ {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h5ab066ef4a5b1fd1E" to i8*), i8* bitcast ({ {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17he5b3a48b188bb530E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1311 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"()" }>, align 1
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }> <{ i8* bitcast (void (%"alloc::string::String"*)* @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hb92f10c4ab3faffeE" to i8*), [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"alloc::string::String"*, [0 x i8]*, i64)* @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h85eefd4dbd879a1cE" to i8*), i8* bitcast (i1 (%"alloc::string::String"*, i32)* @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h974c18d4bb978d77E" to i8*), i8* bitcast (i1 (%"alloc::string::String"*, %"core::fmt::Arguments"*)* @_ZN4core3fmt5Write9write_fmt17he84373d6b635f799E to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1317 = private unnamed_addr constant <{ [55 x i8] }> <{ [55 x i8] c"a Display implementation returned an error unexpectedly" }>, align 1
@alloc1318 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/alloc/src/string.rs" }>, align 1
@alloc1319 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1318, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00_\09\00\00\0E\00\00\00" }>, align 8
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }> <{ i8* bitcast (void (%"alloc::string::String"**)* @"_ZN4core3ptr54drop_in_place$LT$$RF$mut$u20$alloc..string..String$GT$17h7863589460edc7b6E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"alloc::string::String"**, [0 x i8]*, i64)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h6543d32f09a2df1fE" to i8*), i8* bitcast (i1 (%"alloc::string::String"**, i32)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h777ad6375bd9f076E" to i8*), i8* bitcast (i1 (%"alloc::string::String"**, %"core::fmt::Arguments"*)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h859a29110b41c985E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1325 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc1326 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/fmt/mod.rs" }>, align 1
@alloc1327 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1326, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00k\01\00\00\0D\00\00\00" }>, align 8
@alloc1328 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/ptr/mod.rs" }>, align 1
@alloc1329 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1328, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\BE\02\00\00\0D\00\00\00" }>, align 8
@alloc1334 = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/str/validations.rs" }>, align 1
@alloc1331 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1334, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\001\00\00\00$\00\00\00" }>, align 8
@alloc1333 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1334, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\008\00\00\00(\00\00\00" }>, align 8
@alloc1335 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1334, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00@\00\00\00,\00\00\00" }>, align 8
@alloc1381 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/str/pattern.rs" }>, align 1
@alloc1337 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1381, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8C\05\00\00\14\00\00\00" }>, align 8
@alloc1339 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1381, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8C\05\00\00!\00\00\00" }>, align 8
@alloc1341 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1381, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\98\05\00\00\14\00\00\00" }>, align 8
@alloc1343 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1381, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\98\05\00\00!\00\00\00" }>, align 8
@alloc1348 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/char/methods.rs" }>, align 1
@alloc1345 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc1348, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00{\06\00\00\16\00\00\00" }>, align 8
@alloc1347 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc1348, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\95\06\00\00\0A\00\00\00" }>, align 8
@alloc1193 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc1195 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc1196 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc1194 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc1193, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc1195, i32 0, i32 0, i32 0), [8 x i8] c"\13\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc1196, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc1349 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc1348, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\8E\06\00\00\0E\00\00\00" }>, align 8
@alloc1350 = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"overflow in Duration::new" }>, align 1
@alloc1351 = private unnamed_addr constant <{ [72 x i8] }> <{ [72 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/time.rs" }>, align 1
@alloc1352 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [72 x i8] }>, <{ [72 x i8] }>* @alloc1351, i32 0, i32 0, i32 0), [16 x i8] c"H\00\00\00\00\00\00\00\BC\00\00\00\15\00\00\00" }>, align 8
@alloc1353 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/alloc/layout.rs" }>, align 1
@alloc1354 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc1353, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\98\01\00\00\1A\00\00\00" }>, align 8
@alloc1355 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/core/src/slice/mod.rs" }>, align 1
@alloc1356 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc1355, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00a\08\00\00'\00\00\00" }>, align 8
@alloc1358 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"core::fmt::Error"*)* @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17hdee728ac55e77879E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::fmt::Error"*, %"core::fmt::Formatter"*)* @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17ha6e04a2ac8dde238E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.4 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i32**)* @"_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h773e50680ccef9dfE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i32**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf91179c17dc5fd97E" to i8*), [0 x i8] zeroinitializer }>, align 8
@0 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc1137 = private unnamed_addr constant <{ [0 x i8] }> zeroinitializer, align 1
@alloc1369 = private unnamed_addr constant <{ [74 x i8] }> <{ [74 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/alloc/src/alloc.rs" }>, align 1
@alloc1366 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc1369, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\AA\00\00\00\1B\00\00\00" }>, align 8
@alloc1368 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc1369, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\CA\00\00\00\1B\00\00\00" }>, align 8
@alloc1370 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc1369, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\D7\00\00\00\1F\00\00\00" }>, align 8
@alloc1379 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/rustc/34926f0a1681458588a2d4240c0715ef9eff7d35/library/alloc/src/raw_vec.rs" }>, align 1
@alloc1372 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1379, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\C8\01\00\00\16\00\00\00" }>, align 8
@alloc1374 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1379, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\CA\01\00\00\05\00\00\00" }>, align 8
@alloc1376 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1379, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\87\01\00\00\1C\00\00\00" }>, align 8
@alloc1378 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1379, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\91\01\00\00\13\00\00\00" }>, align 8
@alloc1380 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc1379, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00m\01\00\00\09\00\00\00" }>, align 8
@str.5 = internal constant [25 x i8] c"attempt to divide by zero"
@alloc1382 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1381, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\1C\04\00\00\17\00\00\00" }>, align 8
@vtable.6 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ [0 x i8]*, i64 }*)* @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h74649e2e909547afE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i64 ({ [0 x i8]*, i64 }*)* @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h68ffa4be62a13f4aE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1386 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"%Y-%m-%dT%H:%M:%S" }>, align 1
@alloc1606 = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs" }>, align 1
@alloc1388 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00#\00\00\00!\00\00\00" }>, align 8
@str.7 = internal constant [31 x i8] c"attempt to divide with overflow"
@alloc1390 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00$\00\00\00\1D\00\00\00" }>, align 8
@alloc1392 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00%\00\00\00\1A\00\00\00" }>, align 8
@str.8 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc1394 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00%\00\00\00\15\00\00\00" }>, align 8
@str.9 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc1498 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c":" }>, align 1
@alloc159 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc1137, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc1137, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc1137, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc1498, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc191 = private unnamed_addr constant <{ [224 x i8] }> <{ [224 x i8] c}>, align 8
@alloc1395 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"%Y-%m-%dT%H:%M:%SZ" }>, align 1
@alloc1397 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\10\00\00\00\19\00\00\00" }>, align 8
@alloc1399 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\0E\00\00\006\00\00\00" }>, align 8
@alloc1401 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\0E\00\00\00\19\00\00\00" }>, align 8
@alloc1403 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00.\00\00\00\06\00\00\00" }>, align 8
@str.a = internal constant [48 x i8] c"attempt to calculate the remainder with overflow"
@alloc1405 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00.\00\00\00\1A\00\00\00" }>, align 8
@alloc1407 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00.\00\00\00/\00\00\00" }>, align 8
@alloc1409 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00C\00\00\00\0D\00\00\00" }>, align 8
@str.b = internal constant [28 x i8] c"attempt to add with overflow"
@alloc1411 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00C\00\00\00\0C\00\00\00" }>, align 8
@alloc1413 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00C\00\00\00\05\00\00\00" }>, align 8
@alloc1415 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00H\00\00\00\14\00\00\00" }>, align 8
@alloc1417 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00M\00\00\00\09\00\00\00" }>, align 8
@alloc1419 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00N\00\00\00\1E\00\00\00" }>, align 8
@alloc1421 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00P\00\00\00\1F\00\00\00" }>, align 8
@alloc1423 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00T\00\00\00\0D\00\00\00" }>, align 8
@alloc1135 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc1137, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer }>, align 8
@alloc1425 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\\\00\00\00%\00\00\00" }>, align 8
@alloc285 = private unnamed_addr constant <{ [56 x i8] }> <{ [56 x i8] c"\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00 \00\00\00\08\00\00\00\03\00\00\00\00\00\00\00" }>, align 8
@alloc1427 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00[\00\00\00&\00\00\00" }>, align 8
@alloc1429 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00[\00\00\00%\00\00\00" }>, align 8
@alloc1596 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc1432 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\FE\00\00\00\10\00\00\00" }>, align 8
@alloc1433 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"%" }>, align 1
@alloc1435 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\F7\00\00\00\19\00\00\00" }>, align 8
@alloc1437 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\F8\00\00\00\15\00\00\00" }>, align 8
@alloc1439 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\F9\00\00\00\12\00\00\00" }>, align 8
@alloc1441 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\F9\00\00\00\0D\00\00\00" }>, align 8
@alloc507 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc1137, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc1137, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc1137, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer }>, align 8
@alloc529 = private unnamed_addr constant <{ [168 x i8] }> <{ [168 x i8] c}>, align 8
@alloc1728 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"UTC" }>, align 1
@alloc1445 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\F2\00\00\00%\00\00\00" }>, align 8
@alloc1447 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\F1\00\00\00\22\00\00\00" }>, align 8
@alloc1449 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\EE\00\00\001\00\00\00" }>, align 8
@alloc1451 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\EE\00\00\000\00\00\00" }>, align 8
@alloc1453 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\EE\00\00\00#\00\00\00" }>, align 8
@alloc1455 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\EE\00\00\00\22\00\00\00" }>, align 8
@alloc1457 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\E7\00\00\00\0D\00\00\00" }>, align 8
@alloc1677 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"-" }>, align 1
@alloc1460 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\E8\00\00\00\0D\00\00\00" }>, align 8
@alloc1462 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\E9\00\00\00\0D\00\00\00" }>, align 8
@alloc1465 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\EA\00\00\00\0D\00\00\00" }>, align 8
@alloc1467 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\E0\00\00\00&\00\00\00" }>, align 8
@alloc1469 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\E0\00\00\00%\00\00\00" }>, align 8
@alloc1470 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\09" }>, align 1
@alloc1472 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\D9\00\00\00\0D\00\00\00" }>, align 8
@alloc1475 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\DA\00\00\00\0D\00\00\00" }>, align 8
@alloc1477 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\DB\00\00\00\0D\00\00\00" }>, align 8
@alloc1480 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\DC\00\00\00\0D\00\00\00" }>, align 8
@alloc1482 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\CE\00\00\00\0D\00\00\00" }>, align 8
@alloc1485 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\CF\00\00\00\0D\00\00\00" }>, align 8
@alloc1487 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\D0\00\00\00\0D\00\00\00" }>, align 8
@alloc1490 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\D1\00\00\00\0D\00\00\00" }>, align 8
@alloc1492 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\D2\00\00\00\0D\00\00\00" }>, align 8
@alloc1749 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c" " }>, align 1
@alloc1495 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\D3\00\00\00\0D\00\00\00" }>, align 8
@alloc1497 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\C9\00\00\00\0D\00\00\00" }>, align 8
@alloc1500 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\CA\00\00\00\0D\00\00\00" }>, align 8
@alloc916 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"AM" }>, align 1
@alloc918 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"PM" }>, align 1
@alloc907 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"am" }>, align 1
@alloc909 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"pm" }>, align 1
@alloc1505 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\0A" }>, align 1
@alloc1507 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\C4\00\00\00%\00\00\00" }>, align 8
@alloc1509 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\C0\00\00\00\19\00\00\00" }>, align 8
@alloc319 = private unnamed_addr constant <{ [56 x i8] }> <{ [56 x i8] c"\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\03\00\00\00\00\00\00\00" }>, align 8
@alloc1511 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\BB\00\00\00%\00\00\00" }>, align 8
@alloc367 = private unnamed_addr constant <{ [56 x i8] }> <{ [56 x i8] c"\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00 \00\00\00\08\00\00\00\03\00\00\00\00\00\00\00" }>, align 8
@alloc1513 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\B8\00\00\00\19\00\00\00" }>, align 8
@alloc1515 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\AC\00\00\00\0D\00\00\00" }>, align 8
@alloc1518 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\AD\00\00\00\0D\00\00\00" }>, align 8
@alloc1520 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\AE\00\00\00\0D\00\00\00" }>, align 8
@alloc1523 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\AF\00\00\00\0D\00\00\00" }>, align 8
@alloc330 = private unnamed_addr constant <{ [56 x i8] }> <{ [56 x i8] c"\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\09\00\00\00\00\00\00\00 \00\00\00\08\00\00\00\03\00\00\00\00\00\00\00" }>, align 8
@alloc1525 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\A2\00\00\00\0D\00\00\00" }>, align 8
@alloc1531 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"/" }>, align 1
@alloc1528 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\A3\00\00\00\0D\00\00\00" }>, align 8
@alloc1530 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\A4\00\00\00\0D\00\00\00" }>, align 8
@alloc1533 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\A5\00\00\00\0D\00\00\00" }>, align 8
@alloc1535 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\97\00\00\00\0D\00\00\00" }>, align 8
@alloc1538 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\98\00\00\00\0D\00\00\00" }>, align 8
@alloc1540 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\99\00\00\00\0D\00\00\00" }>, align 8
@alloc1543 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\9A\00\00\00\0D\00\00\00" }>, align 8
@alloc1545 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\9B\00\00\00\0D\00\00\00" }>, align 8
@alloc1548 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\9C\00\00\00\0D\00\00\00" }>, align 8
@alloc1550 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\9D\00\00\00\0D\00\00\00" }>, align 8
@alloc1553 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\9E\00\00\00\0D\00\00\00" }>, align 8
@alloc1555 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\95\00\00\00%\00\00\00" }>, align 8
@alloc1558 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\93\00\00\00\13\00\00\00" }>, align 8
@alloc845 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Dec" }>, align 1
@alloc843 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Nov" }>, align 1
@alloc841 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Oct" }>, align 1
@alloc839 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Sep" }>, align 1
@alloc837 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Aug" }>, align 1
@alloc835 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Jul" }>, align 1
@alloc833 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Jun" }>, align 1
@alloc802 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"May" }>, align 1
@alloc829 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Apr" }>, align 1
@alloc827 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Mar" }>, align 1
@alloc825 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Feb" }>, align 1
@alloc823 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Jan" }>, align 1
@alloc1573 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\84\00\00\00\12\00\00\00" }>, align 8
@alloc816 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"December" }>, align 1
@alloc814 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"November" }>, align 1
@alloc812 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"October" }>, align 1
@alloc810 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"September" }>, align 1
@alloc808 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"August" }>, align 1
@alloc806 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"July" }>, align 1
@alloc804 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"June" }>, align 1
@alloc800 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"April" }>, align 1
@alloc798 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"March" }>, align 1
@alloc796 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"February" }>, align 1
@alloc794 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"January" }>, align 1
@alloc1588 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00u\00\00\00\12\00\00\00" }>, align 8
@alloc787 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Sat" }>, align 1
@alloc785 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Fri" }>, align 1
@alloc783 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Thu" }>, align 1
@alloc781 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Wed" }>, align 1
@alloc779 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Tue" }>, align 1
@alloc777 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Mon" }>, align 1
@alloc775 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Sun" }>, align 1
@alloc1598 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00k\00\00\00\12\00\00\00" }>, align 8
@alloc768 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"Saturday" }>, align 1
@alloc766 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Friday" }>, align 1
@alloc764 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"Thursday" }>, align 1
@alloc762 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"Wednesday" }>, align 1
@alloc760 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Tuesday" }>, align 1
@alloc758 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Monday" }>, align 1
@alloc756 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"Sunday" }>, align 1
@alloc1607 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc1606, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00\03\01\00\00\0F\00\00\00" }>, align 8
@str.c = internal constant [31 x i8] c"attempt to negate with overflow"
@alloc623 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\08\AC\1CZd;\DF\FF\00\B0q\0B\00\00\00\00" }>, align 8
@alloc635 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\F7S\E3\A5\9B\C4 \00\C0\D7\190\00\00\00\00" }>, align 8
@alloc1608 = private unnamed_addr constant <{ [31 x i8] }> <{ [31 x i8] c"Duration::seconds out of bounds" }>, align 1
@alloc1714 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs" }>, align 1
@alloc1610 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00j\00\00\00\0D\00\00\00" }>, align 8
@alloc1612 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\96\00\00\00\09\00\00\00" }>, align 8
@alloc1614 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\A9\00\00\00\0D\00\00\00" }>, align 8
@alloc1616 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\B4\00\00\00\0D\00\00\00" }>, align 8
@alloc1618 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\BE\00\00\00\19\00\00\00" }>, align 8
@alloc1620 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\BF\00\00\00\1A\00\00\00" }>, align 8
@alloc1622 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\C0\00\00\00\09\00\00\00" }>, align 8
@alloc1624 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\C7\00\00\00\1A\00\00\00" }>, align 8
@alloc1626 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\D6\00\00\00\19\00\00\00" }>, align 8
@alloc1628 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\D8\00\00\00\0D\00\00\00" }>, align 8
@alloc1630 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\E4\00\00\00\19\00\00\00" }>, align 8
@alloc1632 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\E6\00\00\00\0D\00\00\00" }>, align 8
@alloc1634 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\000\01\00\00\1E\00\00\00" }>, align 8
@alloc1636 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\000\01\00\005\00\00\00" }>, align 8
@alloc1638 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00.\01\00\00\1E\00\00\00" }>, align 8
@alloc1640 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\009\01\00\00\18\00\00\00" }>, align 8
@alloc1642 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00:\01\00\00\19\00\00\00" }>, align 8
@alloc1644 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00<\01\00\00\0D\00\00\00" }>, align 8
@alloc1646 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00=\01\00\00\0D\00\00\00" }>, align 8
@alloc1648 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00G\01\00\00\18\00\00\00" }>, align 8
@alloc1650 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00H\01\00\00\19\00\00\00" }>, align 8
@alloc1652 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00J\01\00\00\0D\00\00\00" }>, align 8
@alloc1654 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00K\01\00\00\0D\00\00\00" }>, align 8
@alloc1656 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00V\01\00\00\1B\00\00\00" }>, align 8
@alloc1658 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00X\01\00\00\14\00\00\00" }>, align 8
@alloc1660 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00a\01\00\00\18\00\00\00" }>, align 8
@alloc1662 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00b\01\00\00!\00\00\00" }>, align 8
@alloc1664 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00b\01\00\00\15\00\00\00" }>, align 8
@alloc1666 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00c\01\00\00\1B\00\00\00" }>, align 8
@alloc1668 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00d\01\00\00\19\00\00\00" }>, align 8
@alloc1670 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00f\01\00\00\0D\00\00\00" }>, align 8
@alloc1672 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00g\01\00\00\0D\00\00\00" }>, align 8
@alloc1674 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00j\01\00\00\0D\00\00\00" }>, align 8
@alloc1676 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00k\01\00\00\0D\00\00\00" }>, align 8
@alloc1680 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00w\01\00\00\14\00\00\00" }>, align 8
@alloc1682 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00x\01\00\00\1F\00\00\00" }>, align 8
@alloc1684 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00x\01\00\00\14\00\00\00" }>, align 8
@alloc668 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"P" }>, align 1
@alloc667 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc1137, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc668, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc1686 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00|\01\00\00\09\00\00\00" }>, align 8
@alloc674 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"D" }>, align 1
@alloc673 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc1137, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc674, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc1688 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\7F\01\00\00\0D\00\00\00" }>, align 8
@alloc1690 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\84\01\00\00\17\00\00\00" }>, align 8
@alloc1692 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\86\01\00\00\17\00\00\00" }>, align 8
@alloc677 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"T" }>, align 1
@alloc684 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"." }>, align 1
@alloc679 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"S" }>, align 1
@alloc683 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc677, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc684, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc737 = private unnamed_addr constant <{ [112 x i8] }> <{ [112 x i8] c"\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\09\00\00\00\00\00\00\00 \00\00\00\08\00\00\00\03\00\00\00\00\00\00\00" }>, align 8
@alloc1694 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\89\01\00\00\11\00\00\00" }>, align 8
@alloc1696 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\87\01\00\00/\00\00\00" }>, align 8
@alloc718 = private unnamed_addr constant <{ [112 x i8] }> <{ [112 x i8] c"\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00 \00\00\00\08\00\00\00\03\00\00\00\00\00\00\00" }>, align 8
@alloc1698 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\87\01\00\00\11\00\00\00" }>, align 8
@alloc1700 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\85\01\00\00/\00\00\00" }>, align 8
@alloc699 = private unnamed_addr constant <{ [112 x i8] }> <{ [112 x i8] c"\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00 \00\00\00\08\00\00\00\03\00\00\00\00\00\00\00" }>, align 8
@alloc1702 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\85\01\00\00\11\00\00\00" }>, align 8
@alloc678 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc677, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc1704 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\83\01\00\00\11\00\00\00" }>, align 8
@alloc1705 = private unnamed_addr constant <{ [57 x i8] }> <{ [57 x i8] c"Source duration value is out of range for the target type" }>, align 1
@alloc1707 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\B0\01\00\00+\00\00\00" }>, align 8
@alloc1709 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\B7\01\00\00\0B\00\00\00" }>, align 8
@str.d = internal constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero"
@alloc1711 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\B9\01\00\00&\00\00\00" }>, align 8
@alloc1713 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\C0\01\00\00\06\00\00\00" }>, align 8
@alloc1715 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [84 x i8] }>, <{ [84 x i8] }>* @alloc1714, i32 0, i32 0, i32 0), [16 x i8] c"T\00\00\00\00\00\00\00\C0\01\00\00\14\00\00\00" }>, align 8
@alloc1776 = private unnamed_addr constant <{ [81 x i8] }> <{ [81 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs" }>, align 1
@alloc1717 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\1A\00\00\00\0D\00\00\00" }>, align 8
@alloc1719 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\17\00\00\00\11\00\00\00" }>, align 8
@alloc1721 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\22\01\00\00(\00\00\00" }>, align 8
@alloc1723 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\22\01\00\00:\00\00\00" }>, align 8
@alloc1725 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\22\01\00\00'\00\00\00" }>, align 8
@alloc1727 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\22\01\00\00 \00\00\00" }>, align 8
@alloc1729 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"GMT" }>, align 1
@alloc1731 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\00\01\00\00\1F\00\00\00" }>, align 8
@alloc1734 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\ED\00\00\00+\00\00\00" }>, align 8
@alloc920 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc916, i32 0, i32 0, i32 0), [16 x i8] c"\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc918, i32 0, i32 0, i32 0), [16 x i8] c"\02\00\00\00\00\00\00\00\0C\00\00\00\00\00\00\00" }>, align 8
@alloc1736 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\AE\00\00\00\1A\00\00\00" }>, align 8
@alloc911 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc907, i32 0, i32 0, i32 0), [16 x i8] c"\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc909, i32 0, i32 0, i32 0), [16 x i8] c"\02\00\00\00\00\00\00\00\0C\00\00\00\00\00\00\00" }>, align 8
@alloc1738 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\AA\00\00\00\1A\00\00\00" }>, align 8
@alloc1740 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\A4\00\00\00*\00\00\00" }>, align 8
@alloc1742 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\8C\00\00\00+\00\00\00" }>, align 8
@alloc1744 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00V\00\00\00(\00\00\00" }>, align 8
@alloc1746 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00V\00\00\00\1A\00\00\00" }>, align 8
@alloc847 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc823, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc825, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc827, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc829, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc802, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc833, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc835, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc837, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc839, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc841, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc843, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\0A\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc845, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\0B\00\00\00\00\00\00\00" }>, align 8
@alloc818 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc794, i32 0, i32 0, i32 0), [16 x i8] c"\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc796, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc798, i32 0, i32 0, i32 0), [16 x i8] c"\05\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc800, i32 0, i32 0, i32 0), [16 x i8] c"\05\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc802, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc804, i32 0, i32 0, i32 0), [16 x i8] c"\04\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc806, i32 0, i32 0, i32 0), [16 x i8] c"\04\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [6 x i8] }>, <{ [6 x i8] }>* @alloc808, i32 0, i32 0, i32 0), [16 x i8] c"\06\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc810, i32 0, i32 0, i32 0), [16 x i8] c"\09\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc812, i32 0, i32 0, i32 0), [16 x i8] c"\07\00\00\00\00\00\00\00\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc814, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\0A\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc816, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\0B\00\00\00\00\00\00\00" }>, align 8
@alloc789 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc775, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc777, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc779, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc781, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc783, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc785, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc787, i32 0, i32 0, i32 0), [16 x i8] c"\03\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00" }>, align 8
@alloc770 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [6 x i8] }>, <{ [6 x i8] }>* @alloc756, i32 0, i32 0, i32 0), [16 x i8] c"\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [6 x i8] }>, <{ [6 x i8] }>* @alloc758, i32 0, i32 0, i32 0), [16 x i8] c"\06\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc760, i32 0, i32 0, i32 0), [16 x i8] c"\07\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc762, i32 0, i32 0, i32 0), [16 x i8] c"\09\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [6 x i8] }>, <{ [6 x i8] }>* @alloc766, i32 0, i32 0, i32 0), [16 x i8] c"\06\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc768, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00" }>, align 8
@alloc1748 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00.\01\00\00\0F\00\00\00" }>, align 8
@alloc1751 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00K\01\00\00\0D\00\00\00" }>, align 8
@alloc1753 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00N\01\00\00\11\00\00\00" }>, align 8
@alloc1755 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00O\01\00\00\1F\00\00\00" }>, align 8
@alloc1757 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00Q\01\00\00$\00\00\00" }>, align 8
@alloc1759 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00Q\01\00\001\00\00\00" }>, align 8
@alloc1761 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00T\01\00\00\09\00\00\00" }>, align 8
@alloc1763 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00X\01\00\00\10\00\00\00" }>, align 8
@alloc1765 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00f\01\00\00\10\00\00\00" }>, align 8
@alloc1767 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00j\01\00\00\1D\00\00\00" }>, align 8
@alloc1769 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00k\01\00\00\1A\00\00\00" }>, align 8
@alloc1771 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00k\01\00\00\11\00\00\00" }>, align 8
@alloc1773 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00l\01\00\00\11\00\00\00" }>, align 8
@alloc1775 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\83\01\00\00\19\00\00\00" }>, align 8
@alloc1777 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [81 x i8] }>, <{ [81 x i8] }>* @alloc1776, i32 0, i32 0, i32 0), [16 x i8] c"Q\00\00\00\00\00\00\00\83\01\00\00\17\00\00\00" }>, align 8
@alloc1814 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs" }>, align 1
@alloc1779 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00k\01\00\00\1B\00\00\00" }>, align 8
@alloc1023 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"gmtime_r failed: " }>, align 1
@alloc1024 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [17 x i8] }>, <{ [17 x i8] }>* @alloc1023, i32 0, i32 0, i32 0), [8 x i8] c"\11\00\00\00\00\00\00\00" }>, align 8
@alloc1781 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00m\01\00\00\11\00\00\00" }>, align 8
@alloc1783 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00v\01\00\00\1B\00\00\00" }>, align 8
@alloc588 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"localtime_r failed: " }>, align 1
@alloc589 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc588, i32 0, i32 0, i32 0), [8 x i8] c"\14\00\00\00\00\00\00\00" }>, align 8
@alloc1785 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00x\01\00\00\11\00\00\00" }>, align 8
@alloc1787 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\98\01\00\00\1F\00\00\00" }>, align 8
@alloc1789 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\9E\01\00\00\1F\00\00\00" }>, align 8
@alloc1791 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\13\02\00\00\0D\00\00\00" }>, align 8
@alloc1030 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"SteadyTime { tv_sec: " }>, align 1
@alloc1032 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c", tv_nsec: " }>, align 1
@alloc1033 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c" }" }>, align 1
@alloc1031 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc1030, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [11 x i8] }>, <{ [11 x i8] }>* @alloc1032, i32 0, i32 0, i32 0), [8 x i8] c"\0B\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc1033, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc1071 = private unnamed_addr constant <{ [4 x i8] }> zeroinitializer, align 4
@alloc1793 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\001\02\00\00\15\00\00\00" }>, align 8
@alloc1795 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00<\02\00\00'\00\00\00" }>, align 8
@alloc1797 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00=\02\00\00/\00\00\00" }>, align 8
@alloc1799 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00?\02\00\00'\00\00\00" }>, align 8
@alloc1801 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00@\02\00\00/\00\00\00" }>, align 8
@alloc1803 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00R\02\00\00A\00\00\00" }>, align 8
@alloc1805 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00Y\02\00\00\11\00\00\00" }>, align 8
@alloc1807 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00Z\02\00\00\11\00\00\00" }>, align 8
@alloc1809 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\\\02\00\00\15\00\00\00" }>, align 8
@alloc1811 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00]\02\00\00\15\00\00\00" }>, align 8
@alloc1813 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00_\02\00\00\15\00\00\00" }>, align 8
@alloc1815 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1814, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00`\02\00\00\15\00\00\00" }>, align 8
@_ZN4time12NSEC_PER_SEC17h374f834150039f53E = internal constant <{ [4 x i8] }> <{ [4 x i8] c"\00\CA\9A;" }>, align 4
@alloc1816 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"assertion failed: nsec >= 0 && nsec < NSEC_PER_SEC" }>, align 1
@alloc1849 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/home/cj/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs" }>, align 1
@alloc1818 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00Y\00\00\00\09\00\00\00" }>, align 8
@alloc1820 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00f\00\00\00)\00\00\00" }>, align 8
@alloc1822 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00g\00\00\00\17\00\00\00" }>, align 8
@alloc1824 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00h\00\00\00\18\00\00\00" }>, align 8
@alloc1826 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00j\00\00\00\0D\00\00\00" }>, align 8
@alloc1828 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00k\00\00\00\0D\00\00\00" }>, align 8
@alloc1830 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00m\00\00\00\0D\00\00\00" }>, align 8
@alloc1832 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00n\00\00\00\0D\00\00\00" }>, align 8
@alloc1834 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00|\00\00\00)\00\00\00" }>, align 8
@alloc1836 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00}\00\00\00\17\00\00\00" }>, align 8
@alloc1838 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00~\00\00\00\18\00\00\00" }>, align 8
@alloc1840 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\80\00\00\00\0D\00\00\00" }>, align 8
@alloc1842 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\81\00\00\00\0D\00\00\00" }>, align 8
@alloc1844 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\83\00\00\00\0D\00\00\00" }>, align 8
@alloc1846 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\84\00\00\00\0D\00\00\00" }>, align 8
@alloc1848 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8E\00\00\00\13\00\00\00" }>, align 8
@alloc1850 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1849, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8F\00\00\00\14\00\00\00" }>, align 8
@alloc1851 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"%c" }>, align 1
@alloc1852 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"%a, %d %b %Y %T %Z" }>, align 1
@alloc1853 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"%a, %d %b %Y %T GMT" }>, align 1
@alloc1854 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"%a, %d %b %Y %T %z" }>, align 1
@alloc1144 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"expected: `" }>, align 1
@alloc1146 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"`, found: `" }>, align 1
@alloc1147 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"`" }>, align 1
@alloc1145 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [11 x i8] }>, <{ [11 x i8] }>* @alloc1144, i32 0, i32 0, i32 0), [8 x i8] c"\0B\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [11 x i8] }>, <{ [11 x i8] }>* @alloc1146, i32 0, i32 0, i32 0), [8 x i8] c"\0B\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc1147, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc1139 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c": %" }>, align 1
@alloc1138 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc1137, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc1139, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc1855 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"Unexpected character." }>, align 1
@alloc1856 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"invalid format specifier" }>, align 1
@alloc1857 = private unnamed_addr constant <{ [34 x i8] }> <{ [34 x i8] c"missing format converter after `%`" }>, align 1
@alloc1858 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"Invalid seconds since epoch." }>, align 1
@alloc1859 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"Invalid time." }>, align 1
@alloc1860 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"Invalid zone offset." }>, align 1
@alloc1861 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"Invalid day of the year." }>, align 1
@alloc1862 = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"Invalid day of the month." }>, align 1
@alloc1863 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"Invalid day of the week." }>, align 1
@alloc1864 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"Invalid year." }>, align 1
@alloc1865 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"Invalid month." }>, align 1
@alloc1866 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"Invalid day." }>, align 1
@alloc1867 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"Invalid hour." }>, align 1
@alloc1868 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"Invalid minute." }>, align 1
@alloc1869 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"Invalid second." }>, align 1
@alloc1870 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"Duration" }>, align 1
@alloc1871 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"secs" }>, align 1
@vtable.e = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr28drop_in_place$LT$$RF$i64$GT$17ha1559e26087becbfE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h19bfa82a5b82c5c7E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1875 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"nanos" }>, align 1
@alloc1876 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"OutOfRangeError" }>, align 1
@vtable.f = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({}**)* @"_ZN4core3ptr33drop_in_place$LT$$RF$$LP$$RP$$GT$17hb1a969c57436b6f9E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({}**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h63208bedb6882c2fE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1880 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"Timespec" }>, align 1
@alloc1881 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"sec" }>, align 1
@alloc1882 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"nsec" }>, align 1
@alloc1883 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"SteadyTime" }>, align 1
@vtable.g = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64, i64 }**)* @"_ZN4core3ptr59drop_in_place$LT$$RF$time..sys..inner..unix..SteadyTime$GT$17h65e3f3284797adfeE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64, i64 }**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8db36971cad8c966E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1887 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"Tm" }>, align 1
@alloc1888 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"tm_sec" }>, align 1
@alloc1889 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"tm_min" }>, align 1
@alloc1890 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"tm_hour" }>, align 1
@alloc1891 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"tm_mday" }>, align 1
@alloc1892 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"tm_mon" }>, align 1
@alloc1893 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"tm_year" }>, align 1
@alloc1894 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"tm_wday" }>, align 1
@alloc1895 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"tm_yday" }>, align 1
@alloc1896 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"tm_isdst" }>, align 1
@alloc1897 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"tm_utcoff" }>, align 1
@alloc1898 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"tm_nsec" }>, align 1
@alloc1899 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"UnexpectedCharacter" }>, align 1
@vtable.h = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i32**)* @"_ZN4core3ptr29drop_in_place$LT$$RF$char$GT$17hfec2130c1f008f09E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i32**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2851b6cbd58295f8E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1903 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"InvalidFormatSpecifier" }>, align 1
@alloc1904 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"MissingFormatConverter" }>, align 1
@alloc1905 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"InvalidSecondsSinceEpoch" }>, align 1
@alloc1906 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"InvalidTime" }>, align 1
@alloc1907 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"InvalidZoneOffset" }>, align 1
@alloc1908 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"InvalidDayOfYear" }>, align 1
@alloc1909 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"InvalidDayOfMonth" }>, align 1
@alloc1910 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"InvalidDayOfWeek" }>, align 1
@alloc1911 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"InvalidYear" }>, align 1
@alloc1912 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"InvalidMonth" }>, align 1
@alloc1913 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"InvalidDay" }>, align 1
@alloc1914 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"InvalidHour" }>, align 1
@alloc1915 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"InvalidMinute" }>, align 1
@alloc1916 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"InvalidSecond" }>, align 1
@alloc1917 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"TmFmt" }>, align 1
@alloc1918 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"tm" }>, align 1
@vtable.i = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%Tm***)* @"_ZN4core3ptr37drop_in_place$LT$$RF$$RF$time..Tm$GT$17h5e1a98e3df486cefE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%Tm***, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa57ad083d865f36E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1922 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"format" }>, align 1
@vtable.j = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%Fmt**)* @"_ZN4core3ptr34drop_in_place$LT$$RF$time..Fmt$GT$17h183a97a90b6b9327E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%Fmt**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h01c994a04dca0efbE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc1926 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Ctime" }>, align 1
@alloc1927 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Rfc3339" }>, align 1
@alloc1928 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"Str" }>, align 1
@vtable.k = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ [0 x i8]*, i64 }**)* @"_ZN4core3ptr32drop_in_place$LT$$RF$$RF$str$GT$17hda00712044ebc8ebE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ [0 x i8]*, i64 }**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h20955cfd2c9b841dE" to i8*), [0 x i8] zeroinitializer }>, align 8

; <core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN100_$LT$core..iter..adapters..take..Take$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha2d25ed44e265295E"(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i32 }, align 8
  %1 = getelementptr inbounds %"core::iter::adapters::take::Take<core::str::iter::CharIndices>", %"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* %self, i32 0, i32 1
  %_2 = load i64, i64* %1, align 8
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 1114112, i32* %3, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds %"core::iter::adapters::take::Take<core::str::iter::CharIndices>", %"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* %self, i32 0, i32 1
  %5 = getelementptr inbounds %"core::iter::adapters::take::Take<core::str::iter::CharIndices>", %"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* %self, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %6, 1
  store i64 %7, i64* %4, align 8
  %_3 = bitcast %"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* %self to %"core::str::iter::CharIndices"*
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %8 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf2b67b30afdd08c9E"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %_3)
  store { i64, i32 } %8, { i64, i32 }* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8, !range !2
  %13 = insertvalue { i64, i32 } undef, i64 %10, 0
  %14 = insertvalue { i64, i32 } %13, i32 %12, 1
  ret { i64, i32 } %14
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h66cc98590358054cE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h059f6d8e1e1a5828E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_4, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hefa9421b0de17831E(i8* %2, i64 %_7)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h07f79e5fa0a465e6E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = bitcast [0 x i8]* %slice.0 to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, i8* %1, i64 %self.0
  store i8* %2, i8** %0, align 8
  %_3.i = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h15083f8c11b50310E(i8* %_3.i, i64 %_7)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h5fbf2def1887719fE"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_3 = icmp ugt i64 %self.0, %self.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_8 = icmp ugt i64 %self.1, %slice.1
  br i1 %_8, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h66cc98590358054cE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_15.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_15.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_15.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_15.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hcade2c04836a31bbE"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_4 = icmp ugt i64 %self.0, %self.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1
  br i1 %_9, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h07f79e5fa0a465e6E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_18.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_18.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_18.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_18.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hfb883a99dd5a556bE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_3 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %self, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %7 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h5fbf2def1887719fE"(i64 %4, i64 %6, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %8 = extractvalue { [0 x i8]*, i64 } %7, 0
  %9 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1
  ret { [0 x i8]*, i64 } %11
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7bed39f55610b457E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_5 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %self, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %7 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hcade2c04836a31bbE"(i64 %4, i64 %6, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %9
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h02d8fc193b287a2bE"(i8* nonnull %unique) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb13e104c5251dba3E"(i8* nonnull %unique)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b18692724626ab3E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hfff5608c8c7d68e2E"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h40206f8623f5096cE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i8* nonnull %0, i8* %1) unnamed_addr #1 {
start:
  %iterator = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 1
  store i8* %1, i8** %3, align 8
; call core::slice::iter::Iter<T>::as_slice
  %4 = call { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hdd022334c8c1ab79E"({ i8*, i8* }* align 8 dereferenceable(16) %iterator)
  %slice.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %slice.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::append_elements
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h0cc5391a61cf8d1fE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, [0 x i8]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h036aeb56110e9b14E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2, %"core::panic::location::Location"* align 8 dereferenceable(24) %3) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %7, align 8
; call <T as core::convert::From<T>>::from
  %8 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3634746b48032267E"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %8, 0
  %_3.1 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 %_3.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 %_3.1, i64* %12, align 8
  %13 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %13, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h0cad044023922896E"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = alloca { i64, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h34fbda361d736727E"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %1 to %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err"*
  %3 = bitcast %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err"* %2 to %"core::alloc::layout::LayoutError"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4b082d60fe934e4fE"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = alloca { i8*, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h168058f7348a3156E"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i8*, i64 }* %1 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err"*
  %3 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err"* %2 to %"core::alloc::AllocError"*
  %4 = bitcast { i8*, i64 }* %1 to {}**
  store {}* null, {}** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = alloca i8, align 1
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7aee1b2260a4f0c2E"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast i8* %1 to %"core::result::Result<(), core::fmt::Error>::Err"*
  %3 = getelementptr inbounds %"core::result::Result<(), core::fmt::Error>::Err", %"core::result::Result<(), core::fmt::Error>::Err"* %2, i32 0, i32 1
  store i8 1, i8* %1, align 1
  %4 = load i8, i8* %1, align 1, !range !3
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6836510c2f9bb2a7E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2, %"core::panic::location::Location"* align 8 dereferenceable(24) %3) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %7, align 8
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %8 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hfff5608c8c7d68e2E"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %8, 0
  %_3.1 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 %_3.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 %_3.1, i64* %12, align 8
  %13 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %13, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb658078ea85cc519E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2, %"core::panic::location::Location"* align 8 dereferenceable(24) %3) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %7, align 8
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %8 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hfff5608c8c7d68e2E"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %8, 0
  %_3.1 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 %_3.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 %_3.1, i64* %12, align 8
  %13 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %13, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd9b81d97cfd9f795E"(%"core::result::Result<Tm, ParseError>"* noalias nocapture sret(%"core::result::Result<Tm, ParseError>") dereferenceable(48) %0, i96 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 {
start:
  %3 = alloca i96, align 8
  %_4 = alloca %ParseError, align 4
  %_3 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %4 = alloca i96, align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, ParseError>::Err", align 4
  store i96 %1, i96* %4, align 8
  %5 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %residual to i8*
  %6 = bitcast i96* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  %7 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %residual to %ParseError*
  %8 = bitcast %ParseError* %e to i8*
  %9 = bitcast %ParseError* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 12, i1 false)
  %10 = bitcast %ParseError* %_4 to i8*
  %11 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 12, i1 false)
  %12 = bitcast %ParseError* %_4 to i96*
  %13 = load i96, i96* %12, align 4
; call <T as core::convert::From<T>>::from
  %14 = call i96 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5bb0a6972efa270eE"(i96 %13)
  store i96 %14, i96* %3, align 8
  %15 = bitcast %ParseError* %_3 to i8*
  %16 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 8 %16, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %17 = bitcast %"core::result::Result<Tm, ParseError>"* %0 to %"core::result::Result<Tm, ParseError>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<Tm, ParseError>::Err", %"core::result::Result<Tm, ParseError>::Err"* %17, i32 0, i32 1
  %19 = bitcast %ParseError* %18 to i8*
  %20 = bitcast %ParseError* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 12, i1 false)
  %21 = bitcast %"core::result::Result<Tm, ParseError>"* %0 to i32*
  store i32 1, i32* %21, align 4
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17he5268cd8ce057238E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2, %"core::panic::location::Location"* align 8 dereferenceable(24) %3) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %7, align 8
; call <T as core::convert::From<T>>::from
  %8 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3634746b48032267E"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %8, 0
  %_3.1 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 %_3.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 %_3.1, i64* %12, align 8
  %13 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %13, align 8
  ret void
}

; <T as core::any::Any>::type_id
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h68ffa4be62a13f4aE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::any::TypeId::of
  %0 = call i64 @_ZN4core3any6TypeId2of17h3cac0c27d28df61aE()
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; std::sys_common::backtrace::__rust_end_short_backtrace
; Function Attrs: noinline noreturn nonlazybind uwtable
define void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17hb70227f1fbb56bf0E(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", align 8
  %1 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_2 to i8*
  %2 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call std::panicking::begin_panic::{{closure}}
  call void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17hd9d659ffeef4cd74E"(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_2) #17
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::hint::black_box
  invoke void @_ZN4core4hint9black_box17h8676d35106463f54E()
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.trap()
  unreachable

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13
}

; std::io::error::Error::last_os_error
; Function Attrs: inlinehint nonlazybind uwtable
define internal i128 @_ZN3std2io5error5Error13last_os_error17hbe14676b1299a0bfE() unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %1 = alloca %"std::io::error::Error", align 8
; call std::sys::unix::os::errno
  %_1 = call i32 @_ZN3std3sys4unix2os5errno17hef77becd6e359a38E()
  br label %bb1

bb1:                                              ; preds = %start
; call std::io::error::Error::from_raw_os_error
  %2 = call i128 @_ZN3std2io5error5Error17from_raw_os_error17ha4dbd1a6729699f7E(i32 %_1)
  store i128 %2, i128* %0, align 8
  %3 = bitcast %"std::io::error::Error"* %1 to i8*
  %4 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast %"std::io::error::Error"* %1 to i128*
  %6 = load i128, i128* %5, align 8
  ret i128 %6
}

; std::io::error::Error::from_raw_os_error
; Function Attrs: inlinehint nonlazybind uwtable
define internal i128 @_ZN3std2io5error5Error17from_raw_os_error17ha4dbd1a6729699f7E(i32 %code) unnamed_addr #0 {
start:
  %_2 = alloca %"std::io::error::Repr", align 8
  %0 = alloca %"std::io::error::Error", align 8
  %1 = bitcast %"std::io::error::Repr"* %_2 to %"std::io::error::Repr::Os"*
  %2 = getelementptr inbounds %"std::io::error::Repr::Os", %"std::io::error::Repr::Os"* %1, i32 0, i32 1
  store i32 %code, i32* %2, align 4
  %3 = bitcast %"std::io::error::Repr"* %_2 to i8*
  store i8 0, i8* %3, align 8
  %4 = bitcast %"std::io::error::Error"* %0 to %"std::io::error::Repr"*
  %5 = bitcast %"std::io::error::Repr"* %4 to i8*
  %6 = bitcast %"std::io::error::Repr"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  %7 = bitcast %"std::io::error::Error"* %0 to i128*
  %8 = load i128, i128* %7, align 8
  ret i128 %8
}

; std::panicking::begin_panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
define void @_ZN3std9panicking11begin_panic17h8cea0a41872b496bE([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #3 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca i8, align 1
  %_3 = alloca %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", align 8
  store i8 0, i8* %_4, align 1
  store i8 1, i8* %_4, align 1
; invoke core::panic::location::Location::caller
  %loc = invoke align 8 dereferenceable(24) %"core::panic::location::Location"* @_ZN4core5panic8location8Location6caller17h66ab9d009774583dE(%"core::panic::location::Location"* align 8 dereferenceable(24) %0)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_4, align 1
  %2 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_3 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %msg.1, i64* %4, align 8
  %5 = getelementptr inbounds %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_3, i32 0, i32 1
  store %"core::panic::location::Location"* %loc, %"core::panic::location::Location"** %5, align 8
; invoke std::sys_common::backtrace::__rust_end_short_backtrace
  invoke void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17hb70227f1fbb56bf0E(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_3) #17
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %6 = load i8, i8* %_4, align 1, !range !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb3, label %bb2

cleanup:                                          ; preds = %bb1, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb3, %bb4
  %13 = bitcast { i8*, i32 }* %1 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb3:                                              ; preds = %bb4
  br label %bb2
}

; std::panicking::begin_panic::PanicPayload<A>::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17hadd0d6793f7ad69aE"([0 x i8]* nonnull align 1 %inner.0, i64 %inner.1) unnamed_addr #1 {
start:
  %_2 = alloca { i8*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %inner.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %inner.1, i64* %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %5, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { i8*, i64 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64 } %14, i64 %13, 1
  ret { i8*, i64 } %15
}

; std::panicking::begin_panic::{{closure}}
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17hd9d659ffeef4cd74E"(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_1) unnamed_addr #4 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i64*, align 8
  %_5 = alloca { i8*, i64 }, align 8
  %1 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !4
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_6.1 = load i64, i64* %3, align 8
; call std::panicking::begin_panic::PanicPayload<A>::new
  %4 = call { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17hadd0d6793f7ad69aE"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
  store { i8*, i64 } %4, { i8*, i64 }* %_5, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_2.0 = bitcast { i8*, i64 }* %_5 to {}*
  %5 = bitcast i64** %_7 to {}**
  store {}* null, {}** %5, align 8
  %6 = getelementptr inbounds %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1, i32 0, i32 1
  %_8 = load %"core::panic::location::Location"*, %"core::panic::location::Location"** %6, align 8, !nonnull !4
  %7 = load i64*, i64** %_7, align 8
; invoke std::panicking::rust_panic_with_hook
  invoke void @_ZN3std9panicking20rust_panic_with_hook17h7a6b21c56a75680aE({}* nonnull align 1 %_2.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, [0 x i8] }>* @vtable.0 to [3 x i64]*), i64* align 8 dereferenceable_or_null(48) %7, %"core::panic::location::Location"* align 8 dereferenceable(24) %_8) #17
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h01c994a04dca0efbE"(%Fmt** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %Fmt*, %Fmt** %self, align 8, !nonnull !4
; call <time::Fmt as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN46_$LT$time..Fmt$u20$as$u20$core..fmt..Debug$GT$3fmt17hbf70c77a0c0ce57aE"(%Fmt* align 8 dereferenceable(24) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h19bfa82a5b82c5c7E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load i64*, i64** %self, align 8, !nonnull !4
; call core::fmt::num::<impl core::fmt::Debug for i64>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i64$GT$3fmt17hf560765b78429b60E"(i64* align 8 dereferenceable(8) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h20955cfd2c9b841dE"({ [0 x i8]*, i64 }** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %self, align 8, !nonnull !4
; call <&T as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbe3c08150bc2cf13E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2851b6cbd58295f8E"(i32** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load i32*, i32** %self, align 8, !nonnull !4
; call <char as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h791749a8d25a7b93E"(i32* align 4 dereferenceable(4) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h63208bedb6882c2fE"({}** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load {}*, {}** %self, align 8, !nonnull !4
; call <() as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h8cf7b8a725937145E"({}* nonnull align 1 %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8db36971cad8c966E"({ i64, i64 }** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load { i64, i64 }*, { i64, i64 }** %self, align 8, !nonnull !4
; call <time::sys::inner::unix::SteadyTime as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN71_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..fmt..Debug$GT$3fmt17h67a33a883ccd9359E"({ i64, i64 }* align 8 dereferenceable(16) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbe3c08150bc2cf13E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_4.1 = load i64, i64* %1, align 8
; call <str as core::fmt::Debug>::fmt
  %2 = call zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17hec7dec34a2bb4d4fE"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hedf4bc2630e7df82E"(%Tm** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %Tm*, %Tm** %self, align 8, !nonnull !4
; call <time::Tm as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN45_$LT$time..Tm$u20$as$u20$core..fmt..Debug$GT$3fmt17h865e7439f7f8f543E"(%Tm* align 4 dereferenceable(44) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf91179c17dc5fd97E"(i32** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load i32*, i32** %self, align 8, !nonnull !4
; call core::fmt::num::<impl core::fmt::Debug for i32>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hfaffc9380d96ef03E"(i32* align 4 dereferenceable(4) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa57ad083d865f36E"(%Tm*** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load %Tm**, %Tm*** %self, align 8, !nonnull !4
; call <&T as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hedf4bc2630e7df82E"(%Tm** align 8 dereferenceable(8) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h18a698e2acc26c61E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_4.1 = load i64, i64* %1, align 8
; call <str as core::fmt::Display>::fmt
  %2 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h4fb653153270e40aE"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <() as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h8cf7b8a725937145E"({}* nonnull align 1 %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
; call core::fmt::Formatter::pad
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter3pad17hbc77db69b6df6cc2E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1311 to [0 x i8]*), i64 2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h36acc8d1a6d35360E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf, %TmFmt* align 8 dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hf3766db370414d98E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64) %formatter, {}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke time::display::<impl core::fmt::Display for time::TmFmt>::fmt
  %_7 = invoke zeroext i1 @"_ZN4time7display60_$LT$impl$u20$core..fmt..Display$u20$for$u20$time..TmFmt$GT$3fmt17hebd32c215fa27133E"(%TmFmt* align 8 dereferenceable(32) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %formatter)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hb92f10c4ab3faffeE"(%"alloc::string::String"* %buf) #18
  br label %bb6

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbbb5118fc604e871E"(i1 zeroext %_7, [0 x i8]* nonnull align 1 bitcast (<{ [55 x i8] }>* @alloc1317 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1319 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h6bd9e87f48c53c9dE"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = add nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; <usize as core::iter::range::Step>::backward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17ha7d337cabbda80d9E"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = sub nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::intrinsics::write_bytes
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics11write_bytes17h4c089fd602763d49E(i8* %dst, i8 %val, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 1, %count
  call void @llvm.memset.p0i8.i64(i8* align 1 %dst, i8 %val, i64 %0, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::write_bytes
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics11write_bytes17h9188e1e128303f28E(%"libc::unix::linux_like::tm"* %dst, i8 %val, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 56, %count
  %1 = bitcast %"libc::unix::linux_like::tm"* %dst to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 %val, i64 %0, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics19copy_nonoverlapping17h3495fe7d48422b1eE(i8* %src, i8* %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 %count, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %0, i1 false)
  ret void
}

; core::any::TypeId::of
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core3any6TypeId2of17h3cac0c27d28df61aE() unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 9147559743429524724, i64* %0, align 8
  %_1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %_1, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  ret i64 %2
}

; core::cmp::PartialOrd::gt
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3cmp10PartialOrd2gt17h84eabdfdc89aff3cE({ i64, i32 }* align 8 dereferenceable(16) %self, { i64, i32 }* align 8 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %_3 = alloca i8, align 1
  %0 = alloca i8, align 1
; call <time::duration::Duration as core::cmp::PartialOrd>::partial_cmp
  %1 = call i8 @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h8b2594cb2f1db163E"({ i64, i32 }* align 8 dereferenceable(16) %self, { i64, i32 }* align 8 dereferenceable(16) %other), !range !5
  store i8 %1, i8* %_3, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i8, i8* %_3, align 1, !range !5
  %3 = sub i8 %2, 2
  %4 = icmp eq i8 %3, 0
  %_7 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_7, 1
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %_6 = load i8, i8* %_3, align 1, !range !6
  %6 = icmp eq i8 %_6, 1
  br i1 %6, label %bb4, label %bb2

bb2:                                              ; preds = %bb3, %bb1
  store i8 0, i8* %0, align 1
  br label %bb5

bb4:                                              ; preds = %bb3
  store i8 1, i8* %0, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %7 = load i8, i8* %0, align 1, !range !3
  %8 = trunc i8 %7 to i1
  ret i1 %8
}

; core::cmp::PartialOrd::lt
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3cmp10PartialOrd2lt17h9101fccfd89aa5adE({ i64, i32 }* align 8 dereferenceable(16) %self, { i64, i32 }* align 8 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %_3 = alloca i8, align 1
  %0 = alloca i8, align 1
; call <time::duration::Duration as core::cmp::PartialOrd>::partial_cmp
  %1 = call i8 @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h8b2594cb2f1db163E"({ i64, i32 }* align 8 dereferenceable(16) %self, { i64, i32 }* align 8 dereferenceable(16) %other), !range !5
  store i8 %1, i8* %_3, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i8, i8* %_3, align 1, !range !5
  %3 = sub i8 %2, 2
  %4 = icmp eq i8 %3, 0
  %_7 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_7, 1
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %_6 = load i8, i8* %_3, align 1, !range !6
  %6 = icmp eq i8 %_6, -1
  br i1 %6, label %bb4, label %bb2

bb2:                                              ; preds = %bb3, %bb1
  store i8 0, i8* %0, align 1
  br label %bb5

bb4:                                              ; preds = %bb3
  store i8 1, i8* %0, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %7 = load i8, i8* %0, align 1, !range !3
  %8 = trunc i8 %7 to i1
  ret i1 %8
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3Ord3max17h99e452a93ad6f46dE(i64 %self, i64 %other) unnamed_addr #0 {
start:
; call core::cmp::max_by
  %0 = call i64 @_ZN4core3cmp6max_by17h43bd9475e69ca8bcE(i64 %self, i64 %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3max17h7caa96f1af28bd3bE(i64 %v1, i64 %v2) unnamed_addr #0 {
start:
; call core::cmp::Ord::max
  %0 = call i64 @_ZN4core3cmp3Ord3max17h99e452a93ad6f46dE(i64 %v1, i64 %v2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::impls::<impl core::cmp::Ord for i32>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17h426526f99ef7bc28E"(i32* align 4 dereferenceable(4) %self, i32* align 4 dereferenceable(4) %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_4 = load i32, i32* %self, align 4
  %_5 = load i32, i32* %other, align 4
  %_3 = icmp slt i32 %_4, %_5
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = load i32, i32* %self, align 4
  %_8 = load i32, i32* %other, align 4
  %_6 = icmp eq i32 %_7, %_8
  br i1 %_6, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !range !6
  ret i8 %1

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6
}

; core::cmp::impls::<impl core::cmp::Ord for i64>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i64$GT$3cmp17h0bbed6e4d8b33fa7E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_4 = load i64, i64* %self, align 8
  %_5 = load i64, i64* %other, align 8
  %_3 = icmp slt i64 %_4, %_5
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8
  %_8 = load i64, i64* %other, align 8
  %_6 = icmp eq i64 %_7, %_8
  br i1 %_6, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !range !6
  ret i8 %1

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h351dc7b21c935601E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_4 = load i64, i64* %self, align 8
  %_5 = load i64, i64* %other, align 8
  %_3 = icmp ult i64 %_4, %_5
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8
  %_8 = load i64, i64* %other, align 8
  %_6 = icmp eq i64 %_7, %_8
  br i1 %_6, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !range !6
  ret i8 %1

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6
}

; core::cmp::impls::<impl core::cmp::PartialOrd for i32>::partial_cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$11partial_cmp17h4f5238980559dcb5E"(i32* align 4 dereferenceable(4) %self, i32* align 4 dereferenceable(4) %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call core::cmp::impls::<impl core::cmp::Ord for i32>::cmp
  %_3 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17h426526f99ef7bc28E"(i32* align 4 dereferenceable(4) %self, i32* align 4 dereferenceable(4) %other), !range !6
  br label %bb1

bb1:                                              ; preds = %start
  store i8 %_3, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !5
  ret i8 %1
}

; core::cmp::impls::<impl core::cmp::PartialOrd for i64>::partial_cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i64$GT$11partial_cmp17h23f69fd4c7c3dee5E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call core::cmp::impls::<impl core::cmp::Ord for i64>::cmp
  %_3 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i64$GT$3cmp17h0bbed6e4d8b33fa7E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other), !range !6
  br label %bb1

bb1:                                              ; preds = %start
  store i8 %_3, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !5
  ret i8 %1
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hf1a5da82605e01d2E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp ult i64 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h299881825556c02dE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_3.1 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !4
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1
  %_4.1 = load i64, i64* %3, align 8
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %4 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17he30888e4c2bd03e8E"([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1, [0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::cmp::max_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6max_by17h43bd9475e69ca8bcE(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %3 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  store i8 1, i8* %_12, align 1
  %4 = bitcast { i64*, i64* }* %_6 to i64**
  store i64* %v1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  store i64* %v2, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !4
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !4
; invoke core::ops::function::FnOnce::call_once
  %10 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17hf3499d99de2a5056E(i64* align 8 dereferenceable(8) %7, i64* align 8 dereferenceable(8) %9)
          to label %bb1 unwind label %cleanup, !range !6

bb1:                                              ; preds = %start
  store i8 %10, i8* %_4, align 1
  %_11 = load i8, i8* %_4, align 1, !range !6
  switch i8 %_11, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ]

bb8:                                              ; preds = %cleanup
  br label %bb13

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb8

bb13:                                             ; preds = %bb8
  %16 = load i8, i8* %_13, align 1, !range !3
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb12, label %bb9

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_12, align 1
  %18 = load i64, i64* %v2, align 8
  store i64 %18, i64* %3, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_13, align 1
  %19 = load i64, i64* %v1, align 8
  store i64 %19, i64* %3, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load i8, i8* %_12, align 1, !range !3
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb10, label %bb6

bb6:                                              ; preds = %bb10, %bb5
  %22 = load i8, i8* %_13, align 1, !range !3
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb11, label %bb7

bb10:                                             ; preds = %bb5
  br label %bb6

bb9:                                              ; preds = %bb12, %bb13
  %24 = bitcast { i8*, i32 }* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb12:                                             ; preds = %bb13
  br label %bb9

bb7:                                              ; preds = %bb11, %bb6
  %30 = load i64, i64* %3, align 8
  ret i64 %30

bb11:                                             ; preds = %bb6
  br label %bb7
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h13de271d361d25e0E(%"std::io::error::Error"* align 8 dereferenceable(16) %x, i1 (%"std::io::error::Error"*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%"std::io::error::Error"*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !4
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"std::io::error::Error"* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h15923aacd6b7a371E(i64* align 8 dereferenceable(8) %x, i1 (i64*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !4
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h296710cf9c74ed59E(i32* align 4 dereferenceable(4) %x, i1 (i32*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i32*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !4
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i32* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h7f928b4406449fbdE(%TmFmt* align 8 dereferenceable(32) %x, i1 (%TmFmt*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%TmFmt*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !4
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %TmFmt* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17ha52a6fb3d74479f1E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %x, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !4
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { [0 x i8]*, i64 }* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0a33196693ac891E(i64* align 8 dereferenceable(8) %x, i1 (i64*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !4
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %x, i1 (i32*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i32*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !4
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i32* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hd10eb7802976ab03E(i32* align 4 dereferenceable(4) %x, i1 (i32*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i32*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !4
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i32* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::num::<impl core::fmt::Debug for i32>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hfaffc9380d96ef03E"(i32* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17hc1ea778f34506390E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9143b4968b3afd78E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17hbbd3c142f0f88bf5E"(i32* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !range !3
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE"(i32* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb9

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hf96d82ed1b605fdbE"(i32* align 4 dereferenceable(4) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10
}

; core::fmt::num::<impl core::fmt::Debug for i64>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i64$GT$3fmt17hf560765b78429b60E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17hc1ea778f34506390E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9143b4968b3afd78E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for i64>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17h921fb1f12e74cb77E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !range !3
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for i64>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h5c41694b747c6f84E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb9

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for i64>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i64$GT$3fmt17h76e0cb4856e3f78cE"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10
}

; core::fmt::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write9write_fmt17he84373d6b635f799E(%"alloc::string::String"* align 8 dereferenceable(24) %0, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %args) unnamed_addr #1 {
start:
  %_6 = alloca %"core::fmt::Arguments", align 8
  %self = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %0, %"alloc::string::String"** %self, align 8
  %_3.0 = bitcast %"alloc::string::String"** %self to {}*
  %1 = bitcast %"core::fmt::Arguments"* %_6 to i8*
  %2 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false)
; call core::fmt::write
  %3 = call zeroext i1 @_ZN4core3fmt5write17h0200d27bf417ad61E({}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.2 to [3 x i64]*), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_6)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %3
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %0, [0 x { [0 x i8]*, i64 }]* nonnull align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* nonnull align 8 %args.0, i64 %args.1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 %fmt.0, i64 %fmt.1) unnamed_addr #0 {
start:
  %_6 = alloca { i64*, i64 }, align 8
  %1 = bitcast { i64*, i64 }* %_6 to { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }*
  %2 = getelementptr inbounds { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }, { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }* %1, i32 0, i32 0
  store [0 x %"core::fmt::rt::v1::Argument"]* %fmt.0, [0 x %"core::fmt::rt::v1::Argument"]** %2, align 8
  %3 = getelementptr inbounds { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }, { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }* %1, i32 0, i32 1
  store i64 %fmt.1, i64* %3, align 8
  %4 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %5 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %5, align 8
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 1
  store i64 %pieces.1, i64* %6, align 8
  %7 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 0
  store i64* %9, i64** %12, align 8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 1
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2
  %15 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %14, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %15, align 8
  %16 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %14, i32 0, i32 1
  store i64 %args.1, i64* %16, align 8
  ret void
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %0, [0 x { [0 x i8]*, i64 }]* nonnull align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* nonnull align 8 %args.0, i64 %args.1) unnamed_addr #0 {
start:
  %_16 = alloca { i64*, i64 }, align 8
  %_3 = alloca i8, align 1
  %_4 = icmp ult i64 %pieces.1, %args.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1
  %_9 = icmp ugt i64 %pieces.1, %_12
  %1 = zext i1 %_9 to i8
  store i8 %1, i8* %_3, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i8, i8* %_3, align 1, !range !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %4 = bitcast { i64*, i64 }* %_16 to {}**
  store {}* null, {}** %4, align 8
  %5 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %6, align 8
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 1
  store i64 %pieces.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1
  %9 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 0
  store i64* %10, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 1
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2
  %16 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %16, align 8
  %17 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 1
  store i64 %args.1, i64* %17, align 8
  ret void

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [12 x i8] }>* @alloc1325 to [0 x i8]*), i64 12, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1327 to %"core::panic::location::Location"*)) #17
  unreachable
}

; core::mem::size_of_val
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem11size_of_val17h25399ca4f0d7a0a5E([0 x i8]* nonnull align 1 %val.0, i64 %val.1) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = mul i64 %val.1, 1
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::mem::maybe_uninit::MaybeUninit<T>::zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6zeroed17hfa325d64d6ef7c61E"(%"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>"* noalias nocapture sret(%"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>") dereferenceable(56) %u) unnamed_addr #0 {
start:
  call void @llvm.experimental.noalias.scope.decl(metadata !7)
  %0 = bitcast %"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>"* %u to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>"* %u to %"libc::unix::linux_like::tm"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::write_bytes
  call void @_ZN4core10intrinsics11write_bytes17h9188e1e128303f28E(%"libc::unix::linux_like::tm"* %1, i8 0, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core3mem7replace17h58514a87e863955eE({ i8*, i64 }* align 8 dereferenceable(16) %dest, i8* align 1 %src.0, i64 %src.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %1 = invoke { i8*, i64 } @_ZN4core3ptr4read17h55f27aa469250796E({ i8*, i64 }* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %result.0 = extractvalue { i8*, i64 } %1, 0
  %result.1 = extractvalue { i8*, i64 } %1, 1
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h6b88befbeda41f76E({ i8*, i64 }* %dest, i8* align 1 %src.0, i64 %src.1)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %2 = load i8, i8* %_7, align 1, !range !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %9 = insertvalue { i8*, i64 } undef, i8* %result.0, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %result.1, 1
  ret { i8*, i64 } %10

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17hdb8876ff44f9fd56E(i64* align 8 dereferenceable(8) %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i64 @_ZN4core3ptr4read17ha83e1bde7649995bE(i64* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h7e04ff28376b1cddE(i64* %dest, i64 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i64 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::num::<impl i64>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$i64$GT$11checked_add17hf71f0b27051f5ce3E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !3
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !3
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<i64>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<i64>::Some", %"core::option::Option<i64>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !10
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl i64>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$i64$GT$11checked_mul17h2a4bc725f0291d10E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !3
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !3
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<i64>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<i64>::Some", %"core::option::Option<i64>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !10
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl i64>::checked_sub
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$i64$GT$11checked_sub17h37ef48ef0b2598f1E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !3
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !3
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<i64>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<i64>::Some", %"core::option::Option<i64>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !10
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl u64>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_add17h244c153ea87c2e65E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !3
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !3
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<u64>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !10
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h173da189966c7e02E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !3
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !3
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !10
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf28d6b74c7001f9cE"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !3
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !3
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !10
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::nonzero::NonZeroUsize::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha3548140cda189c3E(i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 %n, i64* %0, align 8
  %1 = load i64, i64* %0, align 8, !range !11
  ret i64 %1
}

; core::num::nonzero::NonZeroUsize::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize3get17he8aa870fecac5e3fE(i64 %self) unnamed_addr #0 {
start:
  ret i64 %self
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17hf3499d99de2a5056E(i64* align 8 dereferenceable(8) %0, i64* align 8 dereferenceable(8) %1) unnamed_addr #0 {
start:
  %_2 = alloca { i64*, i64* }, align 8
  %2 = bitcast { i64*, i64* }* %_2 to i64**
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  store i64* %1, i64** %3, align 8
  %4 = bitcast { i64*, i64* }* %_2 to i64**
  %5 = load i64*, i64** %4, align 8, !nonnull !4
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !4
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h351dc7b21c935601E"(i64* align 8 dereferenceable(8) %5, i64* align 8 dereferenceable(8) %7), !range !6
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %8
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17hbbdcd0b8c45d3d45E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 0
  %2 = load {}*, {}** %1, align 8, !nonnull !4
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 1
  %4 = load [3 x i64]*, [3 x i64]** %3, align 8, !nonnull !4
  %5 = bitcast [3 x i64]* %4 to void ({}*)**
  %6 = getelementptr inbounds void ({}*)*, void ({}*)** %5, i64 0
  %7 = load void ({}*)*, void ({}*)** %6, align 8, !invariant.load !4, !nonnull !4
  invoke void %7({}* %2)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %8 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !nonnull !4
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8, !nonnull !4
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h04b6fe5da7307938E(i8* nonnull %10, i64* align 8 dereferenceable(24) %12)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %13 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8, !nonnull !4
  %16 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8, !nonnull !4
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h04b6fe5da7307938E(i8* nonnull %15, i64* align 8 dereferenceable(24) %17) #18
  br label %bb2

cleanup:                                          ; preds = %start
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hefa9421b0de17831E(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h8737a5c461926254E"(i8* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h3c8f52f6968f5f04E({}* %_3, i64 %len)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h15083f8c11b50310E(i8* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast i8* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h19634ea830412357E({}* %0, i64 %len)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::ptr::drop_in_place<&i32>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h773e50680ccef9dfE"(i32** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&i64>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$i64$GT$17ha1559e26087becbfE"(i64** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&str>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h74649e2e909547afE"({ [0 x i8]*, i64 }* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&char>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr29drop_in_place$LT$$RF$char$GT$17hfec2130c1f008f09E"(i32** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&&str>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr32drop_in_place$LT$$RF$$RF$str$GT$17hda00712044ebc8ebE"({ [0 x i8]*, i64 }** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&()>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr33drop_in_place$LT$$RF$$LP$$RP$$GT$17hb1a969c57436b6f9E"({}** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&time::Fmt>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr34drop_in_place$LT$$RF$time..Fmt$GT$17h183a97a90b6b9327E"(%Fmt** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&&time::Tm>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr37drop_in_place$LT$$RF$$RF$time..Tm$GT$17h5e1a98e3df486cefE"(%Tm*** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<core::fmt::Error>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17hdee728ac55e77879E"(%"core::fmt::Error"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<std::io::error::Repr>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr41drop_in_place$LT$std..io..error..Repr$GT$17hdde969d413fcc6e7E"(%"std::io::error::Repr"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::io::error::Repr"* %_1 to i8*
  %1 = load i8, i8* %0, align 8, !range !12
  %_2 = zext i8 %1 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
  ]

bb2:                                              ; preds = %start
  %2 = bitcast %"std::io::error::Repr"* %_1 to %"std::io::error::Repr::Custom"*
  %3 = getelementptr inbounds %"std::io::error::Repr::Custom", %"std::io::error::Repr::Custom"* %2, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
  call void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17heef64b6abada61b9E"(%"std::io::error::Custom"** %3)
  br label %bb1

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hb92f10c4ab3faffeE"(%"alloc::string::String"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"alloc::string::String"* %_1 to %"alloc::vec::Vec<u8>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17he70894e6db844a63E"(%"alloc::vec::Vec<u8>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::io::error::Error>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hc7e7bfbf1c332c96E"(%"std::io::error::Error"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::io::error::Error"* %_1 to %"std::io::error::Repr"*
; call core::ptr::drop_in_place<std::io::error::Repr>
  call void @"_ZN4core3ptr41drop_in_place$LT$std..io..error..Repr$GT$17hdde969d413fcc6e7E"(%"std::io::error::Repr"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::io::error::Custom>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h55563ed34ae26316E"(%"std::io::error::Custom"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::io::error::Custom"* %_1 to { {}*, [3 x i64]* }*
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>
  call void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17hbbdcd0b8c45d3d45E"({ {}*, [3 x i64]* }* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17he70894e6db844a63E"(%"alloc::vec::Vec<u8>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5a0a5d5b063ccf1cE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hbad4c5f7db1ca1f7E"({ i8*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hbad4c5f7db1ca1f7E"({ i8*, i64 }* %2) #18
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core3ptr4read17h55f27aa469250796E({ i8*, i64 }* %src) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %tmp = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast { i8*, i64 }* %tmp to i8*
  %9 = bitcast { i8*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 0
  %_6.0 = load i8*, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 1
  %_6.1 = load i64, i64* %11, align 8
  %12 = insertvalue { i8*, i64 } undef, i8* %_6.0, 0
  %13 = insertvalue { i8*, i64 } %12, i64 %_6.1, 1
  %14 = extractvalue { i8*, i64 } %13, 0
  %15 = extractvalue { i8*, i64 } %13, 1
  %16 = extractvalue { i8*, i64 } %13, 0
  %17 = extractvalue { i8*, i64 } %13, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %18 = insertvalue { i8*, i64 } undef, i8* %16, 0
  %19 = insertvalue { i8*, i64 } %18, i64 %17, 1
  ret { i8*, i64 } %19
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr4read17ha83e1bde7649995bE(i64* %src) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*
  %4 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %_6 = load i64, i64* %tmp, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17hea0029d5c7c9d4c4E(%"alloc::alloc::Global"* %src) unnamed_addr #0 {
start:
  %0 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %0 to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp to %"alloc::alloc::Global"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"alloc::alloc::Global"* %2 to i8*
  %4 = bitcast %"alloc::alloc::Global"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 0, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hbad4c5f7db1ca1f7E"({ i8*, i64 }* %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h52740b0cb5e2ba31E"({ i8*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<&mut alloc::string::String>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr54drop_in_place$LT$$RF$mut$u20$alloc..string..String$GT$17h7863589460edc7b6E"(%"alloc::string::String"** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&time::sys::inner::unix::SteadyTime>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr59drop_in_place$LT$$RF$time..sys..inner..unix..SteadyTime$GT$17h65e3f3284797adfeE"({ i64, i64 }** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h6b88befbeda41f76E({ i8*, i64 }* %dst, i8* align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %src = alloca { i8*, i64 }, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = bitcast { i8*, i64 }* %dst to i8*
  %5 = bitcast { i8*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h7e04ff28376b1cddE(i64* %dst, i64 %0) unnamed_addr #0 {
start:
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  %1 = bitcast i64* %dst to i8*
  %2 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17ha4545be5fe0c7646E(i8* %dst, i8 %0) unnamed_addr #0 {
start:
  %src = alloca i8, align 1
  store i8 %0, i8* %src, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 1, i1 false)
  ret void
}

; core::ptr::drop_in_place<dyn core::any::Any+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr66drop_in_place$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$17h293f68dce2bd4ea2E"({}* %_1.0, [3 x i64]* align 8 dereferenceable(24) %_1.1) unnamed_addr #1 {
start:
  %0 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %1 = getelementptr inbounds void ({}*)*, void ({}*)** %0, i64 0
  %2 = load void ({}*)*, void ({}*)** %1, align 8, !invariant.load !4, !nonnull !4
  call void %2({}* %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17heef64b6abada61b9E"(%"std::io::error::Custom"** %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %_1, align 8, !nonnull !4
; invoke core::ptr::drop_in_place<std::io::error::Custom>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h55563ed34ae26316E"(%"std::io::error::Custom"* %1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %2 = bitcast %"std::io::error::Custom"** %_1 to i64**
  %3 = load i64*, i64** %2, align 8, !nonnull !4
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hbbd58cc9e6600f32E(i64* nonnull %3)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %4 = bitcast %"std::io::error::Custom"** %_1 to i64**
  %5 = load i64*, i64** %4, align 8, !nonnull !4
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hbbd58cc9e6600f32E(i64* nonnull %5) #18
  br label %bb2

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc04ddeddfda1cc35E"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !4
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h2c1e886ad4c7cfacE"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hdd5a034dbabb9430E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"std::io::error::Custom"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc04ddeddfda1cc35E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h3dea978f1a1003e1E"(i8* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb13e104c5251dba3E"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc04ddeddfda1cc35E"(i8* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h5bfb7fcfad3ca852E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hc12509045289e440E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1)
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc04ddeddfda1cc35E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h853bd09c370faf5fE"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8130e813ae8263abE"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1)
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc04ddeddfda1cc35E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8130e813ae8263abE"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb13e104c5251dba3E"(i8* nonnull %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hc12509045289e440E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hdd5a034dbabb9430E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"std::io::error::Custom"*
  ret %"std::io::error::Custom"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h2533c0d026a33981E"({ i8*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !4
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !4
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8130e813ae8263abE"(i8* nonnull %_3.0, i64* align 8 dereferenceable(24) %_3.1)
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h7e4aa41b0792ff54E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !4
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hdd5a034dbabb9430E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::io::error::Custom"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hb24edb28a9d231adE"({ i8*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !4
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !4
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hc12509045289e440E"(i8* nonnull %_3.0, i64* align 8 dereferenceable(24) %_3.1)
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::drop_in_place<std::panicking::begin_panic::PanicPayload<&str>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr77drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$$RF$str$GT$$GT$17hdc1bdfc1a3753d44E"({ i8*, i64 }* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hde82732c01b29061E"(i8* %self, i8* %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !3
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h6723d4f407dfe990E"(%"libc::unix::linux_like::tm"* %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"libc::unix::linux_like::tm"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hde82732c01b29061E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hef3e50b1d4cc0026E"({ { [0 x i8]*, i64 }, i32, [1 x i32] }* %self) unnamed_addr #0 {
start:
  %_2 = bitcast { { [0 x i8]*, i64 }, i32, [1 x i32] }* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hde82732c01b29061E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf335a1f5381ac14fE"(i8* %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hde82732c01b29061E"(i8* %self, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h3c8f52f6968f5f04E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h19634ea830412357E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr8metadata8metadata17hf79d01fbdbcf4162E([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %ptr.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b18692724626ab3E"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !4
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h3d6739d030649000E"({ { [0 x i8]*, i64 }, i32, [1 x i32] }* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to { { [0 x i8]*, i64 }, i32, [1 x i32] }**
  store { { [0 x i8]*, i64 }, i32, [1 x i32] }* %ptr, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !4
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5cd6406f4b8769caE"([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %ptr.1, i64* %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !4
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h5556461fc9f95191E"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf335a1f5381ac14fE"(i8* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast i8** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_5 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b18692724626ab3E"(i8* %ptr)
  br label %bb3

bb3:                                              ; preds = %bb2
  store i8* %_5, i8** %0, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8*, i8** %0, align 8
  ret i8* %2
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hc7519d9b3eea0f1aE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7c58c2dd7d25b879E"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b18692724626ab3E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { { [0 x i8]*, i64 }, i32, [1 x i32] }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h622d70e143475d70E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to { { [0 x i8]*, i64 }, i32, [1 x i32] }*
  ret { { [0 x i8]*, i64 }, i32, [1 x i32] }* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7c58c2dd7d25b879E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to [0 x i8]*
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %self.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::non_null::NonNull<[T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h560437e9ec9491b4E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_2 = call nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h9477a539dbbb3cecE"(i8* nonnull %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h9477a539dbbb3cecE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7c58c2dd7d25b879E"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast [0 x i8]* %_3.0 to i8*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %2 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b18692724626ab3E"(i8* %1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %2
}

; core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hde42bbe4212b6aceE"(i8* nonnull %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h15083f8c11b50310E(i8* %_4, i64 %len)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5cd6406f4b8769caE"([0 x i8]* %_3.0, i64 %_3.1)
  %2 = extractvalue { i8*, i64 } %1, 0
  %3 = extractvalue { i8*, i64 } %1, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1
  ret { i8*, i64 } %5
}

; core::ptr::non_null::NonNull<[T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17he4479d78759b8718E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7c58c2dd7d25b879E"(i8* nonnull %self.0, i64 %self.1)
  %_2.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::metadata
  %1 = call i64 @_ZN4core3ptr8metadata8metadata17hf79d01fbdbcf4162E([0 x i8]* %_2.0, i64 %_2.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %1
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17he7249d6116c25023E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 0
  %2 = load {}*, {}** %1, align 8, !nonnull !4
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 1
  %4 = load [3 x i64]*, [3 x i64]** %3, align 8, !nonnull !4
  %5 = bitcast [3 x i64]* %4 to void ({}*)**
  %6 = getelementptr inbounds void ({}*)*, void ({}*)** %5, i64 0
  %7 = load void ({}*)*, void ({}*)** %6, align 8, !invariant.load !4, !nonnull !4
  invoke void %7({}* %2)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %8 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !nonnull !4
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8, !nonnull !4
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h3379b27101ec1905E(i8* nonnull %10, i64* align 8 dereferenceable(24) %12)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %13 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8, !nonnull !4
  %16 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8, !nonnull !4
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h3379b27101ec1905E(i8* nonnull %15, i64* align 8 dereferenceable(24) %17) #18
  br label %bb2

cleanup:                                          ; preds = %start
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<dyn std::error::Error+core::marker::Send+core::marker::Sync>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr92drop_in_place$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17h366b1e476aa19f82E"({}* %_1.0, [3 x i64]* align 8 dereferenceable(24) %_1.1) unnamed_addr #1 {
start:
  %0 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %1 = getelementptr inbounds void ({}*)*, void ({}*)** %0, i64 0
  %2 = load void ({}*)*, void ({}*)** %1, align 8, !invariant.load !4, !nonnull !4
  call void %2({}* %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::const_ptr::<impl *const T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hc1629421d1c9f23aE"(i8* %self, i8* %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !3
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h8737a5c461926254E"(i8* %self) unnamed_addr #0 {
start:
  %0 = bitcast i8* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h0d3629d7463559faE"({ { [0 x i8]*, i64 }, i32, [1 x i32] }* %self) unnamed_addr #0 {
start:
  %_2 = bitcast { { [0 x i8]*, i64 }, i32, [1 x i32] }* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hc1629421d1c9f23aE"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h507c3b3dc0fa49a5E"(i8* %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hc1629421d1c9f23aE"(i8* %self, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h0b3354d121771fe7E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::metadata::metadata
  %0 = call i64 @_ZN4core3ptr8metadata8metadata17hf79d01fbdbcf4162E([0 x i8]* %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h059f6d8e1e1a5828E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core3str11validations15next_code_point17hbe11e5769e356a3dE({ i8*, i8* }* align 8 dereferenceable(16) %bytes) unnamed_addr #0 {
start:
  %ch = alloca i32, align 4
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_5 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46c5e8acb08509fbE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %1 = call align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf7afe3365ba5281fE"(i8* align 1 dereferenceable_or_null(1) %_5)
  store i8* %1, i8** %_4, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast i8** %_4 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_7 = select i1 %4, i64 1, i64 0
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !nonnull !4
  %x = load i8, i8* %val, align 1
  %_11 = icmp ult i8 %x, -128
  br i1 %_11, label %bb7, label %bb8

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %5 = call { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hcc95d66fc8452245E"()
  store { i32, i32 } %5, { i32, i32 }* %0, align 4
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb23

bb23:                                             ; preds = %bb7, %bb6
  br label %bb24

bb8:                                              ; preds = %bb3
; call core::str::validations::utf8_first_byte
  %init = call i32 @_ZN4core3str11validations15utf8_first_byte17h18c10bf4dfdb0b2eE(i8 %x, i32 2)
  br label %bb9

bb7:                                              ; preds = %bb3
  %_13 = zext i8 %x to i32
  %6 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %6, i32 0, i32 1
  store i32 %_13, i32* %7, align 4
  %8 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %8, align 4
  br label %bb23

bb24:                                             ; preds = %bb22, %bb23
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4, !range !13
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = insertvalue { i32, i32 } undef, i32 %10, 0
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1
  ret { i32, i32 } %14

bb9:                                              ; preds = %bb8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_19 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46c5e8acb08509fbE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::option::Option<T>::unwrap_unchecked
  %_18 = call align 1 dereferenceable(1) i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hdf75fb8e3caecc60E"(i8* align 1 dereferenceable_or_null(1) %_19, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1331 to %"core::panic::location::Location"*))
  br label %bb11

bb11:                                             ; preds = %bb10
  %y = load i8, i8* %_18, align 1
; call core::str::validations::utf8_acc_cont_byte
  %15 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h806b474fd7665799E(i32 %init, i8 %y)
  store i32 %15, i32* %ch, align 4
  br label %bb12

bb12:                                             ; preds = %bb11
  %_24 = icmp uge i8 %x, -32
  br i1 %_24, label %bb13, label %bb22

bb22:                                             ; preds = %bb21, %bb12
  %_50 = load i32, i32* %ch, align 4
  %16 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %16, i32 0, i32 1
  store i32 %_50, i32* %17, align 4
  %18 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %18, align 4
  br label %bb24

bb13:                                             ; preds = %bb12
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_28 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46c5e8acb08509fbE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::option::Option<T>::unwrap_unchecked
  %_27 = call align 1 dereferenceable(1) i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hdf75fb8e3caecc60E"(i8* align 1 dereferenceable_or_null(1) %_28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1333 to %"core::panic::location::Location"*))
  br label %bb15

bb15:                                             ; preds = %bb14
  %z = load i8, i8* %_27, align 1
  %_32 = and i8 %y, 63
  %_31 = zext i8 %_32 to i32
; call core::str::validations::utf8_acc_cont_byte
  %y_z = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h806b474fd7665799E(i32 %_31, i8 %z)
  br label %bb16

bb16:                                             ; preds = %bb15
  %_35 = shl i32 %init, 12
  %19 = or i32 %_35, %y_z
  store i32 %19, i32* %ch, align 4
  %_38 = icmp uge i8 %x, -16
  br i1 %_38, label %bb17, label %bb21

bb21:                                             ; preds = %bb20, %bb16
  br label %bb22

bb17:                                             ; preds = %bb16
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_42 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46c5e8acb08509fbE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::option::Option<T>::unwrap_unchecked
  %_41 = call align 1 dereferenceable(1) i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hdf75fb8e3caecc60E"(i8* align 1 dereferenceable_or_null(1) %_42, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1335 to %"core::panic::location::Location"*))
  br label %bb19

bb19:                                             ; preds = %bb18
  %w = load i8, i8* %_41, align 1
  %_45 = and i32 %init, 7
  %_44 = shl i32 %_45, 18
; call core::str::validations::utf8_acc_cont_byte
  %_47 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h806b474fd7665799E(i32 %y_z, i8 %w)
  br label %bb20

bb20:                                             ; preds = %bb19
  %20 = or i32 %_44, %_47
  store i32 %20, i32* %ch, align 4
  br label %bb21
}

; core::str::validations::utf8_first_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3str11validations15utf8_first_byte17h18c10bf4dfdb0b2eE(i8 %byte, i32 %width) unnamed_addr #0 {
start:
  %0 = trunc i32 %width to i8
  %1 = and i8 %0, 7
  %_5 = lshr i8 127, %1
  %_3 = and i8 %byte, %_5
  %2 = zext i8 %_3 to i32
  ret i32 %2
}

; core::str::validations::utf8_acc_cont_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h806b474fd7665799E(i32 %ch, i8 %byte) unnamed_addr #0 {
start:
  %_3 = shl i32 %ch, 6
  %_6 = and i8 %byte, 63
  %_5 = zext i8 %_6 to i32
  %0 = or i32 %_3, %_5
  ret i32 %0
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hbcce436be1f747b2E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %pat.0, i64 %pat.1) unnamed_addr #1 {
start:
; call <&str as core::str::pattern::Pattern>::is_prefix_of
  %0 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17heea0c75f67ffdbcdE"([0 x i8]* nonnull align 1 %pat.0, i64 %pat.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::str::<impl str>::char_indices
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hb894091c031c54d8E"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::str::<impl str>::chars
  %1 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hf02eec9683990b68E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %_2.0 = extractvalue { i8*, i8* } %1, 0
  %_2.1 = extractvalue { i8*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::str::iter::CharIndices"* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %0, i32 0, i32 1
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 0
  store i8* %_2.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1
  store i8* %_2.1, i8** %5, align 8
  ret void
}

; core::str::<impl str>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17hd663f980bca624afE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %i.0, i64 %i.1) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h85764ba683a7f951E"(i64 %i.0, i64 %i.1, [0 x i8]* %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::str::<impl str>::is_char_boundary
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h0b48d1b29a266bc6E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %2 = icmp eq i64 %index, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i8 1, i8* %1, align 1
  br label %bb10

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %6 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !4
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %6, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1
  %_6.0 = extractvalue { [0 x i8]*, i64 } %10, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %10, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::get
  %11 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h5828fde3815536d1E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1, i64 %index)
  store i8* %11, i8** %_4, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %12 = bitcast i8** %_4 to {}**
  %13 = load {}*, {}** %12, align 8
  %14 = icmp eq {}* %13, null
  %_9 = select i1 %14, i64 0, i64 1
  switch i64 %_9, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
; call core::str::<impl str>::len
  %_11 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h8834d273c1c5a4afE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb8

bb5:                                              ; preds = %bb4
  %15 = load i8*, i8** %_4, align 8, !nonnull !4
  %b = load i8, i8* %15, align 1
  %16 = icmp sge i8 %b, -64
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb5
  br label %bb10

bb8:                                              ; preds = %bb7
  %18 = icmp eq i64 %index, %_11
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb1, %bb9
  %20 = load i8, i8* %1, align 1, !range !3
  %21 = trunc i8 %20 to i1
  ret i1 %21
}

; core::str::<impl str>::trim_left_matches
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$17trim_left_matches17h234cf126e8cd2ccbE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %pat.0, i64 %pat.1) unnamed_addr #1 {
start:
; call core::str::<impl str>::trim_start_matches
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$18trim_start_matches17h0fc333ceaeff293fE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %pat.0, i64 %pat.1)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; core::str::<impl str>::trim_start_matches
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$18trim_start_matches17h0fc333ceaeff293fE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %pat.0, i64 %pat.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_14 = alloca { i64, i64 }, align 8
  %_8 = alloca %"core::option::Option<(usize, usize)>", align 8
  %matcher = alloca %"core::str::pattern::StrSearcher", align 8
  %i = alloca i64, align 8
  store i8 0, i8* %_18, align 1
  store i8 1, i8* %_18, align 1
; invoke core::str::<impl str>::len
  %1 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h8834d273c1c5a4afE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 %1, i64* %i, align 8
  store i8 0, i8* %_18, align 1
; invoke <&str as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17he965a2a590af4c44E"(%"core::str::pattern::StrSearcher"* noalias nocapture sret(%"core::str::pattern::StrSearcher") dereferenceable(104) %matcher, [0 x i8]* nonnull align 1 %pat.0, i64 %pat.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %bb9, %cleanup
  %2 = load i8, i8* %_18, align 1, !range !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb11, label %bb10

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; invoke core::str::pattern::Searcher::next_reject
  invoke void @_ZN4core3str7pattern8Searcher11next_reject17hebc57dd49b4e6177E(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %_8, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %matcher)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
  %9 = bitcast %"core::option::Option<(usize, usize)>"* %_8 to i64*
  %_10 = load i64, i64* %9, align 8, !range !10
  %10 = icmp eq i64 %_10, 1
  br i1 %10, label %bb4, label %bb5

bb9:                                              ; preds = %cleanup1
  br label %bb12

cleanup1:                                         ; preds = %bb6, %bb5, %bb2
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %_8 to %"core::option::Option<(usize, usize)>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %16, i32 0, i32 1
  %18 = bitcast { i64, i64 }* %17 to i64*
  %a = load i64, i64* %18, align 8
  store i64 %a, i64* %i, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %_15 = load i64, i64* %i, align 8
; invoke core::str::<impl str>::len
  %_16 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h8834d273c1c5a4afE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
  %19 = bitcast { i64, i64 }* %_14 to i64*
  store i64 %_15, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1
  store i64 %_16, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
; invoke core::str::<impl str>::get_unchecked
  %25 = invoke { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17hd663f980bca624afE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %22, i64 %24)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
  %26 = extractvalue { [0 x i8]*, i64 } %25, 0
  %27 = extractvalue { [0 x i8]*, i64 } %25, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %28 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %26, 0
  %29 = insertvalue { [0 x i8]*, i64 } %28, i64 %27, 1
  ret { [0 x i8]*, i64 } %29

bb10:                                             ; preds = %bb11, %bb12
  %30 = bitcast { i8*, i32 }* %0 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = insertvalue { i8*, i32 } undef, i8* %31, 0
  %35 = insertvalue { i8*, i32 } %34, i32 %33, 1
  resume { i8*, i32 } %35

bb11:                                             ; preds = %bb12
  br label %bb10
}

; core::str::<impl str>::len
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h8834d273c1c5a4afE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !4
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_3.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %_3.1
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hf02eec9683990b68E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !4
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %10 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf71e26b97ed95872E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  %_2.0 = extractvalue { i8*, i8* } %10, 0
  %_2.1 = extractvalue { i8*, i8* } %10, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  store i8* %_2.0, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  store i8* %_2.1, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !nonnull !4
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = insertvalue { i8*, i8* } undef, i8* %14, 0
  %18 = insertvalue { i8*, i8* } %17, i8* %16, 1
  ret { i8*, i8* } %18
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h85764ba683a7f951E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h059f6d8e1e1a5828E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_6, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %len = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hefa9421b0de17831E(i8* %2, i64 %len)
  %_12.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_12.0, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_12.1, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h56d109ff4057f39aE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h059f6d8e1e1a5828E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_6, i64 %self
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_10 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h0b3354d121771fe7E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %len = sub i64 %_10, %self
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hefa9421b0de17831E(i8* %2, i64 %len)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_13.0, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_13.1, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h75cf30870890a36dE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h0b48d1b29a266bc6E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h56d109ff4057f39aE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  %_8.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %_8.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %_8.1, i64* %5, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i64 } %10, i64 %9, 1
  ret { i8*, i64 } %11
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17h5fbc04fcaf0bd411E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_9 = alloca { i8*, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
; call core::str::<impl str>::len
  %_7 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h8834d273c1c5a4afE"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 %self, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %_7, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %_5 to i64*
  %start1 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %end = load i64, i64* %4, align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
  %5 = call { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h75cf30870890a36dE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  store { i8*, i64 } %5, { i8*, i64 }* %_9, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = bitcast { i8*, i64 }* %_9 to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_12 = select i1 %8, i64 0, i64 1
  switch i64 %_12, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17ha499ccf9a8f75ce3E([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %start1, i64 %end, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #17
  unreachable

bb5:                                              ; preds = %bb2
  %9 = bitcast { i8*, i64 }* %_9 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !4
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %s.1 = load i64, i64* %11, align 8
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %s.0, 0
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %s.1, 1
  ret { [0 x i8]*, i64 } %13
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc9d8dbceae2eac07E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17h5fbc04fcaf0bd411E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::pattern::TwoWaySearcher::byteset_contains
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17h212d02aa347b6e99E(%"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %self, i8 %byte) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 3
  %_5 = load i64, i64* %0, align 8
  %_7 = and i8 %byte, 63
  %_6 = zext i8 %_7 to i64
  %1 = and i64 %_6, 63
  %_4 = lshr i64 %_5, %1
  %_3 = and i64 %_4, 1
  %2 = icmp ne i64 %_3, 0
  ret i1 %2
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern14TwoWaySearcher4next17hedd09b7320f4eae0E(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, %"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %self, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, [0 x i8]* nonnull align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #0 {
start:
  %_76 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_72 = alloca { i64, i64 }, align 8
  %start2 = alloca i64, align 8
  %_46 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_41 = alloca { i64, i64 }, align 8
  %start1 = alloca i64, align 8
  %_21 = alloca i8, align 1
  %_10 = alloca i8*, align 8
  %1 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %old_pos = load i64, i64* %1, align 8
  %needle_last = sub i64 %needle.1, 1
  br label %bb1

bb1:                                              ; preds = %bb55, %start
  %2 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_13 = load i64, i64* %2, align 8
  %_12 = add i64 %_13, %needle_last
; call core::slice::<impl [T]>::get
  %3 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h5828fde3815536d1E"([0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, i64 %_12)
  store i8* %3, i8** %_10, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast i8** %_10 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_15 = select i1 %6, i64 0, i64 1
  switch i64 %_15, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %7 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  store i64 %haystack.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_20 = load i64, i64* %8, align 8
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hfcbb0fbd06bed45aE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %old_pos, i64 %_20)
  br label %bb6

bb5:                                              ; preds = %bb2
  %9 = load i8*, i8** %_10, align 8, !nonnull !4
  %b = load i8, i8* %9, align 1
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_22 = call zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h6867c5f77f7886f4E"()
  br label %bb10

bb10:                                             ; preds = %bb5
  br i1 %_22, label %bb8, label %bb7

bb7:                                              ; preds = %bb10
  store i8 0, i8* %_21, align 1
  br label %bb9

bb8:                                              ; preds = %bb10
  %10 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_25 = load i64, i64* %10, align 8
  %_23 = icmp ne i64 %old_pos, %_25
  %11 = zext i1 %_23 to i8
  store i8 %11, i8* %_21, align 1
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %12 = load i8, i8* %_21, align 1, !range !3
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb11, label %bb13

bb13:                                             ; preds = %bb9
; call core::str::pattern::TwoWaySearcher::byteset_contains
  %_29 = call zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17h212d02aa347b6e99E(%"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %self, i8 %b)
  br label %bb14

bb11:                                             ; preds = %bb9
  %14 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_27 = load i64, i64* %14, align 8
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hfcbb0fbd06bed45aE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %old_pos, i64 %_27)
  br label %bb12

bb12:                                             ; preds = %bb11
  br label %bb56

bb56:                                             ; preds = %bb6, %bb53, %bb12
  ret void

bb14:                                             ; preds = %bb13
  %_28 = xor i1 %_29, true
  br i1 %_28, label %bb15, label %bb18

bb18:                                             ; preds = %bb14
  br i1 %long_period, label %bb19, label %bb20

bb15:                                             ; preds = %bb14
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %16 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %needle.1
  store i64 %18, i64* %15, align 8
  %_34 = xor i1 %long_period, true
  br i1 %_34, label %bb16, label %bb17

bb17:                                             ; preds = %bb16, %bb15
  br label %bb55

bb16:                                             ; preds = %bb15
  %19 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %19, align 8
  br label %bb17

bb55:                                             ; preds = %bb54, %bb17
  br label %bb1

bb20:                                             ; preds = %bb18
  %20 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_38 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %_39 = load i64, i64* %21, align 8
; call core::cmp::max
  %22 = call i64 @_ZN4core3cmp3max17h7caa96f1af28bd3bE(i64 %_38, i64 %_39)
  store i64 %22, i64* %start1, align 8
  br label %bb21

bb19:                                             ; preds = %bb18
  %23 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %start1, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb19
  %_42 = load i64, i64* %start1, align 8
  %25 = bitcast { i64, i64 }* %_41 to i64*
  store i64 %_42, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  store i64 %needle.1, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %31 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hecab038fee1d76f3E"(i64 %28, i64 %30)
  %_40.0 = extractvalue { i64, i64 } %31, 0
  %_40.1 = extractvalue { i64, i64 } %31, 1
  br label %bb23

bb21:                                             ; preds = %bb20
  br label %bb22

bb23:                                             ; preds = %bb22
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_40.0, i64* %32, align 8
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_40.1, i64* %33, align 8
  br label %bb24

bb24:                                             ; preds = %bb34, %bb23
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %34 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h245af835769addbfE"({ i64, i64 }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %34, { i64, i64 }* %_46, align 8
  br label %bb25

bb25:                                             ; preds = %bb24
  %35 = bitcast { i64, i64 }* %_46 to i64*
  %_49 = load i64, i64* %35, align 8, !range !10
  switch i64 %_49, label %bb27 [
    i64 0, label %bb28
    i64 1, label %bb26
  ]

bb27:                                             ; preds = %bb25
  unreachable

bb28:                                             ; preds = %bb25
  br i1 %long_period, label %bb35, label %bb36

bb26:                                             ; preds = %bb25
  %36 = bitcast { i64, i64 }* %_46 to %"core::option::Option<usize>::Some"*
  %37 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %36, i32 0, i32 1
  %i = load i64, i64* %37, align 8
  %_55 = icmp ult i64 %i, %needle.1
  %38 = call i1 @llvm.expect.i1(i1 %_55, i1 true)
  br i1 %38, label %bb29, label %panic

bb29:                                             ; preds = %bb26
  %39 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i
  %_52 = load i8, i8* %39, align 1
  %40 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_58 = load i64, i64* %40, align 8
  %_57 = add i64 %_58, %i
  %_61 = icmp ult i64 %_57, %haystack.1
  %41 = call i1 @llvm.expect.i1(i1 %_61, i1 true)
  br i1 %41, label %bb30, label %panic4

panic:                                            ; preds = %bb26
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i, i64 %needle.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1337 to %"core::panic::location::Location"*)) #17
  unreachable

bb30:                                             ; preds = %bb29
  %42 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_57
  %_56 = load i8, i8* %42, align 1
  %_51 = icmp ne i8 %_52, %_56
  br i1 %_51, label %bb31, label %bb34

panic4:                                           ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_57, i64 %haystack.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1339 to %"core::panic::location::Location"*)) #17
  unreachable

bb34:                                             ; preds = %bb30
  br label %bb24

bb31:                                             ; preds = %bb30
  %43 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_65 = load i64, i64* %43, align 8
  %_63 = sub i64 %i, %_65
  %_62 = add i64 %_63, 1
  %44 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %45 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %_62
  store i64 %47, i64* %44, align 8
  %_66 = xor i1 %long_period, true
  br i1 %_66, label %bb32, label %bb33

bb33:                                             ; preds = %bb32, %bb31
  br label %bb54

bb32:                                             ; preds = %bb31
  %48 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %48, align 8
  br label %bb33

bb54:                                             ; preds = %bb49, %bb33
  br label %bb55

bb36:                                             ; preds = %bb28
  %49 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %start2, align 8
  br label %bb37

bb35:                                             ; preds = %bb28
  store i64 0, i64* %start2, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35
  %_73 = load i64, i64* %start2, align 8
  %51 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_74 = load i64, i64* %51, align 8
  %52 = bitcast { i64, i64 }* %_72 to i64*
  store i64 %_73, i64* %52, align 8
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  store i64 %_74, i64* %53, align 8
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
; call core::iter::traits::iterator::Iterator::rev
  %58 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h9c2ff5c1df054ab4E(i64 %55, i64 %57)
  %_71.0 = extractvalue { i64, i64 } %58, 0
  %_71.1 = extractvalue { i64, i64 } %58, 1
  br label %bb38

bb38:                                             ; preds = %bb37
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %59 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4db9a037043d58d9E"(i64 %_71.0, i64 %_71.1)
  %_70.0 = extractvalue { i64, i64 } %59, 0
  %_70.1 = extractvalue { i64, i64 } %59, 1
  br label %bb39

bb39:                                             ; preds = %bb38
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 0
  store i64 %_70.0, i64* %60, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 1
  store i64 %_70.1, i64* %61, align 8
  br label %bb40

bb40:                                             ; preds = %bb50, %bb39
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %62 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h81ef0f50bafd032aE"({ i64, i64 }* align 8 dereferenceable(16) %iter3)
  store { i64, i64 } %62, { i64, i64 }* %_76, align 8
  br label %bb41

bb41:                                             ; preds = %bb40
  %63 = bitcast { i64, i64 }* %_76 to i64*
  %_79 = load i64, i64* %63, align 8, !range !10
  switch i64 %_79, label %bb43 [
    i64 0, label %bb44
    i64 1, label %bb42
  ]

bb43:                                             ; preds = %bb41
  unreachable

bb44:                                             ; preds = %bb41
  %64 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %match_pos = load i64, i64* %64, align 8
  %65 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %66 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, %needle.1
  store i64 %68, i64* %65, align 8
  %_101 = xor i1 %long_period, true
  br i1 %_101, label %bb51, label %bb52

bb42:                                             ; preds = %bb41
  %69 = bitcast { i64, i64 }* %_76 to %"core::option::Option<usize>::Some"*
  %70 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %69, i32 0, i32 1
  %i5 = load i64, i64* %70, align 8
  %_85 = icmp ult i64 %i5, %needle.1
  %71 = call i1 @llvm.expect.i1(i1 %_85, i1 true)
  br i1 %71, label %bb45, label %panic6

bb45:                                             ; preds = %bb42
  %72 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i5
  %_82 = load i8, i8* %72, align 1
  %73 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_88 = load i64, i64* %73, align 8
  %_87 = add i64 %_88, %i5
  %_91 = icmp ult i64 %_87, %haystack.1
  %74 = call i1 @llvm.expect.i1(i1 %_91, i1 true)
  br i1 %74, label %bb46, label %panic7

panic6:                                           ; preds = %bb42
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %i5, i64 %needle.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1341 to %"core::panic::location::Location"*)) #17
  unreachable

bb46:                                             ; preds = %bb45
  %75 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_87
  %_86 = load i8, i8* %75, align 1
  %_81 = icmp ne i8 %_82, %_86
  br i1 %_81, label %bb47, label %bb50

panic7:                                           ; preds = %bb45
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64 %_87, i64 %haystack.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1343 to %"core::panic::location::Location"*)) #17
  unreachable

bb50:                                             ; preds = %bb46
  br label %bb40

bb47:                                             ; preds = %bb46
  %76 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_92 = load i64, i64* %76, align 8
  %77 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %78 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, %_92
  store i64 %80, i64* %77, align 8
  %_93 = xor i1 %long_period, true
  br i1 %_93, label %bb48, label %bb49

bb49:                                             ; preds = %bb48, %bb47
  br label %bb54

bb48:                                             ; preds = %bb47
  %81 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_97 = load i64, i64* %81, align 8
  %82 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %83 = sub i64 %needle.1, %_97
  store i64 %83, i64* %82, align 8
  br label %bb49

bb52:                                             ; preds = %bb51, %bb44
  %_104 = add i64 %match_pos, %needle.1
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h332e5c2b7aa9ff3fE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %match_pos, i64 %_104)
  br label %bb53

bb51:                                             ; preds = %bb44
  %84 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %84, align 8
  br label %bb52

bb53:                                             ; preds = %bb52
  br label %bb56

bb6:                                              ; preds = %bb3
  br label %bb56
}

; core::str::pattern::Searcher::next_reject
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern8Searcher11next_reject17hebc57dd49b4e6177E(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %self) unnamed_addr #0 {
start:
  %_7 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::str::pattern::SearchStep", align 8
  br label %bb1

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17hdb458a877301e438E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %_2, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::str::pattern::SearchStep"* %_2 to i64*
  %_4 = load i64, i64* %1, align 8, !range !14
  switch i64 %_4, label %bb5 [
    i64 1, label %bb3
    i64 2, label %bb4
  ]

bb5:                                              ; preds = %bb2
  br label %bb1

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Reject"*
  %3 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %2, i32 0, i32 1
  %a = load i64, i64* %3, align 8
  %4 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Reject"*
  %5 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %4, i32 0, i32 2
  %b = load i64, i64* %5, align 8
  %6 = bitcast { i64, i64 }* %_7 to i64*
  store i64 %a, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  store i64 %b, i64* %7, align 8
  %8 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %11, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %13, i64* %15, align 8
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %16, align 8
  br label %bb6

bb4:                                              ; preds = %bb2
  %17 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %17, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4
  ret void
}

; core::str::converts::from_utf8_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17h032d32390ded54e0E([0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #0 {
start:
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %v.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %v.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::char::convert::from_u32_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4char7convert18from_u32_unchecked17h7d361524661d7bb9E(i32 %i) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  store i32 %i, i32* %0, align 4
  %1 = load i32, i32* %0, align 4, !range !15
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h719dc577f533da30E(i32 %0, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #0 {
start:
  %_95 = alloca i64, align 8
  %_args = alloca { i64*, i32*, i64* }, align 8
  %_80 = alloca i64, align 8
  %_76 = alloca { i64*, i32*, i64* }, align 8
  %_75 = alloca [3 x { i8*, i64* }], align 8
  %_68 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca { i64, { [0 x i8]*, i64 } }, align 8
  %len = alloca i64, align 8
  %code = alloca i32, align 4
  store i32 %0, i32* %code, align 4
  %_5 = load i32, i32* %code, align 4
; call core::char::methods::len_utf8
  %1 = call i64 @_ZN4core4char7methods8len_utf817h360e71cac5db99caE(i32 %_5)
  store i64 %1, i64* %len, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %len, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %2 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5c68be25ecb63c6aE"([0 x i8]* nonnull align 1 %dst.0, i64 %dst.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1345 to %"core::panic::location::Location"*))
  %_9.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*
  store i64 %_7, i64* %3, align 8
  %4 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  store [0 x i8]* %_9.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  store i64 %_9.1, i64* %6, align 8
  %7 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*
  %8 = load i64, i64* %7, align 8
  switch i64 %8, label %bb4 [
    i64 1, label %bb3
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
  ]

bb4:                                              ; preds = %bb3, %bb5, %bb6, %bb7, %bb2
  store i64 %dst.1, i64* %_80, align 8
  %9 = bitcast { i64*, i32*, i64* }* %_76 to i64**
  store i64* %len, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 1
  store i32* %code, i32** %10, align 8
  %11 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 2
  store i64* %_80, i64** %11, align 8
  %12 = bitcast { i64*, i32*, i64* }* %_args to i8*
  %13 = bitcast { i64*, i32*, i64* }* %_76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast { i64*, i32*, i64* }* %_args to i64**
  %_84 = load i64*, i64** %14, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %15 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h15923aacd6b7a371E(i64* align 8 dereferenceable(8) %_84, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE")
  %_83.0 = extractvalue { i8*, i64* } %15, 0
  %_83.1 = extractvalue { i8*, i64* } %15, 1
  br label %bb12

bb3:                                              ; preds = %bb2
  %16 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0
  %18 = load [0 x i8]*, [0 x i8]** %17, align 8, !nonnull !4
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1
  %_12 = load i64, i64* %19, align 8
  %_14 = icmp uge i64 %_12, 1
  br i1 %_14, label %bb8, label %bb4

bb5:                                              ; preds = %bb2
  %20 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0
  %22 = load [0 x i8]*, [0 x i8]** %21, align 8, !nonnull !4
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1
  %_15 = load i64, i64* %23, align 8
  %_17 = icmp uge i64 %_15, 2
  br i1 %_17, label %bb9, label %bb4

bb6:                                              ; preds = %bb2
  %24 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 0
  %26 = load [0 x i8]*, [0 x i8]** %25, align 8, !nonnull !4
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 1
  %_18 = load i64, i64* %27, align 8
  %_20 = icmp uge i64 %_18, 3
  br i1 %_20, label %bb10, label %bb4

bb7:                                              ; preds = %bb2
  %28 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  %30 = load [0 x i8]*, [0 x i8]** %29, align 8, !nonnull !4
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  %_21 = load i64, i64* %31, align 8
  %_23 = icmp uge i64 %_21, 4
  br i1 %_23, label %bb11, label %bb4

bb11:                                             ; preds = %bb7
  %32 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0
  %34 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !4
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %a = getelementptr inbounds [0 x i8], [0 x i8]* %34, i64 0, i64 0
  %37 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0
  %39 = load [0 x i8]*, [0 x i8]** %38, align 8, !nonnull !4
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %b = getelementptr inbounds [0 x i8], [0 x i8]* %39, i64 0, i64 1
  %42 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 0
  %44 = load [0 x i8]*, [0 x i8]** %43, align 8, !nonnull !4
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %c = getelementptr inbounds [0 x i8], [0 x i8]* %44, i64 0, i64 2
  %47 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 0
  %49 = load [0 x i8]*, [0 x i8]** %48, align 8, !nonnull !4
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %d = getelementptr inbounds [0 x i8], [0 x i8]* %49, i64 0, i64 3
  %_56 = load i32, i32* %code, align 4
  %_55 = lshr i32 %_56, 18
  %_54 = and i32 %_55, 7
  %_53 = trunc i32 %_54 to i8
  %52 = or i8 %_53, -16
  store i8 %52, i8* %a, align 1
  %_60 = load i32, i32* %code, align 4
  %_59 = lshr i32 %_60, 12
  %_58 = and i32 %_59, 63
  %_57 = trunc i32 %_58 to i8
  %53 = or i8 %_57, -128
  store i8 %53, i8* %b, align 1
  %_64 = load i32, i32* %code, align 4
  %_63 = lshr i32 %_64, 6
  %_62 = and i32 %_63, 63
  %_61 = trunc i32 %_62 to i8
  %54 = or i8 %_61, -128
  store i8 %54, i8* %c, align 1
  %_67 = load i32, i32* %code, align 4
  %_66 = and i32 %_67, 63
  %_65 = trunc i32 %_66 to i8
  %55 = or i8 %_65, -128
  store i8 %55, i8* %d, align 1
  br label %bb16

bb16:                                             ; preds = %bb8, %bb9, %bb10, %bb11
  %_96 = load i64, i64* %len, align 8
  store i64 %_96, i64* %_95, align 8
  %56 = load i64, i64* %_95, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %57 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h2b1522af5ba3179dE"([0 x i8]* nonnull align 1 %dst.0, i64 %dst.1, i64 %56, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1347 to %"core::panic::location::Location"*))
  %_93.0 = extractvalue { [0 x i8]*, i64 } %57, 0
  %_93.1 = extractvalue { [0 x i8]*, i64 } %57, 1
  br label %bb17

bb10:                                             ; preds = %bb6
  %58 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0
  %60 = load [0 x i8]*, [0 x i8]** %59, align 8, !nonnull !4
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %a1 = getelementptr inbounds [0 x i8], [0 x i8]* %60, i64 0, i64 0
  %63 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %63, i32 0, i32 0
  %65 = load [0 x i8]*, [0 x i8]** %64, align 8, !nonnull !4
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %63, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %b2 = getelementptr inbounds [0 x i8], [0 x i8]* %65, i64 0, i64 1
  %68 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 0
  %70 = load [0 x i8]*, [0 x i8]** %69, align 8, !nonnull !4
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %c3 = getelementptr inbounds [0 x i8], [0 x i8]* %70, i64 0, i64 2
  %_41 = load i32, i32* %code, align 4
  %_40 = lshr i32 %_41, 12
  %_39 = and i32 %_40, 15
  %_38 = trunc i32 %_39 to i8
  %73 = or i8 %_38, -32
  store i8 %73, i8* %a1, align 1
  %_45 = load i32, i32* %code, align 4
  %_44 = lshr i32 %_45, 6
  %_43 = and i32 %_44, 63
  %_42 = trunc i32 %_43 to i8
  %74 = or i8 %_42, -128
  store i8 %74, i8* %b2, align 1
  %_48 = load i32, i32* %code, align 4
  %_47 = and i32 %_48, 63
  %_46 = trunc i32 %_47 to i8
  %75 = or i8 %_46, -128
  store i8 %75, i8* %c3, align 1
  br label %bb16

bb9:                                              ; preds = %bb5
  %76 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %76, i32 0, i32 0
  %78 = load [0 x i8]*, [0 x i8]** %77, align 8, !nonnull !4
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %76, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %a4 = getelementptr inbounds [0 x i8], [0 x i8]* %78, i64 0, i64 0
  %81 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %82 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %81, i32 0, i32 0
  %83 = load [0 x i8]*, [0 x i8]** %82, align 8, !nonnull !4
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %81, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %b5 = getelementptr inbounds [0 x i8], [0 x i8]* %83, i64 0, i64 1
  %_31 = load i32, i32* %code, align 4
  %_30 = lshr i32 %_31, 6
  %_29 = and i32 %_30, 31
  %_28 = trunc i32 %_29 to i8
  %86 = or i8 %_28, -64
  store i8 %86, i8* %a4, align 1
  %_34 = load i32, i32* %code, align 4
  %_33 = and i32 %_34, 63
  %_32 = trunc i32 %_33 to i8
  %87 = or i8 %_32, -128
  store i8 %87, i8* %b5, align 1
  br label %bb16

bb8:                                              ; preds = %bb3
  %88 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0
  %90 = load [0 x i8]*, [0 x i8]** %89, align 8, !nonnull !4
  %91 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %a6 = getelementptr inbounds [0 x i8], [0 x i8]* %90, i64 0, i64 0
  %_25 = load i32, i32* %code, align 4
  %93 = trunc i32 %_25 to i8
  store i8 %93, i8* %a6, align 1
  br label %bb16

bb17:                                             ; preds = %bb16
  %94 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_93.0, 0
  %95 = insertvalue { [0 x i8]*, i64 } %94, i64 %_93.1, 1
  ret { [0 x i8]*, i64 } %95

bb12:                                             ; preds = %bb4
  %96 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_args, i32 0, i32 1
  %_87 = load i32*, i32** %96, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %97 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hd10eb7802976ab03E(i32* align 4 dereferenceable(4) %_87, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17hef35279af1b2dff0E")
  %_86.0 = extractvalue { i8*, i64* } %97, 0
  %_86.1 = extractvalue { i8*, i64* } %97, 1
  br label %bb13

bb13:                                             ; preds = %bb12
  %98 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_args, i32 0, i32 2
  %_90 = load i64*, i64** %98, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %99 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h15923aacd6b7a371E(i64* align 8 dereferenceable(8) %_90, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE")
  %_89.0 = extractvalue { i8*, i64* } %99, 0
  %_89.1 = extractvalue { i8*, i64* } %99, 1
  br label %bb14

bb14:                                             ; preds = %bb13
  %100 = bitcast [3 x { i8*, i64* }]* %_75 to { i8*, i64* }*
  %101 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %100, i32 0, i32 0
  store i8* %_83.0, i8** %101, align 8
  %102 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %100, i32 0, i32 1
  store i64* %_83.1, i64** %102, align 8
  %103 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_75, i32 0, i32 1
  %104 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %103, i32 0, i32 0
  store i8* %_86.0, i8** %104, align 8
  %105 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %103, i32 0, i32 1
  store i64* %_86.1, i64** %105, align 8
  %106 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_75, i32 0, i32 2
  %107 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %106, i32 0, i32 0
  store i8* %_89.0, i8** %107, align 8
  %108 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %106, i32 0, i32 1
  store i64* %_89.1, i64** %108, align 8
  %_72.0 = bitcast [3 x { i8*, i64* }]* %_75 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_68, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1194 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_72.0, i64 3)
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_68, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1349 to %"core::panic::location::Location"*)) #17
  unreachable
}

; core::char::methods::<impl char>::encode_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h543c00400fe07540E"(i32 %self, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #0 {
start:
  %0 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %0)
; call core::char::methods::encode_utf8_raw
  %1 = call { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h719dc577f533da30E(i32 %self, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1)
  %_7.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked_mut
  %2 = call { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17h032d32390ded54e0E([0 x i8]* nonnull align 1 %_7.0, i64 %_7.1)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_5.0, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %_5.1, 1
  ret { [0 x i8]*, i64 } %4
}

; core::char::methods::<impl char>::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817he2ec5dc799e5e2a6E"(i32 %self) unnamed_addr #0 {
start:
  %0 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %0)
; call core::char::methods::len_utf8
  %1 = call i64 @_ZN4core4char7methods8len_utf817h360e71cac5db99caE(i32 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4char7methods8len_utf817h360e71cac5db99caE(i32 %code) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_2 = icmp ult i32 %code, 128
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_4 = icmp ult i32 %code, 2048
  br i1 %_4, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb1
  %1 = load i64, i64* %0, align 8
  ret i64 %1

bb4:                                              ; preds = %bb2
  %_6 = icmp ult i32 %code, 65536
  br i1 %_6, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  store i64 2, i64* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  br label %bb9

bb6:                                              ; preds = %bb4
  store i64 4, i64* %0, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
  store i64 3, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  br label %bb8
}

; core::hint::unreachable_unchecked
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define internal void @_ZN4core4hint21unreachable_unchecked17h4d499a5e16e84ca9E() unnamed_addr #4 {
start:
  unreachable
}

; core::hint::black_box
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4hint9black_box17h8676d35106463f54E() unnamed_addr #0 {
start:
  call void asm sideeffect "", "r,~{memory}"({}* undef), !srcloc !16
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h245af835769addbfE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h21e8f0245355e7daE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h9a017c3e5510d0ceE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h2f16aa07bb29ff6dE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h9c2ff5c1df054ab4E(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::rev::Rev<T>::new
  %0 = call { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h98d82ac7f454598aE"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::take
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator4take17h8e52cdc81e80ed9aE(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>") dereferenceable(32) %0, %"core::str::iter::CharIndices"* noalias nocapture dereferenceable(24) %self, i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca %"core::str::iter::CharIndices", align 8
  %1 = bitcast %"core::str::iter::CharIndices"* %_3 to i8*
  %2 = bitcast %"core::str::iter::CharIndices"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call core::iter::adapters::take::Take<I>::new
  call void @"_ZN4core4iter8adapters4take13Take$LT$I$GT$3new17h074b3f49342c8d4bE"(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>") dereferenceable(32) %0, %"core::str::iter::CharIndices"* noalias nocapture dereferenceable(24) %_3, i64 %n)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::adapters::rev::Rev<T>::new
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h98d82ac7f454598aE"(i64 %iter.0, i64 %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::iter::adapters::take::Take<I>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters4take13Take$LT$I$GT$3new17h074b3f49342c8d4bE"(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>") dereferenceable(32) %0, %"core::str::iter::CharIndices"* noalias nocapture dereferenceable(24) %iter, i64 %n) unnamed_addr #1 {
start:
  %_3 = alloca %"core::str::iter::CharIndices", align 8
  %1 = bitcast %"core::str::iter::CharIndices"* %_3 to i8*
  %2 = bitcast %"core::str::iter::CharIndices"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* %0 to %"core::str::iter::CharIndices"*
  %4 = bitcast %"core::str::iter::CharIndices"* %3 to i8*
  %5 = bitcast %"core::str::iter::CharIndices"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  %6 = getelementptr inbounds %"core::iter::adapters::take::Take<core::str::iter::CharIndices>", %"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* %0, i32 0, i32 1
  store i64 %n, i64* %6, align 8
  ret void
}

; core::time::Duration::subsec_nanos
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4time8Duration12subsec_nanos17h252c225f64712e7bE({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %1 = load i32, i32* %0, align 8
  ret i32 %1
}

; core::time::Duration::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @_ZN4core4time8Duration3new17hb8d9d91f83c19e1eE(i64 %secs, i32 %nanos) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i32 }, align 8
  %_7 = udiv i32 %nanos, 1000000000
  %_6 = zext i32 %_7 to i64
; call core::num::<impl u64>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_add17h244c153ea87c2e65E"(i64 %secs, i64 %_6)
  store { i64, i64 } %1, { i64, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %_9 = load i64, i64* %2, align 8, !range !10
  switch i64 %_9, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [25 x i8] }>* @alloc1350 to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1352 to %"core::panic::location::Location"*)) #17
  unreachable

bb4:                                              ; preds = %bb1
  %3 = bitcast { i64, i64 }* %_4 to %"core::option::Option<u64>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %3, i32 0, i32 1
  %secs1 = load i64, i64* %4, align 8
  %nanos2 = urem i32 %nanos, 1000000000
  %5 = bitcast { i64, i32 }* %0 to i64*
  store i64 %secs1, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %nanos2, i32* %6, align 8
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i64, i32 } undef, i64 %8, 0
  %12 = insertvalue { i64, i32 } %11, i32 %10, 1
  ret { i64, i32 } %12
}

; core::time::Duration::as_secs
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4time8Duration7as_secs17habee77b4ea9a1951E({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64, i32 }* %self to i64*
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::alloc::layout::Layout::from_size_align_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h1ec63abde4b8f397E(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
; call core::num::nonzero::NonZeroUsize::new_unchecked
  %_4 = call i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha3548140cda189c3E(i64 %align), !range !11
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 %size, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_4, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !11
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::size
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout4size17h91db77a3b1a5e199E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64, i64 }* %self to i64*
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::alloc::layout::Layout::align
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout5align17h729b4280c4bf9728E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_2 = load i64, i64* %0, align 8, !range !11
; call core::num::nonzero::NonZeroUsize::get
  %1 = call i64 @_ZN4core3num7nonzero12NonZeroUsize3get17he8aa870fecac5e3fE(i64 %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h868cbf464119f9d6E(i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf28d6b74c7001f9cE"(i64 1, i64 %n)
  %_5.0 = extractvalue { i64, i64 } %1, 0
  %_5.1 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h5ae1cd34ec0dcd91E"(i64 %_5.0, i64 %_5.1)
  %_4.0 = extractvalue { i64, i64 } %2, 0
  %_4.1 = extractvalue { i64, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h928fbc056bcf543cE"(i64 %_4.0, i64 %_4.1)
  store { i64, i64 } %3, { i64, i64 }* %_3, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = bitcast { i64, i64 }* %_3 to i64*
  %_9 = load i64, i64* %4, align 8, !range !10
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %5 = bitcast { i64, i64 }* %_3 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"* %5, i32 0, i32 1
  %val = load i64, i64* %6, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h0cad044023922896E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1354 to %"core::panic::location::Location"*))
  store { i64, i64 } %7, { i64, i64 }* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1
  ret { i64, i64 } %13

bb9:                                              ; preds = %bb5
; call core::alloc::layout::Layout::from_size_align_unchecked
  %14 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h1ec63abde4b8f397E(i64 %val, i64 1)
  %_13.0 = extractvalue { i64, i64 } %14, 0
  %_13.1 = extractvalue { i64, i64 } %14, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_13.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_13.1, i64* %16, align 8
  br label %bb11
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define internal nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h806222e6ea87dbe0E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::alloc::layout::Layout::align
  %_3 = call i64 @_ZN4core5alloc6layout6Layout5align17h729b4280c4bf9728E({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = inttoptr i64 %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b18692724626ab3E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::clone::Clone::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core5clone5Clone5clone17ha8aed5cd0de1d64dE({}* nonnull align 1 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17ha67e2508bd5e1939E"(i64* align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::slice::<impl [T]>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h7ba143a03843e6fcE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_15 = alloca i64, align 8
  %_12 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca i8, align 1
  %needle = alloca { [0 x i8]*, i64 }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !4
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1
  %_4.1 = load i64, i64* %6, align 8
  %_5 = icmp uge i64 %self.1, %_4.1
  br i1 %_5, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %2, align 1
  br label %bb3

bb2:                                              ; preds = %start
  store i64 %_4.1, i64* %_15, align 8
  %7 = load i64, i64* %_15, align 8
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %8 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h1d395ff7811aff4eE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %7, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1356 to %"core::panic::location::Location"*))
  %_13.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb4

bb4:                                              ; preds = %bb2
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 0
  store [0 x i8]* %_13.0, [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 1
  store i64 %_13.1, i64* %10, align 8
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_9 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h299881825556c02dE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %needle, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %_12)
  br label %bb5

bb5:                                              ; preds = %bb4
  %11 = zext i1 %_9 to i8
  store i8 %11, i8* %2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb5
  %12 = load i8, i8* %2, align 1, !range !3
  %13 = trunc i8 %12 to i1
  ret i1 %13
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h5828fde3815536d1E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %0 = call align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hd68ebd3a82753071E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hc23c52ee9c6d716eE"([0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hbd894f566902fc2bE"([0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* nonnull align 8 %self.0, i64 %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf71e26b97ed95872E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8a23806c3646f5c4E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { { [0 x i8]*, i64 }, i32, [1 x i32] }* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h10e5bf012fae53beE"([0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* %self.0 to { { [0 x i8]*, i64 }, i32, [1 x i32] }*
  ret { { [0 x i8]*, i64 }, i32, [1 x i32] }* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf1a6afbc70a6a056E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17he30888e4c2bd03e8E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %0 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17haeecfe6744898440E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h09211c96900f555aE(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::slice::raw::debug_check_data_len
  call void @_ZN4core5slice3raw20debug_check_data_len17hd4d031d5eeb17e1fE(i8* %data, i64 %len)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hefa9421b0de17831E(i8* %data, i64 %len)
  %_6.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_6.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_6.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::raw::debug_check_data_len
; Function Attrs: nonlazybind uwtable
define void @_ZN4core5slice3raw20debug_check_data_len17hd4d031d5eeb17e1fE(i8* %_data, i64 %_len) unnamed_addr #1 {
start:
  ret void
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8a23806c3646f5c4E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %end = alloca i8*, align 8
  %2 = alloca { i8*, i8* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf1a6afbc70a6a056E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h507c3b3dc0fa49a5E"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 1, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %4 = getelementptr i8, i8* %ptr, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1
  store i8* %6, i8** %0, align 8
  %7 = load i8*, i8** %0, align 8
  store i8* %7, i8** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b18692724626ab3E"(i8* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  store i8* %5, i8** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load i8*, i8** %end, align 8
  %8 = bitcast { i8*, i8* }* %2 to i8**
  store i8* %_18, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  store i8* %_21, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8, !nonnull !4
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = insertvalue { i8*, i8* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i8* } %14, i8* %13, 1
  ret { i8*, i8* } %15
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hbd894f566902fc2bE"([0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca { { [0 x i8]*, i64 }, i32, [1 x i32] }*, align 8
  %1 = alloca i8*, align 8
  %end = alloca { { [0 x i8]*, i64 }, i32, [1 x i32] }*, align 8
  %2 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call { { [0 x i8]*, i64 }, i32, [1 x i32] }* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h10e5bf012fae53beE"([0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* nonnull align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h0d3629d7463559faE"({ { [0 x i8]*, i64 }, i32, [1 x i32] }* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 24, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast { { [0 x i8]*, i64 }, i32, [1 x i32] }* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds { { [0 x i8]*, i64 }, i32, [1 x i32] }, { { [0 x i8]*, i64 }, i32, [1 x i32] }* %ptr, i64 %slice.1
  store { { [0 x i8]*, i64 }, i32, [1 x i32] }* %6, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %0, align 8
  %7 = load { { [0 x i8]*, i64 }, i32, [1 x i32] }*, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %0, align 8
  store { { [0 x i8]*, i64 }, i32, [1 x i32] }* %7, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h3d6739d030649000E"({ { [0 x i8]*, i64 }, i32, [1 x i32] }* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to { { [0 x i8]*, i64 }, i32, [1 x i32] }*
  store { { [0 x i8]*, i64 }, i32, [1 x i32] }* %8, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load { { [0 x i8]*, i64 }, i32, [1 x i32] }*, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %end, align 8
  %9 = bitcast { i64*, i64* }* %2 to i64**
  store i64* %_18, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %11 = bitcast i64** %10 to { { [0 x i8]*, i64 }, i32, [1 x i32] }**
  store { { [0 x i8]*, i64 }, i32, [1 x i32] }* %_21, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %11, align 8
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !4
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = insertvalue { i64*, i64* } undef, i64* %13, 0
  %17 = insertvalue { i64*, i64* } %16, i64* %15, 1
  ret { i64*, i64* } %17
}

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hdd022334c8c1ab79E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %_5.i = alloca i64, align 8
  %1 = bitcast { i8*, i8* }* %self to i8**
  %_4.i = load i8*, i8** %1, align 8, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %_4.i)
  %2 = bitcast { i8*, i8* }* %self to i8**
  %start1.i = load i8*, i8** %2, align 8, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_9.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %start1.i)
  %3 = icmp eq i64 1, 0
  br i1 %3, label %bb4.i, label %bb7.i

bb4.i:                                            ; preds = %start
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_13.i = load i8*, i8** %4, align 8
  %_12.i = ptrtoint i8* %_13.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %start1.i)
  %_14.i = ptrtoint i8* %_15.i to i64
  %5 = sub i64 %_12.i, %_14.i
  store i64 %5, i64* %_5.i, align 8
  br label %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17hdaf1a24cd8546e49E.exit"

bb7.i:                                            ; preds = %start
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_19.i = load i8*, i8** %6, align 8
  %_18.i = ptrtoint i8* %_19.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_21.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %start1.i)
  %_20.i = ptrtoint i8* %_21.i to i64
  %7 = sub nuw i64 %_18.i, %_20.i
  store i64 %7, i64* %0, align 8
  %diff.i = load i64, i64* %0, align 8
  %8 = udiv exact i64 %diff.i, 1
  store i64 %8, i64* %_5.i, align 8
  br label %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17hdaf1a24cd8546e49E.exit"

"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17hdaf1a24cd8546e49E.exit": ; preds = %bb7.i, %bb4.i
  %9 = load i64, i64* %_5.i, align 8
; call core::slice::raw::from_raw_parts
  %10 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h09211c96900f555aE(i8* %_3.i, i64 %9)
  %11 = extractvalue { [0 x i8]*, i64 } %10, 0
  %12 = extractvalue { [0 x i8]*, i64 } %10, 1
  %13 = extractvalue { [0 x i8]*, i64 } %10, 0
  %14 = extractvalue { [0 x i8]*, i64 } %10, 1
  br label %bb1

bb1:                                              ; preds = %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17hdaf1a24cd8546e49E.exit"
  %15 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %16 = insertvalue { [0 x i8]*, i64 } %15, i64 %14, 1
  ret { [0 x i8]*, i64 } %16
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h1d395ff7811aff4eE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hfb883a99dd5a556bE"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h2b1522af5ba3179dE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7bed39f55610b457E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5c68be25ecb63c6aE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h853eee6cd3c5c888E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::option::Option<T>::unwrap_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable(1) i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hdf75fb8e3caecc60E"(i8* align 1 dereferenceable_or_null(1) %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_3 = alloca i8, align 1
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  store i8 0, i8* %_3, align 1
  store i8 1, i8* %_3, align 1
  %3 = bitcast i8** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_2 = select i1 %5, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17h4d499a5e16e84ca9E() #17
          to label %unreachable unwind label %cleanup

bb3:                                              ; preds = %start
  store i8 0, i8* %_3, align 1
  %val = load i8*, i8** %self, align 8, !nonnull !4
  ret i8* %val

unreachable:                                      ; preds = %bb1
  unreachable

bb7:                                              ; preds = %cleanup
  %6 = bitcast i8** %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_4 = select i1 %8, i64 0, i64 1
  %9 = icmp eq i64 %_4, 1
  br i1 %9, label %bb5, label %bb4

cleanup:                                          ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb7

bb5:                                              ; preds = %bb7
  %15 = load i8, i8* %_3, align 1, !range !3
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb6, label %bb4

bb4:                                              ; preds = %bb6, %bb5, %bb7
  %17 = bitcast { i8*, i32 }* %2 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

bb6:                                              ; preds = %bb5
  br label %bb4
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17hc18f39431e719b05E"(i32 %0, i32 %1) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i32, i32 }* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !13
  %_3 = zext i32 %6 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i32, i32 }* %self to %"core::option::Option<u32>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %7, i32 0, i32 1
  %x = load i32, i32* %8, align 4
  store i8 0, i8* %_9, align 1
  store i32 %x, i32* %_7, align 4
  %9 = load i32, i32* %_7, align 4
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
  %_5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h35c4836d1b9a0ca8E"(i32 %9), !range !15
  br label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %10 = load i8, i8* %_9, align 1, !range !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %12 = load i32, i32* %2, align 4, !range !2
  ret i32 %12

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17h0d4b92859e013592E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_3 = alloca { i8*, i64 }, align 8
  %0 = bitcast { i8*, i64 }* %_3 to {}**
  store {}* null, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 0
  %2 = load i8*, i8** %1, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
; call core::mem::replace
  %5 = call { i8*, i64 } @_ZN4core3mem7replace17h58514a87e863955eE({ i8*, i64 }* align 8 dereferenceable(16) %self, i8* align 1 %2, i64 %4)
  %6 = extractvalue { i8*, i64 } %5, 0
  %7 = extractvalue { i8*, i64 } %5, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h56892205d6c47282E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2, i64 %err.0, i64 %err.1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !10
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  store i64 %err.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  store i64 %err.1, i64* %9, align 8
  %10 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %10, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %11 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %12 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %11, i32 0, i32 1
  %v = load i64, i64* %12, align 8
  %13 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*
  %14 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %13, i32 0, i32 1
  store i64 %v, i64* %14, align 8
  %15 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %15, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %16 = load i8, i8* %_7, align 1, !range !3
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  ret void

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h5ae1cd34ec0dcd91E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !10
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err"* %6, i32 0, i32 1
  %8 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %8, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %10 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %9, i32 0, i32 1
  %v = load i64, i64* %10, align 8
  %11 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"* %11, i32 0, i32 1
  store i64 %v, i64* %12, align 8
  %13 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %13, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %14 = load i8, i8* %_7, align 1, !range !3
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8, !range !10
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1
  ret { i64, i64 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h6b1364bf3fffbb5fE"(i8* %0) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i8** %1 to %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"*
  %6 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"* %5 to %"core::alloc::AllocError"*
  %7 = bitcast i8** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !4
  store i8* %v, i8** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %8 = load i8, i8* %_7, align 1, !range !3
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %10 = load i8*, i8** %1, align 8
  ret i8* %10

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h5cf29493d7183f9eE"(i32 %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
  %self = alloca i32, align 4
  store i32 %0, i32* %self, align 4
  %2 = load i32, i32* %self, align 4, !range !2
  %3 = sub i32 %2, 1114112
  %4 = icmp eq i32 %3, 0
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1358 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #17
  unreachable

bb3:                                              ; preds = %start
  %val = load i32, i32* %self, align 4, !range !15
  ret i32 %val
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hc131a271405e3408E"(i64 %0, i64 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 {
start:
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !10
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1358 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #17
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"core::option::Option<i64>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<i64>::Some", %"core::option::Option<i64>::Some"* %6, i32 0, i32 1
  %val = load i64, i64* %7, align 8
  ret i64 %val
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hee5f133cbfe42956E"(%"core::result::Result<alloc::string::String, ParseError>"* noalias nocapture sret(%"core::result::Result<alloc::string::String, ParseError>") dereferenceable(32) %0, %"core::result::Result<TmFmt, ParseError>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_10 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_8 = alloca %TmFmt, align 8
  %_7 = alloca { %TmFmt }, align 8
  %_5 = alloca %"alloc::string::String", align 8
  %t = alloca %TmFmt, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %1 = bitcast %"core::result::Result<TmFmt, ParseError>"* %self to i32*
  %2 = load i32, i32* %1, align 8, !range !13
  %_3 = zext i32 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<TmFmt, ParseError>"* %self to %"core::result::Result<TmFmt, ParseError>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<TmFmt, ParseError>::Ok", %"core::result::Result<TmFmt, ParseError>::Ok"* %3, i32 0, i32 1
  %5 = bitcast %TmFmt* %t to i8*
  %6 = bitcast %TmFmt* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false)
  store i8 0, i8* %_11, align 1
  %7 = bitcast %TmFmt* %_8 to i8*
  %8 = bitcast %TmFmt* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false)
  %9 = bitcast { %TmFmt }* %_7 to %TmFmt*
  %10 = bitcast %TmFmt* %9 to i8*
  %11 = bitcast %TmFmt* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false)
  %12 = bitcast { %TmFmt }* %_7 to %TmFmt*
; call time::strftime::{{closure}}
  call void @"_ZN4time8strftime28_$u7b$$u7b$closure$u7d$$u7d$17hb04bcf64c7f53d14E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_5, %TmFmt* noalias nocapture dereferenceable(32) %12)
  br label %bb4

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<TmFmt, ParseError>"* %self to %"core::result::Result<TmFmt, ParseError>::Err"*
  %14 = getelementptr inbounds %"core::result::Result<TmFmt, ParseError>::Err", %"core::result::Result<TmFmt, ParseError>::Err"* %13, i32 0, i32 1
  %15 = bitcast %ParseError* %e to i8*
  %16 = bitcast %ParseError* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 12, i1 false)
  %17 = bitcast %ParseError* %_10 to i8*
  %18 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 12, i1 false)
  %19 = bitcast %"core::result::Result<alloc::string::String, ParseError>"* %0 to %"core::result::Result<alloc::string::String, ParseError>::Err"*
  %20 = getelementptr inbounds %"core::result::Result<alloc::string::String, ParseError>::Err", %"core::result::Result<alloc::string::String, ParseError>::Err"* %19, i32 0, i32 1
  %21 = bitcast %ParseError* %20 to i8*
  %22 = bitcast %ParseError* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 12, i1 false)
  %23 = bitcast %"core::result::Result<alloc::string::String, ParseError>"* %0 to i32*
  store i32 1, i32* %23, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_11, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  %26 = bitcast %"core::result::Result<alloc::string::String, ParseError>"* %0 to %"core::result::Result<alloc::string::String, ParseError>::Ok"*
  %27 = getelementptr inbounds %"core::result::Result<alloc::string::String, ParseError>::Ok", %"core::result::Result<alloc::string::String, ParseError>::Ok"* %26, i32 0, i32 1
  %28 = bitcast %"alloc::string::String"* %27 to i8*
  %29 = bitcast %"alloc::string::String"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false)
  %30 = bitcast %"core::result::Result<alloc::string::String, ParseError>"* %0 to i32*
  store i32 0, i32* %30, align 8
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hef8fcceff9b55f2aE"(%"core::result::Result<(), ParseError>"* align 4 dereferenceable(12) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %2 = load i32, i32* %1, align 4, !range !17
  %3 = sub i32 %2, 15
  %4 = icmp eq i32 %3, 0
  %_2 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_2, 0
  br i1 %5, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %0, align 1, !range !3
  %7 = trunc i8 %6 to i1
  ret i1 %7
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbbb5118fc604e871E"(i1 zeroext %0, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::fmt::Error", align 1
  %self = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %self, align 1
  %4 = load i8, i8* %self, align 1, !range !3
  %5 = trunc i8 %4 to i1
  %_3 = zext i1 %5 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  ret void

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"core::fmt::Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #17
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4866e2075f317ed1E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i8* %1, i64 %2, i64* align 8 dereferenceable(16) %op) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_3 = select i1 %7, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %t.0 = load i8*, i8** %8, align 8, !nonnull !4
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %9, align 8
  %10 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 0
  store i8* %t.0, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 1
  store i64 %t.1, i64* %13, align 8
  %14 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb7

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %15 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*
; call alloc::raw_vec::finish_grow::{{closure}}
  %16 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h3e97a4e750ffcf13E"(i64* align 8 dereferenceable(16) %op)
  %_7.0 = extractvalue { i64, i64 } %16, 0
  %_7.1 = extractvalue { i64, i64 } %16, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %17 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %_7.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %_7.1, i64* %20, align 8
  %21 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %22 = load i8, i8* %_11, align 1, !range !3
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h569cf69b43bcc757E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::layout::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %_3 = select i1 %7, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %t.0 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %9, align 8, !range !11
  %10 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %t.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %t.1, i64* %13, align 8
  %14 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb7

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %15 = bitcast { %"core::alloc::layout::LayoutError" }* %_9 to %"core::alloc::layout::LayoutError"*
; call alloc::raw_vec::finish_grow::{{closure}}
  %16 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h4d539cfdd8669259E"()
  %_7.0 = extractvalue { i64, i64 } %16, 0
  %_7.1 = extractvalue { i64, i64 } %16, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %17 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %_7.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %_7.1, i64* %20, align 8
  %21 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %22 = load i8, i8* %_11, align 1, !range !3
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd79042168a8a2a44E"(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>") dereferenceable(24) %0, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !10
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %4 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %4, align 8
  br label %bb7

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0
  %e.0 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  %e.1 = load i64, i64* %8, align 8
  store i8 0, i8* %_11, align 1
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0
  store i64 %e.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  store i64 %e.1, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
; call alloc::raw_vec::handle_reserve::{{closure}}
  %15 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h84f138a5342b8c06E"(i64 %12, i64 %14)
  %_7.0 = extractvalue { i64, i64 } %15, 0
  %_7.1 = extractvalue { i64, i64 } %15, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %16 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"*
  %17 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"* %16, i32 0, i32 1
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  store i64 %_7.0, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  store i64 %_7.1, i64* %19, align 8
  %20 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %20, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %21 = load i8, i8* %_11, align 1, !range !3
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h0558b6ecc8d7f66dE"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h6f338c639223fec0E"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h059a94856410ab5cE"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hb144a816418b5d1eE"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h0c3cf7627cd70539E"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hb37319e694f2875aE"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h25453981dba40c0fE"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h04daf42c8504a693E"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h3149508228a2d775E"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h9ab0d8f9437e663eE"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h3a4c0b750ba517c9E"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h243230b50df254e8E"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h452184aec0b22c82E"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h60e393cbadd42676E"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h4e7f3463924622b4E"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h85a5271fc8ef1d06E"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h553acefefa6b22c9E"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h8296faa47a757e0bE"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h6b844ee593df8e64E"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hced54240fd49295cE"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h725588f24521bb0dE"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h77012f4704197d9cE"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h769e5ea3aef35459E"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h141b6c3253d9f0ddE"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h7d24a2d065f91800E"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hf82a1c7c4577734fE"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h8100be6a0601dbfbE"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h97852e3c11797a56E"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h8810976e3a1ce661E"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hb01f810e32059591E"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h9848281e4df8f721E"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h359691aac1bd416dE"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17ha30cce3eb1a405dbE"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h9c3bb99527a8c146E"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17ha55731e76f3ae3f9E"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hdece651e284427ceE"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17ha582816c9efe2076E"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h3134636fcd620212E"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17haf2301c5da35902aE"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h78d26742b8a64d3eE"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hcd5ae566b44af5ecE"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hd435edf1e528a93fE"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hcdc27219f9118a0eE"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h9cf647ac8a92be8aE"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hcffbc5bbda29b168E"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17he3875133275c82cbE"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hd17419fafa849f15E"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hed449cac03df3c8bE"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hd2d1303ae950faecE"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hfa37b2734b7379c4E"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hdee17e7e164c3ad0E"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hc4965f28730396d4E"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hdf46c07695dab206E"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h44dbdcff96e9d0d7E"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17he784d35e5813268fE"(i96 %0, i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h51951e31a8994d12E"(i64* align 8 dereferenceable(8) %op.0, i64* align 8 dereferenceable(8) %op.1)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17he9eb24d66d36173eE"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17ha67b32f4e0df7594E"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hee0b9428efe6bf91E"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h3c034cf464671c77E"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hf1886cdfe2fb415aE"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h558a4055b1e7498bE"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hfe0a00998e0b6819E"(i96 %0, i64* align 8 dereferenceable(8) %op) unnamed_addr #0 {
start:
  %1 = alloca i96, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %ParseError, align 4
  %e = alloca %ParseError, align 4
  %_6 = alloca { {} }, align 1
  %2 = alloca %"core::result::Result<(), ParseError>", align 4
  %3 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %3, align 8
  %4 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %5 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 12, i1 false)
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %6 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !17
  %8 = sub i32 %7, 15
  %9 = icmp eq i32 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %10 = bitcast { {} }* %_6 to {}*
; call time::parse::parse_type::{{closure}}
  %11 = call i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17he0b5bdfd5f7babd1E"(i64* align 8 dereferenceable(8) %op)
  store i96 %11, i96* %1, align 8
  %12 = bitcast %"core::result::Result<(), ParseError>"* %2 to i8*
  %13 = bitcast i96* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 12, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %15 = bitcast %"core::result::Result<(), ParseError>::Err"* %14 to %ParseError*
  %16 = bitcast %ParseError* %e to i8*
  %17 = bitcast %ParseError* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %ParseError* %_9 to i8*
  %19 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false)
  %20 = bitcast %"core::result::Result<(), ParseError>"* %2 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  %24 = load i8, i8* %_10, align 1, !range !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb5

bb4:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %26 = bitcast %"core::result::Result<(), ParseError>"* %2 to i96*
  %27 = load i96, i96* %26, align 4
  ret i96 %27

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define void @_ZN4core9panicking13assert_failed17h8f54b190653406bdE(i8 %kind, i32* align 4 dereferenceable(4) %0, i32* align 4 dereferenceable(4) %1, %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %args, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #5 {
start:
  %_12 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca i32*, align 8
  %left = alloca i32*, align 8
  store i32* %0, i32** %left, align 8
  store i32* %1, i32** %right, align 8
  %_6.0 = bitcast i32** %left to {}*
  %_9.0 = bitcast i32** %right to {}*
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_12 to i8*
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false)
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h90ea89642d218837E(i8 %kind, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*), {}* nonnull align 1 %_9.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %_12, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #17
  unreachable
}

; <&mut W as core::fmt::Write>::write_char
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h777ad6375bd9f076E"(%"alloc::string::String"** align 8 dereferenceable(8) %self, i32 %c) unnamed_addr #1 {
start:
  %_3 = load %"alloc::string::String"*, %"alloc::string::String"** %self, align 8, !nonnull !4
; call <alloc::string::String as core::fmt::Write>::write_char
  %0 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h974c18d4bb978d77E"(%"alloc::string::String"* align 8 dereferenceable(24) %_3, i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&mut W as core::fmt::Write>::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h859a29110b41c985E"(%"alloc::string::String"** align 8 dereferenceable(8) %self, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %args) unnamed_addr #1 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
  %_3 = load %"alloc::string::String"*, %"alloc::string::String"** %self, align 8, !nonnull !4
  %0 = bitcast %"core::fmt::Arguments"* %_4 to i8*
  %1 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 48, i1 false)
; call core::fmt::Write::write_fmt
  %2 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17he84373d6b635f799E(%"alloc::string::String"* align 8 dereferenceable(24) %_3, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&mut W as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h6543d32f09a2df1fE"(%"alloc::string::String"** align 8 dereferenceable(8) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %_3 = load %"alloc::string::String"*, %"alloc::string::String"** %self, align 8, !nonnull !4
; call <alloc::string::String as core::fmt::Write>::write_str
  %0 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h85eefd4dbd879a1cE"(%"alloc::string::String"* align 8 dereferenceable(24) %_3, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h168058f7348a3156E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h34fbda361d736727E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3634746b48032267E"(i64 %t.0, i64 %t.1) unnamed_addr #1 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %t.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %t.1, 1
  ret { i64, i64 } %1
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define i96 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5bb0a6972efa270eE"(i96 %0) unnamed_addr #1 {
start:
  %1 = alloca %ParseError, align 4
  %2 = alloca i96, align 8
  %t = alloca %ParseError, align 4
  store i96 %0, i96* %2, align 8
  %3 = bitcast %ParseError* %t to i8*
  %4 = bitcast i96* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 12, i1 false)
  %5 = bitcast %ParseError* %1 to i8*
  %6 = bitcast %ParseError* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 12, i1 false)
  %7 = bitcast %ParseError* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7aee1b2260a4f0c2E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha17d1feccb1f1190E"(i8* nonnull %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h02d8fc193b287a2bE"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he526ee7aa7f41a7bE"(i64 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %0 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hfff5608c8c7d68e2E"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <&str as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17heea0c75f67ffdbcdE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %haystack.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !4
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %10, align 8
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %self.1, i64* %11, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %13 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !4
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %17 = insertvalue { [0 x i8]*, i64 } %16, i64 %15, 1
  %_7.0 = extractvalue { [0 x i8]*, i64 } %17, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %17, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::slice::<impl [T]>::starts_with
  %18 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h7ba143a03843e6fcE"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, [0 x i8]* nonnull align 1 %_7.0, i64 %_7.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %18
}

; <&str as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17he965a2a590af4c44E"(%"core::str::pattern::StrSearcher"* noalias nocapture sret(%"core::str::pattern::StrSearcher") dereferenceable(104) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
; call core::str::pattern::StrSearcher::new
  call void @_ZN4core3str7pattern11StrSearcher3new17h95d68a0534dab867E(%"core::str::pattern::StrSearcher"* noalias nocapture sret(%"core::str::pattern::StrSearcher") dereferenceable(104) %0, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::string::String as core::fmt::Write>::write_char
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h974c18d4bb978d77E"(%"alloc::string::String"* align 8 dereferenceable(24) %self, i32 %c) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h4f34d43a70613051E(%"alloc::string::String"* align 8 dereferenceable(24) %self, i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !3
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; <alloc::string::String as core::fmt::Write>::write_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h85eefd4dbd879a1cE"(%"alloc::string::String"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hfdc3e8044b00180eE(%"alloc::string::String"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !3
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; alloc::collections::TryReserveError::kind
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h2bc52f77ab6323f5E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
  %0 = call { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h8331b61e0c436594E"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hee1cba50f8a310f4E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*
  %2 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8, !nonnull !4
  %3 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c1d887e162f9856E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h214e938f3188db80E"({ i8*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf335a1f5381ac14fE"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %ptr
}

; alloc::vec::Vec<T,A>::append_elements
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h0cc5391a61cf8d1fE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, [0 x i8]* %other.0, i64 %other.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h333bba2a8cc58a79E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i64 %other.1)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::len
  %len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hbb3bfb2d6e33c8c4E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_11 = bitcast [0 x i8]* %other.0 to i8*
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_14 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c1d887e162f9856E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
  %1 = getelementptr inbounds i8, i8* %_14, i64 %len
  store i8* %1, i8** %0, align 8
  %_3.i = load i8*, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h3495fe7d48422b1eE(i8* %_11, i8* %_3.i, i64 %other.1)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %other.1
  store i64 %5, i64* %2, align 8
  ret void
}

; alloc::vec::Vec<T,A>::extend_from_slice
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h53b047948314199eE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
; call core::slice::<impl [T]>::iter
  %0 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf71e26b97ed95872E"([0 x i8]* nonnull align 1 %other.0, i64 %other.1)
  %_4.0 = extractvalue { i8*, i8* } %0, 0
  %_4.1 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h40206f8623f5096cE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i8* nonnull %_4.0, i8* %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hbb3bfb2d6e33c8c4E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h80f1315c58b8c87aE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i8 %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %3, align 8
  %_6 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp eq i64 %_4, %6
  br i1 %_3, label %bb2, label %bb4

bb10:                                             ; preds = %cleanup
  %7 = load i8, i8* %_17, align 1, !range !3
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

cleanup:                                          ; preds = %bb6, %bb4, %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb4:                                              ; preds = %bb3, %bb1
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_11 = invoke i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c1d887e162f9856E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
          to label %bb5 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_8 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
  %14 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %14, align 8
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h891f802475ac831fE"({ i8*, i64 }* align 8 dereferenceable(16) %_8, i64 %_9)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb5:                                              ; preds = %bb4
  %15 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_13 = load i64, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %_11, i64 %_13
  store i8* %16, i8** %1, align 8
  %_3.i = load i8*, i8** %1, align 8
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h7f1b270d9edea2e2E.exit"

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h7f1b270d9edea2e2E.exit": ; preds = %bb5
  br label %bb6

bb6:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h7f1b270d9edea2e2E.exit"
  store i8 0, i8* %_17, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17ha4545be5fe0c7646E(i8* %_3.i, i8 %value)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %17 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %18 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %17, align 8
  ret void

bb8:                                              ; preds = %bb9, %bb10
  %21 = bitcast { i8*, i32 }* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26

bb9:                                              ; preds = %bb10
  br label %bb8
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h333bba2a8cc58a79E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i64 %additional) unnamed_addr #1 {
start:
  %_4 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h3cb867725206c631E"({ i8*, i64 }* align 8 dereferenceable(16) %_4, i64 %_5, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc12alloc_zeroed17h1dd53a8335f1e288E(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h91db77a3b1a5e199E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h729b4280c4bf9728E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc_zeroed(i64 %_2, i64 %_4) #19
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc15exchange_malloc17h4cc0524cbc416ca3E(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %_6 = alloca { i8*, i64 }, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h1ec63abde4b8f397E(i64 %size, i64 %align)
  %layout.0 = extractvalue { i64, i64 } %0, 0
  %layout.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %1 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h7a01a25034fc1171E"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc1137 to %"alloc::alloc::Global"*), i64 %layout.0, i64 %layout.1)
  store { i8*, i64 } %1, { i8*, i64 }* %_6, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast { i8*, i64 }* %_6 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_9 = select i1 %4, i64 1, i64 0
  switch i64 %_9, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0
  %ptr.0 = load i8*, i8** %5, align 8, !nonnull !4
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1
  %ptr.1 = load i64, i64* %6, align 8
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %7 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h560437e9ec9491b4E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb6

bb3:                                              ; preds = %bb2
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h2740986bd2451aa0E(i64 %layout.0, i64 %layout.1) #20
  unreachable

bb6:                                              ; preds = %bb5
  ret i8* %7
}

; alloc::alloc::alloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc5alloc17h691c1d93fcceb894E(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h91db77a3b1a5e199E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h729b4280c4bf9728E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc(i64 %_2, i64 %_4) #19
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17haa2bf22d1b3f0c05E(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %_15 = alloca i8*, align 8
  %raw_ptr = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h91db77a3b1a5e199E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
; call core::alloc::layout::Layout::dangling
  %_7 = call nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h806222e6ea87dbe0E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb4

bb2:                                              ; preds = %bb1
  br i1 %zeroed, label %bb6, label %bb8

bb8:                                              ; preds = %bb2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_13.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_13.1 = load i64, i64* %7, align 8, !range !11
; call alloc::alloc::alloc
  %8 = call i8* @_ZN5alloc5alloc5alloc17h691c1d93fcceb894E(i64 %_13.0, i64 %_13.1)
  store i8* %8, i8** %raw_ptr, align 8
  br label %bb9

bb6:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_12.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_12.1 = load i64, i64* %10, align 8, !range !11
; call alloc::alloc::alloc_zeroed
  %11 = call i8* @_ZN5alloc5alloc12alloc_zeroed17h1dd53a8335f1e288E(i64 %_12.0, i64 %_12.1)
  store i8* %11, i8** %raw_ptr, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %_18 = load i8*, i8** %raw_ptr, align 8
; call core::ptr::non_null::NonNull<T>::new
  %_17 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h5556461fc9f95191E"(i8* %_18)
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10

bb11:                                             ; preds = %bb10
; call core::option::Option<T>::ok_or
  %_16 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h6b1364bf3fffbb5fE"(i8* %_17)
  br label %bb12

bb12:                                             ; preds = %bb11
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h845330ca5ecbdc89E"(i8* %_16)
  store i8* %12, i8** %_15, align 8
  br label %bb13

bb13:                                             ; preds = %bb12
  %13 = bitcast i8** %_15 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_20 = select i1 %15, i64 1, i64 0
  switch i64 %_20, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ]

bb15:                                             ; preds = %bb13
  unreachable

bb14:                                             ; preds = %bb13
  %val = load i8*, i8** %_15, align 8, !nonnull !4
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %16 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hde42bbe4212b6aceE"(i8* nonnull %val, i64 %_4)
  %_24.0 = extractvalue { i8*, i64 } %16, 0
  %_24.1 = extractvalue { i8*, i64 } %16, 1
  br label %bb18

bb16:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %17 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4b082d60fe934e4fE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1366 to %"core::panic::location::Location"*))
  store { i8*, i64 } %17, { i8*, i64 }* %2, align 8
  br label %bb17

bb17:                                             ; preds = %bb16
  br label %bb20

bb20:                                             ; preds = %bb19, %bb17
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = insertvalue { i8*, i64 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i64 } %22, i64 %21, 1
  ret { i8*, i64 } %23

bb18:                                             ; preds = %bb14
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_24.0, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_24.1, i64* %25, align 8
  br label %bb19

bb19:                                             ; preds = %bb5, %bb18
  br label %bb20

bb4:                                              ; preds = %bb3
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %26 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hde42bbe4212b6aceE"(i8* nonnull %_7, i64 0)
  %_6.0 = extractvalue { i8*, i64 } %26, 0
  %_6.1 = extractvalue { i8*, i64 } %26, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_6.0, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_6.1, i64* %28, align 8
  br label %bb19
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h23c1dab17af4ccd7E(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %4 = alloca i8*, align 8
  %_53 = alloca { i8*, i64 }, align 8
  %_31 = alloca i8*, align 8
  %_6 = alloca i64, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
; call core::alloc::layout::Layout::size
  %10 = call i64 @_ZN4core5alloc6layout6Layout4size17h91db77a3b1a5e199E({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  store i64 %10, i64* %_6, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %11 = load i64, i64* %_6, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_9.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_9.1 = load i64, i64* %14, align 8, !range !11
; call alloc::alloc::Global::alloc_impl
  %15 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17haa2bf22d1b3f0c05E(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %_9.0, i64 %_9.1, i1 zeroext %zeroed)
  store { i8*, i64 } %15, { i8*, i64 }* %5, align 8
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::alloc::layout::Layout::align
  %_14 = call i64 @_ZN4core5alloc6layout6Layout5align17h729b4280c4bf9728E({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::alloc::layout::Layout::align
  %_16 = call i64 @_ZN4core5alloc6layout6Layout5align17h729b4280c4bf9728E({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_13 = icmp eq i64 %_14, %_16
  br i1 %_13, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  %old_size1 = load i64, i64* %_6, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_56.0 = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_56.1 = load i64, i64* %17, align 8, !range !11
; call alloc::alloc::Global::alloc_impl
  %18 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17haa2bf22d1b3f0c05E(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %_56.0, i64 %_56.1, i1 zeroext %zeroed)
  %_54.0 = extractvalue { i8*, i64 } %18, 0
  %_54.1 = extractvalue { i8*, i64 } %18, 1
  br label %bb26

bb7:                                              ; preds = %bb6
  %old_size = load i64, i64* %_6, align 8
; call core::alloc::layout::Layout::size
  %new_size = call i64 @_ZN4core5alloc6layout6Layout4size17h91db77a3b1a5e199E({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb9

bb9:                                              ; preds = %bb7
; call core::alloc::layout::Layout::size
  %_23 = call i64 @_ZN4core5alloc6layout6Layout4size17h91db77a3b1a5e199E({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  br label %bb10

bb10:                                             ; preds = %bb9
  %_21 = icmp uge i64 %new_size, %_23
  call void @llvm.assume(i1 %_21)
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %ptr)
  br label %bb12

bb12:                                             ; preds = %bb11
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_28.0 = load i64, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_28.1 = load i64, i64* %20, align 8, !range !11
; call alloc::alloc::realloc
  %raw_ptr = call i8* @_ZN5alloc5alloc7realloc17h7775cba92b8e2bc1E(i8* %_26, i64 %_28.0, i64 %_28.1, i64 %new_size)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::ptr::non_null::NonNull<T>::new
  %_33 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h5556461fc9f95191E"(i8* %raw_ptr)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::option::Option<T>::ok_or
  %_32 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h6b1364bf3fffbb5fE"(i8* %_33)
  br label %bb15

bb15:                                             ; preds = %bb14
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h845330ca5ecbdc89E"(i8* %_32)
  store i8* %21, i8** %_31, align 8
  br label %bb16

bb16:                                             ; preds = %bb15
  %22 = bitcast i8** %_31 to {}**
  %23 = load {}*, {}** %22, align 8
  %24 = icmp eq {}* %23, null
  %_36 = select i1 %24, i64 1, i64 0
  switch i64 %_36, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ]

bb18:                                             ; preds = %bb16
  unreachable

bb17:                                             ; preds = %bb16
  %val = load i8*, i8** %_31, align 8, !nonnull !4
  br i1 %zeroed, label %bb21, label %bb24

bb19:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %25 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4b082d60fe934e4fE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1368 to %"core::panic::location::Location"*))
  store { i8*, i64 } %25, { i8*, i64 }* %5, align 8
  br label %bb20

bb20:                                             ; preds = %bb19
  br label %bb37

bb37:                                             ; preds = %bb31, %bb20
  br label %bb38

bb24:                                             ; preds = %bb23, %bb17
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %26 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hde42bbe4212b6aceE"(i8* nonnull %val, i64 %new_size)
  %_48.0 = extractvalue { i8*, i64 } %26, 0
  %_48.1 = extractvalue { i8*, i64 } %26, 1
  br label %bb25

bb21:                                             ; preds = %bb17
  %27 = getelementptr inbounds i8, i8* %raw_ptr, i64 %old_size
  store i8* %27, i8** %4, align 8
  %_3.i = load i8*, i8** %4, align 8
  br label %bb22

bb22:                                             ; preds = %bb21
  %_45 = sub i64 %new_size, %old_size
; call core::intrinsics::write_bytes
  call void @_ZN4core10intrinsics11write_bytes17h4c089fd602763d49E(i8* %_3.i, i8 0, i64 %_45)
  br label %bb23

bb23:                                             ; preds = %bb22
  br label %bb24

bb25:                                             ; preds = %bb24
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  store i8* %_48.0, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  store i64 %_48.1, i64* %29, align 8
  br label %bb36

bb36:                                             ; preds = %bb3, %bb35, %bb25
  br label %bb38

bb26:                                             ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %30 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc019a251c4cdcc5eE"(i8* %_54.0, i64 %_54.1)
  store { i8*, i64 } %30, { i8*, i64 }* %_53, align 8
  br label %bb27

bb27:                                             ; preds = %bb26
  %31 = bitcast { i8*, i64 }* %_53 to {}**
  %32 = load {}*, {}** %31, align 8
  %33 = icmp eq {}* %32, null
  %_58 = select i1 %33, i64 1, i64 0
  switch i64 %_58, label %bb29 [
    i64 0, label %bb28
    i64 1, label %bb30
  ]

bb29:                                             ; preds = %bb27
  unreachable

bb28:                                             ; preds = %bb27
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 0
  %val.0 = load i8*, i8** %34, align 8, !nonnull !4
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 1
  %val.1 = load i64, i64* %35, align 8
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_64 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %ptr)
  br label %bb32

bb30:                                             ; preds = %bb27
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %36 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4b082d60fe934e4fE"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1370 to %"core::panic::location::Location"*))
  store { i8*, i64 } %36, { i8*, i64 }* %5, align 8
  br label %bb31

bb31:                                             ; preds = %bb30
  br label %bb37

bb38:                                             ; preds = %bb36, %bb37
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = insertvalue { i8*, i64 } undef, i8* %38, 0
  %42 = insertvalue { i8*, i64 } %41, i64 %40, 1
  ret { i8*, i64 } %42

bb32:                                             ; preds = %bb28
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_66 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h560437e9ec9491b4E"(i8* nonnull %val.0, i64 %val.1)
  br label %bb33

bb33:                                             ; preds = %bb32
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h3495fe7d48422b1eE(i8* %_64, i8* %_66, i64 %old_size1)
  br label %bb34

bb34:                                             ; preds = %bb33
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_72.0 = load i64, i64* %43, align 8
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_72.1 = load i64, i64* %44, align 8, !range !11
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5a5f564c5d235a96E"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %_72.0, i64 %_72.1)
  br label %bb35

bb35:                                             ; preds = %bb34
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  store i8* %val.0, i8** %45, align 8
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  store i64 %val.1, i64* %46, align 8
  br label %bb36

bb3:                                              ; preds = %bb2
  br label %bb36
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc7dealloc17h124f2faacafaa38fE(i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h91db77a3b1a5e199E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_6 = call i64 @_ZN4core5alloc6layout6Layout5align17h729b4280c4bf9728E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @__rust_dealloc(i8* %ptr, i64 %_4, i64 %_6) #19
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::alloc::realloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc7realloc17h7775cba92b8e2bc1E(i8* %ptr, i64 %0, i64 %1, i64 %new_size) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_5 = call i64 @_ZN4core5alloc6layout6Layout4size17h91db77a3b1a5e199E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_7 = call i64 @_ZN4core5alloc6layout6Layout5align17h729b4280c4bf9728E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_realloc(i8* %ptr, i64 %_5, i64 %_7, i64 %new_size) #19
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h04b6fe5da7307938E(i8* nonnull %0, i64* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hb24edb28a9d231adE"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %8 = bitcast [3 x i64]* %_5.1 to i64*
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = load i64, i64* %9, align 8, !invariant.load !4
  %11 = bitcast [3 x i64]* %_5.1 to i64*
  %12 = getelementptr inbounds i64, i64* %11, i64 2
  %13 = load i64, i64* %12, align 8, !range !11, !invariant.load !4
  store i64 %10, i64* %3, align 8
  %size = load i64, i64* %3, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %19 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hb24edb28a9d231adE"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %19, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %19, 1
  %20 = bitcast [3 x i64]* %_9.1 to i64*
  %21 = getelementptr inbounds i64, i64* %20, i64 1
  %22 = load i64, i64* %21, align 8, !invariant.load !4
  %23 = bitcast [3 x i64]* %_9.1 to i64*
  %24 = getelementptr inbounds i64, i64* %23, i64 2
  %25 = load i64, i64* %24, align 8, !range !11, !invariant.load !4
  store i64 %25, i64* %2, align 8
  %align = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %26 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h1ec63abde4b8f397E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %26, 0
  %layout.1 = extractvalue { i64, i64 } %26, 1
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %27, align 8, !nonnull !4
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %28, align 8, !nonnull !4
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h5bfb7fcfad3ca852E"(i8* nonnull %_17.0, i64* align 8 dereferenceable(24) %_17.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha17d1feccb1f1190E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5a5f564c5d235a96E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %29 = bitcast { i8*, i32 }* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h3379b27101ec1905E(i8* nonnull %0, i64* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h2533c0d026a33981E"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %8 = bitcast [3 x i64]* %_5.1 to i64*
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = load i64, i64* %9, align 8, !invariant.load !4
  %11 = bitcast [3 x i64]* %_5.1 to i64*
  %12 = getelementptr inbounds i64, i64* %11, i64 2
  %13 = load i64, i64* %12, align 8, !range !11, !invariant.load !4
  store i64 %10, i64* %3, align 8
  %size = load i64, i64* %3, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %19 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h2533c0d026a33981E"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %19, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %19, 1
  %20 = bitcast [3 x i64]* %_9.1 to i64*
  %21 = getelementptr inbounds i64, i64* %20, i64 1
  %22 = load i64, i64* %21, align 8, !invariant.load !4
  %23 = bitcast [3 x i64]* %_9.1 to i64*
  %24 = getelementptr inbounds i64, i64* %23, i64 2
  %25 = load i64, i64* %24, align 8, !range !11, !invariant.load !4
  store i64 %25, i64* %2, align 8
  %align = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %26 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h1ec63abde4b8f397E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %26, 0
  %layout.1 = extractvalue { i64, i64 } %26, 1
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %27, align 8, !nonnull !4
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %28, align 8, !nonnull !4
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h853bd09c370faf5fE"(i8* nonnull %_17.0, i64* align 8 dereferenceable(24) %_17.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha17d1feccb1f1190E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5a5f564c5d235a96E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %29 = bitcast { i8*, i32 }* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17hbbd58cc9e6600f32E(i64* nonnull %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h7e4aa41b0792ff54E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 24, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h7e4aa41b0792ff54E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h1ec63abde4b8f397E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !4
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h2c1e886ad4c7cfacE"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha17d1feccb1f1190E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5a5f564c5d235a96E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::boxed::Box<T,A>::into_unique
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h0340b56661a7e140E"({}* noalias nonnull align 1 %0, [3 x i64]* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %3 = alloca { i8*, i64* }, align 8
  %b = alloca { {}*, [3 x i64]* }, align 8
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  store {}* %0, {}** %4, align 8
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  store [3 x i64]* %1, [3 x i64]** %5, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %_4 = bitcast { {}*, [3 x i64]* }* %b to %"alloc::alloc::Global"*
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17hea0029d5c7c9d4c4E(%"alloc::alloc::Global"* %_4)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  %_7.0 = load {}*, {}** %6, align 8, !nonnull !4
  %7 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  %_7.1 = load [3 x i64]*, [3 x i64]** %7, align 8, !nonnull !4
; invoke alloc::boxed::Box<T,A>::leak
  %8 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h907dd9169346c308E"({}* noalias nonnull align 1 %_7.0, [3 x i64]* align 8 dereferenceable(24) %_7.1)
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %9 = load i8, i8* %_9, align 1, !range !3
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { {}*, [3 x i64]* } %8, 0
  %_6.1 = extractvalue { {}*, [3 x i64]* } %8, 1
; invoke <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
  %16 = invoke { i8*, i64* } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17ha920a119503f288bE"({}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) %_6.1)
          to label %bb3 unwind label %cleanup1

bb4:                                              ; preds = %cleanup1
  br label %bb7

cleanup1:                                         ; preds = %bb2, %bb1
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { i8*, i64* } %16, 0
  %_5.1 = extractvalue { i8*, i64* } %16, 1
  %22 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_5.0, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_5.1, i64** %23, align 8
  %24 = bitcast { i8*, i64* }* %3 to i8*
  %25 = getelementptr i8, i8* %24, i64 16
  %26 = bitcast i8* %25 to %"alloc::alloc::Global"*
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !nonnull !4
  %29 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  %30 = load i64*, i64** %29, align 8, !nonnull !4
  %31 = insertvalue { i8*, i64* } undef, i8* %28, 0
  %32 = insertvalue { i8*, i64* } %31, i64* %30, 1
  ret { i8*, i64* } %32

bb5:                                              ; preds = %bb6, %bb7
  %33 = bitcast { i8*, i32 }* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17he7249d6116c25023E"({ {}*, [3 x i64]* }* %b) #18
  br label %bb5
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h6ef308e2149feb74E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i64* }, align 8
; call alloc::boxed::Box<T,A>::into_unique
  %2 = call { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h0340b56661a7e140E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1)
  %_4.0 = extractvalue { i8*, i64* } %2, 0
  %_4.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::ptr::unique::Unique<T>::as_ptr
  %3 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8130e813ae8263abE"(i8* nonnull %_4.0, i64* align 8 dereferenceable(24) %_4.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { {}*, [3 x i64]* } %3, 0
  %_6.1 = extractvalue { {}*, [3 x i64]* } %3, 1
  %4 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 0
  store {}* %_6.0, {}** %5, align 8
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 1
  store [3 x i64]* %_6.1, [3 x i64]** %6, align 8
  %7 = bitcast { i8*, i64* }* %1 to i8*
  %8 = getelementptr i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to %"alloc::alloc::Global"*
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %1, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %1, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8, !nonnull !4
  %14 = insertvalue { i8*, i64* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64* } %14, i64* %13, 1
  ret { i8*, i64* } %15

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %21 = bitcast { i8*, i32 }* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h907dd9169346c308E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64* }, align 8
  %_9 = alloca { i8*, i64* }, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !18)
  %1 = bitcast { i8*, i64* }* %0 to { {}*, [3 x i64]* }*
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 0
  store {}* %b.0, {}** %2, align 8, !noalias !18
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 1
  store [3 x i64]* %b.1, [3 x i64]** %3, align 8, !noalias !18
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !noalias !18, !nonnull !4
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !noalias !18, !nonnull !4
  %8 = insertvalue { i8*, i64* } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64* } %8, i64* %7, 1
  store { i8*, i64* } %9, { i8*, i64* }* %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %10 = bitcast { i8*, i64* }* %_9 to { {}*, [3 x i64]* }*
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast { {}*, [3 x i64]* }* %10 to { i8*, i64* }*
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 0
  %_6.0 = load i8*, i8** %12, align 8, !nonnull !4
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 1
  %_6.1 = load i64*, i64** %13, align 8, !nonnull !4
; call core::ptr::unique::Unique<T>::as_ptr
  %14 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8130e813ae8263abE"(i8* nonnull %_6.0, i64* align 8 dereferenceable(24) %_6.1)
  %_5.0 = extractvalue { {}*, [3 x i64]* } %14, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %14, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %15 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0
  %16 = insertvalue { {}*, [3 x i64]* } %15, [3 x i64]* %_5.1, 1
  ret { {}*, [3 x i64]* } %16
}

; alloc::boxed::Box<T,A>::into_raw
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h9432287ac3b57959E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #0 {
start:
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %0 = call { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h6ef308e2149feb74E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1)
  %_2.0 = extractvalue { i8*, i64* } %0, 0
  %_2.1 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast i8* %_2.0 to {}*
  %2 = bitcast i64* %_2.1 to [3 x i64]*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %1, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %2, 1
  ret { {}*, [3 x i64]* } %4
}

; alloc::string::String::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String3new17hf3766db370414d98E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_1 = alloca %"alloc::vec::Vec<u8>", align 8
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hee1cba50f8a310f4E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*
  %2 = bitcast %"alloc::vec::Vec<u8>"* %1 to i8*
  %3 = bitcast %"alloc::vec::Vec<u8>"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; alloc::string::String::push
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String4push17h4f34d43a70613051E(%"alloc::string::String"* align 8 dereferenceable(24) %self, i32 %ch) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %_17 = alloca [4 x i8], align 1
; call core::char::methods::<impl char>::len_utf8
  %_3 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817he2ec5dc799e5e2a6E"(i32 %ch)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 %_3, 1
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %_5 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
  %2 = icmp ule i32 %ch, 1114111
  call void @llvm.assume(i1 %2)
  %_6 = trunc i32 %ch to i8
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h80f1315c58b8c87aE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_5, i8 %_6)
  br label %bb4

bb2:                                              ; preds = %bb1
  %_8 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
  %3 = getelementptr inbounds [4 x i8], [4 x i8]* %_17, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 4, i1 false)
  %_14.0 = bitcast [4 x i8]* %_17 to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %4 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h543c00400fe07540E"(i32 %ch, [0 x i8]* nonnull align 1 %_14.0, i64 4)
  %_12.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb5

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %_12.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %_12.1, i64* %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %8 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !4
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1
  %_10.0 = extractvalue { [0 x i8]*, i64 } %12, 0
  %_10.1 = extractvalue { [0 x i8]*, i64 } %12, 1
  br label %bb6

bb6:                                              ; preds = %bb5
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h53b047948314199eE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_8, [0 x i8]* nonnull align 1 %_10.0, i64 %_10.1)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb4, %bb7
  ret void

bb4:                                              ; preds = %bb3
  br label %bb8
}

; alloc::string::String::push_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String8push_str17hfdc3e8044b00180eE(%"alloc::string::String"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %string.0, i64 %string.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %_3 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %string.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %string.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !4
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_5.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h53b047948314199eE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_3, [0 x i8]* nonnull align 1 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::alloc_guard
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec11alloc_guard17hcc94821125975ea0E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %alloc_size) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
  br i1 false, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he526ee7aa7f41a7bE"(i64 %4, i64 %6)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  ret void
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define void @_ZN5alloc7raw_vec11finish_grow17h4fade3c8644809eaE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %current_memory, %"alloc::alloc::Global"* nonnull align 1 %alloc) unnamed_addr #6 {
start:
  %_41 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %_14 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_13 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>", align 8
  %_6 = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h569cf69b43bcc757E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_6, i64 %new_layout.0, i64 %new_layout.1)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd285aec2cb7901abE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>") dereferenceable(24) %_5, %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*
  %_9 = load i64, i64* %1, align 8, !range !10
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*
  %3 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %val.0 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %val.1 = load i64, i64* %5, align 8, !range !11
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %val.0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %val.1, i64* %7, align 8
; call core::alloc::layout::Layout::size
  %_15 = call i64 @_ZN4core5alloc6layout6Layout4size17h91db77a3b1a5e199E({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb7

bb5:                                              ; preds = %bb2
  %8 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %residual.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %residual.1 = load i64, i64* %11, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6836510c2f9bb2a7E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1372 to %"core::panic::location::Location"*))
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb23

bb23:                                             ; preds = %bb13, %bb6
  br label %bb24

bb7:                                              ; preds = %bb3
; call alloc::raw_vec::alloc_guard
  call void @_ZN5alloc7raw_vec11alloc_guard17hcc94821125975ea0E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_14, i64 %_15)
  br label %bb8

bb8:                                              ; preds = %bb7
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h894cced86208cf6cE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>") dereferenceable(24) %_13, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_14)
  br label %bb9

bb9:                                              ; preds = %bb8
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %_13 to i64*
  %_17 = load i64, i64* %12, align 8, !range !10
  switch i64 %_17, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb10:                                             ; preds = %bb9
  %13 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_22 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_22, 1
  br i1 %16, label %bb15, label %bb14

bb12:                                             ; preds = %bb9
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %_13 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  %residual.01 = load i64, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  %residual.12 = load i64, i64* %20, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17he5268cd8ce057238E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.01, i64 %residual.12, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1374 to %"core::panic::location::Location"*))
  br label %bb13

bb13:                                             ; preds = %bb12
  br label %bb23

bb24:                                             ; preds = %bb22, %bb23
  ret void

bb15:                                             ; preds = %bb10
  %21 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %22 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %21 to { i8*, { i64, i64 } }*
  %23 = bitcast { i8*, { i64, i64 } }* %22 to i8**
  %ptr = load i8*, i8** %23, align 8, !nonnull !4
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %25 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %24 to { i8*, { i64, i64 } }*
  %26 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1
  %30 = load i64, i64* %29, align 8, !range !11
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %28, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %30, i64* %32, align 8
; call core::alloc::layout::Layout::align
  %_30 = call i64 @_ZN4core5alloc6layout6Layout5align17h729b4280c4bf9728E({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  br label %bb16

bb14:                                             ; preds = %bb10
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_39.0 = load i64, i64* %33, align 8
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_39.1 = load i64, i64* %34, align 8, !range !11
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %35 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h7a01a25034fc1171E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_39.0, i64 %_39.1)
  store { i8*, i64 } %35, { i8*, i64 }* %memory, align 8
  br label %bb20

bb20:                                             ; preds = %bb14
  br label %bb21

bb21:                                             ; preds = %bb19, %bb20
  %36 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0
  %_40.0 = load i8*, i8** %36, align 8
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1
  %_40.1 = load i64, i64* %37, align 8
  %38 = bitcast i64** %_41 to { i64, i64 }**
  store { i64, i64 }* %new_layout, { i64, i64 }** %38, align 8
  %39 = load i64*, i64** %_41, align 8, !nonnull !4
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4866e2075f317ed1E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i8* %_40.0, i64 %_40.1, i64* align 8 dereferenceable(16) %39)
  br label %bb22

bb16:                                             ; preds = %bb15
; call core::alloc::layout::Layout::align
  %_32 = call i64 @_ZN4core5alloc6layout6Layout5align17h729b4280c4bf9728E({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb17

bb17:                                             ; preds = %bb16
  %_29 = icmp eq i64 %_30, %_32
  call void @llvm.assume(i1 %_29)
  br label %bb18

bb18:                                             ; preds = %bb17
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_36.0 = load i64, i64* %40, align 8
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_36.1 = load i64, i64* %41, align 8, !range !11
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_37.0 = load i64, i64* %42, align 8
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_37.1 = load i64, i64* %43, align 8, !range !11
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %44 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17he5df4aed8e7fc0c0E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %ptr, i64 %_36.0, i64 %_36.1, i64 %_37.0, i64 %_37.1)
  store { i8*, i64 } %44, { i8*, i64 }* %memory, align 8
  br label %bb19

bb19:                                             ; preds = %bb18
  br label %bb21

bb22:                                             ; preds = %bb21
  br label %bb24
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h3e97a4e750ffcf13E"(i64* align 8 dereferenceable(16) %_1) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = bitcast i64* %_1 to { i64, i64 }*
  %1 = bitcast i64* %_1 to { i64, i64 }*
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %_4.0 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %_4.1 = load i64, i64* %3, align 8, !range !11
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  store i64 %_4.0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %_4.1, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
; call <T as core::convert::Into<U>>::into
  %10 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he526ee7aa7f41a7bE"(i64 %7, i64 %9)
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  br label %bb1

bb1:                                              ; preds = %start
  %13 = insertvalue { i64, i64 } undef, i64 %11, 0
  %14 = insertvalue { i64, i64 } %13, i64 %12, 1
  ret { i64, i64 } %14
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h4d539cfdd8669259E"() unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17h330303dc60403976E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %result) unnamed_addr #0 {
start:
  %_3 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_2 = alloca %"core::result::Result<(), alloc::collections::TryReserveErrorKind>", align 8
  %0 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_3 to i8*
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd79042168a8a2a44E"(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_2, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %_2 to i64*
  %_6 = load i64, i64* %2, align 8, !range !10
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb3, %bb1
  unreachable

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %bb1
  %3 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %_2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"*
  %4 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 0, i64 1
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17ha72cd8fd7333b22dE() #17
  unreachable

bb6:                                              ; preds = %bb3
  %8 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %_2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !11
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h2740986bd2451aa0E(i64 %layout.0, i64 %layout.1) #20
  unreachable
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h84f138a5342b8c06E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %e = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call alloc::collections::TryReserveError::kind
  %4 = call { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h2bc52f77ab6323f5E({ i64, i64 }* align 8 dereferenceable(16) %e)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h647ba5079baa4f58E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = sub i64 %3, %len
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4
  ret i1 %5
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h54ad8de66e736fbaE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 1, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 1, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h1ec63abde4b8f397E(i64 %size, i64 1)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i8*, i64 }* %self to i8**
  %_16 = load i8*, i8** %9, align 8, !nonnull !4
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h3dea978f1a1003e1E"(i8* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha17d1feccb1f1190E"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h922bce92be6375ccE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_28 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 1, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17he526ee7aa7f41a7bE"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h173da189966c7e02E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h56892205d6c47282E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h14c5e669f07cea7dE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !10
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_20 = load i64, i64* %17, align 8
  %_19 = mul i64 %_20, 2
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h7caa96f1af28bd3bE(i64 %_19, i64 %val)
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb658078ea85cc519E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1376 to %"core::panic::location::Location"*))
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb23

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h7caa96f1af28bd3bE(i64 8, i64 %cap)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h868cbf464119f9d6E(i64 %cap1)
  %new_layout.0 = extractvalue { i64, i64 } %22, 0
  %new_layout.1 = extractvalue { i64, i64 } %22, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h54ad8de66e736fbaE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_30, { i8*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h4fade3c8644809eaE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %_28, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %_30, %"alloc::alloc::Global"* nonnull align 1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6395c6cc0b12bdcaE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %_27, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_28)
  br label %bb17

bb17:                                             ; preds = %bb16
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*
  %_34 = load i64, i64* %23, align 8, !range !10
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %24, i32 0, i32 1
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 0
  %val.0 = load i8*, i8** %26, align 8, !nonnull !4
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 1
  %val.1 = load i64, i64* %27, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hf1e3ea74ac4250edE"({ i8*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %val.0, i64 %val.1)
  br label %bb22

bb20:                                             ; preds = %bb17
  %28 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %29 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0
  %residual.02 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1
  %residual.13 = load i64, i64* %31, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h036aeb56110e9b14E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.02, i64 %residual.13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1378 to %"core::panic::location::Location"*))
  br label %bb21

bb21:                                             ; preds = %bb20
  br label %bb23

bb24:                                             ; preds = %bb3, %bb22, %bb23
  ret void

bb22:                                             ; preds = %bb18
  %32 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %32, align 8
  br label %bb24

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %34 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %33, i32 0, i32 1
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0
  store i64 %_5.0, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1
  store i64 %_5.1, i64* %36, align 8
  %37 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %37, align 8
  br label %bb24
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h891f802475ac831fE"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len) unnamed_addr #6 {
start:
  %_4 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h922bce92be6375ccE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_4, { i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 1)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h330303dc60403976E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hde2d64fc8273572bE"(i64 %excess) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 1, 0
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 1
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.5 to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1380 to %"core::panic::location::Location"*)) #17
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h214e938f3188db80E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i8*, i64 }* %self to i8**
  %_2 = load i8*, i8** %0, align 8, !nonnull !4
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb13e104c5251dba3E"(i8* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %1
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h3cb867725206c631E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h647ba5079baa4f58E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h91a344ac1559fd71E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h91a344ac1559fd71E"({ i8*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional) unnamed_addr #7 {
start:
  %_5 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h922bce92be6375ccE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_5, { i8*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h330303dc60403976E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::set_ptr
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hf1e3ea74ac4250edE"({ i8*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hc7519d9b3eea0f1aE"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_3 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc04ddeddfda1cc35E"(i8* %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i8*, i64 }* %self to i8**
  store i8* %_3, i8** %0, align 8
; call core::ptr::non_null::NonNull<[T]>::len
  %_8 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17he4479d78759b8718E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hde2d64fc8273572bE"(i64 %_8)
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(24) %"core::str::iter::CharIndices"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h17e91171f2d9e7a8E"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  ret %"core::str::iter::CharIndices"* %self
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h3d3c5c14ebd5ceaeE"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %0, %"core::str::iter::CharIndices"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::str::iter::CharIndices"* %0 to i8*
  %2 = bitcast %"core::str::iter::CharIndices"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4db9a037043d58d9E"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5242f84544739b4cE"(i64* nonnull %self.0, i64* %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64*, i64* } undef, i64* %self.0, 0
  %1 = insertvalue { i64*, i64* } %0, i64* %self.1, 1
  ret { i64*, i64* } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9aba85afac260228E"(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>") dereferenceable(32) %0, %"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hecab038fee1d76f3E"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5a5f564c5d235a96E"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h91db77a3b1a5e199E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 %_4, 0
  br i1 %4, label %bb5, label %bb2

bb5:                                              ; preds = %bb1
  br label %bb6

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %ptr)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_8.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_8.1 = load i64, i64* %6, align 8, !range !11
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17h124f2faacafaa38fE(i8* %_6, i64 %_8.0, i64 %_8.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  ret void
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17he5df4aed8e7fc0c0E"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::grow_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h23c1dab17af4ccd7E(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h7a01a25034fc1171E"(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17haa2bf22d1b3f0c05E(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::alloc::layout::Layout as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h51fff8aac3d2f538E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %1 = load i64, i64* %0, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %3 = load i64, i64* %2, align 8, !range !11
  %4 = insertvalue { i64, i64 } undef, i64 %1, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5a0a5d5b063ccf1cE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c1d887e162f9856E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h15083f8c11b50310E(i8* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <&mut I as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h21aa45a02e238073E"(%"core::str::iter::CharIndices"** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_2 = load %"core::str::iter::CharIndices"*, %"core::str::iter::CharIndices"** %self, align 8, !nonnull !4
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %0 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf2b67b30afdd08c9E"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %_2)
  %1 = extractvalue { i64, i32 } %0, 0
  %2 = extractvalue { i64, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i32 } undef, i64 %1, 0
  %4 = insertvalue { i64, i32 } %3, i32 %2, 1
  ret { i64, i32 } %4
}

; <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17haeecfe6744898440E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_3 = icmp ne i64 %self.1, %other.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call core::mem::size_of_val
  %size = call i64 @_ZN4core3mem11size_of_val17h25399ca4f0d7a0a5E([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb1
  %1 = load i8, i8* %0, align 1, !range !3
  %2 = trunc i8 %1 to i1
  ret i1 %2

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::as_ptr
  %_12 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf1a6afbc70a6a056E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::slice::<impl [T]>::as_ptr
  %_15 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf1a6afbc70a6a056E"([0 x i8]* nonnull align 1 %other.0, i64 %other.1)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_10 = call i32 @memcmp(i8* %_12, i8* %_15, i64 %size)
  br label %bb6

bb6:                                              ; preds = %bb5
  %3 = icmp eq i32 %_10, 0
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %0, align 1
  br label %bb7
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf7afe3365ba5281fE"(i8* align 1 dereferenceable_or_null(1) %0) unnamed_addr #0 {
start:
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast i8** %1 to {}**
  store {}* null, {}** %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !4
  store i8* %v, i8** %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i8*, i8** %1, align 8
  ret i8* %6
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h838f59f5b0cf8a2cE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h059f6d8e1e1a5828E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_3, i64 %self
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hd68ebd3a82753071E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %_3 = icmp ult i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast i8** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_9 = call i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h838f59f5b0cf8a2cE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8* %_9, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i8*, i8** %0, align 8
  ret i8* %2
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h52740b0cb5e2ba31E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h54ad8de66e736fbaE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i8*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !4
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !11
  %_7 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5a5f564c5d235a96E"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h8331b61e0c436594E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_2 = alloca i64*, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast i64** %_2 to { i64, i64 }**
  store { i64, i64 }* %self, { i64, i64 }** %1, align 8
  %2 = bitcast i64** %_2 to { i64, i64 }**
  %3 = load { i64, i64 }*, { i64, i64 }** %2, align 8, !nonnull !4
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %_4 = select i1 %6, i64 0, i64 1
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %7, align 8
  br label %bb6

bb1:                                              ; preds = %start
  %8 = bitcast i64** %_2 to { i64, i64 }**
  %__self_0 = load { i64, i64 }*, { i64, i64 }** %8, align 8, !nonnull !4
  %9 = bitcast i64** %_2 to { i64, i64 }**
  %10 = load { i64, i64 }*, { i64, i64 }** %9, align 8, !nonnull !4
  %__self_1 = bitcast { i64, i64 }* %10 to {}*
; call <core::alloc::layout::Layout as core::clone::Clone>::clone
  %11 = call { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h51fff8aac3d2f538E"({ i64, i64 }* align 8 dereferenceable(16) %__self_0)
  %_7.0 = extractvalue { i64, i64 } %11, 0
  %_7.1 = extractvalue { i64, i64 } %11, 1
  br label %bb4

bb4:                                              ; preds = %bb1
; call core::clone::Clone::clone
  call void @_ZN4core5clone5Clone5clone17ha8aed5cd0de1d64dE({}* nonnull align 1 %__self_1)
  br label %bb5

bb5:                                              ; preds = %bb4
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_7.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_7.1, i64* %13, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h14c5e669f07cea7dE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %0, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !10
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %v = load i64, i64* %3, align 8
  %4 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %5 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %4, i32 0, i32 1
  store i64 %v, i64* %5, align 8
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to i64*
  store i64 0, i64* %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*
  %8 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %7, i32 0, i32 1
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0
  %e.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1
  %e.1 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %12, align 8
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %14 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %13, i32 0, i32 1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6395c6cc0b12bdcaE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %0, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !10
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0
  %v.0 = load i8*, i8** %4, align 8, !nonnull !4
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %v.1 = load i64, i64* %5, align 8
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %7, i32 0, i32 0
  store i8* %v.0, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %7, i32 0, i32 1
  store i64 %v.1, i64* %9, align 8
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  %e.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  %e.1 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %16, align 8
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to i64*
  store i64 1, i64* %25, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i96 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7c8b37944f235a1aE"(i96 %0) unnamed_addr #0 {
start:
  %_7 = alloca %ParseError, align 4
  %_6 = alloca %"core::result::Result<core::convert::Infallible, ParseError>::Err", align 4
  %e = alloca %ParseError, align 4
  %1 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>", align 4
  %2 = alloca i96, align 8
  %self = alloca %"core::result::Result<(), ParseError>", align 4
  store i96 %0, i96* %2, align 8
  %3 = bitcast %"core::result::Result<(), ParseError>"* %self to i8*
  %4 = bitcast i96* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 12, i1 false)
  %5 = bitcast %"core::result::Result<(), ParseError>"* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !17
  %7 = sub i32 %6, 15
  %8 = icmp eq i32 %7, 0
  %_2 = select i1 %8, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>"* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>::Continue"*
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>::Continue"* %9 to {}*
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>"* %1 to i32*
  store i32 15, i32* %11, align 4
  br label %bb4

bb1:                                              ; preds = %start
  %12 = bitcast %"core::result::Result<(), ParseError>"* %self to %"core::result::Result<(), ParseError>::Err"*
  %13 = bitcast %"core::result::Result<(), ParseError>::Err"* %12 to %ParseError*
  %14 = bitcast %ParseError* %e to i8*
  %15 = bitcast %ParseError* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 12, i1 false)
  %16 = bitcast %ParseError* %_7 to i8*
  %17 = bitcast %ParseError* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false)
  %18 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %_6 to %ParseError*
  %19 = bitcast %ParseError* %18 to i8*
  %20 = bitcast %ParseError* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 12, i1 false)
  %21 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>"* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>::Break"*
  %22 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>::Break"* %21 to %"core::result::Result<core::convert::Infallible, ParseError>::Err"*
  %23 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %22 to i8*
  %24 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 12, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>"* %1 to i96*
  %26 = load i96, i96* %25, align 4
  ret i96 %26
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h845330ca5ecbdc89E"(i8* %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !4
  store i8* %v, i8** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %_6 to %"core::alloc::AllocError"*
  %6 = bitcast i8** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break"*
  %7 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break"* %6 to %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"*
  %8 = bitcast i8** %1 to {}**
  store {}* null, {}** %8, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8*, i8** %1, align 8
  ret i8* %9
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h894cced86208cf6cE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>") dereferenceable(24) %0, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !10
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue"*
  %3 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue"* %2, i32 0, i32 1
  %4 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to i64*
  store i64 0, i64* %4, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0
  %e.0 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  %e.1 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %10, align 8
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"*
  %12 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to i64*
  store i64 1, i64* %19, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h928fbc056bcf543cE"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !10
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"* %6, i32 0, i32 1
  %v = load i64, i64* %7, align 8
  %8 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"* %8, i32 0, i32 1
  store i64 %v, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %_6 to %"core::alloc::layout::LayoutError"*
  %12 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break"*
  %13 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break"* %12, i32 0, i32 1
  %14 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %14, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !10
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc019a251c4cdcc5eE"(i8* %0, i64 %1) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %v.0 = load i8*, i8** %8, align 8, !nonnull !4
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %v.1 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %v.0, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %v.1, i64* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %12 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %_6 to %"core::alloc::AllocError"*
  %13 = bitcast { i8*, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %13 to %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"*
  %15 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1
  ret { i8*, i64 } %21
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd285aec2cb7901abE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>") dereferenceable(24) %0, %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !10
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %v.0 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %v.1 = load i64, i64* %5, align 8, !range !11
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  store i64 %v.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  store i64 %v.1, i64* %9, align 8
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  %e.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  %e.1 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %16, align 8
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to i64*
  store i64 1, i64* %25, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err", align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %self, align 1
  %3 = load i8, i8* %self, align 1, !range !3
  %4 = trunc i8 %3 to i1
  %_2 = zext i1 %4 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Continue"* %5, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<core::convert::Infallible, core::fmt::Error>::Err"* %_6 to %"core::fmt::Error"*
  %8 = bitcast i8* %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Break"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>::Break"* %8, i32 0, i32 1
  store i8 1, i8* %1, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %10 = load i8, i8* %1, align 1, !range !3
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17hdb458a877301e438E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, %"core::str::pattern::StrSearcher"* align 8 dereferenceable(104) %self) unnamed_addr #0 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %otherwise = alloca %"core::str::pattern::SearchStep", align 8
  %b = alloca i64, align 8
  %_32 = alloca %"core::str::pattern::SearchStep", align 8
  %_14 = alloca i64, align 8
  %_10 = alloca { i8*, i8* }, align 8
  %_8 = alloca i32, align 4
  %3 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %4 = bitcast %"core::str::pattern::StrSearcherImpl"* %3 to i64*
  %_2 = load i64, i64* %4, align 8, !range !10
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %6 = bitcast %"core::str::pattern::StrSearcherImpl"* %5 to %"core::str::pattern::StrSearcherImpl::Empty"*
  %searcher1 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", %"core::str::pattern::StrSearcherImpl::Empty"* %6, i32 0, i32 1
  %7 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 4
  %8 = load i8, i8* %7, align 2, !range !3
  %_4 = trunc i8 %8 to i1
  br i1 %_4, label %bb4, label %bb5

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %10 = bitcast %"core::str::pattern::StrSearcherImpl"* %9 to %"core::str::pattern::StrSearcherImpl::TwoWay"*
  %searcher = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", %"core::str::pattern::StrSearcherImpl::TwoWay"* %10, i32 0, i32 1
  %11 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4
  %_27 = load i64, i64* %11, align 8
  %12 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  %_29.0 = load [0 x i8]*, [0 x i8]** %13, align 8, !nonnull !4
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  %_29.1 = load i64, i64* %14, align 8
; call core::str::<impl str>::len
  %_28 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h8834d273c1c5a4afE"([0 x i8]* nonnull align 1 %_29.0, i64 %_29.1)
  br label %bb16

bb16:                                             ; preds = %bb1
  %_26 = icmp eq i64 %_27, %_28
  br i1 %_26, label %bb17, label %bb18

bb18:                                             ; preds = %bb16
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 6
  %_31 = load i64, i64* %15, align 8
  %is_long = icmp eq i64 %_31, -1
  %16 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0
  %_36.0 = load [0 x i8]*, [0 x i8]** %17, align 8, !nonnull !4
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1
  %_36.1 = load i64, i64* %18, align 8
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %_36.0, [0 x i8]** %19, align 8
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %_36.1, i64* %20, align 8
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %22 = load [0 x i8]*, [0 x i8]** %21, align 8, !nonnull !4
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %22, 0
  %26 = insertvalue { [0 x i8]*, i64 } %25, i64 %24, 1
  %_35.0 = extractvalue { [0 x i8]*, i64 } %26, 0
  %_35.1 = extractvalue { [0 x i8]*, i64 } %26, 1
  br label %bb19

bb17:                                             ; preds = %bb16
  %27 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %27, align 8
  br label %bb30

bb30:                                             ; preds = %bb15, %bb4, %bb29, %bb17
  ret void

bb19:                                             ; preds = %bb18
  %28 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  %_39.0 = load [0 x i8]*, [0 x i8]** %29, align 8, !nonnull !4
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  %_39.1 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_39.0, [0 x i8]** %31, align 8
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %_39.1, i64* %32, align 8
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  %34 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !4
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %34, 0
  %38 = insertvalue { [0 x i8]*, i64 } %37, i64 %36, 1
  %_38.0 = extractvalue { [0 x i8]*, i64 } %38, 0
  %_38.1 = extractvalue { [0 x i8]*, i64 } %38, 1
  br label %bb20

bb20:                                             ; preds = %bb19
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17hedd09b7320f4eae0E(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %_32, %"core::str::pattern::TwoWaySearcher"* align 8 dereferenceable(64) %searcher, [0 x i8]* nonnull align 1 %_35.0, i64 %_35.1, [0 x i8]* nonnull align 1 %_38.0, i64 %_38.1, i1 zeroext %is_long)
  br label %bb21

bb21:                                             ; preds = %bb20
  %39 = bitcast %"core::str::pattern::SearchStep"* %_32 to i64*
  %_41 = load i64, i64* %39, align 8, !range !14
  %40 = icmp eq i64 %_41, 1
  br i1 %40, label %bb23, label %bb22

bb23:                                             ; preds = %bb21
  %41 = bitcast %"core::str::pattern::SearchStep"* %_32 to %"core::str::pattern::SearchStep::Reject"*
  %42 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %41, i32 0, i32 1
  %a = load i64, i64* %42, align 8
  %43 = bitcast %"core::str::pattern::SearchStep"* %_32 to %"core::str::pattern::SearchStep::Reject"*
  %44 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %43, i32 0, i32 2
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %b, align 8
  br label %bb24

bb22:                                             ; preds = %bb21
  %46 = bitcast %"core::str::pattern::SearchStep"* %otherwise to i8*
  %47 = bitcast %"core::str::pattern::SearchStep"* %_32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false)
  %48 = bitcast %"core::str::pattern::SearchStep"* %0 to i8*
  %49 = bitcast %"core::str::pattern::SearchStep"* %otherwise to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false)
  br label %bb29

bb29:                                             ; preds = %bb28, %bb22
  br label %bb30

bb24:                                             ; preds = %bb26, %bb23
  %50 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 0
  %_46.0 = load [0 x i8]*, [0 x i8]** %51, align 8, !nonnull !4
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 1
  %_46.1 = load i64, i64* %52, align 8
  %_47 = load i64, i64* %b, align 8
; call core::str::<impl str>::is_char_boundary
  %_45 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h0b48d1b29a266bc6E"([0 x i8]* nonnull align 1 %_46.0, i64 %_46.1, i64 %_47)
  br label %bb25

bb25:                                             ; preds = %bb24
  %_44 = xor i1 %_45, true
  br i1 %_44, label %bb26, label %bb27

bb27:                                             ; preds = %bb25
  %_49 = load i64, i64* %b, align 8
  %53 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4
  %_50 = load i64, i64* %53, align 8
; call core::cmp::max
  %_48 = call i64 @_ZN4core3cmp3max17h7caa96f1af28bd3bE(i64 %_49, i64 %_50)
  br label %bb28

bb26:                                             ; preds = %bb25
  %54 = load i64, i64* %b, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %b, align 8
  br label %bb24

bb28:                                             ; preds = %bb27
  %56 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4
  store i64 %_48, i64* %56, align 8
  %_52 = load i64, i64* %b, align 8
  %57 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %58 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %57, i32 0, i32 1
  store i64 %a, i64* %58, align 8
  %59 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %60 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %59, i32 0, i32 2
  store i64 %_52, i64* %60, align 8
  %61 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %61, align 8
  br label %bb29

bb5:                                              ; preds = %bb3
  %62 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 2
  %63 = load i8, i8* %62, align 8, !range !3
  %is_match = trunc i8 %63 to i1
  %64 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 2
  %65 = load i8, i8* %64, align 8, !range !3
  %_6 = trunc i8 %65 to i1
  %66 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 2
  %67 = xor i1 %_6, true
  %68 = zext i1 %67 to i8
  store i8 %68, i8* %66, align 8
  %69 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %pos = load i64, i64* %69, align 8
  %70 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 0
  %_13.0 = load [0 x i8]*, [0 x i8]** %71, align 8, !nonnull !4
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 1
  %_13.1 = load i64, i64* %72, align 8
  store i64 %pos, i64* %_14, align 8
  %73 = load i64, i64* %_14, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %74 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc9d8dbceae2eac07E"([0 x i8]* nonnull align 1 %_13.0, i64 %_13.1, i64 %73, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1382 to %"core::panic::location::Location"*))
  %_12.0 = extractvalue { [0 x i8]*, i64 } %74, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %74, 1
  br label %bb6

bb4:                                              ; preds = %bb3
  %75 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %75, align 8
  br label %bb30

bb6:                                              ; preds = %bb5
; call core::str::<impl str>::chars
  %76 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hf02eec9683990b68E"([0 x i8]* nonnull align 1 %_12.0, i64 %_12.1)
  store { i8*, i8* } %76, { i8*, i8* }* %_10, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %77 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71dd653fc346d1b8E"({ i8*, i8* }* align 8 dereferenceable(16) %_10), !range !2
  store i32 %77, i32* %_8, align 4
  br label %bb8

bb8:                                              ; preds = %bb7
  br i1 %is_match, label %bb11, label %bb12

bb12:                                             ; preds = %bb8
  %78 = load i32, i32* %_8, align 4, !range !2
  %79 = sub i32 %78, 1114112
  %80 = icmp eq i32 %79, 0
  %_16 = select i1 %80, i64 0, i64 1
  switch i64 %_16, label %bb10 [
    i64 0, label %bb13
    i64 1, label %bb9
  ]

bb11:                                             ; preds = %bb8
  %81 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %82 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %81, i32 0, i32 1
  store i64 %pos, i64* %82, align 8
  %83 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %84 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %83, i32 0, i32 2
  store i64 %pos, i64* %84, align 8
  %85 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 0, i64* %85, align 8
  br label %bb15

bb15:                                             ; preds = %bb13, %bb14, %bb11
  br label %bb30

bb10:                                             ; preds = %bb12
  unreachable

bb13:                                             ; preds = %bb12
  %86 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 4
  store i8 1, i8* %86, align 2
  %87 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %87, align 8
  br label %bb15

bb9:                                              ; preds = %bb12
  %ch = load i32, i32* %_8, align 4, !range !15
; call core::char::methods::<impl char>::len_utf8
  %_21 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817he2ec5dc799e5e2a6E"(i32 %ch)
  br label %bb14

bb14:                                             ; preds = %bb9
  %88 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %89 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, %_21
  store i64 %91, i64* %88, align 8
  %92 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %_24 = load i64, i64* %92, align 8
  %93 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %94 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %93, i32 0, i32 1
  store i64 %pos, i64* %94, align 8
  %95 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %96 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %95, i32 0, i32 2
  store i64 %_24, i64* %96, align 8
  %97 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %97, align 8
  br label %bb15
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71dd653fc346d1b8E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17hbe11e5769e356a3dE({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i32, i32 } %0, 0
  %_2.1 = extractvalue { i32, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::map
  %1 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17hc18f39431e719b05E"(i32 %_2.0, i32 %_2.1), !range !2
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %1
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h35c4836d1b9a0ca8E"(i32 %ch) unnamed_addr #0 {
start:
; call core::char::convert::from_u32_unchecked
  %0 = call i32 @_ZN4core4char7convert18from_u32_unchecked17h7d361524661d7bb9E(i32 %ch), !range !15
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hcc95d66fc8452245E"() unnamed_addr #0 {
start:
  %0 = alloca { i32, i32 }, align 4
  %1 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %1, align 4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4, !range !13
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = insertvalue { i32, i32 } undef, i32 %3, 0
  %7 = insertvalue { i32, i32 } %6, i32 %5, 1
  ret { i32, i32 } %7
}

; <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf2b67b30afdd08c9E"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %_14 = alloca { i64, i32 }, align 8
  %_4 = alloca i32, align 4
  %4 = alloca { i64, i32 }, align 8
  %_3 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
  %5 = bitcast { i8*, i8* }* %_3 to i8**
  %start1.i1 = load i8*, i8** %5, align 8, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %start1.i1)
  %6 = icmp eq i64 1, 0
  br i1 %6, label %bb3.i7, label %bb6.i11

bb3.i7:                                           ; preds = %start
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_3, i32 0, i32 1
  %_9.i4 = load i8*, i8** %7, align 8
  %_8.i5 = ptrtoint i8* %_9.i4 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_11.i6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %start1.i1)
  %_10.i14 = ptrtoint i8* %_11.i6 to i64
  %8 = sub i64 %_8.i5, %_10.i14
  store i64 %8, i64* %1, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h27d15aa01880d4c3E.exit15"

bb6.i11:                                          ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_3, i32 0, i32 1
  %_15.i8 = load i8*, i8** %9, align 8
  %_14.i9 = ptrtoint i8* %_15.i8 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i10 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %start1.i1)
  %_16.i12 = ptrtoint i8* %_17.i10 to i64
  %10 = sub nuw i64 %_14.i9, %_16.i12
  store i64 %10, i64* %0, align 8
  %diff.i13 = load i64, i64* %0, align 8
  %11 = udiv exact i64 %diff.i13, 1
  store i64 %11, i64* %1, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h27d15aa01880d4c3E.exit15"

"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h27d15aa01880d4c3E.exit15": ; preds = %bb6.i11, %bb3.i7
  %12 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h27d15aa01880d4c3E.exit15"
  %_5 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %13 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71dd653fc346d1b8E"({ i8*, i8* }* align 8 dereferenceable(16) %_5), !range !2
  store i32 %13, i32* %_4, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %14 = load i32, i32* %_4, align 4, !range !2
  %15 = sub i32 %14, 1114112
  %16 = icmp eq i32 %15, 0
  %_6 = select i1 %16, i64 0, i64 1
  switch i64 %_6, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  store i32 1114112, i32* %17, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  %ch = load i32, i32* %_4, align 4, !range !15
  %18 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %index = load i64, i64* %18, align 8
  %_10 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
  %19 = bitcast { i8*, i8* }* %_10 to i8**
  %start1.i = load i8*, i8** %19, align 8, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %start1.i)
  %20 = icmp eq i64 1, 0
  br i1 %20, label %bb3.i, label %bb6.i

bb3.i:                                            ; preds = %bb3
  %21 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 1
  %_9.i = load i8*, i8** %21, align 8
  %_8.i = ptrtoint i8* %_9.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_11.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %start1.i)
  %_10.i = ptrtoint i8* %_11.i to i64
  %22 = sub i64 %_8.i, %_10.i
  store i64 %22, i64* %3, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h27d15aa01880d4c3E.exit"

bb6.i:                                            ; preds = %bb3
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 1
  %_15.i = load i8*, i8** %23, align 8
  %_14.i = ptrtoint i8* %_15.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %start1.i)
  %_16.i = ptrtoint i8* %_17.i to i64
  %24 = sub nuw i64 %_14.i, %_16.i
  store i64 %24, i64* %2, align 8
  %diff.i = load i64, i64* %2, align 8
  %25 = udiv exact i64 %diff.i, 1
  store i64 %25, i64* %3, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h27d15aa01880d4c3E.exit"

"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h27d15aa01880d4c3E.exit": ; preds = %bb6.i, %bb3.i
  %26 = load i64, i64* %3, align 8
  br label %bb6

bb6:                                              ; preds = %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h27d15aa01880d4c3E.exit"
  %_11 = sub i64 %12, %26
  %27 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %28 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, %_11
  store i64 %30, i64* %27, align 8
  %31 = bitcast { i64, i32 }* %_14 to i64*
  store i64 %index, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1
  store i32 %ch, i32* %32, align 8
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1
  %36 = load i32, i32* %35, align 8, !range !15
  %37 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 0
  store i64 %34, i64* %37, align 8
  %38 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  %42 = load i32, i32* %41, align 8, !range !2
  %43 = insertvalue { i64, i32 } undef, i64 %40, 0
  %44 = insertvalue { i64, i32 } %43, i32 %42, 1
  ret { i64, i32 } %44
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h2f16aa07bb29ff6dE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hf1a5da82605e01d2E"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %2 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %2, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17ha67e2508bd5e1939E"(i64* align 8 dereferenceable(8) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::backward_unchecked
  %_5 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17ha7d337cabbda80d9E"(i64 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb9

bb9:                                              ; preds = %bb4
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %_5, i64* %3, align 8
  %_9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_8 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17ha67e2508bd5e1939E"(i64* align 8 dereferenceable(8) %_9)
  br label %bb5

bb8:                                              ; No predecessors!
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %_5, i64* %4, align 8
  %5 = bitcast { i8*, i32 }* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb5:                                              ; preds = %bb9
  %11 = bitcast { i64, i64 }* %1 to %"core::option::Option<usize>::Some"*
  %12 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %11, i32 0, i32 1
  store i64 %_8, i64* %12, align 8
  %13 = bitcast { i64, i64 }* %1 to i64*
  store i64 1, i64* %13, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8, !range !10
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h21e8f0245355e7daE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hf1a5da82605e01d2E"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17ha67e2508bd5e1939E"(i64* align 8 dereferenceable(8) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h6bd9e87f48c53c9dE"(i64 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17hdb8876ff44f9fd56E(i64* align 8 dereferenceable(8) %_10, i64 %n)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %2, i32 0, i32 1
  store i64 %_8, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %4, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !range !10
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h6867c5f77f7886f4E"() unnamed_addr #0 {
start:
  ret i1 true
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h332e5c2b7aa9ff3fE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %1 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %2 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %1, i32 0, i32 1
  store i64 %a, i64* %2, align 8
  %3 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %4 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %3, i32 0, i32 2
  store i64 %b, i64* %4, align 8
  %5 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 0, i64* %5, align 8
  ret void
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hfcbb0fbd06bed45aE"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %1 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %2 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %1, i32 0, i32 1
  store i64 %a, i64* %2, align 8
  %3 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %4 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %3, i32 0, i32 2
  store i64 %b, i64* %4, align 8
  %5 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %5, align 8
  ret void
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46c5e8acb08509fbE"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = bitcast { i8*, i8* }* %self to i8**
  %_6 = load i8*, i8** %3, align 8, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf335a1f5381ac14fE"(i8* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 1, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_11 = load i8*, i8** %5, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h507c3b3dc0fa49a5E"(i8* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i8*, i8* }* %self to i8**
  %_15 = load i8*, i8** %6, align 8, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_16 = load i8*, i8** %7, align 8
  %_12 = icmp eq i8* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %8 = bitcast { i8*, i8* }* %self to i8**
  %_12.i = load i8*, i8** %8, align 8, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %_12.i)
  %9 = bitcast { i8*, i8* }* %self to i8**
  %_16.i = load i8*, i8** %9, align 8, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hadd0b2c38ac16b52E"(i8* nonnull %_16.i)
  %10 = getelementptr inbounds i8, i8* %_15.i, i64 1
  store i8* %10, i8** %0, align 8
  %_3.i.i = load i8*, i8** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b18692724626ab3E"(i8* %_3.i.i)
  %11 = bitcast { i8*, i8* }* %self to i8**
  store i8* %_13.i, i8** %11, align 8
  store i8* %old.i, i8** %1, align 8
  %12 = load i8*, i8** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %13 = bitcast i8** %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i8*, i8** %2, align 8
  ret i8* %14

bb13:                                             ; preds = %bb12
  store i8* %12, i8** %2, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(24) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd612a69d62c04ca9E"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca { { [0 x i8]*, i64 }, i32, [1 x i32] }*, align 8
  %1 = alloca { { [0 x i8]*, i64 }, i32, [1 x i32] }*, align 8
  %2 = alloca i64*, align 8
  %3 = bitcast { i64*, i64* }* %self to i64**
  %_6 = load i64*, i64** %3, align 8, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call { { [0 x i8]*, i64 }, i32, [1 x i32] }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h622d70e143475d70E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hef3e50b1d4cc0026E"({ { [0 x i8]*, i64 }, i32, [1 x i32] }* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 24, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %6 = bitcast i64** %5 to { { [0 x i8]*, i64 }, i32, [1 x i32] }**
  %_11 = load { { [0 x i8]*, i64 }, i32, [1 x i32] }*, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h0d3629d7463559faE"({ { [0 x i8]*, i64 }, i32, [1 x i32] }* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %7 = bitcast { i64*, i64* }* %self to i64**
  %_15 = load i64*, i64** %7, align 8, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call { { [0 x i8]*, i64 }, i32, [1 x i32] }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h622d70e143475d70E"(i64* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %9 = bitcast i64** %8 to { { [0 x i8]*, i64 }, i32, [1 x i32] }**
  %_16 = load { { [0 x i8]*, i64 }, i32, [1 x i32] }*, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %9, align 8
  %_12 = icmp eq { { [0 x i8]*, i64 }, i32, [1 x i32] }* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %10 = bitcast { i64*, i64* }* %self to i64**
  %_12.i = load i64*, i64** %10, align 8, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call { { [0 x i8]*, i64 }, i32, [1 x i32] }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h622d70e143475d70E"(i64* nonnull %_12.i)
  %11 = bitcast { i64*, i64* }* %self to i64**
  %_16.i = load i64*, i64** %11, align 8, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call { { [0 x i8]*, i64 }, i32, [1 x i32] }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h622d70e143475d70E"(i64* nonnull %_16.i)
  %12 = getelementptr inbounds { { [0 x i8]*, i64 }, i32, [1 x i32] }, { { [0 x i8]*, i64 }, i32, [1 x i32] }* %_15.i, i64 1
  store { { [0 x i8]*, i64 }, i32, [1 x i32] }* %12, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %0, align 8
  %_3.i.i = load { { [0 x i8]*, i64 }, i32, [1 x i32] }*, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h3d6739d030649000E"({ { [0 x i8]*, i64 }, i32, [1 x i32] }* %_3.i.i)
  %13 = bitcast { i64*, i64* }* %self to i64**
  store i64* %_13.i, i64** %13, align 8
  store { { [0 x i8]*, i64 }, i32, [1 x i32] }* %old.i, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %1, align 8
  %14 = load { { [0 x i8]*, i64 }, i32, [1 x i32] }*, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %15 = bitcast i64** %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %16 = load i64*, i64** %2, align 8
  ret i64* %16

bb13:                                             ; preds = %bb12
  %17 = bitcast i64** %2 to { { [0 x i8]*, i64 }, i32, [1 x i32] }**
  store { { [0 x i8]*, i64 }, i32, [1 x i32] }* %14, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %17, align 8
  br label %bb14
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get
; Function Attrs: nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17he5b3a48b188bb530E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_6 = select i1 %2, i64 0, i64 1
  switch i64 %_6, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call std::process::abort
  call void @_ZN3std7process5abort17h2f11b1d32ad057eaE() #17
  unreachable

bb3:                                              ; preds = %start
  %a = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %_5.0 = bitcast { [0 x i8]*, i64 }* %a to {}*
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.6 to [3 x i64]*), 1
  ret { {}*, [3 x i64]* } %4
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box
; Function Attrs: nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h5ab066ef4a5b1fd1E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_4 = alloca { i8*, i64 }, align 8
  %data = alloca { {}*, [3 x i64]* }, align 8
  store i8 0, i8* %_14, align 1
; call core::option::Option<T>::take
  %2 = call { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17h0d4b92859e013592E"({ i8*, i64 }* align 8 dereferenceable(16) %self)
  store { i8*, i64 } %2, { i8*, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast { i8*, i64 }* %_4 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_6 = select i1 %5, i64 0, i64 1
  switch i64 %_6, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
; call std::process::abort
  call void @_ZN3std7process5abort17h2f11b1d32ad057eaE() #17
  unreachable

bb4:                                              ; preds = %bb1
  %6 = bitcast { i8*, i64 }* %_4 to { [0 x i8]*, i64 }*
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 0
  %a.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !4
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 1
  %a.1 = load i64, i64* %8, align 8
; invoke alloc::alloc::exchange_malloc
  %_4.i = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h4cc0524cbc416ca3E(i64 16, i64 8)
          to label %"_ZN5alloc5boxed12Box$LT$T$GT$3new17hdf614329d48c9648E.exit" unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb4
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

"_ZN5alloc5boxed12Box$LT$T$GT$3new17hdf614329d48c9648E.exit": ; preds = %bb4
  %20 = bitcast i8* %_4.i to { [0 x i8]*, i64 }*
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0
  store [0 x i8]* %a.0, [0 x i8]** %21, align 8
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1
  store i64 %a.1, i64* %22, align 8
  br label %bb5

bb5:                                              ; preds = %"_ZN5alloc5boxed12Box$LT$T$GT$3new17hdf614329d48c9648E.exit"
  %23 = bitcast { [0 x i8]*, i64 }* %20 to {}*
  %24 = bitcast {}* %23 to i8*
  %_8.0 = bitcast i8* %24 to {}*
  store i8 1, i8* %_14, align 1
  %25 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0
  store {}* %_8.0, {}** %25, align 8
  %26 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1
  store [3 x i64]* bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.6 to [3 x i64]*), [3 x i64]** %26, align 8
  store i8 0, i8* %_14, align 1
  %27 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0
  %_13.0 = load {}*, {}** %27, align 8, !nonnull !4
  %28 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1
  %_13.1 = load [3 x i64]*, [3 x i64]** %28, align 8, !nonnull !4
; invoke alloc::boxed::Box<T,A>::into_raw
  %29 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h9432287ac3b57959E"({}* noalias nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) %_13.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_11.0 = extractvalue { {}*, [3 x i64]* } %29, 0
  %_11.1 = extractvalue { {}*, [3 x i64]* } %29, 1
  store i8 0, i8* %_14, align 1
  %30 = insertvalue { {}*, [3 x i64]* } undef, {}* %_11.0, 0
  %31 = insertvalue { {}*, [3 x i64]* } %30, [3 x i64]* %_11.1, 1
  ret { {}*, [3 x i64]* } %31

bb7:                                              ; preds = %cleanup
  %32 = load i8, i8* %_14, align 1, !range !3
  %33 = trunc i8 %32 to i1
  br i1 %33, label %bb9, label %bb8

cleanup:                                          ; preds = %bb5
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  %39 = bitcast { i8*, i32 }* %1 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = insertvalue { i8*, i32 } undef, i8* %40, 0
  %44 = insertvalue { i8*, i32 } %43, i32 %42, 1
  resume { i8*, i32 } %44

bb9:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17he7249d6116c25023E"({ {}*, [3 x i64]* }* %data) #18
  br label %bb8
}

; <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17ha920a119503f288bE"({}* nonnull align 1 %reference.0, [3 x i64]* align 8 dereferenceable(24) %reference.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64* }, align 8
  %1 = bitcast { i8*, i64* }* %0 to { {}*, [3 x i64]* }*
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 0
  store {}* %reference.0, {}** %2, align 8
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 1
  store [3 x i64]* %reference.1, [3 x i64]** %3, align 8
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !4
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !4
  %8 = insertvalue { i8*, i64* } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64* } %8, i64* %7, 1
  ret { i8*, i64* } %9
}

; <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h853eee6cd3c5c888E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %slice.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %slice.1, 1
  ret { [0 x i8]*, i64 } %2
}

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h81ef0f50bafd032aE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
  %0 = call { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h9a017c3e5510d0ceE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; time::display::<impl core::fmt::Display for time::TmFmt>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4time7display60_$LT$impl$u20$core..fmt..Display$u20$for$u20$time..TmFmt$GT$3fmt17hebd32c215fa27133E"(%TmFmt* align 8 dereferenceable(32) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt) unnamed_addr #1 {
start:
  %_args = alloca { %TmFmt*, i32*, i32*, i32* }, align 8
  %_77 = alloca { %TmFmt*, i32*, i32*, i32* }, align 8
  %_76 = alloca [4 x { i8*, i64* }], align 8
  %_69 = alloca %"core::fmt::Arguments", align 8
  %h = alloca i32, align 4
  %m = alloca i32, align 4
  %sign = alloca i32, align 4
  %_47 = alloca %Fmt, align 8
  %s = alloca %TmFmt, align 8
  %_41 = alloca %Fmt, align 8
  %_39 = alloca %TmFmt, align 8
  %_34 = alloca %Tm, align 4
  %_32 = alloca %TmFmt, align 8
  %_23 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %chars = alloca { i8*, i8* }, align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds %TmFmt, %TmFmt* %self, i32 0, i32 1
  %2 = bitcast %Fmt* %1 to i64*
  %_3 = load i64, i64* %2, align 8, !range !14
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
    i64 2, label %bb20
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds %TmFmt, %TmFmt* %self, i32 0, i32 1
  %4 = bitcast %Fmt* %3 to %"Fmt::Str"*
  %s4 = getelementptr inbounds %"Fmt::Str", %"Fmt::Str"* %4, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s4, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !4
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s4, i32 0, i32 1
  %_6.1 = load i64, i64* %6, align 8
; call core::str::<impl str>::chars
  %7 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hf02eec9683990b68E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
  store { i8*, i8* } %7, { i8*, i8* }* %chars, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %8 = bitcast %TmFmt* %self to %Tm**
  %9 = load %Tm*, %Tm** %8, align 8, !nonnull !4
  %10 = getelementptr inbounds %Tm, %Tm* %9, i32 0, i32 9
  %_37 = load i32, i32* %10, align 4
  %11 = icmp eq i32 %_37, 0
  br i1 %11, label %bb23, label %bb24

bb20:                                             ; preds = %start
  %12 = bitcast %TmFmt* %self to %Tm**
  %_35 = load %Tm*, %Tm** %12, align 8, !nonnull !4
; call time::Tm::to_local
  call void @_ZN4time2Tm8to_local17h8c6c84e8f81a1338E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %_34, %Tm* align 4 dereferenceable(44) %_35)
  br label %bb21

bb21:                                             ; preds = %bb20
; call time::Tm::asctime
  call void @_ZN4time2Tm7asctime17hf092359bf762d308E(%TmFmt* noalias nocapture sret(%TmFmt) dereferenceable(32) %_32, %Tm* align 4 dereferenceable(44) %_34)
  br label %bb22

bb22:                                             ; preds = %bb21
; call time::display::<impl core::fmt::Display for time::TmFmt>::fmt
  %13 = call zeroext i1 @"_ZN4time7display60_$LT$impl$u20$core..fmt..Display$u20$for$u20$time..TmFmt$GT$3fmt17hebd32c215fa27133E"(%TmFmt* align 8 dereferenceable(32) %_32, %"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt)
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %0, align 1
  br label %bb39

bb39:                                             ; preds = %bb13, %bb18, %bb19, %bb23, %bb38, %bb22
  %15 = load i8, i8* %0, align 1, !range !3
  %16 = trunc i8 %15 to i1
  ret i1 %16

bb23:                                             ; preds = %bb1
  %17 = bitcast %TmFmt* %self to %Tm**
  %_40 = load %Tm*, %Tm** %17, align 8, !nonnull !4
  %18 = bitcast %Fmt* %_41 to %"Fmt::Str"*
  %19 = getelementptr inbounds %"Fmt::Str", %"Fmt::Str"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [18 x i8] }>* @alloc1395 to [0 x i8]*), [0 x i8]** %20, align 8
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 1
  store i64 18, i64* %21, align 8
  %22 = bitcast %Fmt* %_41 to i64*
  store i64 0, i64* %22, align 8
  %23 = bitcast %TmFmt* %_39 to %Tm**
  store %Tm* %_40, %Tm** %23, align 8
  %24 = getelementptr inbounds %TmFmt, %TmFmt* %_39, i32 0, i32 1
  %25 = bitcast %Fmt* %24 to i8*
  %26 = bitcast %Fmt* %_41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false)
; call time::display::<impl core::fmt::Display for time::TmFmt>::fmt
  %27 = call zeroext i1 @"_ZN4time7display60_$LT$impl$u20$core..fmt..Display$u20$for$u20$time..TmFmt$GT$3fmt17hebd32c215fa27133E"(%TmFmt* align 8 dereferenceable(32) %_39, %"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt)
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %0, align 1
  br label %bb39

bb24:                                             ; preds = %bb1
  %29 = bitcast %TmFmt* %self to %Tm**
  %_46 = load %Tm*, %Tm** %29, align 8, !nonnull !4
  %30 = bitcast %Fmt* %_47 to %"Fmt::Str"*
  %31 = getelementptr inbounds %"Fmt::Str", %"Fmt::Str"* %30, i32 0, i32 1
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [17 x i8] }>* @alloc1386 to [0 x i8]*), [0 x i8]** %32, align 8
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 1
  store i64 17, i64* %33, align 8
  %34 = bitcast %Fmt* %_47 to i64*
  store i64 0, i64* %34, align 8
  %35 = bitcast %TmFmt* %s to %Tm**
  store %Tm* %_46, %Tm** %35, align 8
  %36 = getelementptr inbounds %TmFmt, %TmFmt* %s, i32 0, i32 1
  %37 = bitcast %Fmt* %36 to i8*
  %38 = bitcast %Fmt* %_47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false)
  %39 = bitcast %TmFmt* %self to %Tm**
  %40 = load %Tm*, %Tm** %39, align 8, !nonnull !4
  %41 = getelementptr inbounds %Tm, %Tm* %40, i32 0, i32 9
  %_52 = load i32, i32* %41, align 4
  %_51 = icmp sgt i32 %_52, 0
  br i1 %_51, label %bb25, label %bb26

bb26:                                             ; preds = %bb24
  store i32 45, i32* %sign, align 4
  br label %bb27

bb25:                                             ; preds = %bb24
  store i32 43, i32* %sign, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %bb25
  %42 = bitcast %TmFmt* %self to %Tm**
  %43 = load %Tm*, %Tm** %42, align 8, !nonnull !4
  %44 = getelementptr inbounds %Tm, %Tm* %43, i32 0, i32 9
  %_55 = load i32, i32* %44, align 4
; call time::display::abs
  %_54 = call i32 @_ZN4time7display3abs17he39446ec470aaf99E(i32 %_55)
  br label %bb28

bb28:                                             ; preds = %bb27
  %_57 = icmp eq i32 %_54, -2147483648
  %_58 = and i1 false, %_57
  %45 = call i1 @llvm.expect.i1(i1 %_58, i1 false)
  br i1 %45, label %panic, label %bb29

bb29:                                             ; preds = %bb28
  %46 = sdiv i32 %_54, 60
  store i32 %46, i32* %m, align 4
  %_60 = load i32, i32* %m, align 4
  %_62 = icmp eq i32 %_60, -2147483648
  %_63 = and i1 false, %_62
  %47 = call i1 @llvm.expect.i1(i1 %_63, i1 false)
  br i1 %47, label %panic1, label %bb30

panic:                                            ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1388 to %"core::panic::location::Location"*)) #17
  unreachable

bb30:                                             ; preds = %bb29
  %48 = sdiv i32 %_60, 60
  store i32 %48, i32* %h, align 4
  %_65 = load i32, i32* %h, align 4
  %49 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %_65, i32 60)
  %_66.0 = extractvalue { i32, i1 } %49, 0
  %_66.1 = extractvalue { i32, i1 } %49, 1
  %50 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false)
  br i1 %50, label %panic2, label %bb31

panic1:                                           ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1390 to %"core::panic::location::Location"*)) #17
  unreachable

bb31:                                             ; preds = %bb30
  %51 = load i32, i32* %m, align 4
  %52 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %51, i32 %_66.0)
  %_67.0 = extractvalue { i32, i1 } %52, 0
  %_67.1 = extractvalue { i32, i1 } %52, 1
  %53 = call i1 @llvm.expect.i1(i1 %_67.1, i1 false)
  br i1 %53, label %panic3, label %bb32

panic2:                                           ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1392 to %"core::panic::location::Location"*)) #17
  unreachable

bb32:                                             ; preds = %bb31
  store i32 %_67.0, i32* %m, align 4
  %54 = bitcast { %TmFmt*, i32*, i32*, i32* }* %_77 to %TmFmt**
  store %TmFmt* %s, %TmFmt** %54, align 8
  %55 = getelementptr inbounds { %TmFmt*, i32*, i32*, i32* }, { %TmFmt*, i32*, i32*, i32* }* %_77, i32 0, i32 1
  store i32* %sign, i32** %55, align 8
  %56 = getelementptr inbounds { %TmFmt*, i32*, i32*, i32* }, { %TmFmt*, i32*, i32*, i32* }* %_77, i32 0, i32 2
  store i32* %h, i32** %56, align 8
  %57 = getelementptr inbounds { %TmFmt*, i32*, i32*, i32* }, { %TmFmt*, i32*, i32*, i32* }* %_77, i32 0, i32 3
  store i32* %m, i32** %57, align 8
  %58 = bitcast { %TmFmt*, i32*, i32*, i32* }* %_args to i8*
  %59 = bitcast { %TmFmt*, i32*, i32*, i32* }* %_77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 32, i1 false)
  %60 = bitcast { %TmFmt*, i32*, i32*, i32* }* %_args to %TmFmt**
  %_84 = load %TmFmt*, %TmFmt** %60, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %61 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h7f928b4406449fbdE(%TmFmt* align 8 dereferenceable(32) %_84, i1 (%TmFmt*, %"core::fmt::Formatter"*)* nonnull @"_ZN4time7display60_$LT$impl$u20$core..fmt..Display$u20$for$u20$time..TmFmt$GT$3fmt17hebd32c215fa27133E")
  %_83.0 = extractvalue { i8*, i64* } %61, 0
  %_83.1 = extractvalue { i8*, i64* } %61, 1
  br label %bb33

panic3:                                           ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1394 to %"core::panic::location::Location"*)) #17
  unreachable

bb33:                                             ; preds = %bb32
  %62 = getelementptr inbounds { %TmFmt*, i32*, i32*, i32* }, { %TmFmt*, i32*, i32*, i32* }* %_args, i32 0, i32 1
  %_87 = load i32*, i32** %62, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %63 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h296710cf9c74ed59E(i32* align 4 dereferenceable(4) %_87, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h011d980131b3c87bE")
  %_86.0 = extractvalue { i8*, i64* } %63, 0
  %_86.1 = extractvalue { i8*, i64* } %63, 1
  br label %bb34

bb34:                                             ; preds = %bb33
  %64 = getelementptr inbounds { %TmFmt*, i32*, i32*, i32* }, { %TmFmt*, i32*, i32*, i32* }* %_args, i32 0, i32 2
  %_90 = load i32*, i32** %64, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %65 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_90, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_89.0 = extractvalue { i8*, i64* } %65, 0
  %_89.1 = extractvalue { i8*, i64* } %65, 1
  br label %bb35

bb35:                                             ; preds = %bb34
  %66 = getelementptr inbounds { %TmFmt*, i32*, i32*, i32* }, { %TmFmt*, i32*, i32*, i32* }* %_args, i32 0, i32 3
  %_93 = load i32*, i32** %66, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %67 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_93, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_92.0 = extractvalue { i8*, i64* } %67, 0
  %_92.1 = extractvalue { i8*, i64* } %67, 1
  br label %bb36

bb36:                                             ; preds = %bb35
  %68 = bitcast [4 x { i8*, i64* }]* %_76 to { i8*, i64* }*
  %69 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %68, i32 0, i32 0
  store i8* %_83.0, i8** %69, align 8
  %70 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %68, i32 0, i32 1
  store i64* %_83.1, i64** %70, align 8
  %71 = getelementptr inbounds [4 x { i8*, i64* }], [4 x { i8*, i64* }]* %_76, i32 0, i32 1
  %72 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %71, i32 0, i32 0
  store i8* %_86.0, i8** %72, align 8
  %73 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %71, i32 0, i32 1
  store i64* %_86.1, i64** %73, align 8
  %74 = getelementptr inbounds [4 x { i8*, i64* }], [4 x { i8*, i64* }]* %_76, i32 0, i32 2
  %75 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %74, i32 0, i32 0
  store i8* %_89.0, i8** %75, align 8
  %76 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %74, i32 0, i32 1
  store i64* %_89.1, i64** %76, align 8
  %77 = getelementptr inbounds [4 x { i8*, i64* }], [4 x { i8*, i64* }]* %_76, i32 0, i32 3
  %78 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %77, i32 0, i32 0
  store i8* %_92.0, i8** %78, align 8
  %79 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %77, i32 0, i32 1
  store i64* %_92.1, i64** %79, align 8
  %_73.0 = bitcast [4 x { i8*, i64* }]* %_76 to [0 x { i8*, i64* }]*
  br label %bb37

bb37:                                             ; preds = %bb36
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_69, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc159 to [0 x { [0 x i8]*, i64 }]*), i64 4, [0 x { i8*, i64* }]* nonnull align 8 %_73.0, i64 4, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [224 x i8] }>* @alloc191 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 4)
  br label %bb38

bb38:                                             ; preds = %bb37
; call core::fmt::Formatter::write_fmt
  %80 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_69)
  %81 = zext i1 %80 to i8
  store i8 %81, i8* %0, align 1
  br label %bb39

bb4:                                              ; preds = %bb11, %bb16, %bb3
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %82 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71dd653fc346d1b8E"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !range !2
  store i32 %82, i32* %_7, align 4
  br label %bb5

bb5:                                              ; preds = %bb4
  %83 = load i32, i32* %_7, align 4, !range !2
  %84 = sub i32 %83, 1114112
  %85 = icmp eq i32 %84, 0
  %_9 = select i1 %85, i64 0, i64 1
  %86 = icmp eq i64 %_9, 1
  br i1 %86, label %bb6, label %bb19

bb6:                                              ; preds = %bb5
  %ch = load i32, i32* %_7, align 4, !range !15
  %87 = icmp eq i32 %ch, 37
  br i1 %87, label %bb7, label %bb14

bb19:                                             ; preds = %bb5
  store i8 0, i8* %0, align 1
  br label %bb39

bb7:                                              ; preds = %bb6
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_16 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71dd653fc346d1b8E"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !range !2
  br label %bb8

bb14:                                             ; preds = %bb6
; call <core::fmt::Formatter as core::fmt::Write>::write_char
  %_24 = call zeroext i1 @"_ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h6e3d947244c54914E"(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 %ch)
  br label %bb15

bb15:                                             ; preds = %bb14
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %88 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_24)
  %89 = zext i1 %88 to i8
  store i8 %89, i8* %_23, align 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %90 = load i8, i8* %_23, align 1, !range !3
  %91 = trunc i8 %90 to i1
  %_27 = zext i1 %91 to i64
  switch i64 %_27, label %bb17 [
    i64 0, label %bb4
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb16
  unreachable

bb18:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %92 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1397 to %"core::panic::location::Location"*))
  %93 = zext i1 %92 to i8
  store i8 %93, i8* %0, align 1
  br label %bb39

bb8:                                              ; preds = %bb7
; call core::option::Option<T>::unwrap
  %_15 = call i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h5cf29493d7183f9eE"(i32 %_16, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1399 to %"core::panic::location::Location"*)), !range !15
  br label %bb9

bb9:                                              ; preds = %bb8
  %94 = bitcast %TmFmt* %self to %Tm**
  %_18 = load %Tm*, %Tm** %94, align 8, !nonnull !4
; call time::display::parse_type
  %_13 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 %_15, %Tm* align 4 dereferenceable(44) %_18)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %95 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_13)
  %96 = zext i1 %95 to i8
  store i8 %96, i8* %_12, align 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %97 = load i8, i8* %_12, align 1, !range !3
  %98 = trunc i8 %97 to i1
  %_19 = zext i1 %98 to i64
  switch i64 %_19, label %bb12 [
    i64 0, label %bb4
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb11
  unreachable

bb13:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %99 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1401 to %"core::panic::location::Location"*))
  %100 = zext i1 %99 to i8
  store i8 %100, i8* %0, align 1
  br label %bb39
}

; time::display::is_leap_year
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN4time7display12is_leap_year17hab2387c57e728db4E(i32 %year) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_5 = icmp eq i32 %year, -2147483648
  %_6 = and i1 false, %_5
  %1 = call i1 @llvm.expect.i1(i1 %_6, i1 false)
  br i1 %1, label %panic, label %bb4

bb4:                                              ; preds = %start
  %_2 = srem i32 %year, 4
  %2 = icmp eq i32 %_2, 0
  br i1 %2, label %bb2, label %bb1

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([48 x i8]* @str.a to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1403 to %"core::panic::location::Location"*)) #17
  unreachable

bb2:                                              ; preds = %bb4
  %_11 = icmp eq i32 %year, -2147483648
  %_12 = and i1 false, %_11
  %3 = call i1 @llvm.expect.i1(i1 %_12, i1 false)
  br i1 %3, label %panic1, label %bb8

bb1:                                              ; preds = %bb4
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb7, %bb1
  %4 = load i8, i8* %0, align 1, !range !3
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb8:                                              ; preds = %bb2
  %_8 = srem i32 %year, 100
  %6 = icmp eq i32 %_8, 0
  br i1 %6, label %bb6, label %bb5

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([48 x i8]* @str.a to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1405 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb8
  %_17 = icmp eq i32 %year, -2147483648
  %_18 = and i1 false, %_17
  %7 = call i1 @llvm.expect.i1(i1 %_18, i1 false)
  br i1 %7, label %panic2, label %bb9

bb5:                                              ; preds = %bb8
  store i8 1, i8* %_7, align 1
  br label %bb7

bb7:                                              ; preds = %bb9, %bb5
  %8 = load i8, i8* %_7, align 1, !range !3
  %9 = trunc i8 %8 to i1
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %0, align 1
  br label %bb3

bb9:                                              ; preds = %bb6
  %_14 = srem i32 %year, 400
  %_13 = icmp eq i32 %_14, 0
  %11 = zext i1 %_13 to i8
  store i8 %11, i8* %_7, align 1
  br label %bb7

panic2:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([48 x i8]* @str.a to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1407 to %"core::panic::location::Location"*)) #17
  unreachable
}

; time::display::days_in_year
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN4time7display12days_in_year17h34ce2a7a77934a4dE(i32 %year) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
; call time::display::is_leap_year
  %_2 = call zeroext i1 @_ZN4time7display12is_leap_year17hab2387c57e728db4E(i32 %year)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i32 365, i32* %0, align 4
  br label %bb4

bb2:                                              ; preds = %bb1
  store i32 366, i32* %0, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %1 = load i32, i32* %0, align 4
  ret i32 %1
}

; time::display::iso_week_days
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN4time7display13iso_week_days17h3645a1c6e5791f4bE(i32 %yday, i32 %wday) unnamed_addr #1 {
start:
  %0 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %yday, i32 %wday)
  %_16.0 = extractvalue { i32, i1 } %0, 0
  %_16.1 = extractvalue { i32, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  %2 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_16.0, i32 4)
  %_18.0 = extractvalue { i32, i1 } %2, 0
  %_18.1 = extractvalue { i32, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false)
  br i1 %3, label %panic1, label %bb2

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1409 to %"core::panic::location::Location"*)) #17
  unreachable

bb2:                                              ; preds = %bb1
  %4 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_18.0, i32 378)
  %_20.0 = extractvalue { i32, i1 } %4, 0
  %_20.1 = extractvalue { i32, i1 } %4, 1
  %5 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false)
  br i1 %5, label %panic2, label %bb3

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1409 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %bb2
  %_22 = icmp eq i32 %_20.0, -2147483648
  %_23 = and i1 false, %_22
  %6 = call i1 @llvm.expect.i1(i1 %_23, i1 false)
  br i1 %6, label %panic3, label %bb4

panic2:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1411 to %"core::panic::location::Location"*)) #17
  unreachable

bb4:                                              ; preds = %bb3
  %_10 = srem i32 %_20.0, 7
  %7 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %yday, i32 %_10)
  %_24.0 = extractvalue { i32, i1 } %7, 0
  %_24.1 = extractvalue { i32, i1 } %7, 1
  %8 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false)
  br i1 %8, label %panic4, label %bb5

panic3:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([48 x i8]* @str.a to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1411 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb4
  %9 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_24.0, i32 4)
  %_26.0 = extractvalue { i32, i1 } %9, 0
  %_26.1 = extractvalue { i32, i1 } %9, 1
  %10 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false)
  br i1 %10, label %panic5, label %bb6

panic4:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1413 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb5
  %11 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_26.0, i32 1)
  %_28.0 = extractvalue { i32, i1 } %11, 0
  %_28.1 = extractvalue { i32, i1 } %11, 1
  %12 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false)
  br i1 %12, label %panic6, label %bb7

panic5:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1413 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %bb6
  ret i32 %_28.0

panic6:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1413 to %"core::panic::location::Location"*)) #17
  unreachable
}

; time::display::iso_week
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN4time7display8iso_week17h84c43b67bfd305b8E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 %ch, %Tm* align 4 dereferenceable(44) %tm) unnamed_addr #1 {
start:
  %_87 = alloca i32, align 4
  %_85 = alloca i32*, align 8
  %_84 = alloca [1 x { i8*, i64* }], align 8
  %_77 = alloca %"core::fmt::Arguments", align 8
  %_57 = alloca i32, align 4
  %_55 = alloca i32*, align 8
  %_54 = alloca [1 x { i8*, i64* }], align 8
  %_47 = alloca %"core::fmt::Arguments", align 8
  %_40 = alloca i32*, align 8
  %_39 = alloca [1 x { i8*, i64* }], align 8
  %_32 = alloca %"core::fmt::Arguments", align 8
  %days = alloca i32, align 4
  %year = alloca i32, align 4
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 5
  %_5 = load i32, i32* %1, align 4
  %2 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_5, i32 1900)
  %_6.0 = extractvalue { i32, i1 } %2, 0
  %_6.1 = extractvalue { i32, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false)
  br i1 %3, label %panic, label %bb1

bb1:                                              ; preds = %start
  store i32 %_6.0, i32* %year, align 4
  %4 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 7
  %_8 = load i32, i32* %4, align 4
  %5 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 6
  %_9 = load i32, i32* %5, align 4
; call time::display::iso_week_days
  %6 = call i32 @_ZN4time7display13iso_week_days17h3645a1c6e5791f4bE(i32 %_8, i32 %_9)
  store i32 %6, i32* %days, align 4
  br label %bb2

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1415 to %"core::panic::location::Location"*)) #17
  unreachable

bb2:                                              ; preds = %bb1
  %_11 = load i32, i32* %days, align 4
  %_10 = icmp slt i32 %_11, 0
  br i1 %_10, label %bb3, label %bb8

bb8:                                              ; preds = %bb2
  %7 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 7
  %_22 = load i32, i32* %7, align 4
  %_24 = load i32, i32* %year, align 4
; call time::display::days_in_year
  %_23 = call i32 @_ZN4time7display12days_in_year17h34ce2a7a77934a4dE(i32 %_24)
  br label %bb9

bb3:                                              ; preds = %bb2
  %8 = load i32, i32* %year, align 4
  %9 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 1)
  %_12.0 = extractvalue { i32, i1 } %9, 0
  %_12.1 = extractvalue { i32, i1 } %9, 1
  %10 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false)
  br i1 %10, label %panic1, label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_12.0, i32* %year, align 4
  %11 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 7
  %_15 = load i32, i32* %11, align 4
  %_17 = load i32, i32* %year, align 4
; call time::display::days_in_year
  %_16 = call i32 @_ZN4time7display12days_in_year17h34ce2a7a77934a4dE(i32 %_17)
  br label %bb5

panic1:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1417 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb4
  %12 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_15, i32 %_16)
  %_18.0 = extractvalue { i32, i1 } %12, 0
  %_18.1 = extractvalue { i32, i1 } %12, 1
  %13 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false)
  br i1 %13, label %panic2, label %bb6

bb6:                                              ; preds = %bb5
  %14 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 6
  %_19 = load i32, i32* %14, align 4
; call time::display::iso_week_days
  %_13 = call i32 @_ZN4time7display13iso_week_days17h3645a1c6e5791f4bE(i32 %_18.0, i32 %_19)
  br label %bb7

panic2:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1419 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %bb6
  store i32 %_13, i32* %days, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11, %bb7
  switch i32 %ch, label %bb15 [
    i32 71, label %bb16
    i32 103, label %bb19
    i32 86, label %bb26
  ]

bb9:                                              ; preds = %bb8
  %15 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_22, i32 %_23)
  %_25.0 = extractvalue { i32, i1 } %15, 0
  %_25.1 = extractvalue { i32, i1 } %15, 1
  %16 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false)
  br i1 %16, label %panic3, label %bb10

bb10:                                             ; preds = %bb9
  %17 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 6
  %_26 = load i32, i32* %17, align 4
; call time::display::iso_week_days
  %d = call i32 @_ZN4time7display13iso_week_days17h3645a1c6e5791f4bE(i32 %_25.0, i32 %_26)
  br label %bb11

panic3:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1421 to %"core::panic::location::Location"*)) #17
  unreachable

bb11:                                             ; preds = %bb10
  %_27 = icmp sle i32 0, %d
  br i1 %_27, label %bb12, label %bb14

bb12:                                             ; preds = %bb11
  %18 = load i32, i32* %year, align 4
  %19 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %18, i32 1)
  %_29.0 = extractvalue { i32, i1 } %19, 0
  %_29.1 = extractvalue { i32, i1 } %19, 1
  %20 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false)
  br i1 %20, label %panic4, label %bb13

bb13:                                             ; preds = %bb12
  store i32 %_29.0, i32* %year, align 4
  store i32 %d, i32* %days, align 4
  br label %bb14

panic4:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1423 to %"core::panic::location::Location"*)) #17
  unreachable

bb15:                                             ; preds = %bb14
  store i8 0, i8* %0, align 1
  br label %bb32

bb16:                                             ; preds = %bb14
  store i32* %year, i32** %_40, align 8
  %_args11 = load i32*, i32** %_40, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %21 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args11, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_43.0 = extractvalue { i8*, i64* } %21, 0
  %_43.1 = extractvalue { i8*, i64* } %21, 1
  br label %bb17

bb19:                                             ; preds = %bb14
  %_60 = load i32, i32* %year, align 4
  %_62 = icmp eq i32 %_60, -2147483648
  %_63 = and i1 false, %_62
  %22 = call i1 @llvm.expect.i1(i1 %_63, i1 false)
  br i1 %22, label %panic7, label %bb20

bb26:                                             ; preds = %bb14
  %_89 = load i32, i32* %days, align 4
  %_91 = icmp eq i32 %_89, -2147483648
  %_92 = and i1 false, %_91
  %23 = call i1 @llvm.expect.i1(i1 %_92, i1 false)
  br i1 %23, label %panic5, label %bb27

bb32:                                             ; preds = %bb18, %bb25, %bb31, %bb15
  %24 = load i8, i8* %0, align 1, !range !3
  %25 = trunc i8 %24 to i1
  ret i1 %25

bb27:                                             ; preds = %bb26
  %_88 = sdiv i32 %_89, 7
  %26 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_88, i32 1)
  %_93.0 = extractvalue { i32, i1 } %26, 0
  %_93.1 = extractvalue { i32, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_93.1, i1 false)
  br i1 %27, label %panic6, label %bb28

panic5:                                           ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1425 to %"core::panic::location::Location"*)) #17
  unreachable

bb28:                                             ; preds = %bb27
  store i32 %_93.0, i32* %_87, align 4
  store i32* %_87, i32** %_85, align 8
  %_args = load i32*, i32** %_85, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %28 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_95.0 = extractvalue { i8*, i64* } %28, 0
  %_95.1 = extractvalue { i8*, i64* } %28, 1
  br label %bb29

panic6:                                           ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1425 to %"core::panic::location::Location"*)) #17
  unreachable

bb29:                                             ; preds = %bb28
  %29 = bitcast [1 x { i8*, i64* }]* %_84 to { i8*, i64* }*
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %29, i32 0, i32 0
  store i8* %_95.0, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %29, i32 0, i32 1
  store i64* %_95.1, i64** %31, align 8
  %_81.0 = bitcast [1 x { i8*, i64* }]* %_84 to [0 x { i8*, i64* }]*
  br label %bb30

bb30:                                             ; preds = %bb29
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_77, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_81.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc285 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb31

bb31:                                             ; preds = %bb30
; call core::fmt::Formatter::write_fmt
  %32 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_77)
  %33 = zext i1 %32 to i8
  store i8 %33, i8* %0, align 1
  br label %bb32

bb20:                                             ; preds = %bb19
  %_59 = srem i32 %_60, 100
  %34 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_59, i32 100)
  %_64.0 = extractvalue { i32, i1 } %34, 0
  %_64.1 = extractvalue { i32, i1 } %34, 1
  %35 = call i1 @llvm.expect.i1(i1 %_64.1, i1 false)
  br i1 %35, label %panic8, label %bb21

panic7:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([48 x i8]* @str.a to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1427 to %"core::panic::location::Location"*)) #17
  unreachable

bb21:                                             ; preds = %bb20
  %_66 = icmp eq i32 %_64.0, -2147483648
  %_67 = and i1 false, %_66
  %36 = call i1 @llvm.expect.i1(i1 %_67, i1 false)
  br i1 %36, label %panic9, label %bb22

panic8:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1429 to %"core::panic::location::Location"*)) #17
  unreachable

bb22:                                             ; preds = %bb21
  %37 = srem i32 %_64.0, 100
  store i32 %37, i32* %_57, align 4
  store i32* %_57, i32** %_55, align 8
  %_args10 = load i32*, i32** %_55, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %38 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args10, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_69.0 = extractvalue { i8*, i64* } %38, 0
  %_69.1 = extractvalue { i8*, i64* } %38, 1
  br label %bb23

panic9:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([48 x i8]* @str.a to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1429 to %"core::panic::location::Location"*)) #17
  unreachable

bb23:                                             ; preds = %bb22
  %39 = bitcast [1 x { i8*, i64* }]* %_54 to { i8*, i64* }*
  %40 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 0
  store i8* %_69.0, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 1
  store i64* %_69.1, i64** %41, align 8
  %_51.0 = bitcast [1 x { i8*, i64* }]* %_54 to [0 x { i8*, i64* }]*
  br label %bb24

bb24:                                             ; preds = %bb23
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_47, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_51.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc285 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb25

bb25:                                             ; preds = %bb24
; call core::fmt::Formatter::write_fmt
  %42 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_47)
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %0, align 1
  br label %bb32

bb17:                                             ; preds = %bb16
  %44 = bitcast [1 x { i8*, i64* }]* %_39 to { i8*, i64* }*
  %45 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %44, i32 0, i32 0
  store i8* %_43.0, i8** %45, align 8
  %46 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %44, i32 0, i32 1
  store i64* %_43.1, i64** %46, align 8
  %_36.0 = bitcast [1 x { i8*, i64* }]* %_39 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_32, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_36.0, i64 1)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::fmt::Formatter::write_fmt
  %47 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_32)
  %48 = zext i1 %47 to i8
  store i8 %48, i8* %0, align 1
  br label %bb32
}

; time::display::parse_type
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 %ch, %Tm* align 4 dereferenceable(44) %tm) unnamed_addr #1 {
start:
  %_832 = alloca %TmFmt, align 8
  %_830 = alloca i64*, align 8
  %_829 = alloca [1 x { i8*, i64* }], align 8
  %_822 = alloca %"core::fmt::Arguments", align 8
  %_args = alloca { i32*, i32*, i32* }, align 8
  %_803 = alloca { i32*, i32*, i32* }, align 8
  %_802 = alloca [3 x { i8*, i64* }], align 8
  %_795 = alloca %"core::fmt::Arguments", align 8
  %h2 = alloca i32, align 4
  %m = alloca i32, align 4
  %sign = alloca i32, align 4
  %_772 = alloca { [0 x i8]*, i64 }, align 8
  %_756 = alloca i32, align 4
  %_754 = alloca i32*, align 8
  %_753 = alloca [1 x { i8*, i64* }], align 8
  %_746 = alloca %"core::fmt::Arguments", align 8
  %_738 = alloca i32, align 4
  %_736 = alloca i32*, align 8
  %_735 = alloca [1 x { i8*, i64* }], align 8
  %_728 = alloca %"core::fmt::Arguments", align 8
  %_721 = alloca i32*, align 8
  %_720 = alloca [1 x { i8*, i64* }], align 8
  %_713 = alloca %"core::fmt::Arguments", align 8
  %_686 = alloca i32, align 4
  %_684 = alloca i32*, align 8
  %_683 = alloca [1 x { i8*, i64* }], align 8
  %_676 = alloca %"core::fmt::Arguments", align 8
  %_664 = alloca i8, align 1
  %_656 = alloca i8, align 1
  %_647 = alloca i8, align 1
  %_639 = alloca i8, align 1
  %_631 = alloca i32, align 4
  %_629 = alloca i32*, align 8
  %_628 = alloca [1 x { i8*, i64* }], align 8
  %_621 = alloca %"core::fmt::Arguments", align 8
  %_601 = alloca i32, align 4
  %_599 = alloca i32*, align 8
  %_598 = alloca [1 x { i8*, i64* }], align 8
  %_591 = alloca %"core::fmt::Arguments", align 8
  %_576 = alloca i8, align 1
  %_568 = alloca i8, align 1
  %_559 = alloca i8, align 1
  %_551 = alloca i8, align 1
  %_545 = alloca { i64, i32 }, align 8
  %_543 = alloca i64*, align 8
  %_542 = alloca [1 x { i8*, i64* }], align 8
  %_535 = alloca %"core::fmt::Arguments", align 8
  %_524 = alloca i32*, align 8
  %_523 = alloca [1 x { i8*, i64* }], align 8
  %_516 = alloca %"core::fmt::Arguments", align 8
  %_504 = alloca i8, align 1
  %_496 = alloca i8, align 1
  %_487 = alloca i8, align 1
  %_479 = alloca i8, align 1
  %_470 = alloca i8, align 1
  %_462 = alloca i8, align 1
  %_451 = alloca i8, align 1
  %_443 = alloca i8, align 1
  %_438 = alloca { [0 x i8]*, i64 }, align 8
  %_432 = alloca { [0 x i8]*, i64 }, align 8
  %_417 = alloca i32, align 4
  %_415 = alloca i32*, align 8
  %_414 = alloca [1 x { i8*, i64* }], align 8
  %_407 = alloca %"core::fmt::Arguments", align 8
  %_396 = alloca i32*, align 8
  %_395 = alloca [1 x { i8*, i64* }], align 8
  %_388 = alloca %"core::fmt::Arguments", align 8
  %_377 = alloca i32*, align 8
  %_376 = alloca [1 x { i8*, i64* }], align 8
  %_369 = alloca %"core::fmt::Arguments", align 8
  %h1 = alloca i32, align 4
  %_353 = alloca i32*, align 8
  %_352 = alloca [1 x { i8*, i64* }], align 8
  %_345 = alloca %"core::fmt::Arguments", align 8
  %_333 = alloca i32, align 4
  %_331 = alloca i32*, align 8
  %_330 = alloca [1 x { i8*, i64* }], align 8
  %_323 = alloca %"core::fmt::Arguments", align 8
  %_312 = alloca i32*, align 8
  %_311 = alloca [1 x { i8*, i64* }], align 8
  %_304 = alloca %"core::fmt::Arguments", align 8
  %h = alloca i32, align 4
  %_288 = alloca i32*, align 8
  %_287 = alloca [1 x { i8*, i64* }], align 8
  %_280 = alloca %"core::fmt::Arguments", align 8
  %_264 = alloca i8, align 1
  %_256 = alloca i8, align 1
  %_247 = alloca i8, align 1
  %_239 = alloca i8, align 1
  %_229 = alloca i32*, align 8
  %_228 = alloca [1 x { i8*, i64* }], align 8
  %_221 = alloca %"core::fmt::Arguments", align 8
  %_210 = alloca i32*, align 8
  %_209 = alloca [1 x { i8*, i64* }], align 8
  %_202 = alloca %"core::fmt::Arguments", align 8
  %_191 = alloca i32*, align 8
  %_190 = alloca [1 x { i8*, i64* }], align 8
  %_183 = alloca %"core::fmt::Arguments", align 8
  %_171 = alloca i8, align 1
  %_163 = alloca i8, align 1
  %_154 = alloca i8, align 1
  %_146 = alloca i8, align 1
  %_135 = alloca i8, align 1
  %_127 = alloca i8, align 1
  %_118 = alloca i8, align 1
  %_110 = alloca i8, align 1
  %_101 = alloca i8, align 1
  %_93 = alloca i8, align 1
  %_84 = alloca i8, align 1
  %_76 = alloca i8, align 1
  %_61 = alloca i32, align 4
  %_59 = alloca i32*, align 8
  %_58 = alloca [1 x { i8*, i64* }], align 8
  %_51 = alloca %"core::fmt::Arguments", align 8
  %_37 = alloca { [0 x i8]*, i64 }, align 8
  %_23 = alloca { [0 x i8]*, i64 }, align 8
  %_14 = alloca { [0 x i8]*, i64 }, align 8
  %_5 = alloca { [0 x i8]*, i64 }, align 8
  %0 = alloca i8, align 1
  switch i32 %ch, label %bb1 [
    i32 65, label %bb2
    i32 97, label %bb12
    i32 66, label %bb22
    i32 98, label %bb37
    i32 104, label %bb37
    i32 67, label %bb52
    i32 99, label %bb58
    i32 68, label %bb99
    i32 120, label %bb99
    i32 100, label %bb120
    i32 101, label %bb124
    i32 102, label %bb128
    i32 70, label %bb132
    i32 71, label %bb153
    i32 103, label %bb154
    i32 72, label %bb155
    i32 73, label %bb159
    i32 106, label %bb168
    i32 107, label %bb173
    i32 108, label %bb177
    i32 77, label %bb186
    i32 109, label %bb190
    i32 110, label %bb195
    i32 80, label %bb196
    i32 112, label %bb200
    i32 82, label %bb204
    i32 114, label %bb215
    i32 83, label %bb246
    i32 115, label %bb250
    i32 84, label %bb254
    i32 88, label %bb254
    i32 116, label %bb275
    i32 85, label %bb276
    i32 117, label %bb283
    i32 86, label %bb289
    i32 118, label %bb290
    i32 87, label %bb311
    i32 119, label %bb321
    i32 89, label %bb324
    i32 121, label %bb328
    i32 90, label %bb334
    i32 122, label %bb338
    i32 43, label %bb352
    i32 37, label %bb356
  ]

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc1596 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1432 to %"core::panic::location::Location"*)) #17
  unreachable

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 6
  %2 = load i32, i32* %1, align 4
  switch i32 %2, label %bb3 [
    i32 0, label %bb4
    i32 1, label %bb5
    i32 2, label %bb6
    i32 3, label %bb7
    i32 4, label %bb8
    i32 5, label %bb9
    i32 6, label %bb10
  ]

bb12:                                             ; preds = %start
  %3 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 6
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %bb13 [
    i32 0, label %bb14
    i32 1, label %bb15
    i32 2, label %bb16
    i32 3, label %bb17
    i32 4, label %bb18
    i32 5, label %bb19
    i32 6, label %bb20
  ]

bb22:                                             ; preds = %start
  %5 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %bb23 [
    i32 0, label %bb24
    i32 1, label %bb25
    i32 2, label %bb26
    i32 3, label %bb27
    i32 4, label %bb28
    i32 5, label %bb29
    i32 6, label %bb30
    i32 7, label %bb31
    i32 8, label %bb32
    i32 9, label %bb33
    i32 10, label %bb34
    i32 11, label %bb35
  ]

bb37:                                             ; preds = %start, %start
  %7 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 4
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %bb38 [
    i32 0, label %bb39
    i32 1, label %bb40
    i32 2, label %bb41
    i32 3, label %bb42
    i32 4, label %bb43
    i32 5, label %bb44
    i32 6, label %bb45
    i32 7, label %bb46
    i32 8, label %bb47
    i32 9, label %bb48
    i32 10, label %bb49
    i32 11, label %bb50
  ]

bb52:                                             ; preds = %start
  %9 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 5
  %_63 = load i32, i32* %9, align 4
  %10 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_63, i32 1900)
  %_64.0 = extractvalue { i32, i1 } %10, 0
  %_64.1 = extractvalue { i32, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_64.1, i1 false)
  br i1 %11, label %panic41, label %bb53

bb58:                                             ; preds = %start
; call time::display::parse_type
  %_77 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 97, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb59

bb99:                                             ; preds = %start, %start
; call time::display::parse_type
  %_147 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 109, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb100

bb120:                                            ; preds = %start
  %_192 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 3
  store i32* %_192, i32** %_191, align 8
  %_args40 = load i32*, i32** %_191, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %12 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args40, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_194.0 = extractvalue { i8*, i64* } %12, 0
  %_194.1 = extractvalue { i8*, i64* } %12, 1
  br label %bb121

bb124:                                            ; preds = %start
  %_211 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 3
  store i32* %_211, i32** %_210, align 8
  %_args39 = load i32*, i32** %_210, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %13 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args39, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_213.0 = extractvalue { i8*, i64* } %13, 0
  %_213.1 = extractvalue { i8*, i64* } %13, 1
  br label %bb125

bb128:                                            ; preds = %start
  %_230 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 10
  store i32* %_230, i32** %_229, align 8
  %_args38 = load i32*, i32** %_229, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %14 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args38, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_232.0 = extractvalue { i8*, i64* } %14, 0
  %_232.1 = extractvalue { i8*, i64* } %14, 1
  br label %bb129

bb132:                                            ; preds = %start
; call time::display::parse_type
  %_240 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 89, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb133

bb153:                                            ; preds = %start
; call time::display::iso_week
  %15 = call zeroext i1 @_ZN4time7display8iso_week17h84c43b67bfd305b8E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 71, %Tm* align 4 dereferenceable(44) %tm)
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %0, align 1
  br label %bb357

bb154:                                            ; preds = %start
; call time::display::iso_week
  %17 = call zeroext i1 @_ZN4time7display8iso_week17h84c43b67bfd305b8E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 103, %Tm* align 4 dereferenceable(44) %tm)
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %0, align 1
  br label %bb357

bb155:                                            ; preds = %start
  %_289 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 2
  store i32* %_289, i32** %_288, align 8
  %_args37 = load i32*, i32** %_288, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %19 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args37, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_291.0 = extractvalue { i8*, i64* } %19, 0
  %_291.1 = extractvalue { i8*, i64* } %19, 1
  br label %bb156

bb159:                                            ; preds = %start
  %20 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %h, align 4
  %_299 = load i32, i32* %h, align 4
  %22 = icmp eq i32 %_299, 0
  br i1 %22, label %bb160, label %bb161

bb168:                                            ; preds = %start
  %23 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 7
  %_334 = load i32, i32* %23, align 4
  %24 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_334, i32 1)
  %_335.0 = extractvalue { i32, i1 } %24, 0
  %_335.1 = extractvalue { i32, i1 } %24, 1
  %25 = call i1 @llvm.expect.i1(i1 %_335.1, i1 false)
  br i1 %25, label %panic33, label %bb169

bb173:                                            ; preds = %start
  %_354 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 2
  store i32* %_354, i32** %_353, align 8
  %_args32 = load i32*, i32** %_353, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %26 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args32, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_356.0 = extractvalue { i8*, i64* } %26, 0
  %_356.1 = extractvalue { i8*, i64* } %26, 1
  br label %bb174

bb177:                                            ; preds = %start
  %27 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %h1, align 4
  %_364 = load i32, i32* %h1, align 4
  %29 = icmp eq i32 %_364, 0
  br i1 %29, label %bb178, label %bb179

bb186:                                            ; preds = %start
  %_397 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 1
  store i32* %_397, i32** %_396, align 8
  %_args29 = load i32*, i32** %_396, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %30 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args29, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_399.0 = extractvalue { i8*, i64* } %30, 0
  %_399.1 = extractvalue { i8*, i64* } %30, 1
  br label %bb187

bb190:                                            ; preds = %start
  %31 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 4
  %_418 = load i32, i32* %31, align 4
  %32 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_418, i32 1)
  %_419.0 = extractvalue { i32, i1 } %32, 0
  %_419.1 = extractvalue { i32, i1 } %32, 1
  %33 = call i1 @llvm.expect.i1(i1 %_419.1, i1 false)
  br i1 %33, label %panic27, label %bb191

bb195:                                            ; preds = %start
; call core::fmt::Formatter::write_str
  %34 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1505 to [0 x i8]*), i64 1)
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %0, align 1
  br label %bb357

bb196:                                            ; preds = %start
  %36 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 2
  %_434 = load i32, i32* %36, align 4
  %_433 = icmp slt i32 %_434, 12
  br i1 %_433, label %bb197, label %bb198

bb200:                                            ; preds = %start
  %37 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 2
  %_440 = load i32, i32* %37, align 4
  %_439 = icmp slt i32 %_440, 12
  br i1 %_439, label %bb201, label %bb202

bb204:                                            ; preds = %start
; call time::display::parse_type
  %_444 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 72, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb205

bb215:                                            ; preds = %start
; call time::display::parse_type
  %_463 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 73, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb216

bb246:                                            ; preds = %start
  %_525 = bitcast %Tm* %tm to i32*
  store i32* %_525, i32** %_524, align 8
  %_args26 = load i32*, i32** %_524, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %38 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args26, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_527.0 = extractvalue { i8*, i64* } %38, 0
  %_527.1 = extractvalue { i8*, i64* } %38, 1
  br label %bb247

bb250:                                            ; preds = %start
; call time::Tm::to_timespec
  %39 = call { i64, i32 } @_ZN4time2Tm11to_timespec17hd91ed0d53e0d439dE(%Tm* align 4 dereferenceable(44) %tm)
  store { i64, i32 } %39, { i64, i32 }* %_545, align 8
  br label %bb251

bb254:                                            ; preds = %start, %start
; call time::display::parse_type
  %_552 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 72, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb255

bb275:                                            ; preds = %start
; call core::fmt::Formatter::write_str
  %40 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1470 to [0 x i8]*), i64 1)
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %0, align 1
  br label %bb357

bb276:                                            ; preds = %start
  %42 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 7
  %_604 = load i32, i32* %42, align 4
  %43 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 6
  %_605 = load i32, i32* %43, align 4
  %44 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_604, i32 %_605)
  %_606.0 = extractvalue { i32, i1 } %44, 0
  %_606.1 = extractvalue { i32, i1 } %44, 1
  %45 = call i1 @llvm.expect.i1(i1 %_606.1, i1 false)
  br i1 %45, label %panic21, label %bb277

bb283:                                            ; preds = %start
  %46 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 6
  %i = load i32, i32* %46, align 4
  %47 = icmp eq i32 %i, 0
  br i1 %47, label %bb284, label %bb285

bb289:                                            ; preds = %start
; call time::display::iso_week
  %48 = call zeroext i1 @_ZN4time7display8iso_week17h84c43b67bfd305b8E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 86, %Tm* align 4 dereferenceable(44) %tm)
  %49 = zext i1 %48 to i8
  store i8 %49, i8* %0, align 1
  br label %bb357

bb290:                                            ; preds = %start
; call time::display::parse_type
  %_640 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 101, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb291

bb311:                                            ; preds = %start
  %50 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 7
  %_689 = load i32, i32* %50, align 4
  %51 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 6
  %_693 = load i32, i32* %51, align 4
  %52 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_693, i32 1)
  %_694.0 = extractvalue { i32, i1 } %52, 0
  %_694.1 = extractvalue { i32, i1 } %52, 1
  %53 = call i1 @llvm.expect.i1(i1 %_694.1, i1 false)
  br i1 %53, label %panic13, label %bb312

bb321:                                            ; preds = %start
  %_722 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 6
  store i32* %_722, i32** %_721, align 8
  %_args12 = load i32*, i32** %_721, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %54 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args12, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_724.0 = extractvalue { i8*, i64* } %54, 0
  %_724.1 = extractvalue { i8*, i64* } %54, 1
  br label %bb322

bb324:                                            ; preds = %start
  %55 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 5
  %_739 = load i32, i32* %55, align 4
  %56 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_739, i32 1900)
  %_740.0 = extractvalue { i32, i1 } %56, 0
  %_740.1 = extractvalue { i32, i1 } %56, 1
  %57 = call i1 @llvm.expect.i1(i1 %_740.1, i1 false)
  br i1 %57, label %panic10, label %bb325

bb328:                                            ; preds = %start
  %58 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 5
  %_758 = load i32, i32* %58, align 4
  %59 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_758, i32 1900)
  %_759.0 = extractvalue { i32, i1 } %59, 0
  %_759.1 = extractvalue { i32, i1 } %59, 1
  %60 = call i1 @llvm.expect.i1(i1 %_759.1, i1 false)
  br i1 %60, label %panic7, label %bb329

bb334:                                            ; preds = %start
  %61 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 9
  %_773 = load i32, i32* %61, align 4
  %62 = icmp eq i32 %_773, 0
  br i1 %62, label %bb335, label %bb336

bb338:                                            ; preds = %start
  %63 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 9
  %_778 = load i32, i32* %63, align 4
  %_777 = icmp sgt i32 %_778, 0
  br i1 %_777, label %bb339, label %bb340

bb352:                                            ; preds = %start
; call time::Tm::rfc3339
  call void @_ZN4time2Tm7rfc333917h3459dda6d0b6b847E(%TmFmt* noalias nocapture sret(%TmFmt) dereferenceable(32) %_832, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb353

bb356:                                            ; preds = %start
; call core::fmt::Formatter::write_str
  %64 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1433 to [0 x i8]*), i64 1)
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %0, align 1
  br label %bb357

bb357:                                            ; preds = %bb11, %bb21, %bb36, %bb51, %bb57, %bb96, %bb98, %bb93, %bb88, %bb83, %bb78, %bb73, %bb68, %bb63, %bb117, %bb119, %bb114, %bb109, %bb104, %bb123, %bb127, %bb131, %bb150, %bb152, %bb147, %bb142, %bb137, %bb153, %bb154, %bb158, %bb167, %bb172, %bb176, %bb185, %bb189, %bb194, %bb195, %bb199, %bb203, %bb212, %bb214, %bb209, %bb243, %bb245, %bb240, %bb235, %bb230, %bb225, %bb220, %bb249, %bb253, %bb272, %bb274, %bb269, %bb264, %bb259, %bb275, %bb282, %bb288, %bb289, %bb308, %bb310, %bb305, %bb300, %bb295, %bb320, %bb323, %bb327, %bb333, %bb337, %bb351, %bb355, %bb356
  %66 = load i8, i8* %0, align 1, !range !3
  %67 = trunc i8 %66 to i1
  ret i1 %67

bb353:                                            ; preds = %bb352
  %68 = bitcast i64** %_830 to %TmFmt**
  store %TmFmt* %_832, %TmFmt** %68, align 8
  %_args3 = load i64*, i64** %_830, align 8, !nonnull !4
  %_836 = bitcast i64* %_args3 to %TmFmt*
; call core::fmt::ArgumentV1::new
  %69 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h7f928b4406449fbdE(%TmFmt* align 8 dereferenceable(32) %_836, i1 (%TmFmt*, %"core::fmt::Formatter"*)* nonnull @"_ZN4time7display60_$LT$impl$u20$core..fmt..Display$u20$for$u20$time..TmFmt$GT$3fmt17hebd32c215fa27133E")
  %_835.0 = extractvalue { i8*, i64* } %69, 0
  %_835.1 = extractvalue { i8*, i64* } %69, 1
  br label %bb354

bb354:                                            ; preds = %bb353
  %70 = bitcast [1 x { i8*, i64* }]* %_829 to { i8*, i64* }*
  %71 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %70, i32 0, i32 0
  store i8* %_835.0, i8** %71, align 8
  %72 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %70, i32 0, i32 1
  store i64* %_835.1, i64** %72, align 8
  %_826.0 = bitcast [1 x { i8*, i64* }]* %_829 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_822, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_826.0, i64 1)
  br label %bb355

bb355:                                            ; preds = %bb354
; call core::fmt::Formatter::write_fmt
  %73 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_822)
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %0, align 1
  br label %bb357

bb340:                                            ; preds = %bb338
  store i32 45, i32* %sign, align 4
  br label %bb341

bb339:                                            ; preds = %bb338
  store i32 43, i32* %sign, align 4
  br label %bb341

bb341:                                            ; preds = %bb340, %bb339
  %75 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 9
  %_781 = load i32, i32* %75, align 4
; call time::display::abs
  %_780 = call i32 @_ZN4time7display3abs17he39446ec470aaf99E(i32 %_781)
  br label %bb342

bb342:                                            ; preds = %bb341
  %_783 = icmp eq i32 %_780, -2147483648
  %_784 = and i1 false, %_783
  %76 = call i1 @llvm.expect.i1(i1 %_784, i1 false)
  br i1 %76, label %panic, label %bb343

bb343:                                            ; preds = %bb342
  %77 = sdiv i32 %_780, 60
  store i32 %77, i32* %m, align 4
  %_786 = load i32, i32* %m, align 4
  %_788 = icmp eq i32 %_786, -2147483648
  %_789 = and i1 false, %_788
  %78 = call i1 @llvm.expect.i1(i1 %_789, i1 false)
  br i1 %78, label %panic4, label %bb344

panic:                                            ; preds = %bb342
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1435 to %"core::panic::location::Location"*)) #17
  unreachable

bb344:                                            ; preds = %bb343
  %79 = sdiv i32 %_786, 60
  store i32 %79, i32* %h2, align 4
  %_791 = load i32, i32* %h2, align 4
  %80 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %_791, i32 60)
  %_792.0 = extractvalue { i32, i1 } %80, 0
  %_792.1 = extractvalue { i32, i1 } %80, 1
  %81 = call i1 @llvm.expect.i1(i1 %_792.1, i1 false)
  br i1 %81, label %panic5, label %bb345

panic4:                                           ; preds = %bb343
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1437 to %"core::panic::location::Location"*)) #17
  unreachable

bb345:                                            ; preds = %bb344
  %82 = load i32, i32* %m, align 4
  %83 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %82, i32 %_792.0)
  %_793.0 = extractvalue { i32, i1 } %83, 0
  %_793.1 = extractvalue { i32, i1 } %83, 1
  %84 = call i1 @llvm.expect.i1(i1 %_793.1, i1 false)
  br i1 %84, label %panic6, label %bb346

panic5:                                           ; preds = %bb344
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1439 to %"core::panic::location::Location"*)) #17
  unreachable

bb346:                                            ; preds = %bb345
  store i32 %_793.0, i32* %m, align 4
  %85 = bitcast { i32*, i32*, i32* }* %_803 to i32**
  store i32* %sign, i32** %85, align 8
  %86 = getelementptr inbounds { i32*, i32*, i32* }, { i32*, i32*, i32* }* %_803, i32 0, i32 1
  store i32* %h2, i32** %86, align 8
  %87 = getelementptr inbounds { i32*, i32*, i32* }, { i32*, i32*, i32* }* %_803, i32 0, i32 2
  store i32* %m, i32** %87, align 8
  %88 = bitcast { i32*, i32*, i32* }* %_args to i8*
  %89 = bitcast { i32*, i32*, i32* }* %_803 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 24, i1 false)
  %90 = bitcast { i32*, i32*, i32* }* %_args to i32**
  %_809 = load i32*, i32** %90, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %91 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h296710cf9c74ed59E(i32* align 4 dereferenceable(4) %_809, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h011d980131b3c87bE")
  %_808.0 = extractvalue { i8*, i64* } %91, 0
  %_808.1 = extractvalue { i8*, i64* } %91, 1
  br label %bb347

panic6:                                           ; preds = %bb345
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1441 to %"core::panic::location::Location"*)) #17
  unreachable

bb347:                                            ; preds = %bb346
  %92 = getelementptr inbounds { i32*, i32*, i32* }, { i32*, i32*, i32* }* %_args, i32 0, i32 1
  %_812 = load i32*, i32** %92, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %93 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_812, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_811.0 = extractvalue { i8*, i64* } %93, 0
  %_811.1 = extractvalue { i8*, i64* } %93, 1
  br label %bb348

bb348:                                            ; preds = %bb347
  %94 = getelementptr inbounds { i32*, i32*, i32* }, { i32*, i32*, i32* }* %_args, i32 0, i32 2
  %_815 = load i32*, i32** %94, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %95 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_815, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_814.0 = extractvalue { i8*, i64* } %95, 0
  %_814.1 = extractvalue { i8*, i64* } %95, 1
  br label %bb349

bb349:                                            ; preds = %bb348
  %96 = bitcast [3 x { i8*, i64* }]* %_802 to { i8*, i64* }*
  %97 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %96, i32 0, i32 0
  store i8* %_808.0, i8** %97, align 8
  %98 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %96, i32 0, i32 1
  store i64* %_808.1, i64** %98, align 8
  %99 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_802, i32 0, i32 1
  %100 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %99, i32 0, i32 0
  store i8* %_811.0, i8** %100, align 8
  %101 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %99, i32 0, i32 1
  store i64* %_811.1, i64** %101, align 8
  %102 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_802, i32 0, i32 2
  %103 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %102, i32 0, i32 0
  store i8* %_814.0, i8** %103, align 8
  %104 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %102, i32 0, i32 1
  store i64* %_814.1, i64** %104, align 8
  %_799.0 = bitcast [3 x { i8*, i64* }]* %_802 to [0 x { i8*, i64* }]*
  br label %bb350

bb350:                                            ; preds = %bb349
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_795, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc507 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_799.0, i64 3, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [168 x i8] }>* @alloc529 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 3)
  br label %bb351

bb351:                                            ; preds = %bb350
; call core::fmt::Formatter::write_fmt
  %105 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_795)
  %106 = zext i1 %105 to i8
  store i8 %106, i8* %0, align 1
  br label %bb357

bb335:                                            ; preds = %bb334
  %107 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_772, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc1728 to [0 x i8]*), [0 x i8]** %107, align 8
  %108 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_772, i32 0, i32 1
  store i64 3, i64* %108, align 8
  br label %bb337

bb336:                                            ; preds = %bb334
  %109 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_772, i32 0, i32 0
  store [0 x i8]* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc1137, i32 0, i32 0), [0 x i8]** %109, align 8
  %110 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_772, i32 0, i32 1
  store i64 0, i64* %110, align 8
  br label %bb337

bb337:                                            ; preds = %bb335, %bb336
  %111 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_772, i32 0, i32 0
  %112 = load [0 x i8]*, [0 x i8]** %111, align 8, !nonnull !4
  %113 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_772, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
; call core::fmt::Formatter::write_str
  %115 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 %112, i64 %114)
  %116 = zext i1 %115 to i8
  store i8 %116, i8* %0, align 1
  br label %bb357

bb329:                                            ; preds = %bb328
  %_761 = icmp eq i32 %_759.0, -2147483648
  %_762 = and i1 false, %_761
  %117 = call i1 @llvm.expect.i1(i1 %_762, i1 false)
  br i1 %117, label %panic8, label %bb330

panic7:                                           ; preds = %bb328
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1445 to %"core::panic::location::Location"*)) #17
  unreachable

bb330:                                            ; preds = %bb329
  %118 = srem i32 %_759.0, 100
  store i32 %118, i32* %_756, align 4
  store i32* %_756, i32** %_754, align 8
  %_args9 = load i32*, i32** %_754, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %119 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args9, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_764.0 = extractvalue { i8*, i64* } %119, 0
  %_764.1 = extractvalue { i8*, i64* } %119, 1
  br label %bb331

panic8:                                           ; preds = %bb329
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([48 x i8]* @str.a to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1445 to %"core::panic::location::Location"*)) #17
  unreachable

bb331:                                            ; preds = %bb330
  %120 = bitcast [1 x { i8*, i64* }]* %_753 to { i8*, i64* }*
  %121 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %120, i32 0, i32 0
  store i8* %_764.0, i8** %121, align 8
  %122 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %120, i32 0, i32 1
  store i64* %_764.1, i64** %122, align 8
  %_750.0 = bitcast [1 x { i8*, i64* }]* %_753 to [0 x { i8*, i64* }]*
  br label %bb332

bb332:                                            ; preds = %bb331
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_746, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_750.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc285 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb333

bb333:                                            ; preds = %bb332
; call core::fmt::Formatter::write_fmt
  %123 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_746)
  %124 = zext i1 %123 to i8
  store i8 %124, i8* %0, align 1
  br label %bb357

bb325:                                            ; preds = %bb324
  store i32 %_740.0, i32* %_738, align 4
  store i32* %_738, i32** %_736, align 8
  %_args11 = load i32*, i32** %_736, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %125 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args11, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_742.0 = extractvalue { i8*, i64* } %125, 0
  %_742.1 = extractvalue { i8*, i64* } %125, 1
  br label %bb326

panic10:                                          ; preds = %bb324
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1447 to %"core::panic::location::Location"*)) #17
  unreachable

bb326:                                            ; preds = %bb325
  %126 = bitcast [1 x { i8*, i64* }]* %_735 to { i8*, i64* }*
  %127 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %126, i32 0, i32 0
  store i8* %_742.0, i8** %127, align 8
  %128 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %126, i32 0, i32 1
  store i64* %_742.1, i64** %128, align 8
  %_732.0 = bitcast [1 x { i8*, i64* }]* %_735 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_728, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_732.0, i64 1)
  br label %bb327

bb327:                                            ; preds = %bb326
; call core::fmt::Formatter::write_fmt
  %129 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_728)
  %130 = zext i1 %129 to i8
  store i8 %130, i8* %0, align 1
  br label %bb357

bb322:                                            ; preds = %bb321
  %131 = bitcast [1 x { i8*, i64* }]* %_720 to { i8*, i64* }*
  %132 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %131, i32 0, i32 0
  store i8* %_724.0, i8** %132, align 8
  %133 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %131, i32 0, i32 1
  store i64* %_724.1, i64** %133, align 8
  %_717.0 = bitcast [1 x { i8*, i64* }]* %_720 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_713, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_717.0, i64 1)
  br label %bb323

bb323:                                            ; preds = %bb322
; call core::fmt::Formatter::write_fmt
  %134 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_713)
  %135 = zext i1 %134 to i8
  store i8 %135, i8* %0, align 1
  br label %bb357

bb312:                                            ; preds = %bb311
  %136 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_694.0, i32 7)
  %_695.0 = extractvalue { i32, i1 } %136, 0
  %_695.1 = extractvalue { i32, i1 } %136, 1
  %137 = call i1 @llvm.expect.i1(i1 %_695.1, i1 false)
  br i1 %137, label %panic14, label %bb313

panic13:                                          ; preds = %bb311
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1449 to %"core::panic::location::Location"*)) #17
  unreachable

bb313:                                            ; preds = %bb312
  %_697 = icmp eq i32 %_695.0, -2147483648
  %_698 = and i1 false, %_697
  %138 = call i1 @llvm.expect.i1(i1 %_698, i1 false)
  br i1 %138, label %panic15, label %bb314

panic14:                                          ; preds = %bb312
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1451 to %"core::panic::location::Location"*)) #17
  unreachable

bb314:                                            ; preds = %bb313
  %_690 = srem i32 %_695.0, 7
  %139 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_689, i32 %_690)
  %_699.0 = extractvalue { i32, i1 } %139, 0
  %_699.1 = extractvalue { i32, i1 } %139, 1
  %140 = call i1 @llvm.expect.i1(i1 %_699.1, i1 false)
  br i1 %140, label %panic16, label %bb315

panic15:                                          ; preds = %bb313
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([48 x i8]* @str.a to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1451 to %"core::panic::location::Location"*)) #17
  unreachable

bb315:                                            ; preds = %bb314
  %141 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_699.0, i32 7)
  %_700.0 = extractvalue { i32, i1 } %141, 0
  %_700.1 = extractvalue { i32, i1 } %141, 1
  %142 = call i1 @llvm.expect.i1(i1 %_700.1, i1 false)
  br i1 %142, label %panic17, label %bb316

panic16:                                          ; preds = %bb314
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1453 to %"core::panic::location::Location"*)) #17
  unreachable

bb316:                                            ; preds = %bb315
  %_702 = icmp eq i32 %_700.0, -2147483648
  %_703 = and i1 false, %_702
  %143 = call i1 @llvm.expect.i1(i1 %_703, i1 false)
  br i1 %143, label %panic18, label %bb317

panic17:                                          ; preds = %bb315
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1455 to %"core::panic::location::Location"*)) #17
  unreachable

bb317:                                            ; preds = %bb316
  %144 = sdiv i32 %_700.0, 7
  store i32 %144, i32* %_686, align 4
  store i32* %_686, i32** %_684, align 8
  %_args19 = load i32*, i32** %_684, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %145 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args19, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_705.0 = extractvalue { i8*, i64* } %145, 0
  %_705.1 = extractvalue { i8*, i64* } %145, 1
  br label %bb318

panic18:                                          ; preds = %bb316
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1455 to %"core::panic::location::Location"*)) #17
  unreachable

bb318:                                            ; preds = %bb317
  %146 = bitcast [1 x { i8*, i64* }]* %_683 to { i8*, i64* }*
  %147 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %146, i32 0, i32 0
  store i8* %_705.0, i8** %147, align 8
  %148 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %146, i32 0, i32 1
  store i64* %_705.1, i64** %148, align 8
  %_680.0 = bitcast [1 x { i8*, i64* }]* %_683 to [0 x { i8*, i64* }]*
  br label %bb319

bb319:                                            ; preds = %bb318
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_676, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_680.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc285 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb320

bb320:                                            ; preds = %bb319
; call core::fmt::Formatter::write_fmt
  %149 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_676)
  %150 = zext i1 %149 to i8
  store i8 %150, i8* %0, align 1
  br label %bb357

bb291:                                            ; preds = %bb290
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %151 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_640)
  %152 = zext i1 %151 to i8
  store i8 %152, i8* %_639, align 1
  br label %bb292

bb292:                                            ; preds = %bb291
  %153 = load i8, i8* %_639, align 1, !range !3
  %154 = trunc i8 %153 to i1
  %_643 = zext i1 %154 to i64
  switch i64 %_643, label %bb294 [
    i64 0, label %bb293
    i64 1, label %bb295
  ]

bb294:                                            ; preds = %bb292
  unreachable

bb293:                                            ; preds = %bb292
; call core::fmt::Formatter::write_str
  %_648 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1677 to [0 x i8]*), i64 1)
  br label %bb296

bb295:                                            ; preds = %bb292
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %155 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1457 to %"core::panic::location::Location"*))
  %156 = zext i1 %155 to i8
  store i8 %156, i8* %0, align 1
  br label %bb357

bb296:                                            ; preds = %bb293
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %157 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_648)
  %158 = zext i1 %157 to i8
  store i8 %158, i8* %_647, align 1
  br label %bb297

bb297:                                            ; preds = %bb296
  %159 = load i8, i8* %_647, align 1, !range !3
  %160 = trunc i8 %159 to i1
  %_652 = zext i1 %160 to i64
  switch i64 %_652, label %bb299 [
    i64 0, label %bb298
    i64 1, label %bb300
  ]

bb299:                                            ; preds = %bb297
  unreachable

bb298:                                            ; preds = %bb297
; call time::display::parse_type
  %_657 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 98, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb301

bb300:                                            ; preds = %bb297
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %161 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1460 to %"core::panic::location::Location"*))
  %162 = zext i1 %161 to i8
  store i8 %162, i8* %0, align 1
  br label %bb357

bb301:                                            ; preds = %bb298
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %163 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_657)
  %164 = zext i1 %163 to i8
  store i8 %164, i8* %_656, align 1
  br label %bb302

bb302:                                            ; preds = %bb301
  %165 = load i8, i8* %_656, align 1, !range !3
  %166 = trunc i8 %165 to i1
  %_660 = zext i1 %166 to i64
  switch i64 %_660, label %bb304 [
    i64 0, label %bb303
    i64 1, label %bb305
  ]

bb304:                                            ; preds = %bb302
  unreachable

bb303:                                            ; preds = %bb302
; call core::fmt::Formatter::write_str
  %_665 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1677 to [0 x i8]*), i64 1)
  br label %bb306

bb305:                                            ; preds = %bb302
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %167 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1462 to %"core::panic::location::Location"*))
  %168 = zext i1 %167 to i8
  store i8 %168, i8* %0, align 1
  br label %bb357

bb306:                                            ; preds = %bb303
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %169 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_665)
  %170 = zext i1 %169 to i8
  store i8 %170, i8* %_664, align 1
  br label %bb307

bb307:                                            ; preds = %bb306
  %171 = load i8, i8* %_664, align 1, !range !3
  %172 = trunc i8 %171 to i1
  %_669 = zext i1 %172 to i64
  switch i64 %_669, label %bb309 [
    i64 0, label %bb308
    i64 1, label %bb310
  ]

bb309:                                            ; preds = %bb307
  unreachable

bb308:                                            ; preds = %bb307
; call time::display::parse_type
  %173 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 89, %Tm* align 4 dereferenceable(44) %tm)
  %174 = zext i1 %173 to i8
  store i8 %174, i8* %0, align 1
  br label %bb357

bb310:                                            ; preds = %bb307
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %175 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1465 to %"core::panic::location::Location"*))
  %176 = zext i1 %175 to i8
  store i8 %176, i8* %0, align 1
  br label %bb357

bb284:                                            ; preds = %bb283
  store i32 7, i32* %_631, align 4
  br label %bb286

bb285:                                            ; preds = %bb283
  store i32 %i, i32* %_631, align 4
  br label %bb286

bb286:                                            ; preds = %bb284, %bb285
  store i32* %_631, i32** %_629, align 8
  %_args20 = load i32*, i32** %_629, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %177 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args20, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_634.0 = extractvalue { i8*, i64* } %177, 0
  %_634.1 = extractvalue { i8*, i64* } %177, 1
  br label %bb287

bb287:                                            ; preds = %bb286
  %178 = bitcast [1 x { i8*, i64* }]* %_628 to { i8*, i64* }*
  %179 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %178, i32 0, i32 0
  store i8* %_634.0, i8** %179, align 8
  %180 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %178, i32 0, i32 1
  store i64* %_634.1, i64** %180, align 8
  %_625.0 = bitcast [1 x { i8*, i64* }]* %_628 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_621, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_625.0, i64 1)
  br label %bb288

bb288:                                            ; preds = %bb287
; call core::fmt::Formatter::write_fmt
  %181 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_621)
  %182 = zext i1 %181 to i8
  store i8 %182, i8* %0, align 1
  br label %bb357

bb277:                                            ; preds = %bb276
  %183 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_606.0, i32 7)
  %_607.0 = extractvalue { i32, i1 } %183, 0
  %_607.1 = extractvalue { i32, i1 } %183, 1
  %184 = call i1 @llvm.expect.i1(i1 %_607.1, i1 false)
  br i1 %184, label %panic22, label %bb278

panic21:                                          ; preds = %bb276
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1467 to %"core::panic::location::Location"*)) #17
  unreachable

bb278:                                            ; preds = %bb277
  %_609 = icmp eq i32 %_607.0, -2147483648
  %_610 = and i1 false, %_609
  %185 = call i1 @llvm.expect.i1(i1 %_610, i1 false)
  br i1 %185, label %panic23, label %bb279

panic22:                                          ; preds = %bb277
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1469 to %"core::panic::location::Location"*)) #17
  unreachable

bb279:                                            ; preds = %bb278
  %186 = sdiv i32 %_607.0, 7
  store i32 %186, i32* %_601, align 4
  store i32* %_601, i32** %_599, align 8
  %_args24 = load i32*, i32** %_599, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %187 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args24, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_612.0 = extractvalue { i8*, i64* } %187, 0
  %_612.1 = extractvalue { i8*, i64* } %187, 1
  br label %bb280

panic23:                                          ; preds = %bb278
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1469 to %"core::panic::location::Location"*)) #17
  unreachable

bb280:                                            ; preds = %bb279
  %188 = bitcast [1 x { i8*, i64* }]* %_598 to { i8*, i64* }*
  %189 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %188, i32 0, i32 0
  store i8* %_612.0, i8** %189, align 8
  %190 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %188, i32 0, i32 1
  store i64* %_612.1, i64** %190, align 8
  %_595.0 = bitcast [1 x { i8*, i64* }]* %_598 to [0 x { i8*, i64* }]*
  br label %bb281

bb281:                                            ; preds = %bb280
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_591, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_595.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc285 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb282

bb282:                                            ; preds = %bb281
; call core::fmt::Formatter::write_fmt
  %191 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_591)
  %192 = zext i1 %191 to i8
  store i8 %192, i8* %0, align 1
  br label %bb357

bb255:                                            ; preds = %bb254
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %193 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_552)
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %_551, align 1
  br label %bb256

bb256:                                            ; preds = %bb255
  %195 = load i8, i8* %_551, align 1, !range !3
  %196 = trunc i8 %195 to i1
  %_555 = zext i1 %196 to i64
  switch i64 %_555, label %bb258 [
    i64 0, label %bb257
    i64 1, label %bb259
  ]

bb258:                                            ; preds = %bb256
  unreachable

bb257:                                            ; preds = %bb256
; call core::fmt::Formatter::write_str
  %_560 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1498 to [0 x i8]*), i64 1)
  br label %bb260

bb259:                                            ; preds = %bb256
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %197 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1472 to %"core::panic::location::Location"*))
  %198 = zext i1 %197 to i8
  store i8 %198, i8* %0, align 1
  br label %bb357

bb260:                                            ; preds = %bb257
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %199 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_560)
  %200 = zext i1 %199 to i8
  store i8 %200, i8* %_559, align 1
  br label %bb261

bb261:                                            ; preds = %bb260
  %201 = load i8, i8* %_559, align 1, !range !3
  %202 = trunc i8 %201 to i1
  %_564 = zext i1 %202 to i64
  switch i64 %_564, label %bb263 [
    i64 0, label %bb262
    i64 1, label %bb264
  ]

bb263:                                            ; preds = %bb261
  unreachable

bb262:                                            ; preds = %bb261
; call time::display::parse_type
  %_569 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 77, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb265

bb264:                                            ; preds = %bb261
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %203 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1475 to %"core::panic::location::Location"*))
  %204 = zext i1 %203 to i8
  store i8 %204, i8* %0, align 1
  br label %bb357

bb265:                                            ; preds = %bb262
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %205 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_569)
  %206 = zext i1 %205 to i8
  store i8 %206, i8* %_568, align 1
  br label %bb266

bb266:                                            ; preds = %bb265
  %207 = load i8, i8* %_568, align 1, !range !3
  %208 = trunc i8 %207 to i1
  %_572 = zext i1 %208 to i64
  switch i64 %_572, label %bb268 [
    i64 0, label %bb267
    i64 1, label %bb269
  ]

bb268:                                            ; preds = %bb266
  unreachable

bb267:                                            ; preds = %bb266
; call core::fmt::Formatter::write_str
  %_577 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1498 to [0 x i8]*), i64 1)
  br label %bb270

bb269:                                            ; preds = %bb266
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %209 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1477 to %"core::panic::location::Location"*))
  %210 = zext i1 %209 to i8
  store i8 %210, i8* %0, align 1
  br label %bb357

bb270:                                            ; preds = %bb267
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %211 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_577)
  %212 = zext i1 %211 to i8
  store i8 %212, i8* %_576, align 1
  br label %bb271

bb271:                                            ; preds = %bb270
  %213 = load i8, i8* %_576, align 1, !range !3
  %214 = trunc i8 %213 to i1
  %_581 = zext i1 %214 to i64
  switch i64 %_581, label %bb273 [
    i64 0, label %bb272
    i64 1, label %bb274
  ]

bb273:                                            ; preds = %bb271
  unreachable

bb272:                                            ; preds = %bb271
; call time::display::parse_type
  %215 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 83, %Tm* align 4 dereferenceable(44) %tm)
  %216 = zext i1 %215 to i8
  store i8 %216, i8* %0, align 1
  br label %bb357

bb274:                                            ; preds = %bb271
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %217 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1480 to %"core::panic::location::Location"*))
  %218 = zext i1 %217 to i8
  store i8 %218, i8* %0, align 1
  br label %bb357

bb251:                                            ; preds = %bb250
  %_544 = bitcast { i64, i32 }* %_545 to i64*
  store i64* %_544, i64** %_543, align 8
  %_args25 = load i64*, i64** %_543, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %219 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0a33196693ac891E(i64* align 8 dereferenceable(8) %_args25, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h5c41694b747c6f84E")
  %_548.0 = extractvalue { i8*, i64* } %219, 0
  %_548.1 = extractvalue { i8*, i64* } %219, 1
  br label %bb252

bb252:                                            ; preds = %bb251
  %220 = bitcast [1 x { i8*, i64* }]* %_542 to { i8*, i64* }*
  %221 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %220, i32 0, i32 0
  store i8* %_548.0, i8** %221, align 8
  %222 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %220, i32 0, i32 1
  store i64* %_548.1, i64** %222, align 8
  %_539.0 = bitcast [1 x { i8*, i64* }]* %_542 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_535, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_539.0, i64 1)
  br label %bb253

bb253:                                            ; preds = %bb252
; call core::fmt::Formatter::write_fmt
  %223 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_535)
  %224 = zext i1 %223 to i8
  store i8 %224, i8* %0, align 1
  br label %bb357

bb247:                                            ; preds = %bb246
  %225 = bitcast [1 x { i8*, i64* }]* %_523 to { i8*, i64* }*
  %226 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %225, i32 0, i32 0
  store i8* %_527.0, i8** %226, align 8
  %227 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %225, i32 0, i32 1
  store i64* %_527.1, i64** %227, align 8
  %_520.0 = bitcast [1 x { i8*, i64* }]* %_523 to [0 x { i8*, i64* }]*
  br label %bb248

bb248:                                            ; preds = %bb247
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_516, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_520.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc285 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb249

bb249:                                            ; preds = %bb248
; call core::fmt::Formatter::write_fmt
  %228 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_516)
  %229 = zext i1 %228 to i8
  store i8 %229, i8* %0, align 1
  br label %bb357

bb216:                                            ; preds = %bb215
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %230 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_463)
  %231 = zext i1 %230 to i8
  store i8 %231, i8* %_462, align 1
  br label %bb217

bb217:                                            ; preds = %bb216
  %232 = load i8, i8* %_462, align 1, !range !3
  %233 = trunc i8 %232 to i1
  %_466 = zext i1 %233 to i64
  switch i64 %_466, label %bb219 [
    i64 0, label %bb218
    i64 1, label %bb220
  ]

bb219:                                            ; preds = %bb217
  unreachable

bb218:                                            ; preds = %bb217
; call core::fmt::Formatter::write_str
  %_471 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1498 to [0 x i8]*), i64 1)
  br label %bb221

bb220:                                            ; preds = %bb217
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %234 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1482 to %"core::panic::location::Location"*))
  %235 = zext i1 %234 to i8
  store i8 %235, i8* %0, align 1
  br label %bb357

bb221:                                            ; preds = %bb218
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %236 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_471)
  %237 = zext i1 %236 to i8
  store i8 %237, i8* %_470, align 1
  br label %bb222

bb222:                                            ; preds = %bb221
  %238 = load i8, i8* %_470, align 1, !range !3
  %239 = trunc i8 %238 to i1
  %_475 = zext i1 %239 to i64
  switch i64 %_475, label %bb224 [
    i64 0, label %bb223
    i64 1, label %bb225
  ]

bb224:                                            ; preds = %bb222
  unreachable

bb223:                                            ; preds = %bb222
; call time::display::parse_type
  %_480 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 77, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb226

bb225:                                            ; preds = %bb222
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %240 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1485 to %"core::panic::location::Location"*))
  %241 = zext i1 %240 to i8
  store i8 %241, i8* %0, align 1
  br label %bb357

bb226:                                            ; preds = %bb223
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %242 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_480)
  %243 = zext i1 %242 to i8
  store i8 %243, i8* %_479, align 1
  br label %bb227

bb227:                                            ; preds = %bb226
  %244 = load i8, i8* %_479, align 1, !range !3
  %245 = trunc i8 %244 to i1
  %_483 = zext i1 %245 to i64
  switch i64 %_483, label %bb229 [
    i64 0, label %bb228
    i64 1, label %bb230
  ]

bb229:                                            ; preds = %bb227
  unreachable

bb228:                                            ; preds = %bb227
; call core::fmt::Formatter::write_str
  %_488 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1498 to [0 x i8]*), i64 1)
  br label %bb231

bb230:                                            ; preds = %bb227
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %246 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1487 to %"core::panic::location::Location"*))
  %247 = zext i1 %246 to i8
  store i8 %247, i8* %0, align 1
  br label %bb357

bb231:                                            ; preds = %bb228
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %248 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_488)
  %249 = zext i1 %248 to i8
  store i8 %249, i8* %_487, align 1
  br label %bb232

bb232:                                            ; preds = %bb231
  %250 = load i8, i8* %_487, align 1, !range !3
  %251 = trunc i8 %250 to i1
  %_492 = zext i1 %251 to i64
  switch i64 %_492, label %bb234 [
    i64 0, label %bb233
    i64 1, label %bb235
  ]

bb234:                                            ; preds = %bb232
  unreachable

bb233:                                            ; preds = %bb232
; call time::display::parse_type
  %_497 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 83, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb236

bb235:                                            ; preds = %bb232
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %252 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1490 to %"core::panic::location::Location"*))
  %253 = zext i1 %252 to i8
  store i8 %253, i8* %0, align 1
  br label %bb357

bb236:                                            ; preds = %bb233
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %254 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_497)
  %255 = zext i1 %254 to i8
  store i8 %255, i8* %_496, align 1
  br label %bb237

bb237:                                            ; preds = %bb236
  %256 = load i8, i8* %_496, align 1, !range !3
  %257 = trunc i8 %256 to i1
  %_500 = zext i1 %257 to i64
  switch i64 %_500, label %bb239 [
    i64 0, label %bb238
    i64 1, label %bb240
  ]

bb239:                                            ; preds = %bb237
  unreachable

bb238:                                            ; preds = %bb237
; call core::fmt::Formatter::write_str
  %_505 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1749 to [0 x i8]*), i64 1)
  br label %bb241

bb240:                                            ; preds = %bb237
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %258 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1492 to %"core::panic::location::Location"*))
  %259 = zext i1 %258 to i8
  store i8 %259, i8* %0, align 1
  br label %bb357

bb241:                                            ; preds = %bb238
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %260 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_505)
  %261 = zext i1 %260 to i8
  store i8 %261, i8* %_504, align 1
  br label %bb242

bb242:                                            ; preds = %bb241
  %262 = load i8, i8* %_504, align 1, !range !3
  %263 = trunc i8 %262 to i1
  %_509 = zext i1 %263 to i64
  switch i64 %_509, label %bb244 [
    i64 0, label %bb243
    i64 1, label %bb245
  ]

bb244:                                            ; preds = %bb242
  unreachable

bb243:                                            ; preds = %bb242
; call time::display::parse_type
  %264 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 112, %Tm* align 4 dereferenceable(44) %tm)
  %265 = zext i1 %264 to i8
  store i8 %265, i8* %0, align 1
  br label %bb357

bb245:                                            ; preds = %bb242
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %266 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1495 to %"core::panic::location::Location"*))
  %267 = zext i1 %266 to i8
  store i8 %267, i8* %0, align 1
  br label %bb357

bb205:                                            ; preds = %bb204
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %268 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_444)
  %269 = zext i1 %268 to i8
  store i8 %269, i8* %_443, align 1
  br label %bb206

bb206:                                            ; preds = %bb205
  %270 = load i8, i8* %_443, align 1, !range !3
  %271 = trunc i8 %270 to i1
  %_447 = zext i1 %271 to i64
  switch i64 %_447, label %bb208 [
    i64 0, label %bb207
    i64 1, label %bb209
  ]

bb208:                                            ; preds = %bb206
  unreachable

bb207:                                            ; preds = %bb206
; call core::fmt::Formatter::write_str
  %_452 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1498 to [0 x i8]*), i64 1)
  br label %bb210

bb209:                                            ; preds = %bb206
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %272 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1497 to %"core::panic::location::Location"*))
  %273 = zext i1 %272 to i8
  store i8 %273, i8* %0, align 1
  br label %bb357

bb210:                                            ; preds = %bb207
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %274 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_452)
  %275 = zext i1 %274 to i8
  store i8 %275, i8* %_451, align 1
  br label %bb211

bb211:                                            ; preds = %bb210
  %276 = load i8, i8* %_451, align 1, !range !3
  %277 = trunc i8 %276 to i1
  %_456 = zext i1 %277 to i64
  switch i64 %_456, label %bb213 [
    i64 0, label %bb212
    i64 1, label %bb214
  ]

bb213:                                            ; preds = %bb211
  unreachable

bb212:                                            ; preds = %bb211
; call time::display::parse_type
  %278 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 77, %Tm* align 4 dereferenceable(44) %tm)
  %279 = zext i1 %278 to i8
  store i8 %279, i8* %0, align 1
  br label %bb357

bb214:                                            ; preds = %bb211
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %280 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1500 to %"core::panic::location::Location"*))
  %281 = zext i1 %280 to i8
  store i8 %281, i8* %0, align 1
  br label %bb357

bb202:                                            ; preds = %bb200
  %282 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_438, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [2 x i8] }>* @alloc918 to [0 x i8]*), [0 x i8]** %282, align 8
  %283 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_438, i32 0, i32 1
  store i64 2, i64* %283, align 8
  br label %bb203

bb201:                                            ; preds = %bb200
  %284 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_438, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [2 x i8] }>* @alloc916 to [0 x i8]*), [0 x i8]** %284, align 8
  %285 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_438, i32 0, i32 1
  store i64 2, i64* %285, align 8
  br label %bb203

bb203:                                            ; preds = %bb202, %bb201
  %286 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_438, i32 0, i32 0
  %287 = load [0 x i8]*, [0 x i8]** %286, align 8, !nonnull !4
  %288 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_438, i32 0, i32 1
  %289 = load i64, i64* %288, align 8
; call core::fmt::Formatter::write_str
  %290 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 %287, i64 %289)
  %291 = zext i1 %290 to i8
  store i8 %291, i8* %0, align 1
  br label %bb357

bb198:                                            ; preds = %bb196
  %292 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_432, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [2 x i8] }>* @alloc909 to [0 x i8]*), [0 x i8]** %292, align 8
  %293 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_432, i32 0, i32 1
  store i64 2, i64* %293, align 8
  br label %bb199

bb197:                                            ; preds = %bb196
  %294 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_432, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [2 x i8] }>* @alloc907 to [0 x i8]*), [0 x i8]** %294, align 8
  %295 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_432, i32 0, i32 1
  store i64 2, i64* %295, align 8
  br label %bb199

bb199:                                            ; preds = %bb198, %bb197
  %296 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_432, i32 0, i32 0
  %297 = load [0 x i8]*, [0 x i8]** %296, align 8, !nonnull !4
  %298 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_432, i32 0, i32 1
  %299 = load i64, i64* %298, align 8
; call core::fmt::Formatter::write_str
  %300 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 %297, i64 %299)
  %301 = zext i1 %300 to i8
  store i8 %301, i8* %0, align 1
  br label %bb357

bb191:                                            ; preds = %bb190
  store i32 %_419.0, i32* %_417, align 4
  store i32* %_417, i32** %_415, align 8
  %_args28 = load i32*, i32** %_415, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %302 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args28, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_421.0 = extractvalue { i8*, i64* } %302, 0
  %_421.1 = extractvalue { i8*, i64* } %302, 1
  br label %bb192

panic27:                                          ; preds = %bb190
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1507 to %"core::panic::location::Location"*)) #17
  unreachable

bb192:                                            ; preds = %bb191
  %303 = bitcast [1 x { i8*, i64* }]* %_414 to { i8*, i64* }*
  %304 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %303, i32 0, i32 0
  store i8* %_421.0, i8** %304, align 8
  %305 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %303, i32 0, i32 1
  store i64* %_421.1, i64** %305, align 8
  %_411.0 = bitcast [1 x { i8*, i64* }]* %_414 to [0 x { i8*, i64* }]*
  br label %bb193

bb193:                                            ; preds = %bb192
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_407, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_411.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc285 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb194

bb194:                                            ; preds = %bb193
; call core::fmt::Formatter::write_fmt
  %306 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_407)
  %307 = zext i1 %306 to i8
  store i8 %307, i8* %0, align 1
  br label %bb357

bb187:                                            ; preds = %bb186
  %308 = bitcast [1 x { i8*, i64* }]* %_395 to { i8*, i64* }*
  %309 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %308, i32 0, i32 0
  store i8* %_399.0, i8** %309, align 8
  %310 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %308, i32 0, i32 1
  store i64* %_399.1, i64** %310, align 8
  %_392.0 = bitcast [1 x { i8*, i64* }]* %_395 to [0 x { i8*, i64* }]*
  br label %bb188

bb188:                                            ; preds = %bb187
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_388, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_392.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc285 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb189

bb189:                                            ; preds = %bb188
; call core::fmt::Formatter::write_fmt
  %311 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_388)
  %312 = zext i1 %311 to i8
  store i8 %312, i8* %0, align 1
  br label %bb357

bb178:                                            ; preds = %bb177
  store i32 12, i32* %h1, align 4
  br label %bb179

bb179:                                            ; preds = %bb178, %bb177
  %_366 = load i32, i32* %h1, align 4
  %_365 = icmp sgt i32 %_366, 12
  br i1 %_365, label %bb180, label %bb182

bb182:                                            ; preds = %bb181, %bb179
  store i32* %h1, i32** %_377, align 8
  %_args31 = load i32*, i32** %_377, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %313 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args31, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_380.0 = extractvalue { i8*, i64* } %313, 0
  %_380.1 = extractvalue { i8*, i64* } %313, 1
  br label %bb183

bb180:                                            ; preds = %bb179
  %314 = load i32, i32* %h1, align 4
  %315 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %314, i32 12)
  %_367.0 = extractvalue { i32, i1 } %315, 0
  %_367.1 = extractvalue { i32, i1 } %315, 1
  %316 = call i1 @llvm.expect.i1(i1 %_367.1, i1 false)
  br i1 %316, label %panic30, label %bb181

bb181:                                            ; preds = %bb180
  store i32 %_367.0, i32* %h1, align 4
  br label %bb182

panic30:                                          ; preds = %bb180
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1509 to %"core::panic::location::Location"*)) #17
  unreachable

bb183:                                            ; preds = %bb182
  %317 = bitcast [1 x { i8*, i64* }]* %_376 to { i8*, i64* }*
  %318 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %317, i32 0, i32 0
  store i8* %_380.0, i8** %318, align 8
  %319 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %317, i32 0, i32 1
  store i64* %_380.1, i64** %319, align 8
  %_373.0 = bitcast [1 x { i8*, i64* }]* %_376 to [0 x { i8*, i64* }]*
  br label %bb184

bb184:                                            ; preds = %bb183
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_369, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_373.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc319 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb185

bb185:                                            ; preds = %bb184
; call core::fmt::Formatter::write_fmt
  %320 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_369)
  %321 = zext i1 %320 to i8
  store i8 %321, i8* %0, align 1
  br label %bb357

bb174:                                            ; preds = %bb173
  %322 = bitcast [1 x { i8*, i64* }]* %_352 to { i8*, i64* }*
  %323 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %322, i32 0, i32 0
  store i8* %_356.0, i8** %323, align 8
  %324 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %322, i32 0, i32 1
  store i64* %_356.1, i64** %324, align 8
  %_349.0 = bitcast [1 x { i8*, i64* }]* %_352 to [0 x { i8*, i64* }]*
  br label %bb175

bb175:                                            ; preds = %bb174
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_345, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_349.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc319 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb176

bb176:                                            ; preds = %bb175
; call core::fmt::Formatter::write_fmt
  %325 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_345)
  %326 = zext i1 %325 to i8
  store i8 %326, i8* %0, align 1
  br label %bb357

bb169:                                            ; preds = %bb168
  store i32 %_335.0, i32* %_333, align 4
  store i32* %_333, i32** %_331, align 8
  %_args34 = load i32*, i32** %_331, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %327 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args34, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_337.0 = extractvalue { i8*, i64* } %327, 0
  %_337.1 = extractvalue { i8*, i64* } %327, 1
  br label %bb170

panic33:                                          ; preds = %bb168
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1511 to %"core::panic::location::Location"*)) #17
  unreachable

bb170:                                            ; preds = %bb169
  %328 = bitcast [1 x { i8*, i64* }]* %_330 to { i8*, i64* }*
  %329 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %328, i32 0, i32 0
  store i8* %_337.0, i8** %329, align 8
  %330 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %328, i32 0, i32 1
  store i64* %_337.1, i64** %330, align 8
  %_327.0 = bitcast [1 x { i8*, i64* }]* %_330 to [0 x { i8*, i64* }]*
  br label %bb171

bb171:                                            ; preds = %bb170
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_323, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_327.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc367 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb172

bb172:                                            ; preds = %bb171
; call core::fmt::Formatter::write_fmt
  %331 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_323)
  %332 = zext i1 %331 to i8
  store i8 %332, i8* %0, align 1
  br label %bb357

bb160:                                            ; preds = %bb159
  store i32 12, i32* %h, align 4
  br label %bb161

bb161:                                            ; preds = %bb160, %bb159
  %_301 = load i32, i32* %h, align 4
  %_300 = icmp sgt i32 %_301, 12
  br i1 %_300, label %bb162, label %bb164

bb164:                                            ; preds = %bb163, %bb161
  store i32* %h, i32** %_312, align 8
  %_args36 = load i32*, i32** %_312, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %333 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args36, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_315.0 = extractvalue { i8*, i64* } %333, 0
  %_315.1 = extractvalue { i8*, i64* } %333, 1
  br label %bb165

bb162:                                            ; preds = %bb161
  %334 = load i32, i32* %h, align 4
  %335 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %334, i32 12)
  %_302.0 = extractvalue { i32, i1 } %335, 0
  %_302.1 = extractvalue { i32, i1 } %335, 1
  %336 = call i1 @llvm.expect.i1(i1 %_302.1, i1 false)
  br i1 %336, label %panic35, label %bb163

bb163:                                            ; preds = %bb162
  store i32 %_302.0, i32* %h, align 4
  br label %bb164

panic35:                                          ; preds = %bb162
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1513 to %"core::panic::location::Location"*)) #17
  unreachable

bb165:                                            ; preds = %bb164
  %337 = bitcast [1 x { i8*, i64* }]* %_311 to { i8*, i64* }*
  %338 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %337, i32 0, i32 0
  store i8* %_315.0, i8** %338, align 8
  %339 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %337, i32 0, i32 1
  store i64* %_315.1, i64** %339, align 8
  %_308.0 = bitcast [1 x { i8*, i64* }]* %_311 to [0 x { i8*, i64* }]*
  br label %bb166

bb166:                                            ; preds = %bb165
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_304, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_308.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc285 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb167

bb167:                                            ; preds = %bb166
; call core::fmt::Formatter::write_fmt
  %340 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_304)
  %341 = zext i1 %340 to i8
  store i8 %341, i8* %0, align 1
  br label %bb357

bb156:                                            ; preds = %bb155
  %342 = bitcast [1 x { i8*, i64* }]* %_287 to { i8*, i64* }*
  %343 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %342, i32 0, i32 0
  store i8* %_291.0, i8** %343, align 8
  %344 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %342, i32 0, i32 1
  store i64* %_291.1, i64** %344, align 8
  %_284.0 = bitcast [1 x { i8*, i64* }]* %_287 to [0 x { i8*, i64* }]*
  br label %bb157

bb157:                                            ; preds = %bb156
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_280, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_284.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc285 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb158

bb158:                                            ; preds = %bb157
; call core::fmt::Formatter::write_fmt
  %345 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_280)
  %346 = zext i1 %345 to i8
  store i8 %346, i8* %0, align 1
  br label %bb357

bb133:                                            ; preds = %bb132
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %347 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_240)
  %348 = zext i1 %347 to i8
  store i8 %348, i8* %_239, align 1
  br label %bb134

bb134:                                            ; preds = %bb133
  %349 = load i8, i8* %_239, align 1, !range !3
  %350 = trunc i8 %349 to i1
  %_243 = zext i1 %350 to i64
  switch i64 %_243, label %bb136 [
    i64 0, label %bb135
    i64 1, label %bb137
  ]

bb136:                                            ; preds = %bb134
  unreachable

bb135:                                            ; preds = %bb134
; call core::fmt::Formatter::write_str
  %_248 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1677 to [0 x i8]*), i64 1)
  br label %bb138

bb137:                                            ; preds = %bb134
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %351 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1515 to %"core::panic::location::Location"*))
  %352 = zext i1 %351 to i8
  store i8 %352, i8* %0, align 1
  br label %bb357

bb138:                                            ; preds = %bb135
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %353 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_248)
  %354 = zext i1 %353 to i8
  store i8 %354, i8* %_247, align 1
  br label %bb139

bb139:                                            ; preds = %bb138
  %355 = load i8, i8* %_247, align 1, !range !3
  %356 = trunc i8 %355 to i1
  %_252 = zext i1 %356 to i64
  switch i64 %_252, label %bb141 [
    i64 0, label %bb140
    i64 1, label %bb142
  ]

bb141:                                            ; preds = %bb139
  unreachable

bb140:                                            ; preds = %bb139
; call time::display::parse_type
  %_257 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 109, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb143

bb142:                                            ; preds = %bb139
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %357 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1518 to %"core::panic::location::Location"*))
  %358 = zext i1 %357 to i8
  store i8 %358, i8* %0, align 1
  br label %bb357

bb143:                                            ; preds = %bb140
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %359 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_257)
  %360 = zext i1 %359 to i8
  store i8 %360, i8* %_256, align 1
  br label %bb144

bb144:                                            ; preds = %bb143
  %361 = load i8, i8* %_256, align 1, !range !3
  %362 = trunc i8 %361 to i1
  %_260 = zext i1 %362 to i64
  switch i64 %_260, label %bb146 [
    i64 0, label %bb145
    i64 1, label %bb147
  ]

bb146:                                            ; preds = %bb144
  unreachable

bb145:                                            ; preds = %bb144
; call core::fmt::Formatter::write_str
  %_265 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1677 to [0 x i8]*), i64 1)
  br label %bb148

bb147:                                            ; preds = %bb144
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %363 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1520 to %"core::panic::location::Location"*))
  %364 = zext i1 %363 to i8
  store i8 %364, i8* %0, align 1
  br label %bb357

bb148:                                            ; preds = %bb145
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %365 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_265)
  %366 = zext i1 %365 to i8
  store i8 %366, i8* %_264, align 1
  br label %bb149

bb149:                                            ; preds = %bb148
  %367 = load i8, i8* %_264, align 1, !range !3
  %368 = trunc i8 %367 to i1
  %_269 = zext i1 %368 to i64
  switch i64 %_269, label %bb151 [
    i64 0, label %bb150
    i64 1, label %bb152
  ]

bb151:                                            ; preds = %bb149
  unreachable

bb150:                                            ; preds = %bb149
; call time::display::parse_type
  %369 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 100, %Tm* align 4 dereferenceable(44) %tm)
  %370 = zext i1 %369 to i8
  store i8 %370, i8* %0, align 1
  br label %bb357

bb152:                                            ; preds = %bb149
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %371 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1523 to %"core::panic::location::Location"*))
  %372 = zext i1 %371 to i8
  store i8 %372, i8* %0, align 1
  br label %bb357

bb129:                                            ; preds = %bb128
  %373 = bitcast [1 x { i8*, i64* }]* %_228 to { i8*, i64* }*
  %374 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %373, i32 0, i32 0
  store i8* %_232.0, i8** %374, align 8
  %375 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %373, i32 0, i32 1
  store i64* %_232.1, i64** %375, align 8
  %_225.0 = bitcast [1 x { i8*, i64* }]* %_228 to [0 x { i8*, i64* }]*
  br label %bb130

bb130:                                            ; preds = %bb129
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_221, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_225.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc330 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb131

bb131:                                            ; preds = %bb130
; call core::fmt::Formatter::write_fmt
  %376 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_221)
  %377 = zext i1 %376 to i8
  store i8 %377, i8* %0, align 1
  br label %bb357

bb125:                                            ; preds = %bb124
  %378 = bitcast [1 x { i8*, i64* }]* %_209 to { i8*, i64* }*
  %379 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %378, i32 0, i32 0
  store i8* %_213.0, i8** %379, align 8
  %380 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %378, i32 0, i32 1
  store i64* %_213.1, i64** %380, align 8
  %_206.0 = bitcast [1 x { i8*, i64* }]* %_209 to [0 x { i8*, i64* }]*
  br label %bb126

bb126:                                            ; preds = %bb125
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_202, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_206.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc319 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb127

bb127:                                            ; preds = %bb126
; call core::fmt::Formatter::write_fmt
  %381 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_202)
  %382 = zext i1 %381 to i8
  store i8 %382, i8* %0, align 1
  br label %bb357

bb121:                                            ; preds = %bb120
  %383 = bitcast [1 x { i8*, i64* }]* %_190 to { i8*, i64* }*
  %384 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %383, i32 0, i32 0
  store i8* %_194.0, i8** %384, align 8
  %385 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %383, i32 0, i32 1
  store i64* %_194.1, i64** %385, align 8
  %_187.0 = bitcast [1 x { i8*, i64* }]* %_190 to [0 x { i8*, i64* }]*
  br label %bb122

bb122:                                            ; preds = %bb121
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_183, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_187.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc285 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb123

bb123:                                            ; preds = %bb122
; call core::fmt::Formatter::write_fmt
  %386 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_183)
  %387 = zext i1 %386 to i8
  store i8 %387, i8* %0, align 1
  br label %bb357

bb100:                                            ; preds = %bb99
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %388 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_147)
  %389 = zext i1 %388 to i8
  store i8 %389, i8* %_146, align 1
  br label %bb101

bb101:                                            ; preds = %bb100
  %390 = load i8, i8* %_146, align 1, !range !3
  %391 = trunc i8 %390 to i1
  %_150 = zext i1 %391 to i64
  switch i64 %_150, label %bb103 [
    i64 0, label %bb102
    i64 1, label %bb104
  ]

bb103:                                            ; preds = %bb101
  unreachable

bb102:                                            ; preds = %bb101
; call core::fmt::Formatter::write_str
  %_155 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1531 to [0 x i8]*), i64 1)
  br label %bb105

bb104:                                            ; preds = %bb101
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %392 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1525 to %"core::panic::location::Location"*))
  %393 = zext i1 %392 to i8
  store i8 %393, i8* %0, align 1
  br label %bb357

bb105:                                            ; preds = %bb102
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %394 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_155)
  %395 = zext i1 %394 to i8
  store i8 %395, i8* %_154, align 1
  br label %bb106

bb106:                                            ; preds = %bb105
  %396 = load i8, i8* %_154, align 1, !range !3
  %397 = trunc i8 %396 to i1
  %_159 = zext i1 %397 to i64
  switch i64 %_159, label %bb108 [
    i64 0, label %bb107
    i64 1, label %bb109
  ]

bb108:                                            ; preds = %bb106
  unreachable

bb107:                                            ; preds = %bb106
; call time::display::parse_type
  %_164 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 100, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb110

bb109:                                            ; preds = %bb106
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %398 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1528 to %"core::panic::location::Location"*))
  %399 = zext i1 %398 to i8
  store i8 %399, i8* %0, align 1
  br label %bb357

bb110:                                            ; preds = %bb107
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %400 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_164)
  %401 = zext i1 %400 to i8
  store i8 %401, i8* %_163, align 1
  br label %bb111

bb111:                                            ; preds = %bb110
  %402 = load i8, i8* %_163, align 1, !range !3
  %403 = trunc i8 %402 to i1
  %_167 = zext i1 %403 to i64
  switch i64 %_167, label %bb113 [
    i64 0, label %bb112
    i64 1, label %bb114
  ]

bb113:                                            ; preds = %bb111
  unreachable

bb112:                                            ; preds = %bb111
; call core::fmt::Formatter::write_str
  %_172 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1531 to [0 x i8]*), i64 1)
  br label %bb115

bb114:                                            ; preds = %bb111
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %404 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1530 to %"core::panic::location::Location"*))
  %405 = zext i1 %404 to i8
  store i8 %405, i8* %0, align 1
  br label %bb357

bb115:                                            ; preds = %bb112
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %406 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_172)
  %407 = zext i1 %406 to i8
  store i8 %407, i8* %_171, align 1
  br label %bb116

bb116:                                            ; preds = %bb115
  %408 = load i8, i8* %_171, align 1, !range !3
  %409 = trunc i8 %408 to i1
  %_176 = zext i1 %409 to i64
  switch i64 %_176, label %bb118 [
    i64 0, label %bb117
    i64 1, label %bb119
  ]

bb118:                                            ; preds = %bb116
  unreachable

bb117:                                            ; preds = %bb116
; call time::display::parse_type
  %410 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 121, %Tm* align 4 dereferenceable(44) %tm)
  %411 = zext i1 %410 to i8
  store i8 %411, i8* %0, align 1
  br label %bb357

bb119:                                            ; preds = %bb116
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %412 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1533 to %"core::panic::location::Location"*))
  %413 = zext i1 %412 to i8
  store i8 %413, i8* %0, align 1
  br label %bb357

bb59:                                             ; preds = %bb58
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %414 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_77)
  %415 = zext i1 %414 to i8
  store i8 %415, i8* %_76, align 1
  br label %bb60

bb60:                                             ; preds = %bb59
  %416 = load i8, i8* %_76, align 1, !range !3
  %417 = trunc i8 %416 to i1
  %_80 = zext i1 %417 to i64
  switch i64 %_80, label %bb62 [
    i64 0, label %bb61
    i64 1, label %bb63
  ]

bb62:                                             ; preds = %bb60
  unreachable

bb61:                                             ; preds = %bb60
; call core::fmt::Formatter::write_str
  %_85 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1749 to [0 x i8]*), i64 1)
  br label %bb64

bb63:                                             ; preds = %bb60
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %418 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1535 to %"core::panic::location::Location"*))
  %419 = zext i1 %418 to i8
  store i8 %419, i8* %0, align 1
  br label %bb357

bb64:                                             ; preds = %bb61
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %420 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_85)
  %421 = zext i1 %420 to i8
  store i8 %421, i8* %_84, align 1
  br label %bb65

bb65:                                             ; preds = %bb64
  %422 = load i8, i8* %_84, align 1, !range !3
  %423 = trunc i8 %422 to i1
  %_89 = zext i1 %423 to i64
  switch i64 %_89, label %bb67 [
    i64 0, label %bb66
    i64 1, label %bb68
  ]

bb67:                                             ; preds = %bb65
  unreachable

bb66:                                             ; preds = %bb65
; call time::display::parse_type
  %_94 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 98, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb69

bb68:                                             ; preds = %bb65
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %424 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1538 to %"core::panic::location::Location"*))
  %425 = zext i1 %424 to i8
  store i8 %425, i8* %0, align 1
  br label %bb357

bb69:                                             ; preds = %bb66
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %426 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_94)
  %427 = zext i1 %426 to i8
  store i8 %427, i8* %_93, align 1
  br label %bb70

bb70:                                             ; preds = %bb69
  %428 = load i8, i8* %_93, align 1, !range !3
  %429 = trunc i8 %428 to i1
  %_97 = zext i1 %429 to i64
  switch i64 %_97, label %bb72 [
    i64 0, label %bb71
    i64 1, label %bb73
  ]

bb72:                                             ; preds = %bb70
  unreachable

bb71:                                             ; preds = %bb70
; call core::fmt::Formatter::write_str
  %_102 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1749 to [0 x i8]*), i64 1)
  br label %bb74

bb73:                                             ; preds = %bb70
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %430 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1540 to %"core::panic::location::Location"*))
  %431 = zext i1 %430 to i8
  store i8 %431, i8* %0, align 1
  br label %bb357

bb74:                                             ; preds = %bb71
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %432 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_102)
  %433 = zext i1 %432 to i8
  store i8 %433, i8* %_101, align 1
  br label %bb75

bb75:                                             ; preds = %bb74
  %434 = load i8, i8* %_101, align 1, !range !3
  %435 = trunc i8 %434 to i1
  %_106 = zext i1 %435 to i64
  switch i64 %_106, label %bb77 [
    i64 0, label %bb76
    i64 1, label %bb78
  ]

bb77:                                             ; preds = %bb75
  unreachable

bb76:                                             ; preds = %bb75
; call time::display::parse_type
  %_111 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 101, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb79

bb78:                                             ; preds = %bb75
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %436 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1543 to %"core::panic::location::Location"*))
  %437 = zext i1 %436 to i8
  store i8 %437, i8* %0, align 1
  br label %bb357

bb79:                                             ; preds = %bb76
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %438 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_111)
  %439 = zext i1 %438 to i8
  store i8 %439, i8* %_110, align 1
  br label %bb80

bb80:                                             ; preds = %bb79
  %440 = load i8, i8* %_110, align 1, !range !3
  %441 = trunc i8 %440 to i1
  %_114 = zext i1 %441 to i64
  switch i64 %_114, label %bb82 [
    i64 0, label %bb81
    i64 1, label %bb83
  ]

bb82:                                             ; preds = %bb80
  unreachable

bb81:                                             ; preds = %bb80
; call core::fmt::Formatter::write_str
  %_119 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1749 to [0 x i8]*), i64 1)
  br label %bb84

bb83:                                             ; preds = %bb80
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %442 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1545 to %"core::panic::location::Location"*))
  %443 = zext i1 %442 to i8
  store i8 %443, i8* %0, align 1
  br label %bb357

bb84:                                             ; preds = %bb81
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %444 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_119)
  %445 = zext i1 %444 to i8
  store i8 %445, i8* %_118, align 1
  br label %bb85

bb85:                                             ; preds = %bb84
  %446 = load i8, i8* %_118, align 1, !range !3
  %447 = trunc i8 %446 to i1
  %_123 = zext i1 %447 to i64
  switch i64 %_123, label %bb87 [
    i64 0, label %bb86
    i64 1, label %bb88
  ]

bb87:                                             ; preds = %bb85
  unreachable

bb86:                                             ; preds = %bb85
; call time::display::parse_type
  %_128 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 84, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb89

bb88:                                             ; preds = %bb85
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %448 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1548 to %"core::panic::location::Location"*))
  %449 = zext i1 %448 to i8
  store i8 %449, i8* %0, align 1
  br label %bb357

bb89:                                             ; preds = %bb86
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %450 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_128)
  %451 = zext i1 %450 to i8
  store i8 %451, i8* %_127, align 1
  br label %bb90

bb90:                                             ; preds = %bb89
  %452 = load i8, i8* %_127, align 1, !range !3
  %453 = trunc i8 %452 to i1
  %_131 = zext i1 %453 to i64
  switch i64 %_131, label %bb92 [
    i64 0, label %bb91
    i64 1, label %bb93
  ]

bb92:                                             ; preds = %bb90
  unreachable

bb91:                                             ; preds = %bb90
; call core::fmt::Formatter::write_str
  %_136 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1749 to [0 x i8]*), i64 1)
  br label %bb94

bb93:                                             ; preds = %bb90
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %454 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1550 to %"core::panic::location::Location"*))
  %455 = zext i1 %454 to i8
  store i8 %455, i8* %0, align 1
  br label %bb357

bb94:                                             ; preds = %bb91
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %456 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_136)
  %457 = zext i1 %456 to i8
  store i8 %457, i8* %_135, align 1
  br label %bb95

bb95:                                             ; preds = %bb94
  %458 = load i8, i8* %_135, align 1, !range !3
  %459 = trunc i8 %458 to i1
  %_140 = zext i1 %459 to i64
  switch i64 %_140, label %bb97 [
    i64 0, label %bb96
    i64 1, label %bb98
  ]

bb97:                                             ; preds = %bb95
  unreachable

bb96:                                             ; preds = %bb95
; call time::display::parse_type
  %460 = call zeroext i1 @_ZN4time7display10parse_type17h3e6b387a3c0fb956E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, i32 89, %Tm* align 4 dereferenceable(44) %tm)
  %461 = zext i1 %460 to i8
  store i8 %461, i8* %0, align 1
  br label %bb357

bb98:                                             ; preds = %bb95
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %462 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1553 to %"core::panic::location::Location"*))
  %463 = zext i1 %462 to i8
  store i8 %463, i8* %0, align 1
  br label %bb357

bb53:                                             ; preds = %bb52
  %_66 = icmp eq i32 %_64.0, -2147483648
  %_67 = and i1 false, %_66
  %464 = call i1 @llvm.expect.i1(i1 %_67, i1 false)
  br i1 %464, label %panic42, label %bb54

panic41:                                          ; preds = %bb52
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1555 to %"core::panic::location::Location"*)) #17
  unreachable

bb54:                                             ; preds = %bb53
  %465 = sdiv i32 %_64.0, 100
  store i32 %465, i32* %_61, align 4
  store i32* %_61, i32** %_59, align 8
  %_args43 = load i32*, i32** %_59, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %466 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args43, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_69.0 = extractvalue { i8*, i64* } %466, 0
  %_69.1 = extractvalue { i8*, i64* } %466, 1
  br label %bb55

panic42:                                          ; preds = %bb53
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1555 to %"core::panic::location::Location"*)) #17
  unreachable

bb55:                                             ; preds = %bb54
  %467 = bitcast [1 x { i8*, i64* }]* %_58 to { i8*, i64* }*
  %468 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %467, i32 0, i32 0
  store i8* %_69.0, i8** %468, align 8
  %469 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %467, i32 0, i32 1
  store i64* %_69.1, i64** %469, align 8
  %_55.0 = bitcast [1 x { i8*, i64* }]* %_58 to [0 x { i8*, i64* }]*
  br label %bb56

bb56:                                             ; preds = %bb55
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_51, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_55.0, i64 1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [56 x i8] }>* @alloc285 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 1)
  br label %bb57

bb57:                                             ; preds = %bb56
; call core::fmt::Formatter::write_fmt
  %470 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_51)
  %471 = zext i1 %470 to i8
  store i8 %471, i8* %0, align 1
  br label %bb357

bb38:                                             ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc1596 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1558 to %"core::panic::location::Location"*)) #17
  unreachable

bb39:                                             ; preds = %bb37
  %472 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc823 to [0 x i8]*), [0 x i8]** %472, align 8
  %473 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 1
  store i64 3, i64* %473, align 8
  br label %bb51

bb40:                                             ; preds = %bb37
  %474 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc825 to [0 x i8]*), [0 x i8]** %474, align 8
  %475 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 1
  store i64 3, i64* %475, align 8
  br label %bb51

bb41:                                             ; preds = %bb37
  %476 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc827 to [0 x i8]*), [0 x i8]** %476, align 8
  %477 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 1
  store i64 3, i64* %477, align 8
  br label %bb51

bb42:                                             ; preds = %bb37
  %478 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc829 to [0 x i8]*), [0 x i8]** %478, align 8
  %479 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 1
  store i64 3, i64* %479, align 8
  br label %bb51

bb43:                                             ; preds = %bb37
  %480 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc802 to [0 x i8]*), [0 x i8]** %480, align 8
  %481 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 1
  store i64 3, i64* %481, align 8
  br label %bb51

bb44:                                             ; preds = %bb37
  %482 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc833 to [0 x i8]*), [0 x i8]** %482, align 8
  %483 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 1
  store i64 3, i64* %483, align 8
  br label %bb51

bb45:                                             ; preds = %bb37
  %484 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc835 to [0 x i8]*), [0 x i8]** %484, align 8
  %485 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 1
  store i64 3, i64* %485, align 8
  br label %bb51

bb46:                                             ; preds = %bb37
  %486 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc837 to [0 x i8]*), [0 x i8]** %486, align 8
  %487 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 1
  store i64 3, i64* %487, align 8
  br label %bb51

bb47:                                             ; preds = %bb37
  %488 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc839 to [0 x i8]*), [0 x i8]** %488, align 8
  %489 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 1
  store i64 3, i64* %489, align 8
  br label %bb51

bb48:                                             ; preds = %bb37
  %490 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc841 to [0 x i8]*), [0 x i8]** %490, align 8
  %491 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 1
  store i64 3, i64* %491, align 8
  br label %bb51

bb49:                                             ; preds = %bb37
  %492 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc843 to [0 x i8]*), [0 x i8]** %492, align 8
  %493 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 1
  store i64 3, i64* %493, align 8
  br label %bb51

bb50:                                             ; preds = %bb37
  %494 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc845 to [0 x i8]*), [0 x i8]** %494, align 8
  %495 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 1
  store i64 3, i64* %495, align 8
  br label %bb51

bb51:                                             ; preds = %bb39, %bb40, %bb41, %bb42, %bb43, %bb44, %bb45, %bb46, %bb47, %bb48, %bb49, %bb50
  %496 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 0
  %497 = load [0 x i8]*, [0 x i8]** %496, align 8, !nonnull !4
  %498 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_37, i32 0, i32 1
  %499 = load i64, i64* %498, align 8
; call core::fmt::Formatter::write_str
  %500 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 %497, i64 %499)
  %501 = zext i1 %500 to i8
  store i8 %501, i8* %0, align 1
  br label %bb357

bb23:                                             ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc1596 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1573 to %"core::panic::location::Location"*)) #17
  unreachable

bb24:                                             ; preds = %bb22
  %502 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [7 x i8] }>* @alloc794 to [0 x i8]*), [0 x i8]** %502, align 8
  %503 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 1
  store i64 7, i64* %503, align 8
  br label %bb36

bb25:                                             ; preds = %bb22
  %504 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [8 x i8] }>* @alloc796 to [0 x i8]*), [0 x i8]** %504, align 8
  %505 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 1
  store i64 8, i64* %505, align 8
  br label %bb36

bb26:                                             ; preds = %bb22
  %506 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [5 x i8] }>* @alloc798 to [0 x i8]*), [0 x i8]** %506, align 8
  %507 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 1
  store i64 5, i64* %507, align 8
  br label %bb36

bb27:                                             ; preds = %bb22
  %508 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [5 x i8] }>* @alloc800 to [0 x i8]*), [0 x i8]** %508, align 8
  %509 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 1
  store i64 5, i64* %509, align 8
  br label %bb36

bb28:                                             ; preds = %bb22
  %510 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc802 to [0 x i8]*), [0 x i8]** %510, align 8
  %511 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 1
  store i64 3, i64* %511, align 8
  br label %bb36

bb29:                                             ; preds = %bb22
  %512 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [4 x i8] }>* @alloc804 to [0 x i8]*), [0 x i8]** %512, align 8
  %513 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 1
  store i64 4, i64* %513, align 8
  br label %bb36

bb30:                                             ; preds = %bb22
  %514 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [4 x i8] }>* @alloc806 to [0 x i8]*), [0 x i8]** %514, align 8
  %515 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 1
  store i64 4, i64* %515, align 8
  br label %bb36

bb31:                                             ; preds = %bb22
  %516 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [6 x i8] }>* @alloc808 to [0 x i8]*), [0 x i8]** %516, align 8
  %517 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 1
  store i64 6, i64* %517, align 8
  br label %bb36

bb32:                                             ; preds = %bb22
  %518 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [9 x i8] }>* @alloc810 to [0 x i8]*), [0 x i8]** %518, align 8
  %519 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 1
  store i64 9, i64* %519, align 8
  br label %bb36

bb33:                                             ; preds = %bb22
  %520 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [7 x i8] }>* @alloc812 to [0 x i8]*), [0 x i8]** %520, align 8
  %521 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 1
  store i64 7, i64* %521, align 8
  br label %bb36

bb34:                                             ; preds = %bb22
  %522 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [8 x i8] }>* @alloc814 to [0 x i8]*), [0 x i8]** %522, align 8
  %523 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 1
  store i64 8, i64* %523, align 8
  br label %bb36

bb35:                                             ; preds = %bb22
  %524 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [8 x i8] }>* @alloc816 to [0 x i8]*), [0 x i8]** %524, align 8
  %525 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 1
  store i64 8, i64* %525, align 8
  br label %bb36

bb36:                                             ; preds = %bb24, %bb25, %bb26, %bb27, %bb28, %bb29, %bb30, %bb31, %bb32, %bb33, %bb34, %bb35
  %526 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 0
  %527 = load [0 x i8]*, [0 x i8]** %526, align 8, !nonnull !4
  %528 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_23, i32 0, i32 1
  %529 = load i64, i64* %528, align 8
; call core::fmt::Formatter::write_str
  %530 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 %527, i64 %529)
  %531 = zext i1 %530 to i8
  store i8 %531, i8* %0, align 1
  br label %bb357

bb13:                                             ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc1596 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1588 to %"core::panic::location::Location"*)) #17
  unreachable

bb14:                                             ; preds = %bb12
  %532 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc775 to [0 x i8]*), [0 x i8]** %532, align 8
  %533 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 1
  store i64 3, i64* %533, align 8
  br label %bb21

bb15:                                             ; preds = %bb12
  %534 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc777 to [0 x i8]*), [0 x i8]** %534, align 8
  %535 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 1
  store i64 3, i64* %535, align 8
  br label %bb21

bb16:                                             ; preds = %bb12
  %536 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc779 to [0 x i8]*), [0 x i8]** %536, align 8
  %537 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 1
  store i64 3, i64* %537, align 8
  br label %bb21

bb17:                                             ; preds = %bb12
  %538 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc781 to [0 x i8]*), [0 x i8]** %538, align 8
  %539 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 1
  store i64 3, i64* %539, align 8
  br label %bb21

bb18:                                             ; preds = %bb12
  %540 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc783 to [0 x i8]*), [0 x i8]** %540, align 8
  %541 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 1
  store i64 3, i64* %541, align 8
  br label %bb21

bb19:                                             ; preds = %bb12
  %542 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc785 to [0 x i8]*), [0 x i8]** %542, align 8
  %543 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 1
  store i64 3, i64* %543, align 8
  br label %bb21

bb20:                                             ; preds = %bb12
  %544 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [3 x i8] }>* @alloc787 to [0 x i8]*), [0 x i8]** %544, align 8
  %545 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 1
  store i64 3, i64* %545, align 8
  br label %bb21

bb21:                                             ; preds = %bb14, %bb15, %bb16, %bb17, %bb18, %bb19, %bb20
  %546 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 0
  %547 = load [0 x i8]*, [0 x i8]** %546, align 8, !nonnull !4
  %548 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_14, i32 0, i32 1
  %549 = load i64, i64* %548, align 8
; call core::fmt::Formatter::write_str
  %550 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 %547, i64 %549)
  %551 = zext i1 %550 to i8
  store i8 %551, i8* %0, align 1
  br label %bb357

bb3:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc1596 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1598 to %"core::panic::location::Location"*)) #17
  unreachable

bb4:                                              ; preds = %bb2
  %552 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [6 x i8] }>* @alloc756 to [0 x i8]*), [0 x i8]** %552, align 8
  %553 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 1
  store i64 6, i64* %553, align 8
  br label %bb11

bb5:                                              ; preds = %bb2
  %554 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [6 x i8] }>* @alloc758 to [0 x i8]*), [0 x i8]** %554, align 8
  %555 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 1
  store i64 6, i64* %555, align 8
  br label %bb11

bb6:                                              ; preds = %bb2
  %556 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [7 x i8] }>* @alloc760 to [0 x i8]*), [0 x i8]** %556, align 8
  %557 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 1
  store i64 7, i64* %557, align 8
  br label %bb11

bb7:                                              ; preds = %bb2
  %558 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [9 x i8] }>* @alloc762 to [0 x i8]*), [0 x i8]** %558, align 8
  %559 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 1
  store i64 9, i64* %559, align 8
  br label %bb11

bb8:                                              ; preds = %bb2
  %560 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [8 x i8] }>* @alloc764 to [0 x i8]*), [0 x i8]** %560, align 8
  %561 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 1
  store i64 8, i64* %561, align 8
  br label %bb11

bb9:                                              ; preds = %bb2
  %562 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [6 x i8] }>* @alloc766 to [0 x i8]*), [0 x i8]** %562, align 8
  %563 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 1
  store i64 6, i64* %563, align 8
  br label %bb11

bb10:                                             ; preds = %bb2
  %564 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [8 x i8] }>* @alloc768 to [0 x i8]*), [0 x i8]** %564, align 8
  %565 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 1
  store i64 8, i64* %565, align 8
  br label %bb11

bb11:                                             ; preds = %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10
  %566 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 0
  %567 = load [0 x i8]*, [0 x i8]** %566, align 8, !nonnull !4
  %568 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 1
  %569 = load i64, i64* %568, align 8
; call core::fmt::Formatter::write_str
  %570 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, [0 x i8]* nonnull align 1 %567, i64 %569)
  %571 = zext i1 %570 to i8
  store i8 %571, i8* %0, align 1
  br label %bb357
}

; time::display::abs
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN4time7display3abs17he39446ec470aaf99E(i32 %i) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_2 = icmp slt i32 %i, 0
  br i1 %_2, label %bb1, label %bb3

bb3:                                              ; preds = %start
  store i32 %i, i32* %0, align 4
  br label %bb4

bb1:                                              ; preds = %start
  %_5 = icmp eq i32 %i, -2147483648
  %1 = call i1 @llvm.expect.i1(i1 %_5, i1 false)
  br i1 %1, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %2 = sub i32 0, %i
  store i32 %2, i32* %0, align 4
  br label %bb4

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.c to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1607 to %"core::panic::location::Location"*)) #17
  unreachable

bb4:                                              ; preds = %bb3, %bb2
  %3 = load i32, i32* %0, align 4
  ret i32 %3
}

; time::duration::Duration::seconds
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @_ZN4time8duration8Duration7seconds17hd7772c225040ec8eE(i64 %seconds) unnamed_addr #0 {
start:
  %_3 = alloca i8, align 1
  %d = alloca { i64, i32 }, align 8
  %0 = bitcast { i64, i32 }* %d to i64*
  store i64 %seconds, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %d, i32 0, i32 1
  store i32 0, i32* %1, align 8
; call core::cmp::PartialOrd::lt
  %_4 = call zeroext i1 @_ZN4core3cmp10PartialOrd2lt17h9101fccfd89aa5adE({ i64, i32 }* align 8 dereferenceable(16) %d, { i64, i32 }* align 8 dereferenceable(16) bitcast (<{ [16 x i8] }>* @alloc623 to { i64, i32 }*))
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
; call core::cmp::PartialOrd::gt
  %_7 = call zeroext i1 @_ZN4core3cmp10PartialOrd2gt17h84eabdfdc89aff3cE({ i64, i32 }* align 8 dereferenceable(16) %d, { i64, i32 }* align 8 dereferenceable(16) bitcast (<{ [16 x i8] }>* @alloc635 to { i64, i32 }*))
  br label %bb5

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %2 = load i8, i8* %_3, align 1, !range !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb6, label %bb7

bb5:                                              ; preds = %bb2
  %4 = zext i1 %_7 to i8
  store i8 %4, i8* %_3, align 1
  br label %bb3

bb7:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %d, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %d, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i64, i32 } undef, i64 %6, 0
  %10 = insertvalue { i64, i32 } %9, i32 %8, 1
  ret { i64, i32 } %10

bb6:                                              ; preds = %bb3
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17h8cea0a41872b496bE([0 x i8]* nonnull align 1 bitcast (<{ [31 x i8] }>* @alloc1608 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1610 to %"core::panic::location::Location"*)) #17
  unreachable
}

; time::duration::Duration::nanoseconds
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @_ZN4time8duration8Duration11nanoseconds17h4ee53b6f99fb181fE(i64 %nanos) unnamed_addr #0 {
start:
  %0 = alloca { i64, i32 }, align 8
; call time::duration::div_mod_floor_64
  %1 = call { i64, i64 } @_ZN4time8duration16div_mod_floor_6417h3207723aac8dd4beE(i64 %nanos, i64 1000000000)
  %_4.0 = extractvalue { i64, i64 } %1, 0
  %_4.1 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_8 = trunc i64 %_4.1 to i32
  %2 = bitcast { i64, i32 }* %0 to i64*
  store i64 %_4.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %_8, i32* %3, align 8
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i64, i32 } undef, i64 %5, 0
  %9 = insertvalue { i64, i32 } %8, i32 %7, 1
  ret { i64, i32 } %9
}

; time::duration::Duration::num_days
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4time8duration8Duration8num_days17h0afb67d50717a7ceE({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call time::duration::Duration::num_seconds
  %_2 = call i64 @_ZN4time8duration8Duration11num_seconds17h0d8be9022366955dE({ i64, i32 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = icmp eq i64 %_2, -9223372036854775808
  %_6 = and i1 false, %_5
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = sdiv i64 %_2, 86400
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1612 to %"core::panic::location::Location"*)) #17
  unreachable
}

; time::duration::Duration::num_seconds
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4time8duration8Duration11num_seconds17h0d8be9022366955dE({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca i8, align 1
  %0 = alloca i64, align 8
  %1 = bitcast { i64, i32 }* %self to i64*
  %_4 = load i64, i64* %1, align 8
  %_3 = icmp slt i64 %_4, 0
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %_6 = load i32, i32* %2, align 8
  %_5 = icmp sgt i32 %_6, 0
  %3 = zext i1 %_5 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb4, label %bb6

bb6:                                              ; preds = %bb3
  %6 = bitcast { i64, i32 }* %self to i64*
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %0, align 8
  br label %bb7

bb4:                                              ; preds = %bb3
  %8 = bitcast { i64, i32 }* %self to i64*
  %_7 = load i64, i64* %8, align 8
  %9 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_7, i64 1)
  %_8.0 = extractvalue { i64, i1 } %9, 0
  %_8.1 = extractvalue { i64, i1 } %9, 1
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false)
  br i1 %10, label %panic, label %bb5

bb5:                                              ; preds = %bb4
  store i64 %_8.0, i64* %0, align 8
  br label %bb7

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1614 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %bb6, %bb5
  %11 = load i64, i64* %0, align 8
  ret i64 %11
}

; time::duration::Duration::nanos_mod_sec
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN4time8duration8Duration13nanos_mod_sec17h03ac7113ab88732aE({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca i8, align 1
  %0 = alloca i32, align 4
  %1 = bitcast { i64, i32 }* %self to i64*
  %_4 = load i64, i64* %1, align 8
  %_3 = icmp slt i64 %_4, 0
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %_6 = load i32, i32* %2, align 8
  %_5 = icmp sgt i32 %_6, 0
  %3 = zext i1 %_5 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb4, label %bb6

bb6:                                              ; preds = %bb3
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %0, align 4
  br label %bb7

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %_7 = load i32, i32* %8, align 8
  %9 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_7, i32 1000000000)
  %_8.0 = extractvalue { i32, i1 } %9, 0
  %_8.1 = extractvalue { i32, i1 } %9, 1
  %10 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false)
  br i1 %10, label %panic, label %bb5

bb5:                                              ; preds = %bb4
  store i32 %_8.0, i32* %0, align 4
  br label %bb7

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1616 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %bb6, %bb5
  %11 = load i32, i32* %0, align 4
  ret i32 %11
}

; time::duration::Duration::num_milliseconds
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4time8duration8Duration16num_milliseconds17h3c707de302d7acfeE({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call time::duration::Duration::num_seconds
  %_3 = call i64 @_ZN4time8duration8Duration11num_seconds17h0d8be9022366955dE({ i64, i32 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_3, i64 1000)
  %_5.0 = extractvalue { i64, i1 } %0, 0
  %_5.1 = extractvalue { i64, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  br i1 %1, label %panic, label %bb2

bb2:                                              ; preds = %bb1
; call time::duration::Duration::nanos_mod_sec
  %_7 = call i32 @_ZN4time8duration8Duration13nanos_mod_sec17h03ac7113ab88732aE({ i64, i32 }* align 8 dereferenceable(16) %self)
  br label %bb3

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1618 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %bb2
  %_10 = icmp eq i32 %_7, -2147483648
  %_11 = and i1 false, %_10
  %2 = call i1 @llvm.expect.i1(i1 %_11, i1 false)
  br i1 %2, label %panic1, label %bb4

bb4:                                              ; preds = %bb3
  %nanos_part = sdiv i32 %_7, 1000000
  %_13 = sext i32 %nanos_part to i64
  %3 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_5.0, i64 %_13)
  %_15.0 = extractvalue { i64, i1 } %3, 0
  %_15.1 = extractvalue { i64, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false)
  br i1 %4, label %panic2, label %bb5

panic1:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1620 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb4
  ret i64 %_15.0

panic2:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1622 to %"core::panic::location::Location"*)) #17
  unreachable
}

; time::duration::Duration::num_microseconds
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4time8duration8Duration16num_microseconds17h084a58346e733fdbE({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
; call time::duration::Duration::num_seconds
  %_4 = call i64 @_ZN4time8duration8Duration11num_seconds17h0d8be9022366955dE({ i64, i32 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl i64>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$i64$GT$11checked_mul17h2a4bc725f0291d10E"(i64 %_4, i64 1000000)
  store { i64, i64 } %1, { i64, i64 }* %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast { i64, i64 }* %_3 to i64*
  %_6 = load i64, i64* %2, align 8, !range !10
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %3 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %3, align 8
  br label %bb8

bb5:                                              ; preds = %bb2
  %4 = bitcast { i64, i64 }* %_3 to %"core::option::Option<i64>::Some"*
  %5 = getelementptr inbounds %"core::option::Option<i64>::Some", %"core::option::Option<i64>::Some"* %4, i32 0, i32 1
  %v = load i64, i64* %5, align 8
; call time::duration::Duration::nanos_mod_sec
  %_9 = call i32 @_ZN4time8duration8Duration13nanos_mod_sec17h03ac7113ab88732aE({ i64, i32 }* align 8 dereferenceable(16) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_12 = icmp eq i32 %_9, -2147483648
  %_13 = and i1 false, %_12
  %6 = call i1 @llvm.expect.i1(i1 %_13, i1 false)
  br i1 %6, label %panic, label %bb7

bb7:                                              ; preds = %bb6
  %nanos_part = sdiv i32 %_9, 1000
  %_15 = sext i32 %nanos_part to i64
; call core::num::<impl i64>::checked_add
  %7 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$i64$GT$11checked_add17hf71f0b27051f5ce3E"(i64 %v, i64 %_15)
  store { i64, i64 } %7, { i64, i64 }* %0, align 8
  br label %bb8

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1624 to %"core::panic::location::Location"*)) #17
  unreachable

bb8:                                              ; preds = %bb3, %bb7
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8, !range !10
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1
  ret { i64, i64 } %13
}

; time::duration::Duration::num_nanoseconds
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4time8duration8Duration15num_nanoseconds17h4aef4c731c12f062E({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
; call time::duration::Duration::num_seconds
  %_4 = call i64 @_ZN4time8duration8Duration11num_seconds17h0d8be9022366955dE({ i64, i32 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl i64>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$i64$GT$11checked_mul17h2a4bc725f0291d10E"(i64 %_4, i64 1000000000)
  store { i64, i64 } %1, { i64, i64 }* %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast { i64, i64 }* %_3 to i64*
  %_7 = load i64, i64* %2, align 8, !range !10
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %3 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %3, align 8
  br label %bb7

bb5:                                              ; preds = %bb2
  %4 = bitcast { i64, i64 }* %_3 to %"core::option::Option<i64>::Some"*
  %5 = getelementptr inbounds %"core::option::Option<i64>::Some", %"core::option::Option<i64>::Some"* %4, i32 0, i32 1
  %v = load i64, i64* %5, align 8
; call time::duration::Duration::nanos_mod_sec
  %nanos_part = call i32 @_ZN4time8duration8Duration13nanos_mod_sec17h03ac7113ab88732aE({ i64, i32 }* align 8 dereferenceable(16) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_12 = sext i32 %nanos_part to i64
; call core::num::<impl i64>::checked_add
  %6 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$i64$GT$11checked_add17hf71f0b27051f5ce3E"(i64 %v, i64 %_12)
  store { i64, i64 } %6, { i64, i64 }* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb6
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8, !range !10
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; time::duration::Duration::checked_add
; Function Attrs: nonlazybind uwtable
define void @_ZN4time8duration8Duration11checked_add17ha80b61c70706ed66E(%"core::option::Option<duration::Duration>"* noalias nocapture sret(%"core::option::Option<duration::Duration>") dereferenceable(24) %0, { i64, i32 }* align 8 dereferenceable(16) %self, { i64, i32 }* align 8 dereferenceable(16) %rhs) unnamed_addr #1 {
start:
  %_24 = alloca i8, align 1
  %d = alloca { i64, i32 }, align 8
  %_17 = alloca { i64, i64 }, align 8
  %nanos = alloca i32, align 4
  %_4 = alloca { i64, i64 }, align 8
  %secs = alloca i64, align 8
  %1 = bitcast { i64, i32 }* %self to i64*
  %_5 = load i64, i64* %1, align 8
  %2 = bitcast { i64, i32 }* %rhs to i64*
  %_6 = load i64, i64* %2, align 8
; call core::num::<impl i64>::checked_add
  %3 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$i64$GT$11checked_add17hf71f0b27051f5ce3E"(i64 %_5, i64 %_6)
  store { i64, i64 } %3, { i64, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { i64, i64 }* %_4 to i64*
  %_7 = load i64, i64* %4, align 8, !range !10
  switch i64 %_7, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %5 = bitcast %"core::option::Option<duration::Duration>"* %0 to i64*
  store i64 0, i64* %5, align 8
  br label %bb20

bb4:                                              ; preds = %bb1
  %6 = bitcast { i64, i64 }* %_4 to %"core::option::Option<i64>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<i64>::Some", %"core::option::Option<i64>::Some"* %6, i32 0, i32 1
  %v = load i64, i64* %7, align 8
  store i64 %v, i64* %secs, align 8
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %_10 = load i32, i32* %8, align 8
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %rhs, i32 0, i32 1
  %_11 = load i32, i32* %9, align 8
  %10 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_10, i32 %_11)
  %_12.0 = extractvalue { i32, i1 } %10, 0
  %_12.1 = extractvalue { i32, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false)
  br i1 %11, label %panic, label %bb5

bb5:                                              ; preds = %bb4
  store i32 %_12.0, i32* %nanos, align 4
  %_14 = load i32, i32* %nanos, align 4
  %_13 = icmp sge i32 %_14, 1000000000
  br i1 %_13, label %bb6, label %bb12

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1626 to %"core::panic::location::Location"*)) #17
  unreachable

bb12:                                             ; preds = %bb11, %bb5
  %_22 = load i64, i64* %secs, align 8
  %_23 = load i32, i32* %nanos, align 4
  %12 = bitcast { i64, i32 }* %d to i64*
  store i64 %_22, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %d, i32 0, i32 1
  store i32 %_23, i32* %13, align 8
; call core::cmp::PartialOrd::lt
  %_25 = call zeroext i1 @_ZN4core3cmp10PartialOrd2lt17h9101fccfd89aa5adE({ i64, i32 }* align 8 dereferenceable(16) %d, { i64, i32 }* align 8 dereferenceable(16) bitcast (<{ [16 x i8] }>* @alloc623 to { i64, i32 }*))
  br label %bb16

bb6:                                              ; preds = %bb5
  %14 = load i32, i32* %nanos, align 4
  %15 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 1000000000)
  %_15.0 = extractvalue { i32, i1 } %15, 0
  %_15.1 = extractvalue { i32, i1 } %15, 1
  %16 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false)
  br i1 %16, label %panic1, label %bb7

bb7:                                              ; preds = %bb6
  store i32 %_15.0, i32* %nanos, align 4
  %_18 = load i64, i64* %secs, align 8
; call core::num::<impl i64>::checked_add
  %17 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$i64$GT$11checked_add17hf71f0b27051f5ce3E"(i64 %_18, i64 1)
  store { i64, i64 } %17, { i64, i64 }* %_17, align 8
  br label %bb8

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1628 to %"core::panic::location::Location"*)) #17
  unreachable

bb8:                                              ; preds = %bb7
  %18 = bitcast { i64, i64 }* %_17 to i64*
  %_19 = load i64, i64* %18, align 8, !range !10
  switch i64 %_19, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb9:                                              ; preds = %bb8
  %19 = bitcast %"core::option::Option<duration::Duration>"* %0 to i64*
  store i64 0, i64* %19, align 8
  br label %bb20

bb11:                                             ; preds = %bb8
  %20 = bitcast { i64, i64 }* %_17 to %"core::option::Option<i64>::Some"*
  %21 = getelementptr inbounds %"core::option::Option<i64>::Some", %"core::option::Option<i64>::Some"* %20, i32 0, i32 1
  %v2 = load i64, i64* %21, align 8
  store i64 %v2, i64* %secs, align 8
  br label %bb12

bb20:                                             ; preds = %bb2, %bb19, %bb18, %bb9
  ret void

bb16:                                             ; preds = %bb12
  br i1 %_25, label %bb13, label %bb14

bb14:                                             ; preds = %bb16
; call core::cmp::PartialOrd::gt
  %_28 = call zeroext i1 @_ZN4core3cmp10PartialOrd2gt17h84eabdfdc89aff3cE({ i64, i32 }* align 8 dereferenceable(16) %d, { i64, i32 }* align 8 dereferenceable(16) bitcast (<{ [16 x i8] }>* @alloc635 to { i64, i32 }*))
  br label %bb17

bb13:                                             ; preds = %bb16
  store i8 1, i8* %_24, align 1
  br label %bb15

bb15:                                             ; preds = %bb17, %bb13
  %22 = load i8, i8* %_24, align 1, !range !3
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb18, label %bb19

bb17:                                             ; preds = %bb14
  %24 = zext i1 %_28 to i8
  store i8 %24, i8* %_24, align 1
  br label %bb15

bb19:                                             ; preds = %bb15
  %25 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %d, i32 0, i32 0
  %_31.0 = load i64, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %d, i32 0, i32 1
  %_31.1 = load i32, i32* %26, align 8
  %27 = bitcast %"core::option::Option<duration::Duration>"* %0 to %"core::option::Option<duration::Duration>::Some"*
  %28 = getelementptr inbounds %"core::option::Option<duration::Duration>::Some", %"core::option::Option<duration::Duration>::Some"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 0
  store i64 %_31.0, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 1
  store i32 %_31.1, i32* %30, align 8
  %31 = bitcast %"core::option::Option<duration::Duration>"* %0 to i64*
  store i64 1, i64* %31, align 8
  br label %bb20

bb18:                                             ; preds = %bb15
  %32 = bitcast %"core::option::Option<duration::Duration>"* %0 to i64*
  store i64 0, i64* %32, align 8
  br label %bb20
}

; time::duration::Duration::checked_sub
; Function Attrs: nonlazybind uwtable
define void @_ZN4time8duration8Duration11checked_sub17h9cc53568d1d55074E(%"core::option::Option<duration::Duration>"* noalias nocapture sret(%"core::option::Option<duration::Duration>") dereferenceable(24) %0, { i64, i32 }* align 8 dereferenceable(16) %self, { i64, i32 }* align 8 dereferenceable(16) %rhs) unnamed_addr #1 {
start:
  %_24 = alloca i8, align 1
  %d = alloca { i64, i32 }, align 8
  %_17 = alloca { i64, i64 }, align 8
  %nanos = alloca i32, align 4
  %_4 = alloca { i64, i64 }, align 8
  %secs = alloca i64, align 8
  %1 = bitcast { i64, i32 }* %self to i64*
  %_5 = load i64, i64* %1, align 8
  %2 = bitcast { i64, i32 }* %rhs to i64*
  %_6 = load i64, i64* %2, align 8
; call core::num::<impl i64>::checked_sub
  %3 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$i64$GT$11checked_sub17h37ef48ef0b2598f1E"(i64 %_5, i64 %_6)
  store { i64, i64 } %3, { i64, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { i64, i64 }* %_4 to i64*
  %_7 = load i64, i64* %4, align 8, !range !10
  switch i64 %_7, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %5 = bitcast %"core::option::Option<duration::Duration>"* %0 to i64*
  store i64 0, i64* %5, align 8
  br label %bb20

bb4:                                              ; preds = %bb1
  %6 = bitcast { i64, i64 }* %_4 to %"core::option::Option<i64>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<i64>::Some", %"core::option::Option<i64>::Some"* %6, i32 0, i32 1
  %v = load i64, i64* %7, align 8
  store i64 %v, i64* %secs, align 8
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %_10 = load i32, i32* %8, align 8
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %rhs, i32 0, i32 1
  %_11 = load i32, i32* %9, align 8
  %10 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_10, i32 %_11)
  %_12.0 = extractvalue { i32, i1 } %10, 0
  %_12.1 = extractvalue { i32, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false)
  br i1 %11, label %panic, label %bb5

bb5:                                              ; preds = %bb4
  store i32 %_12.0, i32* %nanos, align 4
  %_14 = load i32, i32* %nanos, align 4
  %_13 = icmp slt i32 %_14, 0
  br i1 %_13, label %bb6, label %bb12

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1630 to %"core::panic::location::Location"*)) #17
  unreachable

bb12:                                             ; preds = %bb11, %bb5
  %_22 = load i64, i64* %secs, align 8
  %_23 = load i32, i32* %nanos, align 4
  %12 = bitcast { i64, i32 }* %d to i64*
  store i64 %_22, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %d, i32 0, i32 1
  store i32 %_23, i32* %13, align 8
; call core::cmp::PartialOrd::lt
  %_25 = call zeroext i1 @_ZN4core3cmp10PartialOrd2lt17h9101fccfd89aa5adE({ i64, i32 }* align 8 dereferenceable(16) %d, { i64, i32 }* align 8 dereferenceable(16) bitcast (<{ [16 x i8] }>* @alloc623 to { i64, i32 }*))
  br label %bb16

bb6:                                              ; preds = %bb5
  %14 = load i32, i32* %nanos, align 4
  %15 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 1000000000)
  %_15.0 = extractvalue { i32, i1 } %15, 0
  %_15.1 = extractvalue { i32, i1 } %15, 1
  %16 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false)
  br i1 %16, label %panic1, label %bb7

bb7:                                              ; preds = %bb6
  store i32 %_15.0, i32* %nanos, align 4
  %_18 = load i64, i64* %secs, align 8
; call core::num::<impl i64>::checked_sub
  %17 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$i64$GT$11checked_sub17h37ef48ef0b2598f1E"(i64 %_18, i64 1)
  store { i64, i64 } %17, { i64, i64 }* %_17, align 8
  br label %bb8

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1632 to %"core::panic::location::Location"*)) #17
  unreachable

bb8:                                              ; preds = %bb7
  %18 = bitcast { i64, i64 }* %_17 to i64*
  %_19 = load i64, i64* %18, align 8, !range !10
  switch i64 %_19, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb9:                                              ; preds = %bb8
  %19 = bitcast %"core::option::Option<duration::Duration>"* %0 to i64*
  store i64 0, i64* %19, align 8
  br label %bb20

bb11:                                             ; preds = %bb8
  %20 = bitcast { i64, i64 }* %_17 to %"core::option::Option<i64>::Some"*
  %21 = getelementptr inbounds %"core::option::Option<i64>::Some", %"core::option::Option<i64>::Some"* %20, i32 0, i32 1
  %v2 = load i64, i64* %21, align 8
  store i64 %v2, i64* %secs, align 8
  br label %bb12

bb20:                                             ; preds = %bb2, %bb19, %bb18, %bb9
  ret void

bb16:                                             ; preds = %bb12
  br i1 %_25, label %bb13, label %bb14

bb14:                                             ; preds = %bb16
; call core::cmp::PartialOrd::gt
  %_28 = call zeroext i1 @_ZN4core3cmp10PartialOrd2gt17h84eabdfdc89aff3cE({ i64, i32 }* align 8 dereferenceable(16) %d, { i64, i32 }* align 8 dereferenceable(16) bitcast (<{ [16 x i8] }>* @alloc635 to { i64, i32 }*))
  br label %bb17

bb13:                                             ; preds = %bb16
  store i8 1, i8* %_24, align 1
  br label %bb15

bb15:                                             ; preds = %bb17, %bb13
  %22 = load i8, i8* %_24, align 1, !range !3
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb18, label %bb19

bb17:                                             ; preds = %bb14
  %24 = zext i1 %_28 to i8
  store i8 %24, i8* %_24, align 1
  br label %bb15

bb19:                                             ; preds = %bb15
  %25 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %d, i32 0, i32 0
  %_31.0 = load i64, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %d, i32 0, i32 1
  %_31.1 = load i32, i32* %26, align 8
  %27 = bitcast %"core::option::Option<duration::Duration>"* %0 to %"core::option::Option<duration::Duration>::Some"*
  %28 = getelementptr inbounds %"core::option::Option<duration::Duration>::Some", %"core::option::Option<duration::Duration>::Some"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 0
  store i64 %_31.0, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 1
  store i32 %_31.1, i32* %30, align 8
  %31 = bitcast %"core::option::Option<duration::Duration>"* %0 to i64*
  store i64 1, i64* %31, align 8
  br label %bb20

bb18:                                             ; preds = %bb15
  %32 = bitcast %"core::option::Option<duration::Duration>"* %0 to i64*
  store i64 0, i64* %32, align 8
  br label %bb20
}

; time::duration::Duration::from_std
; Function Attrs: nonlazybind uwtable
define void @_ZN4time8duration8Duration8from_std17hcb07883bbd9ad90bE(%"core::result::Result<duration::Duration, duration::OutOfRangeError>"* noalias nocapture sret(%"core::result::Result<duration::Duration, duration::OutOfRangeError>") dereferenceable(24) %0, i64 %1, i32 %2) unnamed_addr #1 {
start:
  %d = alloca { i64, i32 }, align 8
  %duration = alloca { i64, i32 }, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %duration, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %duration, i32 0, i32 1
  store i32 %2, i32* %4, align 8
; call core::time::Duration::as_secs
  %_3 = call i64 @_ZN4core4time8Duration7as_secs17habee77b4ea9a1951E({ i64, i32 }* align 8 dereferenceable(16) %duration)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = icmp ugt i64 %_3, 9223372036854775
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
; call core::time::Duration::as_secs
  %_8 = call i64 @_ZN4core4time8Duration7as_secs17habee77b4ea9a1951E({ i64, i32 }* align 8 dereferenceable(16) %duration)
  br label %bb4

bb2:                                              ; preds = %bb1
  %5 = bitcast %"core::result::Result<duration::Duration, duration::OutOfRangeError>"* %0 to i64*
  store i64 1, i64* %5, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7, %bb2
  ret void

bb4:                                              ; preds = %bb3
; call core::time::Duration::subsec_nanos
  %_11 = call i32 @_ZN4core4time8Duration12subsec_nanos17h252c225f64712e7bE({ i64, i32 }* align 8 dereferenceable(16) %duration)
  br label %bb5

bb5:                                              ; preds = %bb4
  %6 = bitcast { i64, i32 }* %d to i64*
  store i64 %_8, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %d, i32 0, i32 1
  store i32 %_11, i32* %7, align 8
; call core::cmp::PartialOrd::gt
  %_13 = call zeroext i1 @_ZN4core3cmp10PartialOrd2gt17h84eabdfdc89aff3cE({ i64, i32 }* align 8 dereferenceable(16) %d, { i64, i32 }* align 8 dereferenceable(16) bitcast (<{ [16 x i8] }>* @alloc635 to { i64, i32 }*))
  br label %bb6

bb6:                                              ; preds = %bb5
  br i1 %_13, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %d, i32 0, i32 0
  %_16.0 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %d, i32 0, i32 1
  %_16.1 = load i32, i32* %9, align 8
  %10 = bitcast %"core::result::Result<duration::Duration, duration::OutOfRangeError>"* %0 to %"core::result::Result<duration::Duration, duration::OutOfRangeError>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<duration::Duration, duration::OutOfRangeError>::Ok", %"core::result::Result<duration::Duration, duration::OutOfRangeError>::Ok"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 0
  store i64 %_16.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 1
  store i32 %_16.1, i32* %13, align 8
  %14 = bitcast %"core::result::Result<duration::Duration, duration::OutOfRangeError>"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb9

bb7:                                              ; preds = %bb6
  %15 = bitcast %"core::result::Result<duration::Duration, duration::OutOfRangeError>"* %0 to i64*
  store i64 1, i64* %15, align 8
  br label %bb9
}

; time::duration::Duration::to_std
; Function Attrs: nonlazybind uwtable
define void @_ZN4time8duration8Duration6to_std17h9f73eb06b3ea1bdfE(%"core::result::Result<core::time::Duration, duration::OutOfRangeError>"* noalias nocapture sret(%"core::result::Result<core::time::Duration, duration::OutOfRangeError>") dereferenceable(24) %0, { i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %1 = bitcast { i64, i32 }* %self to i64*
  %_3 = load i64, i64* %1, align 8
  %_2 = icmp slt i64 %_3, 0
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %2 = bitcast { i64, i32 }* %self to i64*
  %_6 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %_8 = load i32, i32* %3, align 8
; call core::time::Duration::new
  %4 = call { i64, i32 } @_ZN4core4time8Duration3new17hb8d9d91f83c19e1eE(i64 %_6, i32 %_8)
  %_4.0 = extractvalue { i64, i32 } %4, 0
  %_4.1 = extractvalue { i64, i32 } %4, 1
  br label %bb3

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<core::time::Duration, duration::OutOfRangeError>"* %0 to i64*
  store i64 1, i64* %5, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  %6 = bitcast %"core::result::Result<core::time::Duration, duration::OutOfRangeError>"* %0 to %"core::result::Result<core::time::Duration, duration::OutOfRangeError>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<core::time::Duration, duration::OutOfRangeError>::Ok", %"core::result::Result<core::time::Duration, duration::OutOfRangeError>::Ok"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 0
  store i64 %_4.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 1
  store i32 %_4.1, i32* %9, align 8
  %10 = bitcast %"core::result::Result<core::time::Duration, duration::OutOfRangeError>"* %0 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4
}

; <time::duration::Duration as core::ops::arith::Neg>::neg
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..ops..arith..Neg$GT$3neg17h207c21cf0e2f37e0E"(i64 %self.0, i32 %self.1) unnamed_addr #0 {
start:
  %0 = alloca { i64, i32 }, align 8
  %1 = icmp eq i32 %self.1, 0
  br i1 %1, label %bb1, label %bb3

bb1:                                              ; preds = %start
  %_5 = icmp eq i64 %self.0, -9223372036854775808
  %2 = call i1 @llvm.expect.i1(i1 %_5, i1 false)
  br i1 %2, label %panic3, label %bb2

bb3:                                              ; preds = %start
  %_9 = icmp eq i64 %self.0, -9223372036854775808
  %3 = call i1 @llvm.expect.i1(i1 %_9, i1 false)
  br i1 %3, label %panic, label %bb4

bb4:                                              ; preds = %bb3
  %_7 = sub i64 0, %self.0
  %4 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_7, i64 1)
  %_10.0 = extractvalue { i64, i1 } %4, 0
  %_10.1 = extractvalue { i64, i1 } %4, 1
  %5 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false)
  br i1 %5, label %panic1, label %bb5

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.c to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1634 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb4
  %6 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 1000000000, i32 %self.1)
  %_13.0 = extractvalue { i32, i1 } %6, 0
  %_13.1 = extractvalue { i32, i1 } %6, 1
  %7 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false)
  br i1 %7, label %panic2, label %bb6

panic1:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1634 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb5
  %8 = bitcast { i64, i32 }* %0 to i64*
  store i64 %_10.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %_13.0, i32* %9, align 8
  br label %bb7

panic2:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1636 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %bb2, %bb6
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i64, i32 } undef, i64 %11, 0
  %15 = insertvalue { i64, i32 } %14, i32 %13, 1
  ret { i64, i32 } %15

bb2:                                              ; preds = %bb1
  %_3 = sub i64 0, %self.0
  %16 = bitcast { i64, i32 }* %0 to i64*
  store i64 %_3, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 0, i32* %17, align 8
  br label %bb7

panic3:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.c to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1638 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <time::duration::Duration as core::ops::arith::Add>::add
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..ops..arith..Add$GT$3add17h4d240b1e003f7280E"(i64 %self.0, i32 %self.1, i64 %rhs.0, i32 %rhs.1) unnamed_addr #1 {
start:
  %nanos = alloca i32, align 4
  %secs = alloca i64, align 8
  %0 = alloca { i64, i32 }, align 8
  %1 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %self.0, i64 %rhs.0)
  %_6.0 = extractvalue { i64, i1 } %1, 0
  %_6.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false)
  br i1 %2, label %panic, label %bb1

bb1:                                              ; preds = %start
  store i64 %_6.0, i64* %secs, align 8
  %3 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %self.1, i32 %rhs.1)
  %_10.0 = extractvalue { i32, i1 } %3, 0
  %_10.1 = extractvalue { i32, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false)
  br i1 %4, label %panic1, label %bb2

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1640 to %"core::panic::location::Location"*)) #17
  unreachable

bb2:                                              ; preds = %bb1
  store i32 %_10.0, i32* %nanos, align 4
  %_12 = load i32, i32* %nanos, align 4
  %_11 = icmp sge i32 %_12, 1000000000
  br i1 %_11, label %bb3, label %bb6

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1642 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb5, %bb2
  %_15 = load i64, i64* %secs, align 8
  %_16 = load i32, i32* %nanos, align 4
  %5 = bitcast { i64, i32 }* %0 to i64*
  store i64 %_15, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %_16, i32* %6, align 8
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i64, i32 } undef, i64 %8, 0
  %12 = insertvalue { i64, i32 } %11, i32 %10, 1
  ret { i64, i32 } %12

bb3:                                              ; preds = %bb2
  %13 = load i32, i32* %nanos, align 4
  %14 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %13, i32 1000000000)
  %_13.0 = extractvalue { i32, i1 } %14, 0
  %_13.1 = extractvalue { i32, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false)
  br i1 %15, label %panic2, label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_13.0, i32* %nanos, align 4
  %16 = load i64, i64* %secs, align 8
  %17 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %16, i64 1)
  %_14.0 = extractvalue { i64, i1 } %17, 0
  %_14.1 = extractvalue { i64, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false)
  br i1 %18, label %panic3, label %bb5

panic2:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1644 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb4
  store i64 %_14.0, i64* %secs, align 8
  br label %bb6

panic3:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1646 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <time::duration::Duration as core::ops::arith::Sub>::sub
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..ops..arith..Sub$GT$3sub17h9cf4ea57258f7c39E"(i64 %self.0, i32 %self.1, i64 %rhs.0, i32 %rhs.1) unnamed_addr #1 {
start:
  %nanos = alloca i32, align 4
  %secs = alloca i64, align 8
  %0 = alloca { i64, i32 }, align 8
  %1 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %self.0, i64 %rhs.0)
  %_6.0 = extractvalue { i64, i1 } %1, 0
  %_6.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false)
  br i1 %2, label %panic, label %bb1

bb1:                                              ; preds = %start
  store i64 %_6.0, i64* %secs, align 8
  %3 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %self.1, i32 %rhs.1)
  %_10.0 = extractvalue { i32, i1 } %3, 0
  %_10.1 = extractvalue { i32, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false)
  br i1 %4, label %panic1, label %bb2

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1648 to %"core::panic::location::Location"*)) #17
  unreachable

bb2:                                              ; preds = %bb1
  store i32 %_10.0, i32* %nanos, align 4
  %_12 = load i32, i32* %nanos, align 4
  %_11 = icmp slt i32 %_12, 0
  br i1 %_11, label %bb3, label %bb6

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1650 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb5, %bb2
  %_15 = load i64, i64* %secs, align 8
  %_16 = load i32, i32* %nanos, align 4
  %5 = bitcast { i64, i32 }* %0 to i64*
  store i64 %_15, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %_16, i32* %6, align 8
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i64, i32 } undef, i64 %8, 0
  %12 = insertvalue { i64, i32 } %11, i32 %10, 1
  ret { i64, i32 } %12

bb3:                                              ; preds = %bb2
  %13 = load i32, i32* %nanos, align 4
  %14 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 1000000000)
  %_13.0 = extractvalue { i32, i1 } %14, 0
  %_13.1 = extractvalue { i32, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false)
  br i1 %15, label %panic2, label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_13.0, i32* %nanos, align 4
  %16 = load i64, i64* %secs, align 8
  %17 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %16, i64 1)
  %_14.0 = extractvalue { i64, i1 } %17, 0
  %_14.1 = extractvalue { i64, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false)
  br i1 %18, label %panic3, label %bb5

panic2:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1652 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb4
  store i64 %_14.0, i64* %secs, align 8
  br label %bb6

panic3:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1654 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <time::duration::Duration as core::ops::arith::Mul<i32>>::mul
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @"_ZN77_$LT$time..duration..Duration$u20$as$u20$core..ops..arith..Mul$LT$i32$GT$$GT$3mul17h4b6c63e36c1e70deE"(i64 %self.0, i32 %self.1, i32 %rhs) unnamed_addr #1 {
start:
  %0 = alloca { i64, i32 }, align 8
  %_4 = sext i32 %self.1 to i64
  %_6 = sext i32 %rhs to i64
  %1 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_4, i64 %_6)
  %_8.0 = extractvalue { i64, i1 } %1, 0
  %_8.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false)
  br i1 %2, label %panic, label %bb1

bb1:                                              ; preds = %start
; call time::duration::div_mod_floor_64
  %3 = call { i64, i64 } @_ZN4time8duration16div_mod_floor_6417h3207723aac8dd4beE(i64 %_8.0, i64 1000000000)
  %_11.0 = extractvalue { i64, i64 } %3, 0
  %_11.1 = extractvalue { i64, i64 } %3, 1
  br label %bb2

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1656 to %"core::panic::location::Location"*)) #17
  unreachable

bb2:                                              ; preds = %bb1
  %_17 = sext i32 %rhs to i64
  %4 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %self.0, i64 %_17)
  %_19.0 = extractvalue { i64, i1 } %4, 0
  %_19.1 = extractvalue { i64, i1 } %4, 1
  %5 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false)
  br i1 %5, label %panic1, label %bb3

bb3:                                              ; preds = %bb2
  %6 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_19.0, i64 %_11.0)
  %_21.0 = extractvalue { i64, i1 } %6, 0
  %_21.1 = extractvalue { i64, i1 } %6, 1
  %7 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false)
  br i1 %7, label %panic2, label %bb4

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1658 to %"core::panic::location::Location"*)) #17
  unreachable

bb4:                                              ; preds = %bb3
  %_23 = trunc i64 %_11.1 to i32
  %8 = bitcast { i64, i32 }* %0 to i64*
  store i64 %_21.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %_23, i32* %9, align 8
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i64, i32 } undef, i64 %11, 0
  %15 = insertvalue { i64, i32 } %14, i32 %13, 1
  ret { i64, i32 } %15

panic2:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1658 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <time::duration::Duration as core::ops::arith::Div<i32>>::div
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @"_ZN77_$LT$time..duration..Duration$u20$as$u20$core..ops..arith..Div$LT$i32$GT$$GT$3div17hf33d66b45fa04b69E"(i64 %self.0, i32 %self.1, i32 %rhs) unnamed_addr #1 {
start:
  %nanos = alloca i32, align 4
  %secs = alloca i64, align 8
  %0 = alloca { i64, i32 }, align 8
  %_5 = sext i32 %rhs to i64
  %_7 = icmp eq i64 %_5, 0
  %1 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  %_8 = icmp eq i64 %_5, -1
  %_9 = icmp eq i64 %self.0, -9223372036854775808
  %_10 = and i1 %_8, %_9
  %2 = call i1 @llvm.expect.i1(i1 %_10, i1 false)
  br i1 %2, label %panic1, label %bb2

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.5 to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1660 to %"core::panic::location::Location"*)) #17
  unreachable

bb2:                                              ; preds = %bb1
  %3 = sdiv i64 %self.0, %_5
  store i64 %3, i64* %secs, align 8
  %_14 = load i64, i64* %secs, align 8
  %_15 = sext i32 %rhs to i64
  %4 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_14, i64 %_15)
  %_17.0 = extractvalue { i64, i1 } %4, 0
  %_17.1 = extractvalue { i64, i1 } %4, 1
  %5 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false)
  br i1 %5, label %panic2, label %bb3

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1660 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %bb2
  %6 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %self.0, i64 %_17.0)
  %_18.0 = extractvalue { i64, i1 } %6, 0
  %_18.1 = extractvalue { i64, i1 } %6, 1
  %7 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false)
  br i1 %7, label %panic3, label %bb4

panic2:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1662 to %"core::panic::location::Location"*)) #17
  unreachable

bb4:                                              ; preds = %bb3
  %8 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_18.0, i64 1000000000)
  %_23.0 = extractvalue { i64, i1 } %8, 0
  %_23.1 = extractvalue { i64, i1 } %8, 1
  %9 = call i1 @llvm.expect.i1(i1 %_23.1, i1 false)
  br i1 %9, label %panic4, label %bb5

panic3:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1664 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb4
  %_24 = sext i32 %rhs to i64
  %_26 = icmp eq i64 %_24, 0
  %10 = call i1 @llvm.expect.i1(i1 %_26, i1 false)
  br i1 %10, label %panic5, label %bb6

panic4:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1666 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb5
  %_27 = icmp eq i64 %_24, -1
  %_28 = icmp eq i64 %_23.0, -9223372036854775808
  %_29 = and i1 %_27, %_28
  %11 = call i1 @llvm.expect.i1(i1 %_29, i1 false)
  br i1 %11, label %panic6, label %bb7

panic5:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.5 to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1666 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %bb6
  %extra_nanos = sdiv i64 %_23.0, %_24
  %_34 = icmp eq i32 %rhs, 0
  %12 = call i1 @llvm.expect.i1(i1 %_34, i1 false)
  br i1 %12, label %panic7, label %bb8

panic6:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1666 to %"core::panic::location::Location"*)) #17
  unreachable

bb8:                                              ; preds = %bb7
  %_35 = icmp eq i32 %rhs, -1
  %_36 = icmp eq i32 %self.1, -2147483648
  %_37 = and i1 %_35, %_36
  %13 = call i1 @llvm.expect.i1(i1 %_37, i1 false)
  br i1 %13, label %panic8, label %bb9

panic7:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.5 to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1668 to %"core::panic::location::Location"*)) #17
  unreachable

bb9:                                              ; preds = %bb8
  %_31 = sdiv i32 %self.1, %rhs
  %_38 = trunc i64 %extra_nanos to i32
  %14 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_31, i32 %_38)
  %_40.0 = extractvalue { i32, i1 } %14, 0
  %_40.1 = extractvalue { i32, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_40.1, i1 false)
  br i1 %15, label %panic9, label %bb10

panic8:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1668 to %"core::panic::location::Location"*)) #17
  unreachable

bb10:                                             ; preds = %bb9
  store i32 %_40.0, i32* %nanos, align 4
  %_42 = load i32, i32* %nanos, align 4
  %_41 = icmp sge i32 %_42, 1000000000
  br i1 %_41, label %bb11, label %bb14

panic9:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1668 to %"core::panic::location::Location"*)) #17
  unreachable

bb14:                                             ; preds = %bb13, %bb10
  %_46 = load i32, i32* %nanos, align 4
  %_45 = icmp slt i32 %_46, 0
  br i1 %_45, label %bb15, label %bb18

bb11:                                             ; preds = %bb10
  %16 = load i32, i32* %nanos, align 4
  %17 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %16, i32 1000000000)
  %_43.0 = extractvalue { i32, i1 } %17, 0
  %_43.1 = extractvalue { i32, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_43.1, i1 false)
  br i1 %18, label %panic10, label %bb12

bb12:                                             ; preds = %bb11
  store i32 %_43.0, i32* %nanos, align 4
  %19 = load i64, i64* %secs, align 8
  %20 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %19, i64 1)
  %_44.0 = extractvalue { i64, i1 } %20, 0
  %_44.1 = extractvalue { i64, i1 } %20, 1
  %21 = call i1 @llvm.expect.i1(i1 %_44.1, i1 false)
  br i1 %21, label %panic11, label %bb13

panic10:                                          ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1670 to %"core::panic::location::Location"*)) #17
  unreachable

bb13:                                             ; preds = %bb12
  store i64 %_44.0, i64* %secs, align 8
  br label %bb14

panic11:                                          ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1672 to %"core::panic::location::Location"*)) #17
  unreachable

bb18:                                             ; preds = %bb17, %bb14
  %_49 = load i64, i64* %secs, align 8
  %_50 = load i32, i32* %nanos, align 4
  %22 = bitcast { i64, i32 }* %0 to i64*
  store i64 %_49, i64* %22, align 8
  %23 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %_50, i32* %23, align 8
  %24 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i64, i32 } undef, i64 %25, 0
  %29 = insertvalue { i64, i32 } %28, i32 %27, 1
  ret { i64, i32 } %29

bb15:                                             ; preds = %bb14
  %30 = load i32, i32* %nanos, align 4
  %31 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 1000000000)
  %_47.0 = extractvalue { i32, i1 } %31, 0
  %_47.1 = extractvalue { i32, i1 } %31, 1
  %32 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false)
  br i1 %32, label %panic12, label %bb16

bb16:                                             ; preds = %bb15
  store i32 %_47.0, i32* %nanos, align 4
  %33 = load i64, i64* %secs, align 8
  %34 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %33, i64 1)
  %_48.0 = extractvalue { i64, i1 } %34, 0
  %_48.1 = extractvalue { i64, i1 } %34, 1
  %35 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false)
  br i1 %35, label %panic13, label %bb17

panic12:                                          ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1674 to %"core::panic::location::Location"*)) #17
  unreachable

bb17:                                             ; preds = %bb16
  store i64 %_48.0, i64* %secs, align 8
  br label %bb18

panic13:                                          ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1676 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <time::duration::Duration as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN63_$LT$time..duration..Duration$u20$as$u20$core..fmt..Display$GT$3fmt17h7e23b01be248957cE"({ i64, i32 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_186 = alloca { i64*, i32* }, align 8
  %_185 = alloca [2 x { i8*, i64* }], align 8
  %_178 = alloca %"core::fmt::Arguments", align 8
  %_175 = alloca i8, align 1
  %_155 = alloca i32, align 4
  %_152 = alloca { i64*, i32* }, align 8
  %_151 = alloca [2 x { i8*, i64* }], align 8
  %_144 = alloca %"core::fmt::Arguments", align 8
  %_141 = alloca i8, align 1
  %_116 = alloca i32, align 4
  %_113 = alloca { i64*, i32* }, align 8
  %_112 = alloca [2 x { i8*, i64* }], align 8
  %_105 = alloca %"core::fmt::Arguments", align 8
  %_102 = alloca i8, align 1
  %_87 = alloca i64*, align 8
  %_86 = alloca [1 x { i8*, i64* }], align 8
  %_79 = alloca %"core::fmt::Arguments", align 8
  %_76 = alloca i8, align 1
  %_64 = alloca i64*, align 8
  %_63 = alloca [1 x { i8*, i64* }], align 8
  %_56 = alloca %"core::fmt::Arguments", align 8
  %_53 = alloca i8, align 1
  %_42 = alloca i64*, align 8
  %_41 = alloca [1 x { i8*, i64* }], align 8
  %_34 = alloca %"core::fmt::Arguments", align 8
  %_31 = alloca i8, align 1
  %_25 = alloca i8, align 1
  %hastime = alloca i8, align 1
  %secs = alloca i64, align 8
  %days = alloca i64, align 8
  %_5 = alloca { { i64, i32 }, { [0 x i8]*, i64 } }, align 8
  %sign = alloca { [0 x i8]*, i64 }, align 8
  %abs = alloca { i64, i32 }, align 8
  %0 = alloca i8, align 1
  %1 = bitcast { i64, i32 }* %self to i64*
  %_7 = load i64, i64* %1, align 8
  %_6 = icmp slt i64 %_7, 0
  br i1 %_6, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  %_10.0 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %_10.1 = load i32, i32* %3, align 8
  %4 = bitcast { { i64, i32 }, { [0 x i8]*, i64 } }* %_5 to { i64, i32 }*
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 0
  store i64 %_10.0, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  store i32 %_10.1, i32* %6, align 8
  %7 = getelementptr inbounds { { i64, i32 }, { [0 x i8]*, i64 } }, { { i64, i32 }, { [0 x i8]*, i64 } }* %_5, i32 0, i32 1
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %7, i32 0, i32 0
  store [0 x i8]* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc1137, i32 0, i32 0), [0 x i8]** %8, align 8
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %7, i32 0, i32 1
  store i64 0, i64* %9, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 0
  %_9.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  %_9.1 = load i32, i32* %11, align 8
; call <time::duration::Duration as core::ops::arith::Neg>::neg
  %12 = call { i64, i32 } @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..ops..arith..Neg$GT$3neg17h207c21cf0e2f37e0E"(i64 %_9.0, i32 %_9.1)
  %_8.0 = extractvalue { i64, i32 } %12, 0
  %_8.1 = extractvalue { i64, i32 } %12, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %13 = bitcast { { i64, i32 }, { [0 x i8]*, i64 } }* %_5 to { i64, i32 }*
  %14 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 0
  store i64 %_8.0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 1
  store i32 %_8.1, i32* %15, align 8
  %16 = getelementptr inbounds { { i64, i32 }, { [0 x i8]*, i64 } }, { { i64, i32 }, { [0 x i8]*, i64 } }* %_5, i32 0, i32 1
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [1 x i8] }>* @alloc1677 to [0 x i8]*), [0 x i8]** %17, align 8
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1
  store i64 1, i64* %18, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %19 = bitcast { { i64, i32 }, { [0 x i8]*, i64 } }* %_5 to { i64, i32 }*
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %abs, i32 0, i32 0
  store i64 %21, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %abs, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  %26 = getelementptr inbounds { { i64, i32 }, { [0 x i8]*, i64 } }, { { i64, i32 }, { [0 x i8]*, i64 } }* %_5, i32 0, i32 1
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0
  %28 = load [0 x i8]*, [0 x i8]** %27, align 8, !nonnull !4
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sign, i32 0, i32 0
  store [0 x i8]* %28, [0 x i8]** %31, align 8
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sign, i32 0, i32 1
  store i64 %30, i64* %32, align 8
  %33 = bitcast { i64, i32 }* %abs to i64*
  %_12 = load i64, i64* %33, align 8
  %_14 = icmp eq i64 %_12, -9223372036854775808
  %_15 = and i1 false, %_14
  %34 = call i1 @llvm.expect.i1(i1 %_15, i1 false)
  br i1 %34, label %panic, label %bb5

bb5:                                              ; preds = %bb4
  %35 = sdiv i64 %_12, 86400
  store i64 %35, i64* %days, align 8
  %36 = bitcast { i64, i32 }* %abs to i64*
  %_17 = load i64, i64* %36, align 8
  %_19 = load i64, i64* %days, align 8
  %37 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_19, i64 86400)
  %_20.0 = extractvalue { i64, i1 } %37, 0
  %_20.1 = extractvalue { i64, i1 } %37, 1
  %38 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false)
  br i1 %38, label %panic1, label %bb6

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1680 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb5
  %39 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_17, i64 %_20.0)
  %_21.0 = extractvalue { i64, i1 } %39, 0
  %_21.1 = extractvalue { i64, i1 } %39, 1
  %40 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false)
  br i1 %40, label %panic2, label %bb7

panic1:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1682 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %bb6
  store i64 %_21.0, i64* %secs, align 8
  %_23 = load i64, i64* %days, align 8
  %hasdate = icmp ne i64 %_23, 0
  %_26 = load i64, i64* %secs, align 8
  %41 = icmp eq i64 %_26, 0
  br i1 %41, label %bb12, label %bb11

panic2:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1684 to %"core::panic::location::Location"*)) #17
  unreachable

bb12:                                             ; preds = %bb7
  %42 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %abs, i32 0, i32 1
  %_28 = load i32, i32* %42, align 8
  %_27 = icmp ne i32 %_28, 0
  %43 = zext i1 %_27 to i8
  store i8 %43, i8* %_25, align 1
  br label %bb13

bb11:                                             ; preds = %bb7
  store i8 1, i8* %_25, align 1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11
  %44 = load i8, i8* %_25, align 1, !range !3
  %45 = trunc i8 %44 to i1
  br i1 %45, label %bb8, label %bb9

bb9:                                              ; preds = %bb13
  %_29 = xor i1 %hasdate, true
  %46 = zext i1 %_29 to i8
  store i8 %46, i8* %hastime, align 1
  br label %bb10

bb8:                                              ; preds = %bb13
  store i8 1, i8* %hastime, align 1
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %47 = bitcast i64** %_42 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %sign, { [0 x i8]*, i64 }** %47, align 8
  %_args = load i64*, i64** %_42, align 8, !nonnull !4
  %_46 = bitcast i64* %_args to { [0 x i8]*, i64 }*
; call core::fmt::ArgumentV1::new
  %48 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17ha52a6fb3d74479f1E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_46, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h18a698e2acc26c61E")
  %_45.0 = extractvalue { i8*, i64* } %48, 0
  %_45.1 = extractvalue { i8*, i64* } %48, 1
  br label %bb14

bb14:                                             ; preds = %bb10
  %49 = bitcast [1 x { i8*, i64* }]* %_41 to { i8*, i64* }*
  %50 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %49, i32 0, i32 0
  store i8* %_45.0, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %49, i32 0, i32 1
  store i64* %_45.1, i64** %51, align 8
  %_38.0 = bitcast [1 x { i8*, i64* }]* %_41 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_34, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc667 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_38.0, i64 1)
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::fmt::Formatter::write_fmt
  %_32 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_34)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %52 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_32)
  %53 = zext i1 %52 to i8
  store i8 %53, i8* %_31, align 1
  br label %bb17

bb17:                                             ; preds = %bb16
  %54 = load i8, i8* %_31, align 1, !range !3
  %55 = trunc i8 %54 to i1
  %_48 = zext i1 %55 to i64
  switch i64 %_48, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  br i1 %hasdate, label %bb21, label %bb28

bb20:                                             ; preds = %bb17
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %56 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1686 to %"core::panic::location::Location"*))
  %57 = zext i1 %56 to i8
  store i8 %57, i8* %0, align 1
  br label %bb71

bb71:                                             ; preds = %bb70, %bb36, %bb48, %bb60, %bb69, %bb27, %bb20
  %58 = load i8, i8* %0, align 1, !range !3
  %59 = trunc i8 %58 to i1
  ret i1 %59

bb28:                                             ; preds = %bb25, %bb18
  %60 = load i8, i8* %hastime, align 1, !range !3
  %_74 = trunc i8 %60 to i1
  br i1 %_74, label %bb29, label %bb70

bb21:                                             ; preds = %bb18
  store i64* %days, i64** %_64, align 8
  %_args3 = load i64*, i64** %_64, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %61 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0a33196693ac891E(i64* align 8 dereferenceable(8) %_args3, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h5c41694b747c6f84E")
  %_67.0 = extractvalue { i8*, i64* } %61, 0
  %_67.1 = extractvalue { i8*, i64* } %61, 1
  br label %bb22

bb22:                                             ; preds = %bb21
  %62 = bitcast [1 x { i8*, i64* }]* %_63 to { i8*, i64* }*
  %63 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %62, i32 0, i32 0
  store i8* %_67.0, i8** %63, align 8
  %64 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %62, i32 0, i32 1
  store i64* %_67.1, i64** %64, align 8
  %_60.0 = bitcast [1 x { i8*, i64* }]* %_63 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_56, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc673 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_60.0, i64 1)
  br label %bb23

bb23:                                             ; preds = %bb22
; call core::fmt::Formatter::write_fmt
  %_54 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_56)
  br label %bb24

bb24:                                             ; preds = %bb23
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %65 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_54)
  %66 = zext i1 %65 to i8
  store i8 %66, i8* %_53, align 1
  br label %bb25

bb25:                                             ; preds = %bb24
  %67 = load i8, i8* %_53, align 1, !range !3
  %68 = trunc i8 %67 to i1
  %_70 = zext i1 %68 to i64
  switch i64 %_70, label %bb26 [
    i64 0, label %bb28
    i64 1, label %bb27
  ]

bb26:                                             ; preds = %bb25
  unreachable

bb27:                                             ; preds = %bb25
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %69 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1688 to %"core::panic::location::Location"*))
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %0, align 1
  br label %bb71

bb70:                                             ; preds = %bb34, %bb46, %bb58, %bb67, %bb28
  store i8 0, i8* %0, align 1
  br label %bb71

bb29:                                             ; preds = %bb28
  %71 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %abs, i32 0, i32 1
  %_75 = load i32, i32* %71, align 8
  %72 = icmp eq i32 %_75, 0
  br i1 %72, label %bb30, label %bb37

bb30:                                             ; preds = %bb29
  store i64* %secs, i64** %_87, align 8
  %_args12 = load i64*, i64** %_87, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %73 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0a33196693ac891E(i64* align 8 dereferenceable(8) %_args12, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h5c41694b747c6f84E")
  %_90.0 = extractvalue { i8*, i64* } %73, 0
  %_90.1 = extractvalue { i8*, i64* } %73, 1
  br label %bb31

bb37:                                             ; preds = %bb29
  %74 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %abs, i32 0, i32 1
  %_98 = load i32, i32* %74, align 8
  %_100 = icmp eq i32 %_98, -2147483648
  %_101 = and i1 false, %_100
  %75 = call i1 @llvm.expect.i1(i1 %_101, i1 false)
  br i1 %75, label %panic4, label %bb38

bb38:                                             ; preds = %bb37
  %_97 = srem i32 %_98, 1000000
  %76 = icmp eq i32 %_97, 0
  br i1 %76, label %bb39, label %bb49

panic4:                                           ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([48 x i8]* @str.a to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1690 to %"core::panic::location::Location"*)) #17
  unreachable

bb39:                                             ; preds = %bb38
  %77 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %abs, i32 0, i32 1
  %_117 = load i32, i32* %77, align 8
  %_119 = icmp eq i32 %_117, -2147483648
  %_120 = and i1 false, %_119
  %78 = call i1 @llvm.expect.i1(i1 %_120, i1 false)
  br i1 %78, label %panic9, label %bb40

bb49:                                             ; preds = %bb38
  %79 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %abs, i32 0, i32 1
  %_137 = load i32, i32* %79, align 8
  %_139 = icmp eq i32 %_137, -2147483648
  %_140 = and i1 false, %_139
  %80 = call i1 @llvm.expect.i1(i1 %_140, i1 false)
  br i1 %80, label %panic5, label %bb50

bb50:                                             ; preds = %bb49
  %_136 = srem i32 %_137, 1000
  %81 = icmp eq i32 %_136, 0
  br i1 %81, label %bb51, label %bb61

panic5:                                           ; preds = %bb49
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([48 x i8]* @str.a to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1692 to %"core::panic::location::Location"*)) #17
  unreachable

bb51:                                             ; preds = %bb50
  %82 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %abs, i32 0, i32 1
  %_156 = load i32, i32* %82, align 8
  %_158 = icmp eq i32 %_156, -2147483648
  %_159 = and i1 false, %_158
  %83 = call i1 @llvm.expect.i1(i1 %_159, i1 false)
  br i1 %83, label %panic6, label %bb52

bb61:                                             ; preds = %bb50
  %_188 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %abs, i32 0, i32 1
  %84 = bitcast { i64*, i32* }* %_186 to i64**
  store i64* %secs, i64** %84, align 8
  %85 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_186, i32 0, i32 1
  store i32* %_188, i32** %85, align 8
  %86 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_186, i32 0, i32 0
  %_args.0 = load i64*, i64** %86, align 8, !nonnull !4
  %87 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_186, i32 0, i32 1
  %_args.1 = load i32*, i32** %87, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %88 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0a33196693ac891E(i64* align 8 dereferenceable(8) %_args.0, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h5c41694b747c6f84E")
  %_190.0 = extractvalue { i8*, i64* } %88, 0
  %_190.1 = extractvalue { i8*, i64* } %88, 1
  br label %bb62

bb62:                                             ; preds = %bb61
; call core::fmt::ArgumentV1::new
  %89 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args.1, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_193.0 = extractvalue { i8*, i64* } %89, 0
  %_193.1 = extractvalue { i8*, i64* } %89, 1
  br label %bb63

bb63:                                             ; preds = %bb62
  %90 = bitcast [2 x { i8*, i64* }]* %_185 to { i8*, i64* }*
  %91 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %90, i32 0, i32 0
  store i8* %_190.0, i8** %91, align 8
  %92 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %90, i32 0, i32 1
  store i64* %_190.1, i64** %92, align 8
  %93 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_185, i32 0, i32 1
  %94 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %93, i32 0, i32 0
  store i8* %_193.0, i8** %94, align 8
  %95 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %93, i32 0, i32 1
  store i64* %_193.1, i64** %95, align 8
  %_182.0 = bitcast [2 x { i8*, i64* }]* %_185 to [0 x { i8*, i64* }]*
  br label %bb64

bb64:                                             ; preds = %bb63
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_178, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc683 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_182.0, i64 2, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [112 x i8] }>* @alloc737 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 2)
  br label %bb65

bb65:                                             ; preds = %bb64
; call core::fmt::Formatter::write_fmt
  %_176 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_178)
  br label %bb66

bb66:                                             ; preds = %bb65
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %96 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_176)
  %97 = zext i1 %96 to i8
  store i8 %97, i8* %_175, align 1
  br label %bb67

bb67:                                             ; preds = %bb66
  %98 = load i8, i8* %_175, align 1, !range !3
  %99 = trunc i8 %98 to i1
  %_200 = zext i1 %99 to i64
  switch i64 %_200, label %bb68 [
    i64 0, label %bb70
    i64 1, label %bb69
  ]

bb68:                                             ; preds = %bb67
  unreachable

bb69:                                             ; preds = %bb67
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %100 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1694 to %"core::panic::location::Location"*))
  %101 = zext i1 %100 to i8
  store i8 %101, i8* %0, align 1
  br label %bb71

bb52:                                             ; preds = %bb51
  %102 = sdiv i32 %_156, 1000
  store i32 %102, i32* %_155, align 4
  %103 = bitcast { i64*, i32* }* %_152 to i64**
  store i64* %secs, i64** %103, align 8
  %104 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_152, i32 0, i32 1
  store i32* %_155, i32** %104, align 8
  %105 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_152, i32 0, i32 0
  %_args.07 = load i64*, i64** %105, align 8, !nonnull !4
  %106 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_152, i32 0, i32 1
  %_args.18 = load i32*, i32** %106, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %107 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0a33196693ac891E(i64* align 8 dereferenceable(8) %_args.07, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h5c41694b747c6f84E")
  %_161.0 = extractvalue { i8*, i64* } %107, 0
  %_161.1 = extractvalue { i8*, i64* } %107, 1
  br label %bb53

panic6:                                           ; preds = %bb51
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1696 to %"core::panic::location::Location"*)) #17
  unreachable

bb53:                                             ; preds = %bb52
; call core::fmt::ArgumentV1::new
  %108 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args.18, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_164.0 = extractvalue { i8*, i64* } %108, 0
  %_164.1 = extractvalue { i8*, i64* } %108, 1
  br label %bb54

bb54:                                             ; preds = %bb53
  %109 = bitcast [2 x { i8*, i64* }]* %_151 to { i8*, i64* }*
  %110 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %109, i32 0, i32 0
  store i8* %_161.0, i8** %110, align 8
  %111 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %109, i32 0, i32 1
  store i64* %_161.1, i64** %111, align 8
  %112 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_151, i32 0, i32 1
  %113 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %112, i32 0, i32 0
  store i8* %_164.0, i8** %113, align 8
  %114 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %112, i32 0, i32 1
  store i64* %_164.1, i64** %114, align 8
  %_148.0 = bitcast [2 x { i8*, i64* }]* %_151 to [0 x { i8*, i64* }]*
  br label %bb55

bb55:                                             ; preds = %bb54
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_144, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc683 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_148.0, i64 2, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [112 x i8] }>* @alloc718 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 2)
  br label %bb56

bb56:                                             ; preds = %bb55
; call core::fmt::Formatter::write_fmt
  %_142 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_144)
  br label %bb57

bb57:                                             ; preds = %bb56
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %115 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_142)
  %116 = zext i1 %115 to i8
  store i8 %116, i8* %_141, align 1
  br label %bb58

bb58:                                             ; preds = %bb57
  %117 = load i8, i8* %_141, align 1, !range !3
  %118 = trunc i8 %117 to i1
  %_171 = zext i1 %118 to i64
  switch i64 %_171, label %bb59 [
    i64 0, label %bb70
    i64 1, label %bb60
  ]

bb59:                                             ; preds = %bb58
  unreachable

bb60:                                             ; preds = %bb58
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %119 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1698 to %"core::panic::location::Location"*))
  %120 = zext i1 %119 to i8
  store i8 %120, i8* %0, align 1
  br label %bb71

bb40:                                             ; preds = %bb39
  %121 = sdiv i32 %_117, 1000000
  store i32 %121, i32* %_116, align 4
  %122 = bitcast { i64*, i32* }* %_113 to i64**
  store i64* %secs, i64** %122, align 8
  %123 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_113, i32 0, i32 1
  store i32* %_116, i32** %123, align 8
  %124 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_113, i32 0, i32 0
  %_args.010 = load i64*, i64** %124, align 8, !nonnull !4
  %125 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_113, i32 0, i32 1
  %_args.111 = load i32*, i32** %125, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %126 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0a33196693ac891E(i64* align 8 dereferenceable(8) %_args.010, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h5c41694b747c6f84E")
  %_122.0 = extractvalue { i8*, i64* } %126, 0
  %_122.1 = extractvalue { i8*, i64* } %126, 1
  br label %bb41

panic9:                                           ; preds = %bb39
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1700 to %"core::panic::location::Location"*)) #17
  unreachable

bb41:                                             ; preds = %bb40
; call core::fmt::ArgumentV1::new
  %127 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0f4241211506ef5E(i32* align 4 dereferenceable(4) %_args.111, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE")
  %_125.0 = extractvalue { i8*, i64* } %127, 0
  %_125.1 = extractvalue { i8*, i64* } %127, 1
  br label %bb42

bb42:                                             ; preds = %bb41
  %128 = bitcast [2 x { i8*, i64* }]* %_112 to { i8*, i64* }*
  %129 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %128, i32 0, i32 0
  store i8* %_122.0, i8** %129, align 8
  %130 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %128, i32 0, i32 1
  store i64* %_122.1, i64** %130, align 8
  %131 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_112, i32 0, i32 1
  %132 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %131, i32 0, i32 0
  store i8* %_125.0, i8** %132, align 8
  %133 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %131, i32 0, i32 1
  store i64* %_125.1, i64** %133, align 8
  %_109.0 = bitcast [2 x { i8*, i64* }]* %_112 to [0 x { i8*, i64* }]*
  br label %bb43

bb43:                                             ; preds = %bb42
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hae8aa0e6158826f6E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_105, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc683 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_109.0, i64 2, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [112 x i8] }>* @alloc699 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 2)
  br label %bb44

bb44:                                             ; preds = %bb43
; call core::fmt::Formatter::write_fmt
  %_103 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_105)
  br label %bb45

bb45:                                             ; preds = %bb44
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %134 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_103)
  %135 = zext i1 %134 to i8
  store i8 %135, i8* %_102, align 1
  br label %bb46

bb46:                                             ; preds = %bb45
  %136 = load i8, i8* %_102, align 1, !range !3
  %137 = trunc i8 %136 to i1
  %_132 = zext i1 %137 to i64
  switch i64 %_132, label %bb47 [
    i64 0, label %bb70
    i64 1, label %bb48
  ]

bb47:                                             ; preds = %bb46
  unreachable

bb48:                                             ; preds = %bb46
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %138 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1702 to %"core::panic::location::Location"*))
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %0, align 1
  br label %bb71

bb31:                                             ; preds = %bb30
  %140 = bitcast [1 x { i8*, i64* }]* %_86 to { i8*, i64* }*
  %141 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %140, i32 0, i32 0
  store i8* %_90.0, i8** %141, align 8
  %142 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %140, i32 0, i32 1
  store i64* %_90.1, i64** %142, align 8
  %_83.0 = bitcast [1 x { i8*, i64* }]* %_86 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_79, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc678 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_83.0, i64 1)
  br label %bb32

bb32:                                             ; preds = %bb31
; call core::fmt::Formatter::write_fmt
  %_77 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_79)
  br label %bb33

bb33:                                             ; preds = %bb32
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %143 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he53b801f47141b37E"(i1 zeroext %_77)
  %144 = zext i1 %143 to i8
  store i8 %144, i8* %_76, align 1
  br label %bb34

bb34:                                             ; preds = %bb33
  %145 = load i8, i8* %_76, align 1, !range !3
  %146 = trunc i8 %145 to i1
  %_93 = zext i1 %146 to i64
  switch i64 %_93, label %bb35 [
    i64 0, label %bb70
    i64 1, label %bb36
  ]

bb35:                                             ; preds = %bb34
  unreachable

bb36:                                             ; preds = %bb34
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %147 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h506fd136eb8e9e97E"(%"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1704 to %"core::panic::location::Location"*))
  %148 = zext i1 %147 to i8
  store i8 %148, i8* %0, align 1
  br label %bb71
}

; <time::duration::OutOfRangeError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$time..duration..OutOfRangeError$u20$as$u20$core..fmt..Display$GT$3fmt17hf1d2fc79b7998645E"(%"duration::OutOfRangeError"* nonnull align 1 %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_14 = alloca { [0 x i8]*, i64 }, align 8
  %_12 = alloca i64*, align 8
  %_11 = alloca [1 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
; call <time::duration::OutOfRangeError as std::error::Error>::description
  %0 = call { [0 x i8]*, i64 } @"_ZN69_$LT$time..duration..OutOfRangeError$u20$as$u20$std..error..Error$GT$11description17h1a6581f59981b46cE"(%"duration::OutOfRangeError"* nonnull align 1 %self)
  store { [0 x i8]*, i64 } %0, { [0 x i8]*, i64 }* %_14, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast i64** %_12 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %_14, { [0 x i8]*, i64 }** %1, align 8
  %_args = load i64*, i64** %_12, align 8, !nonnull !4
  %_18 = bitcast i64* %_args to { [0 x i8]*, i64 }*
; call core::fmt::ArgumentV1::new
  %2 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17ha52a6fb3d74479f1E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_18, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h18a698e2acc26c61E")
  %_17.0 = extractvalue { i8*, i64* } %2, 0
  %_17.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast [1 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_17.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_17.1, i64** %5, align 8
  %_8.0 = bitcast [1 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::fmt::Formatter::write_fmt
  %6 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i1 %6
}

; <time::duration::OutOfRangeError as std::error::Error>::description
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN69_$LT$time..duration..OutOfRangeError$u20$as$u20$std..error..Error$GT$11description17h1a6581f59981b46cE"(%"duration::OutOfRangeError"* nonnull align 1 %self) unnamed_addr #1 {
start:
  ret { [0 x i8]*, i64 } { [0 x i8]* bitcast (<{ [57 x i8] }>* @alloc1705 to [0 x i8]*), i64 57 }
}

; time::duration::div_mod_floor_64
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4time8duration16div_mod_floor_6417h3207723aac8dd4beE(i64 %this, i64 %other) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
; call time::duration::div_floor_64
  %_3 = call i64 @_ZN4time8duration12div_floor_6417h5ce5da58d475c4d5E(i64 %this, i64 %other)
  br label %bb1

bb1:                                              ; preds = %start
; call time::duration::mod_floor_64
  %_6 = call i64 @_ZN4time8duration12mod_floor_6417h3510e3f433503f83E(i64 %this, i64 %other)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 %_3, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_6, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; time::duration::div_floor_64
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4time8duration12div_floor_6417h5ce5da58d475c4d5E(i64 %this, i64 %other) unnamed_addr #0 {
start:
  %_16 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_10 = alloca i8, align 1
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca i64, align 8
; call time::duration::div_rem_64
  %1 = call { i64, i64 } @_ZN4time8duration10div_rem_6417hf773edd6b6a0f027E(i64 %this, i64 %other)
  store { i64, i64 } %1, { i64, i64 }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %d = bitcast { i64, i64 }* %_3 to i64*
  %r = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %_13 = load i64, i64* %r, align 8
  %_12 = icmp sgt i64 %_13, 0
  br i1 %_12, label %bb6, label %bb5

bb5:                                              ; preds = %bb1
  store i8 0, i8* %_11, align 1
  br label %bb7

bb6:                                              ; preds = %bb1
  %_14 = icmp slt i64 %other, 0
  %2 = zext i1 %_14 to i8
  store i8 %2, i8* %_11, align 1
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  %3 = load i8, i8* %_11, align 1, !range !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb2, label %bb3

bb3:                                              ; preds = %bb7
  %_18 = load i64, i64* %r, align 8
  %_17 = icmp slt i64 %_18, 0
  br i1 %_17, label %bb9, label %bb8

bb2:                                              ; preds = %bb7
  store i8 1, i8* %_10, align 1
  br label %bb4

bb4:                                              ; preds = %bb10, %bb2
  %5 = load i8, i8* %_10, align 1, !range !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb11, label %bb12

bb8:                                              ; preds = %bb3
  store i8 0, i8* %_16, align 1
  br label %bb10

bb9:                                              ; preds = %bb3
  %_19 = icmp sgt i64 %other, 0
  %7 = zext i1 %_19 to i8
  store i8 %7, i8* %_16, align 1
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %8 = load i8, i8* %_16, align 1, !range !3
  %9 = trunc i8 %8 to i1
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %_10, align 1
  br label %bb4

bb12:                                             ; preds = %bb4
  %11 = bitcast { i64, i64 }* %_3 to i64*
  %d3 = load i64, i64* %11, align 8
  store i64 %d3, i64* %0, align 8
  br label %bb14

bb11:                                             ; preds = %bb4
  %12 = bitcast { i64, i64 }* %_3 to i64*
  %d1 = load i64, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %r2 = load i64, i64* %13, align 8
  %14 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %d1, i64 1)
  %_22.0 = extractvalue { i64, i1 } %14, 0
  %_22.1 = extractvalue { i64, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false)
  br i1 %15, label %panic, label %bb13

bb13:                                             ; preds = %bb11
  store i64 %_22.0, i64* %0, align 8
  br label %bb14

panic:                                            ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1707 to %"core::panic::location::Location"*)) #17
  unreachable

bb14:                                             ; preds = %bb12, %bb13
  %16 = load i64, i64* %0, align 8
  ret i64 %16
}

; time::duration::mod_floor_64
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4time8duration12mod_floor_6417h3510e3f433503f83E(i64 %this, i64 %other) unnamed_addr #0 {
start:
  %_18 = alloca i8, align 1
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_3 = alloca i64, align 8
  %0 = alloca i64, align 8
  %_6 = icmp eq i64 %other, 0
  %1 = call i1 @llvm.expect.i1(i1 %_6, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 %other, -1
  %_8 = icmp eq i64 %this, -9223372036854775808
  %_9 = and i1 %_7, %_8
  %2 = call i1 @llvm.expect.i1(i1 %_9, i1 false)
  br i1 %2, label %panic1, label %bb2

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([57 x i8]* @str.d to [0 x i8]*), i64 57, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1709 to %"core::panic::location::Location"*)) #17
  unreachable

bb2:                                              ; preds = %bb1
  %3 = srem i64 %this, %other
  store i64 %3, i64* %_3, align 8
  %_15 = load i64, i64* %_3, align 8
  %_14 = icmp sgt i64 %_15, 0
  br i1 %_14, label %bb7, label %bb6

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([48 x i8]* @str.a to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1709 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb2
  store i8 0, i8* %_13, align 1
  br label %bb8

bb7:                                              ; preds = %bb2
  %_16 = icmp slt i64 %other, 0
  %4 = zext i1 %_16 to i8
  store i8 %4, i8* %_13, align 1
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  %5 = load i8, i8* %_13, align 1, !range !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb3, label %bb4

bb4:                                              ; preds = %bb8
  %_20 = load i64, i64* %_3, align 8
  %_19 = icmp slt i64 %_20, 0
  br i1 %_19, label %bb10, label %bb9

bb3:                                              ; preds = %bb8
  store i8 1, i8* %_12, align 1
  br label %bb5

bb5:                                              ; preds = %bb11, %bb3
  %7 = load i8, i8* %_12, align 1, !range !3
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb12, label %bb13

bb9:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1
  br label %bb11

bb10:                                             ; preds = %bb4
  %_21 = icmp sgt i64 %other, 0
  %9 = zext i1 %_21 to i8
  store i8 %9, i8* %_18, align 1
  br label %bb11

bb11:                                             ; preds = %bb9, %bb10
  %10 = load i8, i8* %_18, align 1, !range !3
  %11 = trunc i8 %10 to i1
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %_12, align 1
  br label %bb5

bb13:                                             ; preds = %bb5
  %r3 = load i64, i64* %_3, align 8
  store i64 %r3, i64* %0, align 8
  br label %bb15

bb12:                                             ; preds = %bb5
  %r = load i64, i64* %_3, align 8
  %13 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %r, i64 %other)
  %_25.0 = extractvalue { i64, i1 } %13, 0
  %_25.1 = extractvalue { i64, i1 } %13, 1
  %14 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false)
  br i1 %14, label %panic2, label %bb14

bb14:                                             ; preds = %bb12
  store i64 %_25.0, i64* %0, align 8
  br label %bb15

panic2:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1711 to %"core::panic::location::Location"*)) #17
  unreachable

bb15:                                             ; preds = %bb13, %bb14
  %15 = load i64, i64* %0, align 8
  ret i64 %15
}

; time::duration::div_rem_64
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4time8duration10div_rem_6417hf773edd6b6a0f027E(i64 %this, i64 %other) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_6 = icmp eq i64 %other, 0
  %1 = call i1 @llvm.expect.i1(i1 %_6, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 %other, -1
  %_8 = icmp eq i64 %this, -9223372036854775808
  %_9 = and i1 %_7, %_8
  %2 = call i1 @llvm.expect.i1(i1 %_9, i1 false)
  br i1 %2, label %panic1, label %bb2

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.5 to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1713 to %"core::panic::location::Location"*)) #17
  unreachable

bb2:                                              ; preds = %bb1
  %_3 = sdiv i64 %this, %other
  %_13 = icmp eq i64 %other, 0
  %3 = call i1 @llvm.expect.i1(i1 %_13, i1 false)
  br i1 %3, label %panic2, label %bb3

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1713 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %bb2
  %_14 = icmp eq i64 %other, -1
  %_15 = icmp eq i64 %this, -9223372036854775808
  %_16 = and i1 %_14, %_15
  %4 = call i1 @llvm.expect.i1(i1 %_16, i1 false)
  br i1 %4, label %panic3, label %bb4

panic2:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([57 x i8]* @str.d to [0 x i8]*), i64 57, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1715 to %"core::panic::location::Location"*)) #17
  unreachable

bb4:                                              ; preds = %bb3
  %_10 = srem i64 %this, %other
  %5 = bitcast { i64, i64 }* %0 to i64*
  store i64 %_3, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_10, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12

panic3:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([48 x i8]* @str.a to [0 x i8]*), i64 48, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1715 to %"core::panic::location::Location"*)) #17
  unreachable
}

; time::parse::strptime
; Function Attrs: nonlazybind uwtable
define void @_ZN4time5parse8strptime17hceea7005510c87a6E(%"core::result::Result<Tm, ParseError>"* noalias nocapture sret(%"core::result::Result<Tm, ParseError>") dereferenceable(48) %0, [0 x i8]* nonnull align 1 %1, i64 %2, [0 x i8]* nonnull align 1 %format.0, i64 %format.1) unnamed_addr #1 {
start:
  %3 = alloca i96, align 8
  %4 = alloca i96, align 8
  %5 = alloca i96, align 8
  %6 = alloca i96, align 8
  %_35 = alloca %Tm, align 4
  %_33 = alloca %"core::result::Result<core::convert::Infallible, ParseError>::Err", align 4
  %residual1 = alloca %"core::result::Result<core::convert::Infallible, ParseError>::Err", align 4
  %_27 = alloca %"core::result::Result<(), ParseError>", align 4
  %_26 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>", align 4
  %_24 = alloca %"core::result::Result<core::convert::Infallible, ParseError>::Err", align 4
  %residual = alloca %"core::result::Result<core::convert::Infallible, ParseError>::Err", align 4
  %_16 = alloca %"core::result::Result<(), ParseError>", align 4
  %_15 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>", align 4
  %_11 = alloca i32, align 4
  %_6 = alloca i32, align 4
  %chars = alloca { i8*, i8* }, align 8
  %tm = alloca %Tm, align 4
  %s = alloca { [0 x i8]*, i64 }, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  store i64 %2, i64* %8, align 8
  %9 = bitcast %Tm* %tm to i32*
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 1
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 2
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 3
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 4
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 5
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 6
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 7
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 8
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 9
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 10
  store i32 0, i32* %19, align 4
; call core::str::<impl str>::chars
  %20 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hf02eec9683990b68E"([0 x i8]* nonnull align 1 %format.0, i64 %format.1)
  store { i8*, i8* } %20, { i8*, i8* }* %chars, align 8
  br label %bb1

bb1:                                              ; preds = %bb8, %bb5, %bb13, %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %21 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71dd653fc346d1b8E"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !range !2
  store i32 %21, i32* %_6, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %22 = load i32, i32* %_6, align 4, !range !2
  %23 = sub i32 %22, 1114112
  %24 = icmp eq i32 %23, 0
  %_8 = select i1 %24, i64 0, i64 1
  %25 = icmp eq i64 %_8, 1
  br i1 %25, label %bb3, label %bb16

bb3:                                              ; preds = %bb2
  %ch = load i32, i32* %_6, align 4, !range !15
  %26 = icmp eq i32 %ch, 37
  br i1 %26, label %bb4, label %bb11

bb16:                                             ; preds = %bb2
  %27 = bitcast %Tm* %_35 to i8*
  %28 = bitcast %Tm* %tm to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 44, i1 false)
  %29 = bitcast %"core::result::Result<Tm, ParseError>"* %0 to %"core::result::Result<Tm, ParseError>::Ok"*
  %30 = getelementptr inbounds %"core::result::Result<Tm, ParseError>::Ok", %"core::result::Result<Tm, ParseError>::Ok"* %29, i32 0, i32 1
  %31 = bitcast %Tm* %30 to i8*
  %32 = bitcast %Tm* %_35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 44, i1 false)
  %33 = bitcast %"core::result::Result<Tm, ParseError>"* %0 to i32*
  store i32 0, i32* %33, align 4
  br label %bb17

bb17:                                             ; preds = %bb10, %bb15, %bb16
  ret void

bb4:                                              ; preds = %bb3
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %34 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71dd653fc346d1b8E"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !range !2
  store i32 %34, i32* %_11, align 4
  br label %bb5

bb11:                                             ; preds = %bb3
; call time::parse::parse_char
  %35 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %s, i32 %ch)
  store i96 %35, i96* %6, align 8
  %36 = bitcast %"core::result::Result<(), ParseError>"* %_27 to i8*
  %37 = bitcast i96* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 8 %37, i64 12, i1 false)
  br label %bb12

bb12:                                             ; preds = %bb11
  %38 = bitcast %"core::result::Result<(), ParseError>"* %_27 to i96*
  %39 = load i96, i96* %38, align 4
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %40 = call i96 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7c8b37944f235a1aE"(i96 %39)
  store i96 %40, i96* %5, align 8
  %41 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>"* %_26 to i8*
  %42 = bitcast i96* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 8 %42, i64 12, i1 false)
  br label %bb13

bb13:                                             ; preds = %bb12
  %43 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>"* %_26 to i32*
  %44 = load i32, i32* %43, align 4, !range !17
  %45 = sub i32 %44, 15
  %46 = icmp eq i32 %45, 0
  %_31 = select i1 %46, i64 0, i64 1
  switch i64 %_31, label %bb14 [
    i64 0, label %bb1
    i64 1, label %bb15
  ]

bb14:                                             ; preds = %bb13
  unreachable

bb15:                                             ; preds = %bb13
  %47 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>"* %_26 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>::Break"*
  %48 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>::Break"* %47 to %"core::result::Result<core::convert::Infallible, ParseError>::Err"*
  %49 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %residual1 to i8*
  %50 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 12, i1 false)
  %51 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %_33 to i8*
  %52 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %residual1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %52, i64 12, i1 false)
  %53 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %_33 to i96*
  %54 = load i96, i96* %53, align 4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd9b81d97cfd9f795E"(%"core::result::Result<Tm, ParseError>"* noalias nocapture sret(%"core::result::Result<Tm, ParseError>") dereferenceable(48) %0, i96 %54, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1717 to %"core::panic::location::Location"*))
  br label %bb17

bb5:                                              ; preds = %bb4
  %55 = load i32, i32* %_11, align 4, !range !2
  %56 = sub i32 %55, 1114112
  %57 = icmp eq i32 %56, 0
  %_13 = select i1 %57, i64 0, i64 1
  %58 = icmp eq i64 %_13, 1
  br i1 %58, label %bb6, label %bb1

bb6:                                              ; preds = %bb5
  %ch2 = load i32, i32* %_11, align 4, !range !15
; call time::parse::parse_type
  %59 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %s, i32 %ch2, %Tm* align 4 dereferenceable(44) %tm)
  store i96 %59, i96* %4, align 8
  %60 = bitcast %"core::result::Result<(), ParseError>"* %_16 to i8*
  %61 = bitcast i96* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 8 %61, i64 12, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb6
  %62 = bitcast %"core::result::Result<(), ParseError>"* %_16 to i96*
  %63 = load i96, i96* %62, align 4
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %64 = call i96 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7c8b37944f235a1aE"(i96 %63)
  store i96 %64, i96* %3, align 8
  %65 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>"* %_15 to i8*
  %66 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 8 %66, i64 12, i1 false)
  br label %bb8

bb8:                                              ; preds = %bb7
  %67 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>"* %_15 to i32*
  %68 = load i32, i32* %67, align 4, !range !17
  %69 = sub i32 %68, 15
  %70 = icmp eq i32 %69, 0
  %_22 = select i1 %70, i64 0, i64 1
  switch i64 %_22, label %bb9 [
    i64 0, label %bb1
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb8
  unreachable

bb10:                                             ; preds = %bb8
  %71 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>"* %_15 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>::Break"*
  %72 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, ParseError>>::Break"* %71 to %"core::result::Result<core::convert::Infallible, ParseError>::Err"*
  %73 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %residual to i8*
  %74 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 12, i1 false)
  %75 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %_24 to i8*
  %76 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %residual to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 12, i1 false)
  %77 = bitcast %"core::result::Result<core::convert::Infallible, ParseError>::Err"* %_24 to i96*
  %78 = load i96, i96* %77, align 4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd9b81d97cfd9f795E"(%"core::result::Result<Tm, ParseError>"* noalias nocapture sret(%"core::result::Result<Tm, ParseError>") dereferenceable(48) %0, i96 %78, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1719 to %"core::panic::location::Location"*))
  br label %bb17
}

; time::parse::parse_type
; Function Attrs: nonlazybind uwtable
define internal i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %0, i32 %ch, %Tm* align 4 dereferenceable(44) %1) unnamed_addr #1 {
start:
  %2 = alloca i96, align 8
  %3 = alloca i96, align 8
  %4 = alloca i96, align 8
  %5 = alloca i96, align 8
  %6 = alloca i96, align 8
  %7 = alloca i96, align 8
  %8 = alloca i96, align 8
  %9 = alloca i96, align 8
  %10 = alloca i96, align 8
  %11 = alloca i96, align 8
  %12 = alloca i96, align 8
  %13 = alloca i96, align 8
  %14 = alloca i96, align 8
  %15 = alloca i96, align 8
  %16 = alloca i96, align 8
  %17 = alloca i96, align 8
  %18 = alloca i96, align 8
  %19 = alloca i96, align 8
  %20 = alloca i96, align 8
  %21 = alloca i96, align 8
  %22 = alloca i96, align 8
  %23 = alloca i96, align 8
  %24 = alloca i96, align 8
  %25 = alloca i96, align 8
  %26 = alloca i96, align 8
  %27 = alloca i96, align 8
  %28 = alloca i96, align 8
  %29 = alloca i96, align 8
  %30 = alloca i96, align 8
  %31 = alloca i96, align 8
  %32 = alloca i96, align 8
  %33 = alloca i96, align 8
  %34 = alloca i96, align 8
  %35 = alloca i96, align 8
  %36 = alloca i96, align 8
  %37 = alloca i96, align 8
  %38 = alloca i96, align 8
  %39 = alloca i96, align 8
  %40 = alloca i96, align 8
  %41 = alloca i96, align 8
  %42 = alloca i96, align 8
  %43 = alloca i96, align 8
  %44 = alloca i96, align 8
  %45 = alloca i96, align 8
  %46 = alloca i96, align 8
  %47 = alloca i96, align 8
  %_371 = alloca %ParseError, align 4
  %_356 = alloca %ParseError, align 4
  %_351 = alloca { i32, i32 }, align 4
  %_349 = alloca %"core::result::Result<(), ParseError>", align 4
  %_348 = alloca %ParseError, align 4
  %_343 = alloca { i32, i32 }, align 4
  %_340 = alloca %ParseError, align 4
  %_338 = alloca %"core::result::Result<(), ParseError>", align 4
  %_334 = alloca %"core::result::Result<(), ParseError>", align 4
  %sign = alloca i32, align 4
  %_329 = alloca %"core::result::Result<(), ParseError>", align 4
  %_323 = alloca i64, align 8
  %_312 = alloca { i64, i32 }, align 8
  %iter = alloca %"core::str::iter::CharIndices", align 8
  %_309 = alloca %"core::str::iter::CharIndices", align 8
  %_308 = alloca %"core::str::iter::CharIndices", align 8
  %_299 = alloca i8, align 1
  %_298 = alloca %ParseError, align 4
  %_293 = alloca { i32, i32 }, align 4
  %_292 = alloca %ParseError, align 4
  %_286 = alloca { i32, i32 }, align 4
  %_285 = alloca %ParseError, align 4
  %_280 = alloca { i32, i32 }, align 4
  %_277 = alloca { i64*, i64* }, align 8
  %_275 = alloca i64*, align 8
  %_272 = alloca { i64*, i64* }, align 8
  %_270 = alloca i64*, align 8
  %_267 = alloca %"core::result::Result<(), ParseError>", align 4
  %_266 = alloca %"core::result::Result<(), ParseError>", align 4
  %_265 = alloca %"core::result::Result<(), ParseError>", align 4
  %_264 = alloca %"core::result::Result<(), ParseError>", align 4
  %_263 = alloca %ParseError, align 4
  %_261 = alloca i32, align 4
  %_257 = alloca { i32, i32 }, align 4
  %_253 = alloca { i64*, i64* }, align 8
  %_251 = alloca i64*, align 8
  %_248 = alloca { i64*, i64* }, align 8
  %_246 = alloca i64*, align 8
  %_243 = alloca %"core::result::Result<(), ParseError>", align 4
  %_242 = alloca %"core::result::Result<(), ParseError>", align 4
  %_241 = alloca %"core::result::Result<(), ParseError>", align 4
  %_240 = alloca %"core::result::Result<(), ParseError>", align 4
  %_239 = alloca %ParseError, align 4
  %_234 = alloca { i32, i32 }, align 4
  %_233 = alloca %ParseError, align 4
  %_230 = alloca %Tm, align 4
  %_226 = alloca { i64, i64 }, align 8
  %_223 = alloca { i64*, i64* }, align 8
  %_221 = alloca i64*, align 8
  %_218 = alloca { i64*, i64* }, align 8
  %_216 = alloca i64*, align 8
  %_213 = alloca { i64*, i64* }, align 8
  %_211 = alloca i64*, align 8
  %_208 = alloca %"core::result::Result<(), ParseError>", align 4
  %_207 = alloca %"core::result::Result<(), ParseError>", align 4
  %_206 = alloca %"core::result::Result<(), ParseError>", align 4
  %_205 = alloca %"core::result::Result<(), ParseError>", align 4
  %_204 = alloca %"core::result::Result<(), ParseError>", align 4
  %_203 = alloca %"core::result::Result<(), ParseError>", align 4
  %_200 = alloca { i64*, i64* }, align 8
  %_198 = alloca i64*, align 8
  %_195 = alloca %"core::result::Result<(), ParseError>", align 4
  %_194 = alloca %"core::result::Result<(), ParseError>", align 4
  %_193 = alloca %ParseError, align 4
  %_184 = alloca { i32, i32 }, align 4
  %_183 = alloca %ParseError, align 4
  %_174 = alloca { i32, i32 }, align 4
  %_172 = alloca %ParseError, align 4
  %_166 = alloca { i32, i32 }, align 4
  %_165 = alloca %ParseError, align 4
  %_160 = alloca { i32, i32 }, align 4
  %_159 = alloca %ParseError, align 4
  %_157 = alloca i32, align 4
  %_153 = alloca { i32, i32 }, align 4
  %_152 = alloca %ParseError, align 4
  %_147 = alloca { i32, i32 }, align 4
  %_146 = alloca %ParseError, align 4
  %_140 = alloca { i32, i32 }, align 4
  %_139 = alloca %ParseError, align 4
  %_137 = alloca i32, align 4
  %_133 = alloca { i32, i32 }, align 4
  %_132 = alloca %ParseError, align 4
  %_127 = alloca { i32, i32 }, align 4
  %_124 = alloca { i64*, i64* }, align 8
  %_122 = alloca i64*, align 8
  %_119 = alloca { i64*, i64* }, align 8
  %_117 = alloca i64*, align 8
  %_114 = alloca %"core::result::Result<(), ParseError>", align 4
  %_113 = alloca %"core::result::Result<(), ParseError>", align 4
  %_112 = alloca %"core::result::Result<(), ParseError>", align 4
  %_111 = alloca %"core::result::Result<(), ParseError>", align 4
  %_108 = alloca %ParseError, align 4
  %_103 = alloca { i32, i32 }, align 4
  %_102 = alloca %ParseError, align 4
  %_97 = alloca { i32, i32 }, align 4
  %_94 = alloca { i64*, i64* }, align 8
  %_92 = alloca i64*, align 8
  %_89 = alloca { i64*, i64* }, align 8
  %_87 = alloca i64*, align 8
  %_84 = alloca %"core::result::Result<(), ParseError>", align 4
  %_83 = alloca %"core::result::Result<(), ParseError>", align 4
  %_82 = alloca %"core::result::Result<(), ParseError>", align 4
  %_81 = alloca %"core::result::Result<(), ParseError>", align 4
  %_78 = alloca { i64*, i64* }, align 8
  %_76 = alloca i64*, align 8
  %_73 = alloca { i64*, i64* }, align 8
  %_71 = alloca i64*, align 8
  %_68 = alloca { i64*, i64* }, align 8
  %_66 = alloca i64*, align 8
  %_63 = alloca { i64*, i64* }, align 8
  %_61 = alloca i64*, align 8
  %_58 = alloca %"core::result::Result<(), ParseError>", align 4
  %_57 = alloca %"core::result::Result<(), ParseError>", align 4
  %_56 = alloca %"core::result::Result<(), ParseError>", align 4
  %_55 = alloca %"core::result::Result<(), ParseError>", align 4
  %_54 = alloca %"core::result::Result<(), ParseError>", align 4
  %_53 = alloca %"core::result::Result<(), ParseError>", align 4
  %_52 = alloca %"core::result::Result<(), ParseError>", align 4
  %_51 = alloca %"core::result::Result<(), ParseError>", align 4
  %_50 = alloca %ParseError, align 4
  %_40 = alloca { i32, i32 }, align 4
  %_39 = alloca %ParseError, align 4
  %_31 = alloca { i32, i32 }, align 4
  %_30 = alloca %ParseError, align 4
  %_22 = alloca { i32, i32 }, align 4
  %_21 = alloca %ParseError, align 4
  %_13 = alloca { i32, i32 }, align 4
  %_12 = alloca %ParseError, align 4
  %_4 = alloca { i32, i32 }, align 4
  %48 = alloca %"core::result::Result<(), ParseError>", align 4
  %tm = alloca %Tm*, align 8
  %s = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %0, { [0 x i8]*, i64 }** %s, align 8
  store %Tm* %1, %Tm** %tm, align 8
  switch i32 %ch, label %bb1 [
    i32 65, label %bb2
    i32 97, label %bb7
    i32 66, label %bb12
    i32 98, label %bb17
    i32 104, label %bb17
    i32 67, label %bb22
    i32 99, label %bb30
    i32 68, label %bb39
    i32 120, label %bb39
    i32 100, label %bb44
    i32 101, label %bb49
    i32 102, label %bb54
    i32 70, label %bb56
    i32 72, label %bb61
    i32 73, label %bb66
    i32 106, label %bb74
    i32 107, label %bb80
    i32 108, label %bb85
    i32 77, label %bb93
    i32 109, label %bb98
    i32 110, label %bb104
    i32 80, label %bb105
    i32 112, label %bb111
    i32 82, label %bb117
    i32 114, label %bb120
    i32 115, label %bb127
    i32 83, label %bb134
    i32 84, label %bb139
    i32 88, label %bb139
    i32 116, label %bb144
    i32 117, label %bb145
    i32 118, label %bb153
    i32 119, label %bb158
    i32 89, label %bb163
    i32 121, label %bb169
    i32 90, label %bb174
    i32 122, label %bb191
    i32 37, label %bb219
  ]

bb1:                                              ; preds = %start
  %49 = bitcast %ParseError* %_371 to %"ParseError::InvalidFormatSpecifier"*
  %50 = getelementptr inbounds %"ParseError::InvalidFormatSpecifier", %"ParseError::InvalidFormatSpecifier"* %49, i32 0, i32 1
  store i32 %ch, i32* %50, align 4
  %51 = bitcast %ParseError* %_371 to i32*
  store i32 13, i32* %51, align 4
  %52 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %53 = bitcast %"core::result::Result<(), ParseError>::Err"* %52 to %ParseError*
  %54 = bitcast %ParseError* %53 to i8*
  %55 = bitcast %ParseError* %_371 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %55, i64 12, i1 false)
  br label %bb220

bb2:                                              ; preds = %start
  %_5 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_strs
  %56 = call { i32, i32 } @_ZN4time5parse10match_strs17h81642f79d566bc77E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_5, [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* nonnull align 8 bitcast (<{ i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8] }>* @alloc770 to [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]*), i64 7)
  store { i32, i32 } %56, { i32, i32 }* %_4, align 4
  br label %bb3

bb7:                                              ; preds = %start
  %_14 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_strs
  %57 = call { i32, i32 } @_ZN4time5parse10match_strs17h81642f79d566bc77E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_14, [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* nonnull align 8 bitcast (<{ i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8] }>* @alloc789 to [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]*), i64 7)
  store { i32, i32 } %57, { i32, i32 }* %_13, align 4
  br label %bb8

bb12:                                             ; preds = %start
  %_23 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_strs
  %58 = call { i32, i32 } @_ZN4time5parse10match_strs17h81642f79d566bc77E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_23, [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* nonnull align 8 bitcast (<{ i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8] }>* @alloc818 to [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]*), i64 12)
  store { i32, i32 } %58, { i32, i32 }* %_22, align 4
  br label %bb13

bb17:                                             ; preds = %start, %start
  %_32 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_strs
  %59 = call { i32, i32 } @_ZN4time5parse10match_strs17h81642f79d566bc77E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_32, [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* nonnull align 8 bitcast (<{ i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8], i8*, [16 x i8] }>* @alloc847 to [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]*), i64 12)
  store { i32, i32 } %59, { i32, i32 }* %_31, align 4
  br label %bb18

bb22:                                             ; preds = %start
  %_41 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %60 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_41, i64 1, i64 2, i1 zeroext false, i32 0, i32 99)
  store { i32, i32 } %60, { i32, i32 }* %_40, align 4
  br label %bb23

bb30:                                             ; preds = %start
  %_59 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
  %_60 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
; call time::parse::parse_type
  %61 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_59, i32 97, %Tm* align 4 dereferenceable(44) %_60)
  store i96 %61, i96* %10, align 8
  %62 = bitcast %"core::result::Result<(), ParseError>"* %_58 to i8*
  %63 = bitcast i96* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 8 %63, i64 12, i1 false)
  br label %bb31

bb39:                                             ; preds = %start, %start
  %_85 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
  %_86 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
; call time::parse::parse_type
  %64 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_85, i32 109, %Tm* align 4 dereferenceable(44) %_86)
  store i96 %64, i96* %15, align 8
  %65 = bitcast %"core::result::Result<(), ParseError>"* %_84 to i8*
  %66 = bitcast i96* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 8 %66, i64 12, i1 false)
  br label %bb40

bb44:                                             ; preds = %start
  %_98 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %67 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_98, i64 1, i64 2, i1 zeroext false, i32 1, i32 31)
  store { i32, i32 } %67, { i32, i32 }* %_97, align 4
  br label %bb45

bb49:                                             ; preds = %start
  %_104 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %68 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_104, i64 1, i64 2, i1 zeroext true, i32 1, i32 31)
  store { i32, i32 } %68, { i32, i32 }* %_103, align 4
  br label %bb50

bb54:                                             ; preds = %start
  %_110 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_fractional_seconds
  %_109 = call i32 @_ZN4time5parse24match_fractional_seconds17hce78aeaa2d497c3eE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_110)
  br label %bb55

bb56:                                             ; preds = %start
  %_115 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
  %_116 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
; call time::parse::parse_type
  %69 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_115, i32 89, %Tm* align 4 dereferenceable(44) %_116)
  store i96 %69, i96* %20, align 8
  %70 = bitcast %"core::result::Result<(), ParseError>"* %_114 to i8*
  %71 = bitcast i96* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* align 8 %71, i64 12, i1 false)
  br label %bb57

bb61:                                             ; preds = %start
  %_128 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %72 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_128, i64 1, i64 2, i1 zeroext false, i32 0, i32 23)
  store { i32, i32 } %72, { i32, i32 }* %_127, align 4
  br label %bb62

bb66:                                             ; preds = %start
  %_134 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %73 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_134, i64 1, i64 2, i1 zeroext false, i32 1, i32 12)
  store { i32, i32 } %73, { i32, i32 }* %_133, align 4
  br label %bb67

bb74:                                             ; preds = %start
  %_141 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %74 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_141, i64 1, i64 3, i1 zeroext false, i32 1, i32 366)
  store { i32, i32 } %74, { i32, i32 }* %_140, align 4
  br label %bb75

bb80:                                             ; preds = %start
  %_148 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %75 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_148, i64 1, i64 2, i1 zeroext true, i32 0, i32 23)
  store { i32, i32 } %75, { i32, i32 }* %_147, align 4
  br label %bb81

bb85:                                             ; preds = %start
  %_154 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %76 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_154, i64 1, i64 2, i1 zeroext true, i32 1, i32 12)
  store { i32, i32 } %76, { i32, i32 }* %_153, align 4
  br label %bb86

bb93:                                             ; preds = %start
  %_161 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %77 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_161, i64 1, i64 2, i1 zeroext false, i32 0, i32 59)
  store { i32, i32 } %77, { i32, i32 }* %_160, align 4
  br label %bb94

bb98:                                             ; preds = %start
  %_167 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %78 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_167, i64 1, i64 2, i1 zeroext false, i32 1, i32 12)
  store { i32, i32 } %78, { i32, i32 }* %_166, align 4
  br label %bb99

bb104:                                            ; preds = %start
  %_173 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::parse_char
  %79 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_173, i32 10)
  store i96 %79, i96* %21, align 8
  %80 = bitcast %"core::result::Result<(), ParseError>"* %48 to i8*
  %81 = bitcast i96* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 8 %81, i64 12, i1 false)
  br label %bb220

bb105:                                            ; preds = %start
  %_175 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_strs
  %82 = call { i32, i32 } @_ZN4time5parse10match_strs17h81642f79d566bc77E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_175, [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* nonnull align 8 bitcast (<{ i8*, [16 x i8], i8*, [16 x i8] }>* @alloc911 to [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]*), i64 2)
  store { i32, i32 } %82, { i32, i32 }* %_174, align 4
  br label %bb106

bb111:                                            ; preds = %start
  %_185 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_strs
  %83 = call { i32, i32 } @_ZN4time5parse10match_strs17h81642f79d566bc77E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_185, [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* nonnull align 8 bitcast (<{ i8*, [16 x i8], i8*, [16 x i8] }>* @alloc920 to [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]*), i64 2)
  store { i32, i32 } %83, { i32, i32 }* %_184, align 4
  br label %bb112

bb117:                                            ; preds = %start
  %_196 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
  %_197 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
; call time::parse::parse_type
  %84 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_196, i32 72, %Tm* align 4 dereferenceable(44) %_197)
  store i96 %84, i96* %24, align 8
  %85 = bitcast %"core::result::Result<(), ParseError>"* %_195 to i8*
  %86 = bitcast i96* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 8 %86, i64 12, i1 false)
  br label %bb118

bb120:                                            ; preds = %start
  %_209 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
  %_210 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
; call time::parse::parse_type
  %87 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_209, i32 73, %Tm* align 4 dereferenceable(44) %_210)
  store i96 %87, i96* %31, align 8
  %88 = bitcast %"core::result::Result<(), ParseError>"* %_208 to i8*
  %89 = bitcast i96* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 8 %89, i64 12, i1 false)
  br label %bb121

bb127:                                            ; preds = %start
  %_227 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_i64
  %90 = call { i64, i64 } @_ZN4time5parse16match_digits_i6417h802b38853777a274E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_227, i64 1, i64 18, i1 zeroext false)
  store { i64, i64 } %90, { i64, i64 }* %_226, align 8
  br label %bb128

bb134:                                            ; preds = %start
  %_235 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %91 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_235, i64 1, i64 2, i1 zeroext false, i32 0, i32 60)
  store { i32, i32 } %91, { i32, i32 }* %_234, align 4
  br label %bb135

bb139:                                            ; preds = %start, %start
  %_244 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
  %_245 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
; call time::parse::parse_type
  %92 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_244, i32 72, %Tm* align 4 dereferenceable(44) %_245)
  store i96 %92, i96* %36, align 8
  %93 = bitcast %"core::result::Result<(), ParseError>"* %_243 to i8*
  %94 = bitcast i96* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 8 %94, i64 12, i1 false)
  br label %bb140

bb144:                                            ; preds = %start
  %_256 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::parse_char
  %95 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_256, i32 9)
  store i96 %95, i96* %37, align 8
  %96 = bitcast %"core::result::Result<(), ParseError>"* %48 to i8*
  %97 = bitcast i96* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* align 8 %97, i64 12, i1 false)
  br label %bb220

bb145:                                            ; preds = %start
  %_258 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %98 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_258, i64 1, i64 1, i1 zeroext false, i32 1, i32 7)
  store { i32, i32 } %98, { i32, i32 }* %_257, align 4
  br label %bb146

bb153:                                            ; preds = %start
  %_268 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
  %_269 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
; call time::parse::parse_type
  %99 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_268, i32 101, %Tm* align 4 dereferenceable(44) %_269)
  store i96 %99, i96* %42, align 8
  %100 = bitcast %"core::result::Result<(), ParseError>"* %_267 to i8*
  %101 = bitcast i96* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* align 8 %101, i64 12, i1 false)
  br label %bb154

bb158:                                            ; preds = %start
  %_281 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %102 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_281, i64 1, i64 1, i1 zeroext false, i32 0, i32 6)
  store { i32, i32 } %102, { i32, i32 }* %_280, align 4
  br label %bb159

bb163:                                            ; preds = %start
  %_287 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits
  %103 = call { i32, i32 } @_ZN4time5parse12match_digits17had8f265a17072648E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_287, i64 4, i64 4, i1 zeroext false)
  store { i32, i32 } %103, { i32, i32 }* %_286, align 4
  br label %bb164

bb169:                                            ; preds = %start
  %_294 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits_in_range
  %104 = call { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_294, i64 1, i64 2, i1 zeroext false, i32 0, i32 99)
  store { i32, i32 } %104, { i32, i32 }* %_293, align 4
  br label %bb170

bb174:                                            ; preds = %start
  %_301 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_str
  %_300 = call zeroext i1 @_ZN4time5parse9match_str17h93178ac42af8a51fE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_301, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1728 to [0 x i8]*), i64 3)
  br label %bb178

bb191:                                            ; preds = %start
  %_330 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::parse_char
  %105 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_330, i32 90)
  store i96 %105, i96* %46, align 8
  %106 = bitcast %"core::result::Result<(), ParseError>"* %_329 to i8*
  %107 = bitcast i96* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 8 %107, i64 12, i1 false)
  br label %bb192

bb219:                                            ; preds = %start
  %_369 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::parse_char
  %108 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_369, i32 37)
  store i96 %108, i96* %47, align 8
  %109 = bitcast %"core::result::Result<(), ParseError>"* %48 to i8*
  %110 = bitcast i96* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 8 %110, i64 12, i1 false)
  br label %bb220

bb220:                                            ; preds = %bb4, %bb6, %bb9, %bb11, %bb14, %bb16, %bb19, %bb21, %bb24, %bb29, %bb38, %bb43, %bb46, %bb48, %bb51, %bb53, %bb55, %bb60, %bb63, %bb65, %bb68, %bb73, %bb76, %bb79, %bb82, %bb84, %bb87, %bb92, %bb95, %bb97, %bb100, %bb103, %bb104, %bb107, %bb110, %bb113, %bb116, %bb119, %bb126, %bb129, %bb133, %bb136, %bb138, %bb143, %bb144, %bb147, %bb152, %bb157, %bb160, %bb162, %bb165, %bb168, %bb171, %bb173, %bb188, %bb190, %bb180, %bb203, %bb206, %bb211, %bb218, %bb194, %bb219, %bb1
  %111 = bitcast %"core::result::Result<(), ParseError>"* %48 to i96*
  %112 = load i96, i96* %111, align 4
  ret i96 %112

bb192:                                            ; preds = %bb191
; call core::result::Result<T,E>::is_ok
  %_327 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hef8fcceff9b55f2aE"(%"core::result::Result<(), ParseError>"* align 4 dereferenceable(12) %_329)
  br label %bb193

bb193:                                            ; preds = %bb192
  br i1 %_327, label %bb194, label %bb195

bb195:                                            ; preds = %bb193
  %_335 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::parse_char
  %113 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_335, i32 43)
  store i96 %113, i96* %45, align 8
  %114 = bitcast %"core::result::Result<(), ParseError>"* %_334 to i8*
  %115 = bitcast i96* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %114, i8* align 8 %115, i64 12, i1 false)
  br label %bb196

bb194:                                            ; preds = %bb193
  %116 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %117 = getelementptr inbounds %Tm, %Tm* %116, i32 0, i32 9
  store i32 0, i32* %117, align 4
  %118 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %118, align 4
  br label %bb220

bb196:                                            ; preds = %bb195
; call core::result::Result<T,E>::is_ok
  %_332 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hef8fcceff9b55f2aE"(%"core::result::Result<(), ParseError>"* align 4 dereferenceable(12) %_334)
  br label %bb197

bb197:                                            ; preds = %bb196
  br i1 %_332, label %bb198, label %bb199

bb199:                                            ; preds = %bb197
  %_339 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::parse_char
  %119 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_339, i32 45)
  store i96 %119, i96* %44, align 8
  %120 = bitcast %"core::result::Result<(), ParseError>"* %_338 to i8*
  %121 = bitcast i96* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %120, i8* align 8 %121, i64 12, i1 false)
  br label %bb200

bb198:                                            ; preds = %bb197
  store i32 1, i32* %sign, align 4
  br label %bb204

bb204:                                            ; preds = %bb202, %bb198
  %_344 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits
  %122 = call { i32, i32 } @_ZN4time5parse12match_digits17had8f265a17072648E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_344, i64 2, i64 2, i1 zeroext false)
  store { i32, i32 } %122, { i32, i32 }* %_343, align 4
  br label %bb205

bb200:                                            ; preds = %bb199
; call core::result::Result<T,E>::is_ok
  %_336 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hef8fcceff9b55f2aE"(%"core::result::Result<(), ParseError>"* align 4 dereferenceable(12) %_338)
  br label %bb201

bb201:                                            ; preds = %bb200
  br i1 %_336, label %bb202, label %bb203

bb203:                                            ; preds = %bb201
  %123 = bitcast %ParseError* %_340 to i32*
  store i32 9, i32* %123, align 4
  %124 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %125 = bitcast %"core::result::Result<(), ParseError>::Err"* %124 to %ParseError*
  %126 = bitcast %ParseError* %125 to i8*
  %127 = bitcast %ParseError* %_340 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %127, i64 12, i1 false)
  br label %bb220

bb202:                                            ; preds = %bb201
  store i32 -1, i32* %sign, align 4
  br label %bb204

bb205:                                            ; preds = %bb204
  %128 = bitcast { i32, i32 }* %_343 to i32*
  %129 = load i32, i32* %128, align 4, !range !13
  %_345 = zext i32 %129 to i64
  switch i64 %_345, label %bb207 [
    i64 0, label %bb206
    i64 1, label %bb208
  ]

bb207:                                            ; preds = %bb205
  unreachable

bb206:                                            ; preds = %bb205
  %130 = bitcast %ParseError* %_348 to i32*
  store i32 9, i32* %130, align 4
  %131 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %132 = bitcast %"core::result::Result<(), ParseError>::Err"* %131 to %ParseError*
  %133 = bitcast %ParseError* %132 to i8*
  %134 = bitcast %ParseError* %_348 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* align 4 %134, i64 12, i1 false)
  br label %bb220

bb208:                                            ; preds = %bb205
  %135 = bitcast { i32, i32 }* %_343 to %"core::option::Option<i32>::Some"*
  %136 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %135, i32 0, i32 1
  %h = load i32, i32* %136, align 4
  %_350 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::parse_char
  %137 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_350, i32 58)
  store i96 %137, i96* %43, align 8
  %138 = bitcast %"core::result::Result<(), ParseError>"* %_349 to i8*
  %139 = bitcast i96* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* align 8 %139, i64 12, i1 false)
  br label %bb209

bb209:                                            ; preds = %bb208
  %_352 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_digits
  %140 = call { i32, i32 } @_ZN4time5parse12match_digits17had8f265a17072648E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_352, i64 2, i64 2, i1 zeroext false)
  store { i32, i32 } %140, { i32, i32 }* %_351, align 4
  br label %bb210

bb210:                                            ; preds = %bb209
  %141 = bitcast { i32, i32 }* %_351 to i32*
  %142 = load i32, i32* %141, align 4, !range !13
  %_353 = zext i32 %142 to i64
  switch i64 %_353, label %bb212 [
    i64 0, label %bb211
    i64 1, label %bb213
  ]

bb212:                                            ; preds = %bb210
  unreachable

bb211:                                            ; preds = %bb210
  %143 = bitcast %ParseError* %_356 to i32*
  store i32 9, i32* %143, align 4
  %144 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %145 = bitcast %"core::result::Result<(), ParseError>::Err"* %144 to %ParseError*
  %146 = bitcast %ParseError* %145 to i8*
  %147 = bitcast %ParseError* %_356 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %146, i8* align 4 %147, i64 12, i1 false)
  br label %bb220

bb213:                                            ; preds = %bb210
  %148 = bitcast { i32, i32 }* %_351 to %"core::option::Option<i32>::Some"*
  %149 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %148, i32 0, i32 1
  %m = load i32, i32* %149, align 4
  %_357 = load i32, i32* %sign, align 4
  %150 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %h, i32 60)
  %_362.0 = extractvalue { i32, i1 } %150, 0
  %_362.1 = extractvalue { i32, i1 } %150, 1
  %151 = call i1 @llvm.expect.i1(i1 %_362.1, i1 false)
  br i1 %151, label %panic, label %bb214

bb214:                                            ; preds = %bb213
  %152 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %_362.0, i32 60)
  %_363.0 = extractvalue { i32, i1 } %152, 0
  %_363.1 = extractvalue { i32, i1 } %152, 1
  %153 = call i1 @llvm.expect.i1(i1 %_363.1, i1 false)
  br i1 %153, label %panic1, label %bb215

panic:                                            ; preds = %bb213
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1721 to %"core::panic::location::Location"*)) #17
  unreachable

bb215:                                            ; preds = %bb214
  %154 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %m, i32 60)
  %_366.0 = extractvalue { i32, i1 } %154, 0
  %_366.1 = extractvalue { i32, i1 } %154, 1
  %155 = call i1 @llvm.expect.i1(i1 %_366.1, i1 false)
  br i1 %155, label %panic2, label %bb216

panic1:                                           ; preds = %bb214
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1721 to %"core::panic::location::Location"*)) #17
  unreachable

bb216:                                            ; preds = %bb215
  %156 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_363.0, i32 %_366.0)
  %_367.0 = extractvalue { i32, i1 } %156, 0
  %_367.1 = extractvalue { i32, i1 } %156, 1
  %157 = call i1 @llvm.expect.i1(i1 %_367.1, i1 false)
  br i1 %157, label %panic3, label %bb217

panic2:                                           ; preds = %bb215
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1723 to %"core::panic::location::Location"*)) #17
  unreachable

bb217:                                            ; preds = %bb216
  %158 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %_357, i32 %_367.0)
  %_368.0 = extractvalue { i32, i1 } %158, 0
  %_368.1 = extractvalue { i32, i1 } %158, 1
  %159 = call i1 @llvm.expect.i1(i1 %_368.1, i1 false)
  br i1 %159, label %panic4, label %bb218

panic3:                                           ; preds = %bb216
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1725 to %"core::panic::location::Location"*)) #17
  unreachable

bb218:                                            ; preds = %bb217
  %160 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %161 = getelementptr inbounds %Tm, %Tm* %160, i32 0, i32 9
  store i32 %_368.0, i32* %161, align 4
  %162 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %162, align 4
  br label %bb220

panic4:                                           ; preds = %bb217
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1727 to %"core::panic::location::Location"*)) #17
  unreachable

bb178:                                            ; preds = %bb174
  br i1 %_300, label %bb175, label %bb176

bb176:                                            ; preds = %bb178
  %_305 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
; call time::parse::match_str
  %_304 = call zeroext i1 @_ZN4time5parse9match_str17h93178ac42af8a51fE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_305, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1729 to [0 x i8]*), i64 3)
  br label %bb179

bb175:                                            ; preds = %bb178
  store i8 1, i8* %_299, align 1
  br label %bb177

bb177:                                            ; preds = %bb179, %bb175
  %163 = load i8, i8* %_299, align 1, !range !3
  %164 = trunc i8 %163 to i1
  br i1 %164, label %bb180, label %bb181

bb179:                                            ; preds = %bb176
  %165 = zext i1 %_304 to i8
  store i8 %165, i8* %_299, align 1
  br label %bb177

bb181:                                            ; preds = %bb177
  %166 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
  %167 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %166, i32 0, i32 0
  %_310.0 = load [0 x i8]*, [0 x i8]** %167, align 8, !nonnull !4
  %168 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %166, i32 0, i32 1
  %_310.1 = load i64, i64* %168, align 8
; call core::str::<impl str>::char_indices
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hb894091c031c54d8E"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %_309, [0 x i8]* nonnull align 1 %_310.0, i64 %_310.1)
  br label %bb182

bb180:                                            ; preds = %bb177
  %169 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %170 = getelementptr inbounds %Tm, %Tm* %169, i32 0, i32 9
  store i32 0, i32* %170, align 4
  %171 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %171, align 4
  br label %bb220

bb182:                                            ; preds = %bb181
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h3d3c5c14ebd5ceaeE"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %_308, %"core::str::iter::CharIndices"* noalias nocapture dereferenceable(24) %_309)
  br label %bb183

bb183:                                            ; preds = %bb182
  %172 = bitcast %"core::str::iter::CharIndices"* %iter to i8*
  %173 = bitcast %"core::str::iter::CharIndices"* %_308 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 24, i1 false)
  br label %bb184

bb184:                                            ; preds = %bb186, %bb183
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %174 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf2b67b30afdd08c9E"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %iter)
  store { i64, i32 } %174, { i64, i32 }* %_312, align 8
  br label %bb185

bb185:                                            ; preds = %bb184
  %175 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_312, i32 0, i32 1
  %176 = load i32, i32* %175, align 8, !range !2
  %177 = sub i32 %176, 1114112
  %178 = icmp eq i32 %177, 0
  %_315 = select i1 %178, i64 0, i64 1
  switch i64 %_315, label %bb187 [
    i64 0, label %bb188
    i64 1, label %bb186
  ]

bb187:                                            ; preds = %bb185
  unreachable

bb188:                                            ; preds = %bb185
  %179 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
  %180 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %179, i32 0, i32 0
  store [0 x i8]* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc1137, i32 0, i32 0), [0 x i8]** %180, align 8
  %181 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %179, i32 0, i32 1
  store i64 0, i64* %181, align 8
  %182 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %182, align 4
  br label %bb220

bb186:                                            ; preds = %bb185
  %183 = bitcast { i64, i32 }* %_312 to i64*
  %i = load i64, i64* %183, align 8
  %184 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_312, i32 0, i32 1
  %ch5 = load i32, i32* %184, align 8, !range !15
  %185 = icmp eq i32 %ch5, 32
  br i1 %185, label %bb189, label %bb184

bb189:                                            ; preds = %bb186
  %186 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
  %187 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %186, i32 0, i32 0
  %_322.0 = load [0 x i8]*, [0 x i8]** %187, align 8, !nonnull !4
  %188 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %186, i32 0, i32 1
  %_322.1 = load i64, i64* %188, align 8
  store i64 %i, i64* %_323, align 8
  %189 = load i64, i64* %_323, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %190 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc9d8dbceae2eac07E"([0 x i8]* nonnull align 1 %_322.0, i64 %_322.1, i64 %189, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1731 to %"core::panic::location::Location"*))
  %_321.0 = extractvalue { [0 x i8]*, i64 } %190, 0
  %_321.1 = extractvalue { [0 x i8]*, i64 } %190, 1
  br label %bb190

bb190:                                            ; preds = %bb189
  %191 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %s, align 8, !nonnull !4
  %192 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %191, i32 0, i32 0
  store [0 x i8]* %_321.0, [0 x i8]** %192, align 8
  %193 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %191, i32 0, i32 1
  store i64 %_321.1, i64* %193, align 8
  %194 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %194, align 4
  br label %bb220

bb170:                                            ; preds = %bb169
  %195 = bitcast { i32, i32 }* %_293 to i32*
  %196 = load i32, i32* %195, align 4, !range !13
  %_295 = zext i32 %196 to i64
  switch i64 %_295, label %bb172 [
    i64 0, label %bb171
    i64 1, label %bb173
  ]

bb172:                                            ; preds = %bb170
  unreachable

bb171:                                            ; preds = %bb170
  %197 = bitcast %ParseError* %_298 to i32*
  store i32 5, i32* %197, align 4
  %198 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %199 = bitcast %"core::result::Result<(), ParseError>::Err"* %198 to %ParseError*
  %200 = bitcast %ParseError* %199 to i8*
  %201 = bitcast %ParseError* %_298 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %201, i64 12, i1 false)
  br label %bb220

bb173:                                            ; preds = %bb170
  %202 = bitcast { i32, i32 }* %_293 to %"core::option::Option<i32>::Some"*
  %203 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %202, i32 0, i32 1
  %v = load i32, i32* %203, align 4
  %204 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %205 = getelementptr inbounds %Tm, %Tm* %204, i32 0, i32 5
  store i32 %v, i32* %205, align 4
  %206 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %206, align 4
  br label %bb220

bb164:                                            ; preds = %bb163
  %207 = bitcast { i32, i32 }* %_286 to i32*
  %208 = load i32, i32* %207, align 4, !range !13
  %_288 = zext i32 %208 to i64
  switch i64 %_288, label %bb166 [
    i64 0, label %bb165
    i64 1, label %bb167
  ]

bb166:                                            ; preds = %bb164
  unreachable

bb165:                                            ; preds = %bb164
  %209 = bitcast %ParseError* %_292 to i32*
  store i32 5, i32* %209, align 4
  %210 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %211 = bitcast %"core::result::Result<(), ParseError>::Err"* %210 to %ParseError*
  %212 = bitcast %ParseError* %211 to i8*
  %213 = bitcast %ParseError* %_292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* align 4 %213, i64 12, i1 false)
  br label %bb220

bb167:                                            ; preds = %bb164
  %214 = bitcast { i32, i32 }* %_286 to %"core::option::Option<i32>::Some"*
  %215 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %214, i32 0, i32 1
  %v6 = load i32, i32* %215, align 4
  %216 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %v6, i32 1900)
  %_291.0 = extractvalue { i32, i1 } %216, 0
  %_291.1 = extractvalue { i32, i1 } %216, 1
  %217 = call i1 @llvm.expect.i1(i1 %_291.1, i1 false)
  br i1 %217, label %panic7, label %bb168

bb168:                                            ; preds = %bb167
  %218 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %219 = getelementptr inbounds %Tm, %Tm* %218, i32 0, i32 5
  store i32 %_291.0, i32* %219, align 4
  %220 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %220, align 4
  br label %bb220

panic7:                                           ; preds = %bb167
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1734 to %"core::panic::location::Location"*)) #17
  unreachable

bb159:                                            ; preds = %bb158
  %221 = bitcast { i32, i32 }* %_280 to i32*
  %222 = load i32, i32* %221, align 4, !range !13
  %_282 = zext i32 %222 to i64
  switch i64 %_282, label %bb161 [
    i64 0, label %bb160
    i64 1, label %bb162
  ]

bb161:                                            ; preds = %bb159
  unreachable

bb160:                                            ; preds = %bb159
  %223 = bitcast %ParseError* %_285 to i32*
  store i32 6, i32* %223, align 4
  %224 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %225 = bitcast %"core::result::Result<(), ParseError>::Err"* %224 to %ParseError*
  %226 = bitcast %ParseError* %225 to i8*
  %227 = bitcast %ParseError* %_285 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %226, i8* align 4 %227, i64 12, i1 false)
  br label %bb220

bb162:                                            ; preds = %bb159
  %228 = bitcast { i32, i32 }* %_280 to %"core::option::Option<i32>::Some"*
  %229 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %228, i32 0, i32 1
  %v8 = load i32, i32* %229, align 4
  %230 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %231 = getelementptr inbounds %Tm, %Tm* %230, i32 0, i32 6
  store i32 %v8, i32* %231, align 4
  %232 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %232, align 4
  br label %bb220

bb154:                                            ; preds = %bb153
  %233 = bitcast i64** %_270 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %233, align 8
  %234 = bitcast %"core::result::Result<(), ParseError>"* %_267 to i96*
  %235 = load i96, i96* %234, align 4
  %236 = load i64*, i64** %_270, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %237 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h553acefefa6b22c9E"(i96 %235, i64* align 8 dereferenceable(8) %236)
  store i96 %237, i96* %41, align 8
  %238 = bitcast %"core::result::Result<(), ParseError>"* %_266 to i8*
  %239 = bitcast i96* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %238, i8* align 8 %239, i64 12, i1 false)
  br label %bb155

bb155:                                            ; preds = %bb154
  %240 = bitcast { i64*, i64* }* %_272 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %240, align 8
  %241 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_272, i32 0, i32 1
  %242 = bitcast i64** %241 to %Tm***
  store %Tm** %tm, %Tm*** %242, align 8
  %243 = bitcast %"core::result::Result<(), ParseError>"* %_266 to i96*
  %244 = load i96, i96* %243, align 4
  %245 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_272, i32 0, i32 0
  %246 = load i64*, i64** %245, align 8, !nonnull !4
  %247 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_272, i32 0, i32 1
  %248 = load i64*, i64** %247, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %249 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h7d24a2d065f91800E"(i96 %244, i64* align 8 dereferenceable(8) %246, i64* align 8 dereferenceable(8) %248)
  store i96 %249, i96* %40, align 8
  %250 = bitcast %"core::result::Result<(), ParseError>"* %_265 to i8*
  %251 = bitcast i96* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %250, i8* align 8 %251, i64 12, i1 false)
  br label %bb156

bb156:                                            ; preds = %bb155
  %252 = bitcast i64** %_275 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %252, align 8
  %253 = bitcast %"core::result::Result<(), ParseError>"* %_265 to i96*
  %254 = load i96, i96* %253, align 4
  %255 = load i64*, i64** %_275, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %256 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17haf2301c5da35902aE"(i96 %254, i64* align 8 dereferenceable(8) %255)
  store i96 %256, i96* %39, align 8
  %257 = bitcast %"core::result::Result<(), ParseError>"* %_264 to i8*
  %258 = bitcast i96* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %257, i8* align 8 %258, i64 12, i1 false)
  br label %bb157

bb157:                                            ; preds = %bb156
  %259 = bitcast { i64*, i64* }* %_277 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %259, align 8
  %260 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_277, i32 0, i32 1
  %261 = bitcast i64** %260 to %Tm***
  store %Tm** %tm, %Tm*** %261, align 8
  %262 = bitcast %"core::result::Result<(), ParseError>"* %_264 to i96*
  %263 = load i96, i96* %262, align 4
  %264 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_277, i32 0, i32 0
  %265 = load i64*, i64** %264, align 8, !nonnull !4
  %266 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_277, i32 0, i32 1
  %267 = load i64*, i64** %266, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %268 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hdf46c07695dab206E"(i96 %263, i64* align 8 dereferenceable(8) %265, i64* align 8 dereferenceable(8) %267)
  store i96 %268, i96* %38, align 8
  %269 = bitcast %"core::result::Result<(), ParseError>"* %48 to i8*
  %270 = bitcast i96* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %269, i8* align 8 %270, i64 12, i1 false)
  br label %bb220

bb146:                                            ; preds = %bb145
  %271 = bitcast { i32, i32 }* %_257 to i32*
  %272 = load i32, i32* %271, align 4, !range !13
  %_259 = zext i32 %272 to i64
  switch i64 %_259, label %bb148 [
    i64 0, label %bb147
    i64 1, label %bb149
  ]

bb148:                                            ; preds = %bb146
  unreachable

bb147:                                            ; preds = %bb146
  %273 = bitcast %ParseError* %_263 to i32*
  store i32 6, i32* %273, align 4
  %274 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %275 = bitcast %"core::result::Result<(), ParseError>::Err"* %274 to %ParseError*
  %276 = bitcast %ParseError* %275 to i8*
  %277 = bitcast %ParseError* %_263 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %276, i8* align 4 %277, i64 12, i1 false)
  br label %bb220

bb149:                                            ; preds = %bb146
  %278 = bitcast { i32, i32 }* %_257 to %"core::option::Option<i32>::Some"*
  %279 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %278, i32 0, i32 1
  %v9 = load i32, i32* %279, align 4
  %280 = icmp eq i32 %v9, 7
  br i1 %280, label %bb150, label %bb151

bb150:                                            ; preds = %bb149
  store i32 0, i32* %_261, align 4
  br label %bb152

bb151:                                            ; preds = %bb149
  store i32 %v9, i32* %_261, align 4
  br label %bb152

bb152:                                            ; preds = %bb150, %bb151
  %281 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %282 = getelementptr inbounds %Tm, %Tm* %281, i32 0, i32 6
  %283 = load i32, i32* %_261, align 4
  store i32 %283, i32* %282, align 4
  %284 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %284, align 4
  br label %bb220

bb140:                                            ; preds = %bb139
  %285 = bitcast i64** %_246 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %285, align 8
  %286 = bitcast %"core::result::Result<(), ParseError>"* %_243 to i96*
  %287 = load i96, i96* %286, align 4
  %288 = load i64*, i64** %_246, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %289 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17ha582816c9efe2076E"(i96 %287, i64* align 8 dereferenceable(8) %288)
  store i96 %289, i96* %35, align 8
  %290 = bitcast %"core::result::Result<(), ParseError>"* %_242 to i8*
  %291 = bitcast i96* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %290, i8* align 8 %291, i64 12, i1 false)
  br label %bb141

bb141:                                            ; preds = %bb140
  %292 = bitcast { i64*, i64* }* %_248 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %292, align 8
  %293 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_248, i32 0, i32 1
  %294 = bitcast i64** %293 to %Tm***
  store %Tm** %tm, %Tm*** %294, align 8
  %295 = bitcast %"core::result::Result<(), ParseError>"* %_242 to i96*
  %296 = load i96, i96* %295, align 4
  %297 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_248, i32 0, i32 0
  %298 = load i64*, i64** %297, align 8, !nonnull !4
  %299 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_248, i32 0, i32 1
  %300 = load i64*, i64** %299, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %301 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hcffbc5bbda29b168E"(i96 %296, i64* align 8 dereferenceable(8) %298, i64* align 8 dereferenceable(8) %300)
  store i96 %301, i96* %34, align 8
  %302 = bitcast %"core::result::Result<(), ParseError>"* %_241 to i8*
  %303 = bitcast i96* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %302, i8* align 8 %303, i64 12, i1 false)
  br label %bb142

bb142:                                            ; preds = %bb141
  %304 = bitcast i64** %_251 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %304, align 8
  %305 = bitcast %"core::result::Result<(), ParseError>"* %_241 to i96*
  %306 = load i96, i96* %305, align 4
  %307 = load i64*, i64** %_251, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %308 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h6b844ee593df8e64E"(i96 %306, i64* align 8 dereferenceable(8) %307)
  store i96 %308, i96* %33, align 8
  %309 = bitcast %"core::result::Result<(), ParseError>"* %_240 to i8*
  %310 = bitcast i96* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %309, i8* align 8 %310, i64 12, i1 false)
  br label %bb143

bb143:                                            ; preds = %bb142
  %311 = bitcast { i64*, i64* }* %_253 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %311, align 8
  %312 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_253, i32 0, i32 1
  %313 = bitcast i64** %312 to %Tm***
  store %Tm** %tm, %Tm*** %313, align 8
  %314 = bitcast %"core::result::Result<(), ParseError>"* %_240 to i96*
  %315 = load i96, i96* %314, align 4
  %316 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_253, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8, !nonnull !4
  %318 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_253, i32 0, i32 1
  %319 = load i64*, i64** %318, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %320 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h0558b6ecc8d7f66dE"(i96 %315, i64* align 8 dereferenceable(8) %317, i64* align 8 dereferenceable(8) %319)
  store i96 %320, i96* %32, align 8
  %321 = bitcast %"core::result::Result<(), ParseError>"* %48 to i8*
  %322 = bitcast i96* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %321, i8* align 8 %322, i64 12, i1 false)
  br label %bb220

bb135:                                            ; preds = %bb134
  %323 = bitcast { i32, i32 }* %_234 to i32*
  %324 = load i32, i32* %323, align 4, !range !13
  %_236 = zext i32 %324 to i64
  switch i64 %_236, label %bb137 [
    i64 0, label %bb136
    i64 1, label %bb138
  ]

bb137:                                            ; preds = %bb135
  unreachable

bb136:                                            ; preds = %bb135
  %325 = bitcast %ParseError* %_239 to i32*
  store i32 0, i32* %325, align 4
  %326 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %327 = bitcast %"core::result::Result<(), ParseError>::Err"* %326 to %ParseError*
  %328 = bitcast %ParseError* %327 to i8*
  %329 = bitcast %ParseError* %_239 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %328, i8* align 4 %329, i64 12, i1 false)
  br label %bb220

bb138:                                            ; preds = %bb135
  %330 = bitcast { i32, i32 }* %_234 to %"core::option::Option<i32>::Some"*
  %331 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %330, i32 0, i32 1
  %v10 = load i32, i32* %331, align 4
  %332 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %333 = bitcast %Tm* %332 to i32*
  store i32 %v10, i32* %333, align 4
  %334 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %334, align 4
  br label %bb220

bb128:                                            ; preds = %bb127
  %335 = bitcast { i64, i64 }* %_226 to i64*
  %_228 = load i64, i64* %335, align 8, !range !10
  switch i64 %_228, label %bb130 [
    i64 0, label %bb129
    i64 1, label %bb131
  ]

bb130:                                            ; preds = %bb128
  unreachable

bb129:                                            ; preds = %bb128
  %336 = bitcast %ParseError* %_233 to i32*
  store i32 11, i32* %336, align 4
  %337 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %338 = bitcast %"core::result::Result<(), ParseError>::Err"* %337 to %ParseError*
  %339 = bitcast %ParseError* %338 to i8*
  %340 = bitcast %ParseError* %_233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %339, i8* align 4 %340, i64 12, i1 false)
  br label %bb220

bb131:                                            ; preds = %bb128
  %341 = bitcast { i64, i64 }* %_226 to %"core::option::Option<i64>::Some"*
  %342 = getelementptr inbounds %"core::option::Option<i64>::Some", %"core::option::Option<i64>::Some"* %341, i32 0, i32 1
  %v11 = load i64, i64* %342, align 8
; call time::Timespec::new
  %343 = call { i64, i32 } @_ZN4time8Timespec3new17h007dc71609303389E(i64 %v11, i32 0)
  %_231.0 = extractvalue { i64, i32 } %343, 0
  %_231.1 = extractvalue { i64, i32 } %343, 1
  br label %bb132

bb132:                                            ; preds = %bb131
; call time::at_utc
  call void @_ZN4time6at_utc17h0f59319a2b1d97a1E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %_230, i64 %_231.0, i32 %_231.1)
  br label %bb133

bb133:                                            ; preds = %bb132
  %344 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %345 = bitcast %Tm* %344 to i8*
  %346 = bitcast %Tm* %_230 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %345, i8* align 4 %346, i64 44, i1 false)
  %347 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %347, align 4
  br label %bb220

bb121:                                            ; preds = %bb120
  %348 = bitcast i64** %_211 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %348, align 8
  %349 = bitcast %"core::result::Result<(), ParseError>"* %_208 to i96*
  %350 = load i96, i96* %349, align 4
  %351 = load i64*, i64** %_211, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %352 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hd2d1303ae950faecE"(i96 %350, i64* align 8 dereferenceable(8) %351)
  store i96 %352, i96* %30, align 8
  %353 = bitcast %"core::result::Result<(), ParseError>"* %_207 to i8*
  %354 = bitcast i96* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %353, i8* align 8 %354, i64 12, i1 false)
  br label %bb122

bb122:                                            ; preds = %bb121
  %355 = bitcast { i64*, i64* }* %_213 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %355, align 8
  %356 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_213, i32 0, i32 1
  %357 = bitcast i64** %356 to %Tm***
  store %Tm** %tm, %Tm*** %357, align 8
  %358 = bitcast %"core::result::Result<(), ParseError>"* %_207 to i96*
  %359 = load i96, i96* %358, align 4
  %360 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_213, i32 0, i32 0
  %361 = load i64*, i64** %360, align 8, !nonnull !4
  %362 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_213, i32 0, i32 1
  %363 = load i64*, i64** %362, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %364 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h9848281e4df8f721E"(i96 %359, i64* align 8 dereferenceable(8) %361, i64* align 8 dereferenceable(8) %363)
  store i96 %364, i96* %29, align 8
  %365 = bitcast %"core::result::Result<(), ParseError>"* %_206 to i8*
  %366 = bitcast i96* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %365, i8* align 8 %366, i64 12, i1 false)
  br label %bb123

bb123:                                            ; preds = %bb122
  %367 = bitcast i64** %_216 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %367, align 8
  %368 = bitcast %"core::result::Result<(), ParseError>"* %_206 to i96*
  %369 = load i96, i96* %368, align 4
  %370 = load i64*, i64** %_216, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %371 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h0c3cf7627cd70539E"(i96 %369, i64* align 8 dereferenceable(8) %370)
  store i96 %371, i96* %28, align 8
  %372 = bitcast %"core::result::Result<(), ParseError>"* %_205 to i8*
  %373 = bitcast i96* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %372, i8* align 8 %373, i64 12, i1 false)
  br label %bb124

bb124:                                            ; preds = %bb123
  %374 = bitcast { i64*, i64* }* %_218 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %374, align 8
  %375 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_218, i32 0, i32 1
  %376 = bitcast i64** %375 to %Tm***
  store %Tm** %tm, %Tm*** %376, align 8
  %377 = bitcast %"core::result::Result<(), ParseError>"* %_205 to i96*
  %378 = load i96, i96* %377, align 4
  %379 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_218, i32 0, i32 0
  %380 = load i64*, i64** %379, align 8, !nonnull !4
  %381 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_218, i32 0, i32 1
  %382 = load i64*, i64** %381, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %383 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h8100be6a0601dbfbE"(i96 %378, i64* align 8 dereferenceable(8) %380, i64* align 8 dereferenceable(8) %382)
  store i96 %383, i96* %27, align 8
  %384 = bitcast %"core::result::Result<(), ParseError>"* %_204 to i8*
  %385 = bitcast i96* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %384, i8* align 8 %385, i64 12, i1 false)
  br label %bb125

bb125:                                            ; preds = %bb124
  %386 = bitcast i64** %_221 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %386, align 8
  %387 = bitcast %"core::result::Result<(), ParseError>"* %_204 to i96*
  %388 = load i96, i96* %387, align 4
  %389 = load i64*, i64** %_221, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %390 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17he9eb24d66d36173eE"(i96 %388, i64* align 8 dereferenceable(8) %389)
  store i96 %390, i96* %26, align 8
  %391 = bitcast %"core::result::Result<(), ParseError>"* %_203 to i8*
  %392 = bitcast i96* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %391, i8* align 8 %392, i64 12, i1 false)
  br label %bb126

bb126:                                            ; preds = %bb125
  %393 = bitcast { i64*, i64* }* %_223 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %393, align 8
  %394 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_223, i32 0, i32 1
  %395 = bitcast i64** %394 to %Tm***
  store %Tm** %tm, %Tm*** %395, align 8
  %396 = bitcast %"core::result::Result<(), ParseError>"* %_203 to i96*
  %397 = load i96, i96* %396, align 4
  %398 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_223, i32 0, i32 0
  %399 = load i64*, i64** %398, align 8, !nonnull !4
  %400 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_223, i32 0, i32 1
  %401 = load i64*, i64** %400, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %402 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17ha55731e76f3ae3f9E"(i96 %397, i64* align 8 dereferenceable(8) %399, i64* align 8 dereferenceable(8) %401)
  store i96 %402, i96* %25, align 8
  %403 = bitcast %"core::result::Result<(), ParseError>"* %48 to i8*
  %404 = bitcast i96* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %403, i8* align 8 %404, i64 12, i1 false)
  br label %bb220

bb118:                                            ; preds = %bb117
  %405 = bitcast i64** %_198 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %405, align 8
  %406 = bitcast %"core::result::Result<(), ParseError>"* %_195 to i96*
  %407 = load i96, i96* %406, align 4
  %408 = load i64*, i64** %_198, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %409 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h3a4c0b750ba517c9E"(i96 %407, i64* align 8 dereferenceable(8) %408)
  store i96 %409, i96* %23, align 8
  %410 = bitcast %"core::result::Result<(), ParseError>"* %_194 to i8*
  %411 = bitcast i96* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %410, i8* align 8 %411, i64 12, i1 false)
  br label %bb119

bb119:                                            ; preds = %bb118
  %412 = bitcast { i64*, i64* }* %_200 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %412, align 8
  %413 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_200, i32 0, i32 1
  %414 = bitcast i64** %413 to %Tm***
  store %Tm** %tm, %Tm*** %414, align 8
  %415 = bitcast %"core::result::Result<(), ParseError>"* %_194 to i96*
  %416 = load i96, i96* %415, align 4
  %417 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_200, i32 0, i32 0
  %418 = load i64*, i64** %417, align 8, !nonnull !4
  %419 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_200, i32 0, i32 1
  %420 = load i64*, i64** %419, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %421 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hcd5ae566b44af5ecE"(i96 %416, i64* align 8 dereferenceable(8) %418, i64* align 8 dereferenceable(8) %420)
  store i96 %421, i96* %22, align 8
  %422 = bitcast %"core::result::Result<(), ParseError>"* %48 to i8*
  %423 = bitcast i96* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %422, i8* align 8 %423, i64 12, i1 false)
  br label %bb220

bb112:                                            ; preds = %bb111
  %424 = bitcast { i32, i32 }* %_184 to i32*
  %425 = load i32, i32* %424, align 4, !range !13
  %_189 = zext i32 %425 to i64
  switch i64 %_189, label %bb114 [
    i64 0, label %bb113
    i64 1, label %bb115
  ]

bb114:                                            ; preds = %bb112
  unreachable

bb113:                                            ; preds = %bb112
  %426 = bitcast %ParseError* %_193 to i32*
  store i32 2, i32* %426, align 4
  %427 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %428 = bitcast %"core::result::Result<(), ParseError>::Err"* %427 to %ParseError*
  %429 = bitcast %ParseError* %428 to i8*
  %430 = bitcast %ParseError* %_193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %429, i8* align 4 %430, i64 12, i1 false)
  br label %bb220

bb115:                                            ; preds = %bb112
  %431 = bitcast { i32, i32 }* %_184 to %"core::option::Option<i32>::Some"*
  %432 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %431, i32 0, i32 1
  %v12 = load i32, i32* %432, align 4
  %433 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %434 = getelementptr inbounds %Tm, %Tm* %433, i32 0, i32 2
  %435 = load i32, i32* %434, align 4
  %436 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %435, i32 %v12)
  %_192.0 = extractvalue { i32, i1 } %436, 0
  %_192.1 = extractvalue { i32, i1 } %436, 1
  %437 = call i1 @llvm.expect.i1(i1 %_192.1, i1 false)
  br i1 %437, label %panic13, label %bb116

bb116:                                            ; preds = %bb115
  %438 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %439 = getelementptr inbounds %Tm, %Tm* %438, i32 0, i32 2
  store i32 %_192.0, i32* %439, align 4
  %440 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %440, align 4
  br label %bb220

panic13:                                          ; preds = %bb115
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1736 to %"core::panic::location::Location"*)) #17
  unreachable

bb106:                                            ; preds = %bb105
  %441 = bitcast { i32, i32 }* %_174 to i32*
  %442 = load i32, i32* %441, align 4, !range !13
  %_179 = zext i32 %442 to i64
  switch i64 %_179, label %bb108 [
    i64 0, label %bb107
    i64 1, label %bb109
  ]

bb108:                                            ; preds = %bb106
  unreachable

bb107:                                            ; preds = %bb106
  %443 = bitcast %ParseError* %_183 to i32*
  store i32 2, i32* %443, align 4
  %444 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %445 = bitcast %"core::result::Result<(), ParseError>::Err"* %444 to %ParseError*
  %446 = bitcast %ParseError* %445 to i8*
  %447 = bitcast %ParseError* %_183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %446, i8* align 4 %447, i64 12, i1 false)
  br label %bb220

bb109:                                            ; preds = %bb106
  %448 = bitcast { i32, i32 }* %_174 to %"core::option::Option<i32>::Some"*
  %449 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %448, i32 0, i32 1
  %v14 = load i32, i32* %449, align 4
  %450 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %451 = getelementptr inbounds %Tm, %Tm* %450, i32 0, i32 2
  %452 = load i32, i32* %451, align 4
  %453 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %452, i32 %v14)
  %_182.0 = extractvalue { i32, i1 } %453, 0
  %_182.1 = extractvalue { i32, i1 } %453, 1
  %454 = call i1 @llvm.expect.i1(i1 %_182.1, i1 false)
  br i1 %454, label %panic15, label %bb110

bb110:                                            ; preds = %bb109
  %455 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %456 = getelementptr inbounds %Tm, %Tm* %455, i32 0, i32 2
  store i32 %_182.0, i32* %456, align 4
  %457 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %457, align 4
  br label %bb220

panic15:                                          ; preds = %bb109
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1738 to %"core::panic::location::Location"*)) #17
  unreachable

bb99:                                             ; preds = %bb98
  %458 = bitcast { i32, i32 }* %_166 to i32*
  %459 = load i32, i32* %458, align 4, !range !13
  %_168 = zext i32 %459 to i64
  switch i64 %_168, label %bb101 [
    i64 0, label %bb100
    i64 1, label %bb102
  ]

bb101:                                            ; preds = %bb99
  unreachable

bb100:                                            ; preds = %bb99
  %460 = bitcast %ParseError* %_172 to i32*
  store i32 4, i32* %460, align 4
  %461 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %462 = bitcast %"core::result::Result<(), ParseError>::Err"* %461 to %ParseError*
  %463 = bitcast %ParseError* %462 to i8*
  %464 = bitcast %ParseError* %_172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %463, i8* align 4 %464, i64 12, i1 false)
  br label %bb220

bb102:                                            ; preds = %bb99
  %465 = bitcast { i32, i32 }* %_166 to %"core::option::Option<i32>::Some"*
  %466 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %465, i32 0, i32 1
  %v16 = load i32, i32* %466, align 4
  %467 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %v16, i32 1)
  %_171.0 = extractvalue { i32, i1 } %467, 0
  %_171.1 = extractvalue { i32, i1 } %467, 1
  %468 = call i1 @llvm.expect.i1(i1 %_171.1, i1 false)
  br i1 %468, label %panic17, label %bb103

bb103:                                            ; preds = %bb102
  %469 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %470 = getelementptr inbounds %Tm, %Tm* %469, i32 0, i32 4
  store i32 %_171.0, i32* %470, align 4
  %471 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %471, align 4
  br label %bb220

panic17:                                          ; preds = %bb102
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1740 to %"core::panic::location::Location"*)) #17
  unreachable

bb94:                                             ; preds = %bb93
  %472 = bitcast { i32, i32 }* %_160 to i32*
  %473 = load i32, i32* %472, align 4, !range !13
  %_162 = zext i32 %473 to i64
  switch i64 %_162, label %bb96 [
    i64 0, label %bb95
    i64 1, label %bb97
  ]

bb96:                                             ; preds = %bb94
  unreachable

bb95:                                             ; preds = %bb94
  %474 = bitcast %ParseError* %_165 to i32*
  store i32 1, i32* %474, align 4
  %475 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %476 = bitcast %"core::result::Result<(), ParseError>::Err"* %475 to %ParseError*
  %477 = bitcast %ParseError* %476 to i8*
  %478 = bitcast %ParseError* %_165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %477, i8* align 4 %478, i64 12, i1 false)
  br label %bb220

bb97:                                             ; preds = %bb94
  %479 = bitcast { i32, i32 }* %_160 to %"core::option::Option<i32>::Some"*
  %480 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %479, i32 0, i32 1
  %v18 = load i32, i32* %480, align 4
  %481 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %482 = getelementptr inbounds %Tm, %Tm* %481, i32 0, i32 1
  store i32 %v18, i32* %482, align 4
  %483 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %483, align 4
  br label %bb220

bb86:                                             ; preds = %bb85
  %484 = bitcast { i32, i32 }* %_153 to i32*
  %485 = load i32, i32* %484, align 4, !range !13
  %_155 = zext i32 %485 to i64
  switch i64 %_155, label %bb88 [
    i64 0, label %bb87
    i64 1, label %bb89
  ]

bb88:                                             ; preds = %bb86
  unreachable

bb87:                                             ; preds = %bb86
  %486 = bitcast %ParseError* %_159 to i32*
  store i32 2, i32* %486, align 4
  %487 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %488 = bitcast %"core::result::Result<(), ParseError>::Err"* %487 to %ParseError*
  %489 = bitcast %ParseError* %488 to i8*
  %490 = bitcast %ParseError* %_159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %489, i8* align 4 %490, i64 12, i1 false)
  br label %bb220

bb89:                                             ; preds = %bb86
  %491 = bitcast { i32, i32 }* %_153 to %"core::option::Option<i32>::Some"*
  %492 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %491, i32 0, i32 1
  %v19 = load i32, i32* %492, align 4
  %493 = icmp eq i32 %v19, 12
  br i1 %493, label %bb90, label %bb91

bb90:                                             ; preds = %bb89
  store i32 0, i32* %_157, align 4
  br label %bb92

bb91:                                             ; preds = %bb89
  store i32 %v19, i32* %_157, align 4
  br label %bb92

bb92:                                             ; preds = %bb90, %bb91
  %494 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %495 = getelementptr inbounds %Tm, %Tm* %494, i32 0, i32 2
  %496 = load i32, i32* %_157, align 4
  store i32 %496, i32* %495, align 4
  %497 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %497, align 4
  br label %bb220

bb81:                                             ; preds = %bb80
  %498 = bitcast { i32, i32 }* %_147 to i32*
  %499 = load i32, i32* %498, align 4, !range !13
  %_149 = zext i32 %499 to i64
  switch i64 %_149, label %bb83 [
    i64 0, label %bb82
    i64 1, label %bb84
  ]

bb83:                                             ; preds = %bb81
  unreachable

bb82:                                             ; preds = %bb81
  %500 = bitcast %ParseError* %_152 to i32*
  store i32 2, i32* %500, align 4
  %501 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %502 = bitcast %"core::result::Result<(), ParseError>::Err"* %501 to %ParseError*
  %503 = bitcast %ParseError* %502 to i8*
  %504 = bitcast %ParseError* %_152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %503, i8* align 4 %504, i64 12, i1 false)
  br label %bb220

bb84:                                             ; preds = %bb81
  %505 = bitcast { i32, i32 }* %_147 to %"core::option::Option<i32>::Some"*
  %506 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %505, i32 0, i32 1
  %v20 = load i32, i32* %506, align 4
  %507 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %508 = getelementptr inbounds %Tm, %Tm* %507, i32 0, i32 2
  store i32 %v20, i32* %508, align 4
  %509 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %509, align 4
  br label %bb220

bb75:                                             ; preds = %bb74
  %510 = bitcast { i32, i32 }* %_140 to i32*
  %511 = load i32, i32* %510, align 4, !range !13
  %_142 = zext i32 %511 to i64
  switch i64 %_142, label %bb77 [
    i64 0, label %bb76
    i64 1, label %bb78
  ]

bb77:                                             ; preds = %bb75
  unreachable

bb76:                                             ; preds = %bb75
  %512 = bitcast %ParseError* %_146 to i32*
  store i32 8, i32* %512, align 4
  %513 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %514 = bitcast %"core::result::Result<(), ParseError>::Err"* %513 to %ParseError*
  %515 = bitcast %ParseError* %514 to i8*
  %516 = bitcast %ParseError* %_146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %515, i8* align 4 %516, i64 12, i1 false)
  br label %bb220

bb78:                                             ; preds = %bb75
  %517 = bitcast { i32, i32 }* %_140 to %"core::option::Option<i32>::Some"*
  %518 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %517, i32 0, i32 1
  %v21 = load i32, i32* %518, align 4
  %519 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %v21, i32 1)
  %_145.0 = extractvalue { i32, i1 } %519, 0
  %_145.1 = extractvalue { i32, i1 } %519, 1
  %520 = call i1 @llvm.expect.i1(i1 %_145.1, i1 false)
  br i1 %520, label %panic22, label %bb79

bb79:                                             ; preds = %bb78
  %521 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %522 = getelementptr inbounds %Tm, %Tm* %521, i32 0, i32 7
  store i32 %_145.0, i32* %522, align 4
  %523 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %523, align 4
  br label %bb220

panic22:                                          ; preds = %bb78
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1742 to %"core::panic::location::Location"*)) #17
  unreachable

bb67:                                             ; preds = %bb66
  %524 = bitcast { i32, i32 }* %_133 to i32*
  %525 = load i32, i32* %524, align 4, !range !13
  %_135 = zext i32 %525 to i64
  switch i64 %_135, label %bb69 [
    i64 0, label %bb68
    i64 1, label %bb70
  ]

bb69:                                             ; preds = %bb67
  unreachable

bb68:                                             ; preds = %bb67
  %526 = bitcast %ParseError* %_139 to i32*
  store i32 2, i32* %526, align 4
  %527 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %528 = bitcast %"core::result::Result<(), ParseError>::Err"* %527 to %ParseError*
  %529 = bitcast %ParseError* %528 to i8*
  %530 = bitcast %ParseError* %_139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %529, i8* align 4 %530, i64 12, i1 false)
  br label %bb220

bb70:                                             ; preds = %bb67
  %531 = bitcast { i32, i32 }* %_133 to %"core::option::Option<i32>::Some"*
  %532 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %531, i32 0, i32 1
  %v23 = load i32, i32* %532, align 4
  %533 = icmp eq i32 %v23, 12
  br i1 %533, label %bb71, label %bb72

bb71:                                             ; preds = %bb70
  store i32 0, i32* %_137, align 4
  br label %bb73

bb72:                                             ; preds = %bb70
  store i32 %v23, i32* %_137, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %bb72
  %534 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %535 = getelementptr inbounds %Tm, %Tm* %534, i32 0, i32 2
  %536 = load i32, i32* %_137, align 4
  store i32 %536, i32* %535, align 4
  %537 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %537, align 4
  br label %bb220

bb62:                                             ; preds = %bb61
  %538 = bitcast { i32, i32 }* %_127 to i32*
  %539 = load i32, i32* %538, align 4, !range !13
  %_129 = zext i32 %539 to i64
  switch i64 %_129, label %bb64 [
    i64 0, label %bb63
    i64 1, label %bb65
  ]

bb64:                                             ; preds = %bb62
  unreachable

bb63:                                             ; preds = %bb62
  %540 = bitcast %ParseError* %_132 to i32*
  store i32 2, i32* %540, align 4
  %541 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %542 = bitcast %"core::result::Result<(), ParseError>::Err"* %541 to %ParseError*
  %543 = bitcast %ParseError* %542 to i8*
  %544 = bitcast %ParseError* %_132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %543, i8* align 4 %544, i64 12, i1 false)
  br label %bb220

bb65:                                             ; preds = %bb62
  %545 = bitcast { i32, i32 }* %_127 to %"core::option::Option<i32>::Some"*
  %546 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %545, i32 0, i32 1
  %v24 = load i32, i32* %546, align 4
  %547 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %548 = getelementptr inbounds %Tm, %Tm* %547, i32 0, i32 2
  store i32 %v24, i32* %548, align 4
  %549 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %549, align 4
  br label %bb220

bb57:                                             ; preds = %bb56
  %550 = bitcast i64** %_117 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %550, align 8
  %551 = bitcast %"core::result::Result<(), ParseError>"* %_114 to i96*
  %552 = load i96, i96* %551, align 4
  %553 = load i64*, i64** %_117, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %554 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hfe0a00998e0b6819E"(i96 %552, i64* align 8 dereferenceable(8) %553)
  store i96 %554, i96* %19, align 8
  %555 = bitcast %"core::result::Result<(), ParseError>"* %_113 to i8*
  %556 = bitcast i96* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %555, i8* align 8 %556, i64 12, i1 false)
  br label %bb58

bb58:                                             ; preds = %bb57
  %557 = bitcast { i64*, i64* }* %_119 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %557, align 8
  %558 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_119, i32 0, i32 1
  %559 = bitcast i64** %558 to %Tm***
  store %Tm** %tm, %Tm*** %559, align 8
  %560 = bitcast %"core::result::Result<(), ParseError>"* %_113 to i96*
  %561 = load i96, i96* %560, align 4
  %562 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_119, i32 0, i32 0
  %563 = load i64*, i64** %562, align 8, !nonnull !4
  %564 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_119, i32 0, i32 1
  %565 = load i64*, i64** %564, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %566 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17he784d35e5813268fE"(i96 %561, i64* align 8 dereferenceable(8) %563, i64* align 8 dereferenceable(8) %565)
  store i96 %566, i96* %18, align 8
  %567 = bitcast %"core::result::Result<(), ParseError>"* %_112 to i8*
  %568 = bitcast i96* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %567, i8* align 8 %568, i64 12, i1 false)
  br label %bb59

bb59:                                             ; preds = %bb58
  %569 = bitcast i64** %_122 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %569, align 8
  %570 = bitcast %"core::result::Result<(), ParseError>"* %_112 to i96*
  %571 = load i96, i96* %570, align 4
  %572 = load i64*, i64** %_122, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %573 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h452184aec0b22c82E"(i96 %571, i64* align 8 dereferenceable(8) %572)
  store i96 %573, i96* %17, align 8
  %574 = bitcast %"core::result::Result<(), ParseError>"* %_111 to i8*
  %575 = bitcast i96* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %574, i8* align 8 %575, i64 12, i1 false)
  br label %bb60

bb60:                                             ; preds = %bb59
  %576 = bitcast { i64*, i64* }* %_124 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %576, align 8
  %577 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_124, i32 0, i32 1
  %578 = bitcast i64** %577 to %Tm***
  store %Tm** %tm, %Tm*** %578, align 8
  %579 = bitcast %"core::result::Result<(), ParseError>"* %_111 to i96*
  %580 = load i96, i96* %579, align 4
  %581 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_124, i32 0, i32 0
  %582 = load i64*, i64** %581, align 8, !nonnull !4
  %583 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_124, i32 0, i32 1
  %584 = load i64*, i64** %583, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %585 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h4e7f3463924622b4E"(i96 %580, i64* align 8 dereferenceable(8) %582, i64* align 8 dereferenceable(8) %584)
  store i96 %585, i96* %16, align 8
  %586 = bitcast %"core::result::Result<(), ParseError>"* %48 to i8*
  %587 = bitcast i96* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %586, i8* align 8 %587, i64 12, i1 false)
  br label %bb220

bb55:                                             ; preds = %bb54
  %588 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %589 = getelementptr inbounds %Tm, %Tm* %588, i32 0, i32 10
  store i32 %_109, i32* %589, align 4
  %590 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %590, align 4
  br label %bb220

bb50:                                             ; preds = %bb49
  %591 = bitcast { i32, i32 }* %_103 to i32*
  %592 = load i32, i32* %591, align 4, !range !13
  %_105 = zext i32 %592 to i64
  switch i64 %_105, label %bb52 [
    i64 0, label %bb51
    i64 1, label %bb53
  ]

bb52:                                             ; preds = %bb50
  unreachable

bb51:                                             ; preds = %bb50
  %593 = bitcast %ParseError* %_108 to i32*
  store i32 7, i32* %593, align 4
  %594 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %595 = bitcast %"core::result::Result<(), ParseError>::Err"* %594 to %ParseError*
  %596 = bitcast %ParseError* %595 to i8*
  %597 = bitcast %ParseError* %_108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %596, i8* align 4 %597, i64 12, i1 false)
  br label %bb220

bb53:                                             ; preds = %bb50
  %598 = bitcast { i32, i32 }* %_103 to %"core::option::Option<i32>::Some"*
  %599 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %598, i32 0, i32 1
  %v25 = load i32, i32* %599, align 4
  %600 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %601 = getelementptr inbounds %Tm, %Tm* %600, i32 0, i32 3
  store i32 %v25, i32* %601, align 4
  %602 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %602, align 4
  br label %bb220

bb45:                                             ; preds = %bb44
  %603 = bitcast { i32, i32 }* %_97 to i32*
  %604 = load i32, i32* %603, align 4, !range !13
  %_99 = zext i32 %604 to i64
  switch i64 %_99, label %bb47 [
    i64 0, label %bb46
    i64 1, label %bb48
  ]

bb47:                                             ; preds = %bb45
  unreachable

bb46:                                             ; preds = %bb45
  %605 = bitcast %ParseError* %_102 to i32*
  store i32 7, i32* %605, align 4
  %606 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %607 = bitcast %"core::result::Result<(), ParseError>::Err"* %606 to %ParseError*
  %608 = bitcast %ParseError* %607 to i8*
  %609 = bitcast %ParseError* %_102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %608, i8* align 4 %609, i64 12, i1 false)
  br label %bb220

bb48:                                             ; preds = %bb45
  %610 = bitcast { i32, i32 }* %_97 to %"core::option::Option<i32>::Some"*
  %611 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %610, i32 0, i32 1
  %v26 = load i32, i32* %611, align 4
  %612 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %613 = getelementptr inbounds %Tm, %Tm* %612, i32 0, i32 3
  store i32 %v26, i32* %613, align 4
  %614 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %614, align 4
  br label %bb220

bb40:                                             ; preds = %bb39
  %615 = bitcast i64** %_87 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %615, align 8
  %616 = bitcast %"core::result::Result<(), ParseError>"* %_84 to i96*
  %617 = load i96, i96* %616, align 4
  %618 = load i64*, i64** %_87, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %619 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17ha30cce3eb1a405dbE"(i96 %617, i64* align 8 dereferenceable(8) %618)
  store i96 %619, i96* %14, align 8
  %620 = bitcast %"core::result::Result<(), ParseError>"* %_83 to i8*
  %621 = bitcast i96* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %620, i8* align 8 %621, i64 12, i1 false)
  br label %bb41

bb41:                                             ; preds = %bb40
  %622 = bitcast { i64*, i64* }* %_89 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %622, align 8
  %623 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_89, i32 0, i32 1
  %624 = bitcast i64** %623 to %Tm***
  store %Tm** %tm, %Tm*** %624, align 8
  %625 = bitcast %"core::result::Result<(), ParseError>"* %_83 to i96*
  %626 = load i96, i96* %625, align 4
  %627 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_89, i32 0, i32 0
  %628 = load i64*, i64** %627, align 8, !nonnull !4
  %629 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_89, i32 0, i32 1
  %630 = load i64*, i64** %629, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %631 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h8810976e3a1ce661E"(i96 %626, i64* align 8 dereferenceable(8) %628, i64* align 8 dereferenceable(8) %630)
  store i96 %631, i96* %13, align 8
  %632 = bitcast %"core::result::Result<(), ParseError>"* %_82 to i8*
  %633 = bitcast i96* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %632, i8* align 8 %633, i64 12, i1 false)
  br label %bb42

bb42:                                             ; preds = %bb41
  %634 = bitcast i64** %_92 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %634, align 8
  %635 = bitcast %"core::result::Result<(), ParseError>"* %_82 to i96*
  %636 = load i96, i96* %635, align 4
  %637 = load i64*, i64** %_92, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %638 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h059a94856410ab5cE"(i96 %636, i64* align 8 dereferenceable(8) %637)
  store i96 %638, i96* %12, align 8
  %639 = bitcast %"core::result::Result<(), ParseError>"* %_81 to i8*
  %640 = bitcast i96* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %639, i8* align 8 %640, i64 12, i1 false)
  br label %bb43

bb43:                                             ; preds = %bb42
  %641 = bitcast { i64*, i64* }* %_94 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %641, align 8
  %642 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_94, i32 0, i32 1
  %643 = bitcast i64** %642 to %Tm***
  store %Tm** %tm, %Tm*** %643, align 8
  %644 = bitcast %"core::result::Result<(), ParseError>"* %_81 to i96*
  %645 = load i96, i96* %644, align 4
  %646 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_94, i32 0, i32 0
  %647 = load i64*, i64** %646, align 8, !nonnull !4
  %648 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_94, i32 0, i32 1
  %649 = load i64*, i64** %648, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %650 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h769e5ea3aef35459E"(i96 %645, i64* align 8 dereferenceable(8) %647, i64* align 8 dereferenceable(8) %649)
  store i96 %650, i96* %11, align 8
  %651 = bitcast %"core::result::Result<(), ParseError>"* %48 to i8*
  %652 = bitcast i96* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %651, i8* align 8 %652, i64 12, i1 false)
  br label %bb220

bb31:                                             ; preds = %bb30
  %653 = bitcast i64** %_61 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %653, align 8
  %654 = bitcast %"core::result::Result<(), ParseError>"* %_58 to i96*
  %655 = load i96, i96* %654, align 4
  %656 = load i64*, i64** %_61, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %657 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hee0b9428efe6bf91E"(i96 %655, i64* align 8 dereferenceable(8) %656)
  store i96 %657, i96* %9, align 8
  %658 = bitcast %"core::result::Result<(), ParseError>"* %_57 to i8*
  %659 = bitcast i96* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %658, i8* align 8 %659, i64 12, i1 false)
  br label %bb32

bb32:                                             ; preds = %bb31
  %660 = bitcast { i64*, i64* }* %_63 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %660, align 8
  %661 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_63, i32 0, i32 1
  %662 = bitcast i64** %661 to %Tm***
  store %Tm** %tm, %Tm*** %662, align 8
  %663 = bitcast %"core::result::Result<(), ParseError>"* %_57 to i96*
  %664 = load i96, i96* %663, align 4
  %665 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_63, i32 0, i32 0
  %666 = load i64*, i64** %665, align 8, !nonnull !4
  %667 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_63, i32 0, i32 1
  %668 = load i64*, i64** %667, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %669 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h3149508228a2d775E"(i96 %664, i64* align 8 dereferenceable(8) %666, i64* align 8 dereferenceable(8) %668)
  store i96 %669, i96* %8, align 8
  %670 = bitcast %"core::result::Result<(), ParseError>"* %_56 to i8*
  %671 = bitcast i96* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %670, i8* align 8 %671, i64 12, i1 false)
  br label %bb33

bb33:                                             ; preds = %bb32
  %672 = bitcast i64** %_66 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %672, align 8
  %673 = bitcast %"core::result::Result<(), ParseError>"* %_56 to i96*
  %674 = load i96, i96* %673, align 4
  %675 = load i64*, i64** %_66, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %676 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hf1886cdfe2fb415aE"(i96 %674, i64* align 8 dereferenceable(8) %675)
  store i96 %676, i96* %7, align 8
  %677 = bitcast %"core::result::Result<(), ParseError>"* %_55 to i8*
  %678 = bitcast i96* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %677, i8* align 8 %678, i64 12, i1 false)
  br label %bb34

bb34:                                             ; preds = %bb33
  %679 = bitcast { i64*, i64* }* %_68 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %679, align 8
  %680 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_68, i32 0, i32 1
  %681 = bitcast i64** %680 to %Tm***
  store %Tm** %tm, %Tm*** %681, align 8
  %682 = bitcast %"core::result::Result<(), ParseError>"* %_55 to i96*
  %683 = load i96, i96* %682, align 4
  %684 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_68, i32 0, i32 0
  %685 = load i64*, i64** %684, align 8, !nonnull !4
  %686 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_68, i32 0, i32 1
  %687 = load i64*, i64** %686, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %688 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hdee17e7e164c3ad0E"(i96 %683, i64* align 8 dereferenceable(8) %685, i64* align 8 dereferenceable(8) %687)
  store i96 %688, i96* %6, align 8
  %689 = bitcast %"core::result::Result<(), ParseError>"* %_54 to i8*
  %690 = bitcast i96* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %689, i8* align 8 %690, i64 12, i1 false)
  br label %bb35

bb35:                                             ; preds = %bb34
  %691 = bitcast i64** %_71 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %691, align 8
  %692 = bitcast %"core::result::Result<(), ParseError>"* %_54 to i96*
  %693 = load i96, i96* %692, align 4
  %694 = load i64*, i64** %_71, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %695 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hcdc27219f9118a0eE"(i96 %693, i64* align 8 dereferenceable(8) %694)
  store i96 %695, i96* %5, align 8
  %696 = bitcast %"core::result::Result<(), ParseError>"* %_53 to i8*
  %697 = bitcast i96* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %696, i8* align 8 %697, i64 12, i1 false)
  br label %bb36

bb36:                                             ; preds = %bb35
  %698 = bitcast { i64*, i64* }* %_73 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %698, align 8
  %699 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_73, i32 0, i32 1
  %700 = bitcast i64** %699 to %Tm***
  store %Tm** %tm, %Tm*** %700, align 8
  %701 = bitcast %"core::result::Result<(), ParseError>"* %_53 to i96*
  %702 = load i96, i96* %701, align 4
  %703 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_73, i32 0, i32 0
  %704 = load i64*, i64** %703, align 8, !nonnull !4
  %705 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_73, i32 0, i32 1
  %706 = load i64*, i64** %705, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %707 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17hd17419fafa849f15E"(i96 %702, i64* align 8 dereferenceable(8) %704, i64* align 8 dereferenceable(8) %706)
  store i96 %707, i96* %4, align 8
  %708 = bitcast %"core::result::Result<(), ParseError>"* %_52 to i8*
  %709 = bitcast i96* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %708, i8* align 8 %709, i64 12, i1 false)
  br label %bb37

bb37:                                             ; preds = %bb36
  %710 = bitcast i64** %_76 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %710, align 8
  %711 = bitcast %"core::result::Result<(), ParseError>"* %_52 to i96*
  %712 = load i96, i96* %711, align 4
  %713 = load i64*, i64** %_76, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %714 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h25453981dba40c0fE"(i96 %712, i64* align 8 dereferenceable(8) %713)
  store i96 %714, i96* %3, align 8
  %715 = bitcast %"core::result::Result<(), ParseError>"* %_51 to i8*
  %716 = bitcast i96* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %715, i8* align 8 %716, i64 12, i1 false)
  br label %bb38

bb38:                                             ; preds = %bb37
  %717 = bitcast { i64*, i64* }* %_78 to { [0 x i8]*, i64 }***
  store { [0 x i8]*, i64 }** %s, { [0 x i8]*, i64 }*** %717, align 8
  %718 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_78, i32 0, i32 1
  %719 = bitcast i64** %718 to %Tm***
  store %Tm** %tm, %Tm*** %719, align 8
  %720 = bitcast %"core::result::Result<(), ParseError>"* %_51 to i96*
  %721 = load i96, i96* %720, align 4
  %722 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_78, i32 0, i32 0
  %723 = load i64*, i64** %722, align 8, !nonnull !4
  %724 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_78, i32 0, i32 1
  %725 = load i64*, i64** %724, align 8, !nonnull !4
; call core::result::Result<T,E>::and_then
  %726 = call i96 @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h725588f24521bb0dE"(i96 %721, i64* align 8 dereferenceable(8) %723, i64* align 8 dereferenceable(8) %725)
  store i96 %726, i96* %2, align 8
  %727 = bitcast %"core::result::Result<(), ParseError>"* %48 to i8*
  %728 = bitcast i96* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %727, i8* align 8 %728, i64 12, i1 false)
  br label %bb220

bb23:                                             ; preds = %bb22
  %729 = bitcast { i32, i32 }* %_40 to i32*
  %730 = load i32, i32* %729, align 4, !range !13
  %_42 = zext i32 %730 to i64
  switch i64 %_42, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ]

bb25:                                             ; preds = %bb23
  unreachable

bb24:                                             ; preds = %bb23
  %731 = bitcast %ParseError* %_50 to i32*
  store i32 5, i32* %731, align 4
  %732 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %733 = bitcast %"core::result::Result<(), ParseError>::Err"* %732 to %ParseError*
  %734 = bitcast %ParseError* %733 to i8*
  %735 = bitcast %ParseError* %_50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %734, i8* align 4 %735, i64 12, i1 false)
  br label %bb220

bb26:                                             ; preds = %bb23
  %736 = bitcast { i32, i32 }* %_40 to %"core::option::Option<i32>::Some"*
  %737 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %736, i32 0, i32 1
  %v27 = load i32, i32* %737, align 4
  %738 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %v27, i32 100)
  %_47.0 = extractvalue { i32, i1 } %738, 0
  %_47.1 = extractvalue { i32, i1 } %738, 1
  %739 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false)
  br i1 %739, label %panic28, label %bb27

bb27:                                             ; preds = %bb26
  %740 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_47.0, i32 1900)
  %_48.0 = extractvalue { i32, i1 } %740, 0
  %_48.1 = extractvalue { i32, i1 } %740, 1
  %741 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false)
  br i1 %741, label %panic29, label %bb28

panic28:                                          ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1744 to %"core::panic::location::Location"*)) #17
  unreachable

bb28:                                             ; preds = %bb27
  %742 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %743 = getelementptr inbounds %Tm, %Tm* %742, i32 0, i32 5
  %744 = load i32, i32* %743, align 4
  %745 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %744, i32 %_48.0)
  %_49.0 = extractvalue { i32, i1 } %745, 0
  %_49.1 = extractvalue { i32, i1 } %745, 1
  %746 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false)
  br i1 %746, label %panic30, label %bb29

panic29:                                          ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1744 to %"core::panic::location::Location"*)) #17
  unreachable

bb29:                                             ; preds = %bb28
  %747 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %748 = getelementptr inbounds %Tm, %Tm* %747, i32 0, i32 5
  store i32 %_49.0, i32* %748, align 4
  %749 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %749, align 4
  br label %bb220

panic30:                                          ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1746 to %"core::panic::location::Location"*)) #17
  unreachable

bb18:                                             ; preds = %bb17
  %750 = bitcast { i32, i32 }* %_31 to i32*
  %751 = load i32, i32* %750, align 4, !range !13
  %_36 = zext i32 %751 to i64
  switch i64 %_36, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ]

bb20:                                             ; preds = %bb18
  unreachable

bb19:                                             ; preds = %bb18
  %752 = bitcast %ParseError* %_39 to i32*
  store i32 4, i32* %752, align 4
  %753 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %754 = bitcast %"core::result::Result<(), ParseError>::Err"* %753 to %ParseError*
  %755 = bitcast %ParseError* %754 to i8*
  %756 = bitcast %ParseError* %_39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %755, i8* align 4 %756, i64 12, i1 false)
  br label %bb220

bb21:                                             ; preds = %bb18
  %757 = bitcast { i32, i32 }* %_31 to %"core::option::Option<i32>::Some"*
  %758 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %757, i32 0, i32 1
  %v31 = load i32, i32* %758, align 4
  %759 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %760 = getelementptr inbounds %Tm, %Tm* %759, i32 0, i32 4
  store i32 %v31, i32* %760, align 4
  %761 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %761, align 4
  br label %bb220

bb13:                                             ; preds = %bb12
  %762 = bitcast { i32, i32 }* %_22 to i32*
  %763 = load i32, i32* %762, align 4, !range !13
  %_27 = zext i32 %763 to i64
  switch i64 %_27, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ]

bb15:                                             ; preds = %bb13
  unreachable

bb14:                                             ; preds = %bb13
  %764 = bitcast %ParseError* %_30 to i32*
  store i32 4, i32* %764, align 4
  %765 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %766 = bitcast %"core::result::Result<(), ParseError>::Err"* %765 to %ParseError*
  %767 = bitcast %ParseError* %766 to i8*
  %768 = bitcast %ParseError* %_30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %767, i8* align 4 %768, i64 12, i1 false)
  br label %bb220

bb16:                                             ; preds = %bb13
  %769 = bitcast { i32, i32 }* %_22 to %"core::option::Option<i32>::Some"*
  %770 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %769, i32 0, i32 1
  %v32 = load i32, i32* %770, align 4
  %771 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %772 = getelementptr inbounds %Tm, %Tm* %771, i32 0, i32 4
  store i32 %v32, i32* %772, align 4
  %773 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %773, align 4
  br label %bb220

bb8:                                              ; preds = %bb7
  %774 = bitcast { i32, i32 }* %_13 to i32*
  %775 = load i32, i32* %774, align 4, !range !13
  %_18 = zext i32 %775 to i64
  switch i64 %_18, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb9:                                              ; preds = %bb8
  %776 = bitcast %ParseError* %_21 to i32*
  store i32 3, i32* %776, align 4
  %777 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %778 = bitcast %"core::result::Result<(), ParseError>::Err"* %777 to %ParseError*
  %779 = bitcast %ParseError* %778 to i8*
  %780 = bitcast %ParseError* %_21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %779, i8* align 4 %780, i64 12, i1 false)
  br label %bb220

bb11:                                             ; preds = %bb8
  %781 = bitcast { i32, i32 }* %_13 to %"core::option::Option<i32>::Some"*
  %782 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %781, i32 0, i32 1
  %v33 = load i32, i32* %782, align 4
  %783 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %784 = getelementptr inbounds %Tm, %Tm* %783, i32 0, i32 6
  store i32 %v33, i32* %784, align 4
  %785 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %785, align 4
  br label %bb220

bb3:                                              ; preds = %bb2
  %786 = bitcast { i32, i32 }* %_4 to i32*
  %787 = load i32, i32* %786, align 4, !range !13
  %_9 = zext i32 %787 to i64
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %788 = bitcast %ParseError* %_12 to i32*
  store i32 3, i32* %788, align 4
  %789 = bitcast %"core::result::Result<(), ParseError>"* %48 to %"core::result::Result<(), ParseError>::Err"*
  %790 = bitcast %"core::result::Result<(), ParseError>::Err"* %789 to %ParseError*
  %791 = bitcast %ParseError* %790 to i8*
  %792 = bitcast %ParseError* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %791, i8* align 4 %792, i64 12, i1 false)
  br label %bb220

bb6:                                              ; preds = %bb3
  %793 = bitcast { i32, i32 }* %_4 to %"core::option::Option<i32>::Some"*
  %794 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %793, i32 0, i32 1
  %v34 = load i32, i32* %794, align 4
  %795 = load %Tm*, %Tm** %tm, align 8, !nonnull !4
  %796 = getelementptr inbounds %Tm, %Tm* %795, i32 0, i32 6
  store i32 %v34, i32* %796, align 4
  %797 = bitcast %"core::result::Result<(), ParseError>"* %48 to i32*
  store i32 15, i32* %797, align 4
  br label %bb220
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h3c034cf464671c77E"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 32)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h9ab0d8f9437e663eE"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 98, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h558a4055b1e7498bE"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 32)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hc4965f28730396d4E"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 101, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h9cf647ac8a92be8aE"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 32)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hed449cac03df3c8bE"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 84, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h04daf42c8504a693E"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 32)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h77012f4704197d9cE"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 89, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h9c3bb99527a8c146E"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 47)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hb01f810e32059591E"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 100, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hb144a816418b5d1eE"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 47)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h141b6c3253d9f0ddE"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 121, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17he0b5bdfd5f7babd1E"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 45)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h51951e31a8994d12E"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 109, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h60e393cbadd42676E"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 45)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h85a5271fc8ef1d06E"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 100, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h243230b50df254e8E"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 58)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hd435edf1e528a93fE"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 77, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hfa37b2734b7379c4E"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 58)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h359691aac1bd416dE"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 77, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hb37319e694f2875aE"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 58)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h97852e3c11797a56E"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 83, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17ha67b32f4e0df7594E"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 32)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hdece651e284427ceE"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 112, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h3134636fcd620212E"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 58)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17he3875133275c82cbE"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 77, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hced54240fd49295cE"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 58)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h6f338c639223fec0E"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 83, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h8296faa47a757e0bE"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 45)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17hf82a1c7c4577734fE"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 98, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h78d26742b8a64d3eE"(i64* align 8 dereferenceable(8) %_1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
; call time::parse::parse_char
  %4 = call i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 45)
  store i96 %4, i96* %0, align 8
  %5 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %6 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %8 = load i96, i96* %7, align 4
  ret i96 %8
}

; time::parse::parse_type::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i96 @"_ZN4time5parse10parse_type28_$u7b$$u7b$closure$u7d$$u7d$17h44dbdcff96e9d0d7E"(i64* align 8 dereferenceable(8) %_1.0, i64* align 8 dereferenceable(8) %_1.1) unnamed_addr #0 {
start:
  %0 = alloca i96, align 8
  %1 = alloca %"core::result::Result<(), ParseError>", align 4
  %2 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %3 = bitcast i64* %_1.0 to { [0 x i8]*, i64 }**
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !nonnull !4
  %4 = bitcast i64* %_1.1 to %Tm**
  %5 = bitcast i64* %_1.1 to %Tm**
  %_4 = load %Tm*, %Tm** %5, align 8, !nonnull !4
; call time::parse::parse_type
  %6 = call i96 @_ZN4time5parse10parse_type17hc538f60291a4b4c5E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_3, i32 89, %Tm* align 4 dereferenceable(44) %_4)
  store i96 %6, i96* %0, align 8
  %7 = bitcast %"core::result::Result<(), ParseError>"* %1 to i8*
  %8 = bitcast i96* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 12, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<(), ParseError>"* %1 to i96*
  %10 = load i96, i96* %9, align 4
  ret i96 %10
}

; time::parse::match_str
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN4time5parse9match_str17h93178ac42af8a51fE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %s, [0 x i8]* nonnull align 1 %needle.0, i64 %needle.1) unnamed_addr #1 {
start:
  %_10 = alloca i64, align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_4.1 = load i64, i64* %2, align 8
; call core::str::<impl str>::starts_with
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17hbcce436be1f747b2E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, [0 x i8]* nonnull align 1 %needle.0, i64 %needle.1)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb5

bb5:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb6

bb2:                                              ; preds = %bb1
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_9.0 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !4
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_9.1 = load i64, i64* %4, align 8
; call core::str::<impl str>::len
  %_11 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h8834d273c1c5a4afE"([0 x i8]* nonnull align 1 %needle.0, i64 %needle.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  store i64 %_11, i64* %_10, align 8
  %5 = load i64, i64* %_10, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %6 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc9d8dbceae2eac07E"([0 x i8]* nonnull align 1 %_9.0, i64 %_9.1, i64 %5, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1748 to %"core::panic::location::Location"*))
  %_8.0 = extractvalue { [0 x i8]*, i64 } %6, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %6, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  store [0 x i8]* %_8.0, [0 x i8]** %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  store i64 %_8.1, i64* %8, align 8
  store i8 1, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %9 = load i8, i8* %0, align 1, !range !3
  %10 = trunc i8 %9 to i1
  ret i1 %10
}

; time::parse::match_strs
; Function Attrs: nonlazybind uwtable
define internal { i32, i32 } @_ZN4time5parse10match_strs17h81642f79d566bc77E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %ss, [0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* nonnull align 8 %strs.0, i64 %strs.1) unnamed_addr #1 {
start:
  %_7 = alloca i64*, align 8
  %iter = alloca { i64*, i64* }, align 8
  %0 = alloca { i32, i32 }, align 4
; call core::slice::<impl [T]>::iter
  %1 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hc23c52ee9c6d716eE"([0 x { { [0 x i8]*, i64 }, i32, [1 x i32] }]* nonnull align 8 %strs.0, i64 %strs.1)
  %_4.0 = extractvalue { i64*, i64* } %1, 0
  %_4.1 = extractvalue { i64*, i64* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %2 = call { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5242f84544739b4cE"(i64* nonnull %_4.0, i64* %_4.1)
  %_3.0 = extractvalue { i64*, i64* } %2, 0
  %_3.1 = extractvalue { i64*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 0
  store i64* %_3.0, i64** %3, align 8
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1
  store i64* %_3.1, i64** %4, align 8
  br label %bb3

bb3:                                              ; preds = %bb8, %bb2
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %5 = call align 8 dereferenceable_or_null(24) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd612a69d62c04ca9E"({ i64*, i64* }* align 8 dereferenceable(16) %iter)
  store i64* %5, i64** %_7, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %6 = bitcast i64** %_7 to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_10 = select i1 %8, i64 0, i64 1
  switch i64 %_10, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %9 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %9, align 4
  br label %bb10

bb5:                                              ; preds = %bb4
  %10 = bitcast i64** %_7 to { { [0 x i8]*, i64 }, i32, [1 x i32] }**
  %11 = load { { [0 x i8]*, i64 }, i32, [1 x i32] }*, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %10, align 8, !nonnull !4
  %12 = bitcast { { [0 x i8]*, i64 }, i32, [1 x i32] }* %11 to { [0 x i8]*, i64 }*
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  %needle.0 = load [0 x i8]*, [0 x i8]** %13, align 8, !nonnull !4
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  %needle.1 = load i64, i64* %14, align 8
  %15 = bitcast i64** %_7 to { { [0 x i8]*, i64 }, i32, [1 x i32] }**
  %16 = load { { [0 x i8]*, i64 }, i32, [1 x i32] }*, { { [0 x i8]*, i64 }, i32, [1 x i32] }** %15, align 8, !nonnull !4
  %17 = getelementptr inbounds { { [0 x i8]*, i64 }, i32, [1 x i32] }, { { [0 x i8]*, i64 }, i32, [1 x i32] }* %16, i32 0, i32 1
  %value = load i32, i32* %17, align 8
; call time::parse::match_str
  %_13 = call zeroext i1 @_ZN4time5parse9match_str17h93178ac42af8a51fE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %ss, [0 x i8]* nonnull align 1 %needle.0, i64 %needle.1)
  br label %bb8

bb8:                                              ; preds = %bb5
  br i1 %_13, label %bb9, label %bb3

bb9:                                              ; preds = %bb8
  %18 = bitcast { i32, i32 }* %0 to %"core::option::Option<i32>::Some"*
  %19 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %18, i32 0, i32 1
  store i32 %value, i32* %19, align 4
  %20 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %20, align 4
  br label %bb10

bb10:                                             ; preds = %bb7, %bb9
  %21 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4, !range !13
  %23 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = insertvalue { i32, i32 } undef, i32 %22, 0
  %26 = insertvalue { i32, i32 } %25, i32 %24, 1
  ret { i32, i32 } %26
}

; time::parse::match_digits
; Function Attrs: nonlazybind uwtable
define internal { i32, i32 } @_ZN4time5parse12match_digits17had8f265a17072648E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %ss, i64 %min_digits, i64 %max_digits, i1 zeroext %ws) unnamed_addr #1 {
start:
  %_5 = alloca { i64, i64 }, align 8
  %0 = alloca { i32, i32 }, align 4
; call time::parse::match_digits_i64
  %1 = call { i64, i64 } @_ZN4time5parse16match_digits_i6417h802b38853777a274E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %ss, i64 %min_digits, i64 %max_digits, i1 zeroext %ws)
  store { i64, i64 } %1, { i64, i64 }* %_5, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %_5 to i64*
  %_10 = load i64, i64* %2, align 8, !range !10
  switch i64 %_10, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %3 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %3, align 4
  br label %bb5

bb4:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %_5 to %"core::option::Option<i64>::Some"*
  %5 = getelementptr inbounds %"core::option::Option<i64>::Some", %"core::option::Option<i64>::Some"* %4, i32 0, i32 1
  %v = load i64, i64* %5, align 8
  %_12 = trunc i64 %v to i32
  %6 = bitcast { i32, i32 }* %0 to %"core::option::Option<i32>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %6, i32 0, i32 1
  store i32 %_12, i32* %7, align 4
  %8 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %8, align 4
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4, !range !13
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = insertvalue { i32, i32 } undef, i32 %10, 0
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1
  ret { i32, i32 } %14
}

; time::parse::match_digits_i64
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN4time5parse16match_digits_i6417h802b38853777a274E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %ss, i64 %min_digits, i64 %max_digits, i1 zeroext %ws) unnamed_addr #1 {
start:
  %_60 = alloca i64, align 8
  %_49 = alloca i8, align 1
  %_32 = alloca { i64, i32 }, align 8
  %iter = alloca %"core::iter::adapters::take::Take<core::str::iter::CharIndices>", align 8
  %_26 = alloca %"core::str::iter::CharIndices", align 8
  %_25 = alloca %"core::iter::adapters::take::Take<core::str::iter::CharIndices>", align 8
  %_24 = alloca %"core::iter::adapters::take::Take<core::str::iter::CharIndices>", align 8
  %_22 = alloca i64, align 8
  %chars = alloca %"core::str::iter::CharIndices", align 8
  %n = alloca i64, align 8
  %value = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 0, i64* %value, align 8
  store i64 0, i64* %n, align 8
  br i1 %ws, label %bb1, label %bb7

bb7:                                              ; preds = %bb5, %start
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 0
  %_21.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 1
  %_21.1 = load i64, i64* %2, align 8
  %_23 = load i64, i64* %n, align 8
  store i64 %_23, i64* %_22, align 8
  %3 = load i64, i64* %_22, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %4 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc9d8dbceae2eac07E"([0 x i8]* nonnull align 1 %_21.0, i64 %_21.1, i64 %3, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1753 to %"core::panic::location::Location"*))
  %_20.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_20.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb8

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 0
  %_9.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !4
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 1
  %_9.1 = load i64, i64* %6, align 8
; call core::str::<impl str>::trim_left_matches
  %7 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$17trim_left_matches17h234cf126e8cd2ccbE"([0 x i8]* nonnull align 1 %_9.0, i64 %_9.1, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc1749 to [0 x i8]*), i64 1)
  %s2.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %s2.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 0
  %_11.0 = load [0 x i8]*, [0 x i8]** %8, align 8, !nonnull !4
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 1
  %_11.1 = load i64, i64* %9, align 8
; call core::str::<impl str>::len
  %_10 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h8834d273c1c5a4afE"([0 x i8]* nonnull align 1 %_11.0, i64 %_11.1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::str::<impl str>::len
  %_12 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h8834d273c1c5a4afE"([0 x i8]* nonnull align 1 %s2.0, i64 %s2.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %10 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_10, i64 %_12)
  %_14.0 = extractvalue { i64, i1 } %10, 0
  %_14.1 = extractvalue { i64, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false)
  br i1 %11, label %panic, label %bb5

bb5:                                              ; preds = %bb4
  store i64 %_14.0, i64* %n, align 8
  %_16 = load i64, i64* %n, align 8
  %_15 = icmp ugt i64 %_16, %max_digits
  br i1 %_15, label %bb6, label %bb7

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1751 to %"core::panic::location::Location"*)) #17
  unreachable

bb6:                                              ; preds = %bb5
  %12 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %12, align 8
  br label %bb30

bb30:                                             ; preds = %bb29, %bb28, %bb6
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8, !range !10
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1
  ret { i64, i64 } %18

bb8:                                              ; preds = %bb7
; call core::str::<impl str>::char_indices
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hb894091c031c54d8E"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %chars, [0 x i8]* nonnull align 1 %_20.0, i64 %_20.1)
  br label %bb9

bb9:                                              ; preds = %bb8
  %19 = bitcast %"core::str::iter::CharIndices"* %_26 to i8*
  %20 = bitcast %"core::str::iter::CharIndices"* %chars to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false)
  %_29 = load i64, i64* %n, align 8
  %21 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %max_digits, i64 %_29)
  %_30.0 = extractvalue { i64, i1 } %21, 0
  %_30.1 = extractvalue { i64, i1 } %21, 1
  %22 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %22, label %panic1, label %bb10

bb10:                                             ; preds = %bb9
; call core::iter::traits::iterator::Iterator::take
  call void @_ZN4core4iter6traits8iterator8Iterator4take17h8e52cdc81e80ed9aE(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>") dereferenceable(32) %_25, %"core::str::iter::CharIndices"* noalias nocapture dereferenceable(24) %_26, i64 %_30.0)
  br label %bb11

panic1:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1755 to %"core::panic::location::Location"*)) #17
  unreachable

bb11:                                             ; preds = %bb10
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9aba85afac260228E"(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* noalias nocapture sret(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>") dereferenceable(32) %_24, %"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* noalias nocapture dereferenceable(32) %_25)
  br label %bb12

bb12:                                             ; preds = %bb11
  %23 = bitcast %"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* %iter to i8*
  %24 = bitcast %"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* %_24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 32, i1 false)
  br label %bb13

bb13:                                             ; preds = %bb22, %bb12
; call <core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::next
  %25 = call { i64, i32 } @"_ZN100_$LT$core..iter..adapters..take..Take$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha2d25ed44e265295E"(%"core::iter::adapters::take::Take<core::str::iter::CharIndices>"* align 8 dereferenceable(32) %iter)
  store { i64, i32 } %25, { i64, i32 }* %_32, align 8
  br label %bb14

bb14:                                             ; preds = %bb13
  %26 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_32, i32 0, i32 1
  %27 = load i32, i32* %26, align 8, !range !2
  %28 = sub i32 %27, 1114112
  %29 = icmp eq i32 %28, 0
  %_35 = select i1 %29, i64 0, i64 1
  switch i64 %_35, label %bb16 [
    i64 0, label %bb23
    i64 1, label %bb15
  ]

bb16:                                             ; preds = %bb14
  unreachable

bb23:                                             ; preds = %bb17, %bb15, %bb14
  %_51 = load i64, i64* %n, align 8
  %_50 = icmp uge i64 %_51, %min_digits
  br i1 %_50, label %bb25, label %bb24

bb15:                                             ; preds = %bb14
  %30 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_32, i32 0, i32 1
  %ch = load i32, i32* %30, align 8, !range !15
  %_37 = icmp ule i32 48, %ch
  br i1 %_37, label %bb17, label %bb23

bb17:                                             ; preds = %bb15
  %_38 = icmp ule i32 %ch, 57
  br i1 %_38, label %bb18, label %bb23

bb18:                                             ; preds = %bb17
  %_40 = load i64, i64* %value, align 8
  %31 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_40, i64 10)
  %_41.0 = extractvalue { i64, i1 } %31, 0
  %_41.1 = extractvalue { i64, i1 } %31, 1
  %32 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false)
  br i1 %32, label %panic2, label %bb19

bb19:                                             ; preds = %bb18
  %33 = icmp ule i32 %ch, 1114111
  call void @llvm.assume(i1 %33)
  %_43 = zext i32 %ch to i64
  %34 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_43, i64 48)
  %_46.0 = extractvalue { i64, i1 } %34, 0
  %_46.1 = extractvalue { i64, i1 } %34, 1
  %35 = call i1 @llvm.expect.i1(i1 %_46.1, i1 false)
  br i1 %35, label %panic3, label %bb20

panic2:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1757 to %"core::panic::location::Location"*)) #17
  unreachable

bb20:                                             ; preds = %bb19
  %36 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_41.0, i64 %_46.0)
  %_47.0 = extractvalue { i64, i1 } %36, 0
  %_47.1 = extractvalue { i64, i1 } %36, 1
  %37 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false)
  br i1 %37, label %panic4, label %bb21

panic3:                                           ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1759 to %"core::panic::location::Location"*)) #17
  unreachable

bb21:                                             ; preds = %bb20
  store i64 %_47.0, i64* %value, align 8
  %38 = load i64, i64* %n, align 8
  %39 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %38, i64 1)
  %_48.0 = extractvalue { i64, i1 } %39, 0
  %_48.1 = extractvalue { i64, i1 } %39, 1
  %40 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false)
  br i1 %40, label %panic5, label %bb22

panic4:                                           ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1757 to %"core::panic::location::Location"*)) #17
  unreachable

bb22:                                             ; preds = %bb21
  store i64 %_48.0, i64* %n, align 8
  br label %bb13

panic5:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1761 to %"core::panic::location::Location"*)) #17
  unreachable

bb24:                                             ; preds = %bb23
  store i8 0, i8* %_49, align 1
  br label %bb26

bb25:                                             ; preds = %bb23
  %_54 = load i64, i64* %n, align 8
  %_53 = icmp ule i64 %_54, %max_digits
  %41 = zext i1 %_53 to i8
  store i8 %41, i8* %_49, align 1
  br label %bb26

bb26:                                             ; preds = %bb24, %bb25
  %42 = load i8, i8* %_49, align 1, !range !3
  %43 = trunc i8 %42 to i1
  br i1 %43, label %bb27, label %bb29

bb29:                                             ; preds = %bb26
  %44 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %44, align 8
  br label %bb30

bb27:                                             ; preds = %bb26
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 0
  %_59.0 = load [0 x i8]*, [0 x i8]** %45, align 8, !nonnull !4
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 1
  %_59.1 = load i64, i64* %46, align 8
  %_61 = load i64, i64* %n, align 8
  store i64 %_61, i64* %_60, align 8
  %47 = load i64, i64* %_60, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %48 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc9d8dbceae2eac07E"([0 x i8]* nonnull align 1 %_59.0, i64 %_59.1, i64 %47, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1763 to %"core::panic::location::Location"*))
  %_58.0 = extractvalue { [0 x i8]*, i64 } %48, 0
  %_58.1 = extractvalue { [0 x i8]*, i64 } %48, 1
  br label %bb28

bb28:                                             ; preds = %bb27
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 0
  store [0 x i8]* %_58.0, [0 x i8]** %49, align 8
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 1
  store i64 %_58.1, i64* %50, align 8
  %_62 = load i64, i64* %value, align 8
  %51 = bitcast { i64, i64 }* %0 to %"core::option::Option<i64>::Some"*
  %52 = getelementptr inbounds %"core::option::Option<i64>::Some", %"core::option::Option<i64>::Some"* %51, i32 0, i32 1
  store i64 %_62, i64* %52, align 8
  %53 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %53, align 8
  br label %bb30
}

; time::parse::match_fractional_seconds
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN4time5parse24match_fractional_seconds17hce78aeaa2d497c3eE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %ss) unnamed_addr #1 {
start:
  %_19 = alloca i64, align 8
  %_9 = alloca { i64, i32 }, align 8
  %iter = alloca %"core::str::iter::CharIndices"*, align 8
  %chars = alloca %"core::str::iter::CharIndices", align 8
  %multiplier = alloca i32, align 4
  %value = alloca i32, align 4
  store i32 0, i32* %value, align 4
  store i32 100000000, i32* %multiplier, align 4
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 1
  %_4.1 = load i64, i64* %1, align 8
; call core::str::<impl str>::char_indices
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hb894091c031c54d8E"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %chars, [0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 0
  %orig.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !4
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 1
  %orig.1 = load i64, i64* %3, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_6 = call align 8 dereferenceable(24) %"core::str::iter::CharIndices"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h17e91171f2d9e7a8E"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %chars)
  br label %bb2

bb2:                                              ; preds = %bb1
  store %"core::str::iter::CharIndices"* %_6, %"core::str::iter::CharIndices"** %iter, align 8
  br label %bb3

bb3:                                              ; preds = %bb13, %bb2
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %4 = call { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h21aa45a02e238073E"(%"core::str::iter::CharIndices"** align 8 dereferenceable(8) %iter)
  store { i64, i32 } %4, { i64, i32 }* %_9, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_9, i32 0, i32 1
  %6 = load i32, i32* %5, align 8, !range !2
  %7 = sub i32 %6, 1114112
  %8 = icmp eq i32 %7, 0
  %_12 = select i1 %8, i64 0, i64 1
  switch i64 %_12, label %bb6 [
    i64 0, label %bb14
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb14:                                             ; preds = %bb8, %bb7, %bb4
  %9 = load i32, i32* %value, align 4
  ret i32 %9

bb5:                                              ; preds = %bb4
  %10 = bitcast { i64, i32 }* %_9 to i64*
  %i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_9, i32 0, i32 1
  %ch = load i32, i32* %11, align 8, !range !15
  store i64 %i, i64* %_19, align 8
  %12 = load i64, i64* %_19, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %13 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc9d8dbceae2eac07E"([0 x i8]* nonnull align 1 %orig.0, i64 %orig.1, i64 %12, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1765 to %"core::panic::location::Location"*))
  %_17.0 = extractvalue { [0 x i8]*, i64 } %13, 0
  %_17.1 = extractvalue { [0 x i8]*, i64 } %13, 1
  br label %bb7

bb7:                                              ; preds = %bb5
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 0
  store [0 x i8]* %_17.0, [0 x i8]** %14, align 8
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 1
  store i64 %_17.1, i64* %15, align 8
  %_21 = icmp ule i32 48, %ch
  br i1 %_21, label %bb8, label %bb14

bb8:                                              ; preds = %bb7
  %_22 = icmp ule i32 %ch, 57
  br i1 %_22, label %bb9, label %bb14

bb9:                                              ; preds = %bb8
  %16 = icmp ule i32 %ch, 1114111
  call void @llvm.assume(i1 %16)
  %17 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %ch, i32 48)
  %_27.0 = extractvalue { i32, i1 } %17, 0
  %_27.1 = extractvalue { i32, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false)
  br i1 %18, label %panic, label %bb10

bb10:                                             ; preds = %bb9
  %_30 = load i32, i32* %multiplier, align 4
  %19 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %_27.0, i32 %_30)
  %_31.0 = extractvalue { i32, i1 } %19, 0
  %_31.1 = extractvalue { i32, i1 } %19, 1
  %20 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false)
  br i1 %20, label %panic1, label %bb11

panic:                                            ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1767 to %"core::panic::location::Location"*)) #17
  unreachable

bb11:                                             ; preds = %bb10
  %21 = load i32, i32* %value, align 4
  %22 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %_31.0)
  %_32.0 = extractvalue { i32, i1 } %22, 0
  %_32.1 = extractvalue { i32, i1 } %22, 1
  %23 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false)
  br i1 %23, label %panic2, label %bb12

panic1:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1769 to %"core::panic::location::Location"*)) #17
  unreachable

bb12:                                             ; preds = %bb11
  store i32 %_32.0, i32* %value, align 4
  %24 = load i32, i32* %multiplier, align 4
  %_34 = icmp eq i32 %24, -2147483648
  %_35 = and i1 false, %_34
  %25 = call i1 @llvm.expect.i1(i1 %_35, i1 false)
  br i1 %25, label %panic3, label %bb13

panic2:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1771 to %"core::panic::location::Location"*)) #17
  unreachable

bb13:                                             ; preds = %bb12
  %26 = load i32, i32* %multiplier, align 4
  %27 = sdiv i32 %26, 10
  store i32 %27, i32* %multiplier, align 4
  br label %bb3

panic3:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([31 x i8]* @str.7 to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1773 to %"core::panic::location::Location"*)) #17
  unreachable
}

; time::parse::match_digits_in_range
; Function Attrs: nonlazybind uwtable
define internal { i32, i32 } @_ZN4time5parse21match_digits_in_range17h265025d6894ef799E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %ss, i64 %min_digits, i64 %max_digits, i1 zeroext %ws, i32 %min, i32 %max) unnamed_addr #1 {
start:
  %_16 = alloca i8, align 1
  %_8 = alloca { i32, i32 }, align 4
  %0 = alloca { i32, i32 }, align 4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 0
  %before.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 1
  %before.1 = load i64, i64* %2, align 8
; call time::parse::match_digits
  %3 = call { i32, i32 } @_ZN4time5parse12match_digits17had8f265a17072648E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %ss, i64 %min_digits, i64 %max_digits, i1 zeroext %ws)
  store { i32, i32 } %3, { i32, i32 }* %_8, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { i32, i32 }* %_8 to i32*
  %5 = load i32, i32* %4, align 4, !range !13
  %_13 = zext i32 %5 to i64
  %6 = icmp eq i64 %_13, 1
  br i1 %6, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %7 = bitcast { i32, i32 }* %_8 to %"core::option::Option<i32>::Some"*
  %val = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %7, i32 0, i32 1
  %_18 = load i32, i32* %val, align 4
  %_17 = icmp sge i32 %_18, %min
  br i1 %_17, label %bb5, label %bb4

bb2:                                              ; preds = %bb6, %bb1
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 0
  store [0 x i8]* %before.0, [0 x i8]** %8, align 8
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ss, i32 0, i32 1
  store i64 %before.1, i64* %9, align 8
  %10 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %10, align 4
  br label %bb8

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_16, align 1
  br label %bb6

bb5:                                              ; preds = %bb3
  %_21 = load i32, i32* %val, align 4
  %_20 = icmp sle i32 %_21, %max
  %11 = zext i1 %_20 to i8
  store i8 %11, i8* %_16, align 1
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %12 = load i8, i8* %_16, align 1, !range !3
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb7, label %bb2

bb7:                                              ; preds = %bb6
  %14 = bitcast { i32, i32 }* %_8 to %"core::option::Option<i32>::Some"*
  %15 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %14, i32 0, i32 1
  %val1 = load i32, i32* %15, align 4
  %16 = bitcast { i32, i32 }* %0 to %"core::option::Option<i32>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %16, i32 0, i32 1
  store i32 %val1, i32* %17, align 4
  %18 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %18, align 4
  br label %bb8

bb8:                                              ; preds = %bb2, %bb7
  %19 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4, !range !13
  %21 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = insertvalue { i32, i32 } undef, i32 %20, 0
  %24 = insertvalue { i32, i32 } %23, i32 %22, 1
  ret { i32, i32 } %24
}

; time::parse::parse_char
; Function Attrs: nonlazybind uwtable
define internal i96 @_ZN4time5parse10parse_char17h22c3577f9a8992bfE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %s, i32 %c) unnamed_addr #1 {
start:
  %_26 = alloca %ParseError, align 4
  %_23 = alloca %ParseError, align 4
  %_17 = alloca i64, align 8
  %_5 = alloca %"core::str::iter::CharIndices", align 8
  %_3 = alloca { i64, i32 }, align 8
  %0 = alloca %"core::result::Result<(), ParseError>", align 4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_6.1 = load i64, i64* %2, align 8
; call core::str::<impl str>::char_indices
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hb894091c031c54d8E"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %_5, [0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %3 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf2b67b30afdd08c9E"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %_5)
  store { i64, i32 } %3, { i64, i32 }* %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8, !range !2
  %6 = sub i32 %5, 1114112
  %7 = icmp eq i32 %6, 0
  %_7 = select i1 %7, i64 0, i64 1
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %8 = bitcast %ParseError* %_26 to i32*
  store i32 10, i32* %8, align 4
  %9 = bitcast %"core::result::Result<(), ParseError>"* %0 to %"core::result::Result<(), ParseError>::Err"*
  %10 = bitcast %"core::result::Result<(), ParseError>::Err"* %9 to %ParseError*
  %11 = bitcast %ParseError* %10 to i8*
  %12 = bitcast %ParseError* %_26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 12, i1 false)
  br label %bb11

bb5:                                              ; preds = %bb2
  %13 = bitcast { i64, i32 }* %_3 to i64*
  %i = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_3, i32 0, i32 1
  %c2 = load i32, i32* %14, align 8, !range !15
  %_10 = icmp eq i32 %c, %c2
  br i1 %_10, label %bb6, label %bb10

bb10:                                             ; preds = %bb5
  %15 = bitcast %ParseError* %_23 to %"ParseError::UnexpectedCharacter"*
  %16 = getelementptr inbounds %"ParseError::UnexpectedCharacter", %"ParseError::UnexpectedCharacter"* %15, i32 0, i32 1
  store i32 %c, i32* %16, align 4
  %17 = bitcast %ParseError* %_23 to %"ParseError::UnexpectedCharacter"*
  %18 = getelementptr inbounds %"ParseError::UnexpectedCharacter", %"ParseError::UnexpectedCharacter"* %17, i32 0, i32 2
  store i32 %c2, i32* %18, align 4
  %19 = bitcast %ParseError* %_23 to i32*
  store i32 14, i32* %19, align 4
  %20 = bitcast %"core::result::Result<(), ParseError>"* %0 to %"core::result::Result<(), ParseError>::Err"*
  %21 = bitcast %"core::result::Result<(), ParseError>::Err"* %20 to %ParseError*
  %22 = bitcast %ParseError* %21 to i8*
  %23 = bitcast %ParseError* %_23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 12, i1 false)
  br label %bb11

bb6:                                              ; preds = %bb5
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_16.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !nonnull !4
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_16.1 = load i64, i64* %25, align 8
; call core::char::methods::<impl char>::len_utf8
  %_20 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817he2ec5dc799e5e2a6E"(i32 %c2)
  br label %bb7

bb7:                                              ; preds = %bb6
  %26 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 %_20)
  %_22.0 = extractvalue { i64, i1 } %26, 0
  %_22.1 = extractvalue { i64, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false)
  br i1 %27, label %panic, label %bb8

bb8:                                              ; preds = %bb7
  store i64 %_22.0, i64* %_17, align 8
  %28 = load i64, i64* %_17, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %29 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc9d8dbceae2eac07E"([0 x i8]* nonnull align 1 %_16.0, i64 %_16.1, i64 %28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1777 to %"core::panic::location::Location"*))
  %_15.0 = extractvalue { [0 x i8]*, i64 } %29, 0
  %_15.1 = extractvalue { [0 x i8]*, i64 } %29, 1
  br label %bb9

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1775 to %"core::panic::location::Location"*)) #17
  unreachable

bb9:                                              ; preds = %bb8
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  store [0 x i8]* %_15.0, [0 x i8]** %30, align 8
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  store i64 %_15.1, i64* %31, align 8
  %32 = bitcast %"core::result::Result<(), ParseError>"* %0 to i32*
  store i32 15, i32* %32, align 4
  br label %bb11

bb11:                                             ; preds = %bb3, %bb10, %bb9
  %33 = bitcast %"core::result::Result<(), ParseError>"* %0 to i96*
  %34 = load i96, i96* %33, align 4
  ret i96 %34
}

; time::sys::inner::rust_tm_to_tm
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4time3sys5inner13rust_tm_to_tm17h6546d169a5bf9165E(%Tm* align 4 dereferenceable(44) %rust_tm, %"libc::unix::linux_like::tm"* align 8 dereferenceable(56) %tm) unnamed_addr #1 {
start:
  %0 = bitcast %Tm* %rust_tm to i32*
  %_3 = load i32, i32* %0, align 4
  %1 = bitcast %"libc::unix::linux_like::tm"* %tm to i32*
  store i32 %_3, i32* %1, align 8
  %2 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 1
  %_4 = load i32, i32* %2, align 4
  %3 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 1
  store i32 %_4, i32* %3, align 4
  %4 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 2
  %_5 = load i32, i32* %4, align 4
  %5 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 2
  store i32 %_5, i32* %5, align 8
  %6 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 3
  %_6 = load i32, i32* %6, align 4
  %7 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 3
  store i32 %_6, i32* %7, align 4
  %8 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 4
  %_7 = load i32, i32* %8, align 4
  %9 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 4
  store i32 %_7, i32* %9, align 8
  %10 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 5
  %_8 = load i32, i32* %10, align 4
  %11 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 5
  store i32 %_8, i32* %11, align 4
  %12 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 6
  %_9 = load i32, i32* %12, align 4
  %13 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 6
  store i32 %_9, i32* %13, align 8
  %14 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 7
  %_10 = load i32, i32* %14, align 4
  %15 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 7
  store i32 %_10, i32* %15, align 4
  %16 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 8
  %_11 = load i32, i32* %16, align 4
  %17 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 8
  store i32 %_11, i32* %17, align 8
  ret void
}

; time::sys::inner::tm_to_rust_tm
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4time3sys5inner13tm_to_rust_tm17hd6f096d91b3834faE(%"libc::unix::linux_like::tm"* align 8 dereferenceable(56) %tm, i32 %utcoff, %Tm* align 4 dereferenceable(44) %rust_tm) unnamed_addr #1 {
start:
  %0 = bitcast %"libc::unix::linux_like::tm"* %tm to i32*
  %_4 = load i32, i32* %0, align 8
  %1 = bitcast %Tm* %rust_tm to i32*
  store i32 %_4, i32* %1, align 4
  %2 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 1
  %_5 = load i32, i32* %2, align 4
  %3 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 1
  store i32 %_5, i32* %3, align 4
  %4 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 2
  %_6 = load i32, i32* %4, align 8
  %5 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 2
  store i32 %_6, i32* %5, align 4
  %6 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 3
  %_7 = load i32, i32* %6, align 4
  %7 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 3
  store i32 %_7, i32* %7, align 4
  %8 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 4
  %_8 = load i32, i32* %8, align 8
  %9 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 4
  store i32 %_8, i32* %9, align 4
  %10 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 5
  %_9 = load i32, i32* %10, align 4
  %11 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 5
  store i32 %_9, i32* %11, align 4
  %12 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 6
  %_10 = load i32, i32* %12, align 8
  %13 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 6
  store i32 %_10, i32* %13, align 4
  %14 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 7
  %_11 = load i32, i32* %14, align 4
  %15 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 7
  store i32 %_11, i32* %15, align 4
  %16 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %tm, i32 0, i32 8
  %_12 = load i32, i32* %16, align 8
  %17 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 8
  store i32 %_12, i32* %17, align 4
  %18 = getelementptr inbounds %Tm, %Tm* %rust_tm, i32 0, i32 9
  store i32 %utcoff, i32* %18, align 4
  ret void
}

; time::sys::inner::time_to_utc_tm
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4time3sys5inner14time_to_utc_tm17h6e354c1ed41b7c67E(i64 %sec, %Tm* align 4 dereferenceable(44) %tm) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %_3.i.i = alloca %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>", align 8
  %_2.i = alloca %"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>", align 8
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca i128, align 8
  %_21 = alloca %"std::io::error::Error", align 8
  %_19 = alloca i64*, align 8
  %_18 = alloca [1 x { i8*, i64* }], align 8
  %_11 = alloca %"core::fmt::Arguments", align 8
  %out = alloca %"libc::unix::linux_like::tm", align 8
  %sec1 = alloca i64, align 8
  store i64 %sec, i64* %sec1, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !21)
; call core::mem::maybe_uninit::MaybeUninit<T>::zeroed
  call void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6zeroed17hfa325d64d6ef7c61E"(%"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>"* noalias nocapture sret(%"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>") dereferenceable(56) %_2.i), !noalias !21
  call void @llvm.experimental.noalias.scope.decl(metadata !24)
  call void @llvm.experimental.noalias.scope.decl(metadata !27)
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>"* %_2.i to %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"*
  %3 = bitcast %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"* %_3.i.i to i8*
  %4 = bitcast %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 56, i1 false), !noalias !29
  call void @llvm.experimental.noalias.scope.decl(metadata !30)
  call void @llvm.experimental.noalias.scope.decl(metadata !33)
  %5 = bitcast %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"* %_3.i.i to %"libc::unix::linux_like::tm"*
  %6 = bitcast %"libc::unix::linux_like::tm"* %out to i8*
  %7 = bitcast %"libc::unix::linux_like::tm"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 56, i1 false), !alias.scope !35, !noalias !27
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = call %"libc::unix::linux_like::tm"* @gmtime_r(i64* %sec1, %"libc::unix::linux_like::tm"* %out)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h6723d4f407dfe990E"(%"libc::unix::linux_like::tm"* %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  br i1 %_5, label %bb4, label %bb8

bb8:                                              ; preds = %bb3
; call time::sys::inner::tm_to_rust_tm
  call void @_ZN4time3sys5inner13tm_to_rust_tm17hd6f096d91b3834faE(%"libc::unix::linux_like::tm"* align 8 dereferenceable(56) %out, i32 0, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb9

bb4:                                              ; preds = %bb3
; call std::io::error::Error::last_os_error
  %8 = call i128 @_ZN3std2io5error5Error13last_os_error17hbe14676b1299a0bfE()
  store i128 %8, i128* %1, align 8
  %9 = bitcast %"std::io::error::Error"* %_21 to i8*
  %10 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
  %11 = bitcast i64** %_19 to %"std::io::error::Error"**
  store %"std::io::error::Error"* %_21, %"std::io::error::Error"** %11, align 8
  %_args = load i64*, i64** %_19, align 8, !nonnull !4
  %_24 = bitcast i64* %_args to %"std::io::error::Error"*
; invoke core::fmt::ArgumentV1::new
  %12 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h13de271d361d25e0E(%"std::io::error::Error"* align 8 dereferenceable(16) %_24, i1 (%"std::io::error::Error"*, %"core::fmt::Formatter"*)* nonnull @"_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h02c1e5177fc0d670E")
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_23.0 = extractvalue { i8*, i64* } %12, 0
  %_23.1 = extractvalue { i8*, i64* } %12, 1
  %13 = bitcast [1 x { i8*, i64* }]* %_18 to { i8*, i64* }*
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 0
  store i8* %_23.0, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 1
  store i64* %_23.1, i64** %15, align 8
  %_15.0 = bitcast [1 x { i8*, i64* }]* %_18 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_11, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1024 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_15.0, i64 1)
          to label %bb7 unwind label %cleanup

bb10:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hc7e7bfbf1c332c96E"(%"std::io::error::Error"* %_21) #18
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb10

bb7:                                              ; preds = %bb6
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_11, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1781 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb7
  unreachable

bb11:                                             ; preds = %bb10
  %21 = bitcast { i8*, i32 }* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26

bb9:                                              ; preds = %bb8
  ret void
}

; time::sys::inner::time_to_local_tm
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4time3sys5inner16time_to_local_tm17hb50571af944490c6E(i64 %sec, %Tm* align 4 dereferenceable(44) %tm) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %_3.i.i = alloca %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>", align 8
  %_2.i = alloca %"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>", align 8
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca i128, align 8
  %_21 = alloca %"std::io::error::Error", align 8
  %_19 = alloca i64*, align 8
  %_18 = alloca [1 x { i8*, i64* }], align 8
  %_11 = alloca %"core::fmt::Arguments", align 8
  %out = alloca %"libc::unix::linux_like::tm", align 8
  %sec1 = alloca i64, align 8
  store i64 %sec, i64* %sec1, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !36)
; call core::mem::maybe_uninit::MaybeUninit<T>::zeroed
  call void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6zeroed17hfa325d64d6ef7c61E"(%"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>"* noalias nocapture sret(%"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>") dereferenceable(56) %_2.i), !noalias !36
  call void @llvm.experimental.noalias.scope.decl(metadata !39)
  call void @llvm.experimental.noalias.scope.decl(metadata !42)
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>"* %_2.i to %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"*
  %3 = bitcast %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"* %_3.i.i to i8*
  %4 = bitcast %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 56, i1 false), !noalias !44
  call void @llvm.experimental.noalias.scope.decl(metadata !45)
  call void @llvm.experimental.noalias.scope.decl(metadata !48)
  %5 = bitcast %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"* %_3.i.i to %"libc::unix::linux_like::tm"*
  %6 = bitcast %"libc::unix::linux_like::tm"* %out to i8*
  %7 = bitcast %"libc::unix::linux_like::tm"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 56, i1 false), !alias.scope !50, !noalias !42
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = call %"libc::unix::linux_like::tm"* @localtime_r(i64* %sec1, %"libc::unix::linux_like::tm"* %out)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h6723d4f407dfe990E"(%"libc::unix::linux_like::tm"* %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  br i1 %_5, label %bb4, label %bb8

bb8:                                              ; preds = %bb3
  %8 = getelementptr inbounds %"libc::unix::linux_like::tm", %"libc::unix::linux_like::tm"* %out, i32 0, i32 10
  %gmtoff = load i64, i64* %8, align 8
  %_30 = trunc i64 %gmtoff to i32
; call time::sys::inner::tm_to_rust_tm
  call void @_ZN4time3sys5inner13tm_to_rust_tm17hd6f096d91b3834faE(%"libc::unix::linux_like::tm"* align 8 dereferenceable(56) %out, i32 %_30, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb9

bb4:                                              ; preds = %bb3
; call std::io::error::Error::last_os_error
  %9 = call i128 @_ZN3std2io5error5Error13last_os_error17hbe14676b1299a0bfE()
  store i128 %9, i128* %1, align 8
  %10 = bitcast %"std::io::error::Error"* %_21 to i8*
  %11 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 16, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4
  %12 = bitcast i64** %_19 to %"std::io::error::Error"**
  store %"std::io::error::Error"* %_21, %"std::io::error::Error"** %12, align 8
  %_args = load i64*, i64** %_19, align 8, !nonnull !4
  %_24 = bitcast i64* %_args to %"std::io::error::Error"*
; invoke core::fmt::ArgumentV1::new
  %13 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h13de271d361d25e0E(%"std::io::error::Error"* align 8 dereferenceable(16) %_24, i1 (%"std::io::error::Error"*, %"core::fmt::Formatter"*)* nonnull @"_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h02c1e5177fc0d670E")
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_23.0 = extractvalue { i8*, i64* } %13, 0
  %_23.1 = extractvalue { i8*, i64* } %13, 1
  %14 = bitcast [1 x { i8*, i64* }]* %_18 to { i8*, i64* }*
  %15 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %14, i32 0, i32 0
  store i8* %_23.0, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %14, i32 0, i32 1
  store i64* %_23.1, i64** %16, align 8
  %_15.0 = bitcast [1 x { i8*, i64* }]* %_18 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_11, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc589 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_15.0, i64 1)
          to label %bb7 unwind label %cleanup

bb10:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hc7e7bfbf1c332c96E"(%"std::io::error::Error"* %_21) #18
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb10

bb7:                                              ; preds = %bb6
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_11, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1785 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb7
  unreachable

bb11:                                             ; preds = %bb10
  %22 = bitcast { i8*, i32 }* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb9:                                              ; preds = %bb8
  ret void
}

; time::sys::inner::utc_tm_to_time
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN4time3sys5inner14utc_tm_to_time17h0e0977b04bbb9076E(%Tm* align 4 dereferenceable(44) %rust_tm) unnamed_addr #1 {
start:
  %_3.i.i = alloca %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>", align 8
  %_2.i = alloca %"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>", align 8
  %tm = alloca %"libc::unix::linux_like::tm", align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !51)
; call core::mem::maybe_uninit::MaybeUninit<T>::zeroed
  call void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6zeroed17hfa325d64d6ef7c61E"(%"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>"* noalias nocapture sret(%"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>") dereferenceable(56) %_2.i), !noalias !51
  call void @llvm.experimental.noalias.scope.decl(metadata !54)
  call void @llvm.experimental.noalias.scope.decl(metadata !57)
  %0 = bitcast %"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>"* %_2.i to %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"*
  %1 = bitcast %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"* %_3.i.i to i8*
  %2 = bitcast %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !noalias !59
  call void @llvm.experimental.noalias.scope.decl(metadata !60)
  call void @llvm.experimental.noalias.scope.decl(metadata !63)
  %3 = bitcast %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"* %_3.i.i to %"libc::unix::linux_like::tm"*
  %4 = bitcast %"libc::unix::linux_like::tm"* %tm to i8*
  %5 = bitcast %"libc::unix::linux_like::tm"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 56, i1 false), !alias.scope !65, !noalias !57
  br label %bb1

bb1:                                              ; preds = %start
; call time::sys::inner::rust_tm_to_tm
  call void @_ZN4time3sys5inner13rust_tm_to_tm17h6546d169a5bf9165E(%Tm* align 4 dereferenceable(44) %rust_tm, %"libc::unix::linux_like::tm"* align 8 dereferenceable(56) %tm)
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = call i64 @timegm(%"libc::unix::linux_like::tm"* %tm)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %6
}

; time::sys::inner::local_tm_to_time
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN4time3sys5inner16local_tm_to_time17h0cbc15f961d20be9E(%Tm* align 4 dereferenceable(44) %rust_tm) unnamed_addr #1 {
start:
  %_3.i.i = alloca %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>", align 8
  %_2.i = alloca %"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>", align 8
  %tm = alloca %"libc::unix::linux_like::tm", align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !66)
; call core::mem::maybe_uninit::MaybeUninit<T>::zeroed
  call void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6zeroed17hfa325d64d6ef7c61E"(%"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>"* noalias nocapture sret(%"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>") dereferenceable(56) %_2.i), !noalias !66
  call void @llvm.experimental.noalias.scope.decl(metadata !69)
  call void @llvm.experimental.noalias.scope.decl(metadata !72)
  %0 = bitcast %"core::mem::maybe_uninit::MaybeUninit<libc::unix::linux_like::tm>"* %_2.i to %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"*
  %1 = bitcast %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"* %_3.i.i to i8*
  %2 = bitcast %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !noalias !74
  call void @llvm.experimental.noalias.scope.decl(metadata !75)
  call void @llvm.experimental.noalias.scope.decl(metadata !78)
  %3 = bitcast %"core::mem::manually_drop::ManuallyDrop<libc::unix::linux_like::tm>"* %_3.i.i to %"libc::unix::linux_like::tm"*
  %4 = bitcast %"libc::unix::linux_like::tm"* %tm to i8*
  %5 = bitcast %"libc::unix::linux_like::tm"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 56, i1 false), !alias.scope !80, !noalias !72
  br label %bb1

bb1:                                              ; preds = %start
; call time::sys::inner::rust_tm_to_tm
  call void @_ZN4time3sys5inner13rust_tm_to_tm17h6546d169a5bf9165E(%Tm* align 4 dereferenceable(44) %rust_tm, %"libc::unix::linux_like::tm"* align 8 dereferenceable(56) %tm)
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = call i64 @mktime(%"libc::unix::linux_like::tm"* %tm)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %6
}

; time::sys::inner::unix::get_time
; Function Attrs: nonlazybind uwtable
define internal { i64, i32 } @_ZN4time3sys5inner4unix8get_time17hd48d22717bf474c6E() unnamed_addr #1 {
start:
  %tv = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i32 }, align 8
  %1 = bitcast { i64, i64 }* %tv to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %tv, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %_2 = call i32 @clock_gettime(i32 0, { i64, i64 }* %tv)
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %tv to i64*
  %_5 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %tv, i32 0, i32 1
  %_7 = load i64, i64* %4, align 8
  %_6 = trunc i64 %_7 to i32
  %5 = bitcast { i64, i32 }* %0 to i64*
  store i64 %_5, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %_6, i32* %6, align 8
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i64, i32 } undef, i64 %8, 0
  %12 = insertvalue { i64, i32 } %11, i32 %10, 1
  ret { i64, i32 } %12
}

; time::sys::inner::unix::get_precise_ns
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4time3sys5inner4unix14get_precise_ns17h762b8550eed94ac5E() unnamed_addr #1 {
start:
  %ts = alloca { i64, i64 }, align 8
  %0 = bitcast { i64, i64 }* %ts to i64*
  store i64 0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %ts, i32 0, i32 1
  store i64 0, i64* %1, align 8
  %_2 = call i32 @clock_gettime(i32 1, { i64, i64 }* %ts)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %ts to i64*
  %_7 = load i64, i64* %2, align 8
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_7, i64 1000000000)
  %_8.0 = extractvalue { i64, i1 } %3, 0
  %_8.1 = extractvalue { i64, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false)
  br i1 %4, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %ts, i32 0, i32 1
  %_10 = load i64, i64* %5, align 8
  %6 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_8.0, i64 %_10)
  %_11.0 = extractvalue { i64, i1 } %6, 0
  %_11.1 = extractvalue { i64, i1 } %6, 1
  %7 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false)
  br i1 %7, label %panic1, label %bb3

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.8 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1791 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %bb2
  ret i64 %_11.0

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1791 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <time::sys::inner::unix::SteadyTime as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN71_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..fmt..Debug$GT$3fmt17h67a33a883ccd9359E"({ i64, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt) unnamed_addr #1 {
start:
  %_12 = alloca { i64*, i64* }, align 8
  %_11 = alloca [2 x { i8*, i64* }], align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  %_13 = bitcast { i64, i64 }* %self to i64*
  %_14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %0 = bitcast { i64*, i64* }* %_12 to i64**
  store i64* %_13, i64** %0, align 8
  %1 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_12, i32 0, i32 1
  store i64* %_14, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_12, i32 0, i32 0
  %_args.0 = load i64*, i64** %2, align 8, !nonnull !4
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_12, i32 0, i32 1
  %_args.1 = load i64*, i64** %3, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %4 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0a33196693ac891E(i64* align 8 dereferenceable(8) %_args.0, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i64$GT$3fmt17hf560765b78429b60E")
  %_16.0 = extractvalue { i8*, i64* } %4, 0
  %_16.1 = extractvalue { i8*, i64* } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::ArgumentV1::new
  %5 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hc0a33196693ac891E(i64* align 8 dereferenceable(8) %_args.1, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i64$GT$3fmt17hf560765b78429b60E")
  %_19.0 = extractvalue { i8*, i64* } %5, 0
  %_19.1 = extractvalue { i8*, i64* } %5, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = bitcast [2 x { i8*, i64* }]* %_11 to { i8*, i64* }*
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %6, i32 0, i32 0
  store i8* %_16.0, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %6, i32 0, i32 1
  store i64* %_16.1, i64** %8, align 8
  %9 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_11, i32 0, i32 1
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 0
  store i8* %_19.0, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 1
  store i64* %_19.1, i64** %11, align 8
  %_8.0 = bitcast [2 x { i8*, i64* }]* %_11 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_4, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1031 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_8.0, i64 2)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::fmt::Formatter::write_fmt
  %12 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i1 %12
}

; <time::sys::inner::unix::SteadyTime as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN73_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..clone..Clone$GT$5clone17h52a16716cccef5b4E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %_2.0 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_2.1 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_2.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_2.1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; time::sys::inner::unix::SteadyTime::now
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN4time3sys5inner4unix10SteadyTime3now17h67984996f3a3979eE() unnamed_addr #1 {
start:
  %_20 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_5 = alloca i32, align 4
  %_2 = alloca { i32*, i32* }, align 8
  %_1 = alloca { i64, i64 }, align 8
  %t = alloca { i64, i64 }, align 8
  %0 = bitcast { i64, i64 }* %_1 to i64*
  store i64 0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_1, i32 0, i32 1
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_1, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t, i32 0, i32 0
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t, i32 0, i32 1
  store i64 %5, i64* %7, align 8
  %8 = call i32 @clock_gettime(i32 1, { i64, i64 }* %t)
  store i32 %8, i32* %_5, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast { i32*, i32* }* %_2 to i32**
  store i32* bitcast (<{ [4 x i8] }>* @alloc1071 to i32*), i32** %9, align 8
  %10 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_2, i32 0, i32 1
  store i32* %_5, i32** %10, align 8
  %11 = bitcast { i32*, i32* }* %_2 to i32**
  %left_val = load i32*, i32** %11, align 8, !nonnull !4
  %12 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_2, i32 0, i32 1
  %right_val = load i32*, i32** %12, align 8, !nonnull !4
  %_12 = load i32, i32* %left_val, align 4
  %_13 = load i32, i32* %right_val, align 4
  %_11 = icmp eq i32 %_12, %_13
  %_10 = xor i1 %_11, true
  br i1 %_10, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1
  ret { i64, i64 } %18

bb2:                                              ; preds = %bb1
  store i8 0, i8* %kind, align 1
  %19 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_20 to {}**
  store {}* null, {}** %19, align 8
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h8f54b190653406bdE(i8 0, i32* align 4 dereferenceable(4) %left_val, i32* align 4 dereferenceable(4) %right_val, %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %_20, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1793 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <time::sys::inner::unix::SteadyTime as core::ops::arith::Sub>::sub
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @"_ZN76_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..ops..arith..Sub$GT$3sub17h973b655848ced415E"(i64 %self.0, i64 %self.1, i64 %other.0, i64 %other.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i32 }, align 8
  %_3 = icmp sge i64 %self.1, %other.1
  br i1 %_3, label %bb1, label %bb6

bb6:                                              ; preds = %start
  %1 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %self.0, i64 1)
  %_20.0 = extractvalue { i64, i1 } %1, 0
  %_20.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false)
  br i1 %2, label %panic2, label %bb7

bb1:                                              ; preds = %start
  %3 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %self.0, i64 %other.0)
  %_10.0 = extractvalue { i64, i1 } %3, 0
  %_10.1 = extractvalue { i64, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false)
  br i1 %4, label %panic, label %bb2

bb2:                                              ; preds = %bb1
; call time::duration::Duration::seconds
  %5 = call { i64, i32 } @_ZN4time8duration8Duration7seconds17hd7772c225040ec8eE(i64 %_10.0)
  %_6.0 = extractvalue { i64, i32 } %5, 0
  %_6.1 = extractvalue { i64, i32 } %5, 1
  br label %bb3

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1795 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %bb2
  %6 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %self.1, i64 %other.1)
  %_15.0 = extractvalue { i64, i1 } %6, 0
  %_15.1 = extractvalue { i64, i1 } %6, 1
  %7 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false)
  br i1 %7, label %panic1, label %bb4

bb4:                                              ; preds = %bb3
; call time::duration::Duration::nanoseconds
  %8 = call { i64, i32 } @_ZN4time8duration8Duration11nanoseconds17h4ee53b6f99fb181fE(i64 %_15.0)
  %_11.0 = extractvalue { i64, i32 } %8, 0
  %_11.1 = extractvalue { i64, i32 } %8, 1
  br label %bb5

panic1:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1797 to %"core::panic::location::Location"*)) #17
  unreachable

bb5:                                              ; preds = %bb4
; call <time::duration::Duration as core::ops::arith::Add>::add
  %9 = call { i64, i32 } @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..ops..arith..Add$GT$3add17h4d240b1e003f7280E"(i64 %_6.0, i32 %_6.1, i64 %_11.0, i32 %_11.1)
  store { i64, i32 } %9, { i64, i32 }* %0, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb5
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i64, i32 } undef, i64 %11, 0
  %15 = insertvalue { i64, i32 } %14, i32 %13, 1
  ret { i64, i32 } %15

bb7:                                              ; preds = %bb6
  %16 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_20.0, i64 %other.0)
  %_22.0 = extractvalue { i64, i1 } %16, 0
  %_22.1 = extractvalue { i64, i1 } %16, 1
  %17 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false)
  br i1 %17, label %panic3, label %bb8

panic2:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1799 to %"core::panic::location::Location"*)) #17
  unreachable

bb8:                                              ; preds = %bb7
; call time::duration::Duration::seconds
  %18 = call { i64, i32 } @_ZN4time8duration8Duration7seconds17hd7772c225040ec8eE(i64 %_22.0)
  %_16.0 = extractvalue { i64, i32 } %18, 0
  %_16.1 = extractvalue { i64, i32 } %18, 1
  br label %bb9

panic3:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1799 to %"core::panic::location::Location"*)) #17
  unreachable

bb9:                                              ; preds = %bb8
  %19 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %self.1, i64 1000000000)
  %_28.0 = extractvalue { i64, i1 } %19, 0
  %_28.1 = extractvalue { i64, i1 } %19, 1
  %20 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false)
  br i1 %20, label %panic4, label %bb10

bb10:                                             ; preds = %bb9
  %21 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_28.0, i64 %other.1)
  %_30.0 = extractvalue { i64, i1 } %21, 0
  %_30.1 = extractvalue { i64, i1 } %21, 1
  %22 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %22, label %panic5, label %bb11

panic4:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1801 to %"core::panic::location::Location"*)) #17
  unreachable

bb11:                                             ; preds = %bb10
; call time::duration::Duration::nanoseconds
  %23 = call { i64, i32 } @_ZN4time8duration8Duration11nanoseconds17h4ee53b6f99fb181fE(i64 %_30.0)
  %_23.0 = extractvalue { i64, i32 } %23, 0
  %_23.1 = extractvalue { i64, i32 } %23, 1
  br label %bb12

panic5:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1801 to %"core::panic::location::Location"*)) #17
  unreachable

bb12:                                             ; preds = %bb11
; call <time::duration::Duration as core::ops::arith::Add>::add
  %24 = call { i64, i32 } @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..ops..arith..Add$GT$3add17h4d240b1e003f7280E"(i64 %_16.0, i32 %_16.1, i64 %_23.0, i32 %_23.1)
  store { i64, i32 } %24, { i64, i32 }* %0, align 8
  br label %bb13
}

; <time::sys::inner::unix::SteadyTime as core::ops::arith::Sub<time::duration::Duration>>::sub
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN108_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..ops..arith..Sub$LT$time..duration..Duration$GT$$GT$3sub17hc40bc6edd38557c9E"(i64 %self.0, i64 %self.1, i64 %other.0, i32 %other.1) unnamed_addr #1 {
start:
; call <time::duration::Duration as core::ops::arith::Neg>::neg
  %0 = call { i64, i32 } @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..ops..arith..Neg$GT$3neg17h207c21cf0e2f37e0E"(i64 %other.0, i32 %other.1)
  %_4.0 = extractvalue { i64, i32 } %0, 0
  %_4.1 = extractvalue { i64, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <time::sys::inner::unix::SteadyTime as core::ops::arith::Add<time::duration::Duration>>::add
  %1 = call { i64, i64 } @"_ZN108_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..ops..arith..Add$LT$time..duration..Duration$GT$$GT$3add17h3c7db2dde0a33d4bE"(i64 %self.0, i64 %self.1, i64 %_4.0, i32 %_4.1)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <time::sys::inner::unix::SteadyTime as core::ops::arith::Add<time::duration::Duration>>::add
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN108_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..ops..arith..Add$LT$time..duration..Duration$GT$$GT$3add17h3c7db2dde0a33d4bE"(i64 %0, i64 %1, i64 %2, i32 %3) unnamed_addr #1 {
start:
  %nanoseconds = alloca { i64, i32 }, align 8
  %other = alloca { i64, i32 }, align 8
  %self = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 0
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 1
  store i32 %3, i32* %7, align 8
; call time::duration::Duration::num_seconds
  %seconds = call i64 @_ZN4time8duration8Duration11num_seconds17h0d8be9022366955dE({ i64, i32 }* align 8 dereferenceable(16) %other)
  br label %bb1

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 0
  %_6.0 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 1
  %_6.1 = load i32, i32* %9, align 8
; call time::duration::Duration::seconds
  %10 = call { i64, i32 } @_ZN4time8duration8Duration7seconds17hd7772c225040ec8eE(i64 %seconds)
  %_7.0 = extractvalue { i64, i32 } %10, 0
  %_7.1 = extractvalue { i64, i32 } %10, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <time::duration::Duration as core::ops::arith::Sub>::sub
  %11 = call { i64, i32 } @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..ops..arith..Sub$GT$3sub17h9cf4ea57258f7c39E"(i64 %_6.0, i32 %_6.1, i64 %_7.0, i32 %_7.1)
  store { i64, i32 } %11, { i64, i32 }* %nanoseconds, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
; call time::duration::Duration::num_nanoseconds
  %12 = call { i64, i64 } @_ZN4time8duration8Duration15num_nanoseconds17h4aef4c731c12f062E({ i64, i32 }* align 8 dereferenceable(16) %nanoseconds)
  %_10.0 = extractvalue { i64, i64 } %12, 0
  %_10.1 = extractvalue { i64, i64 } %12, 1
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::option::Option<T>::unwrap
  %nanoseconds1 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hc131a271405e3408E"(i64 %_10.0, i64 %_10.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1803 to %"core::panic::location::Location"*))
  br label %bb5

bb5:                                              ; preds = %bb4
  %13 = bitcast { i64, i64 }* %self to i64*
  %14 = load i64, i64* %13, align 8
  %15 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %14, i64 %seconds)
  %_13.0 = extractvalue { i64, i1 } %15, 0
  %_13.1 = extractvalue { i64, i1 } %15, 1
  %16 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false)
  br i1 %16, label %panic, label %bb6

bb6:                                              ; preds = %bb5
  %17 = bitcast { i64, i64 }* %self to i64*
  store i64 %_13.0, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %19, i64 %nanoseconds1)
  %_15.0 = extractvalue { i64, i1 } %20, 0
  %_15.1 = extractvalue { i64, i1 } %20, 1
  %21 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false)
  br i1 %21, label %panic2, label %bb7

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1805 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %bb6
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %_15.0, i64* %22, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_17 = load i64, i64* %23, align 8
  %_16 = icmp sge i64 %_17, 1000000000
  br i1 %_16, label %bb8, label %bb11

panic2:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1807 to %"core::panic::location::Location"*)) #17
  unreachable

bb11:                                             ; preds = %bb7
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_23 = load i64, i64* %24, align 8
  %_22 = icmp slt i64 %_23, 0
  br i1 %_22, label %bb12, label %bb15

bb8:                                              ; preds = %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %26, i64 1000000000)
  %_20.0 = extractvalue { i64, i1 } %27, 0
  %_20.1 = extractvalue { i64, i1 } %27, 1
  %28 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false)
  br i1 %28, label %panic3, label %bb9

bb9:                                              ; preds = %bb8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %_20.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %self to i64*
  %31 = load i64, i64* %30, align 8
  %32 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %31, i64 1)
  %_21.0 = extractvalue { i64, i1 } %32, 0
  %_21.1 = extractvalue { i64, i1 } %32, 1
  %33 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false)
  br i1 %33, label %panic4, label %bb10

panic3:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1809 to %"core::panic::location::Location"*)) #17
  unreachable

bb10:                                             ; preds = %bb9
  %34 = bitcast { i64, i64 }* %self to i64*
  store i64 %_21.0, i64* %34, align 8
  br label %bb15

panic4:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1811 to %"core::panic::location::Location"*)) #17
  unreachable

bb15:                                             ; preds = %bb14, %bb11, %bb10
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = insertvalue { i64, i64 } undef, i64 %36, 0
  %40 = insertvalue { i64, i64 } %39, i64 %38, 1
  ret { i64, i64 } %40

bb12:                                             ; preds = %bb11
  %41 = bitcast { i64, i64 }* %self to i64*
  %42 = load i64, i64* %41, align 8
  %43 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %42, i64 1)
  %_24.0 = extractvalue { i64, i1 } %43, 0
  %_24.1 = extractvalue { i64, i1 } %43, 1
  %44 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false)
  br i1 %44, label %panic5, label %bb13

bb13:                                             ; preds = %bb12
  %45 = bitcast { i64, i64 }* %self to i64*
  store i64 %_24.0, i64* %45, align 8
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %47, i64 1000000000)
  %_26.0 = extractvalue { i64, i1 } %48, 0
  %_26.1 = extractvalue { i64, i1 } %48, 1
  %49 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false)
  br i1 %49, label %panic6, label %bb14

panic5:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1813 to %"core::panic::location::Location"*)) #17
  unreachable

bb14:                                             ; preds = %bb13
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %_26.0, i64* %50, align 8
  br label %bb15

panic6:                                           ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1815 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <time::sys::inner::unix::SteadyTime as core::cmp::PartialOrd>::partial_cmp
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN76_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17haafebc2f869f4f5fE"({ i64, i64 }* align 8 dereferenceable(16) %self, { i64, i64 }* align 8 dereferenceable(16) %other) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
; call <time::sys::inner::unix::SteadyTime as core::cmp::Ord>::cmp
  %_3 = call i8 @"_ZN69_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..cmp..Ord$GT$3cmp17h6e907f19e8a9b09fE"({ i64, i64 }* align 8 dereferenceable(16) %self, { i64, i64 }* align 8 dereferenceable(16) %other), !range !6
  br label %bb1

bb1:                                              ; preds = %start
  store i8 %_3, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !5
  ret i8 %1
}

; <time::sys::inner::unix::SteadyTime as core::cmp::Ord>::cmp
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN69_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..cmp..Ord$GT$3cmp17h6e907f19e8a9b09fE"({ i64, i64 }* align 8 dereferenceable(16) %self, { i64, i64 }* align 8 dereferenceable(16) %other) unnamed_addr #1 {
start:
  %_3 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_4 = bitcast { i64, i64 }* %self to i64*
  %_6 = bitcast { i64, i64 }* %other to i64*
; call core::cmp::impls::<impl core::cmp::Ord for i64>::cmp
  %1 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i64$GT$3cmp17h0bbed6e4d8b33fa7E"(i64* align 8 dereferenceable(8) %_4, i64* align 8 dereferenceable(8) %_6), !range !6
  store i8 %1, i8* %_3, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load i8, i8* %_3, align 1, !range !6
  %2 = icmp eq i8 %_7, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %_8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %other, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::Ord for i64>::cmp
  %3 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i64$GT$3cmp17h0bbed6e4d8b33fa7E"(i64* align 8 dereferenceable(8) %_8, i64* align 8 dereferenceable(8) %_10), !range !6
  store i8 %3, i8* %0, align 1
  br label %bb4

bb2:                                              ; preds = %bb1
  %ord = load i8, i8* %_3, align 1, !range !6
  store i8 %ord, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %4 = load i8, i8* %0, align 1, !range !6
  ret i8 %4
}

; <time::sys::inner::unix::SteadyTime as core::cmp::PartialEq>::eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN75_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..cmp..PartialEq$GT$2eq17h4984e7886bafa605E"({ i64, i64 }* align 8 dereferenceable(16) %self, { i64, i64 }* align 8 dereferenceable(16) %other) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast { i64, i64 }* %self to i64*
  %_4 = load i64, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %other to i64*
  %_5 = load i64, i64* %2, align 8
  %_3 = icmp eq i64 %_4, %_5
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_7 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %other, i32 0, i32 1
  %_8 = load i64, i64* %4, align 8
  %_6 = icmp eq i64 %_7, %_8
  %5 = zext i1 %_6 to i8
  store i8 %5, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %6 = load i8, i8* %0, align 1, !range !3
  %7 = trunc i8 %6 to i1
  ret i1 %7
}

; time::Timespec::new
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @_ZN4time8Timespec3new17h007dc71609303389E(i64 %sec, i32 %nsec) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  %0 = alloca { i64, i32 }, align 8
  %_5 = icmp sge i32 %nsec, 0
  br i1 %_5, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_4, align 1
  br label %bb3

bb2:                                              ; preds = %start
  %_7 = icmp slt i32 %nsec, 1000000000
  %1 = zext i1 %_7 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, i8* %_4, align 1, !range !3
  %3 = trunc i8 %2 to i1
  %_3 = xor i1 %3, true
  br i1 %_3, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %4 = bitcast { i64, i32 }* %0 to i64*
  store i64 %sec, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %nsec, i32* %5, align 8
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i64, i32 } undef, i64 %7, 0
  %11 = insertvalue { i64, i32 } %10, i32 %9, 1
  ret { i64, i32 } %11

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast (<{ [50 x i8] }>* @alloc1816 to [0 x i8]*), i64 50, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1818 to %"core::panic::location::Location"*)) #17
  unreachable
}

; <time::Timespec as core::ops::arith::Add<time::duration::Duration>>::add
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @"_ZN88_$LT$time..Timespec$u20$as$u20$core..ops..arith..Add$LT$time..duration..Duration$GT$$GT$3add17hbb3d634b7e36a2b9E"(i64 %self.0, i32 %self.1, i64 %0, i32 %1) unnamed_addr #1 {
start:
  %nsec = alloca i32, align 4
  %sec = alloca i64, align 8
  %_9 = alloca { i64, i32 }, align 8
  %other = alloca { i64, i32 }, align 8
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 1
  store i32 %1, i32* %3, align 8
; call time::duration::Duration::num_seconds
  %d_sec = call i64 @_ZN4time8duration8Duration11num_seconds17h0d8be9022366955dE({ i64, i32 }* align 8 dereferenceable(16) %other)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 0
  %_10.0 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 1
  %_10.1 = load i32, i32* %5, align 8
; call time::duration::Duration::seconds
  %6 = call { i64, i32 } @_ZN4time8duration8Duration7seconds17hd7772c225040ec8eE(i64 %d_sec)
  %_11.0 = extractvalue { i64, i32 } %6, 0
  %_11.1 = extractvalue { i64, i32 } %6, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <time::duration::Duration as core::ops::arith::Sub>::sub
  %7 = call { i64, i32 } @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..ops..arith..Sub$GT$3sub17h9cf4ea57258f7c39E"(i64 %_10.0, i32 %_10.1, i64 %_11.0, i32 %_11.1)
  store { i64, i32 } %7, { i64, i32 }* %_9, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
; call time::duration::Duration::num_nanoseconds
  %8 = call { i64, i64 } @_ZN4time8duration8Duration15num_nanoseconds17h4aef4c731c12f062E({ i64, i32 }* align 8 dereferenceable(16) %_9)
  %_7.0 = extractvalue { i64, i64 } %8, 0
  %_7.1 = extractvalue { i64, i64 } %8, 1
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::option::Option<T>::unwrap
  %_6 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hc131a271405e3408E"(i64 %_7.0, i64 %_7.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1820 to %"core::panic::location::Location"*))
  br label %bb5

bb5:                                              ; preds = %bb4
  %d_nsec = trunc i64 %_6 to i32
  %9 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %self.0, i64 %d_sec)
  %_16.0 = extractvalue { i64, i1 } %9, 0
  %_16.1 = extractvalue { i64, i1 } %9, 1
  %10 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false)
  br i1 %10, label %panic, label %bb6

bb6:                                              ; preds = %bb5
  store i64 %_16.0, i64* %sec, align 8
  %11 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %self.1, i32 %d_nsec)
  %_20.0 = extractvalue { i32, i1 } %11, 0
  %_20.1 = extractvalue { i32, i1 } %11, 1
  %12 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false)
  br i1 %12, label %panic1, label %bb7

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1822 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %bb6
  store i32 %_20.0, i32* %nsec, align 4
  %_22 = load i32, i32* %nsec, align 4
  %_21 = icmp sge i32 %_22, 1000000000
  br i1 %_21, label %bb8, label %bb11

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1824 to %"core::panic::location::Location"*)) #17
  unreachable

bb11:                                             ; preds = %bb7
  %_28 = load i32, i32* %nsec, align 4
  %_27 = icmp slt i32 %_28, 0
  br i1 %_27, label %bb12, label %bb15

bb8:                                              ; preds = %bb7
  %13 = load i32, i32* %nsec, align 4
  %14 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %13, i32 1000000000)
  %_25.0 = extractvalue { i32, i1 } %14, 0
  %_25.1 = extractvalue { i32, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false)
  br i1 %15, label %panic2, label %bb9

bb9:                                              ; preds = %bb8
  store i32 %_25.0, i32* %nsec, align 4
  %16 = load i64, i64* %sec, align 8
  %17 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %16, i64 1)
  %_26.0 = extractvalue { i64, i1 } %17, 0
  %_26.1 = extractvalue { i64, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false)
  br i1 %18, label %panic3, label %bb10

panic2:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1826 to %"core::panic::location::Location"*)) #17
  unreachable

bb10:                                             ; preds = %bb9
  store i64 %_26.0, i64* %sec, align 8
  br label %bb15

panic3:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1828 to %"core::panic::location::Location"*)) #17
  unreachable

bb15:                                             ; preds = %bb14, %bb11, %bb10
  %_32 = load i64, i64* %sec, align 8
  %_33 = load i32, i32* %nsec, align 4
; call time::Timespec::new
  %19 = call { i64, i32 } @_ZN4time8Timespec3new17h007dc71609303389E(i64 %_32, i32 %_33)
  %20 = extractvalue { i64, i32 } %19, 0
  %21 = extractvalue { i64, i32 } %19, 1
  br label %bb16

bb12:                                             ; preds = %bb11
  %22 = load i32, i32* %nsec, align 4
  %23 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 1000000000)
  %_30.0 = extractvalue { i32, i1 } %23, 0
  %_30.1 = extractvalue { i32, i1 } %23, 1
  %24 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %24, label %panic4, label %bb13

bb13:                                             ; preds = %bb12
  store i32 %_30.0, i32* %nsec, align 4
  %25 = load i64, i64* %sec, align 8
  %26 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %25, i64 1)
  %_31.0 = extractvalue { i64, i1 } %26, 0
  %_31.1 = extractvalue { i64, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false)
  br i1 %27, label %panic5, label %bb14

panic4:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1830 to %"core::panic::location::Location"*)) #17
  unreachable

bb14:                                             ; preds = %bb13
  store i64 %_31.0, i64* %sec, align 8
  br label %bb15

panic5:                                           ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1832 to %"core::panic::location::Location"*)) #17
  unreachable

bb16:                                             ; preds = %bb15
  %28 = insertvalue { i64, i32 } undef, i64 %20, 0
  %29 = insertvalue { i64, i32 } %28, i32 %21, 1
  ret { i64, i32 } %29
}

; <time::Timespec as core::ops::arith::Sub<time::duration::Duration>>::sub
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @"_ZN88_$LT$time..Timespec$u20$as$u20$core..ops..arith..Sub$LT$time..duration..Duration$GT$$GT$3sub17h8fd7202bb0bc1f03E"(i64 %self.0, i32 %self.1, i64 %0, i32 %1) unnamed_addr #1 {
start:
  %nsec = alloca i32, align 4
  %sec = alloca i64, align 8
  %_9 = alloca { i64, i32 }, align 8
  %other = alloca { i64, i32 }, align 8
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 1
  store i32 %1, i32* %3, align 8
; call time::duration::Duration::num_seconds
  %d_sec = call i64 @_ZN4time8duration8Duration11num_seconds17h0d8be9022366955dE({ i64, i32 }* align 8 dereferenceable(16) %other)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 0
  %_10.0 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 1
  %_10.1 = load i32, i32* %5, align 8
; call time::duration::Duration::seconds
  %6 = call { i64, i32 } @_ZN4time8duration8Duration7seconds17hd7772c225040ec8eE(i64 %d_sec)
  %_11.0 = extractvalue { i64, i32 } %6, 0
  %_11.1 = extractvalue { i64, i32 } %6, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <time::duration::Duration as core::ops::arith::Sub>::sub
  %7 = call { i64, i32 } @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..ops..arith..Sub$GT$3sub17h9cf4ea57258f7c39E"(i64 %_10.0, i32 %_10.1, i64 %_11.0, i32 %_11.1)
  store { i64, i32 } %7, { i64, i32 }* %_9, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
; call time::duration::Duration::num_nanoseconds
  %8 = call { i64, i64 } @_ZN4time8duration8Duration15num_nanoseconds17h4aef4c731c12f062E({ i64, i32 }* align 8 dereferenceable(16) %_9)
  %_7.0 = extractvalue { i64, i64 } %8, 0
  %_7.1 = extractvalue { i64, i64 } %8, 1
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::option::Option<T>::unwrap
  %_6 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hc131a271405e3408E"(i64 %_7.0, i64 %_7.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1834 to %"core::panic::location::Location"*))
  br label %bb5

bb5:                                              ; preds = %bb4
  %d_nsec = trunc i64 %_6 to i32
  %9 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %self.0, i64 %d_sec)
  %_16.0 = extractvalue { i64, i1 } %9, 0
  %_16.1 = extractvalue { i64, i1 } %9, 1
  %10 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false)
  br i1 %10, label %panic, label %bb6

bb6:                                              ; preds = %bb5
  store i64 %_16.0, i64* %sec, align 8
  %11 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %self.1, i32 %d_nsec)
  %_20.0 = extractvalue { i32, i1 } %11, 0
  %_20.1 = extractvalue { i32, i1 } %11, 1
  %12 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false)
  br i1 %12, label %panic1, label %bb7

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1836 to %"core::panic::location::Location"*)) #17
  unreachable

bb7:                                              ; preds = %bb6
  store i32 %_20.0, i32* %nsec, align 4
  %_22 = load i32, i32* %nsec, align 4
  %_21 = icmp sge i32 %_22, 1000000000
  br i1 %_21, label %bb8, label %bb11

panic1:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1838 to %"core::panic::location::Location"*)) #17
  unreachable

bb11:                                             ; preds = %bb7
  %_28 = load i32, i32* %nsec, align 4
  %_27 = icmp slt i32 %_28, 0
  br i1 %_27, label %bb12, label %bb15

bb8:                                              ; preds = %bb7
  %13 = load i32, i32* %nsec, align 4
  %14 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %13, i32 1000000000)
  %_25.0 = extractvalue { i32, i1 } %14, 0
  %_25.1 = extractvalue { i32, i1 } %14, 1
  %15 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false)
  br i1 %15, label %panic2, label %bb9

bb9:                                              ; preds = %bb8
  store i32 %_25.0, i32* %nsec, align 4
  %16 = load i64, i64* %sec, align 8
  %17 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %16, i64 1)
  %_26.0 = extractvalue { i64, i1 } %17, 0
  %_26.1 = extractvalue { i64, i1 } %17, 1
  %18 = call i1 @llvm.expect.i1(i1 %_26.1, i1 false)
  br i1 %18, label %panic3, label %bb10

panic2:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1840 to %"core::panic::location::Location"*)) #17
  unreachable

bb10:                                             ; preds = %bb9
  store i64 %_26.0, i64* %sec, align 8
  br label %bb15

panic3:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1842 to %"core::panic::location::Location"*)) #17
  unreachable

bb15:                                             ; preds = %bb14, %bb11, %bb10
  %_32 = load i64, i64* %sec, align 8
  %_33 = load i32, i32* %nsec, align 4
; call time::Timespec::new
  %19 = call { i64, i32 } @_ZN4time8Timespec3new17h007dc71609303389E(i64 %_32, i32 %_33)
  %20 = extractvalue { i64, i32 } %19, 0
  %21 = extractvalue { i64, i32 } %19, 1
  br label %bb16

bb12:                                             ; preds = %bb11
  %22 = load i32, i32* %nsec, align 4
  %23 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 1000000000)
  %_30.0 = extractvalue { i32, i1 } %23, 0
  %_30.1 = extractvalue { i32, i1 } %23, 1
  %24 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false)
  br i1 %24, label %panic4, label %bb13

bb13:                                             ; preds = %bb12
  store i32 %_30.0, i32* %nsec, align 4
  %25 = load i64, i64* %sec, align 8
  %26 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %25, i64 1)
  %_31.0 = extractvalue { i64, i1 } %26, 0
  %_31.1 = extractvalue { i64, i1 } %26, 1
  %27 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false)
  br i1 %27, label %panic5, label %bb14

panic4:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.b to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1844 to %"core::panic::location::Location"*)) #17
  unreachable

bb14:                                             ; preds = %bb13
  store i64 %_31.0, i64* %sec, align 8
  br label %bb15

panic5:                                           ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1846 to %"core::panic::location::Location"*)) #17
  unreachable

bb16:                                             ; preds = %bb15
  %28 = insertvalue { i64, i32 } undef, i64 %20, 0
  %29 = insertvalue { i64, i32 } %28, i32 %21, 1
  ret { i64, i32 } %29
}

; <time::Timespec as core::ops::arith::Sub>::sub
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @"_ZN56_$LT$time..Timespec$u20$as$u20$core..ops..arith..Sub$GT$3sub17hb0cdff4072d799d8E"(i64 %self.0, i32 %self.1, i64 %other.0, i32 %other.1) unnamed_addr #1 {
start:
  %0 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %self.0, i64 %other.0)
  %_6.0 = extractvalue { i64, i1 } %0, 0
  %_6.1 = extractvalue { i64, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %self.1, i32 %other.1)
  %_10.0 = extractvalue { i32, i1 } %2, 0
  %_10.1 = extractvalue { i32, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false)
  br i1 %3, label %panic1, label %bb2

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1848 to %"core::panic::location::Location"*)) #17
  unreachable

bb2:                                              ; preds = %bb1
; call time::duration::Duration::seconds
  %4 = call { i64, i32 } @_ZN4time8duration8Duration7seconds17hd7772c225040ec8eE(i64 %_6.0)
  %_11.0 = extractvalue { i64, i32 } %4, 0
  %_11.1 = extractvalue { i64, i32 } %4, 1
  br label %bb3

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1850 to %"core::panic::location::Location"*)) #17
  unreachable

bb3:                                              ; preds = %bb2
  %_14 = sext i32 %_10.0 to i64
; call time::duration::Duration::nanoseconds
  %5 = call { i64, i32 } @_ZN4time8duration8Duration11nanoseconds17h4ee53b6f99fb181fE(i64 %_14)
  %_13.0 = extractvalue { i64, i32 } %5, 0
  %_13.1 = extractvalue { i64, i32 } %5, 1
  br label %bb4

bb4:                                              ; preds = %bb3
; call <time::duration::Duration as core::ops::arith::Add>::add
  %6 = call { i64, i32 } @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..ops..arith..Add$GT$3add17h4d240b1e003f7280E"(i64 %_11.0, i32 %_11.1, i64 %_13.0, i32 %_13.1)
  %7 = extractvalue { i64, i32 } %6, 0
  %8 = extractvalue { i64, i32 } %6, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = insertvalue { i64, i32 } undef, i64 %7, 0
  %10 = insertvalue { i64, i32 } %9, i32 %8, 1
  ret { i64, i32 } %10
}

; time::get_time
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @_ZN4time8get_time17h5d1b41eb7b9d446eE() unnamed_addr #1 {
start:
; call time::sys::inner::unix::get_time
  %0 = call { i64, i32 } @_ZN4time3sys5inner4unix8get_time17hd48d22717bf474c6E()
  %_3.0 = extractvalue { i64, i32 } %0, 0
  %_3.1 = extractvalue { i64, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call time::Timespec::new
  %1 = call { i64, i32 } @_ZN4time8Timespec3new17h007dc71609303389E(i64 %_3.0, i32 %_3.1)
  %2 = extractvalue { i64, i32 } %1, 0
  %3 = extractvalue { i64, i32 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i32 } undef, i64 %2, 0
  %5 = insertvalue { i64, i32 } %4, i32 %3, 1
  ret { i64, i32 } %5
}

; time::precise_time_ns
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4time15precise_time_ns17h79c8e0b8a98737f9E() unnamed_addr #0 {
start:
; call time::sys::inner::unix::get_precise_ns
  %0 = call i64 @_ZN4time3sys5inner4unix14get_precise_ns17h762b8550eed94ac5E()
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; time::precise_time_s
; Function Attrs: nonlazybind uwtable
define double @_ZN4time14precise_time_s17hc06645b606bd7683E() unnamed_addr #1 {
start:
; call time::precise_time_ns
  %_2 = call i64 @_ZN4time15precise_time_ns17h79c8e0b8a98737f9E()
  br label %bb1

bb1:                                              ; preds = %start
  %_1 = uitofp i64 %_2 to double
  %0 = fdiv double %_1, 1.000000e+09
  ret double %0
}

; time::PreciseTime::now
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4time11PreciseTime3now17h8196b3a5f7ba7bd2E() unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
; call time::precise_time_ns
  %_1 = call i64 @_ZN4time15precise_time_ns17h79c8e0b8a98737f9E()
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %_1, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; time::SteadyTime::now
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4time10SteadyTime3now17h031722ced4dac07eE() unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
; call time::sys::inner::unix::SteadyTime::now
  %1 = call { i64, i64 } @_ZN4time3sys5inner4unix10SteadyTime3now17h67984996f3a3979eE()
  %_1.0 = extractvalue { i64, i64 } %1, 0
  %_1.1 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_1.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_1.1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; <time::SteadyTime as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN55_$LT$time..SteadyTime$u20$as$u20$core..fmt..Display$GT$3fmt17h181e89742cd750e0E"({ i64, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt) unnamed_addr #1 {
start:
; call <time::SteadyTime as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN53_$LT$time..SteadyTime$u20$as$u20$core..fmt..Debug$GT$3fmt17hb1aa9b9c3a3f9270E"({ i64, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %fmt)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <time::SteadyTime as core::ops::arith::Sub>::sub
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @"_ZN58_$LT$time..SteadyTime$u20$as$u20$core..ops..arith..Sub$GT$3sub17h3f348a99f876e843E"(i64 %self.0, i64 %self.1, i64 %other.0, i64 %other.1) unnamed_addr #1 {
start:
; call <time::sys::inner::unix::SteadyTime as core::ops::arith::Sub>::sub
  %0 = call { i64, i32 } @"_ZN76_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..ops..arith..Sub$GT$3sub17h973b655848ced415E"(i64 %self.0, i64 %self.1, i64 %other.0, i64 %other.1)
  %1 = extractvalue { i64, i32 } %0, 0
  %2 = extractvalue { i64, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i32 } undef, i64 %1, 0
  %4 = insertvalue { i64, i32 } %3, i32 %2, 1
  ret { i64, i32 } %4
}

; <time::SteadyTime as core::ops::arith::Sub<time::duration::Duration>>::sub
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN90_$LT$time..SteadyTime$u20$as$u20$core..ops..arith..Sub$LT$time..duration..Duration$GT$$GT$3sub17h32afc7844a741f1bE"(i64 %self.0, i64 %self.1, i64 %other.0, i32 %other.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
; call <time::sys::inner::unix::SteadyTime as core::ops::arith::Sub<time::duration::Duration>>::sub
  %1 = call { i64, i64 } @"_ZN108_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..ops..arith..Sub$LT$time..duration..Duration$GT$$GT$3sub17hc40bc6edd38557c9E"(i64 %self.0, i64 %self.1, i64 %other.0, i32 %other.1)
  %_3.0 = extractvalue { i64, i64 } %1, 0
  %_3.1 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_3.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_3.1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; <time::SteadyTime as core::ops::arith::Add<time::duration::Duration>>::add
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN90_$LT$time..SteadyTime$u20$as$u20$core..ops..arith..Add$LT$time..duration..Duration$GT$$GT$3add17h903f1328d542db7eE"(i64 %self.0, i64 %self.1, i64 %other.0, i32 %other.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
; call <time::sys::inner::unix::SteadyTime as core::ops::arith::Add<time::duration::Duration>>::add
  %1 = call { i64, i64 } @"_ZN108_$LT$time..sys..inner..unix..SteadyTime$u20$as$u20$core..ops..arith..Add$LT$time..duration..Duration$GT$$GT$3add17h3c7db2dde0a33d4bE"(i64 %self.0, i64 %self.1, i64 %other.0, i32 %other.1)
  %_3.0 = extractvalue { i64, i64 } %1, 0
  %_3.1 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_3.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_3.1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; time::tzset
; Function Attrs: nonlazybind uwtable
define void @_ZN4time5tzset17he38db32e25bc43d5E() unnamed_addr #1 {
start:
  call void @tzset()
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <time::Tm as core::ops::arith::Add<time::duration::Duration>>::add
; Function Attrs: nonlazybind uwtable
define void @"_ZN82_$LT$time..Tm$u20$as$u20$core..ops..arith..Add$LT$time..duration..Duration$GT$$GT$3add17h6d165d658a3e35b0E"(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %0, %Tm* noalias nocapture dereferenceable(44) %self, i64 %other.0, i32 %other.1) unnamed_addr #1 {
start:
; call time::Tm::to_timespec
  %1 = call { i64, i32 } @_ZN4time2Tm11to_timespec17hd91ed0d53e0d439dE(%Tm* align 4 dereferenceable(44) %self)
  %_4.0 = extractvalue { i64, i32 } %1, 0
  %_4.1 = extractvalue { i64, i32 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <time::Timespec as core::ops::arith::Add<time::duration::Duration>>::add
  %2 = call { i64, i32 } @"_ZN88_$LT$time..Timespec$u20$as$u20$core..ops..arith..Add$LT$time..duration..Duration$GT$$GT$3add17hbb3d634b7e36a2b9E"(i64 %_4.0, i32 %_4.1, i64 %other.0, i32 %other.1)
  %_3.0 = extractvalue { i64, i32 } %2, 0
  %_3.1 = extractvalue { i64, i32 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call time::at_utc
  call void @_ZN4time6at_utc17h0f59319a2b1d97a1E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %0, i64 %_3.0, i32 %_3.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <time::Tm as core::ops::arith::Sub<time::duration::Duration>>::sub
; Function Attrs: nonlazybind uwtable
define void @"_ZN82_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$LT$time..duration..Duration$GT$$GT$3sub17hbeca56e7784c53d5E"(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %0, %Tm* noalias nocapture dereferenceable(44) %self, i64 %other.0, i32 %other.1) unnamed_addr #1 {
start:
; call time::Tm::to_timespec
  %1 = call { i64, i32 } @_ZN4time2Tm11to_timespec17hd91ed0d53e0d439dE(%Tm* align 4 dereferenceable(44) %self)
  %_4.0 = extractvalue { i64, i32 } %1, 0
  %_4.1 = extractvalue { i64, i32 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <time::Timespec as core::ops::arith::Sub<time::duration::Duration>>::sub
  %2 = call { i64, i32 } @"_ZN88_$LT$time..Timespec$u20$as$u20$core..ops..arith..Sub$LT$time..duration..Duration$GT$$GT$3sub17h8fd7202bb0bc1f03E"(i64 %_4.0, i32 %_4.1, i64 %other.0, i32 %other.1)
  %_3.0 = extractvalue { i64, i32 } %2, 0
  %_3.1 = extractvalue { i64, i32 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call time::at_utc
  call void @_ZN4time6at_utc17h0f59319a2b1d97a1E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %0, i64 %_3.0, i32 %_3.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <time::Tm as core::ops::arith::Sub>::sub
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @"_ZN50_$LT$time..Tm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h894b78ab7e092139E"(%Tm* noalias nocapture dereferenceable(44) %self, %Tm* noalias nocapture dereferenceable(44) %other) unnamed_addr #1 {
start:
; call time::Tm::to_timespec
  %0 = call { i64, i32 } @_ZN4time2Tm11to_timespec17hd91ed0d53e0d439dE(%Tm* align 4 dereferenceable(44) %self)
  %_3.0 = extractvalue { i64, i32 } %0, 0
  %_3.1 = extractvalue { i64, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call time::Tm::to_timespec
  %1 = call { i64, i32 } @_ZN4time2Tm11to_timespec17hd91ed0d53e0d439dE(%Tm* align 4 dereferenceable(44) %other)
  %_5.0 = extractvalue { i64, i32 } %1, 0
  %_5.1 = extractvalue { i64, i32 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call <time::Timespec as core::ops::arith::Sub>::sub
  %2 = call { i64, i32 } @"_ZN56_$LT$time..Timespec$u20$as$u20$core..ops..arith..Sub$GT$3sub17hb0cdff4072d799d8E"(i64 %_3.0, i32 %_3.1, i64 %_5.0, i32 %_5.1)
  %3 = extractvalue { i64, i32 } %2, 0
  %4 = extractvalue { i64, i32 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = insertvalue { i64, i32 } undef, i64 %3, 0
  %6 = insertvalue { i64, i32 } %5, i32 %4, 1
  ret { i64, i32 } %6
}

; <time::Tm as core::cmp::PartialOrd>::partial_cmp
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN50_$LT$time..Tm$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17hc1f194b65b39a7e7E"(%Tm* align 4 dereferenceable(44) %self, %Tm* align 4 dereferenceable(44) %other) unnamed_addr #1 {
start:
  %_8 = alloca { i64, i32 }, align 8
  %_4 = alloca { i64, i32 }, align 8
; call time::Tm::to_timespec
  %0 = call { i64, i32 } @_ZN4time2Tm11to_timespec17hd91ed0d53e0d439dE(%Tm* align 4 dereferenceable(44) %self)
  store { i64, i32 } %0, { i64, i32 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call time::Tm::to_timespec
  %1 = call { i64, i32 } @_ZN4time2Tm11to_timespec17hd91ed0d53e0d439dE(%Tm* align 4 dereferenceable(44) %other)
  store { i64, i32 } %1, { i64, i32 }* %_8, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call <time::Timespec as core::cmp::PartialOrd>::partial_cmp
  %2 = call i8 @"_ZN56_$LT$time..Timespec$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h5c89df7844da1f3dE"({ i64, i32 }* align 8 dereferenceable(16) %_4, { i64, i32 }* align 8 dereferenceable(16) %_8), !range !5
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8 %2
}

; <time::Tm as core::cmp::Ord>::cmp
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN43_$LT$time..Tm$u20$as$u20$core..cmp..Ord$GT$3cmp17h64c587dc3de158edE"(%Tm* align 4 dereferenceable(44) %self, %Tm* align 4 dereferenceable(44) %other) unnamed_addr #1 {
start:
  %_8 = alloca { i64, i32 }, align 8
  %_4 = alloca { i64, i32 }, align 8
; call time::Tm::to_timespec
  %0 = call { i64, i32 } @_ZN4time2Tm11to_timespec17hd91ed0d53e0d439dE(%Tm* align 4 dereferenceable(44) %self)
  store { i64, i32 } %0, { i64, i32 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call time::Tm::to_timespec
  %1 = call { i64, i32 } @_ZN4time2Tm11to_timespec17hd91ed0d53e0d439dE(%Tm* align 4 dereferenceable(44) %other)
  store { i64, i32 } %1, { i64, i32 }* %_8, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call <time::Timespec as core::cmp::Ord>::cmp
  %2 = call i8 @"_ZN49_$LT$time..Timespec$u20$as$u20$core..cmp..Ord$GT$3cmp17hd71a18e2ad897d26E"({ i64, i32 }* align 8 dereferenceable(16) %_4, { i64, i32 }* align 8 dereferenceable(16) %_8), !range !6
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8 %2
}

; time::empty_tm
; Function Attrs: nonlazybind uwtable
define void @_ZN4time8empty_tm17ha796fc09eea8e367E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %0) unnamed_addr #1 {
start:
  %1 = bitcast %Tm* %0 to i32*
  store i32 0, i32* %1, align 4
  %2 = getelementptr inbounds %Tm, %Tm* %0, i32 0, i32 1
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %Tm, %Tm* %0, i32 0, i32 2
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %Tm, %Tm* %0, i32 0, i32 3
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %Tm, %Tm* %0, i32 0, i32 4
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %Tm, %Tm* %0, i32 0, i32 5
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %Tm, %Tm* %0, i32 0, i32 6
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %Tm, %Tm* %0, i32 0, i32 7
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %Tm, %Tm* %0, i32 0, i32 8
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %Tm, %Tm* %0, i32 0, i32 9
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %Tm, %Tm* %0, i32 0, i32 10
  store i32 0, i32* %11, align 4
  ret void
}

; time::at_utc
; Function Attrs: nonlazybind uwtable
define void @_ZN4time6at_utc17h0f59319a2b1d97a1E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %tm, i64 %clock.0, i32 %clock.1) unnamed_addr #1 {
start:
; call time::empty_tm
  call void @_ZN4time8empty_tm17ha796fc09eea8e367E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %tm)
  br label %bb1

bb1:                                              ; preds = %start
; call time::sys::inner::time_to_utc_tm
  call void @_ZN4time3sys5inner14time_to_utc_tm17h6e354c1ed41b7c67E(i64 %clock.0, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 10
  store i32 %clock.1, i32* %0, align 4
  ret void
}

; time::now_utc
; Function Attrs: nonlazybind uwtable
define void @_ZN4time7now_utc17h5b7112d6eec00c7bE(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %0) unnamed_addr #1 {
start:
; call time::get_time
  %1 = call { i64, i32 } @_ZN4time8get_time17h5d1b41eb7b9d446eE()
  %_1.0 = extractvalue { i64, i32 } %1, 0
  %_1.1 = extractvalue { i64, i32 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call time::at_utc
  call void @_ZN4time6at_utc17h0f59319a2b1d97a1E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %0, i64 %_1.0, i32 %_1.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; time::at
; Function Attrs: nonlazybind uwtable
define void @_ZN4time2at17hadcae17c098953c5E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %tm, i64 %clock.0, i32 %clock.1) unnamed_addr #1 {
start:
; call time::empty_tm
  call void @_ZN4time8empty_tm17ha796fc09eea8e367E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %tm)
  br label %bb1

bb1:                                              ; preds = %start
; call time::sys::inner::time_to_local_tm
  call void @_ZN4time3sys5inner16time_to_local_tm17hb50571af944490c6E(i64 %clock.0, %Tm* align 4 dereferenceable(44) %tm)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = getelementptr inbounds %Tm, %Tm* %tm, i32 0, i32 10
  store i32 %clock.1, i32* %0, align 4
  ret void
}

; time::now
; Function Attrs: nonlazybind uwtable
define void @_ZN4time3now17h08f790929957ebd7E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %0) unnamed_addr #1 {
start:
; call time::get_time
  %1 = call { i64, i32 } @_ZN4time8get_time17h5d1b41eb7b9d446eE()
  %_1.0 = extractvalue { i64, i32 } %1, 0
  %_1.1 = extractvalue { i64, i32 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call time::at
  call void @_ZN4time2at17hadcae17c098953c5E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %0, i64 %_1.0, i32 %_1.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; time::Tm::to_timespec
; Function Attrs: nonlazybind uwtable
define { i64, i32 } @_ZN4time2Tm11to_timespec17hd91ed0d53e0d439dE(%Tm* align 4 dereferenceable(44) %self) unnamed_addr #1 {
start:
  %sec = alloca i64, align 8
  %0 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 9
  %1 = load i32, i32* %0, align 4
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %bb2, label %bb1

bb2:                                              ; preds = %start
; call time::sys::inner::utc_tm_to_time
  %3 = call i64 @_ZN4time3sys5inner14utc_tm_to_time17h0e0977b04bbb9076E(%Tm* align 4 dereferenceable(44) %self)
  store i64 %3, i64* %sec, align 8
  br label %bb3

bb1:                                              ; preds = %start
; call time::sys::inner::local_tm_to_time
  %4 = call i64 @_ZN4time3sys5inner16local_tm_to_time17h0cbc15f961d20be9E(%Tm* align 4 dereferenceable(44) %self)
  store i64 %4, i64* %sec, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %_5 = load i64, i64* %sec, align 8
  %5 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 10
  %_6 = load i32, i32* %5, align 4
; call time::Timespec::new
  %6 = call { i64, i32 } @_ZN4time8Timespec3new17h007dc71609303389E(i64 %_5, i32 %_6)
  %7 = extractvalue { i64, i32 } %6, 0
  %8 = extractvalue { i64, i32 } %6, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %9 = insertvalue { i64, i32 } undef, i64 %7, 0
  %10 = insertvalue { i64, i32 } %9, i32 %8, 1
  ret { i64, i32 } %10
}

; time::Tm::to_local
; Function Attrs: nonlazybind uwtable
define void @_ZN4time2Tm8to_local17h8c6c84e8f81a1338E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %0, %Tm* align 4 dereferenceable(44) %self) unnamed_addr #1 {
start:
; call time::Tm::to_timespec
  %1 = call { i64, i32 } @_ZN4time2Tm11to_timespec17hd91ed0d53e0d439dE(%Tm* align 4 dereferenceable(44) %self)
  %_2.0 = extractvalue { i64, i32 } %1, 0
  %_2.1 = extractvalue { i64, i32 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call time::at
  call void @_ZN4time2at17hadcae17c098953c5E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %0, i64 %_2.0, i32 %_2.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; time::Tm::to_utc
; Function Attrs: nonlazybind uwtable
define void @_ZN4time2Tm6to_utc17h9480afa7976b4dbbE(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %0, %Tm* align 4 dereferenceable(44) %self) unnamed_addr #1 {
start:
  %1 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 9
  %2 = load i32, i32* %1, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %bb2, label %bb1

bb2:                                              ; preds = %start
  %4 = bitcast %Tm* %0 to i8*
  %5 = bitcast %Tm* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 44, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
; call time::Tm::to_timespec
  %6 = call { i64, i32 } @_ZN4time2Tm11to_timespec17hd91ed0d53e0d439dE(%Tm* align 4 dereferenceable(44) %self)
  %_2.0 = extractvalue { i64, i32 } %6, 0
  %_2.1 = extractvalue { i64, i32 } %6, 1
  br label %bb3

bb3:                                              ; preds = %bb1
; call time::at_utc
  call void @_ZN4time6at_utc17h0f59319a2b1d97a1E(%Tm* noalias nocapture sret(%Tm) dereferenceable(44) %0, i64 %_2.0, i32 %_2.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void
}

; time::Tm::ctime
; Function Attrs: nonlazybind uwtable
define void @_ZN4time2Tm5ctime17h530c655ab617c819E(%TmFmt* noalias nocapture sret(%TmFmt) dereferenceable(32) %0, %Tm* align 4 dereferenceable(44) %self) unnamed_addr #1 {
start:
  %_3 = alloca %Fmt, align 8
  %1 = bitcast %Fmt* %_3 to i64*
  store i64 2, i64* %1, align 8
  %2 = bitcast %TmFmt* %0 to %Tm**
  store %Tm* %self, %Tm** %2, align 8
  %3 = getelementptr inbounds %TmFmt, %TmFmt* %0, i32 0, i32 1
  %4 = bitcast %Fmt* %3 to i8*
  %5 = bitcast %Fmt* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  ret void
}

; time::Tm::asctime
; Function Attrs: nonlazybind uwtable
define void @_ZN4time2Tm7asctime17hf092359bf762d308E(%TmFmt* noalias nocapture sret(%TmFmt) dereferenceable(32) %0, %Tm* align 4 dereferenceable(44) %self) unnamed_addr #1 {
start:
  %_3 = alloca %Fmt, align 8
  %1 = bitcast %Fmt* %_3 to %"Fmt::Str"*
  %2 = getelementptr inbounds %"Fmt::Str", %"Fmt::Str"* %1, i32 0, i32 1
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [2 x i8] }>* @alloc1851 to [0 x i8]*), [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 2, i64* %4, align 8
  %5 = bitcast %Fmt* %_3 to i64*
  store i64 0, i64* %5, align 8
  %6 = bitcast %TmFmt* %0 to %Tm**
  store %Tm* %self, %Tm** %6, align 8
  %7 = getelementptr inbounds %TmFmt, %TmFmt* %0, i32 0, i32 1
  %8 = bitcast %Fmt* %7 to i8*
  %9 = bitcast %Fmt* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  ret void
}

; time::Tm::strftime
; Function Attrs: nonlazybind uwtable
define void @_ZN4time2Tm8strftime17h2b25fbd5a63a81faE(%"core::result::Result<TmFmt, ParseError>"* noalias nocapture sret(%"core::result::Result<TmFmt, ParseError>") dereferenceable(40) %0, %Tm* align 4 dereferenceable(44) %self, [0 x i8]* nonnull align 1 %format.0, i64 %format.1) unnamed_addr #1 {
start:
  %_5 = alloca %Fmt, align 8
  %_3 = alloca %TmFmt, align 8
  %1 = bitcast %Fmt* %_5 to %"Fmt::Str"*
  %2 = getelementptr inbounds %"Fmt::Str", %"Fmt::Str"* %1, i32 0, i32 1
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %format.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %format.1, i64* %4, align 8
  %5 = bitcast %Fmt* %_5 to i64*
  store i64 0, i64* %5, align 8
  %6 = bitcast %TmFmt* %_3 to %Tm**
  store %Tm* %self, %Tm** %6, align 8
  %7 = getelementptr inbounds %TmFmt, %TmFmt* %_3, i32 0, i32 1
  %8 = bitcast %Fmt* %7 to i8*
  %9 = bitcast %Fmt* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
; call time::validate_format
  call void @_ZN4time15validate_format17h0b612879e5c3ee7cE(%"core::result::Result<TmFmt, ParseError>"* noalias nocapture sret(%"core::result::Result<TmFmt, ParseError>") dereferenceable(40) %0, %TmFmt* noalias nocapture dereferenceable(32) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; time::Tm::rfc822
; Function Attrs: nonlazybind uwtable
define void @_ZN4time2Tm6rfc82217h1c416c0972a252b0E(%TmFmt* noalias nocapture sret(%TmFmt) dereferenceable(32) %0, %Tm* align 4 dereferenceable(44) %self) unnamed_addr #1 {
start:
  %_6 = alloca %Fmt, align 8
  %fmt = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 9
  %_3 = load i32, i32* %1, align 4
  %2 = icmp eq i32 %_3, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %fmt, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [19 x i8] }>* @alloc1853 to [0 x i8]*), [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %fmt, i32 0, i32 1
  store i64 19, i64* %4, align 8
  br label %bb3

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %fmt, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [18 x i8] }>* @alloc1852 to [0 x i8]*), [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %fmt, i32 0, i32 1
  store i64 18, i64* %6, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %fmt, i32 0, i32 0
  %_7.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !4
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %fmt, i32 0, i32 1
  %_7.1 = load i64, i64* %8, align 8
  %9 = bitcast %Fmt* %_6 to %"Fmt::Str"*
  %10 = getelementptr inbounds %"Fmt::Str", %"Fmt::Str"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0
  store [0 x i8]* %_7.0, [0 x i8]** %11, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1
  store i64 %_7.1, i64* %12, align 8
  %13 = bitcast %Fmt* %_6 to i64*
  store i64 0, i64* %13, align 8
  %14 = bitcast %TmFmt* %0 to %Tm**
  store %Tm* %self, %Tm** %14, align 8
  %15 = getelementptr inbounds %TmFmt, %TmFmt* %0, i32 0, i32 1
  %16 = bitcast %Fmt* %15 to i8*
  %17 = bitcast %Fmt* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  ret void
}

; time::Tm::rfc822z
; Function Attrs: nonlazybind uwtable
define void @_ZN4time2Tm7rfc822z17h7bb2a929bfa5a283E(%TmFmt* noalias nocapture sret(%TmFmt) dereferenceable(32) %0, %Tm* align 4 dereferenceable(44) %self) unnamed_addr #1 {
start:
  %_3 = alloca %Fmt, align 8
  %1 = bitcast %Fmt* %_3 to %"Fmt::Str"*
  %2 = getelementptr inbounds %"Fmt::Str", %"Fmt::Str"* %1, i32 0, i32 1
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [18 x i8] }>* @alloc1854 to [0 x i8]*), [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 18, i64* %4, align 8
  %5 = bitcast %Fmt* %_3 to i64*
  store i64 0, i64* %5, align 8
  %6 = bitcast %TmFmt* %0 to %Tm**
  store %Tm* %self, %Tm** %6, align 8
  %7 = getelementptr inbounds %TmFmt, %TmFmt* %0, i32 0, i32 1
  %8 = bitcast %Fmt* %7 to i8*
  %9 = bitcast %Fmt* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  ret void
}

; time::Tm::rfc3339
; Function Attrs: nonlazybind uwtable
define void @_ZN4time2Tm7rfc333917h3459dda6d0b6b847E(%TmFmt* noalias nocapture sret(%TmFmt) dereferenceable(32) %0, %Tm* align 4 dereferenceable(44) %self) unnamed_addr #1 {
start:
  %_3 = alloca %Fmt, align 8
  %1 = bitcast %Fmt* %_3 to i64*
  store i64 1, i64* %1, align 8
  %2 = bitcast %TmFmt* %0 to %Tm**
  store %Tm* %self, %Tm** %2, align 8
  %3 = getelementptr inbounds %TmFmt, %TmFmt* %0, i32 0, i32 1
  %4 = bitcast %Fmt* %3 to i8*
  %5 = bitcast %Fmt* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  ret void
}

; <time::ParseError as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN55_$LT$time..ParseError$u20$as$u20$core..fmt..Display$GT$3fmt17h452d147ada196149E"(%ParseError* align 4 dereferenceable(12) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_58 = alloca { [0 x i8]*, i64 }, align 8
  %_56 = alloca i64*, align 8
  %_55 = alloca [1 x { i8*, i64* }], align 8
  %_48 = alloca %"core::fmt::Arguments", align 8
  %_37 = alloca { i32*, i32* }, align 8
  %_36 = alloca [2 x { i8*, i64* }], align 8
  %_29 = alloca %"core::fmt::Arguments", align 8
  %b = alloca i32, align 4
  %a = alloca i32, align 4
  %_16 = alloca { [0 x i8]*, i64 }, align 8
  %_14 = alloca { i64*, i32* }, align 8
  %_13 = alloca [2 x { i8*, i64* }], align 8
  %_6 = alloca %"core::fmt::Arguments", align 8
  %ch = alloca i32, align 4
  %0 = alloca i8, align 1
  %1 = bitcast %ParseError* %self to i32*
  %2 = load i32, i32* %1, align 4, !range !81
  %_3 = zext i32 %2 to i64
  switch i64 %_3, label %bb1 [
    i64 13, label %bb2
    i64 14, label %bb7
  ]

bb1:                                              ; preds = %start
; call <time::ParseError as std::error::Error>::description
  %3 = call { [0 x i8]*, i64 } @"_ZN54_$LT$time..ParseError$u20$as$u20$std..error..Error$GT$11description17h8f1d6cbdcc055a17E"(%ParseError* align 4 dereferenceable(12) %self)
  store { [0 x i8]*, i64 } %3, { [0 x i8]*, i64 }* %_58, align 8
  br label %bb11

bb2:                                              ; preds = %start
  %4 = bitcast %ParseError* %self to %"ParseError::InvalidFormatSpecifier"*
  %5 = getelementptr inbounds %"ParseError::InvalidFormatSpecifier", %"ParseError::InvalidFormatSpecifier"* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 4, !range !15
  store i32 %6, i32* %ch, align 4
; call <time::ParseError as std::error::Error>::description
  %7 = call { [0 x i8]*, i64 } @"_ZN54_$LT$time..ParseError$u20$as$u20$std..error..Error$GT$11description17h8f1d6cbdcc055a17E"(%ParseError* align 4 dereferenceable(12) %self)
  store { [0 x i8]*, i64 } %7, { [0 x i8]*, i64 }* %_16, align 8
  br label %bb3

bb7:                                              ; preds = %start
  %8 = bitcast %ParseError* %self to %"ParseError::UnexpectedCharacter"*
  %9 = getelementptr inbounds %"ParseError::UnexpectedCharacter", %"ParseError::UnexpectedCharacter"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 4, !range !15
  store i32 %10, i32* %a, align 4
  %11 = bitcast %ParseError* %self to %"ParseError::UnexpectedCharacter"*
  %12 = getelementptr inbounds %"ParseError::UnexpectedCharacter", %"ParseError::UnexpectedCharacter"* %11, i32 0, i32 2
  %13 = load i32, i32* %12, align 4, !range !15
  store i32 %13, i32* %b, align 4
  %14 = bitcast { i32*, i32* }* %_37 to i32**
  store i32* %a, i32** %14, align 8
  %15 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_37, i32 0, i32 1
  store i32* %b, i32** %15, align 8
  %16 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_37, i32 0, i32 0
  %_args.0 = load i32*, i32** %16, align 8, !nonnull !4
  %17 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_37, i32 0, i32 1
  %_args.1 = load i32*, i32** %17, align 8, !nonnull !4
; call core::fmt::ArgumentV1::new
  %18 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h296710cf9c74ed59E(i32* align 4 dereferenceable(4) %_args.0, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h011d980131b3c87bE")
  %_41.0 = extractvalue { i8*, i64* } %18, 0
  %_41.1 = extractvalue { i8*, i64* } %18, 1
  br label %bb8

bb11:                                             ; preds = %bb1
  %19 = bitcast i64** %_56 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %_58, { [0 x i8]*, i64 }** %19, align 8
  %_args = load i64*, i64** %_56, align 8, !nonnull !4
  %_62 = bitcast i64* %_args to { [0 x i8]*, i64 }*
; call core::fmt::ArgumentV1::new
  %20 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17ha52a6fb3d74479f1E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_62, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h18a698e2acc26c61E")
  %_61.0 = extractvalue { i8*, i64* } %20, 0
  %_61.1 = extractvalue { i8*, i64* } %20, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %21 = bitcast [1 x { i8*, i64* }]* %_55 to { i8*, i64* }*
  %22 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %21, i32 0, i32 0
  store i8* %_61.0, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %21, i32 0, i32 1
  store i64* %_61.1, i64** %23, align 8
  %_52.0 = bitcast [1 x { i8*, i64* }]* %_55 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_48, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc1135 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 %_52.0, i64 1)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::fmt::Formatter::write_fmt
  %24 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_48)
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %0, align 1
  br label %bb14

bb14:                                             ; preds = %bb6, %bb10, %bb13
  %26 = load i8, i8* %0, align 1, !range !3
  %27 = trunc i8 %26 to i1
  ret i1 %27

bb8:                                              ; preds = %bb7
; call core::fmt::ArgumentV1::new
  %28 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h296710cf9c74ed59E(i32* align 4 dereferenceable(4) %_args.1, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h011d980131b3c87bE")
  %_44.0 = extractvalue { i8*, i64* } %28, 0
  %_44.1 = extractvalue { i8*, i64* } %28, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %29 = bitcast [2 x { i8*, i64* }]* %_36 to { i8*, i64* }*
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %29, i32 0, i32 0
  store i8* %_41.0, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %29, i32 0, i32 1
  store i64* %_41.1, i64** %31, align 8
  %32 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_36, i32 0, i32 1
  %33 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %32, i32 0, i32 0
  store i8* %_44.0, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %32, i32 0, i32 1
  store i64* %_44.1, i64** %34, align 8
  %_33.0 = bitcast [2 x { i8*, i64* }]* %_36 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_29, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1145 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_33.0, i64 2)
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::fmt::Formatter::write_fmt
  %35 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_29)
  %36 = zext i1 %35 to i8
  store i8 %36, i8* %0, align 1
  br label %bb14

bb3:                                              ; preds = %bb2
  %37 = bitcast { i64*, i32* }* %_14 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %_16, { [0 x i8]*, i64 }** %37, align 8
  %38 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_14, i32 0, i32 1
  store i32* %ch, i32** %38, align 8
  %39 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_14, i32 0, i32 0
  %_args.01 = load i64*, i64** %39, align 8, !nonnull !4
  %40 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_14, i32 0, i32 1
  %_args.12 = load i32*, i32** %40, align 8, !nonnull !4
  %_21 = bitcast i64* %_args.01 to { [0 x i8]*, i64 }*
; call core::fmt::ArgumentV1::new
  %41 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17ha52a6fb3d74479f1E({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_21, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h18a698e2acc26c61E")
  %_20.0 = extractvalue { i8*, i64* } %41, 0
  %_20.1 = extractvalue { i8*, i64* } %41, 1
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::fmt::ArgumentV1::new
  %42 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h296710cf9c74ed59E(i32* align 4 dereferenceable(4) %_args.12, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h011d980131b3c87bE")
  %_23.0 = extractvalue { i8*, i64* } %42, 0
  %_23.1 = extractvalue { i8*, i64* } %42, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %43 = bitcast [2 x { i8*, i64* }]* %_13 to { i8*, i64* }*
  %44 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %43, i32 0, i32 0
  store i8* %_20.0, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %43, i32 0, i32 1
  store i64* %_20.1, i64** %45, align 8
  %46 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_13, i32 0, i32 1
  %47 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %46, i32 0, i32 0
  store i8* %_23.0, i8** %47, align 8
  %48 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %46, i32 0, i32 1
  store i64* %_23.1, i64** %48, align 8
  %_10.0 = bitcast [2 x { i8*, i64* }]* %_13 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117he25bb057f2272c41E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_6, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc1138 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_10.0, i64 2)
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::fmt::Formatter::write_fmt
  %49 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_6)
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %0, align 1
  br label %bb14
}

; <time::ParseError as std::error::Error>::description
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN54_$LT$time..ParseError$u20$as$u20$std..error..Error$GT$11description17h8f1d6cbdcc055a17E"(%ParseError* align 4 dereferenceable(12) %self) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = bitcast %ParseError* %self to i32*
  %2 = load i32, i32* %1, align 4, !range !81
  %_2 = zext i32 %2 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb8
    i64 6, label %bb9
    i64 7, label %bb10
    i64 8, label %bb11
    i64 9, label %bb12
    i64 10, label %bb13
    i64 11, label %bb14
    i64 12, label %bb15
    i64 13, label %bb16
    i64 14, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [15 x i8] }>* @alloc1869 to [0 x i8]*), [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 15, i64* %4, align 8
  br label %bb17

bb4:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [15 x i8] }>* @alloc1868 to [0 x i8]*), [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 15, i64* %6, align 8
  br label %bb17

bb5:                                              ; preds = %start
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [13 x i8] }>* @alloc1867 to [0 x i8]*), [0 x i8]** %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 13, i64* %8, align 8
  br label %bb17

bb6:                                              ; preds = %start
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [12 x i8] }>* @alloc1866 to [0 x i8]*), [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 12, i64* %10, align 8
  br label %bb17

bb7:                                              ; preds = %start
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [14 x i8] }>* @alloc1865 to [0 x i8]*), [0 x i8]** %11, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 14, i64* %12, align 8
  br label %bb17

bb8:                                              ; preds = %start
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [13 x i8] }>* @alloc1864 to [0 x i8]*), [0 x i8]** %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 13, i64* %14, align 8
  br label %bb17

bb9:                                              ; preds = %start
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [24 x i8] }>* @alloc1863 to [0 x i8]*), [0 x i8]** %15, align 8
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 24, i64* %16, align 8
  br label %bb17

bb10:                                             ; preds = %start
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [25 x i8] }>* @alloc1862 to [0 x i8]*), [0 x i8]** %17, align 8
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 25, i64* %18, align 8
  br label %bb17

bb11:                                             ; preds = %start
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [24 x i8] }>* @alloc1861 to [0 x i8]*), [0 x i8]** %19, align 8
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 24, i64* %20, align 8
  br label %bb17

bb12:                                             ; preds = %start
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [20 x i8] }>* @alloc1860 to [0 x i8]*), [0 x i8]** %21, align 8
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 20, i64* %22, align 8
  br label %bb17

bb13:                                             ; preds = %start
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [13 x i8] }>* @alloc1859 to [0 x i8]*), [0 x i8]** %23, align 8
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 13, i64* %24, align 8
  br label %bb17

bb14:                                             ; preds = %start
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [28 x i8] }>* @alloc1858 to [0 x i8]*), [0 x i8]** %25, align 8
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 28, i64* %26, align 8
  br label %bb17

bb15:                                             ; preds = %start
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [34 x i8] }>* @alloc1857 to [0 x i8]*), [0 x i8]** %27, align 8
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 34, i64* %28, align 8
  br label %bb17

bb16:                                             ; preds = %start
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [24 x i8] }>* @alloc1856 to [0 x i8]*), [0 x i8]** %29, align 8
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 24, i64* %30, align 8
  br label %bb17

bb1:                                              ; preds = %start
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* bitcast (<{ [21 x i8] }>* @alloc1855 to [0 x i8]*), [0 x i8]** %31, align 8
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 21, i64* %32, align 8
  br label %bb17

bb17:                                             ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13, %bb14, %bb15, %bb16, %bb1
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %34 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !4
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %34, 0
  %38 = insertvalue { [0 x i8]*, i64 } %37, i64 %36, 1
  ret { [0 x i8]*, i64 } %38
}

; time::validate_format
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4time15validate_format17h0b612879e5c3ee7cE(%"core::result::Result<TmFmt, ParseError>"* noalias nocapture sret(%"core::result::Result<TmFmt, ParseError>") dereferenceable(40) %0, %TmFmt* noalias nocapture dereferenceable(32) %fmt) unnamed_addr #1 {
start:
  %_32 = alloca %TmFmt, align 8
  %_31 = alloca %ParseError, align 4
  %_29 = alloca %ParseError, align 4
  %_25 = alloca i32, align 4
  %_22 = alloca i32, align 4
  %chars = alloca { i8*, i8* }, align 8
  %_17 = alloca %ParseError, align 4
  %_16 = alloca %ParseError, align 4
  %_14 = alloca %ParseError, align 4
  %_2 = alloca { i32, i32 }, align 4
  %1 = bitcast %TmFmt* %fmt to %Tm**
  %2 = load %Tm*, %Tm** %1, align 8, !nonnull !4
  %3 = getelementptr inbounds %Tm, %Tm* %2, i32 0, i32 6
  %_3 = load i32, i32* %3, align 4
  %4 = bitcast %TmFmt* %fmt to %Tm**
  %5 = load %Tm*, %Tm** %4, align 8, !nonnull !4
  %6 = getelementptr inbounds %Tm, %Tm* %5, i32 0, i32 4
  %_4 = load i32, i32* %6, align 4
  %7 = bitcast { i32, i32 }* %_2 to i32*
  store i32 %_3, i32* %7, align 4
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_2, i32 0, i32 1
  store i32 %_4, i32* %8, align 4
  %9 = bitcast { i32, i32 }* %_2 to i32*
  %10 = load i32, i32* %9, align 4
  %_11 = icmp sle i32 0, %10
  br i1 %_11, label %bb1, label %bb4

bb4:                                              ; preds = %bb3, %bb2, %bb1, %start
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_2, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %_9 = icmp sle i32 0, %12
  br i1 %_9, label %bb5, label %bb6

bb1:                                              ; preds = %start
  %13 = bitcast { i32, i32 }* %_2 to i32*
  %14 = load i32, i32* %13, align 4
  %_12 = icmp sle i32 %14, 6
  br i1 %_12, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_2, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %_5 = icmp sle i32 0, %16
  br i1 %_5, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %17 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_2, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %_6 = icmp sle i32 %18, 11
  br i1 %_6, label %bb9, label %bb4

bb9:                                              ; preds = %bb3
  %19 = getelementptr inbounds %TmFmt, %TmFmt* %fmt, i32 0, i32 1
  %20 = bitcast %Fmt* %19 to i64*
  %_18 = load i64, i64* %20, align 8, !range !14
  %21 = icmp eq i64 %_18, 0
  br i1 %21, label %bb12, label %bb22

bb12:                                             ; preds = %bb9
  %22 = getelementptr inbounds %TmFmt, %TmFmt* %fmt, i32 0, i32 1
  %23 = bitcast %Fmt* %22 to %"Fmt::Str"*
  %s = getelementptr inbounds %"Fmt::Str", %"Fmt::Str"* %23, i32 0, i32 1
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_21.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !nonnull !4
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_21.1 = load i64, i64* %25, align 8
; call core::str::<impl str>::chars
  %26 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hf02eec9683990b68E"([0 x i8]* nonnull align 1 %_21.0, i64 %_21.1)
  store { i8*, i8* } %26, { i8*, i8* }* %chars, align 8
  br label %bb13

bb22:                                             ; preds = %bb14, %bb9
  %27 = bitcast %TmFmt* %_32 to i8*
  %28 = bitcast %TmFmt* %fmt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 32, i1 false)
  %29 = bitcast %"core::result::Result<TmFmt, ParseError>"* %0 to %"core::result::Result<TmFmt, ParseError>::Ok"*
  %30 = getelementptr inbounds %"core::result::Result<TmFmt, ParseError>::Ok", %"core::result::Result<TmFmt, ParseError>::Ok"* %29, i32 0, i32 1
  %31 = bitcast %TmFmt* %30 to i8*
  %32 = bitcast %TmFmt* %_32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 32, i1 false)
  %33 = bitcast %"core::result::Result<TmFmt, ParseError>"* %0 to i32*
  store i32 0, i32* %33, align 8
  br label %bb23

bb13:                                             ; preds = %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb19, %bb15, %bb14, %bb12
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %34 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71dd653fc346d1b8E"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !range !2
  store i32 %34, i32* %_22, align 4
  br label %bb14

bb14:                                             ; preds = %bb13
  %35 = load i32, i32* %_22, align 4, !range !2
  %36 = sub i32 %35, 1114112
  %37 = icmp eq i32 %36, 0
  %_24 = select i1 %37, i64 0, i64 1
  switch i64 %_24, label %bb13 [
    i64 0, label %bb22
    i64 1, label %bb15
  ]

bb15:                                             ; preds = %bb14
  %38 = load i32, i32* %_22, align 4, !range !15
  %39 = icmp eq i32 %38, 37
  br i1 %39, label %bb16, label %bb13

bb16:                                             ; preds = %bb15
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %40 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71dd653fc346d1b8E"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !range !2
  store i32 %40, i32* %_25, align 4
  br label %bb17

bb17:                                             ; preds = %bb16
  %41 = load i32, i32* %_25, align 4, !range !2
  %42 = sub i32 %41, 1114112
  %43 = icmp eq i32 %42, 0
  %_27 = select i1 %43, i64 0, i64 1
  switch i64 %_27, label %bb20 [
    i64 0, label %bb18
    i64 1, label %bb19
  ]

bb20:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  %44 = bitcast %ParseError* %_31 to i32*
  store i32 12, i32* %44, align 4
  %45 = bitcast %"core::result::Result<TmFmt, ParseError>"* %0 to %"core::result::Result<TmFmt, ParseError>::Err"*
  %46 = getelementptr inbounds %"core::result::Result<TmFmt, ParseError>::Err", %"core::result::Result<TmFmt, ParseError>::Err"* %45, i32 0, i32 1
  %47 = bitcast %ParseError* %46 to i8*
  %48 = bitcast %ParseError* %_31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %48, i64 12, i1 false)
  %49 = bitcast %"core::result::Result<TmFmt, ParseError>"* %0 to i32*
  store i32 1, i32* %49, align 8
  br label %bb23

bb19:                                             ; preds = %bb17
  %50 = load i32, i32* %_25, align 4, !range !15
  switch i32 %50, label %bb21 [
    i32 65, label %bb13
    i32 97, label %bb13
    i32 66, label %bb13
    i32 98, label %bb13
    i32 67, label %bb13
    i32 99, label %bb13
    i32 68, label %bb13
    i32 100, label %bb13
    i32 101, label %bb13
    i32 70, label %bb13
    i32 102, label %bb13
    i32 71, label %bb13
    i32 103, label %bb13
    i32 72, label %bb13
    i32 104, label %bb13
    i32 73, label %bb13
    i32 106, label %bb13
    i32 107, label %bb13
    i32 108, label %bb13
    i32 77, label %bb13
    i32 109, label %bb13
    i32 110, label %bb13
    i32 80, label %bb13
    i32 112, label %bb13
    i32 82, label %bb13
    i32 114, label %bb13
    i32 83, label %bb13
    i32 115, label %bb13
    i32 84, label %bb13
    i32 116, label %bb13
    i32 85, label %bb13
    i32 117, label %bb13
    i32 86, label %bb13
    i32 118, label %bb13
    i32 87, label %bb13
    i32 119, label %bb13
    i32 88, label %bb13
    i32 120, label %bb13
    i32 89, label %bb13
    i32 121, label %bb13
    i32 90, label %bb13
    i32 122, label %bb13
    i32 43, label %bb13
    i32 37, label %bb13
  ]

bb21:                                             ; preds = %bb19
  %c = load i32, i32* %_25, align 4, !range !15
  %51 = bitcast %ParseError* %_29 to %"ParseError::InvalidFormatSpecifier"*
  %52 = getelementptr inbounds %"ParseError::InvalidFormatSpecifier", %"ParseError::InvalidFormatSpecifier"* %51, i32 0, i32 1
  store i32 %c, i32* %52, align 4
  %53 = bitcast %ParseError* %_29 to i32*
  store i32 13, i32* %53, align 4
  %54 = bitcast %"core::result::Result<TmFmt, ParseError>"* %0 to %"core::result::Result<TmFmt, ParseError>::Err"*
  %55 = getelementptr inbounds %"core::result::Result<TmFmt, ParseError>::Err", %"core::result::Result<TmFmt, ParseError>::Err"* %54, i32 0, i32 1
  %56 = bitcast %ParseError* %55 to i8*
  %57 = bitcast %ParseError* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64 12, i1 false)
  %58 = bitcast %"core::result::Result<TmFmt, ParseError>"* %0 to i32*
  store i32 1, i32* %58, align 8
  br label %bb23

bb23:                                             ; preds = %bb8, %bb11, %bb10, %bb22, %bb18, %bb21
  ret void

bb6:                                              ; preds = %bb5, %bb4
  %59 = bitcast { i32, i32 }* %_2 to i32*
  %60 = load i32, i32* %59, align 4
  %_7 = icmp sle i32 0, %60
  br i1 %_7, label %bb7, label %bb8

bb5:                                              ; preds = %bb4
  %61 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_2, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %_10 = icmp sle i32 %62, 11
  br i1 %_10, label %bb10, label %bb6

bb10:                                             ; preds = %bb5
  %63 = bitcast { i32, i32 }* %_2 to i32*
  %_wday = load i32, i32* %63, align 4
  %64 = bitcast %ParseError* %_14 to i32*
  store i32 6, i32* %64, align 4
  %65 = bitcast %"core::result::Result<TmFmt, ParseError>"* %0 to %"core::result::Result<TmFmt, ParseError>::Err"*
  %66 = getelementptr inbounds %"core::result::Result<TmFmt, ParseError>::Err", %"core::result::Result<TmFmt, ParseError>::Err"* %65, i32 0, i32 1
  %67 = bitcast %ParseError* %66 to i8*
  %68 = bitcast %ParseError* %_14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 12, i1 false)
  %69 = bitcast %"core::result::Result<TmFmt, ParseError>"* %0 to i32*
  store i32 1, i32* %69, align 8
  br label %bb23

bb8:                                              ; preds = %bb7, %bb6
  %70 = bitcast %ParseError* %_17 to i32*
  store i32 3, i32* %70, align 4
  %71 = bitcast %"core::result::Result<TmFmt, ParseError>"* %0 to %"core::result::Result<TmFmt, ParseError>::Err"*
  %72 = getelementptr inbounds %"core::result::Result<TmFmt, ParseError>::Err", %"core::result::Result<TmFmt, ParseError>::Err"* %71, i32 0, i32 1
  %73 = bitcast %ParseError* %72 to i8*
  %74 = bitcast %ParseError* %_17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 12, i1 false)
  %75 = bitcast %"core::result::Result<TmFmt, ParseError>"* %0 to i32*
  store i32 1, i32* %75, align 8
  br label %bb23

bb7:                                              ; preds = %bb6
  %76 = bitcast { i32, i32 }* %_2 to i32*
  %77 = load i32, i32* %76, align 4
  %_8 = icmp sle i32 %77, 6
  br i1 %_8, label %bb11, label %bb8

bb11:                                             ; preds = %bb7
  %78 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_2, i32 0, i32 1
  %_mon = load i32, i32* %78, align 4
  %79 = bitcast %ParseError* %_16 to i32*
  store i32 4, i32* %79, align 4
  %80 = bitcast %"core::result::Result<TmFmt, ParseError>"* %0 to %"core::result::Result<TmFmt, ParseError>::Err"*
  %81 = getelementptr inbounds %"core::result::Result<TmFmt, ParseError>::Err", %"core::result::Result<TmFmt, ParseError>::Err"* %80, i32 0, i32 1
  %82 = bitcast %ParseError* %81 to i8*
  %83 = bitcast %ParseError* %_16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 12, i1 false)
  %84 = bitcast %"core::result::Result<TmFmt, ParseError>"* %0 to i32*
  store i32 1, i32* %84, align 8
  br label %bb23
}

; time::strftime
; Function Attrs: nonlazybind uwtable
define void @_ZN4time8strftime17ha29e1d988105fdb0E(%"core::result::Result<alloc::string::String, ParseError>"* noalias nocapture sret(%"core::result::Result<alloc::string::String, ParseError>") dereferenceable(32) %0, [0 x i8]* nonnull align 1 %format.0, i64 %format.1, %Tm* align 4 dereferenceable(44) %tm) unnamed_addr #1 {
start:
  %_3 = alloca %"core::result::Result<TmFmt, ParseError>", align 8
; call time::Tm::strftime
  call void @_ZN4time2Tm8strftime17h2b25fbd5a63a81faE(%"core::result::Result<TmFmt, ParseError>"* noalias nocapture sret(%"core::result::Result<TmFmt, ParseError>") dereferenceable(40) %_3, %Tm* align 4 dereferenceable(44) %tm, [0 x i8]* nonnull align 1 %format.0, i64 %format.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::map
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hee5f133cbfe42956E"(%"core::result::Result<alloc::string::String, ParseError>"* noalias nocapture sret(%"core::result::Result<alloc::string::String, ParseError>") dereferenceable(32) %0, %"core::result::Result<TmFmt, ParseError>"* noalias nocapture dereferenceable(40) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; time::strftime::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4time8strftime28_$u7b$$u7b$closure$u7d$$u7d$17hb04bcf64c7f53d14E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, %TmFmt* noalias nocapture dereferenceable(32) %fmt) unnamed_addr #0 {
start:
; call <T as alloc::string::ToString>::to_string
  call void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17h36acc8d1a6d35360E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, %TmFmt* align 8 dereferenceable(32) %fmt)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <time::duration::Duration as core::cmp::PartialOrd>::partial_cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN66_$LT$time..duration..Duration$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h8b2594cb2f1db163E"({ i64, i32 }* align 8 dereferenceable(16) %self, { i64, i32 }* align 8 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %_14 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %0 = alloca i8, align 1
  %__self_1_0 = bitcast { i64, i32 }* %other to i64*
  %__self_1_1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 1
  %__self_0_0 = bitcast { i64, i32 }* %self to i64*
  %__self_0_1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for i64>::partial_cmp
  %1 = call i8 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i64$GT$11partial_cmp17h23f69fd4c7c3dee5E"(i64* align 8 dereferenceable(8) %__self_0_0, i64* align 8 dereferenceable(8) %__self_1_0), !range !5
  store i8 %1, i8* %_7, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i8, i8* %_7, align 1, !range !5
  %3 = sub i8 %2, 2
  %4 = icmp eq i8 %3, 0
  %_13 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_13, 1
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %_12 = load i8, i8* %_7, align 1, !range !6
  %6 = icmp eq i8 %_12, 0
  br i1 %6, label %bb4, label %bb2

bb2:                                              ; preds = %bb3, %bb1
  %cmp = load i8, i8* %_7, align 1, !range !5
  store i8 %cmp, i8* %0, align 1
  br label %bb9

bb4:                                              ; preds = %bb3
; call core::cmp::impls::<impl core::cmp::PartialOrd for i32>::partial_cmp
  %7 = call i8 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$11partial_cmp17h4f5238980559dcb5E"(i32* align 4 dereferenceable(4) %__self_0_1, i32* align 4 dereferenceable(4) %__self_1_1), !range !5
  store i8 %7, i8* %_14, align 1
  br label %bb5

bb9:                                              ; preds = %bb8, %bb6, %bb2
  %8 = load i8, i8* %0, align 1, !range !5
  ret i8 %8

bb5:                                              ; preds = %bb4
  %9 = load i8, i8* %_14, align 1, !range !5
  %10 = sub i8 %9, 2
  %11 = icmp eq i8 %10, 0
  %_20 = select i1 %11, i64 0, i64 1
  %12 = icmp eq i64 %_20, 1
  br i1 %12, label %bb7, label %bb6

bb7:                                              ; preds = %bb5
  %_19 = load i8, i8* %_14, align 1, !range !6
  %13 = icmp eq i8 %_19, 0
  br i1 %13, label %bb8, label %bb6

bb6:                                              ; preds = %bb7, %bb5
  %cmp1 = load i8, i8* %_14, align 1, !range !5
  store i8 %cmp1, i8* %0, align 1
  br label %bb9

bb8:                                              ; preds = %bb7
  store i8 0, i8* %0, align 1
  br label %bb9
}

; <time::duration::Duration as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN61_$LT$time..duration..Duration$u20$as$u20$core..fmt..Debug$GT$3fmt17hf91ff387d99d8f0dE"({ i64, i32 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_25 = alloca i32*, align 8
  %_17 = alloca i64*, align 8
  %_6 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast { i64, i32 }* %self to i64*
  %__self_0_1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc1870 to [0 x i8]*), i64 8)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_6 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store i64* %__self_0_0, i64** %_17, align 8
  %_14.0 = bitcast i64** %_17 to {}*
; call core::fmt::builders::DebugStruct::field
  %_10 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1871 to [0 x i8]*), i64 4, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.e to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  store i32* %__self_0_1, i32** %_25, align 8
  %_22.0 = bitcast i32** %_25 to {}*
; call core::fmt::builders::DebugStruct::field
  %_18 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1875 to [0 x i8]*), i64 5, {}* nonnull align 1 %_22.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i1 %4
}

; <time::duration::OutOfRangeError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN68_$LT$time..duration..OutOfRangeError$u20$as$u20$core..fmt..Debug$GT$3fmt17h4b884d999d1c3f16E"(%"duration::OutOfRangeError"* nonnull align 1 %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_14 = alloca {}*, align 8
  %_5 = alloca %"core::fmt::builders::DebugTuple", align 8
  %__self_0_0 = bitcast %"duration::OutOfRangeError"* %self to {}*
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_5, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [15 x i8] }>* @alloc1876 to [0 x i8]*), i64 15)
  br label %bb1

bb1:                                              ; preds = %start
  store {}* %__self_0_0, {}** %_14, align 8
  %_11.0 = bitcast {}** %_14 to {}*
; call core::fmt::builders::DebugTuple::field
  %_9 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_5, {}* nonnull align 1 %_11.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.f to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugTuple::finish
  %0 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %0
}

; <time::Timespec as core::cmp::PartialOrd>::partial_cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN56_$LT$time..Timespec$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h5c89df7844da1f3dE"({ i64, i32 }* align 8 dereferenceable(16) %self, { i64, i32 }* align 8 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %_14 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %0 = alloca i8, align 1
  %__self_1_0 = bitcast { i64, i32 }* %other to i64*
  %__self_1_1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 1
  %__self_0_0 = bitcast { i64, i32 }* %self to i64*
  %__self_0_1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for i64>::partial_cmp
  %1 = call i8 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i64$GT$11partial_cmp17h23f69fd4c7c3dee5E"(i64* align 8 dereferenceable(8) %__self_0_0, i64* align 8 dereferenceable(8) %__self_1_0), !range !5
  store i8 %1, i8* %_7, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i8, i8* %_7, align 1, !range !5
  %3 = sub i8 %2, 2
  %4 = icmp eq i8 %3, 0
  %_13 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_13, 1
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %_12 = load i8, i8* %_7, align 1, !range !6
  %6 = icmp eq i8 %_12, 0
  br i1 %6, label %bb4, label %bb2

bb2:                                              ; preds = %bb3, %bb1
  %cmp = load i8, i8* %_7, align 1, !range !5
  store i8 %cmp, i8* %0, align 1
  br label %bb9

bb4:                                              ; preds = %bb3
; call core::cmp::impls::<impl core::cmp::PartialOrd for i32>::partial_cmp
  %7 = call i8 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$11partial_cmp17h4f5238980559dcb5E"(i32* align 4 dereferenceable(4) %__self_0_1, i32* align 4 dereferenceable(4) %__self_1_1), !range !5
  store i8 %7, i8* %_14, align 1
  br label %bb5

bb9:                                              ; preds = %bb8, %bb6, %bb2
  %8 = load i8, i8* %0, align 1, !range !5
  ret i8 %8

bb5:                                              ; preds = %bb4
  %9 = load i8, i8* %_14, align 1, !range !5
  %10 = sub i8 %9, 2
  %11 = icmp eq i8 %10, 0
  %_20 = select i1 %11, i64 0, i64 1
  %12 = icmp eq i64 %_20, 1
  br i1 %12, label %bb7, label %bb6

bb7:                                              ; preds = %bb5
  %_19 = load i8, i8* %_14, align 1, !range !6
  %13 = icmp eq i8 %_19, 0
  br i1 %13, label %bb8, label %bb6

bb6:                                              ; preds = %bb7, %bb5
  %cmp1 = load i8, i8* %_14, align 1, !range !5
  store i8 %cmp1, i8* %0, align 1
  br label %bb9

bb8:                                              ; preds = %bb7
  store i8 0, i8* %0, align 1
  br label %bb9
}

; <time::Timespec as core::cmp::Ord>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN49_$LT$time..Timespec$u20$as$u20$core..cmp..Ord$GT$3cmp17hd71a18e2ad897d26E"({ i64, i32 }* align 8 dereferenceable(16) %self, { i64, i32 }* align 8 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %0 = alloca i8, align 1
  %__self_1_0 = bitcast { i64, i32 }* %other to i64*
  %__self_1_1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 1
  %__self_0_0 = bitcast { i64, i32 }* %self to i64*
  %__self_0_1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::Ord for i64>::cmp
  %1 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i64$GT$3cmp17h0bbed6e4d8b33fa7E"(i64* align 8 dereferenceable(8) %__self_0_0, i64* align 8 dereferenceable(8) %__self_1_0), !range !6
  store i8 %1, i8* %_7, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %_12 = load i8, i8* %_7, align 1, !range !6
  %2 = icmp eq i8 %_12, 0
  br i1 %2, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
; call core::cmp::impls::<impl core::cmp::Ord for i32>::cmp
  %3 = call i8 @"_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17h426526f99ef7bc28E"(i32* align 4 dereferenceable(4) %__self_0_1, i32* align 4 dereferenceable(4) %__self_1_1), !range !6
  store i8 %3, i8* %_13, align 1
  br label %bb4

bb2:                                              ; preds = %bb1
  %cmp = load i8, i8* %_7, align 1, !range !6
  store i8 %cmp, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5, %bb2
  %4 = load i8, i8* %0, align 1, !range !6
  ret i8 %4

bb4:                                              ; preds = %bb3
  %_18 = load i8, i8* %_13, align 1, !range !6
  %5 = icmp eq i8 %_18, 0
  br i1 %5, label %bb6, label %bb5

bb6:                                              ; preds = %bb4
  store i8 0, i8* %0, align 1
  br label %bb7

bb5:                                              ; preds = %bb4
  %cmp1 = load i8, i8* %_13, align 1, !range !6
  store i8 %cmp1, i8* %0, align 1
  br label %bb7
}

; <time::Timespec as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN51_$LT$time..Timespec$u20$as$u20$core..fmt..Debug$GT$3fmt17h1ec88c47741e2e4bE"({ i64, i32 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_25 = alloca i32*, align 8
  %_17 = alloca i64*, align 8
  %_6 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast { i64, i32 }* %self to i64*
  %__self_0_1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc1880 to [0 x i8]*), i64 8)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_6 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store i64* %__self_0_0, i64** %_17, align 8
  %_14.0 = bitcast i64** %_17 to {}*
; call core::fmt::builders::DebugStruct::field
  %_10 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1881 to [0 x i8]*), i64 3, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.e to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  store i32* %__self_0_1, i32** %_25, align 8
  %_22.0 = bitcast i32** %_25 to {}*
; call core::fmt::builders::DebugStruct::field
  %_18 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc1882 to [0 x i8]*), i64 4, {}* nonnull align 1 %_22.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i1 %4
}

; <time::SteadyTime as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN53_$LT$time..SteadyTime$u20$as$u20$core..fmt..Debug$GT$3fmt17hb1aa9b9c3a3f9270E"({ i64, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_14 = alloca { i64, i64 }*, align 8
  %_5 = alloca %"core::fmt::builders::DebugTuple", align 8
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_5, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [10 x i8] }>* @alloc1883 to [0 x i8]*), i64 10)
  br label %bb1

bb1:                                              ; preds = %start
  store { i64, i64 }* %self, { i64, i64 }** %_14, align 8
  %_11.0 = bitcast { i64, i64 }** %_14 to {}*
; call core::fmt::builders::DebugTuple::field
  %_9 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_5, {}* nonnull align 1 %_11.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.g to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugTuple::finish
  %0 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %0
}

; <time::Tm as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN45_$LT$time..Tm$u20$as$u20$core..fmt..Debug$GT$3fmt17h865e7439f7f8f543E"(%Tm* align 4 dereferenceable(44) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_106 = alloca i32*, align 8
  %_98 = alloca i32*, align 8
  %_90 = alloca i32*, align 8
  %_82 = alloca i32*, align 8
  %_74 = alloca i32*, align 8
  %_66 = alloca i32*, align 8
  %_58 = alloca i32*, align 8
  %_50 = alloca i32*, align 8
  %_42 = alloca i32*, align 8
  %_34 = alloca i32*, align 8
  %_26 = alloca i32*, align 8
  %_15 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast %Tm* %self to i32*
  %__self_0_1 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 1
  %__self_0_2 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 2
  %__self_0_3 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 3
  %__self_0_4 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 4
  %__self_0_5 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 5
  %__self_0_6 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 6
  %__self_0_7 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 7
  %__self_0_8 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 8
  %__self_0_9 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 9
  %__self_0_10 = getelementptr inbounds %Tm, %Tm* %self, i32 0, i32 10
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1887 to [0 x i8]*), i64 2)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_15 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store i32* %__self_0_0, i32** %_26, align 8
  %_23.0 = bitcast i32** %_26 to {}*
; call core::fmt::builders::DebugStruct::field
  %_19 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_15, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1888 to [0 x i8]*), i64 6, {}* nonnull align 1 %_23.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  store i32* %__self_0_1, i32** %_34, align 8
  %_31.0 = bitcast i32** %_34 to {}*
; call core::fmt::builders::DebugStruct::field
  %_27 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_15, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1889 to [0 x i8]*), i64 6, {}* nonnull align 1 %_31.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
  store i32* %__self_0_2, i32** %_42, align 8
  %_39.0 = bitcast i32** %_42 to {}*
; call core::fmt::builders::DebugStruct::field
  %_35 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_15, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1890 to [0 x i8]*), i64 7, {}* nonnull align 1 %_39.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*))
  br label %bb4

bb4:                                              ; preds = %bb3
  store i32* %__self_0_3, i32** %_50, align 8
  %_47.0 = bitcast i32** %_50 to {}*
; call core::fmt::builders::DebugStruct::field
  %_43 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_15, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1891 to [0 x i8]*), i64 7, {}* nonnull align 1 %_47.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*))
  br label %bb5

bb5:                                              ; preds = %bb4
  store i32* %__self_0_4, i32** %_58, align 8
  %_55.0 = bitcast i32** %_58 to {}*
; call core::fmt::builders::DebugStruct::field
  %_51 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_15, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1892 to [0 x i8]*), i64 6, {}* nonnull align 1 %_55.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*))
  br label %bb6

bb6:                                              ; preds = %bb5
  store i32* %__self_0_5, i32** %_66, align 8
  %_63.0 = bitcast i32** %_66 to {}*
; call core::fmt::builders::DebugStruct::field
  %_59 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_15, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1893 to [0 x i8]*), i64 7, {}* nonnull align 1 %_63.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*))
  br label %bb7

bb7:                                              ; preds = %bb6
  store i32* %__self_0_6, i32** %_74, align 8
  %_71.0 = bitcast i32** %_74 to {}*
; call core::fmt::builders::DebugStruct::field
  %_67 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_15, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1894 to [0 x i8]*), i64 7, {}* nonnull align 1 %_71.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*))
  br label %bb8

bb8:                                              ; preds = %bb7
  store i32* %__self_0_7, i32** %_82, align 8
  %_79.0 = bitcast i32** %_82 to {}*
; call core::fmt::builders::DebugStruct::field
  %_75 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_15, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1895 to [0 x i8]*), i64 7, {}* nonnull align 1 %_79.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*))
  br label %bb9

bb9:                                              ; preds = %bb8
  store i32* %__self_0_8, i32** %_90, align 8
  %_87.0 = bitcast i32** %_90 to {}*
; call core::fmt::builders::DebugStruct::field
  %_83 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_15, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc1896 to [0 x i8]*), i64 8, {}* nonnull align 1 %_87.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*))
  br label %bb10

bb10:                                             ; preds = %bb9
  store i32* %__self_0_9, i32** %_98, align 8
  %_95.0 = bitcast i32** %_98 to {}*
; call core::fmt::builders::DebugStruct::field
  %_91 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_15, [0 x i8]* nonnull align 1 bitcast (<{ [9 x i8] }>* @alloc1897 to [0 x i8]*), i64 9, {}* nonnull align 1 %_95.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*))
  br label %bb11

bb11:                                             ; preds = %bb10
  store i32* %__self_0_10, i32** %_106, align 8
  %_103.0 = bitcast i32** %_106 to {}*
; call core::fmt::builders::DebugStruct::field
  %_99 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_15, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1898 to [0 x i8]*), i64 7, {}* nonnull align 1 %_103.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*))
  br label %bb12

bb12:                                             ; preds = %bb11
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_15)
  br label %bb13

bb13:                                             ; preds = %bb12
  ret i1 %4
}

; <time::ParseError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN53_$LT$time..ParseError$u20$as$u20$core..fmt..Debug$GT$3fmt17h043e54077524ba0aE"(%ParseError* align 4 dereferenceable(12) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_76 = alloca i32*, align 8
  %_70 = alloca i32*, align 8
  %_61 = alloca %"core::fmt::builders::DebugTuple", align 8
  %_56 = alloca i32*, align 8
  %_47 = alloca %"core::fmt::builders::DebugTuple", align 8
  %_3 = alloca i32*, align 8
  %0 = alloca i8, align 1
  %1 = bitcast i32** %_3 to %ParseError**
  store %ParseError* %self, %ParseError** %1, align 8
  %2 = bitcast i32** %_3 to %ParseError**
  %3 = load %ParseError*, %ParseError** %2, align 8, !nonnull !4
  %4 = bitcast %ParseError* %3 to i32*
  %5 = load i32, i32* %4, align 4, !range !81
  %_5 = zext i32 %5 to i64
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb8
    i64 6, label %bb9
    i64 7, label %bb10
    i64 8, label %bb11
    i64 9, label %bb12
    i64 10, label %bb13
    i64 11, label %bb14
    i64 12, label %bb15
    i64 13, label %bb16
    i64 14, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %6 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc1916 to [0 x i8]*), i64 13)
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %0, align 1
  br label %bb22

bb4:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %8 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc1915 to [0 x i8]*), i64 13)
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %0, align 1
  br label %bb22

bb5:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %10 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc1914 to [0 x i8]*), i64 11)
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %0, align 1
  br label %bb22

bb6:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %12 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [10 x i8] }>* @alloc1913 to [0 x i8]*), i64 10)
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %0, align 1
  br label %bb22

bb7:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %14 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [12 x i8] }>* @alloc1912 to [0 x i8]*), i64 12)
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %0, align 1
  br label %bb22

bb8:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %16 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc1911 to [0 x i8]*), i64 11)
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %0, align 1
  br label %bb22

bb9:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %18 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [16 x i8] }>* @alloc1910 to [0 x i8]*), i64 16)
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %0, align 1
  br label %bb22

bb10:                                             ; preds = %start
; call core::fmt::Formatter::write_str
  %20 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [17 x i8] }>* @alloc1909 to [0 x i8]*), i64 17)
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %0, align 1
  br label %bb22

bb11:                                             ; preds = %start
; call core::fmt::Formatter::write_str
  %22 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [16 x i8] }>* @alloc1908 to [0 x i8]*), i64 16)
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %0, align 1
  br label %bb22

bb12:                                             ; preds = %start
; call core::fmt::Formatter::write_str
  %24 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [17 x i8] }>* @alloc1907 to [0 x i8]*), i64 17)
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %0, align 1
  br label %bb22

bb13:                                             ; preds = %start
; call core::fmt::Formatter::write_str
  %26 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc1906 to [0 x i8]*), i64 11)
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %0, align 1
  br label %bb22

bb14:                                             ; preds = %start
; call core::fmt::Formatter::write_str
  %28 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [24 x i8] }>* @alloc1905 to [0 x i8]*), i64 24)
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %0, align 1
  br label %bb22

bb15:                                             ; preds = %start
; call core::fmt::Formatter::write_str
  %30 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [22 x i8] }>* @alloc1904 to [0 x i8]*), i64 22)
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %0, align 1
  br label %bb22

bb16:                                             ; preds = %start
  %32 = bitcast i32** %_3 to %ParseError**
  %33 = load %ParseError*, %ParseError** %32, align 8, !nonnull !4
  %34 = bitcast %ParseError* %33 to %"ParseError::InvalidFormatSpecifier"*
  %__self_01 = getelementptr inbounds %"ParseError::InvalidFormatSpecifier", %"ParseError::InvalidFormatSpecifier"* %34, i32 0, i32 1
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_47, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [22 x i8] }>* @alloc1903 to [0 x i8]*), i64 22)
  br label %bb17

bb1:                                              ; preds = %start
  %35 = bitcast i32** %_3 to %ParseError**
  %36 = load %ParseError*, %ParseError** %35, align 8, !nonnull !4
  %37 = bitcast %ParseError* %36 to %"ParseError::UnexpectedCharacter"*
  %__self_0 = getelementptr inbounds %"ParseError::UnexpectedCharacter", %"ParseError::UnexpectedCharacter"* %37, i32 0, i32 1
  %38 = bitcast i32** %_3 to %ParseError**
  %39 = load %ParseError*, %ParseError** %38, align 8, !nonnull !4
  %40 = bitcast %ParseError* %39 to %"ParseError::UnexpectedCharacter"*
  %__self_1 = getelementptr inbounds %"ParseError::UnexpectedCharacter", %"ParseError::UnexpectedCharacter"* %40, i32 0, i32 2
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_61, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [19 x i8] }>* @alloc1899 to [0 x i8]*), i64 19)
  br label %bb19

bb19:                                             ; preds = %bb1
  store i32* %__self_0, i32** %_70, align 8
  %_67.0 = bitcast i32** %_70 to {}*
; call core::fmt::builders::DebugTuple::field
  %_65 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_61, {}* nonnull align 1 %_67.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.h to [3 x i64]*))
  br label %bb20

bb20:                                             ; preds = %bb19
  store i32* %__self_1, i32** %_76, align 8
  %_73.0 = bitcast i32** %_76 to {}*
; call core::fmt::builders::DebugTuple::field
  %_71 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_61, {}* nonnull align 1 %_73.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.h to [3 x i64]*))
  br label %bb21

bb21:                                             ; preds = %bb20
; call core::fmt::builders::DebugTuple::finish
  %41 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_61)
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %0, align 1
  br label %bb22

bb22:                                             ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13, %bb14, %bb15, %bb18, %bb21
  %43 = load i8, i8* %0, align 1, !range !3
  %44 = trunc i8 %43 to i1
  ret i1 %44

bb17:                                             ; preds = %bb16
  store i32* %__self_01, i32** %_56, align 8
  %_53.0 = bitcast i32** %_56 to {}*
; call core::fmt::builders::DebugTuple::field
  %_51 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_47, {}* nonnull align 1 %_53.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.h to [3 x i64]*))
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::fmt::builders::DebugTuple::finish
  %45 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_47)
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %0, align 1
  br label %bb22
}

; <time::TmFmt as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN48_$LT$time..TmFmt$u20$as$u20$core..fmt..Debug$GT$3fmt17h1d4e7f209fbd576aE"(%TmFmt* align 8 dereferenceable(32) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_25 = alloca %Fmt*, align 8
  %_17 = alloca %Tm**, align 8
  %_6 = alloca %"core::fmt::builders::DebugStruct", align 8
  %__self_0_0 = bitcast %TmFmt* %self to %Tm**
  %__self_0_1 = getelementptr inbounds %TmFmt, %TmFmt* %self, i32 0, i32 1
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1917 to [0 x i8]*), i64 5)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_6 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  store %Tm** %__self_0_0, %Tm*** %_17, align 8
  %_14.0 = bitcast %Tm*** %_17 to {}*
; call core::fmt::builders::DebugStruct::field
  %_10 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [2 x i8] }>* @alloc1918 to [0 x i8]*), i64 2, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.i to [3 x i64]*))
  br label %bb2

bb2:                                              ; preds = %bb1
  store %Fmt* %__self_0_1, %Fmt** %_25, align 8
  %_22.0 = bitcast %Fmt** %_25 to {}*
; call core::fmt::builders::DebugStruct::field
  %_18 = call align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1922 to [0 x i8]*), i64 6, {}* nonnull align 1 %_22.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.j to [3 x i64]*))
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i1 %4
}

; <time::Fmt as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN46_$LT$time..Fmt$u20$as$u20$core..fmt..Debug$GT$3fmt17hbf70c77a0c0ce57aE"(%Fmt* align 8 dereferenceable(24) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_17 = alloca { [0 x i8]*, i64 }*, align 8
  %_8 = alloca %"core::fmt::builders::DebugTuple", align 8
  %_3 = alloca i64*, align 8
  %0 = alloca i8, align 1
  %1 = bitcast i64** %_3 to %Fmt**
  store %Fmt* %self, %Fmt** %1, align 8
  %2 = bitcast i64** %_3 to %Fmt**
  %3 = load %Fmt*, %Fmt** %2, align 8, !nonnull !4
  %4 = bitcast %Fmt* %3 to i64*
  %_5 = load i64, i64* %4, align 8, !range !14
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb6
    i64 2, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i64** %_3 to %Fmt**
  %6 = load %Fmt*, %Fmt** %5, align 8, !nonnull !4
  %7 = bitcast %Fmt* %6 to %"Fmt::Str"*
  %__self_0 = getelementptr inbounds %"Fmt::Str", %"Fmt::Str"* %7, i32 0, i32 1
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_8, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1928 to [0 x i8]*), i64 3)
  br label %bb4

bb6:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %8 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1927 to [0 x i8]*), i64 7)
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %0, align 1
  br label %bb7

bb1:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %10 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc1926 to [0 x i8]*), i64 5)
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6, %bb1
  %12 = load i8, i8* %0, align 1, !range !3
  %13 = trunc i8 %12 to i1
  ret i1 %13

bb4:                                              ; preds = %bb3
  store { [0 x i8]*, i64 }* %__self_0, { [0 x i8]*, i64 }** %_17, align 8
  %_14.0 = bitcast { [0 x i8]*, i64 }** %_17 to {}*
; call core::fmt::builders::DebugTuple::field
  %_12 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_8, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.k to [3 x i64]*))
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::fmt::builders::DebugTuple::finish
  %14 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_8)
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %0, align 1
  br label %bb7
}

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17ha673a48f2cebcf85E(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hfcd4a63042ccbeccE(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; std::sys::unix::os::errno
; Function Attrs: nonlazybind uwtable
declare i32 @_ZN3std3sys4unix2os5errno17hef77becd6e359a38E() unnamed_addr #1

; core::panic::location::Location::caller
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(24) %"core::panic::location::Location"* @_ZN4core5panic8location8Location6caller17h66ab9d009774583dE(%"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #1

; std::panicking::rust_panic_with_hook
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN3std9panicking20rust_panic_with_hook17h7a6b21c56a75680aE({}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), i64* align 8 dereferenceable_or_null(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #10

; <char as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h791749a8d25a7b93E"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <str as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17hec7dec34a2bb4d4fE"([0 x i8]* nonnull align 1, i64, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h4fb653153270e40aE"([0 x i8]* nonnull align 1, i64, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::pad
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter3pad17hbc77db69b6df6cc2E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::Formatter::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter3new17h650d4999af189be9E(%"core::fmt::Formatter"* noalias nocapture sret(%"core::fmt::Formatter") dereferenceable(64), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17hc1ea778f34506390E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17hbbd3c142f0f88bf5E"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h9143b4968b3afd78E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hf96d82ed1b605fdbE"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h179dc58a507e34fdE"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for i64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i64$GT$3fmt17h921fb1f12e74cb77E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for i64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i64$GT$3fmt17h76e0cb4856e3f78cE"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for i64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i64$GT$3fmt17h5c41694b747c6f84E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::write
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt5write17h0200d27bf417ad61E({}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #1

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hac91d6d33ac66361E([0 x i8]* nonnull align 1, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #12

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #13

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #13

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #13

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #13

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #13

; core::str::slice_error_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core3str16slice_error_fail17ha499ccf9a8f75ce3E([0 x i8]* nonnull align 1, i64, i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h2aafc6203614405fE(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h716e7ed010a408dfE"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17hef35279af1b2dff0E"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h8bc989e1fc10c635E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #14

; <core::fmt::Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17ha6e04a2ac8dde238E"(%"core::fmt::Error"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17hddb26cddfa4f23d4E([0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #3

; core::panicking::assert_failed_inner
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN4core9panicking19assert_failed_inner17h90ea89642d218837E(i8, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #10

; core::str::pattern::StrSearcher::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str7pattern11StrSearcher3new17h95d68a0534dab867E(%"core::str::pattern::StrSearcher"* noalias nocapture sret(%"core::str::pattern::StrSearcher") dereferenceable(104), [0 x i8]* nonnull align 1, i64, [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; Function Attrs: nounwind nonlazybind uwtable
declare i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #15

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nounwind nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h2740986bd2451aa0E(i64, i64) unnamed_addr #16

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #15

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #15

; Function Attrs: nounwind nonlazybind uwtable
declare i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #15

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17ha72cd8fd7333b22dE() unnamed_addr #10

; Function Attrs: nonlazybind uwtable
declare i32 @memcmp(i8*, i8*, i64) unnamed_addr #1

; std::process::abort
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN3std7process5abort17h2f11b1d32ad057eaE() unnamed_addr #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #13

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #13

; <char as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17h011d980131b3c87bE"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::write_fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hfac9ec83d231c02bE(%"core::fmt::Formatter"* align 8 dereferenceable(64), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #1

; <core::fmt::Formatter as core::fmt::Write>::write_char
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h6e3d947244c54914E"(%"core::fmt::Formatter"* align 8 dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #13

; core::fmt::Formatter::write_str
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h86c5e5509957b5b0E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #13

; Function Attrs: nonlazybind uwtable
declare %"libc::unix::linux_like::tm"* @gmtime_r(i64*, %"libc::unix::linux_like::tm"*) unnamed_addr #1

; <std::io::error::Error as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h02c1e5177fc0d670E"(%"std::io::error::Error"* align 8 dereferenceable(16), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare %"libc::unix::linux_like::tm"* @localtime_r(i64*, %"libc::unix::linux_like::tm"*) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i64 @timegm(%"libc::unix::linux_like::tm"*) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i64 @mktime(%"libc::unix::linux_like::tm"*) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @clock_gettime(i32, { i64, i64 }*) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare void @tzset() unnamed_addr #1

; core::fmt::Formatter::debug_struct
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN4core3fmt9Formatter12debug_struct17h8ba0ce5dea51a569E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugStruct::field
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(16) %"core::fmt::builders::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h3019cb5b52103365E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16), [0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::builders::DebugStruct::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17h9ea53b656a17991bE(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16)) unnamed_addr #1

; core::fmt::Formatter::debug_tuple
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter11debug_tuple17h45ef1dec7bdb59f6E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24), %"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugTuple::field
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17h63e832e8a78ef886E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::builders::DebugTuple::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h5ed96ce2faa91349E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24)) unnamed_addr #1

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #14

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { inlinehint noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #6 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #7 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #8 = { argmemonly nofree nounwind willreturn }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #11 = { argmemonly nofree nounwind willreturn writeonly }
attributes #12 = { nofree nosync nounwind readnone willreturn }
attributes #13 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #14 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #15 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #16 = { cold noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #17 = { noreturn }
attributes #18 = { noinline }
attributes #19 = { nounwind }
attributes #20 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 7, !"PIC Level", i32 2}
!1 = !{i32 2, !"RtLibUseGOT", i32 1}
!2 = !{i32 0, i32 1114113}
!3 = !{i8 0, i8 2}
!4 = !{}
!5 = !{i8 -1, i8 3}
!6 = !{i8 -1, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hba39c3dd69b5b056E: argument 0"}
!9 = distinct !{!9, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hba39c3dd69b5b056E"}
!10 = !{i64 0, i64 2}
!11 = !{i64 1, i64 0}
!12 = !{i8 0, i8 4}
!13 = !{i32 0, i32 2}
!14 = !{i64 0, i64 3}
!15 = !{i32 0, i32 1114112}
!16 = !{i32 3314097}
!17 = !{i32 0, i32 16}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17he4fbeef76f364bf7E: %value.0"}
!20 = distinct !{!20, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17he4fbeef76f364bf7E"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN4core3mem6zeroed17ha2ea6d738b719affE: argument 0"}
!23 = distinct !{!23, !"_ZN4core3mem6zeroed17ha2ea6d738b719affE"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3e6b343bb460811cE: argument 0"}
!26 = distinct !{!26, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3e6b343bb460811cE"}
!27 = !{!28}
!28 = distinct !{!28, !26, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3e6b343bb460811cE: %self"}
!29 = !{!25, !22}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h1fcfe3be7c59a5b3E: argument 0"}
!32 = distinct !{!32, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h1fcfe3be7c59a5b3E"}
!33 = !{!34}
!34 = distinct !{!34, !32, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h1fcfe3be7c59a5b3E: %slot"}
!35 = !{!31, !34}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN4core3mem6zeroed17ha2ea6d738b719affE: argument 0"}
!38 = distinct !{!38, !"_ZN4core3mem6zeroed17ha2ea6d738b719affE"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3e6b343bb460811cE: argument 0"}
!41 = distinct !{!41, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3e6b343bb460811cE"}
!42 = !{!43}
!43 = distinct !{!43, !41, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3e6b343bb460811cE: %self"}
!44 = !{!40, !37}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h1fcfe3be7c59a5b3E: argument 0"}
!47 = distinct !{!47, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h1fcfe3be7c59a5b3E"}
!48 = !{!49}
!49 = distinct !{!49, !47, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h1fcfe3be7c59a5b3E: %slot"}
!50 = !{!46, !49}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN4core3mem6zeroed17ha2ea6d738b719affE: argument 0"}
!53 = distinct !{!53, !"_ZN4core3mem6zeroed17ha2ea6d738b719affE"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3e6b343bb460811cE: argument 0"}
!56 = distinct !{!56, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3e6b343bb460811cE"}
!57 = !{!58}
!58 = distinct !{!58, !56, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3e6b343bb460811cE: %self"}
!59 = !{!55, !52}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h1fcfe3be7c59a5b3E: argument 0"}
!62 = distinct !{!62, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h1fcfe3be7c59a5b3E"}
!63 = !{!64}
!64 = distinct !{!64, !62, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h1fcfe3be7c59a5b3E: %slot"}
!65 = !{!61, !64}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN4core3mem6zeroed17ha2ea6d738b719affE: argument 0"}
!68 = distinct !{!68, !"_ZN4core3mem6zeroed17ha2ea6d738b719affE"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3e6b343bb460811cE: argument 0"}
!71 = distinct !{!71, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3e6b343bb460811cE"}
!72 = !{!73}
!73 = distinct !{!73, !71, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3e6b343bb460811cE: %self"}
!74 = !{!70, !67}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h1fcfe3be7c59a5b3E: argument 0"}
!77 = distinct !{!77, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h1fcfe3be7c59a5b3E"}
!78 = !{!79}
!79 = distinct !{!79, !77, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h1fcfe3be7c59a5b3E: %slot"}
!80 = !{!76, !79}
!81 = !{i32 0, i32 15}
